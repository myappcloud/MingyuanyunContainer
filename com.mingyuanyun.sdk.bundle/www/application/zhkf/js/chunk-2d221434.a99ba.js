(window["webpackJsonp_module_entry_zhkf_"]=window["webpackJsonp_module_entry_zhkf_"]||[]).push([["chunk-2d221434"],{ca33:function(e,t,i){"use strict";i("5f54");var n=i("fd50"),o=(i("9a33"),i("6d57"),i("4c09")),a=(i("f0e6"),i("a14a")),r=i.n(a),c=i("e97a"),l=i("9430"),d=i("a324"),u=i("57d1"),_=i("642d"),s=i("a405"),p=i("a210"),m=i("81ad"),h=i("3e83"),f=i("1834"),b=["checkroom_problem_operate_log","checked_room_list","delivery_rejection_list","room_design_change_problem","delivery_room_list","opening_receive_room_list","review_room_list","room_satisfaction_value_list","review_images","send_back_images","problem_reason_list"],g=function e(t){var i,n=0;return t.forEach((function(t){for(var o in t)"sql"===o?n++:(i=t[o],"object"===Object(h["a"])(i)&&(n+=e([i])))})),n},y=function(e,t){var i;if("check_not_exists"in e&&e["check_not_exists"]&&e["check_not_exists"]["sql"])return i=e["check_not_exists"]["sql"],f["a"].queryOne(i).then((function(e){if(e)return console.error("buildDataByRule_checkNotExists: 未通过校验",i),n["a"].reject("收集数据异常, 未通过有效数据自检");t.notify()}))},v=function(e,t,i){var n,o;if("check_count"in e&&e["check_count"]&&e["check_count"]["sql"])return n=e["check_count"]["sql"],f["a"].query(n).then((function(e){o=e&&e[0]&&e[0].count,t.length!==o&&console.error({message:"buildDataByRule_checkCount: 收集数据异常, 未通过计数自检(已忽略)",remark:"check_count=".concat(o,",real_count=").concat(t.length,",check_count_sql=").concat(n)}),i.notify()}))},E=function(e,t,i){var n,o;if("sql"in e&&"des"in e&&e["sql"]&&e["des"])return n=e["sql"],o=e["column"],f["a"].query(n).then((function(n){return o&&(n=N(n,o)),t[e["des"]]=n,i.notify(),n}))},N=function(e,t){var i=[];return e&&e.length&&e.forEach((function(e){if(!(t in e)||!e[t])throw new TypeError("收集数据异常, 存在无效列值");i.push(e[t])})),i},I=function(e,t,i){var o,a=n["a"].when();return t=t||{},(o=y(e,i))&&(a=a.then((function(){return o}))),(o=E(e,t,i))&&(a=a.then((function(){return o})).then((function(t){return console.log("rule",e),console.log("rows",t),v(e,t,i)}))),a},D=function(e){var t=r.a.cloneDeep(e);return r.a.each(t,(function(e,i){""===e&&delete t[i]})),delete t.proj_id,delete t.batch_id,delete t.batch_room_id,delete t.building_id,delete t.room_id,t},w={buildDataByRules:function(e){var t,i=n["a"].defer(),o=n["a"].defer(),a={},r=n["a"].when(),c=0;return e&&e.length?(t=g(e),t?(e.forEach((function(e){r=r.then((function(){return I(e,a,o)}))})),r.then((function(){t!==c&&console.error("buildDataByRules: resolve but sqlCount!==sqlDone ".concat(t," != ").concat(c)),o.resolve(),i.resolve(a)})).catch((function(e){console.error("buildDataByRules: ",e),i.reject(e)})),o.promise.then(null,null,(function(e){c+=e||1,e>t&&(console.error("buildDataByRules: done > sqlCount ".concat(e," > ").concat(t)),e=t),i.notify({getDataTotal:t,getDataDone:c})})),i.promise):(console.error("buildDataByRules: 无sql"),n["a"].reject("无sql"))):(console.error("buildDataByRules: 无rule"),n["a"].reject("无sql"))},formatData:function(e){var t={},i={};return r.a.each(e,(function(n,o){r.a.isEmpty(n)?delete e[o]:b.indexOf(o)>-1?t[o]=n:(t[o]||(t[o]={},i=t[o]),r.a.each(n,(function(e){i[e.batch_id]||(i[e.batch_id]={proj_id:e.proj_id,building_id:e.building_id,rooms:{}}),i[e.batch_id].rooms[e.batch_room_id]||(i[e.batch_id].rooms[e.batch_room_id]={room_id:e.room_id,roomtype_diagram_id:e.roomtype_diagram_id,data:[]});var t=D(e);i[e.batch_id].rooms[e.batch_room_id].data.push(t)})))})),t}},R=w,U=(i("f548"),i("9dd9"),{UPLOAD_BUILDING_IMAGE:[{data_sql:"          select id,signature_image_localpath as path,id as batch_room_id           from batch_room           where batch_unit_id= :batchUnitId               and signature_image_localpath is not null               and signature_image_localpath <> ''               and (signature_url is null or signature_url='')               ",fill_back_map:{table:"batch_room",url_column:"signature_url"}},{data_sql:"                select id,review_signature_image_localpath as path,id as batch_room_id                 from batch_room                 where batch_unit_id= :batchUnitId                     and review_signature_image_localpath is not null                     and review_signature_image_localpath <> ''                     and (review_signature_url is null or review_signature_url='')                     ",fill_back_map:{table:"batch_room",url_column:"review_signature_url"}},{data_sql:"          select bri.id,bri.batch_room_id,bri.img_localpath path           from batch_room_images bri           inner join batch_room br on br.id=bri.batch_room_id           where bri.batch_unit_id= :batchUnitId           and img_localpath is not null           and img_localpath <> ''           and (img_url is null or img_url='')           ",fill_back_map:{table:"batch_room_images",url_column:"img_url"}},{data_sql:"          select pi.id,pi.problem_id,pi.img_localpath path           from problem_images pi           inner join checkroom_problem cp on pi.problem_id=cp.id           where pi.batch_unit_id= :batchUnitId {extCondition}               and img_localpath is not null               and img_localpath <> ''               and (img_url is null or img_url='')               ",fill_back_map:{table:"problem_images",url_column:"img_url"}},{data_sql:"          select id,material_localpath as path           from batch_room_material           where batch_unit_id= :batchUnitId               and material_localpath is not null               and material_localpath <> ''               and (material_url is null or material_url='')               ",fill_back_map:{table:"batch_room_material",url_column:"material_url"}}],BUILD_UPLOAD_BUILDING_DATA:[{check_not_exists:{sql:"                   select 1 'exists'                   from data_increment di                       left join batch_unit bu on di.batch_unit_id=bu.id                   where bu.id is null "}},{check_not_exists:{sql:"                   select 1 'exists'                   from data_increment di                   left join (                       select '问题' as type,'add' as operation union all                       select '问题','cancelled' union all                       select '问题','passed' union all                       select '问题','sent_back' union all                       select '问题','abnormal_closed' union all                       select '问题','set_contractor' union all                       select '问题','repair_passed' union all                       select '问题','repair_sent_back' union all                       select '素材','add_material' union all                       select '素材','delete_material' union all                       select '素材','add_material_feedback' union all                       select '房间','shooting_finished' union all                       select '房间','check' union all                       select '房间','delivery' union all                       select '房间','process_after_delivery' union all                       select '房间','reject_then_receive' union all                       select '房间','delivery_after_process' union all                       select '房间','reviewed' union all                       select '房间' as type,'add_review_image' as operation union all                       select '房间','receive'                   ) enumAll on di.type = enumAll.type                       and di.operation = enumAll.operation                   where di.batch_unit_id = :batchUnitId                       and enumAll.type is null "}},{des:"added_problem_list",sql:"                SELECT                   cp.id,                   cp.batch_room_id,                   cp.batch_id,                   cp.proj_id,                   cp.building_id,                   cp.room_id,                   cp.position_id,                   cp.item_id,                   cp.desc_id,                   cp.remark,                   cp.roomtype_diagram_id,                   cp.contractor_id,                   cp.coordinate,                   cp.responsible_company_id,                   cp.status,                   cp.regist_date,                   cp.emergency_degree,                   cp.is_passed_when_add,                   count(pi.id) as img_count,                   group_concat(pi.img_url,';') image_urls               FROM checkroom_problem cp                   INNER JOIN data_increment di ON cp.id = di.relation_id                   LEFT JOIN problem_images pi on cp.id=pi.problem_id               WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}                   AND di.type = '问题'                   AND di.operation ='add'               group by cp.id               order by cp.regist_date",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}                       AND di.type = '问题'                       AND di.operation ='add'"}},{des:"problem_reason_list",sql:"           SELECT DISTINCT               pr.id,               pr.checkroom_problem_id,               pr.reason_id           FROM problem_reason pr               INNER JOIN data_increment di on pr.checkroom_problem_id = di.relation_id           WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}               AND di.type = '问题'               AND di.operation = 'add'"},{des:"room_design_change_problem",sql:"           SELECT DISTINCT               rdcp.id,               rdcp.design_change_id,               rdcp.checkroom_problem_id           FROM room_design_change_problem rdcp               INNER JOIN data_increment di on rdcp.checkroom_problem_id = di.relation_id           WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}               AND di.type = '问题'               AND di.operation = 'add'"},{des:"cancelled_problem_list",sql:"                SELECT                   cp.id,                   cp.batch_room_id batch_room_id,                   cp.batch_id,                   cp.proj_id,                   cp.building_id,                   cp.room_id,                   cp.position_id,                   cp.item_id,                   cp.desc_id,                   cp.remark,                   cp.roomtype_diagram_id,                   cp.contractor_id,                   cp.coordinate,                   cp.responsible_company_id,                   cp.status,                   cp.regist_date,                   cp.invalid_date,                   cp.emergency_degree,                   group_concat(pi.img_url,';') image_urls               FROM checkroom_problem cp                   INNER JOIN data_increment di ON cp.id = di.relation_id                   LEFT JOIN problem_images pi on cp.id=pi.problem_id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation ='cancelled'               group by cp.id",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '问题'                       AND di.operation ='cancelled'"}},{des:"passed_problem_list",sql:"               SELECT                   cp.id,                   cp.review_date,                   cp.batch_room_id batch_room_id               FROM data_increment di                   INNER JOIN checkroom_problem cp ON di.relation_id = cp.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation in('passed','repair_passed')",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '问题'                       AND di.operation in('passed','repair_passed')"}},{des:"set_contractor_problem_list",sql:"               SELECT                   cp.id,                   cp.contractor_id,                   cp.responsible_company_id,                   cp.batch_room_id batch_room_id               FROM data_increment di                   INNER JOIN checkroom_problem cp ON di.relation_id = cp.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation ='set_contractor'",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '问题'                       AND di.operation ='set_contractor'"}},{des:"review_images",sql:"               SELECT DISTINCT                   pi.id,                   pi.problem_id,                   pi.business_id,                   pi.type,                    pi.img_url,                   pi.sort               FROM data_increment di                   INNER JOIN problem_images pi ON di.relation_id = pi.problem_id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation in('passed','repair_passed')                   AND ifnull(pi.img_url, '') <> ''                  AND pi.type = 'review'"},{des:"review_room_images",sql:"               SELECT DISTINCT                   bri.id,                   bri.batch_room_id,                   bri.type,                    bri.img_url,                   bri.sort               FROM data_increment di                   INNER JOIN batch_room_images bri ON di.relation_id = bri.batch_room_id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '房间'                   AND di.operation in('add_review_image')                   AND ifnull(bri.img_url, '') <> ''                  AND bri.type = 'review'"},{des:"sent_back_problem_list",sql:"               SELECT                   cp.id,                   cp.sent_back_date,                   cp.batch_room_id batch_room_id               FROM data_increment di                   INNER JOIN checkroom_problem cp ON di.relation_id = cp.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation in('sent_back','repair_sent_back')",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '问题'                       AND di.operation in('sent_back','repair_sent_back')"}},{des:"send_back_images",sql:"               SELECT DISTINCT                   pi.id,                   pi.problem_id,                   pi.business_id,                   pi.type,                    pi.img_url,                   pi.sort               FROM data_increment di                   INNER JOIN problem_images pi ON di.relation_id = pi.problem_id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation in('sent_back','repair_sent_back')                   AND ifnull(pi.img_url, '') <> ''                  AND pi.type = 'yf_send_back'"},{des:"abnormal_closed_problem_list",sql:"               SELECT                   cp.id,                   cp.close_date as abnormal_closed_date,                   cp.batch_room_id batch_room_id               FROM data_increment di                   INNER JOIN checkroom_problem cp ON di.relation_id = cp.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '问题'                   AND di.operation ='abnormal_closed'",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '问题'                       AND di.operation ='abnormal_closed'"}},{des:"checkroom_problem_operate_log",sql:"               SELECT DISTINCT               log.id,              log.checkroom_problem_id,              log.operate_type,              log.operate_reason,              log.operate_date               FROM checkroom_problem_operate_log log                   INNER JOIN (                       SELECT cplog.checkroom_problem_id,cplog.operate_type,MAX(cplog.operate_date) operate_date                       FROM checkroom_problem_operate_log cplog                       GROUP BY cplog.checkroom_problem_id,cplog.operate_type                   ) logType ON log.checkroom_problem_id=logType.checkroom_problem_id                       AND log.operate_type=logType.operate_type                       AND log.operate_date=logType.operate_date                   INNER JOIN data_increment di ON log.checkroom_problem_id = di.relation_id               WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}               AND di.type='问题' AND log.source='app'"},{des:"checked_room_list",sql:"                SELECT DISTINCT                       br.id,                       br.is_checked,                       br.check_date,                       br.check_status,                       br.check_engineer               FROM batch_room br               INNER JOIN data_increment di ON di.relation_id = br.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '房间'                   AND di.operation ='check' ",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '房间'                       AND di.operation ='check'"}},{des:"delivery_room_list",sql:"               SELECT DISTINCT                   br.id,                   br.room_id,                   br.delivery_status,                   br.delivery_situation,                   br.delivery_date,                   br.first_delivery_date,                   br.first_delivery_situation,                   br.customer_phone,                   br.electric_meter_degree,                   br.water_meter_degree,                   br.gas_meter_degree,                   br.heating_pressure_degree,                   br.key_saved_count,                   br.signature_url,                   br.review_signature_url,                   br.satisfaction_level,                   br.satisfaction_remark               FROM batch_room br               INNER JOIN data_increment di on di.relation_id = br.id               WHERE br.batch_unit_id = :batchUnitId {extCondition}               AND di.type = '房间'               AND di.operation IN ('delivery','process_after_delivery','delivery_after_process','reject_then_receive')               ",check_count:{sql:"                   SELECT COUNT(DISTINCT relation_id) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '房间'                       AND di.operation IN ('delivery','process_after_delivery','delivery_after_process','reject_then_receive')"}},{des:"review_room_list",sql:"               SELECT                    br.id,                   br.delivery_status,                   br.room_id,                   br.customer_phone,                   br.review_remark,                   br.is_key_return,                   br.review_date,                   br.review_signature_url               FROM data_increment di                   INNER JOIN batch_room br ON di.relation_id = br.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '房间'                   AND di.operation = 'reviewed'",check_count:{sql:"                   SELECT COUNT(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '房间'                       AND di.operation = 'reviewed'"}},{des:"opening_receive_room_list",sql:"               SELECT                   di.batch_room_id,                   br.customer_phone,                   br.signature_url,                   br.review_signature_url,                   br.opening_receive_date,                   br.opening_status,                   br.satisfaction_remark               FROM data_increment di                   INNER JOIN batch_room br ON di.relation_id = br.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '房间'                   AND di.operation ='receive'",check_count:{sql:"                   SELECT count(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '房间'                       AND di.operation ='receive'"}},{des:"room_satisfaction_value_list",sql:"               SELECT                   di.id,                   di.dimension_id,                   di.value,                   di.batch_id,                   di.batch_unit_id,                   di.batch_room_id               FROM room_satisfaction_value di               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.source = 'app'                   AND EXISTS(                       SELECT 1                       FROM data_increment d                       WHERE d.batch_unit_id = :batchUnitId                           AND d.type = '房间'                           AND d.operation IN ('delivery','process_after_delivery','receive','reject_then_receive')                           AND d.relation_id = di.batch_room_id                   )"},{des:"room_delivery_item_list",sql:"               SELECT                   rdi.id,                   rdi.value               FROM batch_room_delivery_item rdi               INNER JOIN data_increment di on di.relation_id = rdi.batch_room_id               WHERE di.batch_unit_id = :batchUnitId {extCondition}               AND di.type = '房间'               AND di.operation IN ('delivery','process_after_delivery','receive','reject_then_receive') "},{des:"delivery_rejection_list",sql:"               SELECT                   di.id,                   di.batch_room_id,                   di.reason,                   di.remark,                   di.created_on               FROM batch_room_delivery_rejection di               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.is_local = 1                   AND EXISTS(                       SELECT 1                       FROM data_increment d                       WHERE d.batch_unit_id = :batchUnitId                           AND d.type = '房间'                           AND d.operation = 'delivery_after_process'                           AND d.relation_id = di.batch_room_id                   )",check_count:{sql:"                   SELECT COUNT(DISTINCT batch_room_id) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '房间'                       AND di.operation = 'delivery_after_process'"}},{des:"delete_customer_tag_list",sql:"              SELECT                   ct.tag_id,                   ct.customer_id,                   di.batch_room_id               FROM customer_tag ct               INNER JOIN customer_room cr on cr.customer_id = ct.customer_id               INNER JOIN data_increment di on di.relation_id = cr.room_id AND di.type = 'customer_tag'               WHERE ct.source = 'app'                   AND ct.operation = 'delete'                   AND di.batch_unit_id = :batchUnitId {extCondition} "},{des:"add_customer_tag_list",sql:"              SELECT                   ct.tag_id,                   ct.customer_id,                   di.batch_room_id               FROM customer_tag ct               INNER JOIN customer_room cr on cr.customer_id = ct.customer_id               INNER JOIN data_increment di on di.relation_id = cr.room_id AND di.type = 'customer_tag'               WHERE ct.source = 'app'                   AND ct.operation = 'add'                   AND di.batch_unit_id = :batchUnitId {extCondition} "},{des:"customer_assess_list",sql:"              SELECT                   ca.customer_id,                   ca.remark,                   di.batch_room_id               FROM customer_assess ca               INNER JOIN customer_room cr on cr.customer_id = ca.customer_id               INNER JOIN data_increment di on di.relation_id = cr.room_id AND di.type = 'customer_assess'               WHERE ca.source = 'app'                   AND di.batch_unit_id = :batchUnitId {extCondition} "},{des:"shooting_finished_room_list",sql:"               SELECT                    br.id as batch_room_id,                   br.opening_status,                   br.opening_receive_date,                   br.check_engineer,                   br.check_date               FROM data_increment di                   INNER JOIN batch_room br ON di.relation_id = br.id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '房间'                   AND di.operation = 'shooting_finished'",check_count:{sql:"                   SELECT COUNT(1) as count                   FROM data_increment di                   WHERE di.batch_unit_id = :batchUnitId {extCondition}                       AND di.type = '房间'                       AND di.operation = 'shooting_finished'"}},{des:"added_material_list",sql:"                SELECT                   cp.id,                   cp.batch_room_id,                   cp.position_id,                   cp.item_id,                   cp.material_type,                   cp.material_url,                   cp.sort,                   cp.status,                   cp.shooting_user_id,                   cp.shooting_date               FROM batch_room_material cp                   INNER JOIN data_increment di ON cp.id = di.relation_id               WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}                   AND di.type = '素材'                   AND di.operation ='add_material'               order by cp.shooting_date",check_count:{sql:"               SELECT count(1) as count               FROM data_increment di               WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}                   AND di.type = '素材'                   AND di.operation ='add_material'"}},{des:"deleted_material_list",sql:"          SELECT               di.relation_id as material_id           FROM data_increment di           WHERE di.type = '素材'               AND di.operation = 'delete_material'               AND di.batch_unit_id = :batchUnitId {extCondition} "},{des:"replied_material_feedback_list",sql:"                SELECT                   mf.id,                   mf.material_id,                   mf.batch_room_id,                   mf.ref_business_id,                   mf.status,                   mf.replied_by,                   mf.reply_date,                   mf.reply_reason,                   mf.reply_remark               FROM batch_room_material_feedback as mf                   INNER JOIN data_increment as di ON mf.id = di.relation_id               WHERE di.batch_unit_id = :batchUnitId {extCondition}                   AND di.type = '素材'                   AND di.operation ='add_material_feedback'               order by mf.reply_date",check_count:{sql:"               SELECT count(1) as count               FROM data_increment di               WHERE di.batch_unit_id = :batchUnitId {extCondition} {ignoreCondition}                   AND di.type = '素材'                   AND di.operation ='add_material_feedback'"}}]}),O={},A=function(e){return e in O?O[e]:O[e]=new RegExp(e,"g")},k=function(e,t){var i,n;for(var o in t)n=t[o],i=A(o),e=e.replace(i,n);return e},T=function e(t,i,n,o){var a;for(var r in t)a=t[r],i.indexOf(r)>=0&&"string"===typeof a?t[r]=k(a,n):o&&"object"===Object(h["a"])(a)&&e(t[r],i,n,o)},C={getUploadBuildingImageRule:function(e,t){var i,n=r.a.cloneDeep(U.UPLOAD_BUILDING_IMAGE);if(!e||"string"!==typeof e)throw new TypeError("batchUnitId 参数类型错误");if(!n||!r.a.isArray(n))throw new TypeError("rules 参数类型错误");i="'"+e+"'";var o=t?" AND cp.batch_room_id='"+t+"' ":"";return n.forEach((function(e){T(e,["data_sql"],{":batchUnitId":i,"{extCondition}":o})})),n},getBuildUploadBuildingDataRule:function(e,t){var i,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],o=r.a.cloneDeep(U.BUILD_UPLOAD_BUILDING_DATA);if(!e||"string"!==typeof e)throw new TypeError("batchUnitId 参数类型错误");if(!o||!r.a.isArray(o))throw new TypeError("rules 参数类型错误");i="'"+e+"'";var a=t?" AND di.batch_room_id='"+t+"' ":"",c="";return n.length&&(c=" AND di.relation_id not in ('"+n.join("','")+"')"),o.forEach((function(e){T(e,["sql"],{":batchUnitId":i,"{extCondition}":a,"{ignoreCondition}":c},!0)})),o}},j=C,S=i("653b"),x=i("6e0d"),q=i("a740"),L=i("0e79"),B=i("a593"),F=i("c6e3"),M=null,W=!1,H="[services]/upload-data-service.js：",J=function(e){return Object(x["a"])().then((function(t){var i=Object(q["j"])();return t.objectDir="".concat(t.parentDir,"/").concat(i.tenant_code,"/").concat(e),delete t.parentDir,t}))},P=function(e,t){var i=n["a"].defer(),o=n["a"].when();return l["a"].getUnloadRoomsByUnitId(e).then((function(n){var a=n.length,c=1;i.notify({uploadRoomStart:!0});var l=!1,d=!1;r.a.each(n,(function(u,_){o=o.then((function(){var o={roomTotal:a,roomDone:c};return _===n.length-1&&(d=!0),Y(e,t,u["id"],d).then((function(){i.notify({roomTotal:a,roomDone:c}),c++}),(function(e){return e&&"cancel_upload"==e.errcode?(l=!0,!1):i.reject(e)}),(function(e){o=r.a.extend(o,e),i.notify(o)}))})).finally((function(){if(l)return i.reject({errcode:"cancel_upload",msg:"取消上传"})}))})),o.then((function(){i.resolve("success")}))})),i.promise},$=function(e,t){var i=j.getUploadBuildingImageRule(e,t);return c["a"].wrapPromiseWithAutoReLogin((function(){return J(e).then((function(t){return console.log("oss config",t),m["a"].uploadImageByBuilding(t,e,i)}))}))},G=function(e,t,i){return d["a"].getProblemIdWithoutImageUrl(e,t).then((function(a){return a=a||[],F["a"].getReviewImgIdWithoutImageUrl(e,t).then((function(r){return r=r||[],u["a"].getMaterialIdWithoutImageUrl().then((function(c){c=c||[],a=a.concat(r).concat(c);var l=j.getBuildUploadBuildingDataRule(e,t,a);return console.log("ignoreIds",a),console.log("ruleObject",l),i.push.apply(i,Object(o["a"])(a)),i.length>0&&window.$log("业务埋点",{title:"批次楼栋单元数据部分图片上传失败",batchUnitId:e,batchRoomId:t,ignoreRelationId:i}),R.buildDataByRules(l).then((function(e){var t=[],i=0;if(e.added_problem_list.length>0&&e.added_problem_list.forEach((function(e){var n=e.image_urls?e.image_urls.split(";"):[],o=e.img_count-n.length;o>0&&(i+=o,t.push(e))})),t.length){var o={message:"您本次上传有"+i+"张图片上传时出现问题，确定继续上传吗？放弃后可稍后重试",confirmButtonText:"确定",cancelButtonText:"放弃"};return B["default"].prototype.$dialog.confirm(o).then((function(){return window.$log("用户点击",{click:"确定",options:o}),n["a"].resolve(e)})).catch((function(){return window.$log("用户点击",{click:"放弃",options:o}),n["a"].reject({errcode:"cancel_upload",msg:"取消上传"})}))}return n["a"].resolve(e)})).then((function(e){return W?(e=R.formatData(e),n["a"].resolve(e)):n["a"].resolve(e)}))}))}))}))},X=function(e,t,i){return c["a"].wrapPromiseWithAutoReLogin((function(){return Object(L["d"])(e,t,i)}))},z=function(e,t){return Object(L["c"])(e,t).then((function(i){return S["a"].uploadCheckRoomData(e,t).then((function(){return n["a"].resolve(i)}))}))},K=function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];return f["a"].transaction((function(o){s["a"].updateToNotLocalByBatchUnitId(e,t,o),l["a"].deleteByBatchUnitId(e,t,o,n),i&&p["a"].deleteByUnitId(e,t,o)})).then((function(){l["a"].existsUploadAllData().then((function(e){e&&e.length>0?window.uploadStatus("waitUpload"):window.uploadStatus("uploaded")}))}))},Y=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];console.log(H,"0. start upload batch room...",["batchUnitId=".concat(e),"batchRoomId=".concat(i)]);var a=n["a"].defer(),c=[],l=[];return console.log(H,"1. 开始上传图片"),$(e,i).then((function(){return console.log(H,"2. 处理本地图片丢失数据"),l.push("finish upload image"),Q(e,o).catch((function(e){return n["a"].reject(e)}))})).then((function(){return console.log(H,"3. 图片处理结束，开始获取要上传的数据"),i||a.notify({getDataStart:!0}),G(e,i,c)})).then((function(e){return console.log(H,"4. 获取待上传数据结束",e),i||a.notify({uploadDataStart:!0}),r.a.isEmpty(e)?(console.log("上传数据无效，数据为空",e),B["default"].prototype.$toast("图片上传失败，请检查网络后重试"),n["a"].reject({errcode:"cancel_upload",msg:"上传数据无效，数据为空"})):n["a"].resolve(e)})).then((function(i){return l.push("finish get data"),console.log(H,"5. 开始检查待传数据是否合法"),V(i,e,t)})).then((function(i){return console.log(H,"6. 开始上传数据",["batchType=".concat(t),i]),l.push("finish remove invalid data"),"simulate"!=t?z(e,i):X(e,i,t)})).then((function(){console.log(H,"7. 数据上传成功，开始清除本地增量表","batchUnitId=".concat(e)),l.push("finish upload data"),i||a.notify({deleteDataStart:!0});var n=K(e,i,"simulate"!=t,c);return n})).then((function(){console.log(H,"8. 上传结束"),l.push("finish clear data_increment"),a.resolve()}),null,(function(e){console.log("======== upload notify ==========",e),a.notify(e)})).catch((function(e){console.error("upload data error：",e),window.$log("[S]/上传楼栋数据<300时error",{step:l,error:e}),a.reject(e)})),a.promise},Q=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=m["a"].getCacheLoseImageByUnitid()[e];if(console.log("您本次上传有图片丢失",i),i&&i.length&&t){var o={message:"您本次上传有"+i.length+"张图片丢失，确定继续上传吗？",confirmButtonText:"确定",cancelButtonText:"放弃"};return B["default"].prototype.$dialog.confirm(o).then((function(){return window.$log("用户点击",{click:"确定",options:o}),m["a"].getCacheLoseImageByUnitid()[e]=[],_["a"].getLoseImage(e).then((function(t){return Object(L["e"])(t).then((function(t){console.log("上传丢失图片请求结果",t),_["a"].deleteLoseImage(e),i.forEach((function(e){d["a"].deleteProblemImage(e),u["a"].deleteMaterialImage(e)}))})).catch((function(e){console.log("上传丢失图片失败",e)}))}))}),(function(){return window.$log("用户点击",{click:"放弃",options:o}),n["a"].reject({errcode:"cancel_upload",msg:"取消上传"})}))}return n["a"].resolve()},V=function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if(e){var o=[];e.checked_room_list&&e.checked_room_list.length>0&&(e.checked_room_list=e.checked_room_list.filter((function(e){return 0!==e.is_checked&&null!=e.check_date&&""!==e.check_engineer||(o.checked_room_list||(o.checked_room_list=[]),o.checked_room_list.push(e),!1)}))),o.length>0&&(console.warn(H,"发现待上传数据里有异常数据，已过滤",o),window.$log("[S]/上传楼栋数据-发现异常数据",{batchUnitId:t,batchType:i,invalidDataList:o}))}return n["a"].resolve(e)},Z={uploadBatchUnit:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("simulate"===i)return Z.uploadSimulateBatchUnit(e);if(M)return console.error("已存在上传队列"),M;var o=n["a"].defer();return W=!1,M=Y(e,i,t).then((function(){o.notify("success")}),(function(e){o.reject(e)}),(function(e){console.log(e),o.notify(e)})).catch((function(e){window.$log("[S]/上传楼栋数据-失败",e),o.reject(e)})).finally((function(){M=null,o.resolve()})),o.promise},uploadSimulateBatchUnit:function(e){if(M)return console.error("已存在上传队列"),M;var t="simulate";W=!0,console.log("======== start upload batch unit ==========",e),M=l["a"].getUnloadCountByUnitId(e);var i=n["a"].defer();return M.then((function(i){return i=i.count||0,i<=300?Y(e,t):P(e,t)})).then((function(){i.notify("success")}),(function(e){i.reject(e)}),(function(e){console.log(e),i.notify(e)})).catch((function(e){window.$log("[S]/上传楼栋数据-失败",{batchType:t,error:e}),i.reject(e)})).finally((function(){console.log("uploadSimulateBatchUnit finally"),M=null,i.resolve()})),i.promise}},ee=Z,te=i("9f55"),ie=i("efed"),ne=i("c2c1"),oe="",ae=function(e){e=r.a.filter(e,(function(e){if(e)return e}));var t=[],i=null;return r.a.each(e,(function(e){i=ne["a"].checkFileIsExists(e).then((function(e){if(!e)return n["a"].reject("数据文件不存在")})),t.push(i)})),n["a"].all(t).then((function(){return Object(n["a"])(ne["a"].writeData(e)).finally((function(){return re(e)}))})).catch((function(e){return n["a"].reject(e)}))},re=function(e){r.a.each(e,(function(e){return ne["a"].deleteFile(e)}))},ce={createDataFile:function(e){if(!e||!e.length)return n["a"].resolve("");window["__debug_json_file__"]&&console.table(e),console.log("查看 file 内容开关：__debug_json_file__"),r.a.isArray(e)&&(e=JSON.stringify({result:e})),oe||(oe=ie["a"].getOccasionalFilePath());var t="".concat(oe,"data_").concat((new Date).getTime()).concat(parseInt(100*Math.random()),".json");return console.log("create file : "+t),ne["a"].createFile(t,e).then((function(){return t}))},updateData:function(e){return r.a.isEmpty(e)?n["a"].resolve():ae(e)}},le=ce,de=i("ab3e"),ue=i("2934"),_e={getProblemByPage:function(e,t,i,o){return Object(ue["b"])().then((function(a){return Object(de["a"])({url:"appcheckroom/download/get-problem-by-page?batch_unit_id="+e+"&t="+(new Date).getTime(),method:"post",data:{batchUnitId:e,pageIndex:i,timestamp:t,isLast:o}}).then((function(e){return e&&e.errmsg?3002==e.errcode?n["a"].reject(e):n["a"].reject(e.errmsg):e}))}))},getMetarialByPage:function(e,t,i,o){return Object(ue["b"])().then((function(a){return Object(de["a"])({url:"appcheckroom/download/get-material-by-page?batch_unit_id="+e+"&t="+(new Date).getTime(),method:"post",data:{batchUnitId:e,pageIndex:i,timestamp:t,isLast:o}}).then((function(e){return e&&e.errmsg?3002==e.errcode?n["a"].reject(e):n["a"].reject(e.errmsg):e}))}))},getConstructionRange:function(e,t,i){return Object(ue["b"])().then((function(o){return Object(de["a"])({url:"appcheckroom/download/get-construction-range-list?t="+(new Date).getTime(),method:"post",data:{buildingId:e,pageIndex:i,timestamp:t}}).then((function(e){return e&&e.errmsg?n["a"].reject(e.errmsg):e}))}))},getRooms:function(e){return Object(ue["b"])().then((function(t){return Object(de["a"])({url:"appcheckroom/download/get-batch-room-list?t="+(new Date).getTime(),method:"post",data:{batchUnitId:e,app_version:t.app_version,platform:t.platform}}).then((function(e){return e&&e.errmsg?3002==e.errcode?n["a"].reject(e):n["a"].reject(e.errmsg):e}))}))}},se=_e,pe="[services]/paging-download-service.js：",me=200,he=null,fe={},be=[],ge={},ye="",ve="",Ee="",Ne="",Ie="",De=[],we=null;ge={problem:{fun:se.getProblemByPage},material:{fun:se.getMetarialByPage},range:{fun:se.getConstructionRange},room:{fun:se.getRooms}};var Re=function(){he=null,ye="",ve="",Ee="",Ne="",Ie="",De=[],we=null,be=[]},Ue=function(e){if("room"==Ie)return n["a"].resolve();if(e=e||"",e>ye){var t=Ne?te["a"].update:te["a"].insert;return ye=e,t(Ee,Ie,e).then((function(e){return!Ne&&e&&(Ne=e),n["a"].resolve()}))}return n["a"].resolve()},Oe=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!we&&Ie)we=ge[Ie].fun;else if(!we)return n["a"].reject("无法获取下载方法");console.log(pe,"=== _downloadData start ===","[batchUnitId, timestamp]",be);var i=r.a.cloneDeep(be);return!isNaN(e)&&i.push(e),i.push(t),we.apply(se,i).then((function(e){return e&&0!==e.length||(window.$log("[S]/下载相关的分页数据为空",{type:Ie,arguments:i,argumentKeys:"[batchUnitId, timestamp]",result:e}),console.error(pe,"_downloadData result empty",e)),n["a"].resolve(e)})).catch((function(e){return console.error(pe,"_downloadData err",e),window.$log("[S]/下载相关的分页数据失败",{type:Ie,arguments:i,argumentKeys:"[batchUnitId, timestamp]",err:e}),n["a"].reject(e)}))},Ae=function(e){var t=r.a.cloneDeep(De);return De=[],le.updateData(t).then((function(){return Ue(e)}))},ke=function(e){return le.createDataFile(e).then((function(e){e&&De.push(e)}))},Te=function(e){if(!e)return console.log(pe,"_currType=".concat(Ie)),ge[Ie]?(we=ge[Ie].fun,Oe(0).then((function(e){return ve=e.firstPageDownloadTime||"",ke(e.result).then((function(){return Ae(e.timestamp).then((function(){return{total:e.total,totalPage:e.totalPage}}))}))}))):n["a"].reject("未找到优先的下载方法");var t=function(){for(var t=n["a"].defer(),i=n["a"].when(),o="",a=1;a<e;a++)(function(a){i=i.then((function(){var i=0;return e-a==1&&(i=1),Oe(a,i).then((function(e){if(!e)return n["a"].reject("下载失败");t.notify(me),o=e.timestamp;var r=ke(e.result);return 1===i?r:a%5===0?r.then((function(){return Ae(o)})):void 0}))}))})(a);return i=i.then((function(){return console.log(pe,"=== download data success ===  _currType=".concat(Ie)),Ae(o).then((function(){t.resolve()}))})).catch((function(e){t.reject(e)})),{v:t.promise}}();return"object"===Object(h["a"])(t)?t.v:void 0},Ce=function(e){return Ee=e[0],Ie=e[1],be.push(Ee),te["a"].getByCondition(Ee,Ie).then((function(e){return console.log(pe,"get local timestamp",[e,"_currType=".concat(Ie)]),e?(Ne=e.id,ye=e.download_time,be.push(e.download_time)):be.push(""),n["a"].resolve()}))};fe.download=function(){if(null!==he)return n["a"].reject("存在下载队列");var e=n["a"].defer();return he=Object(n["a"])(Ce(arguments)).then((function(){return Te().then((function(t){var i=0,n=parseInt(t.total)||0;if(t.totalPage>1)return i+=me,Te(t.totalPage).then(null,null,(function(t){i+=me;var o=i>n?n:i;e.notify({curr:o,total:n})}));e.notify({curr:i||n,total:n})})).then((function(){if(ve)return Ue(ve).then((function(){console.log(pe,"=== paging download updateTimestamp finish ===",["_requestTime=".concat(ve),"_currType=".concat(Ie)]),e.resolve()}));e.resolve()})).catch((function(t){console.error(pe,"paging download error",t,Ie),e.reject(t)})),e.promise})).finally((function(){console.log(pe,"=== paging download finish ===",["_currType=".concat(Ie)]),Re()}))},fe.downloadOnePage=function(e,t){var i=n["a"].defer();return console.log(pe,"=== downloadOnePage ===",["businessId=".concat(e),"type=".concat(t)]),Ce(arguments).then((function(){Object(n["a"])(Oe()).then((function(e){if(!e)return n["a"].reject("下载失败");i.notify(me);var t=e.timestamp;return ke(e.result).then((function(){return t}))})).then((function(e){return Ae(e).then((function(){i.resolve()}))})).catch((function(e){console.error("error",e),i.reject(e)})).finally((function(){Re()}))})),i.promise};var je,Se,xe=fe,qe=(i("e44b"),i("0938")),Le=i("8ae6"),Be=i("265f"),Fe="@180w_180h_1e",Me={},We=[],He=function(){var e=Be["a"].getImageDownloadSetting(),t=[" 1=0"];if(e.notRepair.beforeRepair&&t.push(' (cp.status in("待派单","待指派", "待整改") and pi.type in("rectify_before","cjs_send_back","yf_send_back"))'),e.hasRepaired.beforeRepair||e.hasRepaired.afterRepair){var i=e.hasRepaired.beforeRepair?["rectify_before","cjs_send_back","yf_send_back"]:[];e.hasRepaired.afterRepair&&i.push("rectify_after"),t.push(' (cp.status = "已整改" and pi.type in("'+i.join('","')+'"))')}if(e.hasPassed.beforeRepair||e.hasPassed.afterRepair||e.hasPassed.reInspect){var n=e.hasPassed.beforeRepair?["rectify_before","cjs_send_back","yf_send_back"]:[];e.hasPassed.afterRepair&&n.push("rectify_after"),e.hasPassed.reInspect&&n.push("review"),t.push(' (cp.status = "已通过" and pi.type in("'+n.join('","')+'"))')}return" and ("+t.join(" or ")+")"},Je=function(e){var t={problem_images:'select pi.id, pi.img_url as url, cp.batch_room_id as room_id, cp.batch_unit_id as unit_id from problem_images pi left join checkroom_problem cp on cp.id = pi.problem_id and ifnull(cp.batch_unit_id, "") = "'+e+'" where ifnull(pi.img_url, "") != "" and ifnull(pi.img_localpath, "") = "" '+He(),batch_room_material:'select id, material_url as url from batch_room_material where ifnull(material_url, "") != "" and ifnull(material_localpath, "") = "" and ifnull(batch_unit_id, "") = "'+e+'" ',room_type_diagram:'select rtd.id, rtd.url, cp.batch_room_id as room_id, cp.batch_unit_id as unit_id from room_type_diagram rtd left join checkroom_problem cp on cp.roomtype_diagram_id = rtd.id and ifnull(cp.batch_unit_id, "") = "'+e+'" where ifnull(rtd.url, "") != "" and ifnull(rtd.local_path, "") = ""',batch_room:'select id, signature_url as url from batch_room where ifnull(signature_url, "") != "" and ifnull(signature_image_localpath, "") = "" and ifnull(batch_unit_id, "") = "'+e+'" ',batch_room_images:'select bri.id, bri.img_url as url, bri.batch_room_id as room_id, br.batch_unit_id as unit_id from batch_room_images as bri left join batch_room as br on br.id = bri.batch_room_id where ifnull(bri.img_url, "") != "" and ifnull(bri.img_localpath, "") = "" and br.batch_unit_id = "'+e+'" ',batch_room_review:'select id, review_signature_url as url from batch_room where ifnull(review_signature_url, "") != "" and ifnull(review_signature_image_localpath, "") = "" and ifnull(batch_unit_id, "") = "'+e+'" '};return t};Se={problem_images:{img_url:"img_url",img_local:"img_localpath",thumbnail:"img_thumbnail_localpath",type:"problem"},room_type_diagram:{img_url:"url",img_local:"local_path",type:"room_type_diagram"},batch_room:{img_url:"signature_url",img_local:"signature_image_localpath",type:"sign"},batch_room_images:{img_url:"img_url",img_local:"img_localpath",thumbnail:"img_thumbnail_localpath",type:"review",tablename:"batch_room_images"},batch_room_material:{img_url:"material_url",img_local:"material_localpath",thumbnail:"material_thumbnail_localpath",type:"material",tablename:"batch_room_material"},batch_room_review:{img_url:"review_signature_url",img_local:"review_signature_image_localpath",type:"review_sign",tablename:"batch_room"}};var Pe=function(e){var t,i,n;r.a.each(e,(function(e){if(!r.a.isEmpty(e)){var o=r.a.keys(e)[0];r.a.each(e[o],(function(e){/http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- .\/?%&=]*)?/.test(e.url)&&(Me[e.url]?Me[e.url].id.push(e.id):(i=(e.unit_id?e.unit_id+"/":"")+(e.room_id||""),n=Object(Le["c"])({type:Se[o]["type"],folder:i}),t={id:[e.id],type:o,tablename:Se[o]["tablename"]||o,url:e.url,thumbnail:Se[o]["thumbnail"]?Se[o]["thumbnail"]:"",path:n.save_path,fullpath:n.full_path},Me[t.url]=t))}))}}))},$e=function(){return!!We.length&&f["a"].transaction((function(e){var t,i={};console.log(We,Me,"======图片更新本地队列==="),r.a.each(We,(function(n){t=Me[n.url],t?(r.a.each(t.id,(function(o){i={},t.type!=t.tablename?i[Se[t.type]["img_local"]]=n.path:i[Se[t.tablename]["img_local"]]=n.path,t.thumbnail&&(i[Se[t.tablename]["thumbnail"]]=n.path),e.update(t.tablename,i,{id:o},(function(t){t.rowsAffected||e.update("batch_room_material",{material_localpath:n.path,material_thumbnail_localpath:n.path},{id:o})}))})),delete Me[t.url]):delete Me[n.url]}))})).catch((function(){return console.error("更新图片本地路径失败"),n["a"].reject("更新图片本地路径失败")}))},Ge=function(){if(0==Me.length)return!1;var e=[],t="",i="";return r.a.each(Me,(function(n,o){t=Object(qe["h"])(n.url,"/").replace(/\?.*/,""),i=t.replace(Fe,""),t||(i=t=Utils.uuid()+".jpg"),"null"!==i&&"(null)"!==i&&(Me[o]["path"]+=t,Me[o]["fullpath"]+=t,e.push({url:n.url,path:n.fullpath}))})),e};je={downloadAllImages:function(e){var t=n["a"].defer(),i=1,o=0;return je.getUnloadImages(e).then((function(){t.resolve()}),(function(e){window.$log("下载图片失败",e),!r.a.isEmpty(e)&&e.errMsg&&e.errMsg.indexOf("空间不足")>-1&&(B["default"].prototype.$toast("糟糕，手机存储空间不足了"),window.$log("下载图片失败 空间不足",e),t.reject(e)),t.notify({imageTotal:i,imageDone:o+1})}),(function(e){if(!e.error){var n=e.fileInfo;Me[n.url]&&We.push({url:n.url,path:Me[n.url]["path"]})}i=e.imageTotal,o=e.imageDone,t.notify(e)})).then((function(){return $e()})).then((function(){Me={},We=[],t.resolve()})).catch((function(e){Me={},We=[],window.$log("下载图片失败 downloadAllImages",e),t.reject(e)})),t.promise},getUnloadImages:function(e){if(!e)return n["a"].reject();var t,i=[],o=Je(e);return r.a.each(o,(function(e,n){t=f["a"].query(e,[]).then((function(e){if(e){var t={};return t[n]=e,t}return{}})),i.push(t)})),n["a"].all(i).then((function(e){return console.log("获取批次单元下所有未下载的图片",e),Pe(e),Ge()})).then((function(e){return r.a.isEmpty(e)?n["a"].resolve():ne["a"].downloadFile(e,!0)}))}};var Xe=je,ze=i("976e"),Ke="problem",Ye="material",Qe="range",Ve="room",Ze={room:10,range:10,problem:30,image:50},et={},tt=null,it=0,nt=function(e){return xe.download(e,Ke)},ot=function(e){return xe.download(e,Ye)},at=function(e){return ze["a"].getBatchUnitById(e).then((function(e){return xe.download(e["building_id"],Qe)}))},rt=function(e){return xe.downloadOnePage(e,Ve)},ct=function(e){return Xe.downloadAllImages(e)},lt=function(e,t){var i={curr:e.curr,total:e.total,type:t};return e.total?(i.curr=e.curr/e.total*Ze[t]+it,e.curr===e.total&&(it+=Ze[t]),i):(it+=Ze[t],i.curr=it,i)},dt=function(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];console.log("[services]/download-batch-unit-data-service.js：",e,i)};et.downloadBatchUnit=function(e,t){if(tt)return console.log("存在下载进程"),tt;var i=n["a"].defer();return console.log("========== download batch unit start ==========",e),dt("0. 下载批次单元数据开始...","batchUnitId=".concat(e)),i.notify({dataStart:!0}),it=0,dt("1. 下载房间数据...","batchUnitId=".concat(e)),tt=Object(n["a"])(rt(e)).then((function(){return i.notify(lt({curr:1,total:1},"room")),console.log("========== download batch rooms finish =========="),dt("2. 下载承建范围...","batchUnitId=".concat(e)),at(e).then(null,null,(function(e){i.notify(lt(e,"range"))}))})).then((function(){return dt("3. 下载素材...","batchType=".concat(t)),["feedback_remain_reply","online_opening"].indexOf(t)>-1?ot(e).then(null,null,(function(e){console.log(e)})):n["a"].resolve()})).then((function(){return console.log("========== download batch range finish =========="),dt("4. 下载问题...","batchUnitId=".concat(e)),nt(e).then(null,null,(function(e){i.notify(lt(e,"problem"))}))})).then((function(){return console.log("========== download batch problem finish =========="),dt("5. 下载问题图片...","batchUnitId=".concat(e)),ct(e).then(null,null,(function(e){i.notify(lt({curr:e.imageDone,total:e.imageTotal},"image"))}))})).then((function(){console.log("========== download batch problem image finish =========="),dt("6. 下载批次单元数据结束..."),i.notify({dataSuccess:!0}),i.resolve()})).catch((function(e){console.error("===== download batch unit fail ======",e),window.$log("downloadBatchUnit 下载失败",e),i.reject(e)})).finally((function(){tt=null})),i.promise};var ut=et,_t=function(e,t){if(e){var i=e.curr;if(e.dataSuccess&&(i=100),null!=i)return 1*i.toFixed(2)}},st=function(e){var t;e.roomDone=e.roomDone||1;var i=84,n=i/e.roomTotal,o=.8*n,a=.2*n;if(e.uploadRoomStart)t=0;else if(e.fileTotal&&e.fileDone)t=e.fileDone/e.fileTotal*o+(e.roomDone-1)*n;else{if(!e.roomTotal||!e.roomDone)throw new TypeError("未知notify "+JSON.stringify(e));t=e.roomDone/e.roomTotal*a+(e.roomDone-1)*n}return 1*t.toFixed(2)},pt=function(e,t){if(t=Object.assign({},{uploadImage:65,getData:15,uploadData:19,deleteData:1},t),t.uploadImage+t.getData+t.uploadData+t.deleteData!==100)throw new TypeError("percentOption参数错误");if(e.uploadRoomStart||e.roomTotal)return st(e,t);if("success"==e)return 100;var i;if(e.fileStart)i=3;else if(e.fileTotal&&e.fileDone)i=e.fileDone/e.fileTotal*t.uploadImage;else if(e.getDataStart)i=t.uploadImage;else if(e.getDataTotal&&e.getDataDone)i=e.getDataDone/e.getDataTotal*t.getData+t.uploadImage;else if(e.uploadDataStart)i=t.uploadImage+t.getData;else{if(!e.deleteDataStart)throw new TypeError("未知notify "+JSON.stringify(e));i=100-t.deleteData}return 1*i.toFixed(2)},mt=function(e){var t,i=n["a"].defer();return ee.uploadSimulateBatchUnit(e).then((function(t){console.log("uploadUnit: ",e,"ok"),i.resolve(t)}),(function(e){i.reject(e)}),(function(n){t=pt(n),i.notify(t),console.log("uploadUnit: ",e,t,n)})),i.promise},ht=function(e,t,i){var n,o=i||70,a=100-o;if(e)n=e*o/100;else{if(!t)throw new TypeError("参数无效"+e+t);n=t*a/100+o}return 1*n.toFixed(2)},ft={uploadData:function(e,t){t=t||"";var i,o=n["a"].defer();return ee.uploadBatchUnit(e,t).then((function(t){console.log("uploadUnit: ",e,"ok"),o.resolve(t)}),(function(e){o.reject(e)}),(function(t){i=pt(t),o.notify(i),console.log("uploadUnit: ",e,i,t)})),o.promise},downloadBatchUnit:function(e,t){var i,o=n["a"].defer();return ut.downloadBatchUnit(e,t).then((function(e){o.resolve(e)}),(function(e){window.$log("下载批次单元的数据失败",e),o.reject(e)}),(function(e){i=_t(e,20),"undefined"!==typeof i?o.notify(i):console.error("无效notify，过滤")})),o.promise},uploadAndUpdateSimulateUnit:function(e){var t,i=n["a"].defer();return mt(e).then((function(){t=ht(100,null),console.log("uploadAndUpdateUnitData:",t),i.notify(t)}),null,(function(e){e=ht(e,null),console.log("uploadAndUpdateUnitData:",e),i.notify(e)})).then((function(){return ft.downloadBatchUnit(e)})).then((function(){i.notify(100),i.resolve()}),(function(e){i.reject(e)}),(function(e){console.log("percent",e),"undefined"!==typeof e&&(e=ht(null,e),console.log("uploadAndUpdateUnitData:",e),i.notify(e))})),i.promise},uploadAndUpdateUnit:function(e,t){if(console.log("===== uploadAndUpdateUnit =====",e,t),"simulate"===t)return ft.uploadAndUpdateSimulateUnit(e);var i,o=n["a"].defer();return ft.uploadData(e).then((function(){i=ht(100,null),console.log("uploadAndUpdateUnitData:",i),o.notify(i)}),null,(function(e){e=ht(e,null),console.log("uploadAndUpdateUnitData:",e),o.notify(e)})).then((function(){return ft.downloadBatchUnit(e)})).then((function(){o.resolve()}),(function(e){o.reject(e)}),(function(e){console.log("percent",e),"undefined"!==typeof e&&(e=ht(null,e),console.log("uploadAndUpdateUnitData:",e),o.notify(e))})),o.promise}};t["a"]=ft}}]);