(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-72630e42","chunk-59fa3e5d","chunk-0b5b35be","chunk-1da0170c","chunk-b1eec014","chunk-2709989a","chunk-5ec4446a"],{"0258":function(e,t,a){"use strict";var i=a("5f95").a,n=(a("cb9a3"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",e._g({staticClass:"drawing-con",style:{width:e.width+"px",height:e.height+"px"}},e.$listeners),[e.isDownloading?[a("p",[a("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[a("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),a("p",{staticClass:"loading-text"},[e._v("正在下载...")])]:[e.error?e._e():a("canvas",{ref:"drawing-canvas",style:{width:e.width+"px",height:e.height+"px"}}),e.error?a("p",{staticClass:"error-text"},[e._v(e._s(e.error))]):e._e()]],2)}),[],!1,null,"404ed5a0",null);t.a=r.exports},"031a":function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e");var i,n=a("28f8"),r=(a("e697"),a("07d2")),o=a("269c"),s=a("6f9e"),l=a("6144"),c=a("e2a7"),d=a("e89f"),p=a("e865");function u(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}t.a={name:"DropSelectCheckitemDialog",components:{Item:r.a,AppButton:o.a},mixins:[d.a],data:function(){return{show:!1,showList:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,options:[],selected:[],openSet:{},passrateData:{},componentUid:"",target:""}},computed:{currentId:function(){var t="";if(e.isEmpty(this.selected))t="";else{var a=this.selected[this.selected.length-1];t=a&&a.id||""}return t}},watch:{show:function(e){var t=this;e&&this.$nextTick((function(){t.showList=!0}))},showList:function(e){var t=this;e&&this.$nextTick((function(){setTimeout((function(){if(t.$refs["list-wrap"]){var e=t.$refs["list-wrap"].querySelector(".checkitem-selected");e&&e.scrollIntoViewIfNeeded(!0)}}),400)}))}},created:function(){s.a.$on("routerBeforeEach",this.closePopup),s.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){s.a.$off("routerBeforeEach",this.closePopup),s.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(t){var a=this;if(this.show)return t.componentUid===this.componentUid?void this.closePopup():void this.closePopup().then((function(){a.openPopup(t)}));this.componentUid=t.componentUid||"";var n=document.querySelector(".layout-main .layout-header");if(this.contentTop=n.offsetHeight,t.el){var r=t.el.getBoundingClientRect();this.contentTop=r.bottom}if(this.target=t.el,this.listHeight=e.minBy([window.innerHeight-this.contentTop-50,510]),this.options=t.options,this.selected=t.selected,this.roomId=t.roomId,i=t.callback,e.isEmpty(t.openStatus)){var o=l.a.getObject("measureInspectReportRoomMemory")||{};this.openSet=o}else this.openSet=t.openStatus;var s=e.find(t.options,(function(a){return e.some(a.subitem,(function(a){return e.some(t.selected,{id:a.id})}))}));s&&this.$set(this.openSet,s.id,!0),this.getPassrateData(t.batchId,t.roomId),this.show=!0,this.$emit("open")},closePopup:function(){var e=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(t){e.$on("afterClosePopup",t)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(e){e&&e.target&&e.target!==this.target&&this.show&&this.closePopup()},getPassrateData:function(t,a){var i=this;p.a.getRoomAllProblems(t,a).then((function(t){var a={},n={};e.each(t,(function(e){"检查中"===e.status?a[e.item_id]="暂存":a[e.item_id]=e.measurement_points?(100*(e.measurement_points-e.problem_points)/e.measurement_points).toFixed(2)+"%":"",e.parent_item_id&&(n[e.parent_item_id]||(n[e.parent_item_id]={pointNum:0,exceedNum:0}),n[e.parent_item_id].pointNum+=e.measurement_points||0,n[e.parent_item_id].exceedNum+=e.problem_points||0)})),e.each(n,(function(e,t){a[t]=e.pointNum?(100*(e.pointNum-e.exceedNum)/e.pointNum).toFixed(2)+"%":""})),i.passrateData=a}))},toggleItem:function(e){var t=this.openSet[e.id];this.$set(this.openSet,e.id,!t),l.a.saveObject("measureInspectReportRoomMemory",this.openSet)},clickItem:function(e){var t=this;1===e.entry_requirements||8===e.passrate_mode||null!==e.standard_max&&""!==e.standard_max?setTimeout((function(){t.select(e)}),100):c.a.alert("请先在PC端设置此检查项的合格标准值。")},select:function(t){e.isArray(t)&&(t=t[0]||{});var a=function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?u(Object(a),!0).forEach((function(t){Object(n.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},t);i&&i(a),this.closePopup()}}}}).call(this,a("391c"))},"0732":function(e,t,a){var i=a("81f2");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("1b5b07de",i,!0,{sourceMap:!1,shadowMode:!1})},"09b0":function(e,t,a){var i=a("e1a2");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("5a1212db",i,!0,{sourceMap:!1,shadowMode:!1})},"0a71":function(e,t,a){var i=a("e98df");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("621faf10",i,!0,{sourceMap:!1,shadowMode:!1})},"0aac":function(e,t,a){"use strict";a("2814")},"0cb6":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .problem-detail-header[data-v-0901aadd]{display:flex;align-items:center;justify-content:center;height:40px;padding:0 15px;line-height:40px;background-color:#f2f2f2}.zjapp .problem-detail-header .status[data-v-0901aadd]{flex:1;height:16px;line-height:16px;border-left:5px solid #ddd;padding-left:5px;color:#111;font-size:16px}.zjapp .problem-detail-header .status-red[data-v-0901aadd]{border-color:#ff3d3d}.zjapp .problem-detail-header .status-blue[data-v-0901aadd]{border-color:#4275e8}.zjapp .problem-detail-header .status-green[data-v-0901aadd]{border-color:#0bc666}.zjapp .problem-detail-header .status-orange[data-v-0901aadd]{border-color:#fc8b01}.zjapp .problem-detail-header .status-black[data-v-0901aadd]{border-color:#333}.zjapp .problem-detail-header .status-gray[data-v-0901aadd]{border-color:#999}.zjapp .problem-detail-header .return[data-v-0901aadd],.zjapp .problem-detail-header .timeout[data-v-0901aadd],.zjapp .problem-detail-header .urgent[data-v-0901aadd]{display:block;padding:0 5px;margin-left:6px;height:16px;line-height:16px;color:#fff;font-size:12px;border-radius:2px;-webkit-border-radius:2px}.zjapp .problem-detail-header .urgent[data-v-0901aadd]{background-color:#ff3d3d}.zjapp .problem-detail-header .timeout[data-v-0901aadd]{background-color:#954cfe}.zjapp .problem-detail-header .return[data-v-0901aadd]{background-color:#fc8b01}.zjapp .problem-detail-header .operat[data-v-0901aadd]{height:40px;line-height:40px;white-space:nowrap;font-size:16px;color:#6b7ba9}",""])},"1f63":function(e,t,a){"use strict";a("7434")},"1f71":function(e,t,a){var i=a("d501");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("19587aa2",i,!0,{sourceMap:!1,shadowMode:!1})},"1fcf":function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e"),a("cc57");var i,n=a("28f8"),r=a("774b"),o=a("07d2"),s=a("6948"),l=a("e223"),c=a("e89f"),d=a("e2a7"),p=a("4360");function u(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function h(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?u(Object(a),!0).forEach((function(t){Object(n.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}t.a={name:"DrawingWithPoint",components:{Scroller:r.a,Item:o.a,NumberInput:s.a,Drawing:l.a},mixins:[c.a],data:function(){return{show:!1,isLoading:!0,points:[],maxMarks:1/0,layoutPointsData:[],checkitemData:[],areaData:[],mode:"view",scrollPaddingBottom:0,lightIndex:""}},computed:{isNumberInputOpen:function(){return p.a.state.global.isNumberInputOpen},drawingHeight:function(){return document.documentElement.clientWidth},valueDecimal:function(){return p.a.state.measure.valueDecimal},valueRange:function(){return p.a.state.measure.valueRange}},watch:{isNumberInputOpen:function(e){this.scrollPaddingBottom=e?232:0}},methods:{openPopup:function(t){var a=this;if(this.show=!0,this.mode=t.mode,this.url=t.url,this.points=e.map(t.points,(function(e,t){return h(h({},e),{},{index:t})})),this.maxMarks=isNaN(t.maxMarks)?1/0:t.maxMarks,i=t.callback,this.pointLight(),this.layoutPointsData=[],e.isEmpty(t.itemData)||1===t.itemData.length){var n={itemName:"",areas:[]};if(e.isEmpty(t.areaData)){var r=e.clone(this.points);n.areas.push({areaName:"",points:r})}else e.each(t.areaData,(function(t){var i=e.filter(a.points,{area:t.name});n.areas.push({areaName:t.name,points:i})}));this.layoutPointsData.push(n)}else e.each(t.itemData,(function(i){var n=i.item_name?i.item_name:i.name,r={itemName:n,areas:[]};if(e.isEmpty(t.areaData)){var o=e.filter(a.points,{itemName:n});r.areas.push({areaName:"",points:o})}else e.each(t.areaData,(function(t){var i=e.filter(a.points,{itemName:n,area:t.name});r.areas.push({areaName:t.name,points:i})}));a.layoutPointsData.push(r)}));return this.$emit("open"),this},closePopup:function(){this.show=!1,this.$emit("close")},pointLight:function(t){this.lightIndex=t,this.points=e.map(this.points,(function(e,a){var i=h({},e);return t===a?i.color="#4275e8":i.isQualified?i.color="#14ff56":i.color="#ff4546",i}))},clickPointEle:function(e){this.pointLight(e.index)},removeExceedPoint:function(e){var t=this.points.indexOf(e);this.points.splice(t,1)},inputFocus:function(e){var t=this;this.$nextTick((function(){var a=t.$refs["exceed-point-input"][e];t.pointLight(e),t.$refs.scroller.scrollToEle(a)}))},inputBlur:function(){this.pointLight()},onclick:function(e){var t=this;if("view"===this.mode){if(e.clickPoint&&"points"===e.clickPoint.tag){var a=e.clickPoint.index;this.pointLight(a)}}else{if(this.points.length>=this.maxMarks)return void d.a.alert("爆点个数不能大于实测点数");this.points.push({x:e.x,y:e.y}),this.$nextTick((function(){var e=t.$refs["exceed-point-input"],a=e&&e[e.length-1];a&&a.openKeyboard()}))}},confirm:function(){var t=[];e.each(this.points,(function(e){""!==e.val&&null!==e.val&&void 0!==e.val&&(delete e.color,t.push(e))})),i&&i(t),this.closePopup()}}}}).call(this,a("391c"))},"23a4":function(e,t,a){var i=a("aecb");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("052fd854",i,!0,{sourceMap:!1,shadowMode:!1})},2428:function(e,t,a){var i=a("e195");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("7aa65c86",i,!0,{sourceMap:!1,shadowMode:!1})},"25ba":function(e,t,a){"use strict";(function(e){a("cc57"),a("ed63"),a("8cf2"),a("e697");var i=a("774b"),n=a("07d2"),r=a("6948"),o=a("e68e"),s=a("cd05"),l=a("3c64"),c=a("da1c"),d=a("e2a7"),p=a("b6da"),u=a("c0fb"),h=a("6bf2"),m=a.n(h),f=a("5a71"),g=a("732d");t.a={name:"MeasureDetailTemplate2",components:{Scroller:i.a,item:n.a,NumberInput:r.a,ItemImgList:o.a,UserSelect:s.a,ItemTextarea:l.a,ProblemDetailHeader:c.a,SingleSelect:f.a},mixins:[g.a],props:{detail:{type:Object,default:function(){}},repairOptions:{type:Array,default:function(){return[]}},ccOptions:{type:Array,default:function(){return[]}}},data:function(){return{repair_image_file:[],repair_remark:""}},computed:{hasProblemDataClose:function(){return e.some(this.detail.problemData,(function(e){return!e.isOpen}))}},methods:{changeItems:function(e,t){this.$emit("changeItems",e,t)},getAreaData:function(t){var a=[];return e.each(t,(function(t){e.find(a,{name:t.area})||a.push({name:t.area})})),a},formatDate:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"YYYY-MM-DD HH:mm";return m()(e).format(t)},contains:function(t,a){return e.includes(t,a)},pointFilter:function(t,a){return e.filter(t,a)},hasPoints:function(t,a){var i=this,n=this.pointFilter(t,a);return e.filter(n,(function(e){return i.hasVal(e.val)}))},areaNameEdit:function(e,t){this.$set(e,"isEditing",!0),this.$set(e,"nameTemp",e.name);var a=t.target.nextSibling.querySelector("input");return this.$forceUpdate(),setTimeout((function(){document.body.contains(a)&&a.focus()}),100),!1},areaNameUpdate:function(t,a){var i=!1;if(t&&a){var n=t.name.trim(),r=t.nameTemp.trim();if(r===n)return this.$set(t,"isEditing",!1),void this.$forceUpdate();var o=e.some(a.areaData,(function(e){return e.name===r}));""===r||null==r?(this.$set(t,"isEditing",!1),i=!0):o&&(d.a.alert(r+"已存在"),i=!0),i?t.name=n:(t.name=r,e.each(a.problemData,(function(t){var a=e.find(t.areaData,{name:n}),i=e.filter(t.realityVal,{area:n});a&&(a.name=r),e.each(i,(function(e){e.area=r}))})),this.$set(t,"isEditing",!1),this.saveProblem(a))}},areaNumChange:function(){var t=this;e.each(this.detail.problemData||[],(function(e){e.areaNum=t.detail.areaNum})),this.$emit("problemValueChange",this.saveProblem)},areaPointNumChange:function(t,a,i){var n=e.map(t.problemData,(function(t){return e.find(t.areaData,(function(e){return e.name===i.name}))}));return!e.some(n,(function(e){return 0!==e.pointNum}))?(i.pointNum=e.filter(a.realityVal,{area:i.name}).length,void d.a.alert("一个测区不能所有检查项的点数为0")):12===a.passrate_mode&&(i.pointNum>6||i.pointNum<2)?(i.pointNum=e.filter(a.realityVal,{area:i.name}).length,d.a.alert("标高差算法每个测区实测值个数为 2~6")):16===a.passrate_mode&&(i.pointNum>99||1===i.pointNum)?(i.pointNum=e.filter(a.realityVal,{area:i.name}).length,d.a.alert("每个测区点数应该是 2~99 的整数")):void this.$emit("problemValueChange",this.saveProblem)},realityValUpdate:function(){this.$emit("problemValueChange",this.saveProblem)},setValUpdate:function(){this.$emit("problemValueChange",this.saveProblem)},saveInputSetVal:function(e,t){},autoInputSetVal:function(e,t){},markHuxing:function(e,t){var a=this,i=[];t&&""!==t.x&&void 0!==t.x&&null!==t.x&&(i=[t]),p.a.openPopup({mode:"mark",url:this.drawingUrl,points:i,onmark:function(e){a.$set(t,"x",e.x),a.$set(t,"y",e.y),a.$emit("problemValueChange",a.saveProblem)}})},viewHuxing:function(){var t=this,a=[],i=[];this.drawingUrl?(e.each(this.detail.problemData,(function(i){a=a.concat(e.filter(e.clone(i.realityVal),(function(e){if(t.hasVal(e.x)&&t.hasVal(e.y))return t.detail.problemData.length>1&&(e.itemName=i.checkItem.item_name?i.checkItem.item_name:i.checkItem.name),!0})))})),e.isEmpty(this.detail.areaData)||e.each(this.detail.areaData,(function(t){var n=e.filter(e.clone(a),{area:t.name});i=i.concat(n)})),u.a.openPopup({mode:"view",url:this.drawingUrl,points:i,areaData:this.detail.areaData||[],itemData:this.detail.checkItems||[]})):d.a.alert("PC端未设置户型图")},toggleProblemData:function(e){this.detail.problemData.length>1&&this.$set(e,"isOpen",!e.isOpen)},toggleProblemDataAll:function(){var t=this,a=this.hasProblemDataClose;e.each(this.detail.problemData,(function(e){t.$set(e,"isOpen",!!a)}))}}}}).call(this,a("391c"))},2814:function(e,t,a){var i=a("5033");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("9db19832",i,!0,{sourceMap:!1,shadowMode:!1})},2939:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .page-scroll[data-v-74102c05]{flex:1;overflow:auto;padding-bottom:100px;transform:translateZ(0)}.zjapp .sublist[data-v-74102c05]{padding-left:25px;padding-top:1px;background-color:#fff}.zjapp .sublist>.sublist[data-v-74102c05]{padding-left:10px;padding-top:0}",""])},"29be":function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e");var i=a("28f8"),n=(a("cc57"),a("163d"),a("07d2")),r=a("a5c6"),o=a("6144");function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}t.a={name:"SingleSelect",components:{Item:n.a},props:{title:{type:String,default:""},pageTitle:{type:String,default:""},placeholder:{type:String,default:""},value:{type:Object,default:function(){return{}}},options:{type:Array,default:function(){return[]}},optionsDisabled:{type:Array,default:function(){return[]}},required:{type:Boolean,default:!0},mode:{type:String,default:"edit"},editabled:{type:Boolean,default:!0},memory:{type:Boolean,default:!1},autoSelect:{type:Boolean,default:!1},beforeOpen:{type:Function,default:function(){}},searchBar:{type:Boolean,default:!0},grouping:{type:String,default:""},autoOpen:{type:Boolean,default:!1},rightBtn:{type:String,default:""},rightBtnEvent:{type:Function,default:function(){return 0}},ifToggle:{type:Boolean,default:!1},formCheck:{type:Boolean,default:!1},editorAddData:{type:Boolean,default:!1},lineLimit:{type:[Number,String],default:1}},data:function(){return{memoryKey:this.$route.name+encodeURI(this.title)}},watch:{options:function(){this.setSelected()}},mounted:function(){this.setSelected()},methods:{openSelect:function(){var t=this;if(this.editabled){var a=this.beforeOpen();a&&a.then&&e.isFunction(a.then)?a.then((function(e){!1!==e&&t.openPopup()})):!1!==a&&this.openPopup()}},openPopup:function(){var t=this;if(this.optionsDisabled&&this.optionsDisabled.length){var a={};e.each(this.optionsDisabled,(function(e){e.id&&(a[e.id]=e)})),e.each(this.options,(function(e,i){a[e.id]?t.options[i].disabled=!0:t.options[i].disabled=!1}))}r.a.openPopup({title:this.pageTitle||"选择"+this.title,selected:this.value,options:this.options,required:this.required,searchBar:this.searchBar,grouping:this.grouping,autoOpen:this.autoOpen,rightBtn:this.rightBtn,ifToggle:this.ifToggle,lineLimit:this.lineLimit,editorAddData:this.editorAddData,onSelect:function(a){var i=e.cloneDeep(t.value);a=e.isArray(a)?e.map(a,(function(e){return l({},e)})):l({},a),t.$emit("input",a,i),t.$emit("onSelect",a,i)},rightBtnEvent:function(a){var i=e.cloneDeep(t.value);t.$emit("rightBtnEvent",a,i)}})},closePopup:function(){r.a.closePopup()},onSelect:function(e){o.a.saveObject(this.memoryKey,e,o.a.level.user),this.$emit("input",e[0]),this.$emit("onSelect",e[0])},setSelected:function(){var t=o.a.getObject(this.memoryKey,o.a.level.user);!1===this.editabled||e.isEmpty(this.options)||(e.isEmpty(this.value)?this.memory&&!e.isEmpty(t)&&e.some(this.options,{id:t.id})&&(this.$emit("input",t),this.autoSelect&&this.$emit("onSelect",t)):this.autoSelect&&this.$emit("onSelect",this.value))}}}}).call(this,a("391c"))},"2a67":function(e,t,a){"use strict";(function(e){a("cc57"),a("163d");var i=a("d152");t.a={name:"DropDownSelect",props:{value:{type:Array,default:function(){return[]}},options:{type:Array,default:function(){return[]}},stage:{type:Number,default:1},minSelectStage:{type:Number},needFullSelecte:{type:Boolean,default:!0},optionsMap:{type:Array,default:function(){return[]}},emptyText:{type:Array,default:function(){return[]}},editabled:{type:Boolean,default:!0},showTextLevel:{type:Number,default:0},onlyShowLastText:{type:Boolean,default:!1},keepStage:{type:Array,default:function(){return[]}},showNote:{type:Boolean,default:!0}},data:function(){return{isOpen:!1}},computed:{hdText:function(){return e.isEmpty(this.value)||e.isEmpty(this.value[0])?this.editabled?"请选择":"无":this.value[0].name},bdText:function(){var t="",a=this.showTextLevel||this.value.length;if(e.isEmpty(this.value)||e.isEmpty(this.value[1]))t=this.editabled?"请选择":"无";else if(this.onlyShowLastText){var i=this.value.length;t=this.value[i]&&this.value[i].name?this.value[i].name:this.value[i-1].name}else for(var n=1;n<a;n++)t+=this.value[n]&&this.value[n].name?this.value[n].name:"";return t}},created:function(){var e=this;i.a.$on("afterClosePopup",(function(){e.isOpen=!1}))},methods:{openDialog:function(){var e=this;i.a.openPopup({options:this.options,selected:this.value,stage:this.stage,minSelectStage:this.minSelectStage,needFullSelecte:this.needFullSelecte,optionsMap:this.optionsMap,emptyText:this.emptyText,keepStage:this.keepStage,el:this.$refs["select-con"],componentUid:this._uid,showNote:this.showNote,callback:function(t){e.$emit("input",t),e.$emit("onSelect",t)}}),this.isOpen=!0}}}}).call(this,a("391c"))},"2c76":function(e,t,a){"use strict";a("c070")},"2dd6":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .single-item[data-v-6920dde7]{min-height:44px}.zjapp .single-item>div[data-v-6920dde7]{display:flex}.zjapp .single-item>div>span[data-v-6920dde7]{flex:1;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical}.zjapp .single-item>div>span[data-v-6920dde7] label{color:#4174e9}.zjapp .single-item i[data-v-6920dde7]{line-height:24px;font-size:24px;color:#4275e8}.zjapp .single-item .disabled-item[data-v-6920dde7]{color:#aaa}",""])},"2ddb":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .supplier-editor[data-v-e465319c]{margin-bottom:10px;padding:8px;display:flex;justify-content:space-between;align-items:center;height:52px;color:#4275e8;background-color:#fff}.zjapp .supplier-editor .icon[data-v-e465319c]{border-left:1px solid #c8c8c8;padding-left:12px}.zjapp .supplier-editor .icon-edit[data-v-e465319c]{color:#c8c8c8;font-size:18px}.zjapp .supplier-editor .icon-qualified[data-v-e465319c]{color:#4275e8}.zjapp .supplier-editor .margin-r[data-v-e465319c]{margin-right:10px}.zjapp .list-title[data-v-e465319c]{position:relative;top:0;color:#888;font-size:14px;line-height:30px;min-height:40px;margin-bottom:0;margin-top:0;padding:8px 16px 2px}.zjapp .search-item>div[data-v-e465319c]{padding-right:35px}.zjapp .search-item i[data-v-e465319c]{position:absolute;color:#ccc;font-size:26px;right:0;top:50%;transform:translateY(-50%)}.zjapp .van-popup--right[data-v-e465319c]{width:100%;height:100%}[data-v-e465319c] .van-cell__title{color:#4174e9;font-weight:700}[data-v-e465319c] .van-collapse-item__content{transform:translateZ(0);padding:0 0 0 25px}[data-v-e465319c] .van-collapse-item__content .van-cell{padding-left:0}",""])},"3156b":function(e,t,a){"use strict";a("163d");var i={name:"SingleSelectItem",props:{item:{type:Object,default:function(){return{id:"",name:""}}},checked:{type:Boolean,default:!1},renderField:{type:String,default:"name"},lineLimit:{type:[Number,String],default:1}},methods:{selectItem:function(e){e.disabled||this.$emit("click",e)}}},n=(a("9788"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("van-cell",{staticClass:"single-item",attrs:{clickable:!0},on:{click:function(t){e.selectItem(e.item)}}},[a("span",{class:{"disabled-item":e.item.disabled},style:{"-webkit-line-clamp":"unlimited"===e.lineLimit?"initial":e.lineLimit},domProps:{innerHTML:e._s(e.item[e.renderField])}}),e.checked?a("van-icon",{attrs:{name:"success"}}):e._e()],1)}),[],!1,null,"6920dde7",null);t.a=r.exports},"3c64":function(e,t,a){"use strict";a("163d");var i={name:"ItemTextarea",components:{},props:{value:{type:String,default:""},placeholder:{type:String,default:""},maxlength:{type:Number,default:200},borderBottom:{type:Boolean,default:!0}},data:function(){return{textareaHeight:40,isLock:!1,blurTime:null}},computed:{lastLength:function(){var e=this.value&&this.value.length||0,t=this.maxlength-e;return t>0?t:0}},mounted:function(){var e=this;this.$nextTick((function(){e.textareaHeight=e.$refs.rule&&e.$refs.rule.offsetHeight||40}))},methods:{onfocus:function(){var e=(new Date).getTime();this.blurTime&&e-this.blurTime<300&&window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(this.$refs.input.blur(),window.cordova.plugins.Keyboard.close()),this.blurTime=null,this.$emit("focus")},onblur:function(){this.blurTime=(new Date).getTime(),this.$emit("blur")},setStatus:function(e){console.log(e),this.isLock=e},oninput:function(e){var t=this;setTimeout((function(){if(!t.isLock){var a=e.target.value;a.length>t.maxlength&&(a=a.substring(0,t.maxlength),t.$refs.input.value=a),t.$refs.rule.innerText=a,t.textareaHeight=t.$refs.rule&&t.$refs.rule.offsetHeight+20,t.$emit("input",a),t.$emit("change",a)}}),0)}}},n=(a("2c76"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"item-textarea",class:{"border-bottom":e.borderBottom}},[a("div",{staticClass:"item-textarea-content"},[a("textarea",{ref:"input",style:{height:e.textareaHeight+"px"},attrs:{placeholder:e.placeholder},domProps:{value:e.value},on:{focus:e.onfocus,blur:e.onblur,compositionstart:function(t){e.setStatus(!0)},compositionend:function(t){e.setStatus(!1)},input:e.oninput}}),a("div",{ref:"rule",staticClass:"rule"},[e._v("\n      "+e._s(e.value)+"\n    ")]),e.maxlength!==1/0?a("p",{staticClass:"counter"},[e._v("\n      "+e._s(e.lastLength)+"\n    ")]):e._e()])])}),[],!1,null,null,null);t.a=r.exports},"3cd8":function(e,t,a){var i=a("5c19");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("67c16200",i,!0,{sourceMap:!1,shadowMode:!1})},"41b1":function(e,t,a){"use strict";a("ffea")},"41dd":function(e,t,a){"use strict";(function(e){a("cc57");var i=a("4db0");t.a={name:"DropSelectCheckitem",props:{value:{type:Array,default:function(){return[]}},options:{type:Array,default:function(){return[]}},isLoading:{type:Boolean,default:!1},editabled:{type:Boolean,default:!0},batchId:{type:String,default:""},roomId:{type:String,default:""},openStatus:{type:Array,default:function(){return[]}}},data:function(){return{isOpen:!1}},computed:{hdText:function(){return e.isEmpty(this.value)||e.isEmpty(this.value[0])?this.editabled?"请选择":"无":this.value[0].name},bdText:function(){return e.isEmpty(this.value)||e.isEmpty(this.value[1])?this.editabled?"请选择":"无":this.value[1].name}},created:function(){var e=this;i.a.$on("afterClosePopup",(function(){e.isOpen=!1}))},methods:{openDialog:function(){var e=this;this.editabled&&!this.isLoading&&(i.a.openPopup({options:this.options,selected:this.value,roomId:this.roomId,batchId:this.batchId,openStatus:this.openStatus,el:this.$refs["select-con"],componentUid:this._uid,callback:function(t){e.$emit("input",t),e.$emit("onSelect",t)}}),this.isOpen=!0)}}}}).call(this,a("391c"))},"47df":function(e,t,a){var i=a("cc4c");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("1ffcc628",i,!0,{sourceMap:!1,shadowMode:!1})},"4db0":function(e,t,a){"use strict";var i=a("329b"),n=a("031a").a,r=(a("6cb79"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return e.show?a("div",{staticClass:"content",style:{top:e.contentTop+"px"},on:{click:function(t){return t.target!==t.currentTarget?null:e.closePopup(t)}}},[a("transition",{attrs:{name:"slide-down"},on:{enter:function(t){e.isOpening=!0},"after-enter":function(t){e.isOpening=!1},leave:function(t){e.isClosing=!0},"after-leave":e.afterClose}},[e.showList?a("div",{staticClass:"box",style:{height:e.listHeight+"px"}},[a("item",{staticClass:"item-hd"},[a("div",{staticClass:"item-text name-parent"}),a("div",{staticClass:"item-info"},[e._v("合格率")]),a("i",{staticClass:"icon-empty"})]),e.options.length?a("div",{ref:"list-wrap",staticClass:"list-wrap"},[e._l(e.options,(function(t,i){return[a("item",{key:i,attrs:{border:"bottom"},on:{click:function(a){e.toggleItem(t)}}},[a("i",{staticClass:"item-triangle",class:{"triangle-right":!e.openSet[t.id],"triangle-down":e.openSet[t.id]}}),a("div",{staticClass:"item-text name-parent"},[e._v(e._s(t.name))]),a("div",{staticClass:"item-info"},[e._v(e._s(e.passrateData[t.id]))]),a("i",{staticClass:"icon-empty"})]),t.subitem&&t.subitem.length&&e.openSet[t.id]?e._l(t.subitem,(function(t,n){return a("item",{key:"sub -"+i+"-"+n,class:{"checkitem-selected":e.currentId===t.id},attrs:{border:"bottom"},on:{click:function(a){e.clickItem(t)}}},[a("div",{staticClass:"item-text name-child"},[e._v(e._s(t.name))]),a("div",{staticClass:"item-info",class:{"color-orange":"暂存"===e.passrateData[t.id]}},[e._v("\n                "+e._s(e.passrateData[t.id]||"")+"\n              ")]),a("div",{staticClass:"item-icon"},[a("icon",{attrs:{name:e.currentId===t.id?"qualified":""}})],1)])})):e._e()]}))],2):e._e(),e.options.length?e._e():a("loading-status",{attrs:{"is-empty":!0,type:"search","empty-text":"未搜索到相关内容"}})],1):e._e()])],1):e._e()}),[],!1,null,"198b6c68",null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));t.a=s},5033:function(e,t,a){var i=a("5454");(e.exports=a("690e")(!1)).push([e.i,".zjapp .drawing-con[data-v-fba5990a]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-fba5990a]{display:block;height:100%;width:100%;background:url("+i(a("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-fba5990a]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-fba5990a],.zjapp .loading-text[data-v-fba5990a]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-fba5990a]{color:#ff3d3d}",""])},"515e":function(e,t,a){"use strict";var i=a("329b"),n=a("f1e4").a,r=(a("fe9e"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"slide-right"}},[e.show?a("page-content",{class:{"content-not-empty":e.content.length},attrs:{mode:"dialog",title:"检查指引","on-close":e.closePopup}},[e.isLoading?e._e():a("div",{staticClass:"check-guide-detail-hd border-bottom"},[a("h2",{staticClass:"check-guide-detail-title pb10"},[e._v(e._s(e.title))])]),!e.isLoading&&e.content.length?a("div",{staticClass:"check-guide-detail-content"},e._l(e.content,(function(t,i){return a("p",{key:i},[t.isImg&&t.src?a("img",{class:{"img-not-ready":!t.ready,error:"rejected"===t.status},attrs:{src:e.getThumbnail(t)},on:{error:function(a){e.imgError(t,i)},click:function(a){e.imgClick(t)}}}):e._e(),t.isImg?e._e():a("span",[e._v("\n          "+e._s(t.val)+"\n        ")])])}))):e._e(),a("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.content.length,"empty-text":"PC端未设置检查指引"}})],1):e._e()],1)}),[],!1,null,"43042f0d",null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));t.a=s},5317:function(e,t,a){"use strict";a("09b0")},"574c":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .item-textarea{background-color:#fff;padding:5px 15px}.zjapp .item-textarea-content{position:relative}.zjapp .item-textarea .rule,.zjapp .item-textarea textarea{width:100%;min-height:40px;line-height:20px;font-size:16px;padding:0;border:none}.zjapp .item-textarea .rule{position:absolute;top:0;left:0;visibility:hidden;word-break:break-all}.zjapp .item-textarea .counter{text-align:right;margin:0 0 -5px 0;height:15px;line-height:15px;color:#b2b2b2;font-size:12px}",""])},5770:function(e,t,a){"use strict";a("2428")},"5a71":function(e,t,a){"use strict";var i=a("29be").a,n=a("17cc"),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement;return(e._self._c||t)("item",{class:e.required,attrs:{label:e.title,text:e.value&&e.value.id?e.value.name:"view"===e.mode?"无":"",mode:e.mode,editabled:e.editabled,placeholder:e.required?e.placeholder||"请选择":"选填","form-check":e.formCheck},on:{click:e.openSelect}})}),[],!1,null,null,null);t.a=r.exports},"5c19":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .content-not-empty[data-v-43042f0d] .layout-content{display:auto;overflow:auto;padding-bottom:100px}.zjapp .check-guide-detail-hd[data-v-43042f0d]{margin-left:30px;padding:25px 30px 5px 0}.zjapp .check-guide-detail-title[data-v-43042f0d]{margin:0;line-height:20px;font-size:18px;color:#111;font-weight:700;word-break:break-all}.zjapp .check-guide-detail-info[data-v-43042f0d]{line-height:20px;font-size:14px;color:#8c8c8c}.zjapp .check-guide-detail-content[data-v-43042f0d]{padding:30px;line-height:30px;color:#333;font-size:16px}.zjapp .check-guide-detail-content p[data-v-43042f0d]{margin-bottom:30px;min-height:1em}.zjapp .check-guide-detail-content img[data-v-43042f0d]{max-width:100%}.zjapp .check-guide-detail-content .img-not-ready[data-v-43042f0d]{width:80px;height:auto}.zjapp .error[data-v-43042f0d]{max-width:50%}",""])},"5f95":function(e,t,a){"use strict";(function(e){a("163d");var i=a("65d0"),n=a("3122"),r=a("4ad6"),o=a("3bd5"),l=a("1b7e");t.a={name:"MeasureInspectDrawing3",components:{},props:{detail:{type:Object,default:function(){}},width:{type:Number,default:document.documentElement.clientWidth},height:{type:Number,default:document.documentElement.clientWidth}},data:function(){return{drawing:null,isDownloading:!1,error:"",img:null,src:"",folder:"house-image"}},watch:{detail:function(e){e&&this.$nextTick(this.getImage)},"detail.mode":function(){this.update(this.detail)}},mounted:function(){this.getImage()},beforeDestroy:function(){this.drawing.destroy()},methods:{getImage:function(){var t=this,a=this.detail.drawing_file&&this.detail.drawing_file[0]?this.detail.drawing_file[0].url:"";if(!this.isDownloading){if(console.log("getImage -----------",a),this.isDownloading=!0,a){var i=o.a.getUser().user_id,c=s.strRightBack(s.replaceAll(a,"\\?x-oss-process=image\\/resize,","@"),"/");if(!c)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var d=[r.a.appImagePath()+i+"/house-image/"+c,r.a.appImagePath()+i+"/drawing/"+c,r.a.appImagePath()+i+"/images/"+c,r.a.appDataPath()+i+"/house-image/"+c,r.a.appDataPath()+i+"/drawing/"+c,r.a.appDataPath()+i+"/images/"+c],p=Promise.resolve();return"dev"===APP_ENV?p=p.then((function(){return a})):e.each(d,(function(e){p=p.then((function(t){return t||r.a.isFileExists(e).then((function(t){if(t)return n.a._fixPath(e)}))}))})),p.then((function(e){if(console.log("获取图片 src =========",e),!e)return l.a.getHasNetwork().then((function(e){return e?n.a.download(a,!0,t.folder).then((function(e){t.src=e})):Promise.reject("当前无网络")}));t.src=e})).then((function(){console.log("this.src ======",t.src),t.src?(t.img=new Image,t.img.onload=function(){t.img.complete?(console.log("图片加载成功 ---------"),t.isDownloading=!1,t.$nextTick(t.init)):(console.log("11111"),t.error="加载图片失败",t.isDownloading=!1)},t.img.onerror=function(){console.log("22222"),t.error="加载图片失败",t.isDownloading=!1},t.img.src=t.src):(t.error="下载户型图失败",t.isDownloading=!1)})).catch((function(a){t.error=e.isString(a)?a:"下载户型图失败",t.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1}},init:function(){var e=this;this.isDownloading||(this.drawing&&this.drawing.reset(),this.drawing=i.a.init({canvas:this.$refs["drawing-canvas"],img:this.img,data:this.detail,height:this.height,onChange:function(){"edit"===e.detail.mode&&e.$emit("onChange")},onClickPoint:function(t){e.$emit("onClickPoint",t)}}))},update:function(e){this.drawing&&this.drawing.setDetailData(e)}}}}).call(this,a("391c"))},6272:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,'.zjapp .number-input[data-v-74068386]{position:relative;display:inline-block;vertical-align:top;width:61px;height:30px;border:1px solid #e5e5e5;border-radius:3px;text-align:center;font-size:14px;color:#333}@media screen and (min-width:320px){.zjapp .number-input[data-v-74068386]{width:50px}}@media screen and (min-width:360px){.zjapp .number-input[data-v-74068386]{width:58px}}@media screen and (min-width:375px){.zjapp .number-input[data-v-74068386]{width:61px}}.zjapp .text[data-v-74068386]{position:relative;display:inline-block;vertical-align:top;width:100%;height:100%;line-height:28px;overflow:hidden}.zjapp .text.disabled[data-v-74068386]{background:#f5f5f5;color:#666}.zjapp .value[data-v-74068386]{position:absolute;top:50%;right:0;margin-top:-14px;min-width:100%;height:28px;color:inherit}.zjapp .placeholder[data-v-74068386],.zjapp .value[data-v-74068386]{line-height:28px;pointer-events:none}.zjapp .placeholder[data-v-74068386]{display:inline-block;vertical-align:top;width:100%;height:100%;color:#b2b2b2}.zjapp .icon-minus[data-v-74068386]{position:absolute;top:-9px;right:-9px;width:18px;height:18px;border-radius:9px;background-color:#ff4546}.zjapp .icon-minus[data-v-74068386]:before{content:"";position:absolute;left:4px;top:8px;width:10px;height:2px;background-color:#fff}.zjapp .icon-minus[data-v-74068386]:after{content:"";position:absolute;left:-5px;top:-5px;width:28px;height:28px;border-radius:9px}.zjapp .number-input-select-all .value-handle[data-v-74068386]{background-color:#cbdaf9}.zjapp .number-input.unqualified[data-v-74068386]{border:1px solid #ffe8e8;background-color:#fff3f3;color:#ff5050}.zjapp .number-input.qualified .text[data-v-74068386]{color:#333}.zjapp .number-input.number-input-focus[data-v-74068386]{border-color:#4275e8;box-shadow:0 0 8px 0 rgba(66,117,232,.37)}.zjapp .number-input.number-input-empty[data-v-74068386]{border-color:#ff3d3d;box-shadow:0 0 8px 0 rgba(255,59,48,.37)}',""])},"65d0":function(e,t,a){"use strict";(function(e){a("f548"),a("e697"),a("ed63"),a("8cf2"),a("2b45"),a("6f84"),a("6d57");var i,n=a("be2b"),r={};function o(){var t,a,i,o,s,l,c,d,p,u,h,m,f,g,b,v,y,_,x=0,k=0,w=1,D=[],C={},P={x:null,y:null},S=0,V=0,I=0,j=null,M=null,R=!1,O=!1,z=0,T=!1,E=["1","2","3","删除","4","5","6","-","7","8","9",".","上一项","0","下一项","关闭"],N=null,$=null,B={},A=this,q={data:[],width:document.documentElement.clientWidth,height:0,src:"",clickCallback:function(){},pointRadius:8,pointRatio:2,clickDelay:500};function L(e,a){var i=t.getBoundingClientRect();return{x:e-i.left*(t.width/(i.width*o)),y:a-i.top*(t.height/(i.height*o))}}function F(){a.clearRect(0,0,t.width,t.height),a.drawImage(i,0,0,i.width,i.height,x,k,i.width*w,i.height*w),q.points.forEach((function(e,t){!function(e,t,i,n,r,o,s){a.save(),null!==N&&N===n&&(a.beginPath(),a.fillStyle="rgba(66, 117, 232, "+(.6*(1-S)+.1)+")",a.arc(e,t,i*(1+S),0,2*Math.PI,!1),a.fill()),s.isWarning&&N!==n&&(a.beginPath(),a.fillStyle="rgba(252, 139, 1, "+(.6*(1-I)+.1)+")",a.arc(e,t,i*(1+I),0,2*Math.PI,!1),a.fill()),a.beginPath(),s.isWarning&&N!==n?a.fillStyle="#ff7439":o&&(a.fillStyle=o),a.arc(e,t,i,0,2*Math.PI,!1),a.globalAlpha=.6,a.fill(),a.globalAlpha=1,s.isWarning&&N!==n?a.strokeStyle="#ff7439":o&&(a.strokeStyle=o),a.lineWidth=1,a.stroke()}(e.x*w/o+x/o,e.y*w/o+k/o,q.pointRadius,t,0,N===t?"#4275e8":e.color||(e.isQualified?"#0bc666":"#ff3c46"),e),e.index=t})),function(){var t=H(),i=W(),n=i.w,r=i.h,o=K(),s=o.x,l=o.y;if(!t||!R)return;a.fillStyle="rgba(0,0,0,0.8)",a.beginPath(),a.arc(s+5,l+5,5,Math.PI,1.5*Math.PI),a.lineTo(n+s-5,l),a.arc(s+n-5,l+5,5,1.5*Math.PI,0),a.lineTo(s+n,l+r-5),a.arc(s+n-5,l+r-5,5,0,.5*Math.PI),a.lineTo(s+n/2+5,l+r),a.lineTo(s+n/2,l+r+5),a.lineTo(s+n/2-5,l+r),a.lineTo(s+5,l+r),a.arc(s+5,l+r-5,5,.5*Math.PI,Math.PI),a.lineTo(s,l+5),a.closePath(),a.fill(),M&&(a.lineCap="round",a.lineJoin="round",a.beginPath(),a.arc(s-26,l+r/2,16,0,2*Math.PI),a.closePath(),a.fill(),a.beginPath(),a.strokeStyle="#ff3d3d",a.lineWidth=2,a.moveTo(s-34,l+r/2),a.lineTo(s-18,l+r/2),a.stroke(),a.beginPath(),a.arc(s+n+26,l+r/2,16,0,2*Math.PI),a.closePath(),a.fill(),a.beginPath(),a.strokeStyle="#0bc666",a.lineWidth=2,a.moveTo(s+n+18,l+r/2-1),a.lineTo(s+n+24,l+r/2+5),a.lineTo(s+n+35,l+r/2-6),a.stroke(),a.lineCap="butt",a.lineJoin="miter");!function(t,i){var n,r,o,s,l,c=M?"#ffffff":"#b5b5b5",d=[];t=t+5+.5,i=i+5+.5,a.lineWidth=1,a.textAlign="center",a.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',1===y?e.each(q.data.problemData,(function(e,n){U({x:t+79*n,y:i,borderColor:$===n?c:"#b5b5b5",label:q.data.problemData.length>1?e.checkItem.item_name:"实测值",val:he(e.realityVal[N].val)?e.realityVal[N].val:M?"":"未填",valColor:he(e.realityVal[N].val)?e.realityVal[N].isExceed?"#ff4545":"#ffffff":"#b5b5b5"}),n&&(a.beginPath(),a.strokeStyle="#b5b5b5",a.moveTo(t+79*n-9.5,i+16.5),a.lineTo(t+79*n-.5,i+16.5),a.stroke())})):2===y?(n=q.points[N],d=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===n.area})),e.each(d,(function(e,a){var n=Math.floor(2*a/3);U({x:t+69*(2*a%3),y:i+33*n,borderColor:$===a?c:"#b5b5b5",label:"实测值",val:e.val,valColor:e.isExceed?"#ff4545":"#ffffff",borderRadius:"n"})}))):3===y?(U({x:t,y:i,borderColor:0===$?c:"#b5b5b5",label:"实测值",val:q.data.problemData[0].realityVal[N].val,valColor:q.data.problemData[0].realityVal[N].isExceed?"#ff4545":"#ffffff",borderRadius:"l"}),U({x:t+69,y:i,borderColor:1===$?c:"#b5b5b5",label:"设计值",val:q.data.problemData[0].realityVal[N].setVal,valColor:"#ffffff",borderRadius:"r"}),null!==$&&(a.beginPath(),a.strokeStyle="#ffffff",a.moveTo(t+69,i-.5),a.lineTo(t+69,i+33+.5),a.stroke())):4===y||(5===y||6===y?(t+=45,n=q.points[N],d=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===n.area})),o=e.groupBy(d,"label"),e.each(o,(function(n,r){var o=r,s="高"===r||"开间"===r?0:1;"高"===r&&(o="高度"),"宽"===r&&(o="宽度"),a.fillStyle="#ffffff",a.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',a.fillText(o,t-25,i+44*s+16.5+6),e.each(n,(function(e,a){U({x:t+69*a,y:i+44*s,borderColor:$===3*s+a?c:"#b5b5b5",label:"实测值",val:e.val,valColor:e.isExceed?"#ff4545":"#ffffff",borderRadius:0===a?"l":"n"})})),U({x:t+138,y:i+44*s,borderColor:$===3*s+2?c:"#b5b5b5",label:"设计值",val:n[0].setVal,valColor:"#ffffff",borderRadius:"r"})})),null!==$&&(s=Math.floor($/3),2!==(l=$%3)&&(a.beginPath(),a.strokeStyle="#ffffff",a.moveTo(t+69*(l+1),i+44*s-.5),a.lineTo(t+69*(l+1),i+44*s+33+.5),a.stroke()))):7===y||12===y||13===y?(n=q.points[N],d=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===n.area})),e.each(d,(function(e,a){U({x:t+69*a,y:i,borderColor:$===a?c:"#b5b5b5",label:"实测值",val:e.val,valColor:e.isExceed?"#ff4545":"#ffffff",borderRadius:0===a?"l":2===a?"r":"n"})})),0!==$&&1!==$||(a.beginPath(),a.strokeStyle="#ffffff",a.moveTo(t+69*($+1),i-.5),a.lineTo(t+69*($+1),i+33+.5),a.stroke())):8===y&&(r=q.data.problemData[0].realityVal[N],M?(U({x:t,y:i,borderColor:1===r.val?"#4275e8":"#ffffff",bgColor:1===r.val?"#4275e8":"",val:"合格",valColor:"#ffffff"}),U({x:t+69+10,y:i,borderColor:0===r.val?"#4275e8":"#ffffff",bgColor:0===r.val?"#4275e8":"",val:"不合格",valColor:"#ffffff"})):U({x:t,y:i,borderColor:"#ffffff",bgColor:"",val:1===r.val?"合格":"不合格",valColor:"#ffffff"})))}(s,l)}(),function(){var e,t=H(),i=240,n=180,r=Y(),o=r.x,s=r.y;if(t&&O&&null!==$){for(e in a.shadowBlur=5,a.shadowColor="#999",a.fillStyle="#ffffff",a.beginPath(),a.arc(o+6,s+6,6,Math.PI,1.5*Math.PI),a.lineTo(i+o-6,s),a.arc(o+i-6,s+6,6,1.5*Math.PI,0),a.lineTo(o+i,s+n-6),a.arc(o+i-6,s+n-6,6,0,.5*Math.PI),a.lineTo(o+6,s+n),a.arc(o+6,s+n-6,6,.5*Math.PI,Math.PI),a.lineTo(o,s+6),a.closePath(),a.fill(),a.shadowBlur=0,a.shadowColor="transparent",B)e=parseInt(e),a.fillStyle="#f2f2f2",a.beginPath(),0===e?a.arc(o+e%4*60+6,s+45*Math.floor(e/4)+6,6,Math.PI,1.5*Math.PI):a.moveTo(o+e%4*60,s+45*Math.floor(e/4)),3===e?(a.lineTo(o+60*(e%4+1)-6,s+45*Math.floor(e/4)),a.arc(o+60*(e%4+1)-6,s+45*Math.floor(e/4)+6,6,1.5*Math.PI,0)):a.lineTo(o+60*(e%4+1),s+45*Math.floor(e/4)),15===e?(a.lineTo(o+60*(e%4+1),s+(Math.floor(e/4)+1)-6),a.arc(o+60*(e%4+1)-6,s+45*(Math.floor(e/4)+1)-6,6,0,.5*Math.PI)):a.lineTo(o+60*(e%4+1),s+45*(Math.floor(e/4)+1)),12===e?(a.lineTo(o+e%4*60+6,s+45*(Math.floor(e/4)+1)),a.arc(o+e%4*60+6,s+45*(Math.floor(e/4)+1)-6,6,.5*Math.PI,Math.PI)):a.lineTo(o+e%4*60,s+45*(Math.floor(e/4)+1)),a.closePath(),a.fill();a.strokeStyle="#d9d9d9",a.lineWidth=.5,a.beginPath(),a.moveTo(o,s+45.25),a.lineTo(o+i,s+45.25),a.moveTo(o,s+90.25),a.lineTo(o+i,s+90.25),a.moveTo(o,s+135.25),a.lineTo(o+i,s+135.25),a.moveTo(o+60.25,s),a.lineTo(o+60.25,s+n),a.moveTo(o+120.25,s),a.lineTo(o+120.25,s+n),a.moveTo(o+180.25,s),a.lineTo(o+180.25,s+n),a.closePath(),a.stroke(),a.textAlign="center",E.forEach((function(e,t){var i=Math.floor(t/4),n=t%4;3===t?(a.fillStyle="#999999",a.beginPath(),a.moveTo(o+60*n+18,s+45*i+22.5),a.lineTo(o+60*n+25,s+45*i+14.5),a.lineTo(o+60*n+40,s+45*i+14.5),a.arc(o+60*n+40,s+45*i+16.5,2,1.5*Math.PI,0),a.lineTo(o+60*n+42,s+45*i+28.5),a.arc(o+60*n+40,s+45*i+28.5,2,0,.5*Math.PI),a.lineTo(o+60*n+25,s+45*i+30.5),a.closePath(),a.fill(),a.beginPath(),a.strokeStyle="#ffffff",a.lineWidth=2,a.moveTo(o+60*n+28,s+45*i+18),a.lineTo(o+60*n+37,s+45*i+27),a.moveTo(o+60*n+37,s+45*i+18),a.lineTo(o+60*n+28,s+45*i+27),a.stroke()):(a.fillStyle="#111111",a.font=3===t||12===t||14===t||15===t?'14px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif':'18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',15===t&&(a.fillStyle="#4275e8"),(12===t&&!b||14===t&&!v)&&(a.fillStyle="#b2b2b2"),a.fillText(e,o+60*n+30,s+45*i+29))}))}}(),null!==N&&V<2&&(clearTimeout(m),m=setTimeout((function(){(S+=.07)>=1&&(S=0,V+=1),S=V>=2?0:parseFloat(S.toFixed(2)),F()}),40)),f&&(clearTimeout(g),g=setTimeout((function(){(I+=.07)>=1&&(I=0),I=parseFloat(I.toFixed(2)),F()}),40))}function H(){return(null===N?null:q.points[N])||null}function U(e){var t=e.x,i=e.y,n=e.w||69,r=e.h||33,o=e.borderColor,s=e.bgColor,l=e.label?e.label.substr(0,4):"",c=e.labelColor,d=he(e.val)?e.val.toString().substr(-(e.val.toString().indexOf(".")<0?7:8)):"",p=e.valColor,u=e.borderRadius||"a";a.strokeStyle=o,a.beginPath(),"a"===u||"l"===u?a.arc(t+2,i+2,2,Math.PI,1.5*Math.PI):a.moveTo(t,i),he(l)&&he(d)&&(a.lineTo(t+(n-8*l.length)/2-2,i),a.moveTo(t+(n+8*l.length)/2+2,i)),"a"===u||"r"===u?(a.lineTo(t+n-2,i),a.arc(t+n-2,i+2,2,1.5*Math.PI,0),a.lineTo(t+n,i+r-2),a.arc(t+n-2,i+r-2,2,0,.5*Math.PI)):(a.lineTo(t+n,i),a.lineTo(t+n,i+r)),"a"===u||"l"===u?(a.lineTo(t+2,i+r),a.arc(t+2,i+r-2,2,.5*Math.PI,Math.PI),a.lineTo(t,i+2)):(a.lineTo(t,i+r),a.lineTo(t,i-.5)),a.stroke(),he(s)&&(a.fillStyle=s,a.fill()),he(l)&&(a.textAlign="center",he(d)?(a.fillStyle=c||o,a.font='8px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',a.fillText(l,t+n/2,i+3)):(a.fillStyle=c||"#808080",a.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',a.fillText(l,t+n/2,i+r/2+6))),he(d)&&(a.textAlign="center",a.fillStyle=p,a.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',a.fillText(d,t+n/2,i+r/2+6))}function W(){var e,t;return 1===y?(e=80*_,t=44):2===y?(e=218,t=110):3===y?(e=149,t=44):4===y||(5===y||6===y?(e=263,t=88):7===y?(e=218,t=44):8===y?M?(e=160,t=44):(e=80,t=44):12===y?(e=218,t=44):13===y&&(e=149,t=44)),{w:e,h:t}}function K(){var e=H(),t=W();return e?{x:e.x*w/o+x/o-t.w/2,y:e.y*w/o+k/o-t.h-q.pointRadius-10}:{x:null,y:null}}function Y(){var e=H();return e?{x:Math.round(e.x*w/o+x/o-120),y:Math.round(e.y*w/o+k/o+q.pointRadius+10)}:{x:null,y:null}}function Q(e){var t=e.changedTouches.length,a=e.touches.length;return 1===t||2===t||2===a}function G(e){return 1===e.touches.length}function J(e){switch(e){case"t":if(k>=l[1])return!0;break;case"r":if(x<=s[0])return!0;break;case"b":if(k<=l[0])return!0;break;case"l":if(x>=s[1])return!0}return!1}function X(e){if(A.drawMode,d=!1,G(e))te(e);else if(Q(e)){var t,a=e.touches[0],i=e.touches[1],n=L(a.clientX,a.clientY),r=L(i.clientX,i.clientY);t=Math.sqrt(Math.pow(r.x-n.x,2)+Math.pow(r.y-n.y,2)),c=w/t}}function Z(e){if("img"!==A.drawMode){var a,i,n,r,u,h=e.touches[0];if(G(e)){if(p||te(e),n=h,r=(i=p).cx-n.pageX,u=i.cy-n.pageY,("b"===(a=Math.abs(r)>Math.abs(u)?r>0?"r":r<0?"l":"":u>0?"b":u<0?"t":"")&&J("b")||"t"===a&&J("t")||"r"===a&&J("r")||"l"===a&&J("l"))&&!q.hasBouncing)return;e.preventDefault(),e.stopPropagation(),(Math.abs(h.clientX-p.cx)>3||Math.abs(h.clientY-p.cy)>3)&&function(e){var a=e.touches[0],i=L(a.clientX,a.clientY),n=(i.x-p.x)*o,r=(i.y-p.y)*o,c={x:x<s[0]?x-s[0]:x>s[1]?x-s[1]:0,y:k<l[0]?k-l[0]:k>l[1]?k-l[1]:0},u=x+n,h=k+r;d||(p.x=i.x,p.y=i.y,u<=s[0]||u>=s[1]?!1===q.hasBouncing?x=u<=s[0]?s[0]:s[1]:x+=n*Math.abs(t.width/2-c.x)/t.width/2:x+=n,h<=l[0]||h>=l[1]?!1===q.hasBouncing?k=h<=l[0]?l[0]:l[1]:k+=r*Math.abs(t.height/2-c.y)/t.height/2:k+=r,F())}(e)}else Q(e)&&function(e){var t,a,i,n,r,s=e.touches[0],l=e.touches[1],p=L(s.clientX,s.clientY),u=L(l.clientX,l.clientY),h=Math.sqrt(Math.pow(u.x-p.x,2)+Math.pow(u.y-p.y,2));d=!0,i=function(e){return(e=e||w)<D[0]?e-D[0]:e>D[1]?e-D[1]:0}(t=c*h),n=D[0]/2,r=(Math.abs(i)>n?1:Math.abs(i)/n)/2,t-=q.hasBouncing?i?i*r:0:i,C=a={x:(p.x+u.x)/2*o,y:(p.y+u.y)/2*o},x=a.x-t/w*(a.x-x),k=a.y-t/w*(a.y-k),t!==w&&(w=t,de(),F())}(e)}}function ee(t){!function(t){var a=t.changedTouches[0];p&&Date.now()-p.time<q.clickDelay&&Math.abs(a.clientX-p.cx)<6&&Math.abs(a.clientY-p.cy)<6&&function(t){var a,s,l,c,d,p=t.changedTouches[0],u=L(p.clientX,p.clientY),h={x:((u.x-x/o)/w*o).toFixed(1),y:((u.y-k/o)/w*o).toFixed(1)},m=ce(h),f=R?W():null,g=R?K():null,_=R?{x:u.x-g.x,y:u.y-g.y}:null,D={w:240,h:180},C=O?Y():null,P=O?{x:u.x-C.x,y:u.y-C.y}:null;f&&_.x>5&&_.x<f.w-5&&_.y>0&&_.y<f.h?c="input":_&&_.x>-52&&_.x<0&&_.y>(f.h-32-10)/2&&_.y<(f.h+32+10)/2?c="remove":_&&_.x>f.w&&_.x<f.w+20+32&&_.y>(f.h-32-10)/2&&_.y<(f.h+32+10)/2?c="save":P&&P.x>0&&P.x<D.w&&P.y>0&&P.y<D.h?c="keyborad":m?c="point":h.x>=0&&h.x<=i.width&&h.y>=0&&h.y<=i.height&&(c="img");"img"!==A.drawMode&&(M?("input"===c&&(1===y?a=Math.floor((_.x-5)/80):2===y?a=(a=(Math.floor(_.x/69)+3*Math.floor(_.y/33))%2?"":(Math.floor(_.x/69)+3*Math.floor(_.y/33))/2)<0||a>4?"":a:3===y?a=Math.floor((_.x-5)/69):3===y||(5===y||6===y?_.x>50&&(a=Math.floor((_.x-50)/69)+3*Math.floor(_.y/44)):7===y?a=Math.floor((_.x-5)/69):8===y?(a=Math.floor((_.x-5)/75)?0:1,q.data.problemData[0].realityVal[N].val=a,setTimeout((function(){re($),ie(),F()}),200)):12!==y&&13!==y||(a=Math.floor((_.x-5)/69))),he(a)&&ne(a)),"remove"===c&&(re($,!0),q.data=n.a.delPoint(q.data,N),ie()),"save"===c&&(re($),ie()),"keyborad"===c&&(function(t){var a=$;if(!he(N)||!he($))return;var i=oe(N,$),n=E[t];i&&i.points&&(e.each(i.points,(function(e){isNaN(n)?"删除"===n?i.isSetVal?e.setVal=e.setVal.toString().substr(0,e.setVal.toString().length-1):e.val=e.val.toString().substr(0,e.val.toString().length-1):"-"===n?i.isSetVal?he(e.setVal)||(e.setVal="-"):he(e.val)||(e.val="-"):"."===n?i.isSetVal?he(e.setVal)&&parseFloat(e.setVal)===parseInt(e.setVal)&&(e.setVal=e.setVal+n):he(e.val)&&parseFloat(e.val)===parseInt(e.val)&&(e.val=e.val+n):"上一项"===n?b&&(re($),ne(a-1)):"下一项"===n?v&&(re($),ne(a+1)):"关闭"===n&&(re($),O=!1,$=null):i.isSetVal?e.setVal=(he(e.setVal)?e.setVal:"")+n:e.val=e.val+n})),i.isSetVal&&i.points&&i.points.length&&(o=se(N),s=q.data.problemData[0].checkItem.id,l=q.data.problemData[0].measure_item,e.includes([3,4],y)?r[s]={val:o[0].setVal}:e.includes([5,6],y)&&(r[s]={},e.each(l,(function(t){var a=e.find(o,{label:t}).setVal;r[s]["val-"+t]=a})))));var o,s,l}(s=Math.floor(P.x/60)+4*Math.floor(P.y/45)),function(e){B[e]&&clearTimeout(B[e]);B[e]=setTimeout((function(){delete B[e],F()}),300),F()}(s)),"point"===c&&(re($),l=se(N),!e.some(l,(function(e){return he(e.val)||he(e.setVal)}))&&he(N)&&(q.data=n.a.delPoint(q.data,N),q.points=me(q.data),m=ce(h)),ae(m.index)),"img"===c&&(re($),l=se(N),!e.some(l,(function(e){return he(e.val)||he(e.setVal)}))&&he(N)&&(q.data=n.a.delPoint(q.data,N)),q.data=n.a.addPoint(q.data,{x:h.x,y:h.y}),q.points=me(q.data),ae(q.points.length-1,!0))):("point"===c&&((m=ce(h)).pointId?q.onClickPoint&&q.onClickPoint(m):ae(m.index)),"img"===c&&ie()));d={type:m?"point":"",pos:u,x:h.x,y:h.y,point:m,btn:""},q.clickCallback&&q.clickCallback(d),F()}(t);ue(t)}(t)}function te(e){var t=e.touches[0],a=L(t.clientX,t.clientY);p={x:a.x,y:a.y,cx:t.clientX,cy:t.clientY,time:Date.now()}}function ae(t,a){var i,n,r,s,l,c=T?42:0;V=0,l=function(t){var a,i=[];if(!he(t))return null;a=q.points[t].area,1===y?e.each(q.data.problemData,(function(e){i.push(e.realityVal[t])})):2===y?i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===a})):3===y?i=q.data.problemData[0].realityVal[t]:4===y||(5===y||6===y||7===y?i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===a})):8===y?i=q.data.problemData[0].realityVal[t]:12!==y&&13!==y||(i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===a}))));i&&!e.isArray(i)&&(i=[i]);return i}(N=t),e.each(l,(function(e){delete e.isWarning})),f=e.some(q.points,{isWarning:!0}),r=K(),s=W(),r.x-c<0?i=(r.x-c)*o:r.x+s.w+c>q.width&&(i=(r.x+s.w+c-q.width)*o),r.y<0&&(n=r.y*o),1===y?z=q.data.problemData.length:2===y?z=5:3===y?z=2:4===y?z=0:5===y||6===y?z=6:7===y||12===y?z=3:13===y&&(z=2),R=!0,le(x-(i||0),k-(n||0)),M&&a&&8!==y&&ne($||0),de()}function ie(){N=null,R=!1,O=!1,"view"!==q.data.mode&&e.each(q.data.problemData,(function(e){n.a.problemHandle(e)})),q.points=me(q.data),q.onChange&&q.onChange()}function ne(t){var a,i,n,s,l,c,d,p=Y(),u=240,h=180;p.x<0?a=p.x*o:p.x+u>q.width&&(a=(p.x+u-q.width)*o),p.y+h>q.height&&(i=(p.y+h-q.height)*o),$=t,b=t>0,v=t<z-1,M&&8!==y&&(O=!0,le(x-(a||0),k-(i||0))),n=q.data.problemData[0].checkItem.id,s=se(N),l=r[n],c=e.includes([3,4,5,6],y),d=e.some(s,(function(e){return!he(e.setVal)})),c&&d&&l&&!e.isEmpty(l)&&(e.includes([3,4],y)?he(l.val)&&e.each(s,(function(e){e.setVal=l.val})):e.each(s,(function(e){var t=l["val-"+e.label];he(t)&&(e.setVal=t)}))),de()}function re(t,a){var i=oe(N,t),r=[-9999999.99999,9999999.99999];i&&i.points&&e.each(i.points,(function(e){if(i.isSetVal){if(e.setVal=isNaN(e.setVal)?"":he(e.setVal)?Math.floor(1e5*parseFloat(e.setVal))/1e5:"",""===e.setVal)return;e.setVal<r[0]?e.setVal=r[0]:e.setVal>r[1]&&(e.setVal=r[1])}else{if(e.val=isNaN(e.val)?"":he(e.val)?Math.floor(1e5*parseFloat(e.val))/1e5:"",""===e.val)return;e.val<r[0]?e.val=r[0]:e.val>r[1]&&(e.val=r[1])}})),e.each(q.data.problemData,(function(e){n.a.pointsHandle(e),n.a.problemHandle(e)})),$=null,O=!1,!a&&q.onChange&&q.onChange()}function oe(t,a){var i,n,r,o,s=!1;return he(t)&&he(a)?(1===y?n=q.data.problemData[a].realityVal[t]:2===y?(r=q.points[t].area,n=(i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===r})))[a]):3===y?(n=q.data.problemData[0].realityVal[t],s=1===a):4===y||(5===y||6===y?(5===y?o=["高","宽"]:6===y&&(o=["开间","进深"]),r=q.points[t].area,i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===r})),n=e.filter(i,(function(e,t){return e.label===(0===Math.floor(a/3)?o[0]:o[1])&&(2===a||5===a||a%3%2==t%2)})),2!==a&&5!==a||(s=!0)):7===y?(r=q.points[t].area,n=(i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===r})))[a]):8===y?n=q.data.problemData[0].realityVal[t]:12!==y&&13!==y||(r=q.points[t].area,n=(i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===r})))[a])),n&&!e.isArray(n)&&(n=[n]),{points:n,isSetVal:s}):null}function se(t){var a,i=[];return t=he(t)?t:N,he(t)?(1===y?e.each(q.data.problemData,(function(a){e.each(a.realityVal,(function(e,a){t===a&&i.push(e)}))})):2===y?(a=q.points[t].area,i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===a}))):3===y?i=e.filter(q.data.problemData[0].realityVal,(function(e,a){return t===a})):4===y||(5===y||6===y||7===y?(a=q.points[t].area,i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===a}))):8===y?i=e.filter(q.data.problemData[0].realityVal,(function(e,a){return t===a})):12!==y&&13!==y||(a=q.points[t].area,i=e.filter(q.data.problemData[0].realityVal,(function(e){return e.area===a})))),i):i}function le(e,t){null===P.x&&null===P.y?P={x:e,y:t}:(P.x===e&&P.y===t||(P.x<e?P.x=e<=x?P.x:e:P.x=e>=x?P.x:e,P.y<t?P.y=t<=k?P.y:t:P.y=t>=k?P.y:t),e=P.x,t=P.y),e===x&&t===k||(u=!0,clearTimeout(h),h=setTimeout((function(){var a=!1;Math.abs(e-x)<1?x=e:(x+=.5*(e-x),a=!0),Math.abs(t-k)<1?k=t:(k+=.5*(t-k),a=!0),a?(le(e,t),F()):(u=!1,P={x:null,y:null})}),20))}function ce(e){var t,a=q.pointRadius*q.pointRatio+1;return q.points.forEach((function(i){var n=Math.sqrt(Math.pow(Math.abs(e.x-i.x),2)+Math.pow(Math.abs(e.y-i.y),2)),r=n*w/o;r<=q.pointRadius*q.pointRatio&&r<a&&(t=i,a=n)})),t}function de(){var e=pe(w);s=e.x,l=e.y}function pe(e){var t,a,n,r,s,l,c,d,p,u,h=K(),m=W(),f=Y(),g=240,b=180,v=T?42:0;return e=e||w,a=(t=q.width*o-i.width*e)>0?t/=2:0,r=(n=q.height*o-i.height*e)>0?n/=2:0,R&&(r+=s=(s=k-h.y*o)>0&&s>r?s-r:0),(R||O)&&(p=R?(h.x+m.w+v)*o:0,u=O?(f.x+g)*o:0,t+=l=(l=x+i.width*w-Math.max(p,u))<0&&l<-a?l+a:0),O&&(n+=c=(c=k+i.height*w-(f.y+b)*o)<0&&c<-r?c+r:0),(R||O)&&(p=R?(h.x-v)*o:1/0,u=O?f.x*o:1/0,a+=d=(d=x-Math.min(p,u))>0&&d>a?d-a:0),{x:[t,a],y:[n,r]}}function ue(e,t){if(!(e&&"touchend"===e.type&&0!==e.touches.length||u)){var a=t||(w<D[0]?D[0]:w>D[1]?D[1]:w),n=pe(a),r=n.x,o=n.y;(x<r[0]||x>r[1]||k<o[0]||k>o[1]||w<D[0]||w>D[1])&&setTimeout((function(){var e=C.x?C.x-a*(C.x-x)/w:x,n=C.y?C.y-a*(C.y-k)/w:k,s=!1;e=e<r[0]?r[0]:e>r[1]?r[1]:e,n=n<o[0]?o[0]:n>o[1]?o[1]:n,Math.abs(e-x)<1?x=e:(x+=.5*(e-x),s=!0),Math.abs(n-k)<1?k=n:(k+=.5*(n-k),s=!0),Math.abs(a-w)*i.width*i.height<5?w=a:(w+=.5*(a-w),s=!0),s&&(ue("",t),F())}),20)}}function he(e){return""!==e&&null!=e}function me(t){var a,i={};return a=n.a.getDrawPoints(t),e.isEmpty(t.pointStatus)||(e.each(t.pointStatus,(function(e){i[e.id]=e.status})),e.each(a,(function(e){var t=e.pointId?i[e.pointId]:"";t&&(e.color={"待整改":"#FF3C46","待复验":"#FF8E24","已通过":"#0BC666","非正常关闭":"#666666"}[t])}))),a}function fe(t,a){q.data=t,q.points=me(q.data),j=q.data.mode,M="edit"===j||"reedit"===j,R=!1,O=!1,z=0,y=q.data.problemData[0].passrate_mode,_=q.data.problemData.length,T=M,N=null,$=null,f=e.some(q.points,{isWarning:!0}),!1!==a&&F()}this.init=function(e){for(var n in e)e.hasOwnProperty(n)&&(q[n]=e[n]);var r,c,d;if(A.drawMode=e.drawMode||"edit",t=q.canvas)return t.className=t.className+" canvas-diagram",t.width=q.width,t.height=q.height,(a=t.getContext("2d")).strokeStyle="transparent",a.fillStyle="transparent",c=(r=a).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||r.mozBackingStorePixelRatio||r.msBackingStorePixelRatio||r.oBackingStorePixelRatio||r.backingStorePixelRatio||1,(o=(window.devicePixelRatio||1)/c)>1&&(t.style.height=t.height+"px",t.style.width=t.width+"px",t.width*=o,t.height*=o),!a.extended&&function(e){var t=function(e){var t=e.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/t}(e);if(1===t)return;(function(e,t){for(var a in e)e.hasOwnProperty(a)&&t(e[a],a)})({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(a,i){var n;e[i]=(n=e[i],function(){var e,i,r=Array.prototype.slice.call(arguments);if("all"===a)r=r.map((function(e){return e*t}));else if(Array.isArray(a))for(e=0,i=a.length;e<i;e++)r[a[e]]*=t;return n.apply(this,r)})})),e.stroke=(a=e.stroke,function(){this.lineWidth*=t,a.apply(this,arguments),this.lineWidth/=t}),e.fillText=function(e){return function(){var a=Array.prototype.slice.call(arguments);a[1]*=t,a[2]*=t,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,a,i){return a*t+i})),e.apply(this,a),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,a,i){return a/t+i}))}}(e.fillText),e.strokeText=function(e){return function(){var a=Array.prototype.slice.call(arguments);a[1]*=t,a[2]*=t,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,a,i){return a*t+i})),e.apply(this,a),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,a,i){return a/t+i}))}}(e.strokeText),e.extended=!0;var a}(a),a.clearRect(0,0,t.width,t.height),a.fillStyle="#999",a.font='18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',a.fillText("加载中...",(q.width-70)/2,(q.height+18)/2),fe(q.data,!1),t.addEventListener("touchstart",X),t.addEventListener("touchmove",Z),t.addEventListener("touchend",ee),i=q.img,q.width/i.width<q.height/i.height?(d=q.width/i.width,x=0,k=(q.height-i.height*d)/2*o):(d=q.height/i.height,x=(q.width-i.width*d)/2*o,k=0),D=[w=d*o,w<.25?2:8*w],s=[x,x],l=[k,k],F(),this},this.reset=function(){return x=0,k=0,w=D[0],t&&(t.removeEventListener("touchstart",X),t.removeEventListener("touchmove",Z),t.removeEventListener("touchend",ee)),this},this.destroy=function(){q=null,t.width=0,t.height=0,t=null,a=null},this.showLoading=function(){a.clearRect(0,0,t.width,t.height),a.fillStyle="#999",a.font='18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',a.fillText("加载中...",(q.width-70)/2,(q.height+18)/2)},this.setPointData=function(e){return q.points=e,F(),this},this.setDetailData=fe,this.getDetailData=function(){var t=$;return he(t)&&(re(t),ne(t)),e.each(q.data.problemData,(function(e){n.a.pointsHandle(e),n.a.problemHandle(e)})),F(),q.data},this.startWarning=function(){f=!0},this.endWarning=function(){f=!1},this.setMode=function(e){A.drawMode=e,"img"===e&&ue("",D[0]),q.onSetMode&&q.onSetMode(e)}}i={init:function(e){var t=new o;return t.init(e),t}},t.a=i}).call(this,a("391c"))},6948:function(e,t,a){"use strict";a("2b45"),a("163d");var i=a("329b"),n=a("8c3d").a,r=(a("b55a"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"slide-up"},on:{leave:e.startClose,afterLeave:e.onClose}},[e.show?a("div",{staticClass:"number-keyboard-con",class:{"ios-bezel-less":e.isIOSBezelLess},style:{"z-index":e.zIndex},on:{touchstart:e.keyTouchstart,touchend:e.keyTouchend}},["true-or-false"===e.type?[a("div",{staticClass:"keyboard-row"},[a("div",{staticClass:"row-span-3 keys-row"},[a("div",{staticClass:"keys col color-green",attrs:{direct:"setTure"}},[a("icon",{attrs:{name:"qualified"}}),e._v("\n            合格\n          ")],1),a("div",{staticClass:"keys col color-red",attrs:{direct:"setFalse"}},[a("icon",{attrs:{name:"unqualified"}}),e._v("\n            不合格\n          ")],1)]),a("div",{staticClass:"row-span-1"},[a("div",{staticClass:"keys-row"},[a("div",{staticClass:"keys keys-ok",attrs:{direct:"closeKeyboard"}},[a("icon",{attrs:{name:"keyboard-close"}})],1)]),a("div",{staticClass:"keys-row"},[a("div",{staticClass:"keys keys-delete",attrs:{direct:"delete"}},[a("icon",{attrs:{name:"keyboard-delete"}})],1)])])]),a("div",{staticClass:"keyboard-row"},[a("div",{staticClass:"keys keys-prev",class:{disabled:!e.hasPrev},attrs:{direct:"prev"}},[e._v("\n          上一项\n        ")]),a("div",{staticClass:"keys keys-next",class:{disabled:!e.hasNext},attrs:{direct:"next"}},[e._v("\n          下一项\n        ")])])]:[a("div",{staticClass:"keyboard-row"},[a("div",{staticClass:"keys",attrs:{direct:"1"}},[e._v("1")]),a("div",{staticClass:"keys",attrs:{direct:"2"}},[e._v("2")]),a("div",{staticClass:"keys",attrs:{direct:"3"}},[e._v("3")]),a("div",{staticClass:"keys keys-ok",attrs:{direct:"closeKeyboard"}},[a("icon",{attrs:{name:"keyboard-close"}})],1)]),a("div",{staticClass:"keyboard-row"},[a("div",{staticClass:"keys",attrs:{direct:"4"}},[e._v("4")]),a("div",{staticClass:"keys",attrs:{direct:"5"}},[e._v("5")]),a("div",{staticClass:"keys",attrs:{direct:"6"}},[e._v("6")]),a("div",{staticClass:"keys keys-delete",attrs:{direct:"delete"}},[a("icon",{attrs:{name:"keyboard-delete"}})],1)]),a("div",{staticClass:"keyboard-row"},[a("div",{staticClass:"keys",attrs:{direct:"7"}},[e._v("7")]),a("div",{staticClass:"keys",attrs:{direct:"8"}},[e._v("8")]),a("div",{staticClass:"keys",attrs:{direct:"9"}},[e._v("9")]),a("div",{staticClass:"keys keys-prev",class:{disabled:!e.hasPrev},attrs:{direct:"prev"}},[e._v("\n          上一项\n        ")])]),a("div",{staticClass:"keyboard-row"},[a("div",{staticClass:"keys",class:{disabled:e.isDisabledMinus},attrs:{direct:"-"}},[e._v("-")]),a("div",{staticClass:"keys",attrs:{direct:"0"}},[e._v("0")]),a("div",{staticClass:"keys",class:{disabled:e.isDisabledPoint},attrs:{direct:"."}},[e._v(".")]),a("div",{staticClass:"keys keys-next",class:{disabled:!e.hasNext},attrs:{direct:"next"}},[e._v("\n          下一项\n        ")])])]],2):e._e()])}),[],!1,null,"6337f428",null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));var l=s,c=a("6f9e"),d=a("4360"),p={name:"NumberInput",props:{value:{type:[String,Number]},type:{type:String,default:"all"},decimal:{type:Number,default:2},placeholder:{type:String,default:""},nextEvent:{type:Function},range:{type:Array,default:function(){return[]}},overflowAutoRecover:{type:Boolean,default:!1},required:{type:Boolean},emptyAutoRecover:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},isSetEmptyTip:{type:Boolean,default:!1}},data:function(){return{rawValue:"",isFocusing:!1,isSelectAll:!1,keyboardHeight:d.a.state.app.isIOSBezelLess?266:"true-or-false"===this.type?176:232}},computed:{min:function(){return isNaN(this.range[0])?-1/0:parseFloat(this.range[0])},max:function(){return isNaN(this.range[1])?1/0:parseFloat(this.range[1])}},created:function(){c.a.$on("numberInputBlur",this.setBlur),c.a.$on("numberKeyboardClose",this.setBlur)},beforeDestroy:function(){this.isFocusing&&l.closeKeyboard()},destroyed:function(){c.a.$off("numberInputBlur",this.setBlur),c.a.$off("numberKeyboardClose",this.setBlur)},methods:{hasVal:function(e){return null!=e&&""!==e},openKeyboard:function(){this.disabled||(this.isFocusing?this.isSelectAll=!1:(c.a.$emit("numberInputBlur"),this.setFocus(),l.openKeyboard({inputComponent:this})))},setFocus:function(){this.isFocusing=!0,"true-or-false"!==this.type&&(this.isSelectAll=!0),this.rawValue=this.value,l.$on("keyboardInput",this.input),l.$on("keyboardAssign",this.assign),l.$on("keyboardDelete",this.deleteValue),l.$on("keyboardClear",this.clear),this.$emit("focus")},setBlur:function(){if(this.isFocusing){var e=this.checkValue();this.isFocusing=!1,this.isSelectAll=!1,l.$off("keyboardInput",this.input),l.$off("keyboardAssign",this.assign),l.$off("keyboardDelete",this.deleteValue),l.$off("keyboardClear",this.clear),this.$emit("input",e),this.$emit("blur",e),this.$nextTick((function(){l.calcTab()}))}},input:function(e){var t=this.hasVal(this.value)?this.value.toString():"",a="";this.isSelectAll?(a=e,this.isSelectAll=!1):a=t+e,console.log("newValue =====",a),this.$emit("input",a),l.setKeysStatus(a,this.type)},assign:function(e){this.isSelectAll=!1,this.$emit("input",e),l.setKeysStatus(e,this.type)},deleteValue:function(){var e=this.hasVal(this.value)?this.value.toString():"",t="";this.hasVal(e)&&(t=this.isSelectAll?"":e.substr(0,e.length-1)),this.$emit("input",t),l.setKeysStatus(t,this.type)},clear:function(){this.$emit("input",""),l.setKeysStatus("",this.type)},checkValue:function(){var e=this.hasVal(this.value)?this.value.toString():"";"-"===e&&(e=""),"."===e.substr(-1)&&(e=e.substr(0,e.length-1));var t=e.indexOf(".");return t>0&&(e=parseFloat(e.substring(0,t+this.decimal+1))),e=parseFloat(e),isNaN(e)?this.required&&this.emptyAutoRecover?(e=this.rawValue,this.$emit("onEmpty")):e="":(e<this.min&&(e=this.overflowAutoRecover?this.rawValue:this.min,this.$emit("overflowRange")),e>this.max&&(e=this.overflowAutoRecover?this.rawValue:this.max,this.$emit("overflowRange"))),e}}},u=(a("6abe"),Object(r.a)(p,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"number-input component-number-input",class:{"number-input-focus":e.isFocusing,"number-input-empty":e.isSetEmptyTip&&!e.value&&!e.isFocusing,"number-input-select-all":e.isSelectAll,qualified:"true-or-false"===e.type&&1===e.value,unqualified:"true-or-false"===e.type&&0===e.value}},[a("div",{staticClass:"text",class:{disabled:e.disabled},on:{click:function(t){return t.stopPropagation(),e.openKeyboard(t)}}},[e.hasVal(e.value)?a("span",{staticClass:"value"},[a("span",{staticClass:"value-handle"},[e._v(e._s("true-or-false"===e.type?1===e.value?"合格":"不合格":e.value))])]):a("span",{staticClass:"placeholder"},[e._v("\n      "+e._s(e.placeholder)+"\n    ")])]),e._t("extend")],2)}),[],!1,null,"74068386",null));t.a=u.exports},"6abe":function(e,t,a){"use strict";a("bebe")},"6cb79":function(e,t,a){"use strict";a("23a4")},"732d":function(e,t,a){"use strict";(function(e){a("ed63"),a("8cf2");var i=a("fd50"),n=a("ed08"),r=a("3bd5"),o=a("e2a7"),s=a("6144"),l=a("bc69"),c=a("6bf2"),d=a.n(c),p=a("be2b");t.a={name:"MeasureInspectDetailTemplateMixin",data:function(){return{isSaving:!1}},computed:{drawingUrl:function(){return this.detail&&this.detail.drawing_file&&this.detail.drawing_file[0]&&this.detail.drawing_file[0].url||""},inputComplete:function(){var t=this;return!e.some(this.detail.problemData||[],(function(a){return e.some(a.realityVal,(function(e){return!e.isFict&&!t.hasVal(e.val)}))}))},hasExceed:function(){return this.detail&&this.detail.problemData&&e.some(this.detail.problemData||[],(function(t){return e.some(t.realityVal,(function(e){return!e.isFict&&e.isExceed}))}))}},methods:{hasVal:function(e){return""!==e&&null!=e},showMeasureData:function(){var e=this;p.a.getMeasureUserIdentity(this.detail.batchData.proj_id).then((function(t){e.$router.push({name:"MeasureDetail",query:{roomId:e.detail.roomData.id,checkitemId:e.detail.currentCheckItem.id,viewIdentity:t,readonly:1}})}))},changeCC:function(){var t=this;"edit"!==this.detail.mode?e.each(this.detail.problemData,(function(e){e.cc=t.detail.cc,p.a.changeCC(e,!0)})):this.saveProblem(this.detail)},onSelectRepair:function(){var t=this,a=[];if(e.each(this.detail.problemData,(function(e){e.repair=t.detail.repair,e.repair_hasChanged=!0,"reedit"!==t.detail.mode&&"待整改"===e.status&&a.push(p.a.changeSingleRoomRepair(e))})),a.length)return i.a.all(a).then((function(){t.$emit("reload")})).catch((function(e){o.a.alert(e)}))},changeMode:function(e){var t=this;o.a.confirm("今天24:00前可修改，是否现在修改？",{okText:"修改"}).then((function(a){a&&(t.detail.mode=e,t.detail.needRepair=!1,t.$refs.scroller.scrollTop=0)}))},preSave:function(){var t=this;e.each(this.detail.problemData,(function(e){e.img=t.detail.img,e.remark=t.detail.remark,e.needRepair=t.detail.needRepair,e.repair=t.detail.repair,e.cc=t.detail.cc}))},saveProblem:function(){var t=this,a=[];return this.preSave(),this.isSaving||!this.detail||"reedit"===this.detail.mode?i.a.when():(this.isSaving=!0,e.each(this.detail.problemData,(function(t){t.regist_by=r.a.getUser().user_id,t.regist_date=n.a.now();var i=e.clone(t);i.repair=[];var s=p.a.save(i).then((function(e){t.id=e})).catch((function(e){o.a.alert(e)}));a.push(s)})),i.a.all(a).then((function(){t.isSaving=!1})))},saveProblemAndTip:function(){this.saveProblem().then((function(){o.a.alert("保存成功")}))},checkEmpty3:function(t){var a=this,i=t.problemData.length>1,n=e.unzip(e.map(t.problemData,(function(t){return e.map(t.realityVal,(function(e){return e.val}))}))),r=e.some(t.problemData,(function(t){return!e.some(t.realityVal,(function(e){return a.hasVal(e.val)}))})),s=[],l=[],c=[],d=[];return e.each(t.problemData,(function(t){e.each(t.realityVal,(function(e,i){a.hasVal(e.val)||s.push(e),3!==t.passrate_mode&&5!==t.passrate_mode&&6!==t.passrate_mode&&16!==t.passrate_mode||a.hasVal(e.setVal)||l.push(e),d[i]||(d[i]=[]),d[i].push(e)}))})),e.each(d,(function(t){!e.some(t,(function(e){return a.hasVal(e.val)}))&&(c=c.concat(t))})),!i&&s.length?(e.each(s,(function(e){e.isWarning=!0})),this.$refs.drawing.update(t),o.a.alert("请填写所有的实测值"),!1):!i&&l.length?(e.each(l,(function(e){e.isWarning=!0})),o.a.alert("请填写所有的设计值"),!1):i&&r&&n.length?(o.a.alert("每个检查项至少录一个点"),!1):void(i&&c.length&&e.each(c,(function(e){e.isWarning=!0})))},checkSubmitData:function(t){var a,i=!0;return!!t&&(3===t.problemData[0].entry_requirements&&(i=!1!==this.checkEmpty3(t)),e.each(t.problemData,(function(t){var n=e.some(t.realityVal,(function(e){return!e.isFict&&(""===e.val||null===e.val||void 0===e.val)}));if(!1!==i){if(3!==t.entry_requirements||t.realityVal&&t.realityVal.length||!i||(o.a.alert("请点击户型图录入测量数据"),i=!1),!t.pointNum&&0===t.passrate_mode&&i&&(o.a.alert("请填写实测点数"),i=!1),n&&i&&(o.a.alert("请填写全部实测值"),i=!1),e.includes([3,4,5,6,16],t.passrate_mode)&&i)e.some(t.realityVal,(function(e){return""===e.setVal||null===e.setVal||void 0===e.setVal}))&&(o.a.alert("请填写全部设计值"),i=!1);(t.needRepair||"待整改"===t.status)&&(e.isEmpty(t.repair)&&!a?(o.a.alert("请选择整改人"),i=!1):e.isEmpty(t.repair)?t.repair=a:a=t.repair)}})),i)},hasInvalidPoint:function(t){var a=this,i=e.unzip(e.map(t.problemData,(function(t){return e.map(t.realityVal,(function(e){return e.val}))})));return e.some(i,(function(t){return!e.some(t,(function(e){return a.hasVal(e)}))}))},removeInvalidPoint:function(t){for(var a=this,i=e.unzip(e.map(t.problemData,(function(t){return e.map(t.realityVal,(function(e){return e.val}))}))),n=i.length-1;n>=0;n--)!e.some(i[n],(function(e){return a.hasVal(e)}))&&e.each(t.problemData,(function(e){e.realityVal.splice(n,1)}))},pointsClean:function(t){return t.realityVal&&e.each(t.realityVal,(function(e){delete e.showMark,delete e.hasMark,delete e.isWarning})),t.problem_values&&e.each(t.problem_values,(function(e){delete e.showMark,delete e.hasMark,delete e.isWarning})),t.realityVal},submitCheck:function(){var t,a=this;this.preSave();var c=e.clone(this.detail);if(this.checkSubmitData(c))return t=this.hasInvalidPoint(c)?"有未录入的点，是否继续提交？":"确定提交？",o.a.confirm(t,{okText:"提交"}).then((function(t){if(t){var d=[],u=s.a.getObject(l.a.MEASURE_CHECK_ITEMS_INIT_DATA,s.a.level.user)||{};return a.removeInvalidPoint(c),e.each(c.problemData,(function(t,i){+t.passrate_mode>0&&(u[t.checkItem.id]={areaNum:t.areaNum,areaData:t.areaData,passrate_mode:t.passrate_mode,pointNum:t.pointNum}),t.regist_by=r.a.getUser().user_id,t.regist_by_name=r.a.getUser().user_name,t.regist_date=n.a.now(),i>0&&(t.cc=c.problemData[0].cc);var o=e.clone(t);o.needRepair||(o.repair=[]),a.pointsClean(o);var s=p.a.submitSingleCheck(o);d.push(s)})),s.a.saveObject(l.a.MEASURE_CHECK_ITEMS_INIT_DATA,u,s.a.level.user),i.a.all(d).then((function(){a.$emit("reload")})).catch((function(e){o.a.alert(e)})).finally((function(){$log.log("实测巡检--\x3e提交检查记录",e.map(c.problemData,(function(e){return{realityVal:e.realityVal,checkItem:e.checkItem}})))}))}}))},resubmitCheck:function(){var t,a=this;this.preSave();var n=e.clone(this.detail);if(this.checkSubmitData(n))return t=this.hasInvalidPoint(n)?"有未录入的点，是否继续提交？":"确定提交？",o.a.confirm(t,{okText:"提交"}).then((function(t){if(t){var r=[];return a.removeInvalidPoint(n),e.each(n.problemData,(function(t,i){i>0&&(t.cc=n.problemData[0].cc);var o=e.clone(t);a.pointsClean(o);var s=p.a.resubmitSingleCheck(o);r.push(s)})),i.a.all(r).then((function(){a.$emit("reload")})).catch((function(e){o.a.alert(e)})).finally((function(){$log.log("实测巡检--\x3e修改数值",e.map(n.problemData,(function(e){return{realityVal:e.realityVal,checkItem:e.checkItem}})))}))}}))},formatDate:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"YYYY-MM-DD HH:mm";return d()(e).format(t)},setNeedRepair:function(){this.detail.needRepair=!this.detail.needRepair,e.each(this.detail.problemData,(function(e){e.needRepair=!e.needRepair}))},setRepair:function(){var t=this;this.preSave();var a=e.clone(this.detail),n=e.clone(this.detail.repair);return o.a.confirm("确定通知整改？",{okText:"确定"}).then((function(r){if(r){if(e.isEmpty(n))return o.a.alert("请选择整改人"),!1;var s=[];if(e.each(a.problemData,(function(e){e.repair=n,e.repair_hasChanged=!0;var t=p.a.informRepair(e,"待整改");s.push(t)})),s.length)return i.a.all(s).then((function(){t.$emit("reload")})).catch((function(e){o.a.alert(e)}))}}))},submitRepair:function(){var t=this;this.preSave();var a=e.clone(this.detail);return o.a.confirm("确定提交？",{okText:"提交"}).then((function(n){if(n){var r=[];return e.each(a.problemData,(function(i,n){i.repair=a.repair,i.repair_img=t.repair_image_file,i.repair_remark=t.repair_remark;var o=p.a.submitSingleRepair(e.clone(i));r.push(o)})),i.a.all(r).then((function(){t.$emit("reload")})).catch((function(e){console.error(e),o.a.alert(e)})).finally((function(){$log.log("实测巡检--\x3e完成整改",e.map(a.problemData,(function(e){return{realityVal:e.realityVal,checkItem:e.checkItem}})))}))}})).catch((function(e){console.error(e)}))}}}}).call(this,a("391c"))},7434:function(e,t,a){var i=a("0cb6");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("f6a1180a",i,!0,{sourceMap:!1,shadowMode:!1})},"7fbc":function(e,t,a){"use strict";a("1f71")},"80ea":function(e,t,a){var i=a("bf17");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("9e8c0b1a",i,!0,{sourceMap:!1,shadowMode:!1})},"81f2":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,'.zjapp .main[data-v-2cac8864]{position:fixed;width:100%;bottom:0}.zjapp .arrow[data-v-2cac8864]{position:absolute;top:-7px;right:18px;width:0;height:0;border-bottom:7px solid #fff;border-right:7px solid transparent;border-left:7px solid transparent}.zjapp .content[data-v-2cac8864]{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-2cac8864]{display:flex;flex-direction:column;background-color:#fff;overflow:auto}.zjapp .box-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1}.zjapp .detail-hd[data-v-2cac8864]{display:flex;padding:6px 15px}.zjapp .detail-arrow-right[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-right[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:12px;border:5px solid transparent;border-left:5px solid #c8c8c8}.zjapp .detail-arrow-down[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-down[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:15px;border:5px solid transparent;border-top:5px solid #c8c8c8}.zjapp .detail-title[data-v-2cac8864]{flex:1;line-height:34px;color:#111;font-size:16px}.zjapp .detail-bd[data-v-2cac8864]{padding:8px 15px 8px 35px;background-color:#fafafa}.zjapp .text-line[data-v-2cac8864]{font-size:14px;color:#666;line-height:30px;margin-bottom:30px}.zjapp .detail-hd-single[data-v-2cac8864]{padding:6px 0;margin:0 15px}.zjapp .detail-bd-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1;padding:8px 15px;background-color:#fff}',""])},8819:function(e,t,a){"use strict";var i=a("efb2").a,n=(a("5770"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"measure-detail-content"},[a("scroller",{ref:"scroller"},[e.drawingUrl?["edit"!==e.detail.mode?a("problem-detail-header",{staticClass:"bg-white",attrs:{status:e.detail.status}},[e.detail.allowReedit&&"reedit"!==e.detail.mode?a("template",{slot:"operat"},[a("div",{staticClass:"btn-reedit align-r",on:{click:function(t){e.changeMode("reedit")}}},[e._v("\n            修改\n            "),a("icon",{attrs:{name:"edit"}})],1)]):e._e()],2):e._e(),a("drawing-3",{ref:"drawing",attrs:{detail:e.detail},on:{onChange:e.saveProblem,onClickPoint:e.onClickPoint}}),"edit"===e.detail.mode?[a("div",{staticStyle:{padding:"10px 0"}},[a("item",{staticClass:"pt15 pb15"},[a("item-img-list",{attrs:{maxlength:50},on:{callback:e.saveProblem},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1)],1),a("item",[a("div",{directives:[{name:"track",rawName:"v-track",value:"实测巡检-查看详情页-数据对比",expression:"'实测巡检-查看详情页-数据对比'"}],staticClass:"item-font color-theme",on:{click:e.showMeasureData}},[e._v("\n            数据对比\n          ")])]),e.detail.problemData[0].realityVal.length?a("item",{attrs:{label:"合格率",mode:"edit"}},[a("div",{staticClass:"item-text color-theme align-r",attrs:{slot:"right"},slot:"right"},[e._l(e.detail.problemData,(function(t,a){return[a?[e._v("; ")]:e._e(),e._v("\n              "+e._s(e._f("percent")(t.passrate,2))+"\n            ")]}))],2)]):e._e(),8!==e.detail.passrate_mode?a("item",{attrs:{label:"合格标准",mode:"edit"}},[a("div",{staticClass:"item-text color-gray align-r",attrs:{slot:"right"},slot:"right"},e._l(e.detail.problemData,(function(t,i){return a("p",{key:i},[5!==t.passrate_mode?a("span",[e._v(e._s(t.checkItem.name))]):e._e(),a("span",{staticClass:"ml5",staticStyle:{"white-space":"nowrap"}},[e._v(e._s(t.standardRange))]),t.isJIcheMode?a("span",{staticClass:"color-gray"},[e._v("极差算法")]):e._e()])})))]):e._e(),[a("div",{staticClass:"need-repair",on:{click:e.setNeedRepair}},[a("icon",{attrs:{name:e.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),e._v("通知整改\n          ")],1),e.detail.needRepair?a("user-select",{attrs:{title:"整改人",options:e.repairOptions,memory:!0},on:{onSelect:e.onSelectRepair},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}):e._e()]]:[a("item",{attrs:{label:"合格率"}},[a("div",{staticClass:"item-text align-r color-theme",attrs:{slot:"right"},slot:"right"},[e._l(e.detail.problemData,(function(t,a){return[a?[e._v("; ")]:e._e(),e._v("\n              "+e._s(e._f("percent")(t.passrate,2))+"\n            ")]}))],2)]),a("item",[a("div",{directives:[{name:"track",rawName:"v-track",value:"实测巡检-查看详情页-数据对比",expression:"'实测巡检-查看详情页-数据对比'"}],staticClass:"item-font color-theme",on:{click:e.showMeasureData}},[e._v("\n            数据对比\n          ")])]),a("item",{staticClass:"mt10",attrs:{label:"点数"}},[a("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[e._l(e.detail.problemData,(function(t,a){return[a?[e._v("; ")]:e._e(),e._v("\n              "+e._s(t.pointNum)+"\n            ")]}))],2)]),8!==e.detail.passrate_mode?a("item",{attrs:{label:"合格标准"}},[a("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},e._l(e.detail.problemData,(function(t,i){return a("p",{key:i},[5!==t.passrate_mode?a("span",[e._v(e._s(t.checkItem.name))]):e._e(),a("span",{staticClass:"ml5",staticStyle:{"white-space":"nowrap"}},[e._v(e._s(t.standardRange))]),t.isJIcheMode?a("span",{staticClass:"color-gray"},[e._v("极差算法")]):e._e()])})))]):e._e(),e.detail.img.length?a("item",{attrs:{label:"相关照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1)]):e._e(),a("user-select",{attrs:{title:"检查人",mode:"view",date:e.formatDate(e.detail.regist_date),editabled:!1},model:{value:e.detail.regist,callback:function(t){e.$set(e.detail,"regist",t)},expression:"detail.regist"}}),(e.detail.repair_image_file&&e.detail.repair_image_file.length>0||e.detail.repair_remark)&&"待整改"!==e.detail.status?a("item",{attrs:{label:"整改照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.detail.repair_remark?a("div",{staticClass:"item-font"},[e._v(e._s(e.detail.repair_remark))]):e._e(),a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.repair_image_file,callback:function(t){e.$set(e.detail,"repair_image_file",t)},expression:"detail.repair_image_file"}})],1)]):e._e(),e.detail.repair.id&&"检查完毕"!==e.detail.status?a("user-select",{attrs:{title:"整改人",mode:"view",options:e.repairOptions,date:"已整改"===e.detail.status?e.formatDate(e.detail.repair_date):"",editabled:(e.detail.isChecker||e.detail.isRepair)&&"待整改"===e.detail.status},on:{onSelect:e.onSelectRepair},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}):e._e(),e.detail.isRepair&&"待整改"===e.detail.status?a("item",{attrs:{label:"整改照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[a("item-img-list",{attrs:{maxlength:50},model:{value:e.repair_image_file,callback:function(t){e.repair_image_file=t},expression:"repair_image_file"}})],1)]):e._e(),e.detail.isRepair&&"待整改"===e.detail.status?a("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:e.repair_remark,callback:function(t){e.repair_remark=t},expression:"repair_remark"}}):e._e(),"检查完毕"===e.detail.status&&e.hasPoint&&e.hasExceed&&"reedit"!==e.detail.mode?[a("div",{staticClass:"need-repair",on:{click:e.setNeedRepair}},[a("icon",{attrs:{name:e.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),e._v("通知整改\n          ")],1),e.detail.needRepair?a("user-select",{attrs:{title:"整改人",options:e.repairOptions,memory:!0},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}):e._e(),e.detail.needRepair?a("app-button-group",{staticClass:"pt10"},[a("app-button",{attrs:{name:"通知整改"},on:{click:e.setRepair}})],1):e._e()]:e._e()]]:e._e(),a("loading-status",{attrs:{"is-loading":!1,"is-empty":!e.drawingUrl,"empty-text":"没有户型图"}})],2),e.drawingUrl?["检查中"===e.detail.status&&"reedit"!==e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[a("app-button",{staticStyle:{width:"50%"},attrs:{name:"暂存",plain:""},on:{click:e.saveProblemAndTip}}),a("app-button",{attrs:{name:"提交检查记录"},on:{click:e.submitCheck}})],1):e._e(),"reedit"===e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{attrs:{name:"提交检查记录"},on:{click:e.resubmitCheck}})],1):e._e(),"待整改"===e.detail.status&&e.detail.isRepair&&"reedit"!==e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{attrs:{name:"完成整改"},on:{click:e.submitRepair}})],1):e._e()]:e._e()],2)}),[],!1,null,"088fb628",null);t.a=r.exports},"8c3d":function(e,t,a){"use strict";(function(e){a("ed63"),a("163d"),a("2b45"),a("e204"),a("cc57");var i,n,r=a("07d2"),o=a("cf09"),s=a("6f9e"),l=a("4360"),c=[],d=[0,1,2,3,4,5,6,7,8,9,".","-"];function p(e){return null!=e&&""!==e}t.a={name:"NumberKeyboard",components:{Item:r.a},data:function(){return{show:!1,isClosing:!1,zIndex:0,willOpenParams:null,inputComponent:"",type:"",hasPrev:!1,hasNext:!1,isDisabledMinus:!1,isDisabledPoint:!1}},computed:{isIOSBezelLess:function(){return l.a.state.app.isIOSBezelLess}},watch:{isClosing:function(e){var t=this;this.$nextTick((function(){!e&&t.willOpenParams&&t.openKeyboard(t.willOpenParams)}))}},created:function(){s.a.$on("routerBeforeEach",this.closeKeyboard),s.a.$on("pageContentClick",this.closeKeyboard)},destroyed:function(){s.a.$off("routerBeforeEach",this.closeKeyboard),s.a.$off("pageContentClick",this.closeKeyboard)},methods:{openKeyboard:function(e){this.isClosing?this.willOpenParams=e:(this.willOpenParams=null,this.show=!0,this.inputComponent=e.inputComponent,this.zIndex=o.a?++o.a.zIndex:1,l.a.commit("global/SET_IS_NUMBER_INPUT_OPEN",!0),l.a.commit("global/SET_NUMBER_KEYBOARD_HEIGHT",l.a.state.app.isIOSBezelLess?266:"true-or-false"===this.inputComponent.type?176:232),this.calcTab(),this.type=this.inputComponent.type,this.setKeysStatus(this.inputComponent.value,this.inputComponent.type),s.a.$emit("numberKeyboardOpen",this.inputComponent))},closeKeyboard:function(){this.show=!1,s.a.$emit("numberKeyboardClose")},startClose:function(){this.isClosing=!0},onClose:function(){this.isClosing=!1,l.a.commit("global/SET_IS_NUMBER_INPUT_OPEN",!1),s.a.$emit("afterNumberKeyboardClose")},input:function(e){"-"===e&&this.isDisabledMinus||"."===e&&this.isDisabledPoint||this.$emit("keyboardInput",e)},delete:function(e){var t=this;this.$emit("keyboardDelete"),i=setTimeout((function(){t.$emit("keyboardClear")}),500)},calcTab:function(){var t=function e(t){return t&&t.$parent?"Scroller"===t.$parent.$options.name?t.$parent:e(t.$parent):null}(this.inputComponent),a=t&&t.$el.querySelectorAll(".component-number-input");if(c=[],a&&e.each(a,(function(e){c.push(e.__vue__)})),e.isEmpty(c))this.hasPrev=!1,this.hasNext=!1;else{var i=e.findIndex(c,this.inputComponent);this.hasPrev=i>0,this.hasNext=i<c.length-1}this.inputComponent&&this.inputComponent.nextEvent&&(this.hasNext=!0)},prev:function(){var t=e.findIndex(c,this.inputComponent),a=c[t-1];a&&(s.a.$emit("numberInputBlur"),a.setFocus(),this.openKeyboard({inputComponent:a}))},next:function(){var t=e.findIndex(c,this.inputComponent),a=c[t+1];a?(s.a.$emit("numberInputBlur"),a.setFocus(),this.openKeyboard({inputComponent:a})):this.inputComponent&&this.inputComponent.nextEvent&&this.inputComponent.nextEvent()},setTure:function(){this.$emit("keyboardAssign",1)},setFalse:function(){this.$emit("keyboardAssign",0)},setKeysStatus:function(e,t){e=p(e)?e.toString():"",p(e)||t.indexOf("positive")>=0?this.isDisabledMinus=!0:this.isDisabledMinus=!1,!/\d/.test(e)||e.indexOf(".")>=0||t.indexOf("int")>=0?this.isDisabledPoint=!0:this.isDisabledPoint=!1},setKeyActiving:function(e,t){e&&e.classList.contains("keys")&&!e.classList.contains("disabled")&&(t?e.classList.add("activing"):e.classList.remove("activing"))},keyTouchstart:function(e){var t=e&&e.target;if(t){+new Date,n=t,this.setKeyActiving(t,!0);var a=t.getAttribute("direct");"closeKeyboard"!==a&&this.clickHandler(a)}},keyTouchend:function(e){var t=e&&e.target;if(t){this.setKeyActiving(t,!1),this.setKeyActiving(n,!1);var a=t.getAttribute("direct");"delete"===a?clearTimeout(i):"closeKeyboard"===a&&this.clickHandler(a)}},clickHandler:function(e){e&&(isNaN(e)||(e=Number(e)),"function"==typeof this[e]?this[e]():d.includes(e)&&this.input(e))}}}}).call(this,a("391c"))},9120:function(e,t,a){var i=a("2ddb");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("cb55f532",i,!0,{sourceMap:!1,shadowMode:!1})},"91c1":function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e"),a("9a33");var i=a("28f8"),n=a("e68e"),r=a("6f9e"),o=a("bcc7"),s=a("e89f");function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}t.a={name:"CheckGuideDetailDrop",components:{ItemImgList:n.a},mixins:[s.a],data:function(){return{show:!1,showList:!1,isLoading:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,module:"",itemIds:[],data:[],target:""}},watch:{show:function(e){var t=this;e&&this.$nextTick((function(){t.showList=!0}))}},created:function(){r.a.$on("routerBeforeEach",this.closePopup),r.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){r.a.$off("routerBeforeEach",this.closePopup),r.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(t){this.show=!0,this.$emit("open"),this.module=t.module,this.itemIds=t.itemIds,this.options=t.options;var a=document.querySelector(".layout-main .layout-header");if(this.contentTop=a.offsetHeight,t.el){var i=t.el.getBoundingClientRect();this.contentTop=i.bottom}this.target=t.el,this.listHeight=e.minBy([window.innerHeight-this.contentTop-50,510]),this.getData()},closePopup:function(){var e=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(t){e.$on("afterClosePopup",t)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(e){e&&e.target&&e.target!==this.target&&this.show&&this.closePopup()},getData:function(){var t=this;return this.options&&this.options.length?(this.data=e.map(this.options,(function(e){return c(c({},e),{},{isOpen:!1})})),Promise.resolve()):o.a.getMeasureCheckItem(this.itemIds).then((function(a){t.data=e.map(a,(function(t){var a=t.content?t.content.trim():"",i=a?a.split("\n"):[],n=t.content_image?JSON.parse(t.content_image):[],r=e.filter(i,(function(e){return!/<img([\s\S]*)>/gm.test(e)}));return e.each(n,(function(e){e.url=e.url.split("@")[0]})),{id:t.id,name:t.full_name,textArr:r,contentImage:n,isOpen:!1}}))})).catch((function(e){console.error(e)}))},toggleItem:function(e){this.data.length>1&&this.$set(e,"isOpen",!e.isOpen)}}}}).call(this,a("391c"))},9446:function(e,t,a){var i=a("2dd6");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("2192cd00",i,!0,{sourceMap:!1,shadowMode:!1})},9788:function(e,t,a){"use strict";a("9446")},9881:function(e,t,a){"use strict";a.r(t);var i=a("e053").a,n=(a("e6ff"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("page-content",{attrs:{title:e.pageTitle,"show-go-root":!0}},[e.isLoading?e._e():[e.isLoading?e._e():a("check-guide",{attrs:{slot:"header-bar-right",module:"measure-inspect","item-ids":e.checkItemGuideIds,mode:"drop"},slot:"header-bar-right"}),a("div",{staticClass:"drop-down-group bg-sub-theme"},[a("drop-down-select",{attrs:{value:e.placeSelected,options:e.placeList,stage:3,"min-select-stage":2,"keep-stage":[!0,!0],"options-map":[{name:"楼栋单元"},{key:"floors",name:"楼层"},{key:"rooms",name:"房间"}]},on:{onSelect:e.onChangeRoom}}),a("drop-select-checkitem",{attrs:{value:e.checkItemSelected,options:e.measureCheckItems,"batch-id":e.batchData.id,"room-id":e.roomData.id},on:{onSelect:e.onChangeCheckitem}})],1),1===e.entryRequirements?a("measure-detail-template-1",{attrs:{detail:e.roomDetail,"repair-options":e.repairOptions,"cc-options":e.ccOptions},on:{problemValueChange:e.onProblemValueChange,reload:e.loadDetail}}):e._e(),2===e.entryRequirements?a("measure-detail-template-2",{attrs:{detail:e.roomDetail,"repair-options":e.repairOptions,"cc-options":e.ccOptions},on:{problemValueChange:e.onProblemValueChange,reload:e.loadDetail}}):e._e(),3===e.entryRequirements?a("measure-detail-template-3",{attrs:{detail:e.roomDetail,"repair-options":e.repairOptions,"cc-options":e.ccOptions},on:{problemValueChange:e.onProblemValueChange,reload:e.loadDetail}}):e._e()],a("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.roomDetail.problemData||!e.roomDetail.problemData.length,"empty-text":"暂无实测记录"}})],2)}),[],!1,null,"4b2571d7",null);t.default=r.exports},"9ada":function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .drawing[data-v-5c92046c]{display:block}.zjapp .point-input-list[data-v-5c92046c]{padding:15px 0 5px 15px;background-color:#fff}.zjapp .area-name[data-v-5c92046c]{background-color:#f0f0f0;color:#8c8c8c;padding:2px}.zjapp .point-ele[data-v-5c92046c]{display:inline-block;width:56px;height:30px;line-height:28px;border:1px solid #dcdcdc;border-radius:3px;background-color:#fff;white-space:nowrap;overflow:hidden;color:#333;text-align:center}.zjapp .point-exceed[data-v-5c92046c]{color:#ff4644}.zjapp .point-cur[data-v-5c92046c]{background-color:#4275e8;border-color:#4275e8;color:#fff}",""])},"9b25":function(e,t,a){"use strict";a("b09a")},"9c47":function(e,t,a){"use strict";var i=a("dd9c").a,n=(a("ac6b"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"measure-detail-content"},[a("scroller",{ref:"scroller"},["view"===e.detail.mode?a("problem-detail-header",{staticClass:"bg-white pr0",attrs:{status:e.detail.status}}):e._e(),a("item",[a("div",{directives:[{name:"track",rawName:"v-track",value:"实测巡检-查看详情页-数据对比",expression:"'实测巡检-查看详情页-数据对比'"}],staticClass:"item-font color-theme",on:{click:e.showMeasureData}},[e._v("\n        数据对比\n      ")])]),"edit"===e.detail.mode||"reedit"===e.detail.mode?[e._l(e.detail.problemData,(function(t,i){return a("div",{key:i,staticClass:"pt10 bg-white"},[a("item",{attrs:{label:"实测点数",mode:"edit",border:"none"}},[a("template",{slot:"right"},[a("number-input",{attrs:{type:"int positive",range:[1,999]},on:{blur:function(a){e.pointNumChange(t)}},model:{value:t.pointNum,callback:function(a){e.$set(t,"pointNum",a)},expression:"problem.pointNum"}}),a("div",{staticClass:"item-text pl5"},[e._v("个")])],1)],2),a("item",{attrs:{label:"爆点数值",mode:"edit",border:"none"}},[e.drawingUrl?a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.realityVal.length?a("div",{staticClass:"item-font"},[e._l(t.realityVal,(function(t,a){return[a?[e._v(",")]:e._e(),e._v(e._s(t.val)+"\n              ")]}))],2):e._e(),a("div",{staticClass:"item-font color-blue",on:{click:function(a){e.markExceedVal(t)}}},[e._v("\n              在户型图标记\n            ")])]):a("div",{staticClass:"item-con",staticStyle:{"margin-right":"-10px"},attrs:{slot:"right"},slot:"right"},[e._l(t.realityVal,(function(i,n){return a("number-input",{key:n,ref:"exceed-point-input",refInFor:!0,staticClass:"mr10 mb10",attrs:{decimal:e.$store.state.measure.valueDecimal,range:e.$store.state.measure.valueRange,"next-event":function(){return e.addExceedVal(t)}},on:{blur:function(a){e.updatedExceedVal(t)}},model:{value:i.val,callback:function(t){e.$set(i,"val",t)},expression:"point.val"}},[n===t.realityVal.length-1?a("i",{staticClass:"icon-minus",attrs:{slot:"extend"},on:{click:function(a){a.stopPropagation(),e.removeExceedVal(t)}},slot:"extend"}):e._e()])})),t.realityVal.length<t.pointNum?a("i",{staticClass:"icon-plus",on:{click:function(a){a.stopPropagation(),e.addExceedVal(t)}}}):e._e()],2)])],1)})),e.inputComplete?a("item",[a("div",{staticClass:"item-font"},[e._v("合格率")]),a("div",{staticClass:"item-text color-theme pl5"},[e._l(e.detail.problemData,(function(t,a){return[a?[e._v(",")]:e._e(),e._v(e._s(e._f("percent")(t.passrate,2))+"\n          ")]}))],2),"edit"===e.detail.mode?a("div",{staticClass:"item-con align-r"},[a("div",{staticClass:"need-repair",on:{click:e.setNeedRepair}},[a("icon",{attrs:{name:e.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),e._v("通知整改\n          ")],1)]):e._e()]):e._e(),e.inputComplete&&e.detail.needRepair?a("user-select",{attrs:{title:"整改人",border:"top",options:e.repairOptions,memory:!0},on:{onSelect:e.onSelectRepair},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}):e._e()]:e._e(),"edit"===e.detail.mode?[a("item",{staticClass:"p15 mt10"},[a("item-img-list",{attrs:{maxlength:50},on:{callback:e.saveProblem},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1),a("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},on:{blur:e.saveProblem},model:{value:e.detail.remark,callback:function(t){e.$set(e.detail,"remark",t)},expression:"detail.remark"}})]:e._e(),"edit"===e.detail.mode?a("user-select",{attrs:{title:"抄送人",multi:!0,options:e.ccOptions,required:!1,memory:!0},on:{onSelect:e.changeCC},model:{value:e.detail.cc,callback:function(t){e.$set(e.detail,"cc",t)},expression:"detail.cc"}}):e._e(),"view"===e.detail.mode?[a("item",{attrs:{label:"标段",text:e.detail.place.section.name+"（"+e.detail.place.project.name+"）"}}),e._l(e.detail.problemData,(function(t,i){return a("div",{key:i},[a("item",{attrs:{label:"实测点",text:t.pointNum}}),a("item",{attrs:{label:"合格率"}},[a("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[e._v("\n            "+e._s(e._f("percent")(t.passrate,2))+"\n            "),e.drawingUrl?a("span",{staticClass:"color-theme ml15",on:{click:e.viewHuxing}},[e._v("\n              "+e._s(t.roomtype_type||"户型图")+"\n            ")]):e._e()])]),t.realityVal.length?a("item",{attrs:{label:"爆点数值"}},[a("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[e._l(t.realityVal,(function(t,a){return[a?[e._v(",")]:e._e(),e._v(e._s(t.val)+"\n            ")]}))],2)]):e._e()],1)})),e.detail.allowReedit&&"reedit"!==e.detail.mode||e.drawingUrl&&e.detail.problemData.length>1?a("item",{staticClass:"pt0 pb0",attrs:{label:""}},[a("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[e.detail.allowReedit&&"reedit"!==e.detail.mode?a("span",{staticClass:"btn-modify",on:{click:function(t){e.changeMode("reedit")}}},[e._v("\n            修改数值\n            "),a("icon",{attrs:{name:"arrow-right"}})],1):e._e(),e.drawingUrl&&e.detail.problemData.length>1?a("span",{staticClass:"btn-modify",on:{click:e.viewHuxing}},[e._v("\n            "+e._s(e.detail.roomtype_type)+"\n            "),a("icon",{attrs:{name:"arrow-right"}})],1):e._e()])]):e._e(),e.detail.remark||e.detail.img.length?a("item",{attrs:{label:"补充说明"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.detail.remark?a("div",{staticClass:"item-font"},[e._v("\n            "+e._s(e.detail.remark)+"\n          ")]):e._e(),a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1)]):e._e(),a("user-select",{attrs:{title:"检查人",mode:"view",date:e.formatDate(e.detail.regist_date),editabled:!1},model:{value:e.detail.regist,callback:function(t){e.$set(e.detail,"regist",t)},expression:"detail.regist"}}),(e.detail.repair_remark||e.detail.repair_image_file&&e.detail.repair_image_file.length)&&"待整改"!==e.detail.status?a("item",{attrs:{label:"整改照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.detail.repair_remark?a("div",{staticClass:"item-font"},[e._v(e._s(e.detail.repair_remark))]):e._e(),a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.repair_image_file,callback:function(t){e.$set(e.detail,"repair_image_file",t)},expression:"detail.repair_image_file"}})],1)]):e._e(),!e.detail.repair.id||"待整改"!==e.detail.status&&"已整改"!==e.detail.status?e._e():a("user-select",{attrs:{title:"整改人",mode:"view",options:e.repairOptions,date:"已整改"===e.detail.status?e.formatDate(e.detail.repair_date):"",editabled:(e.detail.isChecker||e.detail.isRepair)&&"待整改"===e.detail.status},on:{onSelect:e.onSelectRepair},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}),e.detail.isRepair&&"待整改"===e.detail.status?a("item",{attrs:{label:"整改照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[a("item-img-list",{attrs:{maxlength:50},model:{value:e.repair_image_file,callback:function(t){e.repair_image_file=t},expression:"repair_image_file"}})],1)]):e._e(),e.detail.isRepair&&"待整改"===e.detail.status?a("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:e.repair_remark,callback:function(t){e.repair_remark=t},expression:"repair_remark"}}):e._e(),a("user-select",{attrs:{title:"抄送人",mode:"view",multi:!0,options:e.ccOptions,editabled:"已整改"!==e.detail.status},on:{onSelect:e.changeCC},model:{value:e.detail.cc,callback:function(t){e.$set(e.detail,"cc",t)},expression:"detail.cc"}})]:e._e(),"检查完毕"===e.detail.status&&"reedit"!==e.detail.mode?[a("div",{staticClass:"need-repair-bottom",on:{click:e.setNeedRepair}},[a("icon",{attrs:{name:e.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),e._v("通知整改\n      ")],1),e.detail.needRepair?a("user-select",{attrs:{title:"整改人",options:e.repairOptions,memory:!0},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}):e._e(),e.detail.needRepair?a("app-button-group",{staticClass:"pt10"},[a("app-button",{attrs:{name:"通知整改"},on:{click:e.setRepair}})],1):e._e()]:e._e()],2),"检查中"===e.detail.status&&"reedit"!==e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[a("app-button",{staticStyle:{width:"50%"},attrs:{name:"暂存",plain:""},on:{click:e.saveProblemAndTip}}),a("app-button",{attrs:{name:"提交检查记录"},on:{click:e.submitCheck}})],1):e._e(),"reedit"===e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{attrs:{name:"提交检查记录"},on:{click:e.resubmitCheck}})],1):e._e(),"待整改"===e.detail.status&&e.detail.isRepair&&"reedit"!==e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{attrs:{name:"完成整改"},on:{click:e.submitRepair}})],1):e._e()],1)}),[],!1,null,"c03139f6",null);t.a=r.exports},a093:function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e"),a("f548");var i=a("28f8"),n=(a("9dd9"),a("cc57"),a("e204"),a("9eea")),r=a("3156b"),o=a("774b"),s=a("e89f"),l=a("6f9e");function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}t.a={name:"AppSingleSelect",components:{appSearchBar:n.a,item:r.a,Scroller:o.a},mixins:[s.a],props:{},data:function(){return{activeTab:[],storageKey:encodeURI(this.title||"singleSelectMark"),storageVal:[],keyword:"",searchStatus:!1,checkedItem:{},show:!1,searchData:[],options:[],optionsLimit:20,pagingOptions:!1,searchBar:!0,category:[],ifToggle:!1,editorAddData:!1,lineLimit:1}},computed:{optionsShow:function(){return this.options&&this.options.length?this.grouping?this.getGroupData():this.options.slice(0,this.optionsLimit):[]}},watch:{keyword:function(e){var t=this;this.$nextTick((function(){t.filterList(e)}))}},methods:{openPopup:function(t){if(console.log(t),this.value=!0,this.show=!0,this.category=[],l.a.$on("closeDialog",this.closePopup),this.title=t.title,this.selected=t.selected,this.checkedItem=t.selected,this.options=t.options,this.onSelect=t.onSelect,this.searchBar=t.searchBar,this.grouping=t.grouping,this.rightBtn=t.rightBtn,this.rightBtnEvent=t.rightBtnEvent,this.ifToggle=t.ifToggle,this.lineLimit=t.lineLimit,this.editorAddData=t.editorAddData,t.grouping&&t.autoOpen){var a=e.uniqBy(e.map(this.options,t.grouping));this.activeTab=e.map(a,(function(e,t){return t}))}this.storageKey=encodeURI(this.title||"singleSelectMark"),this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},closeEvent:function(){l.a.$off("closeDialog",this.closePopup),this.value=!1,this.show=!1,this.keyword="",this.searchStatus=!1,this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].cancelSearch()},customAddSupplier:function(e){return this.options.findIndex((function(t){return t.name===e}))},selectItem:function(e){var t=this;this.ifToggle&&this.checkedItem.id===e.id?this.checkedItem={}:this.checkedItem=e,this.onSelect(this.checkedItem),this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].saveHistory(),window.setTimeout((function(){t.closeEvent()}),300)},onSearchTypeChange:function(e){this.searchStatus=e},filterList:function(e){var t,a,i=this,n=new RegExp("("+e+")","gmi");if(this.category=[],this.keyword=e,this.searchData=[],!e)return!1;this.options.map((function(e){return n.test(e.name)&&(a=d(d({},e),{},{rename:e.name.replace(n,"<label>$1</label>")}),i.grouping?-1===(t=i.category.indexOf(a[i.grouping]))?(i.category.push(a[i.grouping]),i.searchData.push({name:a[i.grouping],children:[a]})):i.searchData[t].children.push(a):i.searchData.push(a)),e}))},pageOptions:function(){this.optionsLimit=this.optionsLimit+20,this.pagingOptions=!1},getGroupData:function(){var e,t=this,a=[];return this.category=[],this.options.map((function(i){return-1===(e=t.category.indexOf(i[t.grouping]))?(t.category.push(i[t.grouping]),a.push({name:i[t.grouping],children:[i]})):a[e].children.push(i),i})),a}}}}).call(this,a("391c"))},a300:function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e");var i=a("28f8"),n=a("e89f"),r=a("e2a7"),o=a("4360"),s=a("e223");function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}t.a={name:"DrawingDialog",store:o.a,components:{Drawing:s.a},mixins:[n.a],data:function(){return{show:!1,mode:"",url:"",points:[],folder:"",maxMarks:1/0,onmark:function(){}}},methods:{openPopup:function(e){return this.mode=e.mode,this.url=e.url,this.points=e.points,this.folder=e.folder,this.maxMarks=isNaN(e.maxMarks)?1/0:e.maxMarks,this.onmark=e.onmark,this.show=!0,this.$emit("open"),this},closePopup:function(){this.show=!1,this.$emit("close")},undo:function(){this.points.pop()},sure:function(){this.points.length?(this.closePopup(),this.onmark&&this.onmark(this.points)):r.a.alert("请先在户型图标记位置")},pointLight:function(t){this.points=e.map(this.points,(function(e,a){var n=function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},e);return t===a?n.color="#4275e8":n.found?n.color="#14ff56":n.color="#ff4546",n}))},onclick:function(e){var t=this;if("view"===this.mode){if(e.clickPoint&&"points"===e.clickPoint.tag){var a=e.clickPoint.index;this.pointLight(a)}}else if("mark-val-group"===this.mode){if(this.points.length>=maxMarks)return void r.a.alert("爆点个数不能大于实测点数");this.points.push({x:e.x,y:e.y})}else if("multiple-remark"===this.mode)this.points.push({x:e.x,y:e.y});else{var i={x:e.x,y:e.y};this.points=[i],setTimeout((function(){t.closePopup(),t.onmark&&t.onmark(i)}),200)}}}}}).call(this,a("391c"))},a5c6:function(e,t,a){"use strict";var i=a("329b"),n=a("a093").a,r=(a("f3d7"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"slide-right"}},[e.show?a("page-content",{attrs:{title:e.title,mode:"dialog","on-close":e.closeEvent}},[e.rightBtn&&!e.editorAddData||e.rightBtn&&e.editorAddData&&(!e.selected.name||e.customAddSupplier(e.selected.name)>-1)?a("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:function(t){e.rightBtnEvent(e.category)}},slot:"header-bar-right"},[e._v("\n      "+e._s(e.rightBtn)+"\n    ")]):e._e(),a("scroller",{attrs:{"has-next":!e.searchStatus&&!e.grouping&&e.optionsLimit<e.options.length,"end-text":"","is-empty":0===e.optionsShow.length},on:{loadNext:e.pageOptions}},[e.searchBar?a("app-search-bar",{ref:"app-search-bar",attrs:{placeholder:"搜索","history-key":e.storageKey},on:{changeSearchStatus:e.onSearchTypeChange},model:{value:e.keyword,callback:function(t){e.keyword=t},expression:"keyword"}}):e._e(),e.searchStatus?[e.keyword?[e.grouping?a("van-collapse",{model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},e._l(e.searchData,(function(t,i){return a("van-collapse-item",{key:i,attrs:{title:t.name,name:i}},e._l(t.children,(function(t,i){return a("item",{key:i,attrs:{checked:e.checkedItem.id===t.id,item:t,"line-limit":e.lineLimit,"render-field":"rename"},on:{click:e.selectItem}})})))}))):e._e(),e.grouping&&!e.searchData.length?a("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容","show-style":"search"}}):e._e(),e.grouping?e._e():[e._l(e.searchData,(function(t,i){return a("item",{key:i,attrs:{checked:e.checkedItem.id===t.id,item:t,"line-limit":e.lineLimit,"render-field":"rename"},on:{click:e.selectItem}})})),e.searchData.length?e._e():a("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容","show-style":"search"}})]]:e._e()]:["-1"===e.selected.id&&e.customAddSupplier(e.selected.name)<0&&e.editorAddData?a("div",{staticClass:"supplier-editor",on:{click:e.closePopup}},[a("span",{staticClass:"title"},[e._v(e._s(e.selected.name))]),a("span",{staticClass:"icon"},[a("i",{staticClass:"iconfont icon-edit margin-r",on:{click:e.rightBtnEvent}}),a("i",{staticClass:"iconfont icon-qualified"})])]):e._e(),e.grouping?a("van-collapse",{model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},e._l(e.optionsShow,(function(t,i){return a("van-collapse-item",{key:i,attrs:{title:t.name,name:i}},e._l(t.children,(function(t,i){return a("item",{key:i,attrs:{checked:e.checkedItem.id===t.id,item:t,"line-limit":e.lineLimit},on:{click:e.selectItem}})})))}))):e._l(e.optionsShow,(function(t,i){return a("item",{key:i,attrs:{checked:e.checkedItem.id===t.id,item:t,"line-limit":e.lineLimit},on:{click:e.selectItem}})})),e.optionsShow.length?e._e():a("loading-status",{attrs:{"is-empty":!0,"empty-text":"暂无数据","show-style":"search"}})]],2)],1):e._e()],1)}),[],!1,null,"e465319c",null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));t.a=s},ac6b:function(e,t,a){"use strict";a("d86d")},ad46:function(e,t,a){"use strict";(function(e){a("f548"),a("e697"),a("cc57"),a("9dd9");var i,n=a("07d2"),r=a("9eea"),o=a("6f9e"),s=a("e89f"),l=[],c=[],d=[],p=!0,u=null,h=["没有标段","没有楼栋","没有单元","没有楼层"],m=["","list bg-gray6","list bg-gray5","list bg-gray4"];t.a={name:"DropDownSelectDialog",components:{Item:n.a,appSearchBar:r.a},mixins:[s.a],data:function(){return{show:!1,showList:!1,isOpening:!1,isClosing:!1,isSearching:!1,contentTop:64,listHeight:510,target:"",selectedSet:[],stage:1,layoutMap:[],keepStage:[],componentUid:"",showNote:!0,hasSearch:!1,searchTimer:null,keyword:""}},watch:{show:function(e){var t=this;e&&this.$nextTick((function(){t.showList=!0}))},showList:function(t){var a=this;t&&this.$nextTick((function(){a.$refs["list-wrap"]&&e.each(a.$refs["list-wrap"].querySelectorAll(".selected")||[],(function(e){setTimeout((function(){e.scrollIntoViewIfNeeded(!0)}),400)}))}))},keyword:function(e){var t=this;clearTimeout(this.searchTimer),this.searchTimer=setTimeout((function(){t.initSelectedSet(l,c)}),100)}},created:function(){o.a.$on("routerBeforeEach",this.closePopup),o.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){o.a.$off("routerBeforeEach",this.closePopup),o.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(t){var a=this;if(this.show)return t.componentUid===this.componentUid?void this.closePopup():void this.closePopup().then((function(){a.openPopup(t)}));this.stage=t.stage,this.componentUid=t.componentUid||"";var n=document.querySelector(".layout-main .layout-header");this.contentTop=n.offsetHeight;var r=t.el&&t.el.$el?t.el.$el:t.el;if(r){var o=r.getBoundingClientRect();this.contentTop=o.bottom}this.target=r,this.listHeight=e.minBy([window.innerHeight-this.contentTop-50,510]),l=t.options,c=e.clone(t.selected),d=t.optionsMap||[],p=!1!==t.needFullSelecte||t.needFullSelecte,u=t.minSelectStage||this.stage,i=t.callback,this.showNote=t.showNote,this.layoutMap=[];for(var s=0;s<t.stage;s++)this.layoutMap.push({level:s,bgColor:t.hasBgColor?m[s]:"",emptyText:t.emptyText&&t.emptyText[s]?t.emptyText[s]:h[s],keep:!!e.isEmpty(t.keepStage)||!!t.keepStage[s]});this.hasSearch=!!t.hasSearch,this.initSelectedSet(t.options,t.selected),this.show=!0,this.$emit("open")},closePopup:function(){var e=this;if(!this.isOpening)return this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].cancelSearch(),this.showList=!1,this.$emit("close"),new Promise((function(t){e.$on("afterClosePopup",t)}))},afterClose:function(){this.show=!1,this.keyword="",this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(e){e&&e.target&&e.target!==this.target&&this.show&&this.closePopup()},getLevelOptionsKey:function(e){return d&&d[e]&&d[e].key?d[e].key:"children"},initSelectedSet:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.selectedSet=[],e.each(i||[],(function(i,n){var r=t.getLevelOptionsKey(n);if(i&&!(n>t.stage-1)){if(!t.selectedSet[n]){var o;o=n?t.selectedSet[n-1].selected&&t.selectedSet[n-1].selected[r]||[]:a;var s=n||e.isEmpty(t.keyword)?o:e.filter(o,(function(e){return new RegExp(t.keyword,"gm").test(e.name)}));t.selectedSet[n]={selected:{},options:s}}var l=t.selectedSet[n].options,c=e.find(l,{id:i.id});c&&(t.selectedSet[n].selected=c)}})),e.isEmpty(this.selectedSet)&&(this.selectedSet=[{selected:{},options:a}])},showName:function(e){var t=e;return t=(t=t.replace(new RegExp("<","gm"),"&lt;")).replace(new RegExp(">","gm"),"&gt;")},highLightKeyword:function(e){if(this.keyword){var t="";return t=e.replace(new RegExp(this.keyword,"gm"),"-----hightLightTagL-----"+this.keyword+"-----hightLightTagR-----"),t=(t=(t=this.showName(t)).replace(/-----hightLightTagL-----/gm,'<span class="color-blue">')).replace(/-----hightLightTagR-----/gm,"</span>")}return this.showName(e)},getResult:function(){var t=this,a=[];return e.each(this.selectedSet,(function(i,n){var r=e.extend({},i.selected);delete r[t.getLevelOptionsKey(n+1)],e.isEmpty(r)||a.push(r)})),a},select:function(t,a){var n=this,r=this.getLevelOptionsKey(a+1),o=e.isEmpty(t[r]),s=a>=this.stage-1||a>=u-1&&o||!p&&o;this.selectedSet.splice(a+1),this.selectedSet[a].selected=t,c.splice(a),c.push(t),this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].saveHistory(),s?setTimeout((function(){i&&i(n.getResult()),n.closePopup()}),100):this.selectedSet.push({selected:{},options:t[r]})},onSearchTypeChange:function(e){this.isSearching=e}}}}).call(this,a("391c"))},aecb:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .content[data-v-198b6c68]{position:fixed;width:100%;bottom:0;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-198b6c68]{display:flex;flex-direction:column;background-color:#fff}.zjapp .list-wrap[data-v-198b6c68]{flex:1;background-color:#fff;height:465px;overflow:auto;scroll-behavior:smooth}.zjapp .item[data-v-198b6c68]{padding:3px 15px 3px 28px;align-items:center}.zjapp .item-info[data-v-198b6c68]{width:80px;text-align:center;font-size:10px;color:#999}.zjapp .item .item-icon[data-v-198b6c68]{width:44px;height:34px;line-height:34px;text-align:right;font-size:14px}.zjapp .item .icon-arrow-right[data-v-198b6c68]{color:#c8c8c8}.zjapp .item .icon-checkbox[data-v-198b6c68],.zjapp .item .icon-checkbox-checked[data-v-198b6c68]{vertical-align:top;margin-top:7.5px}.zjapp .item .icon-qualified[data-v-198b6c68]{color:#4275e8}.zjapp .icon-empty[data-v-198b6c68]{width:44px}.zjapp .item-hd[data-v-198b6c68]{padding:8px 15px 0 15px}.zjapp .item-hd .item-info[data-v-198b6c68]{width:48px;margin:0 16px;height:16px;line-height:16px;color:#999;border-radius:8px;background-image:#f4f4f4}.zjapp .name-parent[data-v-198b6c68]{font-size:16px;font-weight:700;color:#111}.zjapp .name-child[data-v-198b6c68]{font-size:14px;color:#333}.zjapp .item-triangle[data-v-198b6c68]{position:absolute;width:0;height:0;border:5px solid #c8c8c8}.zjapp .triangle-right[data-v-198b6c68]{border-color:transparent transparent transparent #c8c8c8;left:10px;top:15px}.zjapp .triangle-down[data-v-198b6c68]{border-color:#c8c8c8 transparent transparent transparent;left:10px;top:17.5px}.zjapp .btn-confirm[data-v-198b6c68]{background-color:#ebf1ff;background-image:none;color:#4275e8;border-radius:0}.zjapp .btn-confirm.btn-disabled[data-v-198b6c68]{background-color:#f4f4f4;color:#b2b2b2}",""])},b09a:function(e,t,a){var i=a("2939");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("65170d73",i,!0,{sourceMap:!1,shadowMode:!1})},b55a:function(e,t,a){"use strict";a("c001")},b6da:function(e,t,a){"use strict";var i=a("329b"),n=a("a300").a,r=a("17cc"),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"slide-right"}},[e.show?a("page-content",{attrs:{mode:"dialog",title:"户型图","on-close":e.closePopup}},[a("drawing",{staticStyle:{flex:"1"},attrs:{url:e.url,points:e.points,folder:e.folder},on:{onclick:e.onclick}}),"multiple-remark"===e.mode?a("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[a("app-button",{staticStyle:{width:"50%"},attrs:{type:e.points.length?"warning":"normal",plain:""},on:{click:e.undo}},[e._v("\n        撤销\n      ")]),a("app-button",{on:{click:e.sure}},[e._v(" 确定 ")])],1):e._e()],1):e._e()],1)}),[],!1,null,null,null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));t.a=s},be2b:function(e,t,a){"use strict";(function(e){a("f548"),a("6d57"),a("e697"),a("616f"),a("cc57");var n,r=a("fd50"),o=a("3bd5"),l=a("ed08"),c=a("3516"),d=a("aab3"),p=a("e865"),u=a("48f4"),h=a("bcc7"),m=a("2f02"),f=a("334f"),g=a("b725"),b=a("7aa5"),v=a("729d"),y=a("c1c2"),_=a("6144"),x=a("c745"),k=a("b20c"),w=a("0136"),D=a("7cb8");t.a=n={measureRooms:[],save:function(t,a){a=a||t.status;var i=1===t.entry_requirements?t.exceedVal:t.realityVal,s={id:t.id,proj_id:t.proj_id,bidsection_id:t.bidsection_id,batch_id:t.batch_id,batch_type:t.batch_type||"实测实量(新)",item_id:t.checkItem.id,building_id:t.roomData.building_id,floor:t.roomData.floor||"",room_id:t.roomData.id,status:a,parent_id:t.parent_id||null,regist_by:t.regist_by,regist_date:t.regist_date,measurement_points:parseInt(t.pointNum),problem_points:parseInt(t.exceedNum),problem_values:Object(D.o)(i),image_file:Object(D.o)(t.img),remark:t.remark||"",standard_min:t.standard_min,standard_max:t.standard_max,passrate_mode:t.passrate_mode,entry_requirements:t.entry_requirements,unit:t.unit,emergency_degree:t.emergency_degree||"一般",process_mode:t.process_mode||1};return e.isEmpty(t.drawing_file)||(e.isArray(t.drawing_file)?s.drawing_file=Object(D.o)(t.drawing_file):s.drawing_file=Object(D.o)([t.drawing_file])),r.a.when().then((function(){return s.id?p.a.update(s,[],t.repair).then((function(){return n.addTodo(s,t.repair)})):(s.id=l.a.uuid(),s.created_on=l.a.now(),s.created_by=o.a.getUser().user_id,p.a.insert(s).then((function(){t.id=s.id})))})).then((function(){return n.appendToCC(s.id,"被抄送",t.cc)})).then((function(){return r.a.resolve(s.id)})).catch((function(e){return $log.error(e),r.a.reject(e)}))},appendToCC:function(t,a,i){return f.a.getProblemCCAllColumn(t).then((function(n){return r.a.all(e.map(i,(function(i){if(!e.some(n,(function(e){return e.cc===i.id&&e.type===a}))){var r={id:i.id,name:i.name,type:a};return f.a.appendCC(t,r)}}))).then((function(){return f.a.updateProblemReadingTime(t)}))}))},getMeasureProblem:function(t,a,i){return p.a.getMeasureProblem(t,a,i).then((function(e){return n.unzipProblemValues(e)})).then((function(t){return t?p.a.getProblemRepairs(t.id).then((function(a){return e.isEmpty(a)||(t.repair=a[0]),t})):t})).then((function(e){return e?f.a.getCC(e.id).then((function(t){return e.cc=t,e})):e}))},getMeasureProblemById:function(e){return p.a.getMeasureProblemById(e).then((function(e){return n.unzipProblemValues(e)})).then((function(e){return e?f.a.getCC(e.id).then((function(t){return e.cc=t,e})):e}))},getMeasureProblemsByStatus:function(e,t){return p.a.getMeasureProblemsByStatus(e,t).then((function(e){return n.unzipProblemValues(e)}))},getMeasureProblemsByRoom:function(e,t){return p.a.getMeasureProblemsByRoom(e,t).then((function(e){return n.unzipProblemValues(e)}))},submitSingleCheck:function(t){if(t.status&&"检查中"!==t.status)return r.a.reject("错误的状态");var a;if(t.needRepair){if(e.isEmpty(t.repair))return r.a.reject("请选择整改人");a="待整改"}else a="检查完毕";return n.save(t,a).then((function(){if(t.needRepair)return n.changeSingleRoomRepair(t,!1);var e=o.a.getUser();return n.appendToCC(t.id,"操作人",[{id:e.user_id,name:e.user_name}])})).then((function(){return n.changeCC(t,!1)})).then((function(){return t.status=a,t.needRepair?u.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_repair",t.id],["checkquality_cc",t.id]]):u.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]]),r.a.resolve(t.id)})).catch((function(e){return $log.error(e),r.a.reject(e)}))},resubmitSingleCheck:function(e){return n.save(e,e.status).then((function(){if(e.repair_hasChanged)return n.changeSingleRoomRepair(e,!1)})).then((function(){var t=o.a.getUser();return n.appendToCC(e.id,"操作人",[{id:t.user_id,name:t.user_name}])})).then((function(){return n.changeCC(e,!1)})).then((function(){u.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_repair",e.id],["checkquality_cc",e.id]])})).catch((function(e){return $log.error(e),r.a.reject(e)}))},submitSingleRepair:function(e){return"待整改"!==e.status?r.a.reject("错误的状态"):p.a.updateProblem(e.id,{status:"已整改",repair_by:o.a.getUser().user_id,repair_remark:e.repair_remark,repair_date:l.a.now(),repair_image_file:Object(D.o)(e.repair_img)}).then((function(){var t=o.a.getUser();return n.appendToCC(e.id,"操作人",[{id:t.user_id,name:t.user_name}])})).then((function(){return n.changeCC(e,!1)})).then((function(){return u.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).then((function(){return n.addTodo(e,[])}))},changeCC:function(t,a){return c.a.getBatchCCs(t.batch_id).then((function(a){return a=e.map(a,(function(e){return{id:e.user_id,name:e.user_name}})),e.isEmpty(t.cc)||(a=a.concat(t.cc),a=e.uniqBy(a,e.property("id"))),f.a.saveProblemCC(t.id,a)})).then((function(){a&&u.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]])}))},getRoomProblems:function(t,a){return p.a.getRoomProblems(t,a).then((function(e){return n.unzipProblemValues(e)})).then((function(a){return c.a.getBatch(t).then((function(i){return"实测巡检"===i.batch_type?c.a.getBatchCheckitems(t).then((function(t){var i=[];return e.each(a,(function(a){e.some(t,e.matches({item_id:a.pc_id}))&&i.push(a)})),i})):a}))}))},getReportData:function(t){return c.a.getBatch(t).then((function(a){return r.a.all([p.a.getSingleRoomMeasureCheckitems(t),p.a.getSingleRoomMeasureReportData(t),c.a.getBatchRooms(t)]).then((function(t){var a={},i=t[0],n=t[1],l=t[2];return r.a.all([p.a.getProblemRepairs(a.id),p.a.getProblemCC(a.id)]).then((function(t){return e.isEmpty(t[0])&&e.isEmpty(t[1])?r.a.all(e.map(i,(function(e){return h.a.getBidSectionCheckItemInfo(a.proj_id,a.bidsection_id,e.id,"实测实量")}))).then((function(t){var a=e.reduce(t,(function(e,t){return e.concat(t.repair)}),[]);a=e.uniqBy(a,e.property("id"));var i=e.reduce(t,(function(e,t){return e.concat(t.cc)}),[]);return[a,i=e.uniqBy(i,e.property("id"))]})):t})).then((function(t){var r=t[0],c=t[1],d=e.groupBy(n,"room_id"),p={id:a.id,status:a.status,proj_id:a.proj_id,bidsection_id:a.bidsection_id,batch_id:a.batch_id,batch_name:a.batch_name,remark:a.remark,is_regist:a.regist_by===o.a.getUser().user_id,checkBy:{id:a.regist_by,name:a.regist_name,phone:a.regist_phone,date:a.regist_date},checkItem:e.map(i,(function(e){return{id:e.id,name:e.name,parent_name:e.parent_name,status:e.status,repairBy:{id:e.repair_id,name:e.repair_name,phone:e.repair_phone,date:e.repair_date},detail:JSON.parse(e.repair_image_file||"[]").length>0||!!e.repair_remark}})),checkData:e.map(d,(function(t,a){var i=e.reduce(t,(function(e,t){return e+Math.max((t.measurement_points||0)-(t.problem_points||0),0)}),0),n=e.reduce(t,(function(e,t){return e+(t.measurement_points||0)}),0),r=t[0].building_name;return t[0].unit&&(r+=t[0].unit,s.endsWith(r,"单元")||(r+="单元")),{roomId:a,roomName:t[0].room_no,buildName:r,passRate:(n?Math.round(1e4*i/n)/100:0)+"%",passPoints:i,measurePoints:n,isEmpty:!1,data:e.reduce(t,(function(e,t){var a=t.measurement_points||0,i=Math.max(a-(t.problem_points||0),0);return e[t.item_id]={pointNum:a,passNum:i,passRate:(a?Math.round(1e4*i/a)/100:0)+"%"},e}),{})}})),repair:r,cc:c};e.each(l,(function(t){if(!e.find(p.checkData,(function(e){return e.roomId===t.room_id}))){var a=t.building_name;t.unit&&(a+=t.unit,s.endsWith(a,"单元")||(a+="单元")),p.checkData.push({roomId:t.room_id,roomName:t.room_name,buildName:a,passRate:"",data:{},isEmpty:!0})}})),e.each(p.checkData,(function(t){e.each(p.checkItem,(function(e){e.id in t.data||(t.data[e.id]={pointNum:"",passNum:"",passRate:""})}))}));var u=e.reduce(p.checkData,(function(e,t){return e+(t.passPoints||0)}),0),h=e.reduce(p.checkData,(function(e,t){return e+(t.measurePoints||0)}),0),m=e.groupBy(n,"item_id");return p.total={passRate:(h?Math.round(1e4*u/h)/100:0)+"%",data:e.mapValues(m,(function(t){var a=e.reduce(t,(function(e,t){return e+Math.max((t.measurement_points||0)-(t.problem_points||0),0)}),0),i=e.reduce(t,(function(e,t){return e+(t.measurement_points||0)}),0);return{pointNum:i,passNum:a,passRate:(i?Math.round(1e4*a/i)/100:0)+"%"}}))},p}))}))}))},changeRepair:function(t){return e.isEmpty(t.repair)?r.a.reject("请指定一个整改人"):p.a.updateProblemModifiedBy(t.id).then((function(){return g.a.changeProblemRepair(t.id,t.repair)})).then((function(){var a=e.map(t.repair,"id").join(","),i=e.map(t.oldRepair,"id").join(",");return m.a.saveProblemFpInfo(t.proj_id,t.bidsection_id,t.batch_id,t.id,a,i,"分配整改人")})).then((function(){var e=o.a.getUser();return n.appendToCC(t.id,"操作人",[{id:e.user_id,name:e.user_name}])})).then((function(){return u.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_repair",t.id],["checkquality_cc",t.id]])})).catch((function(e){return $log.error(e),r.a.reject(e)}))},changeSingleRoomRepair:function(t,a){return e.isEmpty(t.repair)?r.a.reject("请指定整改人"):p.a.updateProblemModifiedBy(t.id).then((function(){return g.a.changeProblemRepair(t.id,t.repair).then((function(){return n.addTodo(t,t.repair)}))})).then((function(){var e=t.repair.id;return m.a.saveProblemFpInfo(t.proj_id,t.bidsection_id,t.batch_id,t.id,e,"","分配整改人")})).then((function(){var e=o.a.getUser();return n.appendToCC(t.id,"操作人",[{id:e.user_id,name:e.user_name}])})).then((function(){if(!1!==a)return u.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_repair",t.id],["checkquality_cc",t.id]])})).catch((function(e){return $log.error(e),r.a.reject(e)}))},getProblemRepairs:function(e){return p.a.getProblemRepairs(e)},getProblemCC:function(e){return p.a.getProblemCC(e)},getTopMeasureProblem:function(e){return p.a.getTopMeasureProblem(e)},getMeasureEmptyRooms:function(e){return p.a.getMeasureEmptyRooms(e)},getRoomsAndData:function(t,a,i,n,o,s){return r.a.when().then((function(){return d.a.getBuildingRooms(i,n).then((function(t){return e.clone(t)}))})).then((function(t){return b.a.getSectionBatchs(a,"实测实量(新)","正式").then((function(a){var l=[],c=[],d=[0,0,0],u=0;return e.each(a,(function(e){-1!==e.name.indexOf("施工单位")?l[0]=e.id:-1!==e.name.indexOf("监理单位")?l[1]=e.id:-1!==e.name.indexOf("建设单位")&&(l[2]=e.id)})),l=l.slice(0,s),o&&(c=e.map(l,(function(e){return p.a.getMeasureNewBatchRoomProblems(e,i,n,[o.id])}))),r.a.all(c).then((function(a){for(var i={},n={},r=0;r<a.length;r++)for(var o=0;o<a[r].length;o++)a[r][o].room_id?i[a[r][o].room_id]=r+1:n[a[r][o].floor]=r+1,d[r]||(d[r]=0),d[r]+=1;e.isEmpty(i)&&(u+=t.length),e.each(t,(function(t){e.isEmpty(i)?t.done=n[t.floor]||0:(u+=t.rooms.length,e.each(t.rooms,(function(e){e.done=i[e.id]||0})))})),t.completion=[],u=Math.max(u,1);for(var s=0;s<d.length;s++)t.completion[s]=(d[s]/u*100).toFixed(1)+"%"}))})).then((function(){return t}))}))},getRoomsAndDataByIdentity:function(t,a,i,r,o,s){return d.a.getBuildingRooms(i,r).then((function(l){for(var c=[],d=s;d>0;)c.push(d),d--;var p=[];return o.subitem?p=e.map(o.subitem,(function(e){return e.id})):p.push(o.id),n.getMeasureDataDetailByIdentities(t,a,i,r,p,c).then((function(t){return e.each(l,(function(a){e.each(a.rooms,(function(a){a.done=[],a.problems=[],a.done_num=[];for(var i=s;i>0;){var n;switch(i){case 3:n=t.construct;break;case 2:n=t.supervision;break;case 1:n=t.repair}var r=e.filter(n,(function(e){return e.room_id===a.id})),o=0,l=0,c=!0,d=0;e.each(r,(function(e){o+=e.measurement_points||0,l+=e.problem_points||0,c=!!c&&"检查中"!==e.status,d+="检查中"!==e.status?1:0})),a.done_num[i]=d,r.length===p.length&&c?a.done[i]=i:a.done[i]=0,r.length<=1?a.problems[i]=r[0]||{}:a.problems[i]={measurement_points:o,problem_points:l,batch_id:r[0].batch_id},i--}}))})),l}))}))},getMeasureDataDetailByIdentities:function(t,a,o,s,l,c){var d=[];for(i=0;i<c.length;i++){var p=n.getMeasureDataDetailByIdentity(t,a,o,s,l,c[i]);d.push(p)}return r.a.all(d).then((function(t){var a={repair:[],supervision:[],construct:[]};return e.each(t,(function(e){switch(e.identity){case 1:a.repair=e.data;break;case 2:a.supervision=e.data;break;case 3:a.construct=e.data}})),a}))},getMeasureDataDetailByIdentity:function(e,t,a,i,o,s){return n.getMeasureDefaultBatch(e,t,s).then((function(e){return p.a.getMeasureNewBatchRoomProblems(e.id,a,i,o)})).then((function(e){return n.unzipProblemValues(e)})).then((function(e){return r.a.resolve({data:e,identity:s})}))},getMeasureUserIdentity:function(t){var a=o.a.getUser();return y.a.getModulePermission(a.user_id,[31,32,33]).then((function(t){return e.some(t,(function(e){return 33===e.role_type}))?3:e.some(t,(function(e){return 32===e.role_type}))?2:1}))},getIdentityByProblemId:function(e){return n.getMeasureProblemById(e).then((function(e){return e})).then((function(e){return b.a.getBatch(e.batch_id).then((function(e){var t;return e.name.indexOf("默认批次-施工单位")>-1?t=1:e.name.indexOf("默认批次-监理单位")>-1?t=2:e.name.indexOf("默认批次-建设单位")>-1&&(t=3),t}))}))},getMeasureDefaultBatch:function(e,t,a){return b.a.getProjectBatchByIdentity(e,t,a,"实测实量(新)").then((function(e){return e&&(e.identity=a),e||{}}))},getAllMeasureCheckItems:function(t){var a=_.a.getObject("MeasureCheckItemMemory")||{};return r.a.when().then((function(){return x.a.measureCheckItems.length?e.filter(x.a.measureCheckItems,(function(e){return e.sec_id===t})):v.a.getBidSectionCheckItemList(t,41)})).then((function(t){var i=[],n={},r={};return e.each(t,(function(e,t){e&&"实测实量"!==e.parent_item_full_name&&(n[e.parent_item_id]||(r=n[e.parent_item_id]={id:e.parent_item_id,name:e.parent_item_full_name,full_name:e.parent_item_full_name,process_mode:e.process_mode,subitem:[],isOpen:!!a[e.parent_item_id]},i.push(r)),n[e.parent_item_id].subitem.push({id:e.item_id,name:e.item_name,full_name:e.full_name,process_mode:e.process_mode,parent_id:e.parent_item_id}))})),i}))},getAllMeasureBuildingCheckItems:function(t,a){return p.a.getAllMeasureBuildingCheckItems(t,a).then((function(t){var a=e.groupBy(t,(function(e){return e.pp_item_name})),i=e.keys(a),n=[];return e.each(i,(function(e){for(var t={id:a[e][0].pp_item_id,name:e,subitem:[]},i=0;i<a[e].length;i++){var r={id:a[e][i].pc_item_id,name:a[e][i].pc_item_name,full_name:a[e][i].pc_full_name,process_mode:a[e][i].process_mode,note:["","分户","不分单元整层","整栋","","分单元整层"][a[e][i].process_mode]};t.subitem.push(r)}n.push(t)})),r.a.resolve(n)}))},informRepair:function(e,t){return p.a.changeProblemStatus(e.id,t).then((function(){return n.changeSingleRoomRepair(e,!1)})).then((function(){return u.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_repair",e.id],["checkquality_cc",e.id]])})).catch((function(e){return $log.error(e),r.a.reject(e)}))},getMeasureRoomItemDetailByIdentities:function(t,a,o,s,l){var c=[];for(i=0;i<l.length;i++){var d=n.getMeasureRoomItemDetailByIdentity(t,a,o,s,l[i]);c.push(d)}return r.a.all(c).then((function(t){var a={repair:[],supervision:[],construct:[]};return e.each(t,(function(e){switch(e.identity){case 1:a.repair=e.data;break;case 2:a.supervision=e.data;break;case 3:a.construct=e.data}})),a}))},getMeasureRoomItemDetailByIdentity:function(t,a,i,r,o){return n.getMeasureDefaultBatch(t,a,o).then((function(e){return p.a.getMeasureNewRoomItemProblem(e.id,i,r)})).then((function(e){return n.unzipProblemValues(e)})).then((function(t){return e.isEmpty(t)?{data:t,identity:o}:f.a.getCC(t[0].id).then((function(e){return t[0].cc=e,{data:t,identity:o}}))}))},getMeasureFloorDetailByIdentity:function(t,a,i,r,o,s,l){return n.getMeasureDefaultBatch(t,a,l).then((function(e){return p.a.getMeasureNewFloorProblem(e.id,i,r,o,s)})).then((function(e){return n.unzipProblemValues(e)})).then((function(t){return e.isEmpty(t)?{data:t,identity:l}:f.a.getCC(t[0].id).then((function(e){return t[0].cc=e,{data:t,identity:l}}))}))},getMeasureFloorDetailByIdentitys:function(t,a,o,s,l,c,d){var p=[];for(i=0;i<d.length;i++){var u=n.getMeasureFloorDetailByIdentity(t,a,o,s,l,c,d[i]);p.push(u)}return r.a.all(p).then((function(t){var a={repair:[],supervision:[],construct:[]};return e.each(t,(function(e){switch(e.identity){case 1:a.repair=e.data;break;case 2:a.supervision=e.data;break;case 3:a.construct=e.data}})),a}))},unzipProblemValues:function(t){if(!t)return r.a.when(t);var a=e.isArray(t)?t:[t];return r.a.all(e.map(a,(function(e){return e.problem_values_zip&&!e.problem_values?l.a.unzipString(e.problem_values_zip).then((function(t){return e.problem_values=t,p.a.updateProblem(e.id,{problem_values:t})})).then((function(){return e})):r.a.when()}))).then((function(){return t}))},getMeasureInspectBatchRoomStatus:function(e,t){return p.a.getMeasureInspectBatchRoomStatus(e,t)},getMeasureInspectStatisticalData:function(t){return p.a.getMeasureInspectStatisticalData(t).then((function(t){var a={},i={},n={id:"sum",name:"总计",data:[{id:"sum",mp:0,pp:0,name:"总计"}]};e.each(t,(function(t){var r,o=t.building_name+(t.unit?t.unit.replace("单元","")+"单元":"")+"<br>"+t.room_no;a[t.parent_id]||(a[t.parent_id]={name:t.parent_name,children:[],data:[{id:"sum",mp:0,pp:0,name:"合格率"}]}),i[t.id]||(i[t.id]={name:t.item_name,data:[{id:"sum",mp:0,pp:0,name:"合格率"}]}),r={id:t.room_id,name:o,mp:t.m_points||0,pp:t.p_points||0},i[t.id].data.push(r),e.find(a[t.parent_id].children,{id:t.id})||a[t.parent_id].children.push({id:t.id,name:i[t.id].name,data:i[t.id].data});var s=e.find(a[t.parent_id].data,{id:t.room_id});s||(s={id:t.room_id,name:o,mp:0,pp:0},a[t.parent_id].data.push(s)),s.mp+=t.m_points||0,s.pp+=t.p_points||0,a[t.parent_id].data[0].mp+=t.m_points||0,a[t.parent_id].data[0].pp+=t.p_points||0,i[t.id].data[0].mp+=t.m_points||0,i[t.id].data[0].pp+=t.p_points||0;var l=e.find(n.data,{id:t.room_id});l||(l={id:t.room_id,name:o,mp:0,pp:0},n.data.push(l)),l.mp+=t.m_points||0,l.pp+=t.p_points||0,n.data[0].mp+=t.m_points||0,n.data[0].pp+=t.p_points||0}));var r=[];return e.each(a,(function(t,a){r.push(e.extend(t,{id:a}))})),r.push(n),r}))},uniqueMeasureProblem:function(e){var t=e.problem;return $log.log("存在冲突的问题，清理本地无效数据，服务器返回的数据",e),p.a.uniqueMeasureProblem(t.batch_id,t.id,t.item_id,t.room_id)},uniqueMeasureFloorProblem:function(e){var t=e.problem;return $log.log("存在冲突的问题，清理本地无效数据，服务器返回的数据",e),p.a.uniqueMeasureFloorProblem(t.batch_id,t.building_id,t.floor,t.item_id,t.id)},uniqueMeasureFloorUnitProblem:function(e){var t=e.problem;return $log.log("存在冲突的问题，清理本地无效数据，服务器返回的数据",e),p.a.uniqueMeasureFloorUnitProblem(t.batch_id,t.building_id,t.unit,t.floor,t.item_id,t.id)},removeDuplicatedMeasureNew:function(){return p.a.getDuplicatedMeasure().then((function(t){return r.a.all(e.map(t,(function(e){return p.a.removeCheckingMeasure(e.batch_id,e.item_id,e.room_id)})))}))},deleteBatchProblems:function(e,t){return p.a.deleteBatchProblems(e,t)},getMeasureCheckitemRealProcessMode:function(e,t){return p.a.getOneMeasureByBuildingAndItem(e,t).then((function(e){return e?e.process_mode||1:k.a.getCheckItem(t).then((function(e){return e.process_mode}))}))},addTodo:function(t,a){if("检查中"===t.status)return r.a.when();e.isArray(a)||(a=[a]);var i,n=o.a.getUser().user_id;return i=e.find(a,(function(e){return e.id===n}))?1:2,u.default.setLocalChanged(),w.a.saveTodo({biz_id:t.id,type:i,module_code:"measure-inspect",proj_id:t.proj_id})},hasVal:function(e){return null!=e&&""!==e},getAreaDataFromPoints:function(t){var a=[];return e.each(t,(function(i){if(!e.some(a,(function(e){return e.name===i.area}))){var r=e.filter(t,{area:i.area}).length;a.push({name:i.area,setVal:n.hasVal(i.setVal)?i.setVal:"",pointNum:r})}})),a},getDrawPoints:function(t,a){var i=[],r=[];return 1===(t=e.clone(t)).problemData[0].passrate_mode?(r=t.problemData[0].realityVal,e.each(t.problemData,(function(t){e.each(t.realityVal,(function(e,t){r[t]&&(r[t].isQualified=!0)}))})),e.each(t.problemData,(function(t){e.each(t.realityVal,(function(e,t){e.isExceed&&r[t]&&(r[t].isQualified=!1),e.isWarning&&r[t]&&(r[t].isWarning=!0)}))}))):2===t.problemData[0].passrate_mode?(i=n.getAreaDataFromPoints(t.problemData[0].realityVal),r=e.map(i,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r,pointId:i[0].pointId}}))):3===t.problemData[0].passrate_mode?r=t.problemData[0].realityVal:4===t.problemData[0].passrate_mode||(5===t.problemData[0].passrate_mode||6===t.problemData[0].passrate_mode?(i=n.getAreaDataFromPoints(t.problemData[0].realityVal),r=e.map(i,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r,pointId:i[0].pointId}}))):7===t.problemData[0].passrate_mode?(i=n.getAreaDataFromPoints(t.problemData[0].realityVal),r=e.map(i,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r,pointId:i[0].pointId}}))):8===t.problemData[0].passrate_mode?r=t.problemData[0].realityVal:12===t.problemData[0].passrate_mode||13===t.problemData[0].passrate_mode?(i=n.getAreaDataFromPoints(t.problemData[0].realityVal),r=e.map(i,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r,pointId:i[0].pointId}}))):console.error("算法错误")),e.each(r,(function(e,t){void 0!==a&&t===a?e.color="#4275e8":e.isQualified?e.color="#0bc666":e.color="#ff4545",e.index=t})),r},getProblemAreaData:function(t){var a=[];return e.each(t.realityVal,(function(i){if(!e.some(a,(function(e){return e.name===i.area}))){var r=e.filter(t.realityVal,{area:i.area}).length;a.push({name:i.area,setVal:n.hasVal(i.setVal)?i.setVal:"",pointNum:r})}})),a},addPoint:function(t,a){var i,r=t.problemData[0].passrate_mode;return 1===r?(i={val:"",x:a.x,y:a.y,area:"测区1"},e.each(t.problemData,(function(t){t.realityVal.push(e.clone(i))}))):2===r?e.each(t.problemData,(function(t){var i=n.getProblemAreaData(t),r=e.map(i,(function(e){return/^测区\d+$/.test(e.name)?parseInt(e.name.substr(2)):0})),o=e.maxBy(r);o=o===-1/0?0:o;for(var s={val:"",x:a.x,y:a.y,area:"测区"+(o+1)},l=0;l<5;l++)t.realityVal.push(e.clone(s));t.areaData=n.getProblemAreaData(t)})):3===r?(i={val:"",x:a.x,y:a.y,area:"测区1",setVal:""},e.each(t.problemData,(function(e){e.realityVal.push(i)}))):4===r||(5===r?e.each(t.problemData,(function(t){var i=n.getProblemAreaData(t),r=e.map(i,(function(e){return/^测区\d+$/.test(e.name)?parseInt(e.name.substr(2)):0})),o=e.maxBy(r);o=o===-1/0?0:o;for(var s={val:"",x:a.x,y:a.y,area:"测区"+(o+1)},l=0;l<2;l++)s.label="高",t.realityVal.push(e.clone(s));for(var c=0;c<2;c++)s.label="宽",t.realityVal.push(e.clone(s));t.areaData=n.getProblemAreaData(t)})):6===r?e.each(t.problemData,(function(t){var i=n.getProblemAreaData(t),r=e.map(i,(function(e){return/^测区\d+$/.test(e.name)?parseInt(e.name.substr(2)):0})),o=e.maxBy(r);o=o===-1/0?0:o;for(var s={val:"",x:a.x,y:a.y,area:"测区"+(o+1)},l=0;l<2;l++)s.label="开间",t.realityVal.push(e.clone(s));for(var c=0;c<2;c++)s.label="进深",t.realityVal.push(e.clone(s));t.areaData=n.getProblemAreaData(t)})):7===r?e.each(t.problemData,(function(t){var i=n.getProblemAreaData(t),r=e.map(i,(function(e){return/^测区\d+$/.test(e.name)?parseInt(e.name.substr(2)):0})),o=e.maxBy(r);o=o===-1/0?0:o;for(var s={val:"",x:a.x,y:a.y,area:"测区"+(o+1)},l=0;l<3;l++)t.realityVal.push(e.clone(s));t.areaData=n.getProblemAreaData(t)})):8===r&&(i={val:"",x:a.x,y:a.y,area:"测区1"},e.each(t.problemData,(function(t){t.realityVal.push(e.clone(i))})))),t},delPoint:function(t,a){var i=t.problemData[0].passrate_mode;return 1===i?e.each(t.problemData,(function(e){e.realityVal.splice(a,1)})):2===i?e.each(t.problemData,(function(e){e.realityVal.splice(5*a,5),e.areaData=n.getProblemAreaData(e)})):3===i?e.each(t.problemData,(function(e){e.realityVal.splice(a,1)})):4===i||(5===i||6===i?e.each(t.problemData,(function(e){e.realityVal.splice(4*a,4),e.areaData=n.getProblemAreaData(e)})):7===i?e.each(t.problemData,(function(e){e.realityVal.splice(3*a,3),e.areaData=n.getProblemAreaData(e)})):8===i&&e.each(t.problemData,(function(e){e.realityVal.splice(a,1)}))),t},pointsHandle:function(t){var a,i=n.hasVal(t.standard_min)?parseFloat(t.standard_min):-1/0,r=n.hasVal(t.standard_max)?parseFloat(t.standard_max):1/0,o=!e.isEmpty(t.drawing_file);return e.each(t.realityVal,(function(e){n.hasVal(e.val)&&(e.val=parseFloat(e.val))})),1===t.passrate_mode||3===t.passrate_mode?e.each(t.realityVal,(function(e){var t=parseFloat(e.val)-parseFloat(e.setVal||0),a=n.hasVal(e.val)&&(t<i||t>r),s=n.hasVal(e.val)&&t>=i&&t<=r;e.isExceed=a,e.isQualified=s,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):2===t.passrate_mode?(0===i&&(i=r),a=e.groupBy(t.realityVal||[],"area"),e.each(a,(function(a){if(e.some(a,(function(e){return!n.hasVal(e.val)})))e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}));else{var s,l,c=e.maxBy(a,"val"),d=e.minBy(a,"val"),p=parseFloat(c.val)-parseFloat(c.setVal||0),u=parseFloat(d.val)-parseFloat(d.setVal||0),h=p-u;h<=i?e.each(a,(function(e){e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):h>r?e.each(a,(function(e){e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):(l=e.some(a,(function(e){return void 0!==e.isExceed})),"检查中"===t.status||l?s=-1:e.each(a,(function(e){var t=parseFloat(e.val)-parseFloat(e.setVal||0);t-u>i&&(s-=1),p-t>i&&(s+=1)})),e.each(a,(function(e){var t=parseFloat(e.val)-parseFloat(e.setVal||0);s<0?t-u>i?(e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)):(e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)):p-t>i?(e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)):(e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y))})))}}))):4===t.passrate_mode||(5===t.passrate_mode||6===t.passrate_mode?(a=e.groupBy(t.realityVal||[],(function(e){return e.area+"-"+e.label})),e.each(a,(function(t){if(e.some(t,(function(e){return!n.hasVal(e.val)||!n.hasVal(e.setVal)})))e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}));else{var a=e.maxBy(t,(function(e){return Math.abs(e.val-e.setVal)})),s=parseFloat(a.val)-parseFloat(a.setVal||0);n.hasVal(a.val)&&(s<i||s>r)?(e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})),a.isExceed=!0):e.each(t,(function(e){e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}))}}))):7===t.passrate_mode?(a=e.groupBy(t.realityVal||[],"area"),e.each(a,(function(t){if(e.some(t,(function(e){return!n.hasVal(e.val)})))e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}));else{var a=e.maxBy(t,"val").val-e.minBy(t,"val").val;a<i||a>r?e.each(t,(function(e){e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):e.each(t,(function(e){e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}))}}))):8===t.passrate_mode&&e.each(t.realityVal,(function(e){var t=parseFloat(e.val),a=n.hasVal(e.val)&&!t,i=n.hasVal(e.val)&&!!t;e.isExceed=a,e.isQualified=i,e.showMark=n.hasVal(e.val)&&o,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}))),t.realityVal},problemHandle:function(t){var a,i,r=1;3===t.entry_requirements&&e.each(t.realityVal,(function(e){n.hasVal(e.val)?delete e.isFict:e.isFict=1})),1===t.entry_requirements?(t.realityVal=t.exceedVal,t.exceedNum=t.exceedVal.length,t.inputComplete=!e.some(t.exceedVal,(function(e){return!n.hasVal(e.val)})),t.pointNum?t.passrate=(t.pointNum-t.exceedNum)/t.pointNum:t.passrate=0,t.hasExceed=!0):(i=e.filter(t.realityVal,(function(e){return!e.isFict})),5===t.passrate_mode||6===t.passrate_mode?r=2:7===t.passrate_mode&&(r=3),t.exceedVal=e.filter(i,(function(e){return e.isExceed})),t.pointNum=i.length/r,a=e.filter(i,(function(e){return!0!==e.isQualified})),t.exceedNum=a.length/r,t.inputComplete=!e.some(i,(function(e){return!n.hasVal(e.val)})),t.pointNum?t.passrate=(t.pointNum-t.exceedNum)/t.pointNum:t.passrate=0,t.hasExceed=e.some(i,(function(e){return e.isExceed})))}}}).call(this,a("391c"))},bebe:function(e,t,a){var i=a("6272");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("53478790",i,!0,{sourceMap:!1,shadowMode:!1})},bf17:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .measure-detail-content[data-v-4b2571d7]{flex:1;display:flex;flex-direction:column;overflow:hidden}.zjapp .drop-down-group[data-v-4b2571d7]{display:flex;flex-direction:row}.zjapp .drop-down-group .select-con[data-v-4b2571d7]{flex:1;border:none;background-image:linear-gradient(0deg,#d7e0f7,#d7e0f7 50%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}.zjapp .drop-down-group .select-con[data-v-4b2571d7]:not(:last-child){border:none;background-image:linear-gradient(270deg,#d7e0f7,#d7e0f7 50%,transparent 0),linear-gradient(0deg,#d7e0f7,#d7e0f7 50%,transparent 0);background-size:1px 100%,100% 1px;background-repeat:no-repeat;background-position:100% 0,bottom}",""])},bff5:function(e,t,a){"use strict";a("fdde")},c001:function(e,t,a){var i=a("f53a");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("bd5eb062",i,!0,{sourceMap:!1,shadowMode:!1})},c070:function(e,t,a){var i=a("574c");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("35590dcb",i,!0,{sourceMap:!1,shadowMode:!1})},c0fb:function(e,t,a){"use strict";var i=a("329b"),n=a("1fcf").a,r=(a("bff5"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"slide-right"}},[e.show?a("page-content",{attrs:{mode:"dialog",title:"户型图","on-close":e.closePopup}},["edit"===e.mode?a("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:e.confirm},slot:"header-bar-right"},[e._v("\n      确定\n    ")]):e._e(),a("scroller",{ref:"scroller"},["edit"===e.mode?a("div",{staticClass:"p15 border-bottom color-gray"},[e._v("\n        点击户型图标记爆点位置，并输入爆点数值\n      ")]):e._e(),a("drawing",{ref:"drawing",style:{height:e.drawingHeight+"px"},attrs:{url:e.url,points:e.points},on:{onclick:e.onclick,click:function(e){e.stopPropagation()}}}),"edit"===e.mode&&e.points.length?a("div",{staticClass:"point-input-list border-tb"},e._l(e.points,(function(t,i){return a("number-input",{key:i,ref:"exceed-point-input",refInFor:!0,staticClass:"mr10 mb10",attrs:{decimal:e.valueDecimal,range:e.valueRange},on:{focus:function(t){e.inputFocus(i)},blur:e.inputBlur},model:{value:t.val,callback:function(a){e.$set(t,"val",a)},expression:"point.val"}},[a("i",{staticClass:"icon-minus",attrs:{slot:"extend"},on:{click:function(a){a.stopPropagation(),e.removeExceedPoint(t)}},slot:"extend"})])}))):e._e(),"view"===e.mode?[e._l(e.layoutPointsData,(function(t,i){return[t.itemName?a("item",{key:i,attrs:{border:"top",label:t.itemName}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e._l(t.areas,(function(t,i){return[t.points&&t.points.length?[t.areaName?a("p",{key:"name"+i,staticClass:"mb10"},[a("span",{staticClass:"area-name"},[e._v(e._s(t.areaName))])]):e._e(),a("div",{key:"points"+i},e._l(t.points,(function(t,i){return a("span",{key:i,staticClass:"point-ele mr10 mb10",class:{"point-exceed":t.isExceed,"point-cur":t.index===e.lightIndex},on:{click:function(a){e.clickPointEle(t)}}},[e._v("\n                      "+e._s(t.val)+"\n                    ")])})))]:e._e()]}))],2)]):[e._l(t.areas,(function(t,i){return[t.points&&t.points.length?a("item",{key:i,staticClass:"pt15",attrs:{border:"top"}},[t.areaName?a("div",{staticClass:"item-label"},[e._v("\n                  "+e._s(t.areaName)+"\n                ")]):e._e(),a("div",{staticClass:"item-con"},e._l(t.points,(function(t,i){return a("span",{key:i,staticClass:"point-ele mr10 mb10",class:{"point-exceed":t.isExceed,"point-cur":t.index===e.lightIndex},on:{click:function(a){e.clickPointEle(t)}}},[e._v("\n                    "+e._s(t.val)+"\n                  ")])})))]):e._e()]}))]]}))]:e._e(),e.scrollPaddingBottom?a("div",{style:{"padding-bottom":e.scrollPaddingBottom+"px"}}):e._e()],2)],1):e._e()],1)}),[],!1,null,"5c92046c",null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));t.a=s},c40a:function(e,t,a){"use strict";(function(e){a("cc57"),a("6d57"),a("6f84"),a("163d");var i=a("a32d"),n=a.n(i),r=a("e900"),o=a("3122"),s=a("4ad6"),l=a("3bd5"),c=a("1b7e");function d(e){var t=e.changedTouches.length,a=e.touches.length;return 1===t||2===t||2===a}function p(e){return 1===e.touches.length}t.a={name:"Drawing",props:{url:{type:String},points:{type:Array,default:function(){return[]}},regions:{type:Array,default:function(){return[]}},pointColor:{type:String,default:"#ff4546"},pointRadius:{type:Number,default:7},scaleMax:{type:Number,default:4},clickDelay:{type:Number,default:500},folder:{type:String,default:"house-image"},onlineMode:{type:Boolean,default:!1},contentScroll:{type:Boolean,default:!0}},data:function(){return{isDownloading:!1,error:"",canvas:null,ctx:null,img:null,src:"",width:0,height:0,x:0,y:0,scale:1,defaultScale:1,pixelRatio:1,markPosition:null,markPositionImageData:[],markCoordinates:[],pinchRatio:0,scaleBetween:[],isPinch:!1,clickPoints:[],touchStart:{x:0,y:0,cx:0,cy:0,time:0}}},watch:{url:function(){this.getImage()},points:function(e){this.ctx&&this.draw()},regions:function(e){this.ctx&&this.draw()}},mounted:function(){this.getImage()},destroyed:function(){this.canvas&&(this.canvas.width=0,this.canvas.height=0)},methods:{getImage:function(){var t=this;if(this.isDownloading=!0,this.url){var a=l.a.getUser().user_id,i=n.a.replaceAll(this.url,"\\?x-oss-process=image\\/resize,","@"),r=n.a.strRightBack(i,"/");if(!r)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var d=[s.a.appImagePath()+a+"/"+this.folder+"/"+r,s.a.appImagePath()+a+"/house-image/"+r,s.a.appImagePath()+a+"/drawing/"+r,s.a.appImagePath()+a+"/location-image/"+r,s.a.appImagePath()+a+"/images/"+r,s.a.appDataPath()+a+"/"+this.folder+"/"+r,s.a.appDataPath()+a+"/house-image/"+r,s.a.appDataPath()+a+"/drawing/"+r,s.a.appDataPath()+a+"/location-image/"+r,s.a.appDataPath()+a+"/images/"+r],p=Promise.resolve();return"dev"===APP_ENV||this.onlineMode?p=p.then((function(){return t.url})):e.each(d,(function(e){p=p.then((function(t){return t||s.a.isFileExists(e).then((function(t){if(t)return o.a._fixPath(e)}))}))})),p.then((function(e){if(!e)return c.a.getHasNetwork().then((function(e){return e?o.a.download(t.url,!0,t.folder).then((function(e){t.src=e})):Promise.reject("当前无网络")}));t.src=e})).then((function(){t.src?(t.img=new Image,t.img.onload=function(){t.img.complete?(t.isDownloading=!1,t.$nextTick(t.init)):(t.error="加载图片失败",t.isDownloading=!1)},t.img.onerror=function(){t.error="加载图片失败",t.isDownloading=!1},t.img.src=t.src):(t.error="下载户型图失败",t.isDownloading=!1)})).catch((function(a){t.error=e.isString(a)?a:"下载户型图失败",t.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1},init:function(){if(this.$refs["drawing-canvas"]){var e=this.$refs.content;this.canvas=this.$refs["drawing-canvas"],this.ctx=this.canvas.getContext("2d"),this.width=e.offsetWidth,this.height=e.offsetHeight,this.pixelRatio=this.getPixelRatio(this.ctx),this.canvas.style.height=this.height+"px",this.canvas.style.width=this.width+"px",this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,!this.ctx.extended&&Object(r.a)(this.ctx),this.bindTouchEvent(),this.calc(),this.draw()}},getPixelRatio:function(e){var t=e.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/t},calc:function(e){var t=this.width/this.img.width,a=this.img.height*t,i=this.height||a;a>this.height&&(t*=i/a),this.scale=t*this.pixelRatio,this.defaultScale=this.scale,this.scaleBetween=[this.scale,this.scale*this.scaleMax]},winToCanvas:function(e,t){var a=this.canvas.getBoundingClientRect();return{x:e-a.left*(this.canvas.width/(a.width*this.pixelRatio)),y:t-a.top*(this.canvas.height/(a.height*this.pixelRatio))}},isBoundary:function(e){switch(e){case"t":if(0===this.y)return!0;break;case"r":if(this.x<=this.canvas.width-this.img.width*this.scale)return!0;break;case"b":if(this.y<=this.img.height*this.scaleBetween[0]-this.img.height*this.scale)return!0;break;case"l":if(0===this.x)return!0}return!1},bindTouchEvent:function(){this.canvas.addEventListener("touchstart",this.onTouchstart),this.canvas.addEventListener("touchmove",this.onTouchmove),this.canvas.addEventListener("touchend",this.touchMoveAndEndHandler)},unbindTouchEvent:function(){this.canvas.removeEventListener("touchstart",this.onTouchstart),this.canvas.removeEventListener("touchmove",this.onTouchmove),this.canvas.removeEventListener("touchend",this.touchMoveAndEndHandler)},onTouchstart:function(e){if(this.isPinch=!1,p(e)){var t=e.touches[0],a=this.winToCanvas(t.clientX,t.clientY);this.touchStart={x:a.x,y:a.y,cx:t.clientX,cy:t.clientY,time:Date.now()}}else if(d(e)){var i,n=e.touches[0],r=e.touches[1],o=this.winToCanvas(n.clientX,n.clientY),s=this.winToCanvas(r.clientX,r.clientY);i=Math.sqrt(Math.pow(s.x-o.x,2)+Math.pow(s.y-o.y,2)),this.pinchRatio=this.scale/i}},onTouchmove:function(e){if(!1===this.contentScroll&&(e.preventDefault(),e.stopPropagation()),p(e))this.touchStart.cy>e.pageY&&this.isBoundary("b")||this.touchStart.cy<e.pageY&&this.isBoundary("t")||this.touchStart.cx>e.pageX&&this.isBoundary("r")||this.touchStart.cx<e.pageX&&this.isBoundary("l")||e.stopPropagation(),this.touchMoveAndEndHandler(e);else if(d(e)){e.stopPropagation();var t,a,i,n,r,o=e.touches[0],s=e.touches[1],l=this.winToCanvas(o.clientX,o.clientY),c=this.winToCanvas(s.clientX,s.clientY);a=Math.sqrt(Math.pow(c.x-l.x,2)+Math.pow(c.y-l.y,2)),this.isPinch=!0,(t=this.pinchRatio*a)>this.scaleBetween[0]&&t<this.scaleBetween[1]&&(n={x:((i={x:(l.x+c.x)/2*this.pixelRatio,y:(l.y+c.y)/2*this.pixelRatio}).x-this.x)/(this.img.width*this.scale),y:(i.y-this.y)/(this.img.height*this.scale)},i.newX=this.x+this.img.width*t*n.x,i.newY=this.y+this.img.height*t*n.y,r={x:i.newX-i.x,y:i.newY-i.y},t<this.scale&&this.setRange(this.x-r.x,this.y-r.y,t),t>this.scale&&(this.x=this.x-r.x,this.y=this.y-r.y),t!==this.scale&&(this.scale=t,this.draw()))}},touchMoveAndEndHandler:function(e){var t,a,i=e.type,n={touchmove:e.touches[0],touchend:e.changedTouches[0]}[i],r=this.winToCanvas(n.clientX,n.clientY);t=(r.x-this.touchStart.x)*this.pixelRatio,a=(r.y-this.touchStart.y)*this.pixelRatio,"touchend"===i&&Date.now()-this.touchStart.time<this.clickDelay&&Math.abs(n.clientX-this.touchStart.cx)<6&&Math.abs(n.clientY-this.touchStart.cy)<6?this.clickHandler(e):"touchmove"!==i||this.isPinch||(this.touchStart.x=r.x,this.touchStart.y=r.y,this.setRange(this.x+t,this.y+a,this.scale),this.draw())},isCanClick:function(e){for(var t=!1,a=0;a<this.markPosition.length;a++)if(parseFloat(e.x)>parseFloat(this.markPosition[a].x)&&parseFloat(e.x)<parseFloat(this.markPosition[a].x)+parseFloat(this.markPosition[a].w)&&parseFloat(e.y)>parseFloat(this.markPosition[a].y)&&parseFloat(e.y)<parseFloat(this.markPosition[a].y)+parseFloat(this.markPosition[a].h)){t=!0;break}return t},clickHandler:function(e){var t=e.changedTouches[0];if(this.mark){var a=this.winToCanvas(t.clientX,t.clientY),i={x:(a.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),y:(a.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio)};if(a={x:i.x*this.img.width,y:i.y*this.img.height},this.isCanClick(a)){this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(a.x*this.scale/this.pixelRatio+this.x/this.pixelRatio,a.y*this.scale/this.pixelRatio+this.y/this.pixelRatio,this.scale===this.defaultScale?this.pointRadius:this.pointRadius*(1+(this.scale-this.defaultScale)/this.pixelRatio),0,2*Math.PI,!1),this.ctx.fill(),this.ctx.restore();var n={x:a.x,y:a.y};this.markCoordinates.push(n),this.points.push(n)}return!1}this.redraw(e,this.winToCanvas(t.clientX,t.clientY))},setRange:function(e,t,a){var i=this.img.width*a,n=this.img.height*a,r=this.canvas.width,o=this.canvas.height,s=this.img.height*this.scaleBetween[0];e=i<r?(r-i)/2:(e=e+i<r?r-i:e)>0?0:e,t=n<o?(o-n)/2:(t=t+n<s?s-n:t)>0?0:t,this.x=e,this.y=t},draw:function(){this.setRange(this.x,this.y,this.scale),this.drawImage(),this.drawPoints(),this.drawRegions()},redraw:function(e,t){this.clickPoints=[],this.drawImage(),this.drawPoints(t),this.drawRegions(t),this.clickCallback(e,this.clickPoints)},clickCallback:function(e,t){var a;t.some((function(e,t){return"points"===e.tag?(a=e,!0):(a=e,!1)}));var i=e.changedTouches[0],n=this.winToCanvas(i.clientX,i.clientY),r=(n.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),o=(n.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio);(n={x:parseFloat((r*this.img.width).toFixed(2)),y:parseFloat((o*this.img.height).toFixed(2))}).y>=0&&n.x>=0&&n.y<=this.img.height&&n.x<=this.img.width&&this.$emit("onclick",{type:a?"point":"",points:this.points,point:a,clickPoint:a,x:n.x,y:n.y,scale:this.scale/this.pixelRatio})},drawImage:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.img,0,0,this.img.width,this.img.height,this.x,this.y,this.img.width*this.scale,this.img.height*this.scale)},drawPoints:function(e){var t=this;this.points.forEach((function(a,i){t.drawPoint(a.x*t.scale/t.pixelRatio+t.x/t.pixelRatio,a.y*t.scale/t.pixelRatio+t.y/t.pixelRatio,t.pointRadius,i,e,a.color)}))},drawPoint:function(e,t,a,i,n,r){this.ctx.save(),this.ctx.beginPath(),this.ctx.shadowBlur=a/2,this.ctx.shadowColor="black",this.ctx.fillStyle=r||this.pointColor,this.ctx.arc(e,t,a,0,2*Math.PI,!1),this.ctx.fill(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.ctx.restore(),a*=2,this.ctx.save(),this.ctx.beginPath(),this.ctx.strokeStyle="transparent",this.ctx.fillStyle="transparent",this.ctx.rect(e-a,t-a,2*a,2*a),this.ctx.stroke(),this.ctx.restore(),n&&this.ctx.isPointInPath(n.x*this.pixelRatio,n.y*this.pixelRatio)&&this.clickPoints.push({tag:"points",pos:n,index:i})},drawRegions:function(e){var t=this;this.regions&&this.regions.length&&this.regions.forEach((function(a,i){var n,r,o,s;t.ctx.beginPath(),a.area.forEach((function(e,a){var i=e[0]*t.scale/t.pixelRatio+t.x/t.pixelRatio,l=e[1]*t.scale/t.pixelRatio+t.y/t.pixelRatio;a?t.ctx.lineTo(i,l):t.ctx.moveTo(i,l),n=void 0===n?i:n<i?n:i,r=void 0===r?i:r>i?r:i,o=void 0===o?l:o<l?o:l,s=void 0===s?l:s>l?s:l})),t.ctx.closePath(),t.ctx.fillStyle="rgba(255, 144, 0, 0.4)",t.ctx.fill(),t.ctx.lineWidth=3,t.ctx.strokeStyle="#feda8e",t.ctx.stroke(),t.ctx.lineWidth=2,t.ctx.strokeStyle="rgba(0, 0, 0, 0.8)",t.ctx.stroke(),e&&t.ctx.isPointInPath(e.x*t.pixelRatio,e.y*t.pixelRatio)&&t.clickPoints.push({tag:"region",pos:e,index:i,regionData:a}),t.ctx.font='18px bold -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',t.ctx.textAlign="center",t.ctx.lineWidth=4,t.ctx.strokeStyle="#ffffff",t.ctx.strokeText(a.name,(r+n)/2,(s+o)/2+10),t.ctx.fillStyle="#111111",t.ctx.fillText(a.name,(r+n)/2,(s+o)/2+10)}))}}}}).call(this,a("391c"))},c895:function(e,t,a){"use strict";(function(e){a("5ab2"),a("6d57"),a("e10e");var i=a("28f8"),n=(a("ed63"),a("8cf2"),a("e697"),a("cc57"),a("fd50")),r=a("6bf2"),o=a.n(r),s=a("aab3"),l=a("06f6"),c=a("bcc7"),d=a("be2b"),p=a("6144"),u=a("bc69"),h=a("37d5"),m=a("3bd5"),f=a("3516");function g(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}t.a={name:"MeasureInspectDetailMixin",data:function(){return{initBatchId:"",initRoomId:"",initCheckItemId:"",initProblemId:"",curUserId:"",batchData:{entry_requirements:"",repair_mode:""},currentCheckItem:{},checkItemData:[{id:"",name:"",parent_id:"",measurement_points:"",standard_min:"",standard_max:"",passrate_mode:""}],checkItemCombo:[],roomData:{id:"",name:"",building_id:""},isLoading:!1,roomDetail:{status:"",mode:"",problemData:[],comboPointNum:0,comboPointArr:[]},HuxinObj:{},prevSetVal:{},initPromise:null,place:{},placeList:[],placeSelected:[],measureCheckItems:[],checkItemSelected:[],repairSetting:{},isCurrentIdentity:!1,repairOptions:[],ccOptions:[]}},methods:{init:function(t,a,i,r){var p=this;return this.isLoading=!0,this.initBatchId=t,this.initRoomId=a,this.initCheckItemId=i,this.initProblemId=r,this.curUserId=m.a.getUser().user_id,this.roomDetail={},this.initPromise=f.a.getBatch(t).then((function(e){p.batchData=e})).then((function(){return l.default.getRoomById(a).then((function(e){p.roomData={id:e.id,name:e.room_no,fullname:e.fullname,building_id:e.building_id,unit:e.unit,floor:e.floor}}))})).then((function(){return s.a.getBuildingInfo(p.roomData.building_id).then((function(e){var t=e[0],a=p.roomData.unit?"单元"===p.roomData.unit.substr(p.roomData.unit.length-2)?p.roomData.unit:p.roomData.unit+"单元":"",i="层"===p.roomData.floor.substr(p.roomData.floor.length-1)?p.roomData.floor:p.roomData.floor+"层";p.place={project:{id:t.proj_id,name:t.proj_name},section:{id:t.sec_id,name:t.sec_name},building:{id:t.id,name:t.name},unit:{id:p.roomData.unit,name:a},floor:{id:p.roomData.floor,name:i},room:{id:p.roomData.id,name:p.roomData.name}}}))})).then((function(){return f.a.getBatchRooms(t).then((function(t){var a={},i={},n={};e.each(t,(function(e){var t=e.building_id+(e.unit_id?"|"+e.unit_id:"");a[t]||(a[t]={id:t,name:e.building_name+e.unit,floors:[]}),i[t+e.floor]||(i[t+e.floor]={id:e.floor,name:"层"===e.floor.substr(e.floor.length-1)?e.floor:e.floor+"层",rooms:[]},a[t].floors.push(i[t+e.floor])),n[e.room_id]||(n[e.room_id]={id:e.room_id,name:e.room_name},i[t+e.floor].rooms.push(n[e.room_id]))})),p.placeList=e.map(a,(function(e){return e})),p.placeSelected=[{id:p.place.building.id+(p.place.unit.id?"|"+p.place.unit.id:""),name:p.place.building.name+p.place.unit.name},p.place.floor,p.place.room]}))})).then((function(){return c.a.getRelatedCheckItemIdList(i).then((function(e){p.checkItemCombo=e}))})).then((function(){var t,a=[];return p.checkItemData=[],e.each(p.checkItemCombo,(function(e){t=c.a.getBidSectionCheckItemInfo(p.batchData.proj_id,p.batchData.section_id,e,"实测实量").then((function(t){if(t){var a={id:t.item_id,item_name:t.item_name,name:t.full_name,parent_id:t.parent_id,measurement_points:t.measurement_points,area_num:t.area_num,areasName:JSON.parse("[]"),area_point_num:t.area_point_num,standard_min:t.standard_min,standard_max:t.standard_max,passrate_mode:t.passrate_mode,repair:t.repair,cc:t.cc};return a.id===i&&(p.currentCheckItem=a),a}return n.a.reject("未找到Id="+e+"的检查项记录")})),a.push(t)})),n.a.all(a).then((function(e){p.checkItemData=e}))})).then((function(){return f.a.getBatchCheckitemTree(t).then((function(t){p.measureCheckItems=t,p.checkItemSelected=[],e.each(p.measureCheckItems,(function(t){e.each(t.subitem,(function(e){e.id===p.currentCheckItem.id&&(p.checkItemSelected.push(t),p.checkItemSelected.push(e))}))}))}))})).then((function(){var t=p.checkItemData[0].repair;if(t&&!e.isEmpty(t))return h.default.getProjectUsers(p.batchData.proj_id,31).then((function(a){a=e.filter(a,(function(e){return"39d2e1d0-7d8c-280e-dd75-d75d28405cf7"!==e.user_id}));for(var i=0;i<t.length;i++)if(e.find(a,(function(e){return e.user_id===t[i].id}))){p.repairSetting=t[i];break}}));p.repairSetting={}})).then((function(){return n.a.all([f.a.getBatchUsers(t),f.a.getBatchCCs(t)]).then((function(t){var a=t[0],i=t[1],n=e.some(a,{user_id:p.curUserId}),r=e.some(i,{user_id:p.curUserId});p.isCurrentIdentity=!(!n&&!r)}))})).then((function(){p.roomDetail={status:"",mode:"",roomData:p.roomData,place:p.place,batchData:p.batchData,currentCheckItem:p.currentCheckItem,areaNum:"",areaData:{},problemData:[],img:[],remark:"",repair:{},needRepair:!1,cc:[],comboPointNum:0,comboPointArr:[],isCurrentIdentity:p.isCurrentIdentity,isRepair:!1};var t=[];return e.each(p.checkItemData,(function(e){var a=d.a.getMeasureProblem(p.batchData.id,e.id,p.roomData.id).then((function(t){return{data:t,checkItem:e}}));t.push(a)})),n.a.all(t).then((function(t){e.each(t,(function(e){var t=e.data,a=e.checkItem,i=p.initProblemData(t,a);p.roomDetail.problemData.push(i)}))})).catch((function(e){return n.a.reject(e)}))})).then((function(){return p.errorHandle(p.roomDetail)})).then((function(){var t=o()(new Date).format("YYYY-MM-DD"),a=p.roomDetail.problemData[0];if(a&&(p.comoboHandle(p.roomDetail),p.roomDetail.snapRepair=e.clone(p.repairSetting),p.roomDetail.isRepair=!1,p.roomDetail.isChecker=!1,p.roomDetail.isBatchCreator=p.batchData.created_by===p.curUserId,p.roomDetail.img=a.img,p.roomDetail.remark=a.remark,p.roomDetail.repair=a.repair,p.roomDetail.needRepair=a.needRepair,p.roomDetail.cc=a.cc,p.roomDetail.repair_remark=a.repair_remark,p.roomDetail.repair_image_file=a.repair_img,p.roomDetail.areaNum=a.areaNum,p.roomDetail.areaData=a.areaData,e.each(p.roomDetail.problemData||[],(function(e){e.isOpen=!(1!==p.roomDetail.problemData.length||"检查中"===p.roomDetail.status)})),a.id))return p.roomDetail.regist=a.regist,p.roomDetail.regist_date=a.regist_date,p.roomDetail.isChecker=a.regist_by===p.curUserId,d.a.getProblemRepairs(a.id).then((function(i){p.roomDetail.isRepair=e.some(i,(function(e){return e.id===p.curUserId})),p.roomDetail.allowReedit=p.roomDetail.isChecker&&"检查中"!==p.roomDetail.status&&a.regist_day===t||(p.roomDetail.isChecker||p.roomDetail.isRepair)&&a.repair_day===t}))})).then((function(){var t,i=[],r=[];if(e.each([p.roomDetail],(function(t){e.each(t.problemData,(function(e){"检查中"===e.status&&i.push(e)}))})),i.length)return e.each(i,(function(i){var n=l.default.getDrawing(a,i.checkItem.id).then((function(n){if(e.isEmpty(n)){if(!t)return l.default.getRoomTypeDiagram(a).then((function(a){e.isEmpty(a)?i.drawing_file=[]:(a.type="户型图",t=a,i.roomtype_type=t.type,i.drawing_file=[t])}));i.roomtype_type=t.type,i.drawing_file=[t]}else n.type="专项图纸",i.roomtype_type=n.type,i.drawing_file=[n]}));r.push(n)})),n.a.all(r)})).then((function(){e.each([p.roomDetail],(function(t){var a=e.find(t.problemData,(function(e){return p.hasVal(e.drawing_file)}));a?(e.each(t.problemData,(function(e){e.drawing_file=a.drawing_file})),p.roomDetail.drawing_file=a.drawing_file):p.roomDetail.drawing_file=[]}))})).then((function(){e.each([p.roomDetail],(function(t){e.each(t.problemData,(function(e){e.realityVal=p.pointsHandle(e),p.problemHandle(e)})),t.currentCheckItem=e.clone(p.currentCheckItem)}))})).then((function(){return h.default.getProjectUsers(p.batchData.proj_id,[31,32,33]).then((function(t){p.repairOptions=e.clone(t),p.ccOptions=e.clone(t)}))})).finally((function(){$log.log("实测巡检--\x3e读取实测数据",p.roomDetail),p.isLoading=!1})),this.initPromise},initProblemData:function(t,a){var i;if(t){var n=JSON.parse(t.drawing_file||"[]");i={id:t.id,pointNum:t.measurement_points,areaNum:0,areaData:[],areasName:a.areasName,exceedNum:t.problem_points,passrate:0,exceedVal:JSON.parse(t&&t.problem_values||"[]"),realityVal:JSON.parse(t&&t.problem_values||"[]"),img:JSON.parse(t.image_file||"[]"),regist:{id:t.regist_by,name:t.regist_by_name,mobile:t.regist_by_mobile,is_im_user:t.regist_is_im_user},regist_date:t.regist_date,regist_day:t.regist_date?o()(t.regist_date).format("YYYY-MM-DD"):"",regist_by_name:t.regist_by_name,regist_by:t.regist_by,regist_by_mobile:t.regist_by_mobile,remark:t.remark,needRepair:!1,status:t.status,repair:t.repair||{},repair_remark:t.repair_remark,repair_date:t.repair_date,repair_day:t.repair_date?o()(t.repair_date).format("YYYY-MM-DD"):"",repair_img:JSON.parse(t.repair_image_file||"[]"),standard_min:"检查中"===t.status?a.standard_min:t.standard_min,standard_max:"检查中"===t.status?a.standard_max:t.standard_max,passrate_mode:"检查中"===t.status?a.passrate_mode:t.passrate_mode,entry_requirements:parseInt(t.entry_requirements),unit:this.roomData.unit,place:this.roomData.fullname,proj_id:this.batchData.proj_id,bidsection_id:this.batchData.bidsection_id,proj_name:this.batchData.proj_name,bidsection_name:this.batchData.section_name+"（"+this.batchData.proj_name+"）",batch_id:this.batchData.id,checkItem:a,roomtype_type:"检查中"===t.status||e.isEmpty(n)?"":n[0].type||"户型图",drawing_file:"检查中"===t.status?[]:n,roomData:this.roomData,cc:t.cc,batch_type:"实测巡检",isOpen:!1}}else i={pointNum:a.measurement_points,areaNum:0,areaData:[],areasName:a.areasName,exceedNum:0,passrate:0,realityVal:[],exceedVal:[],img:[],remark:"",needRepair:!1,status:"检查中",repair:{},entry_requirements:parseInt(this.batchData.entry_requirements),unit:this.roomData.unit,place:this.roomData.fullname,standard_min:a.standard_min,standard_max:a.standard_max,passrate_mode:a.passrate_mode,proj_id:this.batchData.proj_id,bidsection_id:this.batchData.bidsection_id,proj_name:this.batchData.proj_name,bidsection_name:this.batchData.section_name+"（"+this.batchData.proj_name+"）",batch_id:this.batchData.id,checkItem:a,drawing_file:[],roomData:this.roomData,cc:a.cc||[],batch_type:"实测巡检"};return this.hasVal(i.passrate_mode)||(i.passrate_mode=1),i.passrate_mode=1===i.entry_requirements?0:i.passrate_mode,i.isJichaMode=2===i.passrate_mode,5===i.passrate_mode?i.measure_item=["高","宽"]:6===i.passrate_mode?i.measure_item=["开间","进深"]:i.measure_item=[],i.areaData=this.getAreaData(i),i.areaNum=this.getAreaNum(i),this.initProblemPoint(i),i.standardRange=this.getStandardRange(i),e.isEmpty(i.repair)&&("检查中"===i.status||"待整改"===i.status&&e.isEmpty(i.repair))&&(i.repair=this.repairSetting),i},getStandardRange:function(e){if(0===e.passrate_mode){if(!this.hasVal(e.standard_min)&&!this.hasVal(e.standard_max))return"未设置"}else if(!this.hasVal(e.standard_max))return"检查项的合格标准最大值未设置";return this.hasVal(e.standard_min)&&this.hasVal(e.standard_max)?"["+e.standard_min+", "+e.standard_max+"]":this.hasVal(e.standard_max)?"<= "+e.standard_max:this.hasVal(e.standard_min)?">= "+e.standard_min:void 0},initRealityVal:function(e,t){if(t>0)for(var a=0;a<t;a++)e.realityVal.push({val:"",x:"",y:""});else t<0&&e.realityVal.splice(t,-t)},initAreaData:function(t,a){var i;i=7===t.passrate_mode?3:t.checkItem.area_point_num||5;for(var n=t.areaData.length;n<t.areasName.length&&a>0;)e.find(t.areaData,{name:t.areasName[n]})||(t.areaData.push({name:t.areasName[n],setVal:"",pointNum:i}),a--),n++;var r=e.map(t.areaData,(function(e){return/^测区\d+$/.test(e.name)?parseInt(e.name.substr(2)):0})),o=e.maxBy(r);if(o=o===-1/0?0:o,a>0)for(var s=0;s<a;s++)t.areaData.push({name:"测区"+(o+s+1),setVal:"",pointNum:i});else a<0&&t.areaData.splice(a,-a)},initProblemPoint:function(t){var a,i,n=0;if(t){if(t.areaData||(t.areaData=[]),3===t.entry_requirements)return t.pointNum=t.pointNum||0,t.areaNum=t.areaNum||1,t.realityVal=t.realityVal||[],void this.initAreaData(t,t.areaNum-t.areaData.length);if(t.pointNum=t.pointNum||0,t.areaNum=t.areaNum||1,a=t.areaNum-t.areaData.length,1===t.passrate_mode||3===t.passrate_mode)this.initAreaData(t,a),e.some(t.realityVal,"area")||e.each(t.realityVal,(function(e){e.area="测区1"})),e.each(t.areaData,(function(a){var i=e.filter(t.realityVal,{area:a.name}),r=a.pointNum-i.length,o=e.findLastIndex(t.realityVal,{area:a.name});if(n+=parseInt(a.pointNum),3===t.passrate_mode&&e.each(i,(function(e){e.setVal=a.setVal})),o<0&&(o=t.realityVal.length-1),r>0)for(var s=0;s<r;s++)t.realityVal.splice(o+s+1,0,{val:"",area:a.name,setVal:a.setVal});else r<0&&t.realityVal.splice(o+r+1,-r)})),(i=t.realityVal.length-n)>0&&t.realityVal.splice(-i,i);else if(2===t.passrate_mode||4===t.passrate_mode||7===t.passrate_mode)this.initAreaData(t,a),e.each(t.areaData,(function(a){var i=e.filter(t.realityVal,{area:a.name}),r=a.pointNum-i.length,o=e.findLastIndex(t.realityVal,{area:a.name});if(n+=parseInt(a.pointNum),e.each(i,(function(e){e.setVal=4===t.passrate_mode?a.setVal:""})),o<0&&(o=t.realityVal.length-1),r>0)for(var s=0;s<r;s++)t.realityVal.splice(o+s+1,0,{val:"",area:a.name,setVal:4===t.passrate_mode?a.setVal:""});else r<0&&t.realityVal.splice(o+r+1,-r)})),(i=t.realityVal.length-n)>0&&t.realityVal.splice(-i,i);else if(5===t.passrate_mode||6===t.passrate_mode){this.initAreaData(t,a),t.realityVal&&t.realityVal.length&&(t.realityVal=e.filter(t.realityVal,(function(a){var i=e.find(t.areaData,(function(e){return e.name===a.area})),n=e.find(t.measure_item,(function(e){return e===a.label}));return i&&n}))),t.areaData&&t.areaData.length&&e.each(t.areaData,(function(a){e.each(t.measure_item,(function(i){var n,r=2-e.filter(t.realityVal,{area:a.name,label:i}).length;if(r>0){(n=e.findLastIndex(t.realityVal,(function(e){return e.area===a.name})))<0&&(n=t.realityVal.length-1);for(var o=0;o<r;o++)t.realityVal.splice(n+1,0,{val:"",area:a.name,setVal:a.setVal,label:i})}}))}));var r=e.groupBy(t.realityVal||[],(function(e){return e.area+"-"+e.label}));e.each(r,(function(t){e.each(t,(function(e,a){a&&(e.setVal=t[0].setVal)}))}))}}},getAreaData:function(t){var a=this,i=[];if(!t)return i;var n=t.checkItem.id,r=(p.a.getObject(u.a.MEASURE_CHECK_ITEMS_INIT_DATA,p.a.level.user)||{})[n];return!t.id&&"检查中"===t.status&&r&&r.passrate_mode===t.passrate_mode?i=r.areaData:1===t.passrate_mode&&!e.some(t.realityVal,"area")&&t.realityVal.length?i.push({name:"测区1",setVal:"",pointNum:t.realityVal.length>99?99:t.realityVal.length,index:1}):e.each(t.realityVal,(function(n){if(!e.some(i,(function(e){return e.name===n.area}))){var r=e.filter(t.realityVal,{area:n.area}).length;i.push({name:n.area,setVal:a.hasVal(n.setVal)?n.setVal:"",pointNum:r})}})),i},getAreaNum:function(t){return t.areaData&&t.areaData.length?t.areaData.length:7===t.passrate_mode?t.checkItem.area_num||10:e.includes([1,2,3,4],t.passrate_mode)?t.checkItem.area_num||3:t.checkItem.area_num||1},hasVal:function(e){return""!==e&&null!=e},areaNameUpdate:function(t,a){var i=t.name,n=t.nameTemp;if(t&&this.hasVal(n)&&i!==n){var r=e.find(a.areaData,{name:i}),o=e.filter(a.realityVal,{area:i});r&&(r.name=n),e.each(o,(function(e){e.area=n}))}},errorHandle:function(t){var a=this;return t=e.isArray(t)?t:[t],n.a.when().then((function(){var i,r;if(e.some(t,(function(t){return e.some(t.problemData,(function(e){return 3!==e.entry_requirements&&8===e.passrate_mode}))})))return n.a.reject("先录值模式暂不支持“观感”类算法");if(e.some(t,(function(t){return e.some(t.problemData,(function(e){return r=e.passrate_mode,9===e.passrate_mode||4===e.passrate_mode||10===e.passrate_mode||11===e.passrate_mode||12===e.passrate_mode||13===e.passrate_mode}))})))switch(r){case 4:return n.a.reject("暂不支持“净高”算法");case 9:return n.a.reject("暂不支持“混凝土强度”算法");case 10:return n.a.reject("暂不支持“最大偏差”算法");case 11:return n.a.reject("暂不支持“设计值百分比”算法");case 12:return n.a.reject("暂不支持“标高差”算法");case 13:return n.a.reject("暂不支持“门窗垂直度”算法")}return e.each(t,(function(t){e.each(t.problemData,(function(t){1===t.entry_requirements||8===t.passrate_mode||a.hasVal(t.standard_max)||i||(i=e.clone(t))}))})),i?n.a.reject(i.checkItem.item_name+"的合格标准最大值未设置"):void 0}))},pointsHandle:function(t){var a,n=this,r=this.hasVal(t.standard_min)?parseFloat(t.standard_min):-1/0,o=this.hasVal(t.standard_max)?parseFloat(t.standard_max):1/0,s=!e.isEmpty(t.drawing_file);return e.each(t.realityVal,(function(e){n.hasVal(e.val)&&(e.val=parseFloat(e.val))})),1===t.passrate_mode||3===t.passrate_mode?e.each(t.realityVal,(function(e){var t=parseFloat(e.val)-parseFloat(e.setVal||0),a=n.hasVal(e.val)&&(t<r||t>o),i=n.hasVal(e.val)&&t>=r&&t<=o;e.isExceed=a,e.isQualified=i,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):2===t.passrate_mode?(0===r&&(r=o),a=e.groupBy(t.realityVal||[],"area"),e.each(a,(function(a){if(e.some(a,(function(e){return!n.hasVal(e.val)})))e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}));else{var i,l,c=e.maxBy(a,"val"),d=e.minBy(a,"val"),p=parseFloat(c.val)-parseFloat(c.setVal||0),u=parseFloat(d.val)-parseFloat(d.setVal||0),h=p-u;h<=r?e.each(a,(function(e){e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):h>o?e.each(a,(function(e){e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):(l=e.some(a,(function(e){return void 0!==e.isExceed})),"检查中"===t.status||l?i=-1:e.each(a,(function(e){var t=parseFloat(e.val)-parseFloat(e.setVal||0);t-u>r&&(i-=1),p-t>r&&(i+=1)})),e.each(a,(function(e){var t=parseFloat(e.val)-parseFloat(e.setVal||0);i<0?t-u>r?(e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)):(e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)):p-t>r?(e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)):(e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y))})))}}))):4===t.passrate_mode||(5===t.passrate_mode||6===t.passrate_mode?(a=e.groupBy(t.realityVal||[],(function(e){return e.area+"-"+e.label})),e.each(a,(function(t){if(e.some(t,(function(e){return!n.hasVal(e.val)||!n.hasVal(e.setVal)})))e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}));else{var a=e.maxBy(t,(function(e){return Math.abs(e.val-e.setVal)})),i=parseFloat(a.val)-parseFloat(a.setVal||0);n.hasVal(a.val)&&(i<r||i>o)?(e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})),a.isExceed=!0):e.each(t,(function(e){e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}))}}))):7===t.passrate_mode?(a=e.groupBy(t.realityVal||[],"area"),e.each(a,(function(t){if(e.some(t,(function(e){return!n.hasVal(e.val)})))e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}));else{var a=e.maxBy(t,"val").val-e.minBy(t,"val").val;a<r||a>o?e.each(t,(function(e){e.isExceed=!0,e.isQualified=!1,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)})):e.each(t,(function(e){e.isExceed=!1,e.isQualified=!0,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}))}}))):8===t.passrate_mode&&e.each(t.realityVal,(function(e){var t=parseFloat(e.val),a=n.hasVal(e.val)&&!t,i=n.hasVal(e.val)&&!!t;e.isExceed=a,e.isQualified=i,e.showMark=n.hasVal(e.val)&&s,e.hasMark=n.hasVal(e.x)&&n.hasVal(e.y)}))),e.map(t.realityVal,(function(e){return function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?g(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):g(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},e)}))},pointsClean:function(t){return t.realityVal&&e.each(t.realityVal,(function(e){delete e.showMark,delete e.hasMark,delete e.isWarning})),t.problem_values&&e.each(t.problem_values,(function(e){delete e.showMark,delete e.hasMark,delete e.isWarning})),t.realityVal},comoboHandle:function(t){var a,i=this,n=[],r=[],o=!0,s=!0,l=!0,c=!0,d=!0,p=e.find(t.problemData,(function(e){return e.checkItem.id===i.currentCheckItem.id})),u=t.problemData.length&&3===t.problemData[0].entry_requirements&&2===t.problemData[0].passrate_mode,h=e.countBy(t.problemData,(function(e){return"检查中"===e.status?"check":"待整改"===e.status?"todo":"已整改"===e.status?"been":"检查完毕"===e.status?"done":"x"}));h.check===t.problemData.length?t.status="检查中":h.check?(t.status=p.status,o=!1):h.todo?t.status="待整改":h.done?t.status="检查完毕":t.status="已整改","检查中"===t.status?t.mode="edit":("待整改"===t.status||"已整改"===t.status||t.status,t.mode="view"),t.problemData.length>1&&(s=!e.some(t.problemData,(function(e){return 1!==e.passrate_mode&&2!==e.passrate_mode})),l=1===e.uniqBy(e.map(t.problemData,"passrate_mode")).length,d=1===e.uniqBy(e.map(t.problemData,"entry_requirements")).length,"检查中"!==t.status&&(a=e.map(t.problemData,"areaData"),e.each(a,(function(t){n.push(t.length),r.push(e.map(t,"name").join(","))})),c=1===e.uniqBy(n).length&&1===e.uniqBy(r).length)),!(t.problemData.length>1)||o&&s&&l&&c&&d&&!u||(t.problemData=e.filter(t.problemData,(function(e){return e.checkItem.id===i.currentCheckItem.id}))),t.comboAreaNum=t.problemData[0]?t.problemData[0].areaNum:1,t.problemData.length>1&&"检查中"===t.status&&(e.each(t.problemData,(function(e){e.areaNum=t.comboAreaNum,i.initProblemPoint(e)})),e.each(t.problemData,(function(a,n){var r=t.problemData[0].areaData;n&&e.each(r,(function(e,t){a.areaData[t].nameTemp=e.name,i.areaNameUpdate(a.areaData[t],a)}))})))},problemHandle:function(t){var a,i,n=this,r=1;3===t.entry_requirements&&e.each(t.realityVal,(function(e){n.hasVal(e.val)?delete e.isFict:e.isFict=1})),1===t.entry_requirements?(t.realityVal=t.exceedVal,t.exceedNum=t.exceedVal.length,t.pointNum?t.passrate=(t.pointNum-t.exceedNum)/t.pointNum:t.passrate=0):(i=e.filter(t.realityVal,(function(e){return!e.isFict})),5===t.passrate_mode||6===t.passrate_mode?r=2:7===t.passrate_mode&&(r=3),t.exceedVal=e.filter(i,(function(e){return e.isExceed})),t.pointNum=i.length/r,a=e.filter(i,(function(e){return!0!==e.isQualified})),t.exceedNum=a.length/r,t.pointNum?t.passrate=(t.pointNum-t.exceedNum)/t.pointNum:t.passrate=0)},getDrawPoints:function(t,a){var i=this,n=[],r=[];return t=e.clone(t),e.each(t.problemData,(function(e){e.realityVal=i.pointsHandle(e),i.problemHandle(e)})),1===t.problemData[0].passrate_mode?(r=t.problemData[0].realityVal,e.each(t.problemData,(function(t){e.each(t.realityVal,(function(e,t){r[t].isQualified=!0}))})),e.each(t.problemData,(function(t){e.each(t.realityVal,(function(e,t){e.isExceed&&(r[t].isQualified=!1),e.isWarning&&(r[t].isWarning=!0)}))}))):2===t.problemData[0].passrate_mode?(e.each(t.problemData[0].realityVal,(function(a){if(!e.some(n,(function(e){return e.name===a.area}))){var r=e.filter(t.problemData[0].realityVal,{area:a.area}).length;n.push({name:a.area,setVal:i.hasVal(a.setVal)?a.setVal:"",pointNum:r})}})),r=e.map(n,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r}}))):3===t.problemData[0].passrate_mode?r=t.problemData[0].realityVal:4===t.problemData[0].passrate_mode||(5===t.problemData[0].passrate_mode||6===t.problemData[0].passrate_mode?(e.each(t.problemData[0].realityVal,(function(a){if(!e.some(n,(function(e){return e.name===a.area}))){var r=e.filter(t.problemData[0].realityVal,{area:a.area}).length;n.push({name:a.area,setVal:i.hasVal(a.setVal)?a.setVal:"",pointNum:r})}})),r=e.map(n,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r}}))):7===t.problemData[0].passrate_mode?(e.each(t.problemData[0].realityVal,(function(a){if(!e.some(n,(function(e){return e.name===a.area}))){var r=e.filter(t.problemData[0].realityVal,{area:a.area}).length;n.push({name:a.area,setVal:i.hasVal(a.setVal)?a.setVal:"",pointNum:r})}})),r=e.map(n,(function(a){var i=e.filter(t.problemData[0].realityVal,{area:a.name}),n=e.some(i,(function(e){return e.isExceed})),r=e.some(i,(function(e){return e.isWarning}));return{x:i[0].x,y:i[0].y,area:a.name,isQualified:!n,isWarning:r}}))):8===t.problemData[0].passrate_mode&&(r=t.problemData[0].realityVal)),e.each(r,(function(e,t){void 0!==a&&t===a?e.color="#4275e8":e.isQualified?e.color="#0bc666":e.color="#ff4545",e.index=t})),r}}}}).call(this,a("391c"))},cb9a3:function(e,t,a){"use strict";a("0a71")},cc4c:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .content[data-v-1fa2658d]{position:fixed;width:100%;bottom:0;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-1fa2658d]{flex-direction:column}.zjapp .box[data-v-1fa2658d],.zjapp .list-wrap[data-v-1fa2658d]{display:flex;background-color:#fff}.zjapp .list-wrap[data-v-1fa2658d]{flex-direction:row;align-items:flex-start;flex:1;overflow:hidden}.zjapp .list[data-v-1fa2658d]{padding:0 10px}.zjapp .list[data-v-1fa2658d],.zjapp .list-single[data-v-1fa2658d]{flex:1;overflow:auto;height:100%;scroll-behavior:smooth}.zjapp .item-dropdown[data-v-1fa2658d]{padding:6px 0;background-color:transparent}.zjapp .item-dropdown[data-v-1fa2658d] .item-text{font-size:14px}.zjapp .item-dropdown.selected[data-v-1fa2658d]{color:#4275e8;padding-bottom:5px;border-bottom:1px solid #4275e8}.zjapp .item-dropdown.selected[data-v-1fa2658d] .item-text{color:#4275e8}.zjapp .empty-tips[data-v-1fa2658d]{padding:13px 0;line-height:20px;color:#b2b2b2;font-size:14px}.zjapp .select-note[data-v-1fa2658d]{line-height:16px;font-size:12px;color:#8c8c8c}[data-v-1fa2658d] .icon-qualified{width:30px;height:30px;line-height:30px;text-align:center;color:#4275e8}",""])},d0fb:function(e,t,a){"use strict";(function(e){var i=a("fd50"),n=a("bcc7"),r=a("515e"),o=a("e89f"),s=a("07d2"),l=a("7bac"),c=a("a7c3"),d=a("4360");t.a={name:"CheckGuideList",components:{Item:s.a},mixins:[o.a],store:d.a,props:{data:{type:String,default:""}},data:function(){return{show:!1,isLoading:!0,listData:[],module:"",itemId:"",batchId:"",sectionId:"",options:""}},computed:{moduleAttribute:function(){return this.$store.state.global.moduleAttribute}},mounted:function(){this.data=[]},methods:{openPopup:function(t){var a,n=this;for(var r in this.value=!0,this.show=!0,this.module=t.module,this.itemId=t.itemId,this.batchId=t.batchId,this.sectionId=t.sectionId,this.options=t.options,this.$emit("open"),t)this[r]=t[r];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module];var o=!1;e.isEmpty(this.itemId)?!e.isEmpty(this.checkType)&&e.isEmpty(this.sectionId)?a=this.initByType():e.isEmpty(this.batchId)?e.isEmpty(this.options)?e.isEmpty(this.sectionId)?a=i.a.when():(o=!0,a=this.initByBidsection()):a=this.initByOptions():a=this.initByBatch():a=this.initById(),this.isLoading=!0,a.then((function(t){var a=n.moduleAttribute[n.module]||{};!e.isEmpty(a)&&a.setUsualItems&&o?l.a.getUserKey(n.mmkvCode()).then((function(e){e=null===e?t:n.mergeArray(n.deepClone(t),e),n.listData=e||[],n.isLoading=!1})):(n.listData=t||[],n.isLoading=!1)}))},mmkvCode:function(){var e=this.moduleAttribute[this.module]||{};return c.a[e.mmkv_item]+"_"+this.sectionId},mergeArray:function(t,a){var i=this;return e.filter(t,(function(t){var n=a[t.id];return e.isEmpty(t.subitem)||(t.subitem=i.mergeArray(t.subitem,a)),!e.isEmpty(n)||"desc"===t.type}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},clickItem:function(e){e.subitem&&e.subitem.length?this.$set(e,"isOpen",!e.isOpen):"special-inspect"===this.module?r.a.openPopup({itemId:e.id,module:this.module}):r.a.openPopup({itemId:e.item_id,module:this.module})},initById:function(){var e=this;if("special-inspect"!==this.module)return n.a.getCheckItem(this.itemId,this.checkType).then((function(t){return t?e.sectionId?n.a.getBidSectionCheckItemListByCode(e.sectionId,t.code):n.a.getCheckItemTreeByCode(t.code):i.a.when()}))},initByType:function(){return n.a.getCheckItemGuidelineList(this.checkType)},initByBatch:function(){return i.a.when()},initByBidsection:function(){return n.a.getBidSectionCheckItemTreeByType(this.sectionId,this.checkType)},initByOptions:function(){return i.a.resolve(this.options)},deepClone:function(e){return JSON.parse(JSON.stringify(e))}}}}).call(this,a("391c"))},d152:function(e,t,a){"use strict";var i=a("329b"),n=a("ad46").a,r=(a("fc72"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return e.show?a("div",{staticClass:"content",style:{top:e.contentTop+"px"},on:{click:function(t){return t.target!==t.currentTarget?null:e.closePopup(t)}}},[a("transition",{attrs:{name:"slide-down"},on:{enter:function(t){e.isOpening=!0},"after-enter":function(t){e.isOpening=!1},leave:function(t){e.isClosing=!0},"after-leave":e.afterClose}},[e.showList?a("div",{staticClass:"box",style:{height:e.listHeight+"px"}},[e.hasSearch?a("app-search-bar",{ref:"app-search-bar",attrs:{placeholder:"输入项目名称搜索","simple-mode":"","history-key":"drop-down-search-history-key"},on:{changeSearchStatus:e.onSearchTypeChange},model:{value:e.keyword,callback:function(t){e.keyword=t},expression:"keyword"}}):e._e(),!e.isSearching||e.keyword&&e.selectedSet[0]&&e.selectedSet[0].options.length?a("div",{ref:"list-wrap",staticClass:"list-wrap"},[1===e.stage?e._l(e.layoutMap,(function(t,i){var n;return a("div",{key:"map"+i,staticClass:"list-single",class:(n={},n[t.bgColor]=!0,n),style:{height:e.listHeight-(e.hasSearch?44:0)+"px"}},e._l(e.selectedSet[t.level]&&e.selectedSet[t.level].options||[],(function(n,r){return a("item",{key:r,class:{selected:e.selectedSet[t.level].selected&&e.selectedSet[t.level].selected.id===n.id},attrs:{border:"bottom"},on:{click:function(a){e.select(n,t.level)}}},[a("div",{staticClass:"item-text",class:{"color-theme":n.note&&e.selectedSet[t.level].selected&&e.selectedSet[t.level].selected.id===n.id},domProps:{innerHTML:e._s(i?e.showName(n.nameShow||n.name):e.highLightKeyword(n.nameShow||n.name))}}),!n.note&&e.selectedSet[t.level].selected&&e.selectedSet[t.level].selected.id===n.id?a("icon",{attrs:{name:"qualified"}}):e._e(),n.note?a("div",{staticClass:"item-font color-gray2 f14"},[e._v(e._s(n.note))]):e._e()],1)})))})):[e._l(e.layoutMap,(function(t,i){var n;return[t.keep||e.selectedSet[t.level]&&e.selectedSet[t.level].options&&e.selectedSet[t.level].options.length?a("div",{key:"map"+i,staticClass:"list",class:(n={},n[t.bgColor]=!0,n),style:{height:e.listHeight-(e.hasSearch?44:0)+"px"}},[e._l(e.selectedSet[t.level]&&e.selectedSet[t.level].options||[],(function(n,r){return a("item",{key:r,staticClass:"item-dropdown",class:{selected:e.selectedSet[t.level].selected&&e.selectedSet[t.level].selected.id===n.id},on:{click:function(a){e.select(n,t.level)}}},[a("div",{staticClass:"item-text"},[a("p",{domProps:{innerHTML:e._s(i?e.showName(n.nameShow||n.name):e.highLightKeyword(n.nameShow||n.name))}}),a("p",{staticClass:"select-note"},[e._v(e._s(n.note))])])])})),e.selectedSet[t.level]&&e.selectedSet[t.level].options&&e.selectedSet[t.level].options.length?e._e():a("div",{staticClass:"empty-tips"},[e._v("\n                "+e._s(e.selectedSet[t.level-1]&&e.selectedSet[t.level-1].selected&&e.selectedSet[t.level-1].selected.id?t.emptyText:"请选择")+"\n              ")])],2):e._e()]}))]],2):e._e(),!e.isSearching||!e.keyword||e.selectedSet[0]&&e.selectedSet[0].options.length?e._e():a("loading-status",{attrs:{"is-empty":!0,type:"search","empty-text":"未搜索到相关内容"}})],1):e._e()])],1):e._e()}),[],!1,null,"1fa2658d",null).exports,s=!1;s||(s=new(i.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));t.a=s},d306:function(e,t,a){"use strict";var i=a("41dd").a,n=(a("5317"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{ref:"select-con",staticClass:"select-con",class:{"select-disabled":!e.editabled||e.isLoading},on:{click:e.openDialog}},[a("div",{staticClass:"select-hd"},[e._v(e._s(e.isLoading?"...":e.hdText))]),a("div",{staticClass:"select-bd"},[e._v(e._s(e.isLoading?"...":e.bdText))]),e.editabled?a("icon",{staticClass:"select-arrow",attrs:{name:e.isOpen?"arrow-up":"arrow-down"}}):e._e()],1)}),[],!1,null,"687c6024",null);t.a=r.exports},d366:function(e,t,a){"use strict";var i=a("25ba").a,n=(a("41b1"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"measure-detail-content"},[a("scroller",{ref:"scroller"},["view"===e.detail.mode?a("problem-detail-header",{staticClass:"bg-white pr0",attrs:{status:e.detail.status}},[a("template",{slot:"operat"},[e.detail.allowReedit?a("div",{staticClass:"btn-reedit",on:{click:function(t){e.changeMode("reedit")}}},[e._v("\n          修改\n          "),a("icon",{attrs:{name:"edit"}})],1):e._e(),9!==e.detail.problemData[0].passrate_mode?a("div",{staticClass:"btn-drawing",on:{click:function(t){e.viewHuxing(e.detail)}}},[e._v("\n          户型图\n          "),a("icon",{attrs:{name:"arrow-right"}})],1):e._e()])],2):e._e(),a("item",[a("div",{directives:[{name:"track",rawName:"v-track",value:"实测巡检-查看详情页-数据对比",expression:"'实测巡检-查看详情页-数据对比'"}],staticClass:"item-font color-theme",on:{click:e.showMeasureData}},[e._v("\n        数据对比\n      ")])]),"edit"===e.detail.mode||"reedit"===e.detail.mode?a("div",{staticClass:"bg-white"},[a("item",{attrs:{border:"bottom"}},[9!==e.detail.problemData[0].passrate_mode?a("div",{staticClass:"item-font color-theme f14",on:{click:e.viewHuxing}},[e._v("\n          户型图\n          "),a("icon",{staticClass:"ml5",staticStyle:{"font-size":"12px"},attrs:{name:"arrow-right"}})],1):e._e(),9===e.detail.problemData[0].passrate_mode?a("div",{staticClass:"value-input"},[a("span",{staticClass:"value-input-label"},[e._v("强度设计值")]),a("number-input",{staticStyle:{width:"40px"},attrs:{decimal:2,range:[1,99.99]},model:{value:e.detail.problemData[0].intensitySetVal,callback:function(t){e.$set(e.detail.problemData[0],"intensitySetVal",t)},expression:"detail.problemData[0].intensitySetVal"}})],1):e._e(),a("div",{staticClass:"item-con value-input align-r"},[a("span",{staticClass:"value-input-label"},[e._v("测区数")]),a("number-input",{staticStyle:{width:"40px"},attrs:{type:"int positive",range:[1,99]},on:{blur:e.areaNumChange},model:{value:e.detail.areaNum,callback:function(t){e.$set(e.detail,"areaNum",t)},expression:"detail.areaNum"}})],1)]),e._l(e.detail.areaData,(function(t,i){return a("div",{key:i,staticClass:"pt15 pl15 pr15"},[a("div",{staticClass:"area-name"},[a("div",{directives:[{name:"show",rawName:"v-show",value:!t.isEditing,expression:"!area.isEditing"}],staticClass:"area-name-text",on:{click:function(a){e.areaNameEdit(t,a)}}},[e._v("\n            "+e._s(t.name)+"\n          ")]),a("div",{directives:[{name:"show",rawName:"v-show",value:t.isEditing,expression:"area.isEditing"}],staticClass:"area-name-input"},[a("input",{directives:[{name:"model",rawName:"v-model",value:t.nameTemp,expression:"area.nameTemp"}],attrs:{type:"text",maxlength:"5"},domProps:{value:t.nameTemp},on:{blur:function(a){e.areaNameUpdate(t,e.detail)},input:function(a){a.target.composing||e.$set(t,"nameTemp",a.target.value)}}})])]),e._l(e.detail.problemData,(function(n,r){return a("div",{key:r},[a("div",{staticClass:"area-info"},[a("div",{staticClass:"checkitem-info"},[5!==n.passrate_mode?a("span",{staticClass:"checkitem-name"},[e._v(e._s(n.checkItem.name))]):e._e(),a("span",{staticClass:"checkitem-standard"},[e._v(" "+e._s(n.standardRange))])]),e.contains([3,4,10,11],n.passrate_mode)?a("div",{staticClass:"value-input pl10"},[a("span",{staticClass:"value-input-label"},[e._v("设计值")]),a("number-input",{attrs:{decimal:e.$store.state.measure.valueDecimal,range:e.$store.state.measure.valueRange},on:{blur:function(t){e.setValUpdate(n)},focus:function(t){e.autoInputSetVal(n,n.areaData[i])},input:function(t){e.saveInputSetVal(n,n.areaData[i])}},model:{value:n.areaData[i].setVal,callback:function(t){e.$set(n.areaData[i],"setVal",t)},expression:"problem.areaData[areaIndex].setVal"}})],1):e._e(),e.contains([1,2,3,4,8,10,11,12],n.passrate_mode)?a("div",{staticClass:"value-input pl10"},[a("span",{staticClass:"value-input-label"},[e._v("点数")]),a("number-input",{staticStyle:{width:"40px"},attrs:{type:"int positive",range:[0,99]},on:{blur:function(t){e.areaPointNumChange(e.detail,n,n.areaData[i])}},model:{value:n.areaData[i].pointNum,callback:function(t){e.$set(n.areaData[i],"pointNum",t)},expression:"problem.areaData[areaIndex].pointNum"}})],1):e._e()]),e.contains([1,2,3,4,7,10,11,12,13],n.passrate_mode)?a("div",{staticClass:"number-input-group"},e._l(e.pointFilter(n.realityVal,{area:t.name}),(function(t,r){return a("number-input",{key:r,class:{"color-red":t.isExceed},attrs:{decimal:e.$store.state.measure.valueDecimal,range:e.$store.state.measure.valueRange},on:{blur:function(t){e.realityValUpdate(n)},focus:function(t){e.autoInputSetVal(n,n.areaData[i])}},model:{value:t.val,callback:function(a){e.$set(t,"val",a)},expression:"point.val"}},[t.showMark?[t.hasMark?a("div",{staticClass:"huxing-view",attrs:{slot:"extend"},on:{click:function(a){e.markHuxing(e.detail,t)}},slot:"extend"},[e._v("\n                  图\n                ")]):a("div",{staticClass:"huxing-mark",attrs:{slot:"extend"},on:{click:function(a){a.stopPropagation(),e.markHuxing(e.detail,t)}},slot:"extend"},[a("i",{staticClass:"arrow"}),e._v("标点位\n                ")])]:e._e()],2)}))):e._e(),e.contains([5,6],n.passrate_mode)?a("div",{staticClass:"pt15 pb10"},e._l(n.measure_item,(function(r,o){return a("div",{key:o,staticClass:"item-input-group",class:{mt10:o}},[a("div",{staticClass:"label-input-group"},[e._v(e._s(r))]),e._l(e.pointFilter(n.realityVal,{area:t.name,label:r}),(function(t,r){return a("number-input",{key:r,class:{"color-red":t.isExceed,ml10:r},attrs:{decimal:e.$store.state.measure.valueDecimal,range:e.$store.state.measure.valueRange},on:{blur:function(t){e.realityValUpdate(n)},focus:function(t){e.autoInputSetVal(n,n.areaData[i])}},model:{value:t.val,callback:function(a){e.$set(t,"val",a)},expression:"point.val"}},[t.showMark?[t.hasMark?a("div",{staticClass:"huxing-view",attrs:{slot:"extend"},on:{click:function(a){e.markHuxing(e.detail,t)}},slot:"extend"},[e._v("\n                    图\n                  ")]):a("div",{staticClass:"huxing-mark",attrs:{slot:"extend"},on:{click:function(a){a.stopPropagation(),e.markHuxing(e.detail,t)}},slot:"extend"},[a("i",{staticClass:"arrow"}),e._v("标点位\n                  ")])]:e._e()],2)})),a("div",{staticClass:"label-input-group label-input-group-flex"},[e._v("设计值")]),e._l(e.pointFilter(n.realityVal,{area:t.name,label:r}),(function(t,r){return[0===r?a("number-input",{key:o+"-"+r,attrs:{decimal:e.$store.state.measure.valueDecimal,range:e.$store.state.measure.valueRange},on:{blur:function(t){e.setValUpdate(n)},focus:function(t){e.autoInputSetVal(n,n.areaData[i])}},model:{value:t.setVal,callback:function(a){e.$set(t,"setVal",a)},expression:"setValItem.setVal"}}):e._e()]}))],2)}))):e._e(),e.contains([9],n.passrate_mode)?a("div",{staticClass:"number-input-group"},e._l(e.pointFilter(n.realityVal,{area:t.name}),(function(t,i){return a("number-input",{key:i,attrs:{decimal:e.$store.state.measure.valueDecimal,range:e.$store.state.measure.valueRange},on:{blur:function(t){e.realityValUpdate(n)}},model:{value:t.val,callback:function(a){e.$set(t,"val",a)},expression:"point.val"}})}))):e._e()])}))],2)}))],2):e._e(),"edit"===e.detail.mode?a("div",{staticClass:"mt10"},[a("item",{staticClass:"p15"},[a("item-img-list",{attrs:{maxlength:50},on:{callback:e.saveProblem,remove:e.saveProblem},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1),a("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},on:{blur:e.saveProblem},model:{value:e.detail.remark,callback:function(t){e.$set(e.detail,"remark",t)},expression:"detail.remark"}}),a("user-select",{attrs:{title:"抄送人",multi:!0,options:e.ccOptions,required:!0,memory:!0},on:{onSelect:e.changeCC},model:{value:e.detail.cc,callback:function(t){e.$set(e.detail,"cc",t)},expression:"detail.cc"}})],1):e._e(),"view"===e.detail.mode?[a("div",{staticClass:"detail-list-hd border-bottom"},[e.detail.problemData.length>1?a("div",{staticClass:"list-hd-toggle",on:{click:function(t){e.toggleProblemDataAll(e.detail)}}},[e._v("\n          "+e._s(e.hasProblemDataClose?"全展开":"全收起")+"\n        ")]):e._e(),1===e.detail.problemData.length?a("div",{staticClass:"list-hd-title"},[e._v("\n          检查项\n        ")]):e._e(),a("div",{staticClass:"list-hd-num"},[e._v("计算点数")]),9!==e.detail.problemData[0].passrate_mode?a("div",{staticClass:"list-hd-passrate"},[e._v("\n          合格率\n        ")]):e._e(),9===e.detail.problemData[0].passrate_mode?a("div",{staticClass:"list-hd-passrate align-c ws-nowrap",staticStyle:{width:"72px"}},[e._v("\n          强度值\n        ")]):e._e(),9===e.detail.problemData[0].passrate_mode?a("div",{staticClass:"list-hd-passrate ws-nowrap",staticStyle:{width:"100px"}},[e._v("\n          强度百分比\n        ")]):e._e()]),a("div",{staticClass:"detail-list"},e._l(e.detail.problemData,(function(t,i){return a("div",{key:i,staticClass:"border-bottom"},[a("div",{staticClass:"detail-item-hd",on:{click:function(a){e.toggleProblemData(t)}}},[e.detail.problemData.length>1?a("i",{staticClass:"detail-item-arrow",class:{"item-arrow-right":!t.isOpen,"item-arrow-down":t.isOpen}}):e._e(),a("div",{staticClass:"detail-item-name",class:{pl15:1===e.detail.problemData.length}},[e._v("\n              "+e._s(t.checkItem.name)+"\n            ")]),a("div",{staticClass:"detail-item-num"},[e._v(e._s(t.pointNum))]),9===e.detail.problemData[0].passrate_mode?a("div",{staticClass:"detail-item-passrate align-c",staticStyle:{width:"72px"}},[e._v("\n              "+e._s(t.intensityVal)+"\n            ")]):e._e(),a("div",{staticClass:"detail-item-passrate",class:{"color-red":t.passrate<.9}},[e._v("\n              "+e._s(e._f("percent")(t.passrate,2))+"\n            ")])]),t.isOpen?a("div",{staticClass:"detail-item-bd"},[9===t.passrate_mode?a("div",{staticClass:"detail-line"},[a("div",{staticClass:"detail-line-label",class:{"detail-line-label-single":1===e.detail.problemData.length},staticStyle:{width:"115px"}},[e._v("\n                强度设计值\n              ")]),a("div",{staticClass:"detail-line-con"},[e._v(e._s(t.intensitySetVal))])]):a("div",{staticClass:"detail-line"},[a("div",{staticClass:"detail-line-label",class:{"detail-line-label-single":1===e.detail.problemData.length}},[e._v("\n                合格标准\n              ")]),a("div",{staticClass:"detail-line-con"},[e._v(e._s(t.standardRange))])]),a("div",{staticClass:"detail-line"},[a("div",{staticClass:"detail-line-label",class:{"detail-line-label-single":1===e.detail.problemData.length}},[e._v("\n                实测值\n              ")]),5===t.passrate_mode||6===t.passrate_mode?a("div",{staticClass:"detail-line-con"},e._l(t.areaData,(function(i,n){return a("div",{key:n,style:{"margin-top":(n?8:0)+"px"}},[a("p",[a("span",{staticClass:"detail-line-area"},[e._v(e._s(i.name))])]),e._l(t.measure_item,(function(n,r){return[e.hasPoints(t.realityVal,{area:i.name,label:n}).length?a("div",{key:r,staticClass:"view-points-line",style:{"margin-top":"4px"}},[a("div",{staticClass:"view-points-left"},[a("span",[e._v(e._s(n)+":")]),e._l(e.pointFilter(t.realityVal,{area:i.name,label:n}),(function(t,i){return[i?[e._v(" , ")]:e._e(),a("span",{key:i,class:{"color-red":t.isExceed}},[e._v(e._s(t.val))])]}))],2),a("div",{staticClass:"view-points-right"},[e._v("\n                        设计值\n                        "+e._s(e.pointFilter(t.realityVal,{area:i.name,label:n})[0].setVal)+"\n                      ")])]):e._e()]}))],2)}))):a("div",{staticClass:"detail-line-con"},e._l(e.getAreaData(t.realityVal),(function(i,n){return a("div",{key:n,style:{"margin-top":(n?8:0)+"px"}},[a("p",[a("span",{staticClass:"detail-line-area"},[e._v(e._s(i.name))]),3===t.passrate_mode||4===t.passrate_mode||10===t.passrate_mode||11===t.passrate_mode?a("span",{staticClass:"detail-line-setval"},[e._v("设计值\n                      "+e._s(e.pointFilter(t.realityVal,{area:i.name})[0].setVal))]):e._e()]),a("p",{staticStyle:{"margin-top":"4px"}},[e._l(e.pointFilter(t.realityVal,{area:i.name}),(function(t,i){return[i?[e._v(" , ")]:e._e(),a("span",{key:i,class:{"color-red":t.isExceed}},[e._v(e._s(t.val))])]})),e.pointFilter(t.realityVal,{area:i.name}).length?e._e():a("span",[e._v("无")])],2)])})))])]):e._e()])}))),a("div",{staticClass:"mt10"},[e.detail.remark||e.detail.img.length?a("item",{attrs:{label:"补充说明"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.detail.remark?a("div",{staticClass:"item-font"},[e._v(e._s(e.detail.remark))]):e._e(),a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1)]):e._e(),a("user-select",{attrs:{title:"检查人",mode:"view",date:e.formatDate(e.detail.regist_date),editabled:!1},model:{value:e.detail.regist,callback:function(t){e.$set(e.detail,"regist",t)},expression:"detail.regist"}}),(e.detail.repair_remark||e.detail.repair_image_file&&e.detail.repair_image_file.length)&&"待整改"!==e.detail.status?a("item",{attrs:{label:"整改照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.detail.repair_remark?a("div",{staticClass:"item-font"},[e._v(e._s(e.detail.repair_remark))]):e._e(),a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.repair_image_file,callback:function(t){e.$set(e.detail,"repair_image_file",t)},expression:"detail.repair_image_file"}})],1)]):e._e(),!e.detail.repair.id||"待整改"!==e.detail.status&&"已整改"!==e.detail.status?e._e():a("user-select",{attrs:{title:"整改人",mode:"view",options:e.repairOptions,date:"已整改"===e.detail.status?e.formatDate(e.detail.repair_date):"",editabled:(e.detail.isChecker||e.detail.isRepair)&&"待整改"===e.detail.status},on:{onSelect:e.onSelectRepair},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}),e.detail.isRepair&&"待整改"===e.detail.status?a("item",{attrs:{label:"整改照片"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[a("item-img-list",{attrs:{maxlength:50},model:{value:e.repair_image_file,callback:function(t){e.repair_image_file=t},expression:"repair_image_file"}})],1)]):e._e(),e.detail.isRepair&&"待整改"===e.detail.status?a("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:e.repair_remark,callback:function(t){e.repair_remark=t},expression:"repair_remark"}}):e._e(),a("user-select",{attrs:{title:"抄送人",mode:"view",multi:!0,options:e.ccOptions,editabled:"已整改"!==e.detail.status},on:{onSelect:e.changeCC},model:{value:e.detail.cc,callback:function(t){e.$set(e.detail,"cc",t)},expression:"detail.cc"}})],1)]:e._e(),"reedit"===e.detail.mode?[e.detail.remark||e.detail.img.length?a("item",{staticClass:"mt10",attrs:{label:"补充说明"}},[a("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.detail.remark?a("div",{staticClass:"item-font"},[e._v(e._s(e.detail.remark))]):e._e(),a("item-img-list",{attrs:{editabled:!1},model:{value:e.detail.img,callback:function(t){e.$set(e.detail,"img",t)},expression:"detail.img"}})],1)]):e._e()]:e._e(),"检查完毕"===e.detail.status&&"reedit"!==e.detail.mode?[a("div",{staticClass:"need-repair",on:{click:e.setNeedRepair}},[a("icon",{attrs:{name:e.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),e._v("通知整改\n      ")],1),e.detail.needRepair?a("user-select",{attrs:{title:"整改人",options:e.repairOptions,memory:!0},model:{value:e.detail.repair,callback:function(t){e.$set(e.detail,"repair",t)},expression:"detail.repair"}}):e._e(),e.detail.needRepair?a("app-button-group",{staticClass:"pt10"},[a("app-button",{attrs:{name:"通知整改"},on:{click:e.setRepair}})],1):e._e()]:e._e()],2),"检查中"===e.detail.status&&"reedit"!==e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[a("app-button",{staticStyle:{width:"50%"},attrs:{name:"暂存",plain:""},on:{click:e.saveProblemAndTip}}),a("app-button",{attrs:{name:"提交检查记录"},on:{click:e.submitCheck}})],1):e._e(),"reedit"===e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{attrs:{name:"提交检查记录"},on:{click:e.resubmitCheck}})],1):e._e(),"待整改"===e.detail.status&&e.detail.isRepair&&"reedit"!==e.detail.mode?a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{attrs:{name:"完成整改"},on:{click:e.submitRepair}})],1):e._e()],1)}),[],!1,null,"05a4eccf",null);t.a=r.exports},d501:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .select-con[data-v-7ec13e18]{position:relative;padding:7px 40px 7px 15px;height:50px;overflow:hidden}.zjapp .select-con[data-v-7ec13e18]:not(:first-child){border:none;background-image:linear-gradient(90deg,#d7e0f7,#d7e0f7 50%,transparent 0);background-size:1px 100%;background-repeat:no-repeat;background-position:0 0}.zjapp .select-con>*[data-v-7ec13e18]{pointer-events:none}.zjapp .select-hd[data-v-7ec13e18]{line-height:14px;font-size:10px;color:#333;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .select-bd[data-v-7ec13e18]{margin-top:2px;font-size:14px}.zjapp .select-bd[data-v-7ec13e18],.zjapp .select-text[data-v-7ec13e18]{line-height:20px;color:#333;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .select-text[data-v-7ec13e18]{padding:8px 0;font-size:16px}.zjapp .select-arrow[data-v-7ec13e18]{position:absolute;top:5px;right:0;width:40px;height:40px;line-height:40px;font-size:16px;color:#c8c8c8;text-align:center}",""])},d623:function(e,t,a){"use strict";var i=a("2a67").a,n=(a("7fbc"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{ref:"select-con",staticClass:"select-con",on:{click:e.openDialog}},[e.$slots.default?[e._t("default")]:[a("div",{staticClass:"select-hd"},[e._v(e._s(e.hdText))]),a("div",{staticClass:"select-bd"},[e._v(e._s(e.bdText))])],a("icon",{staticClass:"select-arrow",attrs:{name:e.isOpen?"arrow-up":"arrow-down"}})],2)}),[],!1,null,"7ec13e18",null);t.a=r.exports},d86d:function(e,t,a){var i=a("f00b");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("430bada8",i,!0,{sourceMap:!1,shadowMode:!1})},da1c:function(e,t,a){"use strict";a("163d");var i=a("65a8"),n={name:"ProblemHeader",props:{status:{type:String,default:""},statusText:{type:String,default:""},level:{type:String,default:""},isTimeout:{type:Boolean,default:!1},sentBackTimes:{type:[Number,String],default:0}},data:function(){return{edOptions:{}}},created:function(){var e=this;i.a.getOptions("紧急程度").then((function(t){e.edOptions=t}))}},r=(a("1f63"),a("17cc")),o=Object(r.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",e._g({staticClass:"problem-detail-header border-bottom"},e.$listeners),[a("div",{staticClass:"status",class:{"待整改":"status-red","不合格":"status-red","已退回":"status-red","待复验":"status-orange","已放水待验收":"status-orange","检查中":"status-orange","待验收":"status-orange","已通过":"status-green","已整改":"status-green","已提交":"status-green","合格":"status-green","检查完毕":"status-green","已验收":"status-green","已关闭":"status-black","进度正常":"status-green","进度滞后":"status-red","验收中":"status-orange","已抽验":"status-green"}[e.status]},[e._v(e._s(e.statusText||e.status))]),"紧急"===e.level||"特急"===e.level?a("span",{staticClass:"urgent"},[e._v(e._s(e.edOptions[e.level]))]):e._e(),e.isTimeout?a("span",{staticClass:"timeout"},[e._v("超时")]):e._e(),e.sentBackTimes>0?a("span",{staticClass:"return"},[e._v("退回"+e._s(e.sentBackTimes)+"次")]):e._e(),e._t("operat")],2)}),[],!1,null,"0901aadd",null);t.a=o.exports},dc98:function(e,t,a){"use strict";a("0732")},dd9c:function(e,t,a){"use strict";(function(e){var i=a("4c09"),n=a("774b"),r=a("07d2"),o=a("e68e"),s=a("6948"),l=a("cd05"),c=a("3c64"),d=a("5a71"),p=a("da1c"),u=a("e2a7"),h=a("c0fb"),m=a("732d");t.a={name:"MeasureDetailTemplate1",components:{Scroller:n.a,Item:r.a,ItemImgList:o.a,NumberInput:s.a,UserSelect:l.a,ItemTextarea:c.a,ProblemDetailHeader:p.a,SingleSelect:d.a},mixins:[m.a],props:{detail:{type:Object,default:function(){}},repairOptions:{type:Array,default:function(){return[]}},ccOptions:{type:Array,default:function(){return[]}}},data:function(){return{repair_image_file:[],repair_remark:""}},computed:{checkitem:function(){return this.detail.problemData&&this.detail.problemData[0]&&this.detail.problemData[0].checkItem||{}}},methods:{pointNumChange:function(e){e.pointNum<e.realityVal.length&&e.realityVal.splice(e.pointNum,e.realityVal.length-1),this.$emit("problemValueChange",this.saveProblem)},addExceedVal:function(e){var t=this;e.realityVal.length>=e.pointNum?u.a.alert("爆点个数不能大于实测点数"):(e.realityVal.push({val:""}),this.$nextTick((function(){var e=t.$refs["exceed-point-input"],a=e&&e[e.length-1];a&&a.openKeyboard()})))},removeExceedVal:function(e){e.realityVal.pop(),this.$emit("problemValueChange",this.saveProblem)},updatedExceedVal:function(e){this.$emit("problemValueChange",this.saveProblem)},markExceedVal:function(t){var a=this;h.a.openPopup({mode:"edit",url:this.drawingUrl,points:t.realityVal||[],maxMarks:t.pointNum,callback:function(n){if(n){var r;e.each(n,(function(e){e.isExceed=!0,e.isQualified=!1}));var o=t.realityVal.length;(r=t.realityVal).splice.apply(r,[0,o].concat(Object(i.a)(n))),a.$emit("problemValueChange",a.saveProblem)}}})},viewHuxing:function(){var t=[];this.drawingUrl?(e.each(this.detail.problemData,(function(a){t=e.clone(a.realityVal)})),h.a.openPopup({mode:"view",url:this.drawingUrl,points:t})):u.a.alert("PC端未设置户型图")}}}}).call(this,a("391c"))},e053:function(e,t,a){"use strict";(function(e){a("cc57");var i=a("f369"),n=a("9c47"),r=a("d366"),o=a("8819"),s=a("d623"),l=a("d306"),c=a("c895"),d=a("6144"),p=a("e2a7");t.a={name:"MeasureInspectDetail",components:{CheckGuide:i.a,MeasureDetailTemplate1:n.a,MeasureDetailTemplate2:r.a,MeasureDetailTemplate3:o.a,DropDownSelect:s.a,DropSelectCheckitem:l.a},mixins:[c.a],data:function(){return{batchId:"",roomId:"",checkitemId:"",problemId:"",isSaving:!1}},computed:{pageTitle:function(){return this.isLoading&&"...",this.roomData&&this.roomData.name||""},entryRequirements:function(){return this.roomDetail&&this.roomDetail.problemData&&this.roomDetail.problemData[0]&&this.roomDetail.problemData[0].entry_requirements},checkItemGuideIds:function(){return e.isEmpty(this.checkItemData)?[]:e.map(this.checkItemData,"id")}},activated:function(){this.$router.isBack||(this.batchId=this.$route.query.batchId,this.roomId=this.$route.query.roomId,this.checkitemId=this.$route.query.checkitemId,this.problemId=this.$route.query.problemId,console.log(this.batchId,this.roomId,this.checkitemId,this.problemId),this.loadDetail())},methods:{onChangeRoom:function(e){var t=e[e.length-1]||{};this.roomId=t.id,this.loadDetail()},onChangeCheckitem:function(e){this.checkitemId=e.id,d.a.saveUserObject("measure-inspect-default-checkitem-key-"+this.batchId,e),this.loadDetail()},onProblemValueChange:function(t){var a=this;e.each(this.roomDetail.problemData||[],(function(e){a.initProblemPoint(e),e.realityVal=a.pointsHandle(e),a.problemHandle(e)})),t&&t()},loadDetail:function(){var e=this;this.init(this.batchId,this.roomId,this.checkitemId,this.problemId).then((function(){console.log("roomDetail ======",e.roomDetail)})).catch((function(t){console.error(t),p.a.alert(t),e.$router.go(-1)}))}}}}).call(this,a("391c"))},e195:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .need-repair[data-v-088fb628]{height:46px;line-height:18px;padding:14px 15px;margin-top:10px;font-size:16px;color:#666}.zjapp .need-repair .icon[data-v-088fb628]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .btn-reedit[data-v-088fb628]{width:80px;padding:12px 0;line-height:22px;font-size:14px;text-align:center;color:#4275e8}.zjapp .btn-reedit .icon[data-v-088fb628]{margin-top:5px;font-size:12px;vertical-align:top}",""])},e1a2:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .select-con[data-v-687c6024]{position:relative;padding:7px 40px 7px 15px;height:50px;overflow:hidden}.zjapp .select-con>*[data-v-687c6024]{pointer-events:none}.zjapp .select-hd[data-v-687c6024]{line-height:14px;font-size:10px}.zjapp .select-bd[data-v-687c6024],.zjapp .select-hd[data-v-687c6024]{color:#333;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .select-bd[data-v-687c6024]{margin-top:2px;line-height:20px;font-size:14px}.zjapp .select-arrow[data-v-687c6024]{position:absolute;top:5px;right:0;width:40px;height:40px;line-height:40px;font-size:16px;color:#c8c8c8;text-align:center}.zjapp .select-disabled[data-v-687c6024]{background-color:#f5f7fb}.zjapp .select-disabled .select-bd[data-v-687c6024],.zjapp .select-disabled .select-hd[data-v-687c6024]{color:#666}.zjapp .select-disabled .select-arrow[data-v-687c6024]{display:none}",""])},e223:function(e,t,a){"use strict";var i=a("c40a").a,n=(a("0aac"),a("17cc")),r=Object(n.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",e._g({ref:"content",staticClass:"drawing-con"},e.$listeners),[e.isDownloading?[a("p",[a("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[a("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),a("p",{staticClass:"loading-text"},[e._v("正在下载...")])]:[e.error?e._e():a("canvas",{ref:"drawing-canvas"}),e.error?a("p",{staticClass:"error-text"},[e._v(e._s(e.error))]):e._e()]],2)}),[],!1,null,"fba5990a",null);t.a=r.exports},e6ff:function(e,t,a){"use strict";a("80ea")},e865:function(e,t,a){"use strict";(function(e){var i,n=a("fd50"),r=a("fc9f"),o=a("3bd5"),s=a("334f"),l=a("b725"),c=a("6b81"),d="checkquality_problem";i={getRoomProblems:function(e,t){return r.a.query("SELECT p.id AS id, pp.name AS pp_name, pc.name AS pc_name, pp.id AS pp_id, pc.id AS pc_id, p.id AS problem_id,                 p.room_id as room_id, p.batch_id as batch_id, p.status as status,                 p.measurement_points as measurement_points, p.problem_points as problem_points, p.problem_values as problem_values, p.problem_values_zip as problem_values_zip,                 p.entry_requirements as p_entry_requirements, p.standard_min as p_standard_min, p.standard_max as p_standard_max,                 batch.entry_requirements as entry_requirements, pc.standard_min as standard_min, pc.standard_max as standard_max,                 case when p.id is null then pc.passrate_mode else p.passrate_mode end as passrate_mode             FROM problem_class pp             INNER JOIN problem_class pc ON pp.id = pc.parent_id AND pp.type = 41 AND ifnull(pp.parent_id, '') != ''             inner join section_checkitem sc on sc.item_id = pc.id             inner join batch on batch.bidsection_id = sc.bidsection_id and batch.id = ?             LEFT JOIN checkquality_problem p ON pc.id = p.item_id AND p.batch_id = ? AND p.room_id = ? AND p.batch_type in ('实测实量(新)', '实测巡检')             ORDER BY pp.code, pc.code",[e,e,t])},getMeasureNewBatchRoomProblems:function(t,a,i,n){var o="";i&&(o=" and p.unit = '"+i+"' ");var s=e.reduce(n,(function(e,t){return e+",'"+t+"'"}),"");s&&(s=s.substr(1));var l="SELECT * FROM             checkquality_problem p             WHERE p.batch_type = '实测实量(新)'             AND p.status != '检查中'             AND p.batch_id = ?             AND p.building_id = ?             "+o+"             AND p.item_id IN (             "+s+"             )";return r.a.query(l,[t,a])},getMeasureNewRoomItemProblem:function(e,t,a){return r.a.query("SELECT p.*, uReg.name as regist_by_name, uReg.mobile as regist_by_mobile, uRep.name as repair_name, uRep.mobile as repair_mobile,                     uRep.is_im_user as repair_is_im_user , uReg.is_im_user as regist_is_im_user                     FROM checkquality_problem p                     LEFT JOIN user uReg on p.regist_by = uReg.id                     LEFT JOIN user uRep on p.repair_by = uRep.id                     WHERE p.batch_id = ?                     AND p.room_id = ?                     AND p.item_id = ?",[e,t,a])},getMeasureNewFloorProblem:function(e,t,a,i,n){var o="";a&&(o=" and p.unit = '"+a+"' ");var s="SELECT p.*, uReg.name as regist_by_name, uReg.mobile as regist_by_mobile, uRep.name as repair_name, uRep.mobile as repair_mobile,                     uRep.is_im_user as repair_is_im_user , uReg.is_im_user as regist_is_im_user                     FROM checkquality_problem p                     LEFT JOIN user uReg on p.regist_by = uReg.id                     LEFT JOIN user uRep on p.repair_by = uRep.id                     WHERE p.batch_id = ?                     AND p.building_id = ?                     "+o+"                    AND p.floor = ?                     AND p.item_id = ?";return r.a.query(s,[e,t,i,n])},insert:function(e){return r.a.insertObject(d,e)},update:function(e,t,a,i){return e.modified_by=o.a.getUser().user_id,r.a.update(d,e,{id:e.id}).then((function(){return s.a.saveProblemCC(e.id,t)})).then((function(){return l.a.saveProblemRepair(e.id,a)})).then((function(){return c.a.saveProblemReinspect(e.id,i)}))},getMeasureProblem:function(e,t,a){return r.a.queryOne("select p.*, u.name as regist_by_name, u.mobile as regist_by_mobile, u.is_im_user as regist_is_im_user, pp.status as parent_status,                     urepair.name as repair_name, urepair.mobile as repair_mobile, urepair.is_im_user as repair_is_im_user                 from checkquality_problem p                 left join checkquality_problem pp on p.parent_id = pp.id                 left join user u on p.regist_by = u.id                 left join user urepair on p.repair_by = urepair.id                 where p.batch_id = ? and p.item_id = ? and p.room_id = ? ",[e,t,a])},getMeasureProblemById:function(e){return r.a.queryOne("select p.*, u.name as regist_by_name, u.mobile as regist_by_mobile, u.is_im_user as regist_is_im_user, pp.status as parent_status,                     urepair.name as repair_name, urepair.mobile as repair_mobile, urepair.is_im_user as repair_is_im_user                 from checkquality_problem p                 left join checkquality_problem pp on p.parent_id = pp.id                 left join user u on p.regist_by = u.id                 left join user urepair on p.repair_by = urepair.id                 where p.id = ? ",[e])},getMeasureProblemsByStatus:function(t,a){var i=[t];e.isArray(a)?i=i.concat(a):i.push(a);var n="select * from checkquality_problem where batch_id = ? and ("+e.map(a,(function(){return"status = ?"})).join(" or ")+") and ifnull(parent_id, '') != ''";return r.a.query(n,i)},getMeasureProblemsByRoom:function(t,a){var i="select * from checkquality_problem where batch_id = ? and ifnull(parent_id, '') != '' and room_id in ("+(e.map(a,(function(e){return"'"+e+"'"})).join(", ")||"''")+")";return r.a.query(i,[t])},updateProblem:function(e,t){return r.a.update("checkquality_problem",t,{id:e})},getSingleRoomMeasureCheckitems:function(e){return r.a.query("select pc.id, pc.name, pc2.name as parent_name, u.id as repair_id, u.name as repair_name, u.mobile as repair_phone, p.repair_date,                    p.repair_image_file, p.repair_remark                from checkquality_problem p                join room r on r.id = p.room_id                join problem_class pc on p.item_id = pc.id                join problem_class pc2 on pc.parent_id = pc2.id                left join user u on u.id = p.repair_by                where p.batch_id = ? and p.status != '检查中'                 group by pc.id, pc.name",[e])},getSingleRoomMeasureReportData:function(e){return r.a.query("select p.room_id, r.room_no, r.unit, b.name as building_name, p.item_id, p.measurement_points, p.problem_points                from checkquality_problem p                join room r on r.id = p.room_id                join building b on r.building_id = b.id                join building_floor bf on r.building_id = bf.building_id and r.floor = bf.floor                where p.batch_id = ? and p.status != '检查中'                order by b.sort, b.code, bf.sort, r.no, r.room_no",[e])},getProblemRepairs:function(e){return r.a.query("select u.* from checkquality_repair r                join user u on u.id = r.repair                where r.checkquality_problem_id = ?",[e])},getProblemCC:function(e){return r.a.query("select u.* from checkquality_cc cc                join user u on u.id = cc.cc                where cc.checkquality_problem_id = ? and cc.type = '被抄送'",[e])},updateProblemModifiedBy:function(e){return r.a.update(d,{modified_by:o.a.getUser().user_id},{id:e})},getMeasureEmptyRooms:function(e){return r.a.query("select * from batch_room br where br.batch_id = ? and not exists (                select 1 from checkquality_problem p where p.batch_id = br.batch_id and p.room_id = br.room_id             )",[e])},getDuplicatedMeasure:function(){return r.a.query("select * from checkquality_problem p where batch_type = '实测实量(新)' group by batch_id, room_id, item_id having count(1) > 1",[])},removeCheckingMeasure:function(e,t,a){return r.a.executeSql("delete from checkquality_problem where batch_id = ? and item_id = ? and room_id = ? and status = '检查中'",[e,t,a])},hasAcceptCheckItems:function(e){var t=[e];return r.a.queryOne("SELECT count(1) as count                 FROM problem_class pc                 INNER JOIN problem_class pp ON pc.parent_id = pp.id                 INNER JOIN section_checkitem sci on sci.item_id = pc.id and sci.bidsection_id = ?                WHERE pp.type = 41                 AND ifnull(pp.parent_id, '') != ''                 ORDER BY pp.code, pc.code",t)},isSectionHasCheckItem:function(t){if(!e.isArray(t))return n.a.reject("参数错误");var a="SELECT sci.bidsection_id as section_id, count(1) as count                             FROM problem_class pc                             INNER JOIN problem_class pp ON pc.parent_id = pp.id                             INNER JOIN section_checkitem sci on sci.item_id = pc.id and sci.bidsection_id in ("+e.map(t,(function(e){return"?"})).join(", ")+")                            WHERE pc.type = 41 AND ifnull(pp.parent_id, '') != ''                             group by sci.bidsection_id";return r.a.query(a,t)},getTopMeasureProblem:function(e){return r.a.queryOne("select p.*, u.name as regist_name, u.mobile as regist_phone, b.name as batch_name                    from checkquality_problem p left join user u on p.regist_by = u.id                    left join batch b on p.batch_id = b.id                    where p.batch_id = ? and ifnull(p.parent_id, '') = ''",[e])},changeProblemStatus:function(e,t){return r.a.executeSql("update checkquality_problem set status = ? where id = ?",[t,e])},getMeasureInspectBatchRoomStatus:function(e,t){return r.a.query("select p.batch_id, p.item_id, p.room_id, p.status,                             p.building_id, p.unit                             from checkquality_problem p                             where p.batch_id = ? and p.item_id = ? and p.status <> '检查中'",[e,t])},getMeasureInspectStatisticalData:function(e){return r.a.query("select item.id, item.name as item_name, item.parent_id,                 parent_item.name as parent_name,                 r.id as room_id, r.room_no, r.unit, b.name as building_name,                 points.m_points, points.p_points                 from batch_checkitem b_item                 join batch_room b_room on b_room.batch_id = b_item.batch_id                 join room r on b_room.room_id = r.id                 join problem_class item on item.id = b_item.item_id                 join building_floor bf on bf.building_id = r.building_id and r.floor = bf.floor                 left join (                 select batch_id, item_id, room_id, measurement_points as m_points, problem_points as p_points                 from checkquality_problem p                 WHERE p.batch_id = ? and p.status <> '检查中'                 ) points on points.room_id = r.id and points.item_id = item.id                 left join problem_class parent_item on parent_item.id = item.parent_id                 left join building b on b.id = r.building_id                 where b_item.batch_id = ?                 ORDER BY item.code, b.sort, b.code, r.unit, bf.sort, r.no",[e,e])},uniqueMeasureProblem:function(e,t,a,i){return r.a.executeSql("delete from checkquality_problem where batch_id = ? and item_id = ? and room_id = ? and id != ?",[e,a,i,t])},uniqueMeasureFloorProblem:function(e,t,a,i,n){return r.a.executeSql("delete from checkquality_problem where batch_id = ? and building_id = ? and floor = ? and item_id = ? and id != ?",[e,t,a,i,n])},uniqueMeasureFloorUnitProblem:function(e,t,a,i,n,o){return r.a.executeSql("delete from checkquality_problem where batch_id = ? and building_id = ? and unit = ? and floor = ? and item_id = ? and id != ?",[e,t,a,i,n,o])},uniqueMeasureBuildingProblem:function(e,t,a){return r.a.executeSql("delete from checkquality_problem where batch_id = ? and building_id = ? and item_id = ?",[e,t,a])},deleteBatchProblems:function(e,t){var a="delete from checkquality_problem where batch_id = ? and room_id in ("+new Array(t.length+1).join("?,").slice(0,-1)+")";return r.a.executeSql(a,[e].concat(t))},getAllMeasureBuildingCheckItems:function(e,t){return r.a.query("SELECT                     pp.id AS pp_item_id,                     pp.name AS pp_item_name,                     pc.id AS pc_item_id,                     pc.name AS pc_item_name,                     pc.full_name AS pc_full_name,                     case when ifnull(t.process_mode, '') != '' and t.process_mode = '' then 1 when ifnull(t.process_mode, '') != '' and t.process_mode != '' then t.process_mode else pc.process_mode end as process_mode                 FROM problem_class pc                 INNER JOIN problem_class pp ON pc.parent_id = pp.id                 INNER JOIN section_checkitem sci on sci.item_id = pc.id and sci.bidsection_id = ?                left join (select p.item_id, ifnull(p.process_mode, '') as process_mode from checkquality_problem p where p.batch_type = '实测实量(新)' and p.building_id = ? group by p.item_id, ifnull(p.process_mode, '')) t on pc.id = t.item_id                 WHERE pp.type = 41                 AND ifnull(pp.parent_id, '') != ''                 GROUP BY pc.id                 ORDER BY pp.code, pc.code",[e,t])},getOneMeasureByBuildingAndItem:function(e,t){return r.a.queryOne("select * from checkquality_problem where building_id = ? and item_id = ?",[e,t])},getRoomAllProblems:function(e,t){return r.a.query("select cp.*, pc.parent_id as parent_item_id from checkquality_problem cp                     left join problem_class pc on pc.id = cp.item_id                     where batch_id = ? and room_id = ? and batch_type = '实测巡检'",[e,t])}},t.a=i}).call(this,a("391c"))},e900:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return n}));a("f548");function i(e){var t,a,i,n=(a=(t=e).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1,(window.devicePixelRatio||1)/a);1!==n&&(!function(e,t){for(var a in e)e.hasOwnProperty(a)&&t(e[a],a)}({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(t,a){var i;e[a]=(i=e[a],function(){var e,a,r=Array.prototype.slice.call(arguments);if("all"===t)r=r.map((function(e){return e*n}));else if(Array.isArray(t))for(e=0,a=t.length;e<a;e++)r[t[e]]*=n;return i.apply(this,r)})})),e.stroke=(i=e.stroke,function(){this.lineWidth*=n,i.apply(this,arguments),this.lineWidth/=n}),e.fillText=function(e){return function(){var t=Array.prototype.slice.call(arguments);t[1]*=n,t[2]*=n,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,t,a){return t*n+a})),e.apply(this,t),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,t,a){return t/n+a}))}}(e.fillText),e.strokeText=function(e){return function(){var t=Array.prototype.slice.call(arguments);t[1]*=n,t[2]*=n,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,t,a){return t*n+a})),e.apply(this,t),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(e,t,a){return t/n+a}))}}(e.strokeText),e.extended=!0)}var n=function(e){var t,a;(t=e).getContext=(a=t.getContext,function(e){var t,n,r=a.call(this,e);return"2d"===e&&(t=r.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||r.mozBackingStorePixelRatio||r.msBackingStorePixelRatio||r.oBackingStorePixelRatio||r.backingStorePixelRatio||1,(n=(window.devicePixelRatio||1)/t)>1&&(this.style.height=this.height+"px",this.style.width=this.width+"px",this.width*=n,this.height*=n)),i(r),r})}},e98df:function(e,t,a){var i=a("5454");(e.exports=a("690e")(!1)).push([e.i,".zjapp .drawing-con[data-v-404ed5a0]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-404ed5a0]{background:url("+i(a("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-404ed5a0]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-404ed5a0],.zjapp .loading-text[data-v-404ed5a0]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-404ed5a0]{color:#ff3d3d}",""])},efb2:function(e,t,a){"use strict";(function(e){var i=a("774b"),n=a("07d2"),r=a("da1c"),o=a("0258"),s=a("e68e"),l=a("3c64"),c=a("cd05"),d=a("5a71"),p=a("732d");t.a={name:"MeasureDetailTemplate3",components:{Scroller:i.a,item:n.a,ProblemDetailHeader:r.a,Drawing3:o.a,ItemImgList:s.a,ItemTextarea:l.a,UserSelect:c.a,SingleSelect:d.a},mixins:[p.a],props:{detail:{type:Object,default:function(){}},repairOptions:{type:Array,default:function(){return[]}},ccOptions:{type:Array,default:function(){return[]}}},data:function(){return{repair_image_file:[],repair_remark:""}},computed:{hasPoint:function(){return this.detail&&this.detail.problemData&&e.some(this.detail.problemData,(function(t){return!e.isEmpty(t.realityVal)}))}},methods:{onClickPoint:function(e){}}}}).call(this,a("391c"))},f00b:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,'.zjapp .icon-plus[data-v-c03139f6]{position:relative;display:inline-block;width:30px;height:30px;border:1.5px solid #4275e8;border-radius:15px}.zjapp .icon-plus[data-v-c03139f6]:before{left:4px;top:12.75px;width:20px;height:1.5px}.zjapp .icon-plus[data-v-c03139f6]:after,.zjapp .icon-plus[data-v-c03139f6]:before{content:"";position:absolute;background-color:#4275e8}.zjapp .icon-plus[data-v-c03139f6]:after{left:12.75px;top:4px;width:1.5px;height:20px}.zjapp .btn-modify[data-v-c03139f6]{display:inline-block;vertical-align:top;height:25px;line-height:25px;padding:0 8px;border:1px solid #c8d2f6;background-color:#ebf1ff;color:#7a95d1;font-size:14px;white-space:nowrap;border-radius:2px}.zjapp .btn-modify .icon-arrow-right[data-v-c03139f6]{font-size:12px}.zjapp .need-repair[data-v-c03139f6]{height:34px;line-height:18px;padding:8px 0;font-size:16px;color:#333}.zjapp .need-repair .icon[data-v-c03139f6]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .need-repair-bottom[data-v-c03139f6]{height:46px;line-height:18px;padding:14px 15px;margin-top:10px;font-size:16px;color:#666}.zjapp .need-repair-bottom .icon[data-v-c03139f6]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .c-label[data-v-c03139f6]{color:#999;font-size:12px;line-height:17px;padding:14px 15px 8px;background-color:#f4f4f4}',""])},f1e4:function(e,t,a){"use strict";(function(e){a("5ab2"),a("e10e");var i=a("28f8"),n=(a("9e76"),a("6d57"),a("9a33"),a("f548"),a("cc57"),a("4ad6")),r=a("e89f"),o=a("bcc7"),s=a("3122"),l=a("6e1b"),c=a("c130"),d=a("0636");function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function u(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}t.a={name:"CheckGuideDetail",components:{},mixins:[r.a],data:function(){return{show:!1,isLoading:!0,isImageDownloading:!1,title:"",content:[],module:"",itemId:""}},methods:{openPopup:function(t){var a=this;for(var i in this.value=!0,this.show=!0,this.module=t.module,this.itemId=t.itemId,this.$emit("open"),t)this[i]=t[i];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module],this.isLoading=!0,("special-inspect"===this.module?l.a.getSpecialInspectCheckItemDetail(this.itemId):"templet-plan"===this.module?c.a.getTempletDetail(this.itemId):"material"===this.module?d.a.getMaterialDetail(this.itemId):o.a.getCheckItem(this.itemId,this.checkType)).then((function(t){console.log("checkitemData",t),a.checkitemData=t,a.title=t.full_name||t.name,"special-inspect"!==a.module&&"inspect"!==a.module&&"fly-inspect"!==a.module&&"material"!==a.module||(t.content=t.guideline||t.content);var i=t.content?t.content.trim():"";if(i=(i=(i=(i=(i=i.replace(/<\/p><p>/gm,"\n")).replace(/<p>/gm,"")).replace(/<\/p>/gm,"")).replace(/<br>/gm,"")).replace(/<br \/>/gm,""),/(<img[^\>]*>)/gm.test(i)){var n=i.split(/(<img[^\>]*>)/gm);(n=n.filter((function(e){return!!e}))).forEach((function(e,t){e&&!/^\s*\n/.test(e)&&t&&!/\n\s*$/.test(n[t-1])&&(n[t]="\n"+e)})),i=n.join("")}var r=i?i.split("\n"):[];a.content=e.map(r,(function(e,t){var a;if(/<img([\s\S]*)>/gm.test(e)){var i=e.split(/\ssrc="([^"]*)"/gm)[1],n=i?i.match(/[\w|-]{36}/gm)[0]:(new Date).getTime()+"-"+t;a={isImg:!0,src:"",url:i,status:"pending",id:n,ready:!0}}else a={isImg:!1,val:e};return a})),a.downloadImage(),a.isLoading=!1})).catch((function(e){$log.log(e)}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},getThumbnail:function(e){return"pending"===e.status?s.a.IMAGE_LOADING:"rejected"===e.status?s.a.IMAGE_RELOAD:"dev"===APP_ENV?e.url:"fulfilled"===e.status?e.src:($log.log("检查指引-显示图片：",e),s.a.IMAGE_PLACEHOLD)},imgError:function(e,t){$log.error("检查指引-加载图片出现错误：",e);var a=u({},e);a.status="rejected",this.$set(this.content,t,a)},downloadImage:function(t){var a=this;t=t?[t]:this.imageList(),e.each(t,(function(t){var i=u({},t),n=e.map(a.content,(function(e){return e.id})).indexOf(t.id);s.a.isNeedDownload(t.url).then((function(e){e?s.a.download(t.url).then((function(e){i.status="fulfilled",i.src=s.a.fixUrl(e),a.$set(a.content,n,i)})).catch((function(e){$log.error("检查指引-下载图片：",e)})):(i.status="fulfilled",i.src=s.a.fixUrl(s.a.getPathFromUrl(t.url)),a.$set(a.content,n,i))}))}))},imageList:function(){return e.filter(this.content,(function(e){return e.isImg}))},imgClick:function(t){var a=this;if("pending"===t.status)return!1;if("rejected"===t.status)return this.downloadImage(t),$log.log("检查指引-点击重新加载-重新下载图片：",t),!1;var i=this.imageList(),r=e.map(i,(function(e){return e.id})).indexOf(t.id);i=e.map(i,(function(e){return a.getThumbnail(e)})),n.a.openImageBrowser(i,r)}}}}).call(this,a("391c"))},f369:function(e,t,a){"use strict";var i=a("fd50"),n=a("bcc7"),r=a("329b"),o=a("d0fb").a,s=(a("9b25"),a("17cc")),l=Object(s.a)(o,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"slide-right"}},[e.show?a("page-content",{attrs:{mode:"dialog",title:"检查指引","on-close":e.closePopup}},[!e.isLoading&&e.listData.length?a("div",{staticClass:"page-scroll"},e._l(e.listData,(function(t,i){return a("div",{key:i},[a("item",{attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(a){e.clickItem(t)}}},[a("div",{staticClass:"item-text fw-b color-blue one-line"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,i){return a("div",{key:i,staticClass:"sublist"},[a("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(a){e.clickItem(t)}}},[a("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,i){return a("div",{key:i,staticClass:"sublist"},[a("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(a){e.clickItem(t)}}},[a("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,i){return a("div",{key:i,staticClass:"sublist"},[a("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(a){e.clickItem(t)}}},[a("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])])],1)})):e._e()],2)})):e._e()],2)})):e._e()],2)}))):e._e(),a("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.listData.length,"empty-text":"没有检查项"}})],1):e._e()],1)}),[],!1,null,"74102c05",null).exports,c=!1;c||(c=new(r.default.extend(l))({el:document.createElement("div")}),document.body.appendChild(c.$el));var d=c,p=a("515e"),u=a("91c1").a,h=(a("dc98"),Object(s.a)(u,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return e.show?a("div",{staticClass:"main",style:{top:e.contentTop+"px"}},[a("i",{staticClass:"arrow"}),a("div",{staticClass:"content",on:{click:function(t){return t.target!==t.currentTarget?null:e.closePopup(t)}}},[a("transition",{attrs:{name:"slide-down"},on:{enter:function(t){e.isOpening=!0},"after-enter":function(t){e.isOpening=!1},leave:function(t){e.isClosing=!0},"after-leave":e.afterClose}},[e.showList?a("div",{staticClass:"box",style:{height:e.listHeight+"px"}},e._l(e.data,(function(t,i){return a("div",{key:i,class:{"border-bottom":e.data.length>1,"box-single":1===e.data.length}},[a("div",{staticClass:"detail-hd",class:{"border-bottom":e.data.length<=1,"detail-hd-single":e.data.length<=1},on:{click:function(a){e.toggleItem(t)}}},[e.data.length>1?a("i",{class:{"detail-arrow-right":!t.isOpen,"detail-arrow-down":t.isOpen}}):e._e(),a("div",{staticClass:"detail-title"},[e._v(e._s(t.name))])]),e.data.length<=1||t.isOpen?a("div",{staticClass:"detail-bd",class:{"detail-bd-single":e.data.length<=1}},[e._l(t.textArr,(function(t,i){return a("p",{key:i,staticClass:"text-line"},[e._v("\n              "+e._s(t)+"\n            ")])})),a("item-img-list",{attrs:{editabled:!1},model:{value:t.contentImage,callback:function(a){e.$set(t,"contentImage",a)},expression:"item.contentImage"}}),a("loading-status",{attrs:{"is-empty":!t.textArr.length&&!t.contentImage.length,"empty-text":"PC端未设置检查指引"}})],2):e._e()])}))):e._e()])],1)]):e._e()}),[],!1,null,"2cac8864",null).exports),m=!1;m||(m=new(r.default.extend(h))({el:document.createElement("div")}),document.body.appendChild(m.$el));var f=m,g={name:"CheckGuide",components:{},props:{module:{type:String,default:""},mode:{type:String,default:"page"},itemId:{type:String,default:""},itemIds:{type:Array,default:function(){return[]}},batchId:{type:String,default:""},sectionId:{type:String,default:""},options:{type:Array,default:function(){return[]}},optionsPromise:{type:Function,default:function(){}},beforeOpen:{type:Function,default:function(){}}},data:function(){return{isLoading:!1}},methods:{openCheckGuide:function(){var e=this,t=this.beforeOpen&&this.beforeOpen();t instanceof Promise||(t=Promise.resolve(t)),t.then((function(t){!1!==t&&("drop"===e.mode?f.openPopup({itemIds:e.itemIds,el:e.$refs["check-guide-btn"],options:e.options}):("templet-plan"===e.module?i.a.when(!1):e.itemId&&e.sectionId?n.a.hasChildSectionCheckItem(e.itemId,e.sectionId):e.itemId?n.a.hasChildCheckItem(e.itemId):i.a.when(!0)).then((function(t){t?d.openPopup({module:e.module,itemId:e.itemId,batchId:e.batchId,sectionId:e.sectionId,options:e.options}):p.a.openPopup({itemId:e.itemId,module:e.module})})))}))}}},b=Object(s.a)(g,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{ref:"check-guide-btn",staticClass:"header-btn",on:{click:function(t){e.openCheckGuide()}}},[a("icon",{attrs:{name:"nav-info"}})],1)}),[],!1,null,null,null);t.a=b.exports},f398:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .value-input[data-v-05a4eccf]{font-size:0;line-height:0;white-space:nowrap}.zjapp .value-input-label[data-v-05a4eccf]{line-height:30px;font-size:14px;color:#999;margin-right:8px}.zjapp .area-name-text[data-v-05a4eccf]{display:inline-block;padding:4px 0;line-height:22px;font-size:16px;color:#4275e8;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .area-name-input[data-v-05a4eccf]{position:relative;display:inline-block;vertical-align:top;width:61px;height:34px;border:1px solid #4275e8;border-radius:3px;text-align:center;font-size:14px;color:#333;box-shadow:0 0 8px 0 rgba(66,117,232,.37)}.zjapp .area-name-input input[data-v-05a4eccf]{border:none;width:100%;height:100%;padding:5px;text-align:center;background-color:transparent}.zjapp .area-info[data-v-05a4eccf]{display:flex;font-size:14px}.zjapp .checkitem-info[data-v-05a4eccf]{flex:1;padding-top:7px;min-height:34px}.zjapp .checkitem-name[data-v-05a4eccf]{color:#333}.zjapp .checkitem-standard[data-v-05a4eccf]{color:#999}.zjapp .huxing-view[data-v-05a4eccf]{position:absolute;top:-10px;right:-8px;width:20px;height:20px;line-height:20px;text-align:center;background-color:#4275e8;color:#fff;font-size:12px;border-radius:10px}.zjapp .huxing-mark[data-v-05a4eccf]{position:absolute;top:-20px;left:50%;width:44px;height:22px;line-height:22px;margin-left:-22px;background-color:#fdebbd;text-align:center;color:#111;font-size:10px;border-radius:2px}.zjapp .huxing-mark .arrow[data-v-05a4eccf]{position:absolute;left:19px;bottom:-6px;width:0;height:0;border:3px solid #fdebbd;border-color:#fdebbd transparent transparent}.zjapp .item-input-group[data-v-05a4eccf]{display:flex}.zjapp .label-input-group[data-v-05a4eccf]{height:30px;line-height:30px;padding-right:8px;color:#999;text-align:right;font-size:14px}.zjapp .label-input-group-flex[data-v-05a4eccf]{flex:1}.zjapp .view-points-line[data-v-05a4eccf]{display:flex}.zjapp .view-points-left[data-v-05a4eccf]{min-width:140px;padding-left:2.6em;text-indent:-2.6em}.zjapp .view-points-right[data-v-05a4eccf]{flex:1;padding-left:10px;color:#b3b3b3;white-space:nowrap}.zjapp .number-input-group[data-v-05a4eccf]{padding-top:15px;margin-left:-10px}.zjapp .number-input-group .number-input[data-v-05a4eccf]{margin:0 0 10px 10px}.zjapp .btn-reedit[data-v-05a4eccf]{width:80px;padding:12px 0;line-height:22px;font-size:14px;text-align:center;color:#4275e8}.zjapp .btn-reedit .icon[data-v-05a4eccf]{margin-top:5px;font-size:12px;vertical-align:top}.zjapp .btn-drawing[data-v-05a4eccf]{width:100px;padding:12px 15px;line-height:22px;font-size:14px;text-align:right;color:#4275e8}.zjapp .btn-drawing .icon[data-v-05a4eccf]{font-size:13px}.zjapp .detail-list-hd[data-v-05a4eccf]{display:flex;height:30px;background-color:#fafafa}.zjapp .detail-list-hd .list-hd-toggle[data-v-05a4eccf]{flex:1;padding-left:15px;line-height:30px;color:#4275e8}.zjapp .detail-list-hd .list-hd-title[data-v-05a4eccf]{flex:1;padding-left:15px;line-height:30px;font-size:14px;color:#888}.zjapp .detail-list-hd .list-hd-num[data-v-05a4eccf]{width:80px;line-height:30px;font-size:14px;text-align:center;color:#888}.zjapp .detail-list-hd .list-hd-passrate[data-v-05a4eccf]{width:100px;padding:0 15px;line-height:30px;font-size:14px;text-align:right;color:#888}.zjapp .detail-list[data-v-05a4eccf]{background-color:#fff}.zjapp .detail-item-hd[data-v-05a4eccf]{display:flex;align-items:flex-start;min-height:46px}.zjapp .detail-item-arrow[data-v-05a4eccf]{border:5px solid #c8c8c8;width:0;height:0}.zjapp .detail-item-arrow.item-arrow-right[data-v-05a4eccf]{margin:18px 13px 0 17px;border-top-color:transparent;border-right-width:0;border-bottom-color:transparent}.zjapp .detail-item-arrow.item-arrow-down[data-v-05a4eccf]{margin:20px 10px 0 15px;border-left-color:transparent;border-right-color:transparent;border-bottom-width:0}.zjapp .detail-item-name[data-v-05a4eccf]{flex:1;padding:13px 0;line-height:20px;font-size:14px;color:#111}.zjapp .detail-item-num[data-v-05a4eccf]{width:80px;padding:13px 0;line-height:20px;font-size:14px;text-align:center;color:#888}.zjapp .detail-item-passrate[data-v-05a4eccf]{width:100px;padding:13px 15px;line-height:20px;font-size:14px;text-align:right;color:#888}.zjapp .detail-line[data-v-05a4eccf]{display:flex}.zjapp .detail-line-label[data-v-05a4eccf]{padding:8px 0 8px 35px;width:105px;line-height:20px;font-size:14px;color:#666}.zjapp .detail-line-label-single[data-v-05a4eccf]{padding:8px 0 8px 15px;width:85px;line-height:20px;font-size:14px;color:#666}.zjapp .detail-line-con[data-v-05a4eccf]{flex:1;padding:8px 15px 8px 0;line-height:20px;font-size:14px;color:#333}.zjapp .detail-line-area[data-v-05a4eccf]{background-color:#f0f0f0;color:#8c8c8c;padding:2px}.zjapp .detail-line-setval[data-v-05a4eccf]{margin-left:8px;color:#999}.zjapp .need-repair[data-v-05a4eccf]{height:46px;line-height:18px;padding:14px 15px;margin-top:10px;font-size:16px;color:#666}.zjapp .need-repair .icon[data-v-05a4eccf]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .c-label[data-v-05a4eccf]{color:#999;font-size:12px;line-height:17px;padding:14px 15px 8px;background-color:#f4f4f4}",""])},f3d7:function(e,t,a){"use strict";a("9120")},f53a:function(e,t,a){(e.exports=a("690e")(!1)).push([e.i,".zjapp .number-keyboard-con[data-v-6337f428]{position:absolute;left:0;bottom:0;width:100%;padding:4px 0;background-color:#fafafa;box-shadow:0 -4px 8px 0 rgba(0,0,0,.08);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.zjapp .ios-bezel-less[data-v-6337f428]{padding-bottom:34px}.zjapp .keyboard-row[data-v-6337f428],.zjapp .keys-row[data-v-6337f428]{display:flex}.zjapp .row-span-1[data-v-6337f428]{flex:1}.zjapp .row-span-2[data-v-6337f428]{flex:2}.zjapp .row-span-3[data-v-6337f428]{flex:3}.zjapp .keys[data-v-6337f428]{flex:1;height:48px;line-height:48px;text-align:center;font-size:18px;margin:4px;border:1px solid rgba(5,5,5,.07);border-radius:8px;background-color:#fff;padding:0}.zjapp .keys-next[data-v-6337f428],.zjapp .keys-prev[data-v-6337f428]{font-size:14px;color:#4275e8}.zjapp .keys-ok[data-v-6337f428]{font-size:14px;color:#999}.zjapp .keys-delete[data-v-6337f428]{color:#999}.zjapp .icon[data-v-6337f428]{pointer-events:none}.zjapp .icon-keyboard-close[data-v-6337f428]{font-size:20px;color:#999}.zjapp .icon-keyboard-delete[data-v-6337f428]{vertical-align:top;margin-top:13px;font-size:14px;color:#333}.zjapp .activing[data-v-6337f428]{background-color:#ececec}.zjapp .disabled[data-v-6337f428]{color:#999}.zjapp .col[data-v-6337f428]{display:flex;flex-direction:column;justify-content:center;align-items:center;height:104px;line-height:36px}",""])},fc72:function(e,t,a){"use strict";a("47df")},fdde:function(e,t,a){var i=a("9ada");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("47e12a8d",i,!0,{sourceMap:!1,shadowMode:!1})},fe9e:function(e,t,a){"use strict";a("3cd8")},ffea:function(e,t,a){var i=a("f398");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("85cb").default)("5733029c",i,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,