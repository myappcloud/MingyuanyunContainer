(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-2709989a"],{"0aac":function(t,i,e){"use strict";e("2814")},2814:function(t,i,e){var a=e("5033");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,e("85cb").default)("9db19832",a,!0,{sourceMap:!1,shadowMode:!1})},5033:function(t,i,e){var a=e("5454");(t.exports=e("690e")(!1)).push([t.i,".zjapp .drawing-con[data-v-fba5990a]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-fba5990a]{display:block;height:100%;width:100%;background:url("+a(e("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-fba5990a]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-fba5990a],.zjapp .loading-text[data-v-fba5990a]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-fba5990a]{color:#ff3d3d}",""])},c40a:function(t,i,e){"use strict";(function(t){e("cc57"),e("6d57"),e("6f84"),e("163d");var a=e("a32d"),s=e.n(a),n=e("e900"),o=e("3122"),h=e("4ad6"),c=e("3bd5"),r=e("1b7e");function l(t){var i=t.changedTouches.length,e=t.touches.length;return 1===i||2===i||2===e}function x(t){return 1===t.touches.length}i.a={name:"Drawing",props:{url:{type:String},points:{type:Array,default:function(){return[]}},regions:{type:Array,default:function(){return[]}},pointColor:{type:String,default:"#ff4546"},pointRadius:{type:Number,default:7},scaleMax:{type:Number,default:4},clickDelay:{type:Number,default:500},folder:{type:String,default:"house-image"},onlineMode:{type:Boolean,default:!1},contentScroll:{type:Boolean,default:!0}},data:function(){return{isDownloading:!1,error:"",canvas:null,ctx:null,img:null,src:"",width:0,height:0,x:0,y:0,scale:1,defaultScale:1,pixelRatio:1,markPosition:null,markPositionImageData:[],markCoordinates:[],pinchRatio:0,scaleBetween:[],isPinch:!1,clickPoints:[],touchStart:{x:0,y:0,cx:0,cy:0,time:0}}},watch:{url:function(){this.getImage()},points:function(t){this.ctx&&this.draw()},regions:function(t){this.ctx&&this.draw()}},mounted:function(){this.getImage()},destroyed:function(){this.canvas&&(this.canvas.width=0,this.canvas.height=0)},methods:{getImage:function(){var i=this;if(this.isDownloading=!0,this.url){var e=c.a.getUser().user_id,a=s.a.replaceAll(this.url,"\\?x-oss-process=image\\/resize,","@"),n=s.a.strRightBack(a,"/");if(!n)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var l=[h.a.appImagePath()+e+"/"+this.folder+"/"+n,h.a.appImagePath()+e+"/house-image/"+n,h.a.appImagePath()+e+"/drawing/"+n,h.a.appImagePath()+e+"/location-image/"+n,h.a.appImagePath()+e+"/images/"+n,h.a.appDataPath()+e+"/"+this.folder+"/"+n,h.a.appDataPath()+e+"/house-image/"+n,h.a.appDataPath()+e+"/drawing/"+n,h.a.appDataPath()+e+"/location-image/"+n,h.a.appDataPath()+e+"/images/"+n],x=Promise.resolve();return"dev"===APP_ENV||this.onlineMode?x=x.then((function(){return i.url})):t.each(l,(function(t){x=x.then((function(i){return i||h.a.isFileExists(t).then((function(i){if(i)return o.a._fixPath(t)}))}))})),x.then((function(t){if(!t)return r.a.getHasNetwork().then((function(t){return t?o.a.download(i.url,!0,i.folder).then((function(t){i.src=t})):Promise.reject("当前无网络")}));i.src=t})).then((function(){i.src?(i.img=new Image,i.img.onload=function(){i.img.complete?(i.isDownloading=!1,i.$nextTick(i.init)):(i.error="加载图片失败",i.isDownloading=!1)},i.img.onerror=function(){i.error="加载图片失败",i.isDownloading=!1},i.img.src=i.src):(i.error="下载户型图失败",i.isDownloading=!1)})).catch((function(e){i.error=t.isString(e)?e:"下载户型图失败",i.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1},init:function(){if(this.$refs["drawing-canvas"]){var t=this.$refs.content;this.canvas=this.$refs["drawing-canvas"],this.ctx=this.canvas.getContext("2d"),this.width=t.offsetWidth,this.height=t.offsetHeight,this.pixelRatio=this.getPixelRatio(this.ctx),this.canvas.style.height=this.height+"px",this.canvas.style.width=this.width+"px",this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,!this.ctx.extended&&Object(n.a)(this.ctx),this.bindTouchEvent(),this.calc(),this.draw()}},getPixelRatio:function(t){var i=t.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/i},calc:function(t){var i=this.width/this.img.width,e=this.img.height*i,a=this.height||e;e>this.height&&(i*=a/e),this.scale=i*this.pixelRatio,this.defaultScale=this.scale,this.scaleBetween=[this.scale,this.scale*this.scaleMax]},winToCanvas:function(t,i){var e=this.canvas.getBoundingClientRect();return{x:t-e.left*(this.canvas.width/(e.width*this.pixelRatio)),y:i-e.top*(this.canvas.height/(e.height*this.pixelRatio))}},isBoundary:function(t){switch(t){case"t":if(0===this.y)return!0;break;case"r":if(this.x<=this.canvas.width-this.img.width*this.scale)return!0;break;case"b":if(this.y<=this.img.height*this.scaleBetween[0]-this.img.height*this.scale)return!0;break;case"l":if(0===this.x)return!0}return!1},bindTouchEvent:function(){this.canvas.addEventListener("touchstart",this.onTouchstart),this.canvas.addEventListener("touchmove",this.onTouchmove),this.canvas.addEventListener("touchend",this.touchMoveAndEndHandler)},unbindTouchEvent:function(){this.canvas.removeEventListener("touchstart",this.onTouchstart),this.canvas.removeEventListener("touchmove",this.onTouchmove),this.canvas.removeEventListener("touchend",this.touchMoveAndEndHandler)},onTouchstart:function(t){if(this.isPinch=!1,x(t)){var i=t.touches[0],e=this.winToCanvas(i.clientX,i.clientY);this.touchStart={x:e.x,y:e.y,cx:i.clientX,cy:i.clientY,time:Date.now()}}else if(l(t)){var a,s=t.touches[0],n=t.touches[1],o=this.winToCanvas(s.clientX,s.clientY),h=this.winToCanvas(n.clientX,n.clientY);a=Math.sqrt(Math.pow(h.x-o.x,2)+Math.pow(h.y-o.y,2)),this.pinchRatio=this.scale/a}},onTouchmove:function(t){if(!1===this.contentScroll&&(t.preventDefault(),t.stopPropagation()),x(t))this.touchStart.cy>t.pageY&&this.isBoundary("b")||this.touchStart.cy<t.pageY&&this.isBoundary("t")||this.touchStart.cx>t.pageX&&this.isBoundary("r")||this.touchStart.cx<t.pageX&&this.isBoundary("l")||t.stopPropagation(),this.touchMoveAndEndHandler(t);else if(l(t)){t.stopPropagation();var i,e,a,s,n,o=t.touches[0],h=t.touches[1],c=this.winToCanvas(o.clientX,o.clientY),r=this.winToCanvas(h.clientX,h.clientY);e=Math.sqrt(Math.pow(r.x-c.x,2)+Math.pow(r.y-c.y,2)),this.isPinch=!0,(i=this.pinchRatio*e)>this.scaleBetween[0]&&i<this.scaleBetween[1]&&(s={x:((a={x:(c.x+r.x)/2*this.pixelRatio,y:(c.y+r.y)/2*this.pixelRatio}).x-this.x)/(this.img.width*this.scale),y:(a.y-this.y)/(this.img.height*this.scale)},a.newX=this.x+this.img.width*i*s.x,a.newY=this.y+this.img.height*i*s.y,n={x:a.newX-a.x,y:a.newY-a.y},i<this.scale&&this.setRange(this.x-n.x,this.y-n.y,i),i>this.scale&&(this.x=this.x-n.x,this.y=this.y-n.y),i!==this.scale&&(this.scale=i,this.draw()))}},touchMoveAndEndHandler:function(t){var i,e,a=t.type,s={touchmove:t.touches[0],touchend:t.changedTouches[0]}[a],n=this.winToCanvas(s.clientX,s.clientY);i=(n.x-this.touchStart.x)*this.pixelRatio,e=(n.y-this.touchStart.y)*this.pixelRatio,"touchend"===a&&Date.now()-this.touchStart.time<this.clickDelay&&Math.abs(s.clientX-this.touchStart.cx)<6&&Math.abs(s.clientY-this.touchStart.cy)<6?this.clickHandler(t):"touchmove"!==a||this.isPinch||(this.touchStart.x=n.x,this.touchStart.y=n.y,this.setRange(this.x+i,this.y+e,this.scale),this.draw())},isCanClick:function(t){for(var i=!1,e=0;e<this.markPosition.length;e++)if(parseFloat(t.x)>parseFloat(this.markPosition[e].x)&&parseFloat(t.x)<parseFloat(this.markPosition[e].x)+parseFloat(this.markPosition[e].w)&&parseFloat(t.y)>parseFloat(this.markPosition[e].y)&&parseFloat(t.y)<parseFloat(this.markPosition[e].y)+parseFloat(this.markPosition[e].h)){i=!0;break}return i},clickHandler:function(t){var i=t.changedTouches[0];if(this.mark){var e=this.winToCanvas(i.clientX,i.clientY),a={x:(e.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),y:(e.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio)};if(e={x:a.x*this.img.width,y:a.y*this.img.height},this.isCanClick(e)){this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(e.x*this.scale/this.pixelRatio+this.x/this.pixelRatio,e.y*this.scale/this.pixelRatio+this.y/this.pixelRatio,this.scale===this.defaultScale?this.pointRadius:this.pointRadius*(1+(this.scale-this.defaultScale)/this.pixelRatio),0,2*Math.PI,!1),this.ctx.fill(),this.ctx.restore();var s={x:e.x,y:e.y};this.markCoordinates.push(s),this.points.push(s)}return!1}this.redraw(t,this.winToCanvas(i.clientX,i.clientY))},setRange:function(t,i,e){var a=this.img.width*e,s=this.img.height*e,n=this.canvas.width,o=this.canvas.height,h=this.img.height*this.scaleBetween[0];t=a<n?(n-a)/2:(t=t+a<n?n-a:t)>0?0:t,i=s<o?(o-s)/2:(i=i+s<h?h-s:i)>0?0:i,this.x=t,this.y=i},draw:function(){this.setRange(this.x,this.y,this.scale),this.drawImage(),this.drawPoints(),this.drawRegions()},redraw:function(t,i){this.clickPoints=[],this.drawImage(),this.drawPoints(i),this.drawRegions(i),this.clickCallback(t,this.clickPoints)},clickCallback:function(t,i){var e;i.some((function(t,i){return"points"===t.tag?(e=t,!0):(e=t,!1)}));var a=t.changedTouches[0],s=this.winToCanvas(a.clientX,a.clientY),n=(s.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),o=(s.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio);(s={x:parseFloat((n*this.img.width).toFixed(2)),y:parseFloat((o*this.img.height).toFixed(2))}).y>=0&&s.x>=0&&s.y<=this.img.height&&s.x<=this.img.width&&this.$emit("onclick",{type:e?"point":"",points:this.points,point:e,clickPoint:e,x:s.x,y:s.y,scale:this.scale/this.pixelRatio})},drawImage:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.img,0,0,this.img.width,this.img.height,this.x,this.y,this.img.width*this.scale,this.img.height*this.scale)},drawPoints:function(t){var i=this;this.points.forEach((function(e,a){i.drawPoint(e.x*i.scale/i.pixelRatio+i.x/i.pixelRatio,e.y*i.scale/i.pixelRatio+i.y/i.pixelRatio,i.pointRadius,a,t,e.color)}))},drawPoint:function(t,i,e,a,s,n){this.ctx.save(),this.ctx.beginPath(),this.ctx.shadowBlur=e/2,this.ctx.shadowColor="black",this.ctx.fillStyle=n||this.pointColor,this.ctx.arc(t,i,e,0,2*Math.PI,!1),this.ctx.fill(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.ctx.restore(),e*=2,this.ctx.save(),this.ctx.beginPath(),this.ctx.strokeStyle="transparent",this.ctx.fillStyle="transparent",this.ctx.rect(t-e,i-e,2*e,2*e),this.ctx.stroke(),this.ctx.restore(),s&&this.ctx.isPointInPath(s.x*this.pixelRatio,s.y*this.pixelRatio)&&this.clickPoints.push({tag:"points",pos:s,index:a})},drawRegions:function(t){var i=this;this.regions&&this.regions.length&&this.regions.forEach((function(e,a){var s,n,o,h;i.ctx.beginPath(),e.area.forEach((function(t,e){var a=t[0]*i.scale/i.pixelRatio+i.x/i.pixelRatio,c=t[1]*i.scale/i.pixelRatio+i.y/i.pixelRatio;e?i.ctx.lineTo(a,c):i.ctx.moveTo(a,c),s=void 0===s?a:s<a?s:a,n=void 0===n?a:n>a?n:a,o=void 0===o?c:o<c?o:c,h=void 0===h?c:h>c?h:c})),i.ctx.closePath(),i.ctx.fillStyle="rgba(255, 144, 0, 0.4)",i.ctx.fill(),i.ctx.lineWidth=3,i.ctx.strokeStyle="#feda8e",i.ctx.stroke(),i.ctx.lineWidth=2,i.ctx.strokeStyle="rgba(0, 0, 0, 0.8)",i.ctx.stroke(),t&&i.ctx.isPointInPath(t.x*i.pixelRatio,t.y*i.pixelRatio)&&i.clickPoints.push({tag:"region",pos:t,index:a,regionData:e}),i.ctx.font='18px bold -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',i.ctx.textAlign="center",i.ctx.lineWidth=4,i.ctx.strokeStyle="#ffffff",i.ctx.strokeText(e.name,(n+s)/2,(h+o)/2+10),i.ctx.fillStyle="#111111",i.ctx.fillText(e.name,(n+s)/2,(h+o)/2+10)}))}}}}).call(this,e("391c"))},e223:function(t,i,e){"use strict";var a=e("c40a").a,s=(e("0aac"),e("17cc")),n=Object(s.a)(a,(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("div",t._g({ref:"content",staticClass:"drawing-con"},t.$listeners),[t.isDownloading?[e("p",[e("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[e("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),e("p",{staticClass:"loading-text"},[t._v("正在下载...")])]:[t.error?t._e():e("canvas",{ref:"drawing-canvas"}),t.error?e("p",{staticClass:"error-text"},[t._v(t._s(t.error))]):t._e()]],2)}),[],!1,null,"fba5990a",null);i.a=n.exports},e900:function(t,i,e){"use strict";e.d(i,"a",(function(){return a})),e.d(i,"b",(function(){return s}));e("f548");function a(t){var i,e,a,s=(e=(i=t).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||i.mozBackingStorePixelRatio||i.msBackingStorePixelRatio||i.oBackingStorePixelRatio||i.backingStorePixelRatio||1,(window.devicePixelRatio||1)/e);1!==s&&(!function(t,i){for(var e in t)t.hasOwnProperty(e)&&i(t[e],e)}({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(i,e){var a;t[e]=(a=t[e],function(){var t,e,n=Array.prototype.slice.call(arguments);if("all"===i)n=n.map((function(t){return t*s}));else if(Array.isArray(i))for(t=0,e=i.length;t<e;t++)n[i[t]]*=s;return a.apply(this,n)})})),t.stroke=(a=t.stroke,function(){this.lineWidth*=s,a.apply(this,arguments),this.lineWidth/=s}),t.fillText=function(t){return function(){var i=Array.prototype.slice.call(arguments);i[1]*=s,i[2]*=s,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,e){return i*s+e})),t.apply(this,i),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,e){return i/s+e}))}}(t.fillText),t.strokeText=function(t){return function(){var i=Array.prototype.slice.call(arguments);i[1]*=s,i[2]*=s,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,e){return i*s+e})),t.apply(this,i),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,e){return i/s+e}))}}(t.strokeText),t.extended=!0)}var s=function(t){var i,e;(i=t).getContext=(e=i.getContext,function(t){var i,s,n=e.call(this,t);return"2d"===t&&(i=n.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||n.mozBackingStorePixelRatio||n.msBackingStorePixelRatio||n.oBackingStorePixelRatio||n.backingStorePixelRatio||1,(s=(window.devicePixelRatio||1)/i)>1&&(this.style.height=this.height+"px",this.style.width=this.width+"px",this.width*=s,this.height*=s)),a(n),n})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,