(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-4f5a437d"],{"10d4":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .multi-select-list-title[data-v-89cd976c]{position:relative;color:#888;font-size:14px;line-height:30px;min-height:40px;margin-bottom:0;margin-top:0;padding:8px 16px;background-color:#f2f2f2}.zjapp .item[data-v-89cd976c]{padding:16px}.zjapp .search-item>div[data-v-89cd976c]{padding-right:35px}.zjapp .search-item i[data-v-89cd976c]{position:absolute;color:#ccc;font-size:26px;right:0;top:50%;transform:translateY(-50%)}.zjapp .van-popup--right[data-v-89cd976c]{width:100%;height:100%}[data-v-89cd976c] .van-cell__title{color:#4174e9;font-weight:700}[data-v-89cd976c] .van-collapse-item__content{transform:translateZ(0);padding:0 0 0 25px}[data-v-89cd976c] .van-collapse-item__content .van-cell{padding-left:0}",""])},"20f0":function(e,t,i){"use strict";i("b8fb")},"2dea":function(e,t,i){var n=i("10d4");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("d2d2cc46",n,!0,{sourceMap:!1,shadowMode:!1})},3730:function(e,t,i){"use strict";var n=i("329b"),a=i("b65c").a,s=(i("50d5e"),i("17cc")),l=Object(s.a)(a,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("transition",{attrs:{name:"slide-right"}},[e.show?i("page-content",{attrs:{title:e.title,mode:"dialog","on-close":e.closeEvent}},[e.rightBtn?i("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:function(t){e.checkBoxAliRight?e.submit():e.rightBtnEvent(e.category)}},slot:"header-bar-right"},[e._v(e._s(e.checkBoxAliRight?e.rightBtn+"("+e.realChecked.length+")":e.rightBtn))]):e._e(),i("scroller",{staticClass:"bg-white",attrs:{"has-next":!e.searchStatus&&!e.grouping&&e.optionsLimit<e.options.length,"end-text":"","is-empty":0===e.optionsShow.length},on:{loadNext:e.pageOptions}},[e.searchBar?i("app-search-bar",{ref:"app-search-bar",attrs:{placeholder:"搜索","history-key":e.storageKey},on:{changeSearchStatus:e.onSearchTypeChange,input:e.onInput},model:{value:e.keyword,callback:function(t){e.keyword=t},expression:"keyword"}}):e._e(),e.showSelected&&(e.searchStatus&&e.isHasVal||!e.searchStatus)?i("div",[i("div",{staticClass:"multi-select-list-title"},[e._v("已选")]),i("div",{staticClass:"item"},[e._v(e._s(e.selectedNames||"请选择"))])]):e._e(),e.listTile&&(e.searchStatus&&e.isHasVal||!e.searchStatus)?i("div",{staticClass:"multi-select-list-title"},[e._v("全部")]):e._e(),e.searchStatus?[e.keyword?[e.grouping?i("van-collapse",{model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},e._l(e.searchData,(function(t,n){return i("van-collapse-item",{key:n,attrs:{title:t.name,name:n}},e._l(t.children,(function(t,n){return i("item",{key:n,attrs:{checked:!!e.checkedItem[t.id],item:t,"render-field":"rename"},on:{click:e.selectItem}})})))}))):e._l(e.searchData,(function(t,n){return i("item",{key:n,attrs:{checked:!!e.checkedItem[t.id],item:t,disabled:t.disabled,"render-field":"rename"},on:{click:e.selectItem}})}))]:e._e()]:[e.grouping?i("van-collapse",{model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},e._l(e.optionsShow,(function(t,n){return i("van-collapse-item",{key:n,attrs:{title:t.name,name:n}},[e._l(t.children,(function(t,n){return i("item",{key:n,attrs:{checked:!!e.checkedItem[t.id],item:t},on:{click:e.selectItem}})})),e._v("\n            "+e._s(t.id)+"\n          ")],2)}))):e._l(e.optionsShow,(function(t,n){return i("item",{key:n,attrs:{checked:!!e.checkedItem[t.id],item:t,"align-right":e.checkBoxAliRight,disabled:t.disabled},on:{click:e.selectItem}})})),e.optionsShow.length?e._e():i("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容",type:"search"}})]],2),e.checkBoxAliRight?e._e():i("app-button-group",{staticClass:"ctrl",attrs:{"fixed-bottom":""}},[i("app-button",{on:{click:e.submit}},[e._v("提交")])],1)],1):e._e()],1)}),[],!1,null,"89cd976c",null).exports,o=!1;o||(o=new(n.default.extend(l))({el:document.createElement("div")}),document.body.appendChild(o.$el));t.a=o},"50d5e":function(e,t,i){"use strict";i("2dea")},"53bf":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .single-item[data-v-b3cb8602]{min-height:44px}.zjapp .single-item .checkbox[data-v-b3cb8602]{font-size:14px;color:transparent;text-align:center;line-height:inherit;width:20px;height:20px;box-sizing:border-box;border:1px solid #dcdcdc;transition:.2s;border-radius:100%;display:inline-block;vertical-align:middle}.zjapp .single-item .checkbox i[data-v-b3cb8602]{display:none}.zjapp .single-item .checkbox.checked[data-v-b3cb8602]{color:#fff;border-color:#1989fa;background-color:#1989fa}.zjapp .single-item .checkbox.checked i[data-v-b3cb8602]{display:inline-block}.zjapp .single-item .checkbox.disabled[data-v-b3cb8602]{border-color:#b2b2b2}.zjapp .single-item .checkboxtxt[data-v-b3cb8602]{flex:1;margin-left:8px}.zjapp .single-item .disabled-text[data-v-b3cb8602]{color:#b2b2b2}.zjapp .wrapper[data-v-b3cb8602]{display:flex;align-items:center}",""])},"55d9":function(e,t,i){var n=i("5454");(e.exports=i("690e")(!1)).push([e.i,'.zjapp .drop-down-group[data-v-7b38f4c6]{display:flex;flex-direction:row}.zjapp .drop-down-group .select-con[data-v-7b38f4c6]{flex:1}.zjapp .scroller-pile-image[data-v-7b38f4c6]{display:flex;flex-direction:column}.zjapp .scroller-pile-image .drawing-con[data-v-7b38f4c6]{flex:1}.zjapp .list-title-r[data-v-7b38f4c6]{display:flex;align-items:center}.zjapp .list-title-r .color-orange[data-v-7b38f4c6]{background-color:#fc8b01!important}.zjapp .list-title-r .color-green[data-v-7b38f4c6]{background-color:#0bc666!important}.zjapp .list-title-r .ion-record[data-v-7b38f4c6]{display:flex;width:12px;height:12px;border-radius:50%}.zjapp .list-title-r .ion-harf-accept[data-v-7b38f4c6]{display:flex;width:12px;height:12px;background-color:#fff;border:2px solid #0bc666;border-radius:50%}.zjapp .list[data-v-7b38f4c6]{position:relative;margin-bottom:10px}.zjapp .list[data-v-7b38f4c6]:last-child{margin-bottom:0}.zjapp .list-room[data-v-7b38f4c6]{padding:15px 20px 0;background-color:#fff;overflow:hidden}.zjapp .list-room .item-list-room[data-v-7b38f4c6]{float:left;min-width:65px;min-height:30px;line-height:30px;margin:0 25px 15px 0;padding:0 15px;text-align:center;border:1px solid #dcdcdc;border-radius:3px}.zjapp .list-room .item-list-room.bg-green[data-v-7b38f4c6]{color:#fff;font-size:14px;border-color:#0bc666}.zjapp .list-room .item-list-room.bg-orange[data-v-7b38f4c6]{font-size:14px;color:#fff;border-color:#ff8400}.zjapp .list-room .item-list-room.bg-part[data-v-7b38f4c6]{border:1px solid #0bc666;position:relative;color:#0bc666}.zjapp .list-room .item-list-room.bg-part[data-v-7b38f4c6]:after{content:"";display:inline-block;width:27px;height:15px;background:url('+n(i("30e2"))+');background-repeat:no-repeat;background-size:100% 100%;position:absolute;right:-8px;top:-4px}.zjapp .bar-fixed-button[data-v-7b38f4c6]{padding:5px 15px}.zjapp .list-pile[data-v-7b38f4c6]{display:flex;flex-flow:row wrap;align-content:center;padding:15px 10px 0;background-color:#fff;overflow:hidden;width:100%}.zjapp .list-pile .item-list-pile[data-v-7b38f4c6]{flex:0 0 33.3%;padding:4px 8px;overflow:hidden;margin-bottom:15px;position:relative}.zjapp .list-pile .item-list-pile .item-list-pile-name[data-v-7b38f4c6]{text-align:center;border-radius:100px;padding:0 10px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;height:28px;line-height:28px}.zjapp .list-pile .item-list-pile .item-list-pile-name.bg-green[data-v-7b38f4c6]{color:#fff;font-size:14px;border-color:#0bc666}.zjapp .list-pile .item-list-pile .item-list-pile-name.bg-orange[data-v-7b38f4c6]{font-size:14px;color:#fff;border-color:#ff8400}.zjapp .list-pile .item-list-pile .item-list-pile-name.bg-part[data-v-7b38f4c6]{border:1px solid #0bc666;color:#0bc666}.zjapp .list-pile .item-list-pile .item-list-pile-name.bg-part[data-v-7b38f4c6]:after,.zjapp .list-pile .item-list-pile .item-list-pile-name.bg-pile-part[data-v-7b38f4c6]:after{content:"";display:inline-block;width:27px;height:15px;background:url('+n(i("30e2"))+");background-repeat:no-repeat;background-size:100% 100%;position:absolute;right:0;top:0}",""])},"774b":function(e,t,i){"use strict";var n=i("d18d").a,a=(i("b225"),i("17cc")),s=Object(a.a)(n,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":e.pulling,"scroll-warp-complete":!e.hasNext&&!e.isEmpty,"scroll-warp-empty":e.isEmpty},style:{"padding-bottom":e.numberKeyboardCoverHeight+"px"},on:{scroll:e.onScroll,touchstart:e.onTouchstart,touchmove:e.onTouchmove,touchend:e.onTouchend}},[e.allowPullDown?i("div",{staticClass:"pull-refresh-warp",style:{height:e.pullDist+"px"}},[i("div",{staticClass:"pull-refresh"},[i("div",{staticClass:"animation-refresher",class:{refreshing:e.refreshing}}),e.updateTime?i("p",{staticClass:"pull-refresh-date"},[e._v("最后成功同步："+e._s(e.updateTime))]):e._e()])]):e._e(),e._t("default"),e.loading?i("div",{staticClass:"page-loading"},[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):e._e(),e.hasNext||e.isEmpty?e._e():[e.$slots.end?e._t("end"):e._e(),!e.$slots.end&&e.endText?i("div",{staticClass:"end-text"},[e._v("\n      "+e._s(e.endText)+"\n    ")]):e._e()]],2)}),[],!1,null,"2b1a346c",null);t.a=s.exports},"7ff8":function(e,t,i){"use strict";(function(e){i("163d"),i("f548"),i("cc57"),i("e697");var n,a,s=i("fd50"),l=i("a18c"),o=i("aab3"),r=i("16c6"),c=i("f97c"),d=i("ab5c"),u=i("48f4"),p=i("bcc7"),h=i("bc69"),g=i("6144"),f=i("e2a7"),m=i("7cb8"),b=i("329b"),v=r.a.processDraft;n={isBuildingLoading:!0,isLoading:!0,buildingList:[],floorList:[],checkItemList:[],selectedBuilding:{},pilePoints:[],pileList:[],pileData:{},notPileImgLength:0,dataLoadComplete:!1,buildingLevel:3,buildingCurrent:[],processItemCurrent:[],places:[],draft:[],reset:function(){n.isBuildingLoading=!0,n.buildingList=[],n.floorList=[],n.checkItemList=[],n.selectedBuilding={},n.pilePoints=[],n.dataLoadComplete=!1,n.draft=[]},init:function(){return a=null,n.selectedBuilding={},n.getSectionAndBuildings().then((function(){var t;if(!e.find(n.buildingList,(function(t){return!e.isEmpty(t.buildings)})))return t=u.default.isExecutingSync()?"请等待数据下载完毕":"该项目未设置标段或楼栋，请在PC端设置",f.a.alert({msg:t}).then((function(){return l.a.go(-1),s.a.reject({msg:t})}))})).then((function(){return n.setDefaultBuilding().then((function(){return s.a.all([n.getBuildingFloorList(),n.getProcessList()])}))})).then((function(){return n.setDefaultCheckItem()})).then((function(){return n.getAllDraft()})).then((function(){return n.getCompleteItemsData()})).finally((function(){n.isLoading=!1}))},updateSelectedBuildingInfo:function(e){n.selectedBuilding=e,g.a.saveObject(h.a.PROCESS_ACCEPT_COMMON_BUILDING_SELECTED,e,g.a.level.user),a=null,"process-accept"===$rootScope.currentModuleCode&&n.buildingCurrent[1]&&n.buildingCurrent[1].id&&($rootScope.businessChangedStatus&&$rootScope.businessChangedStatus["process-accept"]&&void 0!==$rootScope.businessChangedStatus["process-accept"][n.buildingCurrent[1].id]?u.default.checkSync(n.buildingCurrent[1].id):u.default.executeSync(n.buildingCurrent[1].id))},getSectionAndBuildings:function(){var t=c.a.getDefaultProject().id;return o.a.getSectionsWithBuildingsAndUnits(t).then((function(i){return d.a.isSectionHasCheckItem(e.map(i,"id"),33).then((function(t){var n=e.zipObject(e.map(t,"section_id"),e.map(t,"count"));e.each(i,(function(e){e.hasCheckItem=n[e.id]}))})),n.getSelfDefinitionPlace(t).then((function(t){e.each(i,(function(e,i){for(var n=t.length-1;n>-1;n--)if(t[n].id===e.id){e.hasCheckItem=!0,[].push.apply(e.buildings,t[n].buildings),t.splice(n,1);break}})),n.buildingList=i}))}))},getSelfDefinitionPlace:function(e){return p.a.getSelfDefinitionPlace(e)},setDefaultBuilding:function(){a=null;var t=g.a.getObject(h.a.PROCESS_ACCEPT_COMMON_BUILDING_SELECTED,g.a.level.user)||{},i=g.a.getObject(h.a.HOME_PAGE_DEFAULT_PROJECT,g.a.level.user)||{},l={};return t.project&&t.project.id===i.id&&(l={sectionId:(t.section||{}).id,buildingId:(t.building||{}).id,unit:(t.unit||{}).id||""}),s.a.all([o.a.buildingIsExist(l.sectionId,l.buildingId,l.unit).then((function(e){return e||o.a.getFirstBuildingOfProject(i.id)})),p.a.getSelfPlace(l.sectionId,l.unit||l.buildingId).then((function(t){return e.isEmpty(t)?p.a.getFirstDefinitionPlace(i.id).then((function(e){return e})):t})).then((function(t){if(!e.isEmpty(t))return{sec_id:t.sec_id,sec_name:t.sec_name,building_id:t.parent_id?t.parent_id:t.id,building_name:t.parent_id?t.parent_name:t.name,unit:t.parent_id?t.id:"",unit_name:t.parent_id?t.name:"",isPlace:!0}}))]).then((function(t){var i=t[0]||t[1];return e.each(t,(function(e,t){if(e&&e.sec_id===l.sectionId&&e.building_id===l.buildingId)return i=e,!1})),i})).then((function(e){var t="";e&&e.unit&&(t={id:e.unit,name:e.isPlace?e.unit_name:e.unit.replace("单元","")+"单元"}),n.selectedBuilding={project:i,section:{id:e.sec_id,name:e.sec_name},building:{id:e.building_id,name:e.building_name,isPlace:e.isPlace},unit:t},g.a.saveObject(h.a.PROCESS_ACCEPT_COMMON_BUILDING_SELECTED,n.selectedBuilding,g.a.level.user)}))},getBuildingPileData:function(){return r.a.getBuildingPileData(n.selectedBuilding&&n.selectedBuilding.building&&n.selectedBuilding.building.id)},setDefaultCheckItem:function(){var t=e.isEmpty(n.selectedBuilding)?g.a.getObject(h.a.PROCESS_ACCEPT_COMMON_BUILDING_SELECTED,g.a.level.user):n.selectedBuilding,i=t.section,a=t.building,l=t.unit;n.buildingCurrent=[i,a,l];var o,r,c,d=g.a.getObject(h.a.PROCESS_ACCEPT_SELECTED_CHECKITEM,g.a.level.user)||{},p=n.checkItemList,f=!1;if(!p||!p.length)return n.processItem=null,n.deliver_type=null,$log.warn("当前楼栋或单元没有设置工序"),g.a.remove(h.a.PROCESS_ACCEPT_SELECTED_CHECKITEM,g.a.level.user),n.processItemCurrent=[],s.a.reject();for(var m=0;m<p.length;m++){o=p[m];for(var b=0;b<o.subitem.length;b++)if(r=o.subitem[b],c||(c=r),r.id===d.id&&r.name===d.name){f=!0,d.process_mode=r.process_mode||"1";break}}if(f?n.processItem=d:(g.a.saveObject(h.a.PROCESS_ACCEPT_SELECTED_CHECKITEM,c,g.a.level.user),n.processItem=c),n.processItemCurrent=[],e.each(n.checkItemList,(function(t){e.each(t.subitem,(function(e){e.id===n.processItem.id&&(n.processItemCurrent.push(t),n.processItemCurrent.push(e))}))})),a&&a.isPlace?n.deliver_type=90:n.deliver_type=n.processItem.process_mode||1,1===n.deliver_type||5===n.deliver_type)try{n.building_name=(a?a.name:"")+(l?l.name:"")+"("+i.name+")"}catch(e){console.log("移交模式："+n.deliver_type,a,l,i),console.log(e)}else n.building_name=a?a.name+"("+i.name+")":"";return console.log("buildingCurrent ===> ",[i,a,l]),n.buildingLevel=1===n.deliver_type||5===n.deliver_type||90===n.deliver_type?3:2,"process-accept"!==$rootScope.currentModuleCode&&n.buildingCurrent&&n.buildingCurrent[1]&&n.buildingCurrent[1].id&&u.default.changeModule("process-accept","",n.buildingCurrent[1].id),s.a.resolve()},getBuildingFloorList:function(){var e=n.selectedBuilding,t=e.building||{id:""},i=e.unit||{id:""};return o.a.getFloorListWithRooms(t.id,i.id).then((function(e){n.originFloorList=e})).finally((function(){window.setTimeout((function(){}),1)}))},getBuildingFloors:function(e,t,i){return o.a.getBuildingFloors(e,t,i)},getProcessList:function(){var t=n.selectedBuilding,i=t.section,a=t.building;return r.a.getItemList(i.id,a.id).then((function(t){e.each(t,(function(t){e.each(t.subitem,(function(e){e.note=["","分户","不分单元整层","整栋","","分单元整层"][e.process_mode]}))})),n.checkItemList=t}))},getCompleteItemsData:function(){var t=n.selectedBuilding.building,i=n.selectedBuilding.unit,l=e.isEmpty(i)?t?t.id:"":i.id;return t&&n.processItem?t.isPlace?(n.deliver_type=90,r.a.getSelfDefinitionPlaceProcessData(l,n.processItem.id).then((function(e){n.places=e})).then((function(){var t=[];e.each(n.draft,(function(i){e.find(n.places,(function(e){return e.id===i.primaryKeys.processAcceptId&&("已验收"!==e.status&&"待验收"!==e.status&&(e.status="待移交"),"已验收"!==e.status&&(e.custom_location=i.acceptData&&i.acceptData.custom_location?i.acceptData.custom_location:""),!0)}))||t.push({id:i.primaryKeys.processAcceptId,deliver_type:Number(i.primaryKeys.deliverType),custom_location:i.acceptData.custom_location,status:"待移交"})})),n.places=n.places.concat(t)}))):s.a.when().then((function(){return r.a.removeIllegalData(t.id,n.processItem.id,n.processItem.process_mode)})).then((function(){return r.a.getProcessMode(n.processItem.id,t.id).then((function(e){e&&(n.deliver_type=e.process_mode||1)}))})).then((function(){1!==n.deliver_type&&5!==n.deliver_type?(a=i||a,i=null):i=a||i,n.selectedBuilding.unit=i})).then((function(){return r.a.getCompleteItemsData(n.processItem.id,t.id,i?i.id:"",n.deliver_type)})).then((function(a){var s,l,o,c=n.originFloorList,d=n.draft;if(1===n.deliver_type){for(var u=e.groupBy(a,"room_id"),p=0;p<c.length;p++){l=(s=c[p]).rooms||[];for(var h=0;h<l.length;h++)if(u[(o=l[h]).id]?(o.status=u[o.id][0].status,o.process_accept_id=u[o.id][0].id,"待移交"!==o.status&&(o.used=!0)):(o.status="",o.process_accept_id="",o.used=!1),"已验收"!==o.status){var g=r.a.createPrimaryKeys({deliverType:n.deliver_type,floor:o.floor,roomId:o.room_no,unitName:n.buildingCurrent&&n.buildingCurrent[2]&&n.buildingCurrent[2].name}),f=e.filter(d,g);f&&f.length&&("待验收"!==o.status&&(o.status="待移交"),o.used=!0)}}n.floorList=c}else if(2===n.deliver_type||5===n.deliver_type){var v,_=e.groupBy(a,"floor")||[];for(p=0;p<c.length;p++)(s=c[p]).floor&&_[s.floor]&&_[s.floor].length?(v=_[s.floor][0],s.process_accept_id=v.id,"待移交"!==v.status?(s.used=!0,s.status=v.status):(s.status="待移交",s.used=!1)):(s.status="",s.process_accept_id="",s.used=!1),"已验收"!==s.status&&(g=r.a.createPrimaryKeys({deliverType:n.deliver_type,floor:s.floor,unitName:s.unit_name}),(f=e.filter(d,g))&&f.length&&("待验收"!==s.status&&(s.status="待移交"),s.used=!0));n.floorList=c}else{var y={name:t.name};if(i=null,n.selectedBuilding.unit=null,3===n.deliver_type)a.length?("待移交"!==a[0].status?y.status=a[0].status:y.status="待移交",y.process_accept_id=a[0].id):(y.status="",y.process_accept_id=""),"已验收"!==y.status&&"待验收"!==y.status&&d&&d.length&&(y.status="待移交");else if(4===n.deliver_type){var C={"已验收":"#0bc666","待移交":"#ff8400","待验收":"#0bc666"},x=0,w=0,k=0;n.pilePoints=[],n.pileList=[];var P=[];e.each(d,(function(t){e.find(a,(function(e){return e.id===t.primaryKeys.processAcceptId&&("已验收"!==e.status&&"待验收"!==e.status&&(e.status="待移交"),"已验收"!==e.status&&(e.pile_address=t.pileAddress),!0)}))||P.push({id:t.primaryKeys.processAcceptId,deliver_type:t.primaryKeys.deliverType,pile_data:t.pile_data,pile_address:t.pileAddress,status:"待移交"})})),a=a.concat(P),e.each(a,(function(e){var t,i=Object(m.f)(e.pile_data||"{}");i.x&&i.y?(t={x:i.x,y:i.y,id:e.id,color:C[e.status||"待移交"]||"#ff8400",status:e.status,pile_name:e.pile_address,process_accept_id:e.id,style:"待验收"===e.status?"not_fill":""},n.pilePoints.push(t),n.pileList.push(t),"已验收"===e.status?x+=1:"待移交"===e.status?w+=1:"待验收"===e.status&&(k+=1)):(t={process_accept_id:e.id,color:C[e.status||"待移交"]||"#ff8400",status:e.status,pile_name:e.pile_address},n.pileList.push(t),"已验收"===e.status?x+=1:"待移交"===e.status?w+=1:"待验收"===e.status&&(k+=1))}));var S=e.filter(n.pileList,(function(e){return!e.x&&!e.y}));return n.notPileImgLength=S.length,n.getBuildingPileData().then((function(t){if(t){var i=Object(m.f)(t.pile_image||"[]");n.pileData={num:t.pile_num,hasAccepted:x,preAccepted:w,hasHalfAccepted:k,image:e.isEmpty(i)?"":i[0].url}}else n.pileData={}}))}b.default.prototype.$set(n,"building",y)}})).finally((function(){n.dataLoadComplete=!0})):s.a.reject("无工序")},getAllDraft:function(){var e=n.selectedBuilding,t=e.building,i=e.unit&&e.unit.id;return v.config({deliverType:Number(n.deliver_type),buildingId:t&&t.id,checkpointId:n.processItem&&n.processItem.id,locationId:i||(t?t.id:"")}),v.get().then((function(e){return n.draft=e,e}))}},t.a=n}).call(this,i("391c"))},"9d55":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},b225:function(e,t,i){"use strict";i("ef48")},b65c:function(e,t,i){"use strict";(function(e){i("5ab2"),i("e10e"),i("f548"),i("9dd9"),i("cc57");var n=i("28f8"),a=(i("6d57"),i("de78"),i("9eea")),s=i("b850"),l=i("774b"),o=i("e89f");function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function c(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){Object(n.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}t.a={name:"AppMultiSelect",components:{appSearchBar:a.a,item:s.a,Scroller:l.a},mixins:[o.a],props:{},data:function(){return{activeTab:[],storageKey:encodeURI(this.title||"multiSelectMark"),storageVal:[],keyword:"",searchStatus:!1,isHasVal:!1,checkedItem:{},show:!1,searchData:[],showSelected:!1,listTile:"",selectedNames:"",options:[],optionsLimit:20,pagingOptions:!1,searchBar:!0,category:[]}},computed:{optionsShow:function(){return this.options&&this.options.length?this.grouping?this.getGroupData():this.options.slice(0,this.optionsLimit):[]},realChecked:function(){return Object.values(this.checkedItem).filter((function(e){return!!e}))}},watch:{keyword:function(e){var t=this;this.$nextTick((function(){t.filterList(e)}))}},methods:{openPopup:function(t){this.value=!0,this.show=!0,this.title=t.title,this.selected=t.selected,this.options=t.options,this.onSelect=t.onSelect,this.searchBar=t.searchBar,this.grouping=t.grouping,this.rightBtn=t.rightBtn,this.rightBtnEvent=t.rightBtnEvent,this.checkBoxAliRight=t.checkBoxAliRight,this.showSelected=t.showSelected,this.listTile=t.listTile,this.beforeCheck=t.beforeCheck,e.isEmpty(this.selected)&&(this.selectedNames=""),this.setValue(t.selected),this.$emit("open")},setValue:function(e){var t={};e&&e.length?(e.forEach((function(e){e&&(t[e.id]=e)})),this.checkedItem=t):this.checkedItem={}},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},closeEvent:function(){this.value=!1,this.show=!1,this.keyword="",this.searchStatus=!1,this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].cancelSearch()},selectItem:function(t){var i=this;if(!t.disabled){var n=this.beforeCheck&&this.beforeCheck(t);n instanceof Promise||(n=Promise.resolve(n)),n.then((function(n){if(!1!==n){var a=c({},i.checkedItem);if(i.$refs["app-search-bar"]&&i.$refs["app-search-bar"].saveHistory(),i.checkedItem[t.id]?delete a[t.id]:a[t.id]=t,i.checkedItem=a,i.showSelected){var s=[];e.each(i.checkedItem,(function(e){s.push(e.name)})),i.selectedNames=s.join("、")}}}))}},onSearchTypeChange:function(e){this.searchStatus=e},onInput:function(e){this.isHasVal=!!e},filterList:function(e){var t,i,n=this,a=new RegExp("("+e+")","gmi");if(this.category=[],this.keyword=e,this.searchData=[],!e)return!1;this.options.map((function(e){return a.test(e.name)&&(i=c(c({},e),{},{rename:e.name.replace(a,"<label>$1</label>")}),n.grouping?-1===(t=n.category.indexOf(i[n.grouping]))?(n.category.push(i[n.grouping]),n.searchData.push({name:i[n.grouping],children:[i]})):n.searchData[t].children.push(i):n.searchData.push(i)),e}))},pageOptions:function(){this.optionsLimit=this.optionsLimit+20,this.pagingOptions=!1},getGroupData:function(){var e,t=this,i=[];return this.category=[],this.options.map((function(n){return-1===(e=t.category.indexOf(n[t.grouping]))?(t.category.push(n[t.grouping]),i.push({name:n[t.grouping],children:[n]})):i[e].children.push(n),n})),i},submit:function(){var e=Object.values(this.checkedItem);this.onSelect(e),this.closeEvent()},getHadSelectValue:function(){return Object.values(this.checkedItem)}}}}).call(this,i("391c"))},b850:function(e,t,i){"use strict";var n={name:"MultiSelectItem",props:{item:{type:Object,default:function(){return{id:"",name:""}}},checked:{type:Boolean,default:!1},alignRight:{type:Boolean,default:!1},renderField:{type:String,default:"name"},disabled:{type:Boolean,default:!1}},methods:{selectItem:function(e){this.disabled||this.$emit("click",e)}}},a=(i("c85b"),i("17cc")),s=Object(a.a)(n,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("van-cell",{staticClass:"single-item",attrs:{clickable:!0},on:{click:function(t){e.selectItem(e.item)}}},[i("div",{staticClass:"wrapper"},[i("span",{class:{checkbox:!0,checked:e.checked,disabled:e.disabled},style:{order:e.alignRight?10:0}},[i("i",{staticClass:"van-icon van-icon-success"})]),i("div",{staticClass:"checkboxtxt",class:{"disabled-text":e.disabled}},[i("span",{domProps:{innerHTML:e._s(e.item[e.renderField])}}),e.alignRight?i("p",{staticClass:"f12 color-gray"},[e._v(e._s(e.item.code))]):e._e()])])])}),[],!1,null,"b3cb8602",null);t.a=s.exports},b8fb:function(e,t,i){var n=i("55d9");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("e91f0da2",n,!0,{sourceMap:!1,shadowMode:!1})},c85b:function(e,t,i){"use strict";i("f6e3")},d18d:function(e,t,i){"use strict";(function(e){i("2b45");var n,a=i("4360"),s=i("48f4"),l=i("162a"),o=i("e2a7"),r=i("a500"),c=i("6f9e"),d={};t.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return a.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return a.a.state.global.isNumberInputOpen?a.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var e=this;c.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var t=e.$refs["scroll-warp"]&&e.$refs["scroll-warp"].getBoundingClientRect&&e.$refs["scroll-warp"].getBoundingClientRect();t&&(e.gapBottom=document.documentElement.clientHeight-t.bottom),e.$el&&e.$el.addEventListener("focus",(function(t){var i=t&&t.target,n=i&&i.tagName&&i.tagName.toLowerCase();if("input"===n||"textarea"===n){window.addEventListener("resize",(function t(){var n=i.getBoundingClientRect(),a=e.$el.getBoundingClientRect(),s=n.bottom-a.bottom;s>0&&e.scrollBy(s),window.removeEventListener("resize",t,!1)}),!1)}}),!0)}))},destroyed:function(){c.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var e=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&e&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(e){var t=this,i=this.$refs["scroll-warp"].scrollTop,n=this.$refs["scroll-warp"].scrollHeight;if(i+this.$refs["scroll-warp"].clientHeight>=n-5&&!this.loading&&this.hasNext){this.loading=!0;var a=this.$listeners.loadNext();a&&a.then&&"function"==typeof a.then?a.then((function(){t.loading=!1})):this.loading=!1}this.$emit("scroll",e)},getTouchDiretion:function(e){if(!(d&&e&&e.touches&&e.touches[0]))return"";var t=e.touches[0].clientX,i=e.touches[0].clientY;return Math.abs(i-d.y)>Math.abs(t-d.x)&&Math.abs(i-d.y)>=3?i>d.y?"down":"up":""},onTouchstart:function(e){this.allowPullDown&&e.touches&&1===e.touches.length&&(d={x:e.touches[0].clientX,y:e.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(e){if(this.allowPullDown&&e.touches&&1===e.touches.length){var t=this.$refs["scroll-warp"].scrollTop,i=e.touches[0].clientY,n=i-d.y,a=this.getTouchDiretion(e);"down"===a?!this.refreshing&&t<=0?(this.pulling=!0,this.pullDist=(n-d.scrollTop)/2,e.preventDefault()):this.pulling=!1:"up"===a?this.pullDist>0&&(this.pullDist=d.pullDist-(d.y-i),e.preventDefault()):this.pullDist=d.pullDist}},onTouchend:function(){var e=this;this.allowPullDown&&(d={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(e.refreshing=!0,e.onPullDown){var t=e.onPullDown();t&&t.then&&"function"==typeof t?t.finally((function(){e.refreshing=!1,e.makePullTo(0)})):(e.refreshing=!1,e.makePullTo(0))}else e.dataSync().then((function(){e.refreshing=!1,e.makePullTo(0),e.$emit("pullDown")})).catch((function(){e.refreshing=!1,e.makePullTo(0),e.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(e){var t=this,i=this.pullDist,n=e,a=n-i,s=i;return i===n?Promise.resolve():new Promise((function(e){!function l(){window.requestAnimationFrame((function(){s+=a/6,t.pullDist=s,i<n&&s<n||i>n&&s>n?l():(t.pullDist=n,t.refreshing=!1,e())}))}()}))},dataSync:function(){var e,t=s.default.getCurrentModuleCode(),i=s.default.getCurrentRoute(),n=i.meta&&i.meta.isTodo;if(s.default.isModuleNeedBuilding(t)&&!n){if(!this.buildingId)return new Promise((function(e){setTimeout((function(){e()}),500)}));e=this.buildingId}return r.a.addTrack("公共-手动下拉刷新","",""),l.a.beginManualUpdate(),s.default.checkSync(e).then((function(e){return l.a.endManualUpdate(),e})).catch((function(e){$log.error("下拉刷新错误",e),e&&"Error: Network Error"===e.toString()?o.a.alert("当前网络无法同步数据"):o.a.alert(e),l.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(e){this.$refs["scroll-warp"].scrollTop=e},scrollBy:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,a=this.getScrollTop(),s=a+e,l=Math.round(i/16.7),o=e/l,r=a,c=n=+new Date;return a===s?Promise.resolve():new Promise((function(e){!function i(){window.requestAnimationFrame((function(){c===n&&(r+=o,t.$refs["scroll-warp"].scrollTop=r,a<s&&r<s||a>s&&r>s?i():(t.$refs["scroll-warp"].scrollTop=s,e()))}))}()}))},scrollTo:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,i=this.getScrollTop(),n=e-i;return this.scrollBy(n,t)},scrollToEle:function(e){var t=e.keyboardHeight||232,i=(e=e.$el?e.$el:e).getBoundingClientRect(),n=this.$refs["scroll-warp"].getBoundingClientRect();if(i&&n){var s=document.documentElement.clientHeight-(a.a.state.global.isNumberInputOpen?t:0),l=n.bottom<s?n.bottom:s,o=n.top-i.top,r=i.bottom-l;o>0?this.scrollBy(-o-10):r>0&&this.scrollBy(r+10)}},isCurrent:function(t,i){var n=this;t.length&&e.each(t,(function(e){e._uid===i?n.isCurrKeyboard=!0:n.isCurrent(e.$children,i)}))},onNumberKeyboardOpen:function(e){this.isCurrKeyboard=!1,this.isCurrent(this.$children,e._uid),this.isCurrKeyboard&&this.scrollToEle(e)}}}}).call(this,i("391c"))},e258:function(e,t,i){"use strict";(function(e){i("6d57"),i("cc57");var n=i("7ff8"),a=i("bc69"),s=i("6144"),l=i("e2a7"),o=i("1b7e"),r=i("16c6"),c=i("fd50"),d=i("ed08"),u=i("3730"),p=i("6f9e"),h=i("a500"),g=i("7cb8"),f=null;t.a={data:function(){return{loading:!0,searchSelected:{},model:n.a}},beforeRouterEnter:function(e,t,i){e.path.indexOf("process-accept-index")>=0&&t.path.indexOf("process-accept-progress")>=0&&(s.a.remove("report-process-accept-progress-checkitem",s.a.level.user),s.a.remove("report-process-accept-progress-filter",s.a.level.user)),i()},created:function(){Object(p.e)(this.init)},activated:function(){this.init(),console.log("ProcessAcceptIndexModel ====> ",this.model)},methods:{init:function(){var e=this;f=this.model,this.model.init().then((function(){e.loading=!1})).catch((function(t){e.loading=!1,console.error(t)}))},refresh:function(){if(f.buildingCurrent[1]&&f.buildingCurrent[1].id)return this.model.init()},goDetailPage:function(e,t){var i=f.selectedBuilding;if(!i||!i.building)return l.a.alert("请选择楼栋"),c.a.when();var n=i.building,a=i.unit||{id:""},s=f.buildingCurrent&&f.buildingCurrent[2]&&f.buildingCurrent[2].name;return t=t||d.a.uuid(),this.$router.push({path:"/process-accept-detail",query:{check_item_id:f.processItem.id,deliver_type:f.deliver_type,building_id:n.id,unit:a.id,process_accept_id:t,status:e.status||"待移交",primaryKeys:JSON.stringify({floor:e.floor,unitName:e.unit_name||s,roomId:e.room_no})}})},processProgress:function(){var e=this,t=f.buildingCurrent,i=this.model.selectedBuilding,n=i.section,r=i.building,c=i.unit,d=c?c.id:"";if(h.a.addTrack("工序验收v1-房间列表页-进度汇总"),"1"!==this.model.deliver_type&&"5"!==this.model.deliver_type)for(var u=0;u<f.buildingList.length;u++)if(n.id===this.model.buildingList[u].id){for(var p=this.model.buildingList[u].buildings,g=0;g<p.length;g++){if(t&&t[2]&&t[2].id){d=t[2].id;break}if(r.id===p[g].id){d=p[g].units.length?p[g].units[0].id:"";break}}break}o.a.getHasNetwork().then((function(t){if(t){var i={proj_id:(s.a.getObject(a.a.HOME_PAGE_DEFAULT_PROJECT,s.a.level.user)||{}).id,section_id:n.id,floor:"",building_id:r.id,unit:c?c.id:d,building_title:r.name,type:e.model.deliver_type};console.log("query---\x3e",i),e.$router.push({name:"ReportProcessAcceptProcess",query:i})}else l.a.alert("当前网络无法同步数据")}))},onChangeBuilding:function(e){f.buildingCurrent=e;var t={project:s.a.getObject(a.a.HOME_PAGE_DEFAULT_PROJECT,s.a.level.user)||{},section:f.buildingCurrent[0],building:f.buildingCurrent[1],unit:f.buildingCurrent[2]?f.buildingCurrent[2]:{}};return f.dataLoadComplete=!1,f.pileData={},f.pilePoints=[],l.a.loading("正在加载数据..."),f.updateSelectedBuildingInfo(t),c.a.all([f.getBuildingFloorList(),f.getProcessList()]).then((function(){return f.setDefaultCheckItem()})).then((function(){return f.getAllDraft()})).then((function(){return f.getCompleteItemsData()})).finally((function(){setTimeout((function(){l.a.hideLoading()}),500)}))},onChangeCheckItem:function(e){f.processItemCurrent=e;var t=f.processItemCurrent[1];l.a.loading("正在加载数据..."),f.processItem=t,f.dataLoadComplete=!1,f.pileData={},f.pilePoints=[],s.a.saveObject(a.a.PROCESS_ACCEPT_SELECTED_CHECKITEM,t,s.a.level.user),90!==f.deliver_type&&(f.deliver_type=t.process_mode||1),f.buildingLevel=1===f.deliver_type||5===f.deliver_type||90===f.deliver_type?3:2,f.getAllDraft().then((function(){f.getCompleteItemsData().finally((function(){console.log("model.floorList ==> ",f.floorList),setTimeout((function(){l.a.hideLoading()}),500)}))}))},entryProcessNewDetail:function(t){var i,n=this,o=f.processItem;return e.isEmpty(t)?(t={},i=""):(i=t.process_accept_id||"",e.extend(t,{id:t.id||t.floor,name:t.name||t.floorName,floor:t.floor,status:t.status})),o?r.a.getCheckPoints(o.id).then((function(o){if(!o.length)return l.a.alert("PC端未设置验收点");console.log("this 0 ===> ",n),function(){if(i=i||d.a.uuid(),e.isEmpty(t)){if(1===f.deliver_type)n.searchSelected={},u.a.openPopup({title:"验收房间",options:f.floorList,selected:n.searchSelected,searchBar:!0,showSelected:!0,listTile:"全部",onSelect:function(e){if(!e||!e.length)return l.a.alert("未选择验收房间");s.a.saveObject(a.a.PROCESS_ACCEPT_HAND_OVER_PLACE,e,s.a.level.user),n.goDetailPage(t,i),u.a.closePopup()}});else if(2===f.deliver_type||5===f.deliver_type){var o=[];f.floorList.forEach((function(e){o.push({id:e.floor,name:e.floorName,disabled:!!e.process_accept_id||"待移交"===e.status})})),n.currFloors=e.clone(o),n.searchSelected={},u.a.openPopup({title:"验收楼层",selected:n.searchSelected,options:e.clone(o),searchBar:!0,showSelected:!0,listTile:"全部",onSelect:function(e){if(!e||!e.length)return l.a.alert("未选择移交楼层");s.a.saveObject(a.a.PROCESS_ACCEPT_HAND_OVER_PLACE,e,s.a.level.user),n.goDetailPage(t,i),u.a.closePopup()}})}}else s.a.saveObject(a.a.PROCESS_ACCEPT_HAND_OVER_PLACE,[t],s.a.level.user),console.log("this 1 ===> ",n),n.goDetailPage(t,i)}()})).catch((function(e){l.a.alert(e||"出错了")})):l.a.alert("请先选择工序")},entrySelfDefinitionPlaceDetail:function(t){var i=this,n="",a=f.processItem;return e.isEmpty(t)?t={}:n=t.id,f.processItem?r.a.getCheckPoints(a.id).then((function(e){if(e.length){var s=f.selectedBuilding;if(!s)return l.a.alert("请选择自定义部位"),c.a.when();var o=s.building,r=s.unit||{id:""};return n=n||d.a.uuid(),i.$router.push({path:"/process-accept-detail",query:{check_item_id:a.id,deliver_type:f.deliver_type,building_id:o.id,unit:r.id,process_accept_id:n,status:t.status||"待移交",primaryKeys:JSON.stringify({processAcceptId:n})}})}return l.a.alert("PC端未设置验收点")})).catch((function(e){l.a.alert(e||"出错了")})):l.a.alert("请先选择工序")},addProcess:function(){var e=f.selectedBuilding;if(!e)return l.a.alert("请选择楼栋"),c.a.when();var t=e.building,i=e.unit||{id:""},n=f.processItem;this.$router.push({path:"process-accept-detail",query:{check_item_id:n.id,deliver_type:f.deliver_type,building_id:t.id,unit:i.id,process_accept_id:d.a.uuid(),status:"待移交"}})},onDrawingClick:function(e){var t=this;if(this.model.pilePoints.length&&!this.model.pilePoints[this.model.pilePoints.length-1].id&&this.model.pilePoints.pop(),"point"===e.type)this.goDetail(e.point);else{var i={x:e.x,y:e.y,color:"#ff8400",status:"待移交",id:""},n=this.$refs["drawing-pile"];this.model.pilePoints.push(i),n.openPopup({point:i,callback:function(e){"ok"===e.btn?(n.closePopup(),t.goDetail(i)):"cancel"===e.btn&&(t.model.pilePoints.pop(),n.closePopup())}})}},goDetail:function(e){var t=this,i=this.model.selectedBuilding,n=i.building,a=i.unit||{id:""},s=this.model.processItem;return r.a.getCheckPoints(s.id).then((function(i){if(i.length){var o=d.a.uuid();return t.$router.push({name:"ProcessAcceptDetail",query:{check_item_id:s.id,deliver_type:t.model.deliver_type,building_id:n.id,unit:a.id,process_accept_id:e.id||o,status:e.status||"待移交",point:Object(g.o)({x:e.x,y:e.y}),primaryKeys:Object(g.o)({processAcceptId:e.id||o})}})}return t.model.pilePoints.pop(),l.a.alert("PC端未设置验收点")})).catch((function(e){console.error(e)}))},drawingPileLayout:function(){this.$refs["drawing-pile"]&&this.$refs["drawing-pile"].refreshLayout()}}}}).call(this,i("391c"))},e89f:function(e,t,i){"use strict";var n=i("04f3"),a=i("cf09"),s=i("4360"),l=0;t.a={name:"PopupMixin",data:function(){return{backButtonEvent:null}},watch:{show:function(e){var t=this;if(e){if(this.$nextTick((function(){t.$el&&t.$el.style&&(t.$el.style.zIndex=++a.a.zIndex,l++,s.a.commit("app/SET_HAS_POPUP",!!l))})),!this.backButtonEvent){var i=this.close||this.closePopup;this.backButtonEvent=Object(n.a)(i)}}else--l<0&&(l=0),s.a.commit("app/SET_HAS_POPUP",!!l),this.backButtonEvent&&(Object(n.c)(this.backButtonEvent),this.backButtonEvent=null)}},methods:{}}},ef48:function(e,t,i){var n=i("9d55");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("a1a65c0c",n,!0,{sourceMap:!1,shadowMode:!1})},f6e3:function(e,t,i){var n=i("53bf");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("d3b0c900",n,!0,{sourceMap:!1,shadowMode:!1})},fe11:function(e,t,i){"use strict";i.r(t);var n=i("e258"),a=i("d623"),s=i("f7ab"),l=i("774b"),o=i("ccf5"),r={components:{DropDownSelect:a.a,SynchronizeTipBar:s.a,Scroller:l.a,DrawingPile:o.a},mixins:[n.a],data:function(){return{viewSize:$rootScope.viewSize,businessChangedStatus:this.$store.state.global.businessChangedStatus||{}}},mounted:function(){console.log("model.buildingCurrent ===> ",this.model.buildingCurrent)}},c=(i("20f0"),i("17cc")),d=Object(c.a)(r,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("page-content",{staticClass:"bg-white",attrs:{title:"工序验收"}},[e.model.deliver_type&&90!=e.model.deliver_type?i("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:function(t){e.processProgress()}},slot:"header-bar-right"},[e._v("进度汇总")]):e._e(),i("synchronize-tip-bar",{attrs:{"automatic-update-callback":e.refresh,"building-id":e.model.buildingCurrent&&e.model.buildingCurrent[1]&&e.model.buildingCurrent[1].id},on:{show:e.drawingPileLayout,hide:e.drawingPileLayout}}),e.loading?e._e():[i("scroller",{class:{"scroller-pile-image":e.model.dataLoadComplete&&4===e.model.deliver_type&&e.model.pileData.image&&!e.model.notPileImgLength},attrs:{"building-id":e.model.buildingCurrent[1].id,"is-empty":4===e.model.deliver_type&&!!e.model.pileData.image&&!e.model.notPileImgLength},on:{pullDown:e.refresh}},[i("div",{staticClass:"drop-down-group border-bottom bg-sub-theme"},[i("drop-down-select",{attrs:{value:e.model.buildingCurrent,options:e.model.buildingList,stage:3,"min-select-stage":2,"keep-stage":[!0,!0],"options-map":[{name:"标段"},{key:"buildings",name:"楼栋"},{key:"units",name:"单元"}],"show-text-level":2===e.model.buildingLevel?2:3},on:{onSelect:e.onChangeBuilding}}),i("drop-down-select",{attrs:{value:e.model.processItemCurrent,stage:2,options:e.model.checkItemList,"options-map":[{name:"一级检查项"},{key:"subitem",name:"二级检查项"}]},on:{onSelect:e.onChangeCheckItem}})],1),e.model.isLoading||1!==e.model.deliver_type?e._e():i("div",e._l(e.model.floorList,(function(t,n){return i("div",{key:n},[i("div",{staticClass:"list-title"},[e._v("\n            "+e._s(t.floorName)+"\n            "),0===n?i("div",{staticClass:"list-title-r"},[i("i",{staticClass:"ion-record color-orange ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("暂存")]),i("i",{staticClass:"ion-record color-green ml15 mr5"}),i("span",{staticClass:"f12"},[e._v("已验收")])]):e._e()]),i("div",{staticClass:"list list-room border-tb"},[t&&t.rooms&&t.rooms.length?e._l(t.rooms,(function(t,n){return i("div",{key:n,staticClass:"item-list-room",class:{"已验收":"bg-green","待移交":"bg-orange","待验收":"bg-part"}[t.status],on:{click:function(i){e.entryProcessNewDetail(t)}}},[e._v(e._s(t.name))])})):i("div",{staticClass:"color-light pb10"},[e._v("此层没有房间")])],2)])}))),e.model.isLoading||2!==e.model.deliver_type&&5!==e.model.deliver_type?e._e():i("div",[i("div",{staticClass:"list-title"},[i("div",{staticClass:"list-title-r"},[i("i",{staticClass:"ion-record color-orange ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("暂存")]),i("i",{staticClass:"ion-record color-green ml15 mr5"}),i("span",{staticClass:"f12"},[e._v("已验收")])])]),i("div",{staticClass:"list list-room border-tb"},e._l(e.model.floorList,(function(t,n){return i("div",{key:n,staticClass:"item-list-room",class:{"已验收":"bg-green","待移交":"bg-orange","待验收":"bg-part"}[t.status],on:{click:function(i){e.entryProcessNewDetail(t)}}},[e._v(e._s(t.floorName))])})))]),e.model.isLoading||3!==e.model.deliver_type?e._e():i("div",[i("div",{staticClass:"list-title"},[i("div",{staticClass:"list-title-r"},[i("i",{staticClass:"ion-record color-orange ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("暂存")]),i("i",{staticClass:"ion-record color-green ml15 mr5"}),i("span",{staticClass:"f12"},[e._v("已验收")])])]),i("div",{staticClass:"list list-room border-tb"},[i("div",{staticClass:"item-list-room",class:{"已验收":"bg-green","待移交":"bg-orange","待验收":"bg-part"}[e.model.building&&e.model.building.status],on:{click:function(t){e.entryProcessNewDetail(e.model.building)}}},[e._v(e._s(e.model.building.name))])])]),!e.model.isLoading&&90===e.model.deliver_type&&e.model.places.length?i("div",[i("div",{staticClass:"list-title"},[i("div",{staticClass:"list-title-r"},[i("i",{staticClass:"ion-record color-orange ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("暂存")]),i("i",{staticClass:"ion-record color-green ml15 mr5"}),i("span",{staticClass:"f12"},[e._v("已验收")])])]),i("div",{staticClass:"list list-pile"},e._l(e.model.places,(function(t,n){return i("div",{key:n,staticClass:"item-list-pile",class:[{"待验收":"bg-pile-part"}[t.status]],staticStyle:{flex:"0 0 50%"},on:{click:function(i){e.entrySelfDefinitionPlaceDetail(t)}}},[i("div",{staticClass:"item-list-pile-name item-list-room",class:{"已验收":"bg-green","待移交":"bg-orange","待验收":"bg-part"}[t.status],style:{color:t.custom_location?"":"#999",width:"100%",margin:0}},[e._v(e._s(t.custom_location||"部位未填"))])])})))]):e._e(),e.model.dataLoadComplete&&4===e.model.deliver_type?[e.model.pileData.image&&!e.model.notPileImgLength||e.model.pileList&&e.model.pileList.length?i("div",{staticClass:"list-title"},[e._v("\n          总桩数："+e._s(e.model.pileData.num)+"\n          "),i("div",{staticClass:"list-title-r"},[i("i",{staticClass:"ion-record color-orange ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("暂存"+e._s(e.model.pileData.preAccepted))]),i("i",{staticClass:"ion-harf-accept ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("部分验收"+e._s(e.model.pileData.hasHalfAccepted))]),i("i",{staticClass:"ion-record color-green ml5 mr5"}),i("span",{staticClass:"f12"},[e._v("已验收"+e._s(e.model.pileData.hasAccepted))])])]):e._e(),e.model.pileData.image&&!e.model.notPileImgLength?i("drawing-pile",{ref:"drawing-pile",attrs:{url:e.model.pileData.image,points:e.model.pilePoints},on:{onclick:e.onDrawingClick}}):[e.model.pileList&&e.model.pileList.length?i("div",{staticClass:"list list-pile"},e._l(e.model.pileList,(function(t,n){return i("div",{key:n,staticClass:"item-list-pile",class:[{"待验收":"bg-pile-part"}[t.status]],on:{click:function(i){e.entryProcessNewDetail(t)}}},[i("div",{staticClass:"item-list-pile-name border",class:[{"已验收":"bg-green","待移交":"bg-orange","待验收":"bg-part"}[t.status],{"item-list-not-pile-name":!t.pile_name}]},[e._v(e._s(t.pile_name||"桩号未填"))])])}))):e._e(),i("loading-status",{style:{height:e.viewSize.contentHeight-100+"px"},attrs:{"is-empty":!e.model.pileList.length,"empty-text":"无验收记录"}})]]:e._e(),1===e.model.deliver_type||2===e.model.deliver_type||5===e.model.deliver_type||90===e.model.deliver_type?i("loading-status",{style:{height:e.viewSize.contentHeight-100+"px"},attrs:{"is-loading":e.model.isLoading,"is-empty":(!e.model.floorList.length&&90!==e.model.deliver_type||90===e.model.deliver_type&&!e.model.places.length)&&!e.model.isLoading,"empty-text":"没有数据"}}):e._e(),i("loading-status",{attrs:{"is-loading":e.model.isLoading,"is-empty":!e.model.processItem&&!e.model.deliver_type}},[i("template",{slot:"empty-text"},[e._v("\n          当前楼栋或单元未设置工序,\n          "),i("br"),e._v("请联系系统管理员在后台设置\n        ")])],2)],2),2===e.model.deliver_type||5===e.model.deliver_type||90===e.model.deliver_type?i("app-button-group",{attrs:{"fixed-bottom":""}},[i("app-button",{directives:[{name:"show",rawName:"v-show",value:2===e.model.deliver_type||5===e.model.deliver_type,expression:"model.deliver_type === 2 || model.deliver_type === 5"}],on:{click:function(t){e.entryProcessNewDetail()}}},[e._v("发起批量验收")]),i("app-button",{directives:[{name:"show",rawName:"v-show",value:90===e.model.deliver_type,expression:"model.deliver_type === 90"},{name:"track",rawName:"v-track",value:"工序验收V1-自定义部位-发起验收",expression:"'工序验收V1-自定义部位-发起验收'"}],on:{click:function(t){e.entrySelfDefinitionPlaceDetail()}}},[e._v("发起验收")])],1):e._e(),e.model.dataLoadComplete&&4===e.model.deliver_type&&(!e.model.pileData.image||e.model.pileData.image&&e.model.notPileImgLength)?i("app-button-group",{attrs:{"fixed-bottom":""}},[i("app-button",{on:{click:function(t){e.addProcess()}}},[e._v("新增验收")])],1):e._e()]],2)}),[],!1,null,"7b38f4c6",null);t.default=d.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,