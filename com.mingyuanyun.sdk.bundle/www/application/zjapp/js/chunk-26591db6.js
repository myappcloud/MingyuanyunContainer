(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-26591db6"],{"0c47":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(t){var a=this;return e.each(t,(function(e){var t=a.formatFloat(e.val-(e.setVal||0));e.isExceed=a.hasVal(e.val)&&(t<a.min||t>a.max),e.isQualified=a.hasVal(e.val)&&t>=a.min&&t<=a.max})),t}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},"1f9a":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.each(a,(function(e){var a=t.formatFloat(e.val-(e.setVal||0));e.isExceed=t.hasVal(e.val)&&(a<t.min||a>t.max),e.isQualified=t.hasVal(e.val)&&a>=t.min&&a<=t.max})),a}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},3103:function(e,t,a){"use strict";(function(e){a("5ab2");var n=a("e3ee"),i=(a("163d"),a("cc57"),a("28f8")),r=(a("06a2"),a("e10e"),a("6d57"),a("7cb8")),c=a("fd50"),s=a("3bd5"),o=a("ed08"),u=a("06f6"),l=a("aab3"),f=a("c1c2"),h=a("bcc7"),d=a("eb45"),m=a("83b2"),v=a("48f4");function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function _(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){Object(i.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var g={getRoomsAndData:function(t,a,n){return c.a.when().then((function(){return l.a.getBuildingRooms(t,a).then((function(t){return e.clone(t)}))})).then((function(i){return d.a.getCheckItemBatch(t,a,n).then((function(t){for(var a={},n=0,r=0,c=0,s=0;s<t.length;s++)a[t[s].room_id]={status:t[s].status,batch_id:t[s].id},"已提交"===t[s].status?n++:"检查中"===t[s].status&&c++;return e.each(i,(function(t){e.each(t.rooms,(function(e){var t=a[e.id]||{};e.done=t.status?"已提交"===t.status?2:"检查中"===t.status?1:0:0,e.status=t.status,e.batch_id=t.batch_id,a[e.id]||r++}))})),console.log("result ==========",t),console.log("data ==========",i),{list:i,total:n,untested:r,temporary:c}}))}))},getAllCheckItems:function(){return d.a.getAllCheckItems()},getAllRelatedCheckItems:function(t){return d.a.getAllRelatedCheckItems(t).then((function(t){return e.each(t,(function(e){if(5===e.passrate_mode){var t=Object(r.f)(e.extension||"{}");e.standard={min_w:t.min_w,max_w:t.max_w,min_h:t.min_h,max_h:t.max_h}}else e.standard={min:e.standard_min,max:e.standard_max}})),t}))},getAllStationCheckItems:function(t){return d.a.getAllStationCheckItems(t).then((function(t){return e.each(t,(function(e){e.standard=Object(r.f)(e.standard||"{}")})),t}))},getAllStationCheckItemsRelation:function(t){return d.a.getAllStationCheckItemsRelation(t).then((function(t){return e.each(t,(function(e){e.standard=Object(r.f)(e.standard||"{}")})),t}))},getIsDeleteStation:function(e){return d.a.getIsDeleteStation(e).then((function(e){return{isDelete:e.length<=1&&e[0]&&"检查中"===e[0].status,batchId:e[0]&&"检查中"===e[0].status?e[0].batch_id:null}})).catch((function(e){return $log.error("laser-scanning-service_判断是否测站是否可删除：",e),Promise.resolve({isDelete:!1,batchId:null})}))},getDeleteStation:function(e){var t=e.staionId,a=e.checkItemids,n=e.batchId;return t||a?(n?d.a.getResultBatchId(n):Promise.resolve([])).then((function(e){var i={};e.forEach((function(e){i[e.station_id]?i[e.station_id].push(e.id):i[e.station_id]=[e.id]}));var r=[d.a.deleteStation(t)];return a.forEach((function(e){r.push(d.a.deleteCheckItem(e))})),1===Object.keys(i).length&&r.push(d.a.deleteMeasureBatch(n)),i[t]&&i[t].length>0&&i[t].forEach((function(e){r.push(d.a.deleteMeasureResult(e))})),Promise.all(r).catch((function(e){return $log.error("laser-scanning-service_删除测站_检查项表_结果表_报错1：",e),Promise.reject(e)}))})).catch((function(e){return $log.error("laser-scanning-service_删除测站_检查项表_结果表_报错2：",e),Promise.reject(e)})):Promise.reject()},getRelatedList:function(t,a){return d.a.getRoomRelatedList(t,a).then((function(t){var a=[];return t.forEach((function(e){a.push(d.a.getCheckItemList(e.id))})),Promise.all(a).then((function(a){var n={};return a.forEach((function(t){e.each(t,(function(e){e.standard=Object(r.f)(e.standard||"{}")}));var a=t[0]||null;a&&(n[a.station_id]=t)})),t=t.map((function(e){return n[e.id]&&(e.children=n[e.id]),e}))})).catch((function(e){return Promise.reject(e)}))})).catch((function(e){return Promise.reject(e)}))},getBatchNewsList:function(e,t){return d.a.getBatchNewsList(e,t).then((function(e){return g.unzipProblemValues(e)})).then((function(e){var t={},a=e&&e.length>0?e[0].batch_id:null;return e.forEach((function(e){t[e.station_id]?t[e.station_id].push(e):t[e.station_id]=[e]})),{batchListObj:t,batch_id:a}})).catch((function(e){return Promise.reject(e)}))},getStartDataList:function(t,a,n){var i=this.getRelatedList(t,a),c=n?Promise.resolve({}):this.getBatchNewsList(t,a);return Promise.all([i,c]).then((function(t){var a=t[0],n=t[1],i=n.batchListObj,c=void 0===i?{}:i,s=n.batch_id,o=void 0===s?null:s;return a=a.map((function(t){var a=c[t.id];if(a){t.status=!0,t.children=e.map(a,(function(e){return _(_({},e),{},{standard:Object(r.f)(e.standard||"{}")})}));var n=a[Object.keys(a)[0]];t.taskId=n?n.task_id:null}return t})),console.log("laser-scanning-service_根据房间id-获取测站列表：",t,a),{list:a,batch_id:o}})).catch((function(e){return $log.error("laser-scanning-service_根据房间id-获取测站列表：",e),Promise.reject(e)}))},saveAddRelationCheckItem:function(e,t){var a=Boolean(e.id);e.id||(e.id=o.a.uuid(),t=t.map((function(t){return Object.assign(t,{station_id:e.id})})));var n=this.saveRelation(e,a),i=this.saveCheckItem(t);return Promise.all([n,i])},saveRelation:function(e,t){var a={id:e.id,name:e.name,proj_id:e.proj_id,bidsection_id:e.bidsection_id,building_id:e.building_id,unit:e.unit,floor:e.floor,room_id:e.room_id,parent_checkitem_id:e.parent_checkitem_id};return c.a.when().then((function(){return t?d.a.updateRelationCheckitem(a):(a.regist_date=o.a.now(),a.regist_by=s.a.getUser().user_id,d.a.insertRelationCheckitem(a))})).catch((function(e){return $log.error("laser-scanning-service_保存测站-error：",e),c.a.reject(e)}))},saveCheckItem:function(e){if(Array.isArray(e)){var t=[];return e.forEach((function(e){var a=Boolean(e.id);e={id:e.id||o.a.uuid(),station_id:e.station_id,parent_checkitem_id:e.parent_checkitem_id,checkitem_id:e.checkitem_id,design_val:e.design_val,standard:Object(r.o)(e.standard),passrate_mode:e.passrate_mode};var n=a?d.a.updateCheckItem(e):d.a.insertCheckItem(e);t.push(n)})),Promise.all(t)}},saveMeasurementResults:function(e,t,a){var n=a?Promise.resolve(!0):this.saveBatch(e),i=this.saveMeasureResult(t);return Promise.all([n,i]).catch((function(e){$log.error("saveMeasurementResults error =>",e)}))},saveBatch:function(e){var t={id:e.id,proj_id:e.proj_id,status:e.status,bidsection_id:e.bidsection_id,building_id:e.building_id,unit:e.unit,floor:e.floor,room_id:e.room_id,parent_checkitem_id:e.parent_checkitem_id};return c.a.when().then((function(){return t.regist_date=o.a.now(),t.regist_by=s.a.getUser().user_id,d.a.insertMeasureBatch(t)})).catch((function(e){return $log.error("laser-scanning-service_保存批次-error：",e),c.a.reject(e)}))},updateBatchStatus:function(t){var a={id:t.id,status:t.status};return d.a.updateMeasureBatch(a).then((function(){return v.default.addSyncGroup([["ls_measure_batch",a.id],["ls_measure_result",a.id]])})).then((function(){return d.a.getStationsByBatch(a.id).then((function(t){return Promise.all(e.map(t,(function(e){return v.default.addSyncGroup([["ls_measure_station",e.id],["ls_measure_checkitem",e.id]])})))}))}))},saveMeasureResult:function(t){if(Array.isArray(t)){var a,n=[];return f.a.getModulePermission(s.a.getUser().user_id,[31,32,33]).then((function(t){a=Math.max.apply("",e.map(t,(function(e){return e.role_type})))})).then((function(){return t.forEach((function(e){var t=Boolean(e.id);e.measure_data="string"==typeof e.measure_data?e.measure_data:JSON.stringify(e.measure_data),e={id:e.id||o.a.uuid(),batch_id:e.batch_id,station_id:e.station_id,proj_id:e.proj_id,bidsection_id:e.bidsection_id,building_id:e.building_id,unit:e.unit,floor:e.floor,room_id:e.room_id,parent_checkitem_id:e.parent_checkitem_id,checkitem_id:e.checkitem_id,measurement_points:Number(e.measurement_points),problem_points:Number(e.problem_points),measure_data:e.measure_data,measure_data_zip:null,design_val:e.design_val,standard:Object(r.o)(e.standard),passrate_mode:Number(e.passrate_mode),role_type:a,pass_rate:e.pass_rate,third_checkitem_id:e.third_checkitem_id,task_id:e.task_id};var i=t?d.a.updateMeasureResult(e):d.a.insertMeasureResult(e);n.push(i.catch((function(e){console.error(e)})))})),Promise.all(n)}))}},getPlaceAndCheckitem:function(e,t){return Promise.all([u.default.getRoomById(e),h.a.getCheckItem(t)]).then((function(e){var t=Object(n.a)(e,2);return{place:t[0],checkitem:t[1]}}))},getBatchsByRoomAndCheckitem:function(e,t){return d.a.getBatchsByRoomAndCheckitem(e,t)},getResultsByBatch:function(t){return d.a.getResultsByBatch(t).then((function(e){return g.unzipProblemValues(e)})).then((function(t){return e.each(t,(function(e){var t=Object(r.f)(e.standard||"{}"),a=5===e.passrate_mode?{passrateMode:e.passrate_mode,minW:t.min_w,maxW:t.max_w,minH:t.min_h,maxH:t.max_h}:{passrateMode:e.passrate_mode,min:t.min,max:t.max},n=Object(m.a)(a);e.standard=t,e.standardRange=n.getStandardRange()})),t}))},unzipProblemValues:function(t){var a;return t?(a=e.isArray(t)?t:[t],Promise.all(e.map(a,(function(e){return e.measure_data_zip&&!e.measure_data?o.a.unzipString(e.measure_data_zip).then((function(t){return e.measure_data=t,d.a.updateMeasureResult({id:e.id,measure_data:t})})).then((function(){return e})):Promise.resolve()}))).then((function(){return t}))):Promise.resolve(t)},getMeasurelResultData:function(t){return d.a.getMeasurelResultData(t).then((function(e){return g.unzipProblemValues(e)})).then((function(t){if(!t)return{};t.measure_data=Object(r.f)(t.measure_data||"[]"),t.design_val=Object(r.f)(t.design_val||"[]"),t.parent_checkitem={id:t.parent_checkitem_id,name:t.parent_checkitem_name},t.checkitem={id:t.checkitem_id,name:t.checkitem_name};var a=Object(r.a)(t.building_name,"栋"),n=Object(r.a)(t.unit,"单元");t.place_name="".concat(a).concat(n).concat(t.room_name);var i=Object(r.f)(t.standard||"{}"),c=5===t.passrate_mode?{passrateMode:t.passrate_mode,minW:i.min_w,maxW:i.max_w,minH:i.min_h,maxH:i.max_h}:{passrateMode:t.passrate_mode,min:i.min,max:i.max},s=Object(m.a)(c);return t.standardRange=s.getStandardRange(),t.points=s.setPointState(t.measure_data),t.pointGroups=e.groupBy(t.points,(function(e){return e.area||""})),t.measureLabels=e.uniqBy(e.compact(e.map(t.points,(function(e){return e.label})))),t.hasMeasureLabels=!e.isEmpty(t.measureLabels),t.setValText=e.map(t.design_val,(function(e){return e.setVal||0===e.setVal?"".concat(e.label||"").concat(e.setVal):""})).join("，"),t}))}};t.a=g}).call(this,a("391c"))},"38d1":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=this.min,i=this.max;0===n&&(n=i);var r=e.groupBy(a,"area");return e.each(r,(function(a){if(e.some(a,(function(e){return!t.hasVal(e.val)})))e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1}));else{var r=e.maxBy(a,"val"),c=e.minBy(a,"val"),s=t.formatFloat(r.val-(r.setVal||0)),o=t.formatFloat(c.val-(c.setVal||0)),u=t.formatFloat(s-o);if(u<=n)e.each(a,(function(e){e.isExceed=!1,e.isQualified=!0}));else if(u>i)e.each(a,(function(e){e.isExceed=!0,e.isQualified=!1}));else{var l=0;"auto"===t.jichaType?e.each(a,(function(e){var a=t.formatFloat(e.val-(e.setVal||0));t.formatFloat(a-o)>n&&(l-=1),t.formatFloat(s-a)>n&&(l+=1)})):"min"===t.jichaType?l=-1:"max"===t.jichaType&&(l=1),e.each(a,(function(e){var a=t.formatFloat(e.val-(e.setVal||0));l<0?t.formatFloat(a-o)>n?(e.isExceed=!0,e.isQualified=!1):(e.isExceed=!1,e.isQualified=!0):t.formatFloat(s-a)>n?(e.isExceed=!0,e.isQualified=!1):(e.isExceed=!1,e.isQualified=!0)}))}}})),a}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},"39bf":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("6d57"),a("e10e"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(t){var a=this,n=e.groupBy(t||[],"area");return e.each(n,(function(t){var n;if(e.some(t,(function(e){return!a.hasVal(e.val)||!a.hasVal(e.setVal)})))e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1}));else{var i=0;e.each(t,(function(e){Math.abs(i)<Math.abs(a.formatFloat(e.val-e.setVal))?(i=a.formatFloat(e.val-e.setVal),n=i<a.min||i>a.max):Math.abs(i)===Math.abs(a.formatFloat(e.val-e.setVal))&&(i=a.formatFloat(e.val-e.setVal),n=n||i<a.min||i>a.max)})),n?e.each(t,(function(e){e.isExceed=!0,e.isQualified=!1})):e.each(t,(function(e){e.isExceed=!1,e.isQualified=!0}))}})),t}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=0,r=0,c=0;if("point"===this.ratingsBy)n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;else if("area"===this.ratingsBy){var s=e.groupBy(a||[],(function(e){return e.area}));i=Object.keys(s).length,e.each(s,(function(t){e.some(t,(function(e){return e.isExceed}))&&c++})),r=i-c}return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},"3e831":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return o}));a("5ab2"),a("6d57"),a("e10e");var n=a("28f8"),i=(a("163d"),a("9d30"),a("9251"),a("0e4d")),r=a("94ef");function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){Object(n.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var o=function(){function t(a){Object(i.a)(this,t),this.entryMode=parseInt(a.entryMode),this.passrateMode=parseInt(a.passrateMode),this.min=this.hasVal(a.min)?parseFloat(a.min):-1/0,this.max=this.hasVal(a.max)?parseFloat(a.max):1/0,this.extension=a.extension?e.isString(a.extension)?JSON.parse(a.extension):a.extension:{},this.minW=this.hasVal(a.minW)?parseFloat(a.minW):this.hasVal(this.extension.min_w)?parseFloat(this.extension.min_w):-1/0,this.maxW=this.hasVal(a.maxW)?parseFloat(a.maxW):this.hasVal(this.extension.max_w)?parseFloat(this.extension.max_w):1/0,this.minH=this.hasVal(a.minH)?parseFloat(a.minH):this.hasVal(this.extension.min_h)?parseFloat(this.extension.min_h):-1/0,this.maxH=this.hasVal(a.maxH)?parseFloat(a.maxH):this.hasVal(this.extension.max_h)?parseFloat(this.extension.max_h):1/0,this.intensityConversionStandard=this.extension.intensity_conversion_standard||"national",this.ratingsBy=this.extension.ratings_by||"point",this.jichaType=a.jichaType?a.jichaType:"min",this.mode5Type=a.mode5Type?a.mode5Type:"area-label",this.measureItem={5:["高","宽"],6:["开间","进深"]}[this.passrateMode]||[],this.hasDiagram=a.hasDiagram,Object.freeze(this)}return Object(r.a)(t,[{key:"formatFloat",value:function(e){return isNaN(e)?e:Math.round(1e5*e)/1e5}},{key:"hasVal",value:function(e){return""!==e&&null!=e&&!Number.isNaN(e)}},{key:"getStandardRange",value:function(){var e=this.min,t=this.max,a=this.minH,n=this.minW,i=this.maxH,r=this.maxW;if(e=e===-1/0?"":e,t=t===1/0?"":t,a=a===-1/0?"":a,n=n===-1/0?"":n,i=i===1/0?"":i,r=r===1/0?"":r,5===this.passrateMode)return"高[".concat(a,", ").concat(i,"] 宽[").concat(n,", ").concat(r,"]");if(11===this.passrateMode)return this.hasVal(e)?"大于设计值".concat(e,"%"):"大于设计值90%";if(1===this.entryMode){if(!this.hasVal(e)&&!this.hasVal(t))return"未设置"}else{if(9===this.passrateMode)return"";if(!this.hasVal(t))return"检查项的合格标准最大值未设置"}return this.hasVal(e)&&this.hasVal(t)?"[".concat(e,", ").concat(t,"]"):this.hasVal(t)?"<= ".concat(t):this.hasVal(e)?">= ".concat(e):""}},{key:"getAreaData",value:function(){}},{key:"getPointsByArea",value:function(t,a){if(1===this.entryMode||3===this.entryMode)return t;var n=e.map(t,(function(e){return s({},e)}));if(e.each(n,(function(e){e.area||(e.area="测区1")})),this.getPointsByAreaCustom)return this.getPointsByAreaCustom(n,a);$log.error("getPointsByAreaCustom 方法未设置")}},{key:"getPointState",value:function(t){var a=this,n=e.map(t,(function(e){var t=s(s({},e),{},{val:a.hasVal(e.val)?parseFloat(e.val):""});return a.hasVal(t.setVal)&&(t.setVal=parseFloat(t.setVal)),a.hasDiagram&&(t.showMark=a.hasVal(t.val),t.hasMark=a.hasVal(t.x)&&a.hasVal(t.y)),t}));return 1===this.entryMode?e.map(n,(function(e){return s(s({},e),{},{isExceed:!0,isQualified:!1})})):n=this.setPointState(n)}},{key:"setPointState",value:function(){return[]}},{key:"pointsClean",value:function(t){return e.each(t,(function(e){delete e.showMark,delete e.hasMark,delete e.isWarning,delete e.color})),t}},{key:"getAreaDataFromPoints",value:function(t){var a=this,n=[];return e.each(t,(function(i){if(!e.some(n,{name:i.area})){var r=e.filter(t,{area:i.area}).length;n.push({name:i.area,setVal:a.hasVal(i.setVal)?i.setVal:"",pointNum:r})}})),n}},{key:"getDrawPoints",value:function(){return[]}}]),t}()}).call(this,a("391c"))},"4c3d":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=[];return e.each(a,(function(a){var i=e.filter(t,{area:a.name})||[],r=a.pointNum-i.length;if(r>0)for(var c=0;c<r;c++)i.push({val:"",area:a.name,setVal:""});else r<0&&i.splice(i.length+r,-r);n=n.concat(i)})),n}},{key:"setPointState",value:function(t){var a=this,n=e.groupBy(t||[],"area");return e.each(n,(function(t){if(e.some(t,(function(e){return!a.hasVal(e.val)})))e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1}));else{var n=e.maxBy(t,"val").val,i=e.minBy(t,"val").val,r=a.formatFloat(n-i);r<a.min||r>a.max?e.each(t,(function(e){e.isExceed=!0,e.isQualified=!1})):e.each(t,(function(e){e.isExceed=!1,e.isQualified=!0}))}})),t}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=e.uniqBy(e.map(a,(function(e){return e.area}))).length,r=e.uniqBy(e.map(n,(function(e){return e.area}))).length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},6573:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=[];return e.each(a,(function(a){var i=e.filter(t,{area:a.name})||[],r=a.pointNum-i.length;if(r>0)for(var c=0;c<r;c++)i.push({val:"",area:a.name,setVal:""});else r<0&&i.splice(i.length+r,-r);n=n.concat(i)})),n}},{key:"setPointState",value:function(t){var a=this;return e.each(t,(function(e){var t=parseFloat(e.val);e.isExceed=a.hasVal(e.val)&&!t,e.isQualified=a.hasVal(e.val)&&!!t})),t}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},"6d1e":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("e697"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){e.each(n.measureItem,(function(r){var c=e.filter(t,{area:a.name,label:r})||[],s=2-c.length;if(s>0)for(var o=0;o<s;o++)c.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:"",label:r});else s<0&&c.splice(c.length+s,-s);i=i.concat(c)}))})),i}},{key:"setPointState",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=this.minH,i=this.maxH,r=this.minW,c=this.maxW,s=e.groupBy(a,(function(e){return e.area+"-"+e.label}));return"area-label"===this.mode5Type?e.each(s,(function(a,s){var o,u;if(-1!==s.indexOf("高")?(o=n,u=i):-1!==s.indexOf("宽")?(o=r,u=c):console.warn("请注意啦！"),e.each(a,(function(e,t){t&&(e.setVal=a[0].setVal)})),e.some(a,(function(e){return!t.hasVal(e.val)||!t.hasVal(e.setVal)})))e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1}));else{var l=e.maxBy(a,(function(e){return Math.abs(t.formatFloat(e.val-(e.setVal||0)))})),f=t.formatFloat(l.val-(l.setVal||0));t.hasVal(l.val)&&(f<o||f>u)?(e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1})),l.isExceed=!0):e.each(a,(function(e){e.isExceed=!1,e.isQualified=!0}))}})):e.each(s,(function(a){if(e.some(a,(function(e){return!t.hasVal(e.val)||!t.hasVal(e.setVal)})))e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1}));else{var n=e.maxBy(a,(function(e){return Math.abs(e.val-e.setVal)})),i=parseFloat(n.val)-parseFloat(n.setVal||0);t.hasVal(n.val)&&(i<min||i>max)?(e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1})),n.isExceed=!0):e.each(a,(function(e){e.isExceed=!1,e.isQualified=!0}))}})),a}},{key:"getPointsTotal",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=this.setPointState(a),i=(e.filter(n,{isQualified:!0}),0),r=0,c=e.groupBy(n||[],(function(e){return e.area+"-"+e.label}));e.each(c,(function(a){e.find(a,(function(e){return!t.hasVal(e.val)}))||(i++,!0!==a[0].isQualified&&r++)}));var s=i-r;return{all:i,qualified:s,exceed:r}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},"83b2":function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a("1f9a"),i=a("38d1"),r=a("0c47"),c=a("cc23"),s=a("6d1e"),o=a("bcf1"),u=a("4c3d"),l=a("6573"),f=a("b6d4"),h=a("39bf"),d=a("ba71"),m=a("d5e7"),v=a("fc56");function p(e){var t=e.passrateMode;return 1===t?new n.a(e):2===t?new i.a(e):3===t?new r.a(e):4===t?new c.a(e):5===t?new s.a(e):6===t?new o.a(e):7===t?new u.a(e):8===t?new l.a(e):9===t?new f.a(e):10===t?new h.a(e):11===t?new d.a(e):12===t?new m.a(e):13===t?new v.a(e):($log.error("合格率计算方式错误 --\x3e",t),{})}},9251:function(e,t,a){var n=a("fb68"),i=a("f71f").onFreeze;a("f0cc")("freeze",(function(e){return function(t){return e&&n(t)?e(i(t)):t}}))},b6d4:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return h}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703"),o=a("3e831");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var l={18.6:10,18.7:10.1,18.8:10.2,18.9:10.3,"19.0":10.4,19.1:10.5,19.2:10.6,19.3:10.8,19.4:10.9,19.5:11,19.6:11.1,19.7:11.2,19.8:11.3,19.9:11.4,"20.0":11.5,20.1:11.7,20.2:11.8,20.3:11.9,20.4:12,20.5:12.1,20.6:12.2,20.7:12.3,20.8:12.4,20.9:12.6,"21.0":12.7,21.1:12.8,21.2:12.9,21.3:13,21.4:13.1,21.5:13.3,21.6:13.4,21.7:13.5,21.8:13.6,21.9:13.8,"22.0":13.9,22.1:14,22.2:14.1,22.3:14.3,22.4:14.4,22.5:14.5,22.6:14.6,22.7:14.8,22.8:14.9,22.9:15,"23.0":15.1,23.1:15.3,23.2:15.4,23.3:15.5,23.4:15.6,23.5:15.8,23.6:15.9,23.7:16.1,23.8:16.2,23.9:16.3,"24.0":16.4,24.1:16.6,24.2:16.7,24.3:16.9,24.4:17,24.5:17.1,24.6:17.2,24.7:17.4,24.8:17.5,24.9:17.7,"25.0":17.8,25.1:17.9,25.2:18,25.3:18.2,25.4:18.3,25.5:18.5,25.6:18.6,25.7:18.8,25.8:18.9,25.9:19.1,"26.0":19.2,26.1:19.4,26.2:19.5,26.3:19.7,26.4:19.8,26.5:19.9,26.6:20,26.7:20.2,26.8:20.3,26.9:20.5,"27.0":20.6,27.1:20.8,27.2:20.9,27.3:21.1,27.4:21.2,27.5:21.4,27.6:21.5,27.7:21.7,27.8:21.8,27.9:22,"28.0":22.1,28.1:22.3,28.2:22.4,28.3:22.6,28.4:22.8,28.5:23,28.6:23.1,28.7:23.3,28.8:23.4,28.9:23.6,"29.0":23.7,29.1:23.9,29.2:24,29.3:24.2,29.4:24.3,29.5:24.5,29.6:24.7,29.7:24.9,29.8:25,29.9:25.2,"30.0":25.3,30.1:25.5,30.2:25.6,30.3:25.8,30.4:26,30.5:26.2,30.6:26.3,30.7:26.5,30.8:26.6,30.9:26.8,"31.0":27,31.1:27.2,31.2:27.3,31.3:27.5,31.4:27.7,31.5:27.9,31.6:28,31.7:28.2,31.8:28.3,31.9:28.5,"32.0":28.7,32.1:28.9,32.2:29,32.3:29.2,32.4:29.4,32.5:29.6,32.6:29.7,32.7:29.9,32.8:30.1,32.9:30.3,"33.0":30.4,33.1:30.6,33.2:30.8,33.3:31,33.4:31.2,33.5:31.4,33.6:31.5,33.7:31.7,33.8:31.9,33.9:32.1,"34.0":32.3,34.1:32.5,34.2:32.6,34.3:32.8,34.4:33,34.5:33.2,34.6:33.4,34.7:33.6,34.8:33.8,34.9:34,"35.0":34.1,35.1:34.3,35.2:34.5,35.3:34.7,35.4:34.9,35.5:35.1,35.6:35.3,35.7:35.5,35.8:35.7,35.9:35.9,"36.0":36,36.1:36.2,36.2:36.4,36.3:36.6,36.4:36.8,36.5:37,36.6:37.2,36.7:37.4,36.8:37.6,36.9:37.8,"37.0":38,37.1:38.2,37.2:38.4,37.3:38.6,37.4:38.8,37.5:39,37.6:39.2,37.7:39.4,37.8:39.6,37.9:39.8,"38.0":40,38.1:40.2,38.2:40.4,38.3:40.7,38.4:40.9,38.5:41.1,38.6:41.3,38.7:41.5,38.8:41.7,38.9:41.9,"39.0":42.1,39.1:42.3,39.2:42.5,39.3:42.7,39.4:42.9,39.5:43.2,39.6:43.4,39.7:43.6,39.8:43.8,39.9:44,"40.0":44.2,40.1:44.5,40.2:44.7,40.3:44.9,40.4:45.1,40.5:45.3,40.6:45.5,40.7:45.8,40.8:46,40.9:46.2,"41.0":46.4,41.1:46.6,41.2:46.8,41.3:47.1,41.4:47.3,41.5:47.5,41.6:47.7,41.7:48,41.8:48.2,41.9:48.4,"42.0":48.6,42.1:48.9,42.2:49.1,42.3:49.3,42.4:49.5,42.5:49.8,42.6:50,42.7:50.2,42.8:50.4,42.9:50.7,"43.0":50.9,43.1:51.1,43.2:51.3,43.3:51.6,43.4:51.8,43.5:52.1,43.6:52.3,43.7:52.5,43.8:52.7,43.9:53,"44.0":53.2,44.1:53.5,44.2:53.7,44.3:53.9,44.4:54.1,44.5:54.4,44.6:54.6,44.7:54.9,44.8:55.1,44.9:55.4,"45.0":55.6,45.1:55.9,45.2:56.1,45.3:56.3,45.4:56.5,45.5:56.8,45.6:57,45.7:57.3,45.8:57.5,45.9:57.8,"46.0":58,46.1:58.3,46.2:58.5,46.3:58.8,46.4:59,46.5:59.3,46.6:59.5,46.7:59.8,46.8:60},f={16.4:10,16.5:10.1,16.6:10.2,16.7:10.3,16.8:10.4,16.9:10.6,"17.0":10.7,17.1:10.8,17.2:10.9,17.3:11,17.4:11.1,17.5:11.2,17.6:11.3,17.7:11.5,17.8:11.6,17.9:11.7,"18.0":11.8,18.1:11.9,18.2:12,18.3:12.2,18.4:12.3,18.5:12.4,18.6:12.5,18.7:12.7,18.8:12.8,18.9:12.9,"19.0":13,19.1:13.1,19.2:13.2,19.3:13.4,19.4:13.5,19.5:13.6,19.6:13.7,19.7:13.9,19.8:14,19.9:14.1,"20.0":14.2,20.1:14.4,20.2:14.5,20.3:14.6,20.4:14.7,20.5:14.9,20.6:15,20.7:15.2,20.8:15.3,20.9:15.4,"21.0":15.5,21.1:15.7,21.2:15.8,21.3:16,21.4:16.1,21.5:16.2,21.6:16.3,21.7:16.5,21.8:16.6,21.9:16.8,"22.0":16.9,22.1:17,22.2:17.1,22.3:17.3,22.4:17.4,22.5:17.6,22.6:17.7,22.7:17.9,22.8:18,22.9:18.2,"23.0":18.3,23.1:18.4,23.2:18.5,23.3:18.7,23.4:18.8,23.5:19,23.6:19.1,23.7:19.3,23.8:19.4,23.9:19.6,"24.0":19.7,24.1:19.9,24.2:20,24.3:20.2,24.4:20.3,24.5:20.5,24.6:20.6,24.7:20.8,24.8:20.9,24.9:21.1,"25.0":21.2,25.1:21.4,25.2:21.5,25.3:21.7,25.4:21.8,25.5:22,25.6:22.1,25.7:22.3,25.8:22.4,25.9:22.6,"26.0":22.7,26.1:22.9,26.2:23,26.3:23.2,26.4:23.3,26.5:23.5,26.6:23.6,26.7:23.8,26.8:23.9,26.9:24.1,"27.0":24.3,27.1:24.5,27.2:24.6,27.3:24.8,27.4:24.9,27.5:25.1,27.6:25.2,27.7:25.4,27.8:25.6,27.9:25.8,"28.0":25.9,28.1:26.1,28.2:26.2,28.3:26.4,28.4:26.5,28.5:26.7,28.6:26.9,28.7:27.1,28.8:27.2,28.9:27.4,"29.0":27.6,29.1:27.8,29.2:27.9,29.3:28.1,29.4:28.2,29.5:28.4,29.6:28.6,29.7:28.8,29.8:28.9,29.9:29.1,"30.0":29.3,30.1:29.5,30.2:29.6,30.3:29.8,30.4:30,30.5:30.2,30.6:30.3,30.7:30.5,30.8:30.7,30.9:30.9,"31.0":31,31.1:31.2,31.2:31.4,31.3:31.6,31.4:31.7,31.5:31.9,31.6:32.1,31.7:32.3,31.8:32.5,31.9:32.7,"32.0":32.8,32.1:33,32.2:33.2,32.3:33.4,32.4:33.6,32.5:33.8,32.6:33.9,32.7:34.1,32.8:34.3,32.9:34.5,"33.0":34.7,33.1:34.9,33.2:35,33.3:35.2,33.4:35.4,33.5:35.6,33.6:35.8,33.7:36,33.8:36.2,33.9:36.4,"34.0":36.6,34.1:36.8,34.2:36.9,34.3:37.1,34.4:37.3,34.5:37.5,34.6:37.7,34.7:37.9,34.8:38.1,34.9:38.3,"35.0":38.5,35.1:38.7,35.2:38.9,35.3:39.1,35.4:39.3,35.5:39.5,35.6:39.7,35.7:39.9,35.8:40.1,35.9:40.3,"36.0":40.5,36.1:40.7,36.2:40.9,36.3:41.1,36.4:41.3,36.5:41.5,36.6:41.7,36.7:41.9,36.8:42.1,36.9:42.3,"37.0":42.5,37.1:42.7,37.2:42.9,37.3:43.1,37.4:43.3,37.5:43.5,37.6:43.7,37.7:43.9,37.8:44.1,37.9:44.3,"38.0":44.5,38.1:44.8,38.2:45,38.3:45.2,38.4:45.4,38.5:45.6,38.6:45.8,38.7:46,38.8:46.2,38.9:46.4,"39.0":46.6,39.1:46.9,39.2:47.1,39.3:47.3,39.4:47.5,39.5:47.7,39.6:47.9,39.7:48.2,39.8:48.4,39.9:48.6,"40.0":48.8,40.1:49,40.2:49.2,40.3:49.5,40.4:49.7,40.5:49.9,40.6:50.1,40.7:50.3,40.8:50.5,40.9:50.8,"41.0":51,41.1:51.2,41.2:51.4,41.3:51.7,41.4:51.9,41.5:52.1,41.6:52.3,41.7:52.6,41.8:52.8,41.9:53,"42.0":53.2,42.1:53.5,42.2:53.7,42.3:53.9,42.4:54.1,42.5:54.4,42.6:54.6,42.7:54.8,42.8:55,42.9:55.3,"43.0":55.5,43.1:55.7,43.2:55.9,43.3:56.2,43.4:56.4,43.5:56.7,43.6:56.9,43.7:57.1,43.8:57.3,43.9:57.6,"44.0":57.8,44.1:58.1,44.2:58.3,44.3:58.5,44.4:58.7,44.5:59,44.6:59.2,44.7:59.5,44.8:59.7,44.9:60,"45.0":60.2,45.1:60.4,45.2:60.6},h=function(t){Object(r.a)(c,t);var a=u(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=[];return e.each(a,(function(a){var i=e.filter(t,{area:a.name})||[],r=a.pointNum-i.length;if(r>0)for(var c=0;c<r;c++)i.push({val:"",area:a.name,setVal:""});else r<0&&i.splice(i.length+r,-r);n=n.concat(i)})),n}},{key:"setPointState",value:function(t){return e.each(t,(function(e){e.isExceed=!1,e.isQualified=!1})),t}},{key:"getIntensityOutcome",value:function(t){var a=this,n=[],i="chongqing"===this.intensityConversionStandard?f:l,r="chongqing"===this.intensityConversionStandard?16.4:18.6,c="chongqing"===this.intensityConversionStandard?45.2:46.8,s=e.groupBy(t||[],"area");return e.each(s,(function(t,s){var o,u,l={area:s,referenceMin:r,referenceMax:c},f=[];if(!e.some(t,(function(e){return!a.hasVal(e.val)}))){f=e.map(t,"val");for(var h=0;h<3;h++)f.splice(e.indexOf(f,e.maxBy(f)),1),f.splice(e.indexOf(f,e.minBy(f)),1);o=(o=e.reduce(f,(function(e,t){return e+t}),0)/10).toFixed(1),u=i[o],parseFloat(o)<r?l.intensity="low":parseFloat(o)>c?l.intensity="high":l.intensity=u}else l.intensity="defect";n.push(l)})),n}},{key:"getIntensityVal",value:function(t){var a=this,n=this.getIntensityOutcome(t);if(!e.some(n,(function(e){return isNaN(e.intensity)}))){var i=e.map(n,"intensity");if(n.length<10)intensityVal=e.minBy(i);else{var r=e.reduce(i,(function(e,t){return e+t}),0)/n.length,c=Math.sqrt(e.reduce(i,(function(e,t){return e+Math.pow(a.formatFloat(t-r),2)}),0)/(n.length-1)),s=this.formatFloat(r-1.645*c);intensityVal=parseFloat(s.toFixed(2))}return intensityVal}return""}},{key:"getPointsTotal",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=e.length,a=e.length,n=t-a;return{all:t,qualified:a,exceed:n}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(o.a)}).call(this,a("391c"))},ba71:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(t){var a=this.min;return(a<1||a>99)&&(a=90),e.each(t,(function(e){var t=this.formatFloat(e.val-(e.setVal||0)*a*.01);e.isQualified=this.hasVal(e.val)&&t>0,e.isExceed=this.hasVal(e.val)&&t<=0})),t}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},bcf1:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){e.each(n.measureItem,(function(r){var c=e.filter(t,{area:a.name,label:r})||[],s=2-c.length;if(s>0)for(var o=0;o<s;o++)c.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:"",label:r});else s<0&&c.splice(c.length+s,-s);i=i.concat(c)}))})),i}},{key:"setPointState",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=e.groupBy(a,(function(e){return e.area+"-"+e.label}));return e.each(n,(function(a){if(e.each(a,(function(e,t){t&&(e.setVal=a[0].setVal)})),e.some(a,(function(e){return!t.hasVal(e.val)||!t.hasVal(e.setVal)})))e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1}));else{var n=e.maxBy(a,(function(e){return Math.abs(t.formatFloat(e.val-(e.setVal||0)))})),i=t.formatFloat(n.val-(n.setVal||0));t.hasVal(n.val)&&(i<t.min||i>t.max)?(e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1})),n.isExceed=!0):e.each(a,(function(e){e.isExceed=!1,e.isQualified=!0}))}})),a}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length/2,r=n.length/2,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},cc23:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=e.groupBy(a||[],"area");return e.each(n,(function(a){e.some(a,(function(e){return!t.hasVal(e.val)||!t.hasVal(e.setVal)}))?e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1})):e.some(a,(function(e){return Math.abs(t.formatFloat(e.val-e.setVal))>t.max}))?e.each(a,(function(e){e.isExceed=!0,e.isQualified=!1})):e.each(a,(function(e){var a=Math.abs(t.formatFloat(e.val-e.setVal));Math.abs(t.min)<a&&a<=t.max?(e.isExceed=!0,e.isQualified=!1):(e.isExceed=!1,e.isQualified=!0)}))})),a}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=e.filter(a,{isQualified:!0}),i=t.length,r=n.length,c=i-r;return{all:i,qualified:r,exceed:c}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},d5e7:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("e697"),a("6d57"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(t){var a=this,n=e.groupBy(t||[],"area");return e.each(n,(function(t){var n=null,i=null,r=0,c=!0,s=0;e.each(t,(function(e){a.hasVal(e.val)&&(null===i&&(i=e.val,n=e.val),r++,n=Math.max(n,e.val),i=Math.min(i,e.val)),e.isExceed=!1,e.isQualified=!1})),r>=2&&((s=a.formatFloat(n-i))<a.min||s>a.max)&&(c=!1),e.each(t,(function(e){e.isExceed=!c,e.isQualified=c}))})),t}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=0,i=e.groupBy(a,"area"),r=e.keys(i).length;e.each(i,(function(t){e.find(t,(function(e){return!0!==e.isQualified}))&&n++}));var c=r-n;return{all:r,qualified:c,exceed:n}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))},eb45:function(e,t,a){"use strict";var n=a("fc9f"),i=(a("ed08"),{getAllCheckItems:function(){return n.a.query("select * from problem_class\n      where id in\n      (select parent_checkitem_id from ls_measure_relation_checkitem)\n      order by code",[])},getCheckItemProblems:function(e,t,a){var i=t?"and unit = '".concat(t,"'"):"",r="select * from ls_measure_result\n      where building_id = ? and parent_checkitem_id = ? ".concat(i);return n.a.query(r,[e,a])},getCheckItemBatch:function(e,t,a){var i=t?"and unit = '".concat(t,"'"):"",r="select * from ls_measure_batch\n      where building_id = ? and parent_checkitem_id = ? ".concat(i,"\n      group by room_id\n      order by regist_date desc");return n.a.query(r,[e,a])},insertRelationCheckitem:function(e){return n.a.insertObject("ls_measure_station",e)},updateRelationCheckitem:function(e){return n.a.update("ls_measure_station",e,{id:e.id})},deleteStation:function(e){return n.a.delete("ls_measure_station",{id:e})},getAllRelatedCheckItems:function(e){return n.a.query("SELECT\n      b.name,\n      b.full_name,\n      b.standard_min,\n      b.standard_max,\n      b.extension,\n      b.passrate_mode,\n      a.parent_checkitem_id,\n      a.checkitem_id,\n      a.third_checkitem_id\n    FROM\n      ls_measure_relation_checkitem AS a,\n      problem_class AS b\n    WHERE\n      a.parent_checkitem_id = ?\n      AND b.type = 41\n      AND a.checkitem_id = b.id\n      order by b.code",[e])},getAllStationCheckItems:function(e){return n.a.query("SELECT\n      b.name,\n      a.*\n    FROM\n      ls_measure_checkitem AS a,\n      problem_class AS b\n    WHERE\n      a.station_id = ?\n      AND b.type = 41\n      AND a.checkitem_id = b.id\n      order by b.code",[e])},getAllStationCheckItemsRelation:function(e){return n.a.query("SELECT\n      b.name,\n      a.*\n    FROM\n      ls_measure_checkitem AS a,\n      problem_class AS b\n      join ls_measure_relation_checkitem as c on a.checkitem_id = c.checkitem_id\n    WHERE\n      a.station_id = ?\n      AND b.type = 41\n      AND a.checkitem_id = b.id\n      order by b.code",[e])},getRoomRelatedList:function(e,t){return n.a.query("select * from ls_measure_station where room_id = ? and parent_checkitem_id = ? ORDER BY regist_date",[e,t])},insertMeasureResult:function(e){return n.a.insertObject("ls_measure_result",e)},updateMeasureResult:function(e){return n.a.update("ls_measure_result",e,{id:e.id})},deleteMeasureResult:function(e){return n.a.delete("ls_measure_result",{id:e})},insertMeasureBatch:function(e){return n.a.insertObject("ls_measure_batch",e)},updateMeasureBatch:function(e){return n.a.update("ls_measure_batch",e,{id:e.id})},deleteMeasureBatch:function(e){return n.a.delete("ls_measure_batch",{id:e})},getBatchNewsList:function(e,t){return n.a.query("SELECT\n                a.*, c.name, a.third_checkitem_id as thirdCheckitemId, d.checkitem_id as third_checkitem_id\n              FROM\n                ls_measure_result AS a,\n                ( SELECT id FROM ls_measure_batch WHERE room_id = ? ORDER BY regist_date DESC LIMIT 1 ) AS b\n                join problem_class c on c.id = a.checkitem_id\n                join ls_measure_third_part_checkitem d on d.id = a.third_checkitem_id\n              WHERE\n                a.batch_id = b.id and a.parent_checkitem_id = ?\n                order by c.code",[e,t])},insertCheckItem:function(e){return n.a.insertObject("ls_measure_checkitem",e)},updateCheckItem:function(e){return n.a.update("ls_measure_checkitem",e,{id:e.id})},deleteCheckItem:function(e){return n.a.delete("ls_measure_checkitem",{id:e})},getCheckItemList:function(e){return n.a.query("SELECT\n                a.*,\n                b.name,\n                d.checkitem_id as third_checkitem_id,\n                d.id as thirdCheckitemId\n              FROM\n                ls_measure_checkitem AS a,\n                ( SELECT * FROM problem_class WHERE type = 41 ) AS b\n                join ls_measure_relation_checkitem c on c.checkitem_id = a.checkitem_id\n                join ls_measure_third_part_checkitem d on d.id = c.third_checkitem_id\n              WHERE\n                a.station_id = ?\n                AND a.checkitem_id = b.id\n                order by b.code",[e])},getBatchsByRoomAndCheckitem:function(e,t){return n.a.query("select * from ls_measure_batch\n      where room_id = ? and parent_checkitem_id = ?\n      order by regist_date",[e,t])},getStationsByBatch:function(e){return n.a.query("select ms.* from ls_measure_station ms\n      join ls_measure_result mr on mr.station_id = ms.id\n      where mr.batch_id = ?\n      group by ms.id",[e])},getResultsByBatch:function(e){return n.a.query("select mr.*,\n      ms.name as station_name, ms.regist_date as station_regist_date,\n      pc.name as checkitem_name, pc.code as checkitem_code\n      from ls_measure_result mr\n      join ls_measure_station ms on ms.id = mr.station_id\n      join problem_class pc on pc.id = mr.checkitem_id\n      where mr.batch_id = ?\n      order by pc.code, ms.regist_date",[e])},getMeasurelResultData:function(e){return n.a.queryOne("select mr.* ,\n      b.name as building_name,\n      r.room_no as room_name,\n      ppc.name as parent_checkitem_name,\n      pc.name as checkitem_name,\n      ms.name as station_name\n      from ls_measure_result mr\n      join building b on b.id = mr.building_id\n      join room r on r.id = mr.room_id\n      join problem_class ppc on ppc.id = mr.parent_checkitem_id\n      join problem_class pc on pc.id = mr.checkitem_id\n      join ls_measure_station ms on ms.id = mr.station_id\n      where mr.id = ?",[e])},getIsDeleteStation:function(e){return n.a.query("SELECT b.status, b.regist_date, a.batch_id, a.station_id\n    FROM ls_measure_result a\n      JOIN ls_measure_batch b ON a.batch_id = b.id\n    WHERE a.station_id = ?\n    GROUP BY batch_id\n    ORDER BY b.regist_date DESC",[e])},getResultBatchId:function(e){return n.a.query("select id, station_id from ls_measure_result where batch_id = ?",[e])}});window.saveImitateData=i.saveImitateData,t.a=i},fc56:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));a("2b45"),a("fc58"),a("e697"),a("6d57"),a("cc57");var n=a("0e4d"),i=a("94ef"),r=a("76ff"),c=a("4b67"),s=a("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(s.a)(e);if(t){var i=Object(s.a)(this).constructor;a=Reflect.construct(n,arguments,i)}else a=n.apply(this,arguments);return Object(c.a)(this,a)}}var u=function(t){Object(r.a)(c,t);var a=o(c);function c(){return Object(n.a)(this,c),a.apply(this,arguments)}return Object(i.a)(c,[{key:"getPointsByAreaCustom",value:function(t,a){var n=this,i=[];return e.each(a,(function(a){var r=e.filter(t,{area:a.name})||[],c=a.pointNum-r.length;if(c>0)for(var s=0;s<c;s++)r.push({val:"",area:a.name,setVal:n.hasVal(a.setVal)?a.setVal:""});else c<0&&r.splice(r.length+c,-c);i=i.concat(r)})),i}},{key:"setPointState",value:function(){var t=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=this.min,i=this.max,r=e.groupBy(a,"area");return e.each(r,(function(a){var r=!0,c=null,s=!1;e.each(a,(function(e){e.isExceed=!1,e.isQualified=!1,t.hasVal(e.val)&&(null===c&&(c=e.val),s=!0,c=Math.max(e.val,c))})),s&&(c<n||c>i)&&(r=!1),e.each(a,(function(e){e.isExceed=!r,e.isQualified=r}))})),a}},{key:"getPointsTotal",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this.setPointState(t),n=0,i=e.groupBy(a,"area"),r=e.keys(i).length;e.each(i,(function(t){e.find(t,(function(e){return!0!==e.isQualified}))&&n++}));var c=r-n;return{all:r,qualified:c,exceed:n}}},{key:"getPassrate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this.getPointsTotal(e),a=t.all,n=t.qualified;return a?Math.round(n/a*1e4)/1e4:""}}]),c}(a("3e831").a)}).call(this,a("391c"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,