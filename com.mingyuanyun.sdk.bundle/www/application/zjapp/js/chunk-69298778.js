(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-69298778"],{"79a7":function(t,e,a){"use strict";a.r(e);var n=a("07d2"),c=a("fc33"),o=a("e2a7"),i=(a("7cb8"),{name:"IndexFooter",components:{Item:n.a},props:{batchId:{type:String}},data:function(){return{isLoading:!1,scoreRate:"",totalData:[]}},watch:{batchId:{handler:function(t){t?this.getTotalData():(this.scoreRate="",this.totalData=[])},immediate:!0}},created:function(){this.$on("reload",this.getTotalData)},activated:function(){this.getTotalData()},methods:{getTotalData:function(){var t=this,e=this.batchId;return c.a.getBatchTotalData(e).then((function(a){e===t.batchId&&(t.totalData=a,t.scoreRate=a&&a[0]&&a[0].score)}))},formulaTips:function(){var t=this.totalData&&this.totalData[0];if(t){var e=c.a.getScoreFormula(t.children,t.algorithm);o.a.notify("总".concat(e),{buttonName:"知道了",className:"broad-dialog"})}}}}),r=(a("ca28"),a("17cc")),s=Object(r.a)(i,(function(){var t=this.$createElement,e=this._self._c||t;return e("item",{attrs:{border:"top"}},[e("div",{staticClass:"item-text"},[this._v("总得分")]),e("div",{staticClass:"item-font color-theme f18 fw-b"},[this._v(this._s(this.scoreRate))]),e("icon",{attrs:{name:"yiwen"},on:{click:this.formulaTips}})],1)}),[],!1,null,"7ce676ad",null);e.default=s.exports},b0933:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .icon-yiwen[data-v-7ce676ad]{font-size:18px;color:#b4b4b4;line-height:30px;padding-left:10px}.zjapp .ios-bezel-less .item[data-v-7ce676ad]{padding-bottom:42px}",""])},b0e9:function(t,e,a){var n=a("b0933");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,a("85cb").default)("133e89e7",n,!0,{sourceMap:!1,shadowMode:!1})},ca28:function(t,e,a){"use strict";a("b0e9")},fc33:function(t,e,a){"use strict";a("2b45"),a("6d57");var n=a("fc9f"),c=function(t){return n.a.query("select b.*, t.name as template_name, t.mode as template_mode, bc.weight\n      from batch b\n      left join special_inspect_template t on t.id = b.template_id\n      left join special_inspect_template_batch_combo bc on bc.batch_id = b.id and bc.template_id = t.id\n      where b.root_id = ? and ifnull(b.parent_id, '') != ''\n      order by bc.sort",[t])},o=function(t){return n.a.query("select b.*, t.name as template_name, t.mode as template_mode, bc.weight\n      from batch b\n      left join special_inspect_template t on t.id = b.template_id\n      left join special_inspect_template_batch_combo bc on bc.batch_id = b.id and bc.template_id = t.id\n      where b.root_id = ?\n      order by bc.sort",[t])},i=a("7cb8");function r(t){if(!t||!t.length)return[];var e=[],a=[];return t.forEach((function(t){e[t.id]=t})),t.forEach((function(t){t.parent_id&&e[t.parent_id]?(e[t.parent_id].children||(e[t.parent_id].children=[]),e[t.parent_id].children.push(t)):a.push(t)})),a}e.a={getBatchTree:function(t){var e=this;return c(t).then((function(t){(t||[]).forEach((function(t){try{var e=JSON.parse(t.template_extension||{});t.algorithm=parseInt(e.total_score_algorithm)||1}catch(e){t.algorithm=1}}));var a=r(t);return e.setBatchTreeScore(a),a}))},setBatchTreeScore:function(t){var e=this;t&&t.length&&t.forEach((function(t){t.children&&t.children.length&&(e.setBatchTreeScore(t.children),t.score=e.getScore(t.children,t.algorithm))}))},getBatchTotalData:function(t){var e=this;return o(t).then((function(t){(t||[]).forEach((function(t){try{var e=JSON.parse(t.template_extension||{});t.algorithm=parseInt(e.total_score_algorithm)}catch(e){t.algorithm=1}}));var a=r(t);return e.setBatchTreeScore(a),a}))},getScoreWeight:function(t,e){return Object(i.i)(t)?Object(i.i)(e)?(t=parseFloat(t))*(e=parseFloat(e)/100):parseFloat(t):0},getScoreWeightText:function(t,e){return Object(i.i)(t)?Object(i.i)(e)?(t="%"===t.toString().substr(-1)?t:"".concat(t,"%"),e="%"===e.toString().substr(-1)?e:"".concat(e,"%"),"".concat(t,"*").concat(e)):t:""},getScore:function(){var t,e,a=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o="";return 1===c?(n.forEach((function(e){if(Object(i.i)(e.score)){var n=e.score,c=e.weight;t=t||0,t+=a.getScoreWeight(n,c)}})),o=t):2===c&&(n.forEach((function(n){if(Object(i.i)(n.score)){var c=n.score,o=n.weight;t=t||0,e=e||0,t+=a.getScoreWeight(c,o),e+=parseFloat(o)/100}})),o=Object(i.i)(t)?e?t/e:0:""),o=Object(i.i)(o)?(Math.round(100*o)/100).toFixed(2)+"%":""},getScoreFormula:function(){var t,e=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,c=[],o=[];return 1===n?(t="得分=组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n",a.forEach((function(t){if(Object(i.i)(t.score)){var a=t.score,n=t.weight;c.push(e.getScoreWeightText(a,n))}})),c&&c.length&&(t+="=".concat(c.join("+"),"=").concat(this.getScore(a,n)))):2===n&&(t="得分=（组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n）/（权重1+权重2+...+权重n）",a.forEach((function(t){if(Object(i.i)(t.score)){var a=t.score,n=t.weight;c.push(e.getScoreWeightText(a,n)),o.push("".concat(n,"%"))}})),c&&c.length&&(t+="=(".concat(c.join("+"),")/(").concat(o.join("+"),")=").concat(this.getScore(a,n)))),t}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,