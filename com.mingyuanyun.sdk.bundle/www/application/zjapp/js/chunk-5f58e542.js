(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-5f58e542"],{1701:function(t,e,n){(t.exports=n("690e")(!1)).push([t.i,'.zjapp .list[data-v-2c24b7f4]{background:#fff;margin-bottom:10px;font-size:14px}.zjapp .list .list-header[data-v-2c24b7f4]{display:flex;align-items:center;justify-content:space-between;padding:10px 15px;position:relative;min-height:46px}.zjapp .list .list-header[data-v-2c24b7f4]:after{content:"";position:absolute;width:4px;height:16px;left:0;top:50%;margin-top:-8px;background:#4275e8}.zjapp .list .item-title[data-v-2c24b7f4]{color:#4275e8}.zjapp .list .color-green[data-v-2c24b7f4]{color:#0bc666}.zjapp .list .item-buttons[data-v-2c24b7f4]{display:flex;align-items:center}.zjapp .list .item-button[data-v-2c24b7f4]{background:linear-gradient(270deg,#55abff,#4c7aff);border-radius:15px;padding:5px 14px;margin-right:10px;color:#fff;max-height:27px;width:-webkit-max-content;width:-moz-max-content;width:max-content}.zjapp .list .item-button[data-v-2c24b7f4]:last-child{margin-right:0}.zjapp .list li[data-v-2c24b7f4]{line-height:20px;padding:10px 15px;min-height:45px;display:flex;align-items:center;justify-content:space-between;border-top:1px solid #ececec}.zjapp .list .child-title[data-v-2c24b7f4]{flex:1;color:#333;padding-right:10px}.zjapp .list .child-title_range[data-v-2c24b7f4]{color:#999;margin-left:3px}.zjapp .list .child-right[data-v-2c24b7f4]{min-width:80px;display:flex;align-items:center;justify-content:flex-end}.zjapp .list .child-per[data-v-2c24b7f4]{color:#666;margin-right:6px}.zjapp .list .child-icon[data-v-2c24b7f4]{color:#999}',""])},"1fb46":function(t,e,n){"use strict";n.d(e,"d",(function(){return g})),n.d(e,"b",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"c",(function(){return v})),n.d(e,"e",(function(){return w}));n("f548"),n("ed63"),n("8cf2");var a=n("162a"),o=n("7f43"),i=n.n(o),l=n("a078"),s=n("a32d"),r=n.n(s),c=n("4ad6"),u=n("3bd5"),p=null,d=l.a.laserScanningRemotely[APP_ENV],h=u.a.getUser().tenant_code,f=u.a.getUser().user_id;function g(t){return a.a.post("/nuc/scan",null,t)}function m(t){return a.a.post("/nuc/queryState",null,{taskId:t.taskId})}function b(){var t="/nuc/queryState";return t=r.a.replaceAll(p,"/nuc","")+t,new Promise((function(e){i()({url:t,data:{taskId:"test"},timeout:3e3}).then((function(t){t&&200===t.status?e(!0):e(!1)})).catch((function(t){$log.error(t),e(!1)}))}))}function v(t){return a.a.post("/nuc/getResult",null,t)}function w(t){return new Promise((function(e,n){try{p=p.replace("/nuc","");var a="".concat(p,"/#/h5/3dviewer?taskId=").concat(t);$log.log("激光扫描实测-三维模型-数据：",t),c.a.openUrl(a,"3D模型").then((function(t){e(t)}))}catch(t){n(t)}}))}p=d&&d.code&&d.code[h]&&d.code[h].includes(f)?d.url:l.a.laserScanningApi[APP_ENV]},"3d1e":function(t,e,n){var a=n("1701");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,n("85cb").default)("a76b2e78",a,!0,{sourceMap:!1,shadowMode:!1})},"774b":function(t,e,n){"use strict";var a=n("d18d").a,o=(n("b225"),n("17cc")),i=Object(o.a)(a,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?n("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[n("div",{staticClass:"pull-refresh"},[n("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?n("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?n("div",{staticClass:"page-loading"},[n("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[n("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?n("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=i.exports},"9d55":function(t,e,n){(t.exports=n("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},acfa:function(t,e,n){"use strict";n("3d1e")},b225:function(t,e,n){"use strict";n("ef48")},ced3:function(t,e,n){"use strict";var a=n("07d2"),o=n("966e"),i={name:"LaserScanningList",components:{Item:a.a},props:{list:{type:Array,default:function(){return[]}},mode:{type:String,default:"default"}},data:function(){return{}},computed:{appDev:function(){return"dev"===APP_ENV}},methods:{percent:o.a,fakeData:function(t){"just-look"!==this.mode&&this.$emit("fakeData",t)},start:function(t){"just-look"!==this.mode&&this.$emit("start",t)},edit:function(t){"just-look"!==this.mode&&this.$emit("edit",t)},detail:function(t){"just-look"!==this.mode&&this.$emit("detail",t)},toModel:function(t){"just-look"!==this.mode&&this.$emit("toModel",t)},designVal:function(t){return 5===t.passrate_mode?"高[".concat(t.standard.min_h,",").concat(t.standard.max_h,"] 宽[").concat(t.standard.min_w,",").concat(t.standard.max_w,"]"):"[".concat(t.standard.min,",").concat(t.standard.max,"]")}}},l=(n("acfa"),n("17cc")),s=Object(l.a)(i,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"laser-scanning-list"},t._l(t.list,(function(e,a){return n("div",{key:a,staticClass:"list"},[n("div",{staticClass:"list-header",on:{click:function(n){n.stopPropagation(),t.edit(e)}}},[n("div",{staticClass:"item-title"},[t._v(t._s(e.name))]),e.children&&e.children.length>0?n("div",{staticClass:"item-buttons"},[!e.status&&"default"===t.mode&&t.appDev?n("div",{staticClass:"item-button",on:{click:function(n){n.stopPropagation(),t.fakeData(e)}}},[t._v("\n          开-假\n        ")]):t._e(),e.status||"default"!==t.mode?t._e():n("div",{staticClass:"item-button",on:{click:function(n){n.stopPropagation(),t.start(e)}}},[t._v("\n          开始扫描\n        ")]),e.status&&"default"===t.mode?n("div",{staticClass:"item-button",on:{click:function(n){n.stopPropagation(),t.toModel(e)}}},[t._v("\n          三维模型\n        ")]):t._e(),e.status&&"default"===t.mode&&t.appDev?n("div",{staticClass:"item-button",on:{click:function(n){n.stopPropagation(),t.fakeData(e)}}},[t._v("\n          重-假\n        ")]):t._e(),e.status&&"default"===t.mode?n("div",{staticClass:"item-button",on:{click:function(n){n.stopPropagation(),t.start(e)}}},[t._v("\n          重新扫描\n        ")]):t._e()]):t._e()]),e.children?n("ul",t._l(e.children,(function(a,o){return n("li",{key:o,on:{click:function(e){e.stopPropagation(),t.detail(a)}}},[n("div",{staticClass:"child-title"},[t._v("\n          "+t._s(a.name)+"\n          "),n("span",{staticClass:"child-title_range"},[t._v("\n            "+t._s(t.designVal(a))+"\n          ")])]),e.status?n("div",{staticClass:"child-right"},[n("span",{staticClass:"child-per",class:{"color-green":a.pass_rate>=.8,"color-red":a.pass_rate<.8}},[t._v(t._s(null!==a.pass_rate&&""!==a.pass_rate?t.percent(a.pass_rate,2):""))]),n("icon",{staticClass:"child-icon",attrs:{name:"arrow-right"}})],1):t._e()])}))):t._e()])})))}),[],!1,null,"2c24b7f4",null);e.a=s.exports},d18d:function(t,e,n){"use strict";(function(t){n("2b45");var a,o=n("4360"),i=n("48f4"),l=n("162a"),s=n("e2a7"),r=n("a500"),c=n("6f9e"),u={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return o.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return o.a.state.global.isNumberInputOpen?o.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;c.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var n=e&&e.target,a=n&&n.tagName&&n.tagName.toLowerCase();if("input"===a||"textarea"===a){window.addEventListener("resize",(function e(){var a=n.getBoundingClientRect(),o=t.$el.getBoundingClientRect(),i=a.bottom-o.bottom;i>0&&t.scrollBy(i),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){c.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,n=this.$refs["scroll-warp"].scrollTop,a=this.$refs["scroll-warp"].scrollHeight;if(n+this.$refs["scroll-warp"].clientHeight>=a-5&&!this.loading&&this.hasNext){this.loading=!0;var o=this.$listeners.loadNext();o&&o.then&&"function"==typeof o.then?o.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(u&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,n=t.touches[0].clientY;return Math.abs(n-u.y)>Math.abs(e-u.x)&&Math.abs(n-u.y)>=3?n>u.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(u={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,n=t.touches[0].clientY,a=n-u.y,o=this.getTouchDiretion(t);"down"===o?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(a-u.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===o?this.pullDist>0&&(this.pullDist=u.pullDist-(u.y-n),t.preventDefault()):this.pullDist=u.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(u={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,n=this.pullDist,a=t,o=a-n,i=n;return n===a?Promise.resolve():new Promise((function(t){!function l(){window.requestAnimationFrame((function(){i+=o/6,e.pullDist=i,n<a&&i<a||n>a&&i>a?l():(e.pullDist=a,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=i.default.getCurrentModuleCode(),n=i.default.getCurrentRoute(),a=n.meta&&n.meta.isTodo;if(i.default.isModuleNeedBuilding(e)&&!a){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return r.a.addTrack("公共-手动下拉刷新","",""),l.a.beginManualUpdate(),i.default.checkSync(t).then((function(t){return l.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?s.a.alert("当前网络无法同步数据"):s.a.alert(t),l.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,o=this.getScrollTop(),i=o+t,l=Math.round(n/16.7),s=t/l,r=o,c=a=+new Date;return o===i?Promise.resolve():new Promise((function(t){!function n(){window.requestAnimationFrame((function(){c===a&&(r+=s,e.$refs["scroll-warp"].scrollTop=r,o<i&&r<i||o>i&&r>i?n():(e.$refs["scroll-warp"].scrollTop=i,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,n=this.getScrollTop(),a=t-n;return this.scrollBy(a,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,n=(t=t.$el?t.$el:t).getBoundingClientRect(),a=this.$refs["scroll-warp"].getBoundingClientRect();if(n&&a){var i=document.documentElement.clientHeight-(o.a.state.global.isNumberInputOpen?e:0),l=a.bottom<i?a.bottom:i,s=a.top-n.top,r=n.bottom-l;s>0?this.scrollBy(-s-10):r>0&&this.scrollBy(r+10)}},isCurrent:function(e,n){var a=this;e.length&&t.each(e,(function(t){t._uid===n?a.isCurrKeyboard=!0:a.isCurrent(t.$children,n)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,n("391c"))},ef48:function(t,e,n){var a=n("9d55");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,n("85cb").default)("a1a65c0c",a,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,