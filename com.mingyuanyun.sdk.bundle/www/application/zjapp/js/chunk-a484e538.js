(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-a484e538","chunk-b1eec014","chunk-2d0d2f53"],{"0732":function(e,t,i){var r=i("81f2");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("1b5b07de",r,!0,{sourceMap:!1,shadowMode:!1})},"0dc2":function(e,t,i){var r=i("8fdd");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("1dfae8a1",r,!0,{sourceMap:!1,shadowMode:!1})},1059:function(e,t,i){"use strict";var r=i("ebf1").a,a=(i("9dea"),i("17cc")),n=Object(a.a)(r,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"redio-box-group",class:"align-"+e.align+" "+e.customClass},e._l(e.options,(function(t,r){return i("span",{key:r,staticClass:"radio-box",class:{selected:"array"===e.optionsType?e.value===t:"object"===e.optionsType&&e.value===r},on:{click:function(t){e.onSelect(r)}}},[e._v("\n    "+e._s(t)+"\n  ")])})))}),[],!1,null,"b0a30924",null);t.a=n.exports},"114f":function(e,t,i){"use strict";(function(e){i("5ab2"),i("e10e"),i("6d57"),i("e697"),i("cc57"),i("163d");var r=i("28f8"),a=i("8693"),n=i("5b5e"),o=i("06f6"),c=i("242b"),s=i("6144"),l=i("3bd5"),u=i("3122"),d=i("2a15"),p=(i("3516"),i("6e1b"));function m(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function f(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?m(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):m(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var h=l.a.getUser();t.a={defaultPlaceKey:"special-inspect-prolbem-pure-default-place",getProblemData:function(t){return n.a.getCheckProblemInfo(t).then((function(t){return f(f({},t),{},{id:t.id,status:t.status,proj_id:t.proj_id,place:{building_id:t.building_id,unit_id:t.unit,floor:t.floor,room_id:t.room_id,full_name:t.place},bidsection_id:t.bidsection_id,batch_id:t.batch_id,batch_type:t.batch_type,created_by:t.created_by,checkItem:{id:t.item_id,name:t.item_name,full_name:t.item_full_name,parentId:t.item_parent_id},description:{id:t.desc_id,name:t.desc},image_file:JSON.parse(t.image_file||"[]"),remark:t.remark,repair_requirements:t.repair_requirements,level:t.emergency_degree||"一般",deadline:void 0===t.deadline||null===t.deadline?7:Number(t.deadline),building_id:t.building_id,unit:t.unit,floor:t.floor,room_id:t.room_id,place_point:JSON.parse(t.problem_values||"[]"),drawing_file:JSON.parse(t.drawing_file||"[]"),repair_set:t.repair_set,process_mode:t.process_mode,repair:t.repair&&t.repair.id?f({},t.repair):t.repair_set&&t.repair_set.id?f({},t.repair_set):{},repair_image_file:JSON.parse(t.repair_image_file||"[]"),contractor:{id:t.contractor_id,name:t.contractor_name},reinspect_set:t.reinspect_set,cc_set:t.cc_set_array||[],sent_back:t.sent_back&&t.sent_back.id?f({},t.sent_back):{},sent_back_image_file:JSON.parse(t.sent_back_image_file||"[]"),regist:{id:t.regist.id,name:t.regist.name,mobile:t.regist.mobile,is_im_user:t.regist.is_im_user},currentReinspectBy:e.find(e.clone(t.reinspectBy),(function(e){return e.id===l.a.getUser().user_id}))||{reinspect_image_file:[],reinspect_remark:""}})})).then((function(e){var t=e&&e.biz_id||"";return t?a.a.getSpecialInspectData(t).then((function(t){return e.checkItem={id:t.checkitem_id,name:t.checkitem_name,full_name:t.checkitem_full_name,parentId:t.checkitem_parent_id},e.specialInspectId=t.id,e})):e})).then((function(e){return p.a.getBatchDetailAndCheckers(e.batch_id).then((function(t){return e.batchDetail=t,e}))})).catch((function(e){console.error(e)}))},createNewData:function(e,t){var i=this;return Promise.resolve().then((function(){return e?t?a.a.getPlaceSpecialInspectData(e,t):a.a.getSpecialInspectCheckItemDetail(e):Promise.reject(new Error("专项巡检，创建问题，缺少 specialInspectId"))})).then((function(e){return Promise.resolve().then((function(){if(t)return a.a.getBatchPlace(t).then((function(e){if(e.building_id)return{building_id:e.building_id,unit_id:e.unit,floor:e.floor,room_id:e.room_id,full_name:e.name}}))})).then((function(t){return e.defaultPlace=t||s.a.getObject(i.defaultPlaceKey,s.a.level.user)||{},e}))})).then((function(t){return{status:"",proj_id:t.proj_id,place:t.defaultPlace||{},batch_id:t.batch_id,batch_type:"专项巡检",checkItem:{id:t.item_id||t.checkitem_id,name:t.item_name||t.checkitem_name,full_name:t.full_name||t.checkitem_full_name},description:{},image_file:[],remark:"",level:"一般",deadline:7,repair_set:{},contractor:{},cc_set:[],reinspect_set:[],bidsection_id:"",building_id:t.defaultPlace&&t.defaultPlace.building_id||"",unit:t.defaultPlace&&t.defaultPlace.unit_id||"",floor:t.defaultPlace&&t.defaultPlace.floor||"",room_id:t.defaultPlace&&t.defaultPlace.room_id||"",place_point:[],deduction:1,redline_deduction:0,biz_id:e,biz_children_id:t.id,created_by:h.user_id,checkitem_extension:JSON.parse(t.checkitem_extension||"{}")}}))},getDiagram:function(e){return Promise.resolve().then((function(){if(e){var t=e.building_id,i=e.unit_id,r=e.floor,a=e.room_id;return a?o.default.getRoomTypeDiagram(a):i&&r?c.a.getDiagram(t,i,r,1):r?c.a.getDiagram(t,"",r,2):void 0}}))},getProblemList:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0;return e=Array.isArray(e)?e:[e],Promise.resolve().then((function(){return a.a.getProblemList(e,t)})).then((function(e){return(e||[]).forEach((function(e){e.thumbnail=u.a.getDefaultThumbnailFromList(e.image_file,"专项巡检"),"检查完毕"===e.status&&(e.status="已提交")})),e}))},getBatchProblemList:function(e){var t=this;return Promise.resolve().then((function(){return a.a.getAllProblemIncloudRootSpecialInspectIds(e)})).then((function(e){var i=(e||[]).map((function(e){return e.id}));return t.getProblemList(i)}))},getPlaceProblemList:function(e){var t=this;return a.a.getMode11SpecilInspectByPlaceId(e).then((function(i){var r=(i||[]).map((function(e){return e.special_inspect_id}));return t.getProblemList(r,e)}))},deleteBatchDraftProblem:function(e){return d.a.deleteBatchDraftProblem(e)}}}).call(this,i("391c"))},"19a7":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .redio-box-group[data-v-b0a30924]{font-size:0;margin-top:-10px}.zjapp .redio-box-group.align-l[data-v-b0a30924]{text-align:left}.zjapp .redio-box-group.align-r[data-v-b0a30924]{text-align:right}.zjapp .radio-box[data-v-b0a30924]{display:inline-block;height:34px;line-height:32px;min-width:60px;padding:0 5px;margin:10px 0 0 10px;border:1px solid #d9d9d9;background:#fff;color:#666;vertical-align:top;font-size:14px;text-align:center;border-radius:3px}.zjapp .radio-box[data-v-b0a30924]:first-child{margin-left:0}.zjapp .radio-box.selected[data-v-b0a30924]{border-color:#4275e8;color:#4275e8}",""])},"19a9":function(e,t,i){"use strict";i("7d4e")},2939:function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .page-scroll[data-v-74102c05]{flex:1;overflow:auto;padding-bottom:100px;transform:translateZ(0)}.zjapp .sublist[data-v-74102c05]{padding-left:25px;padding-top:1px;background-color:#fff}.zjapp .sublist>.sublist[data-v-74102c05]{padding-left:10px;padding-top:0}",""])},"2a15":function(e,t,i){"use strict";var r=i("fc9f");t.a={deleteBatchDraftProblem:function(e){return r.a.executeSql("delete from checkquality_problem where batch_id = ? and status = '草稿'",[e])}}},"2c76":function(e,t,i){"use strict";i("c070")},"3c64":function(e,t,i){"use strict";i("163d");var r={name:"ItemTextarea",components:{},props:{value:{type:String,default:""},placeholder:{type:String,default:""},maxlength:{type:Number,default:200},borderBottom:{type:Boolean,default:!0}},data:function(){return{textareaHeight:40,isLock:!1,blurTime:null}},computed:{lastLength:function(){var e=this.value&&this.value.length||0,t=this.maxlength-e;return t>0?t:0}},mounted:function(){var e=this;this.$nextTick((function(){e.textareaHeight=e.$refs.rule&&e.$refs.rule.offsetHeight||40}))},methods:{onfocus:function(){var e=(new Date).getTime();this.blurTime&&e-this.blurTime<300&&window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(this.$refs.input.blur(),window.cordova.plugins.Keyboard.close()),this.blurTime=null,this.$emit("focus")},onblur:function(){this.blurTime=(new Date).getTime(),this.$emit("blur")},setStatus:function(e){console.log(e),this.isLock=e},oninput:function(e){var t=this;setTimeout((function(){if(!t.isLock){var i=e.target.value;i.length>t.maxlength&&(i=i.substring(0,t.maxlength),t.$refs.input.value=i),t.$refs.rule.innerText=i,t.textareaHeight=t.$refs.rule&&t.$refs.rule.offsetHeight+20,t.$emit("input",i),t.$emit("change",i)}}),0)}}},a=(i("2c76"),i("17cc")),n=Object(a.a)(r,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"item-textarea",class:{"border-bottom":e.borderBottom}},[i("div",{staticClass:"item-textarea-content"},[i("textarea",{ref:"input",style:{height:e.textareaHeight+"px"},attrs:{placeholder:e.placeholder},domProps:{value:e.value},on:{focus:e.onfocus,blur:e.onblur,compositionstart:function(t){e.setStatus(!0)},compositionend:function(t){e.setStatus(!1)},input:e.oninput}}),i("div",{ref:"rule",staticClass:"rule"},[e._v("\n      "+e._s(e.value)+"\n    ")]),e.maxlength!==1/0?i("p",{staticClass:"counter"},[e._v("\n      "+e._s(e.lastLength)+"\n    ")]):e._e()])])}),[],!1,null,null,null);t.a=n.exports},"3cd8":function(e,t,i){var r=i("5c19");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("67c16200",r,!0,{sourceMap:!1,shadowMode:!1})},"4aef":function(e,t,i){"use strict";var r=i("dd16").a,a=i("17cc"),n=Object(a.a)(r,(function(){var e=this.$createElement;return(this._self._c||e)("span",{class:this.classSet[this.status]},[this._v(this._s(this.text||this.status))])}),[],!1,null,null,null);t.a=n.exports},"515e":function(e,t,i){"use strict";var r=i("329b"),a=i("f1e4").a,n=(i("fe9e"),i("17cc")),o=Object(n.a)(a,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("transition",{attrs:{name:"slide-right"}},[e.show?i("page-content",{class:{"content-not-empty":e.content.length},attrs:{mode:"dialog",title:"检查指引","on-close":e.closePopup}},[e.isLoading?e._e():i("div",{staticClass:"check-guide-detail-hd border-bottom"},[i("h2",{staticClass:"check-guide-detail-title pb10"},[e._v(e._s(e.title))])]),!e.isLoading&&e.content.length?i("div",{staticClass:"check-guide-detail-content"},e._l(e.content,(function(t,r){return i("p",{key:r},[t.isImg&&t.src?i("img",{class:{"img-not-ready":!t.ready,error:"rejected"===t.status},attrs:{src:e.getThumbnail(t)},on:{error:function(i){e.imgError(t,r)},click:function(i){e.imgClick(t)}}}):e._e(),t.isImg?e._e():i("span",[e._v("\n          "+e._s(t.val)+"\n        ")])])}))):e._e(),i("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.content.length,"empty-text":"PC端未设置检查指引"}})],1):e._e()],1)}),[],!1,null,"43042f0d",null).exports,c=!1;c||(c=new(r.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(c.$el));t.a=c},"574c":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .item-textarea{background-color:#fff;padding:5px 15px}.zjapp .item-textarea-content{position:relative}.zjapp .item-textarea .rule,.zjapp .item-textarea textarea{width:100%;min-height:40px;line-height:20px;font-size:16px;padding:0;border:none}.zjapp .item-textarea .rule{position:absolute;top:0;left:0;visibility:hidden;word-break:break-all}.zjapp .item-textarea .counter{text-align:right;margin:0 0 -5px 0;height:15px;line-height:15px;color:#b2b2b2;font-size:12px}",""])},"5b5e":function(e,t,i){"use strict";(function(e){i("9e76"),i("163d"),i("e697");var r,a=i("fd50"),n=i("3bd5"),o=i("ed08"),c=i("4ad6"),s=i("3122"),l=i("3516"),u=i("37d5"),d=i("f2d3"),m=i("48f4"),f=i("6bf2"),h=i.n(f),g=i("4360"),b=i("4921"),_=i("334f"),v=i("b725"),y=i("6b81"),x=i("2f02"),k=i("7364"),w=i("59f8"),j=i("c745"),P=i("0136"),I=function(t,i){var r=n.a.getUser();return _.a.getProblemCCAllColumn(t).then((function(a){if(e.some(a,(function(e){return e.cc===r.user_id&&e.type===i})))return _.a.updateProblemReadingTime(t);var n={id:r.user_id,name:r.user_name,type:i,reading_time:o.a.getNowDate()};return _.a.appendCC(t,n).then((function(){return _.a.updateProblemReadingTime(t)}))}))},D=function(e){var t=e.status;return"已关闭"===e.status&&(t="非正常关闭"),a.a.resolve({status_text:t})};r={getCheckProblemDraftList:function(e){return b.a.getCheckProblemDraftList(e).catch((function(e){return $log.error(e),a.a.reject(e)}))},getCheckProblemList:function(t){var i=n.a.getUser().user_id;return b.a.getCheckProblemList(t,i).then((function(n){return e.map(n,(function(e){r.getProblemLocalStatus({status:e.status}).then((function(t){e.status_text=t.status_text}))})),b.a.getCheckProblemCount(t,i).then((function(e){return a.a.resolve({data:n,total:e.count})}))})).catch((function(e){return $log.error(e),a.a.reject(e)}))},getCheckProblemInfo:function(t){return t?a.a.all([b.a.getCheckProblem(t),v.a.getRepair(t),y.a.getMutliReinspect(t),_.a.getCC(t),_.a.getProblemCCAllColumn(t),y.a.getReinspectByList(t)]).then((function(t){var i=t[0],r=t[5],n=t[1];n&&(i.repair_set=n,i.has_read=n.has_read);var o=t[2];e.isEmpty(o)?i.reinspect_set=[]:i.reinspect_set=o;var c=t[3];c&&c.length>0&&(i.cc_set_id_array=e.map(c,(function(e){return{id:e.user_id}})),i.cc_set_name_array=e.map(c,(function(e){return{name:e.user_name}})),i.cc_set_array=e.map(c,(function(e){return{id:e.user_id,name:e.user_name,mobile:e.mobile,is_im_user:e.is_im_user}})));var s=t[4];return s&&s.length>0&&(i.cc_set_all_id_array=e.map(s,(function(e){return{id:e.cc}}))),i.regist_by||i.sent_back_by||i.repair_by||i.reinspect_by?u.default.getAllProjectUsers(i.proj_id).then((function(t){if(i.regist_by){var a=e.find(t,(function(e){return e.user_id===i.regist_by}));a&&(i.regist=a)}if(i.sent_back_by){var n=e.find(t,(function(e){return e.user_id===i.sent_back_by}));n&&(i.sent_back={id:n.user_id,name:n.user_name,mobile:n.mobile,is_im_user:n.is_im_user})}if(i.repair_by){var o=e.find(t,(function(e){return e.user_id===i.repair_by}));o&&(i.repair=o)}return e.isEmpty(r)||(i.reinspectBy=e.map(r,(function(i){var r=e.find(t,(function(e){return e.user_id===i.reinspect}));return r?{id:r.user_id,name:r.user_name,mobile:r.mobile,is_im_user:r.is_im_user,reinspect_date:i.reinspect_date,reinspect_remark:i.reinspect_remark,reinspect_image_file:JSON.parse(i.reinspect_image_file||"[]"),reinspectById:i.id}:{id:i.reinspect,name:"该用户已被删除",mobile:"",is_im_user:null,reinspect_date:i.reinspect_date,reinspect_remark:"",reinspect_image_file:[],reinspectById:i.id}})),i.reinspectBy=e.filter(i.reinspectBy,(function(e){return!!e})),i.reinspect=e.filter(i.reinspectBy,(function(e){return!!e.reinspect_date}))),i.regist=i.regist||{},i.sent_back=i.sent_back||{},i.repair=i.repair||{},i.reinspect=i.reinspect||[],i})):(i.regist={},i.sent_back={},i.repair={},i.reinspect=[],a.a.resolve(i))})).catch((function(e){$log.log(e)})):a.a.resolve({})},submit:function(t,i,r){if(!1===r)return function(e,t){var i=n.a.getUser();return e.repair_deadline="",e.regist_by=i.user_id,e.regist_date=o.a.getNowDate(),e.created_by=i.user_id,e.created_on=o.a.getNowDate(),e.image_file=JSON.stringify(e.image_file),e.drawing_file&&(e.drawing_file=JSON.stringify(e.drawing_file)),$log.log("专项巡检--\x3e不通知整改",e),b.a.submit(e).then((function(){return k.a.saveProblemStatusLog(e.proj_id,"",e.batch_id,e.id,"已提交","","",e.image_file)})).then((function(){return I(e.id,"登记人")})).then((function(t){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).then((function(){if("special-inspect-problem"!==t)return P.a.saveTodo({biz_id:e.id,proj_id:e.proj_id,module_code:t||"",type:2})})).catch((function(e){return $log.error(e),a.a.reject(e)}))}(t,i);if("待提交"!==t.status&&"草稿"!==t.status&&"合格草稿"!==t.status&&"不合格草稿"!==t.status)return a.a.reject("问题单状态异常");if(!t.checkItem.id)return a.a.reject("请先选择检查项");if(!t.repair_set||!t.repair_set.id)return a.a.reject("请选择问题的整改人");if(e.isEmpty(t.reinspect_set))return a.a.reject("请选择问题的复验人");var c=n.a.getUser();t.status="待整改";var s=new Date;return s.setDate(s.getDate()+Number(t.deadline)),t.repair_deadline=h()(s).format("YYYY-MM-DD"),"special-inspect-problem"===i&&t.regist_by&&t.regist_date&&t.created_by&&t.created_on||(t.regist_by=c.user_id,t.regist_date=o.a.getNowDate(),t.created_by=c.user_id,t.created_on=o.a.getNowDate()),t.image_file=JSON.stringify(t.image_file),t.drawing_file&&(t.drawing_file=JSON.stringify(t.drawing_file)),$log.log("现场检查--\x3e提交问题",t),b.a.submit(t).then((function(){return k.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已提交","","",t.image_file)})).then((function(){return I(t.id,"登记人")})).then((function(){if("special-inspect-problem"!==i){var e=t.created_by===t.repair_set.id?1:2;return P.a.insertTodoData(t.created_by,t.id,i,e,0)}})).then((function(){return y.a.getReinspectByList(t.id)})).then((function(i){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_repair",t.id],["checkquality_reinspect",t.id],["checkquality_reinspect_by",e.map(i,"id")],["checkquality_cc",t.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},save:function(e){if("待提交"!==e.status&&"草稿"!==e.status&&"合格草稿"!==e.status&&"不合格草稿"!==e.status)return a.a.reject("问题单状态异常。");if(!/^\+?[0-9]*$/.test(e.deadline))return a.a.reject("整改期限必须是正整数");var t={id:e.id,remark:e.remark,image_file:e.image_file,batch_id:e.batch_id,batch_type:e.batch_type,bidsection_id:e.bidsection_id||"",proj_id:e.proj_id,created_by:e.created_by,created_on:o.a.getNowDate(),status:e.status,room_id:e.room_id||"",building_id:e.building_id||"",unit:e.unit||"",floor:e.floor||"",biz_id:e.biz_id||"",biz_children_id:e.biz_children_id||"",deduction:void 0===e.deduction?"":e.deduction,redline_deduction:4===e.mode||8===e.mode?e.redline_deduction:0,contract_id:e.contract&&e.contract.id?e.contract.id:""};return e.repair_requirements&&(t.repair_requirements=e.repair_requirements||""),e.checkItem&&e.checkItem.id&&(t.item_id=e.checkItem.id),e.place&&e.place.full_name&&(t.place=e.place.full_name),e.contractor&&e.contractor.id&&(t.contractor_id=e.contractor.id),e.description&&e.description.id?t.desc_id=e.description.id:t.desc_id="",t.emergency_degree=e.level,e.deadline&&(t.deadline=e.deadline),e.place_point&&(t.problem_values=JSON.stringify(e.place_point)),t.image_file=JSON.stringify(e.image_file),e.drawing_file&&(t.drawing_file=JSON.stringify(e.drawing_file)),(e.process_mode||null===e.process_mode)&&(t.process_mode=e.process_mode),8===e.mode&&(t.deduction_level=e.deduction_level),e.id?b.a.update(t,e.cc_set,e.repair_set,e.reinspect_set).then((function(){return a.a.resolve(e.id)})).catch((function(e){return $log.error(e),a.a.reject(e)})):(t.id=o.a.uuid(),b.a.insert(t).then((function(){return b.a.update(t,e.cc_set,e.repair_set,e.reinspect_set)})).then((function(){return a.a.resolve(t.id)})).catch((function(e){return $log.error(e),a.a.reject(e)})))},delete:function(e){return b.a.getCheckProblem(e).then((function(t){return"待提交"===t.status||"草稿"===t.status||"合格草稿"===t.status||"不合格草稿"===t.status?b.a.delete(e).catch((function(e){return $log.error(e),a.a.reject(e)})):($log.log("问题单状态异常："+e),a.a.reject("问题单状态异常"))}))},repair:function(t,i){if("待整改"!==t.status)return a.a.reject("问题单状态异常");var r=n.a.getUser();t.status="待复验",t.repair_by=r.user_id,t.repair_date=o.a.getNowDate();var c=JSON.stringify(t.repair_image_file);return b.a.getCheckProblem(t.id).then((function(r){if(!r||"待整改"===r.status)return $log.log("现场检查--\x3e完成整改",t),b.a.repairProblem(t.id,t.status,t.repair_by,t.repair_remark,t.repair_date,c).then((function(){return k.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已整改","",t.repair_remark,c)})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==i){var r=2;e.filter(t.reinspect_set,{user_id:t.repair_by}).length&&(r=1);var a=P.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return P.a.insertTodoData(t.repair_by,t.id,"check",r,a)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]])}));$log.log("提交整改时数据已变为",r)})).catch((function(e){return $log.error(e),a.a.reject(e)}))},reinspectPass:function(t,i){if("待复验"!==t.status)return a.a.reject("问题单状态异常");t.currentReinspectBy=t.currentReinspectBy||{};var r=n.a.getUser(),c="",s=e.isEmpty(t.currentReinspectBy.reinspect_image_file)?"":JSON.stringify(t.currentReinspectBy.reinspect_image_file);return b.a.getCheckProblem(t.id).then((function(n){if(!n||"待复验"===n.status)return y.a.reinspectPass(t.id,r.user_id,o.a.now(),s,t.currentReinspectBy.reinspect_remark||"").then((function(){return y.a.getReinspectByList(t.id).then((function(i){var n=e.every(i,(function(e){return!!e.reinspect_date})),s=e.find(i,{reinspect:r.user_id});return s?(c=s.id,n?(t.status="已通过",t.respect_by=r.user_id,t.reinspect_completed_date=o.a.getNowDate(),b.a.reinspectProblemPass(t.id,t.status,t.reinspect_completed_date,t.respect_by).then((function(){return k.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已复验","","","")}))):void 0):a.a.reject("问题单复验人异常")}))})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==i){var e=P.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return P.a.insertTodoData(r.user_id,t.id,i||"check",2,e)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_reinspect_by",c],["checkquality_cc",t.id]])}))})).catch((function(e){return $log.error(e),a.a.reject(e)}))},reinspectReject:function(t,i){var r=[["checkquality_problem",t.id],["checkquality_cc",t.id]];if("待复验"!==t.status)return a.a.reject("问题单状态异常");if(!t.sent_back_remark)return a.a.reject("请填写退回原因");var c=n.a.getUser();t.sent_back_times?t.sent_back_times++:t.sent_back_times=1,t.status="待整改",t.sent_back_date=o.a.getNowDate(),t.sent_back_by=c.user_id;var s=JSON.stringify(t.sent_back_image_file);return $log.log("现场检查--\x3e复验退回",t),b.a.reinspectProblemReject(t.id,t.status,t.sent_back_date,t.sent_back_remark,s,t.sent_back_by,t.sent_back_times).then((function(){return k.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已退回",t.sent_back_remark,"",s)})).then((function(){return y.a.clearReinspectByData(t.id)})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==i){var e=2;t.repair_set.id&&t.repair_set.id===c.user_id&&(e=1);var r=P.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return P.a.insertTodoData(c.user_id,t.id,"check",e,r)}})).then((function(){return y.a.getReinspectByList(t.id).then((function(t){r.push(["checkquality_reinspect_by",e.map(t,"id")])}))})).then((function(){if(1===t.has_read)return v.a.update({has_read:0},{checkquality_problem_id:t.id}).then((function(){r.push(["checkquality_repair",t.id])}))})).then((function(){return m.default.addSyncGroup(r)})).catch((function(e){return $log.error(e),a.a.reject(e)}))},close:function(e,t){if("待整改"!==e.status)return a.a.reject("问题单状态异常");if(!e.close_reason)return a.a.reject("请填写关闭原因");var i=n.a.getUser();return e.close_date=o.a.getNowDate(),e.status="已关闭",$log.log("现场检查--\x3e非正常关闭",e),b.a.closeProblem(e.id,e.status,e.close_date,e.close_reason).then((function(){return k.a.saveProblemStatusLog(e.proj_id,e.bidsection_id,e.batch_id,e.id,"已关闭",e.close_reason,"","")})).then((function(){return I(e.id,"操作人")})).then((function(){if("special-inspect-problem"!==t){var r=P.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"check");return P.a.insertTodoData(i.user_id,e.id,"check",2,r)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeRepair:function(e,t,i){if(!e.repair_set||!e.repair_set.id)return a.a.reject("请指定一个整改人");var r=n.a.getUser();return $log.log("现场检查--\x3e修改整改人",e),b.a.updateProblemModifiedBy(e.id).then((function(){if(t)return b.a.updateProblemContractor(e.id,e.contractor.id)})).then((function(){if(t){var i=e.contractor&&e.contractor.id||"";return b.a.updateProblemContractor(e.id,i)}})).then((function(){return v.a.changeProblemRepairer(e)})).then((function(){return x.a.saveProblemFpInfo(e.proj_id,e.bidsection_id,e.batch_id,e.id,e.repair_set.id,e.repair_set_old.id,"分配整改人")})).then((function(){return I(e.id,"操作人")})).then((function(){if("special-inspect-problem"!==i){var t=2;e.repair_set.id&&e.repair_set.id===r.user_id&&(t=1);var a=P.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"check");return P.a.insertTodoData(r.user_id,e.id,"check",t,a)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_repair",e.id],["checkquality_cc",e.id],["checkquality_problem_fpinfo",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeReinspect:function(t,i){if(e.isEmpty(t.reinspect_set))return a.a.reject("请指定一个复验人");var r=n.a.getUser();return $log.log("现场检查--\x3e修改复验人",t),b.a.updateProblemModifiedBy(t.id).then((function(){return y.a.changeProblemReinspect(t.id,t.reinspect_set,!0)})).then((function(){var i=e.map(t.reinspect_set,(function(e){return e.id})).join(","),r=e.map(t.reinspect_set_old,(function(e){return e.id})).join(",");return x.a.saveProblemFpInfo(t.proj_id,t.bidsection_id,t.batch_id,t.id,i,r,"分配复验人")})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==i){var a=2;e.filter(t.reinspect_set,{user_id:r.user_id}).length&&"待复验"===t.status&&(a=1);var n=P.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return P.a.insertTodoData(r.user_id,t.id,"check",a,n)}})).then((function(){return y.a.getReinspectByList(t.id)})).then((function(i){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_reinspect",t.id],["checkquality_reinspect_by",e.map(i,"id")],["checkquality_cc",t.id],["checkquality_problem_fpinfo",t.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeCC:function(e){return $log.log("现场检查--\x3e修改抄送人",e),b.a.updateProblemModifiedBy(e.id).then((function(){return _.a.saveProblemCC(e.id,e.cc_set)})).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeContractor:function(e){return e.contractor&&e.contractor.id?($log.log("现场检查--\x3e修改责任单位",e),b.a.updateProblemContractor(e.id,e.contractor.id).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))):a.a.reject("请指定责任单位")},changeRepairDeadline:function(e){if(!/^(\d+)-(\d{1,2})-(\d{1,2})$/.test(e.repair_deadline))return a.a.reject("整改期限需要一个日期格式的值");var t=h()(e.repair_deadline).format("YYYY-MM-DD"),i=h()().format("YYYY-MM-DD");return e.is_timeout=t<i,$log.log("现场检查--\x3e修改整改期限",e),b.a.updateProblemRepairDeadline(e.id,e.repair_deadline).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},getProblemLocalStatusById:function(e){return D({status:p.status})},getProblemLocalStatus:D,saveRepairInfo:function(e,t,i){return i=JSON.stringify(i),b.a.saveRepairInfo(e,t,i).then((function(){return b.a.getCheckProblemDraft(e).then((function(t){return d.a.backUpDraft(e,t.proj_id,"checkquality_problem",t)}))}))},problemRead:function(e){return v.a.update({has_read:1},{checkquality_problem_id:e}).then((function(){return m.default.addSyncGroup([["checkquality_problem",e],["checkquality_repair",e]])}))},takePictureAndSave:function(e){var t={shootVideo:!0};return s.a.takePicture(t).then((function(t){if(t)return l.a.getBatch(e).then((function(e){var i={proj_id:e.proj_id,bidsection_id:e.bidsection_id,batch_id:e.id,deadline:e.repair_deadline,batch_type:e.batch_type,created_by:n.a.getUser().user_id,created_on:o.a.now(),image_file:[t],status:"待提交"};return r.save(i)}))})).catch((function(e){return $log.error(e),a.a.reject(e)}))},saveByPicture:function(e,t){return e?l.a.getBatch(t).then((function(t){var i={proj_id:t.proj_id,bidsection_id:t.bidsection_id,batch_id:t.id,deadline:t.repair_deadline,batch_type:t.batch_type,created_by:n.a.getUser().user_id,created_on:o.a.now(),image_file:[{temp:e}],status:"待提交"};return r.save(i)})).catch((function(e){return $log.error(e),a.a.reject(e)})):a.a.when()},createProblem:function(e,t){return l.a.getBatch(t).then((function(t){var i={proj_id:t.proj_id,bidsection_id:t.bidsection_id,batch_id:t.id,deadline:t.repair_deadline,batch_type:t.batch_type,created_by:n.a.getUser().user_id,created_on:o.a.now(),image_file:[{temp:e}],status:"待提交"};return r.save(i)}))},takePicture:function(){return s.a.takePicture()},allowSelectPicture:function(){return w.a.getValue("upload_from_phone_albums").then((function(e){return"1"===e}))},reinspectByConflict:function(t){return e.isEmpty(t.reinspectBy)?a.a.when():y.a.removeProblemReinspectBy(t.reinspectBy[0].checkquality_problem_id).then((function(){return y.a.insertReinspectByList(t.reinspectBy)})).then((function(){return TodoRepository.removeProblemTodo(t.reinspectBy[0].checkquality_problem_id)})).then((function(){return TodoRepository.insertTodoList(t.todo)}))},copyProblem:function(t){return a.a.all([b.a.getProblemAllColumn(t),v.a.getRepairAllColumn(t),y.a.getReinspectAllColumn(t),y.a.getReinspectByList(t),_.a.getProblemCCAllColumn(t)]).then((function(t){var i=t[0],r=t[1],c=t[2],s=t[3],l=t[4];if(i.id=o.a.uuid(),i.status="待提交",i.regist_by="",i.repair_by="",i.repair_remark="",i.repair_date="",i.repair_image_file="",i.sent_back_by="",i.sent_back_date="",i.sent_back_times=0,i.sent_back_remark="",i.sent_back_image_file="",i.reinspect_by="",i.reinspect_completed_date="",i.close_date="",i.close_reason="",i.created_by=n.a.getUser().user_id,i.created_on=o.a.now(),i.modified_by=n.a.getUser().user_id,i.download_time="",i.update_timestamp="",i.repair_deadline&&!i.deadline&&i.regist_date){for(var u=i.repair_deadline.match(/\d+/g),d=0;d<u.length;d++)u[d]=parseInt(u[d]);for(var p=new Date(u[0],u[1]-1,u[2],u[3]||0,u[4]||0,u[5]||0),m=i.regist_date.match(/\d+/g),f=0;f<m.length;f++)m[f]=parseInt(m[f]);var h=new Date(m[0],m[1]-1,m[2],m[3]||0,m[4]||0,m[5]||0);i.deadline=Math.ceil((p.getTime()-h.getTime())/864e5)}i.regist_date="",i.repair_deadline="",e.each(r,(function(e){e.id=o.a.uuid(),e.checkquality_problem_id=i.id,e.download_time=""})),e.each(c,(function(e){e.id=o.a.uuid(),e.checkquality_problem_id=i.id,e.download_time=""})),e.each(s,(function(e){e.id=o.a.uuid(),e.checkquality_problem_id=i.id,e.reinspect_date="",r.reinspect_remark="",r.reinspect_image_file="",e.download_time=""}));var g=e.filter(l,(function(e){return"默认"===e.type}));return g=e.map(g,(function(e){return{id:e.cc}})),l=e.filter(l,(function(e){return"被抄送"===e.type})),l=e.map(l,(function(e){return{id:e.cc}})),a.a.all([b.a.insert(i),v.a.insert(r),y.a.insertReinspect(c),y.a.insertReinspectByList(s),_.a.saveProblemCC(i.id,l),_.a.saveDefaultCc(i.id,g)])}))},removeLocalInvalidProblem:function(t){var i=a.a.when();return t.problem_repair&&(i=i.then((function(){return v.a.removeInvalidData(t.problem.id,e.map(t.problem_repair,"id"))}))),t.problem_reinspect&&(i=i.then((function(){return y.a.removeInvalidData(t.problem.id,e.map(t.problem_reinspect,"id"))}))),t.problem_cc&&(i=i.then((function(){return _.a.removeInvalidData(t.problem.id,e.map(t.problem_cc,"id"))}))),t.children_Problem&&(i=i.then((function(){return b.a.removeInvalidChildProblem(t.problem.id,t.children_Problem)}))),i},removeLocalInvalidProblem1:function(t,i){var r=i.checkquality_problem;return a.a.when().then((function(){if(i.checkquality_problem)return b.a.deleteProblemById(r.id)})).then((function(){if(i.checkquality_repair)return v.a.removeInvalidData(r.id,e.map(i.checkquality_repair,"id"))})).then((function(){if(i.checkquality_cc)return _.a.removeInvalidData(r.id,e.map(i.checkquality_cc,"id"))}))},removeClosedBatchProblem:function(){return l.a.getClosedBatchIdList().then((function(e){return r.deleteBatchProblems(e)}))},deleteBatchProblems:function(t){return $log.log("删除已关闭批次的问题"),b.a.getProblemsByBatch(t).then((function(t){var i=a.a.when(),r=["image_file","repair_image_file","sent_back_image_file"],n=[];return e.each(t,(function(t){for(var i=0;i<r.length;++i){var a=t[r[i]]=JSON.parse(t[r[i]]||"[]");e.each(a,(function(e){e.local&&n.push(e.local),e.thumbnail&&n.push(e.thumbnail),e.temp&&n.push(e.temp)}))}})),e.each(n,(function(e){i=i.then((function(){return c.a.isFileExists(e)})).then((function(t){if(t)return c.a.deleteFile(e)}))})),i})).then((function(){return b.a.deleteProblemByBatch(t)}))},getLeaderComments:function(t){return b.a.getLeaderComments(t).then((function(t){return e.each(t,(function(e){e.user={id:e.user_id,name:e.user_name,mobile:e.mobile,is_im_user:e.is_im_user},e.image_file&&(e.image_file=JSON.parse(e.image_file))})),t}))},getPhotoRequired:function(e,t){var i=g.a.state.global.allGrayRelease.UsingProjectParameter;return j.a.getProjParameter(e,"is_photo_required",t).then((function(e){return i&&e&&e.length?Number(e[0].value):g.a.state.global.isPhotoRequired[t]})).catch((function(e){console.log("error",e)}))}},t.a=r}).call(this,i("391c"))},"5c19":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .content-not-empty[data-v-43042f0d] .layout-content{display:auto;overflow:auto;padding-bottom:100px}.zjapp .check-guide-detail-hd[data-v-43042f0d]{margin-left:30px;padding:25px 30px 5px 0}.zjapp .check-guide-detail-title[data-v-43042f0d]{margin:0;line-height:20px;font-size:18px;color:#111;font-weight:700;word-break:break-all}.zjapp .check-guide-detail-info[data-v-43042f0d]{line-height:20px;font-size:14px;color:#8c8c8c}.zjapp .check-guide-detail-content[data-v-43042f0d]{padding:30px;line-height:30px;color:#333;font-size:16px}.zjapp .check-guide-detail-content p[data-v-43042f0d]{margin-bottom:30px;min-height:1em}.zjapp .check-guide-detail-content img[data-v-43042f0d]{max-width:100%}.zjapp .check-guide-detail-content .img-not-ready[data-v-43042f0d]{width:80px;height:auto}.zjapp .error[data-v-43042f0d]{max-width:50%}",""])},7378:function(e,t,i){"use strict";var r=i("fa4f"),a=i("eb36"),n=i.n(a),o=i("6bf2"),c=i.n(o),s={name:"ProblemList",components:{ItemList:r.a},props:{edit:{type:Boolean,default:function(){return!1}},list:{type:Array,default:function(){return[]}}},data:function(){return{png_empty:n.a}},computed:{},methods:{createProblem:function(){this.$emit("add")},openProblemDetail:function(e){this.$emit("clickItem",e)},formatDate:function(e){return c()(e).format("YYYY-MM-DD HH:mm")}}},l=(i("8e66"),i("17cc")),u=Object(l.a)(s,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"problem-wrap"},[i("div",{staticClass:"problem-wrap-title"},[i("div",{staticClass:"problem-title"},[e._v("问题列表("+e._s(e.list.length)+")")]),e.edit?i("div",{staticClass:"problem-btn",on:{click:e.createProblem}},[e._v("新增")]):e._e()]),i("div",{staticClass:"problem-list"},[e.list&&e.list.length?e._l(e.list,(function(t,r){return i("item-list",{key:r,attrs:{"is-unread":t.unread,"is-timeout":t.is_timeout,"is-urgent":"紧急"==t.emergency_degree||"特急"==t.emergency_degree,"is-return":t.sent_back_times>0,img:t.thumbnail,title:t.item_full_name,detail:t.desc||""+t.remark||"",footer:e.formatDate(t.created_on)+" "+(t.place||""),status:t.status,"status-text":t.status},on:{click:function(i){e.openProblemDetail(t)}}})})):[i("div",{staticClass:"empty"},[i("img",{attrs:{src:e.png_empty,alt:""}}),i("span",[e._v("暂无新增问题")])])]],2)])}),[],!1,null,"4cfa77e4",null);t.a=u.exports},"7c70":function(e,t,i){"use strict";(function(e){i("5ab2"),i("e10e");var r,a,n,o,c,s,l=i("28f8"),u=(i("06a2"),i("6d57"),i("163d"),i("6a61"),i("2e91")),d=i("8693"),p=i("162a"),m=i("48f4"),f=i("c058"),h=i("1b7e"),g=i("e2a7");function b(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function _(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?b(Object(i),!0).forEach((function(t){Object(l.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):b(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}t.a={networkTest:(s=Object(u.a)(regeneratorRuntime.mark((function e(t){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h.a.getHasNetwork();case 2:if(e.sent){e.next=6;break}return g.a.alert("当前无网络"),e.abrupt("return",Promise.reject());case 6:return e.next=8,g.a.confirm({message:t,okText:"删除",cancelText:"取消",className:"dialog-customize confirm-color-red"});case 8:return(i=e.sent)&&g.a.loading("正在提交..."),e.abrupt("return",Promise.resolve(i));case 11:case"end":return e.stop()}}),e)}))),function(e){return s.apply(this,arguments)}),measureCheckItemsRest:(c=Object(u.a)(regeneratorRuntime.mark((function t(i){var r,a,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r={special_inspect_ids:i.map((function(e){return e.special_inspect_id})).join(",")},$log.log("专项巡检-实测实量-检查项重置-请求的参数：",r),t.next=5,p.a.post("/online/special-inspect/delete-data-of-checkitem",null,r);case 5:if(a=t.sent,!Number(a.errcode)||0===Number(a.errcode)){t.next=8;break}return t.abrupt("return",Promise.reject(a));case 8:return n=[],e.forEach(i,(function(e){var t={remark:"",status:"未设置",image_file:"[]",id:e.special_inspect_id,download_time:a.update_timestamp},i={id:e.id,group_id:"",measurement_points:"",problem_points:"",problem_values:"",problem_values_zip:""};$log.log("专项巡检-实测实量-检查项重置-请求的参数："," special_inspect => ",t," special_inspect_measure_item =>",i);var r=d.a.updateSpecialInspectData(t),o=d.a.updateSpecialInspectMeasureItem(i),c=m.default.removeSyncGroup(e.special_inspect_id);n.push(r,o,c)})),t.next=12,Promise.all(n);case 12:return $log.log("专项巡检-实测实量-检查项重置-成功"),t.abrupt("return",Promise.resolve());case 16:return t.prev=16,t.t0=t.catch(0),$log.log("专项巡检-实测实量-检查项重置-error：",t.t0),t.abrupt("return",Promise.reject(t.t0));case 20:case"end":return t.stop()}}),t,null,[[0,16]])}))),function(e){return c.apply(this,arguments)}),postDeleteProblem:(o=Object(u.a)(regeneratorRuntime.mark((function e(t){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.a.post("/online/problem-secure/delete",null,{id:t});case 3:if(i=e.sent,!Number(i.errcode)||0===Number(i.errcode)){e.next=6;break}return e.abrupt("return",Promise.reject(i));case 6:return e.abrupt("return",Promise.resolve(i));case 9:return e.prev=9,e.t0=e.catch(0),$log.log("专项巡检-删除问题-error：",e.t0),e.abrupt("return",Promise.reject(e.t0));case 13:case"end":return e.stop()}}),e,null,[[0,9]])}))),function(e){return o.apply(this,arguments)}),postRestCheckItemTemplate11:(n=Object(u.a)(regeneratorRuntime.mark((function e(t){var i,r,a,n,o,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,i=t.specialInspectId,r=t.placeCheckitemId,a=t.problemIds,$log.log("专项巡检-观感模板-删除检查项内容-传入数据：",t),n={special_inspect_ids:i,place_checkitem_id:r},e.next=6,p.a.post("/online/special-inspect/delete-data-of-checkitem",null,n);case 6:if(o=e.sent,!Number(o.errcode)||0===Number(o.errcode)){e.next=9;break}return e.abrupt("return",Promise.reject(o));case 9:return e.next=11,this.sqlDeleteProblem(a);case 11:return $log.log("专项巡检-观感模板-删除检查项内容-删除问题成功"),c={id:r,status:"未设置",remark:null,checker:"",image_file:"[]",deduction:null,download_time:o.update_timestamp},$log.log("更新special_inspect_place_checkitem数据：",c),e.next=16,d.a.updatePlaceSpecialInspectData(c);case 16:return $log.log("专项巡检-观感模板-删除检查项内容-删除检查项的内容成功"),e.next=19,m.default.removeSyncGroup(r);case 19:return $log.log("专项巡检-观感模板-删除检查项内容-删除上传队列成功"),e.abrupt("return",Promise.resolve());case 23:return e.prev=23,e.t0=e.catch(0),$log.log("专项巡检-删除问题-error：",e.t0),e.abrupt("return",Promise.reject(e.t0));case 27:case"end":return e.stop()}}),e,this,[[0,23]])}))),function(e){return n.apply(this,arguments)}),postRestProblemCheckitem:(a=Object(u.a)(regeneratorRuntime.mark((function t(i){var r,a,n,o,c,s,l;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=i.specialInspectId,a=i.restSpecialField,n=void 0===a?{}:a,$log.log("专项巡检-重置检查项内容-传入数据：",i),o={special_inspect_ids:r},t.next=6,p.a.post("/online/special-inspect/delete-data-of-checkitem",null,o);case 6:if(c=t.sent,!Number(c.errcode)||0===Number(c.errcode)){t.next=9;break}return t.abrupt("return",Promise.reject(c));case 9:return s=_({id:r,status:"未设置",remark:null,image_file:"[]",download_time:c.update_timestamp},n),$log.log("更新special_inspect数据：",s),t.next=13,d.a.updateSpecialInspectData(s);case 13:return $log.log("专项巡检-重置检查项内容-重置成功"),t.next=16,m.default.removeSyncGroup(r);case 16:return $log.log("专项巡检-重置检查项内容-删除上传队列成功"),t.next=19,d.a.getProblemBySpecialInspect(r);case 19:return l=t.sent,(l=e.map(l,(function(e){return e.id})))&&this.sqlDeleteProblem(l),t.abrupt("return",Promise.resolve());case 25:return t.prev=25,t.t0=t.catch(0),$log.log("专项巡检-重置检查项-error：",t.t0),t.abrupt("return",Promise.reject(t.t0));case 29:case"end":return t.stop()}}),t,this,[[0,25]])}))),function(e){return a.apply(this,arguments)}),sqlDeleteProblem:(r=Object(u.a)(regeneratorRuntime.mark((function e(t){var i,r,a,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=n.length>1&&void 0!==n[1]&&n[1],e.prev=1,Array.isArray(t)||(t=[t]),$log.log("专项巡检-删除问题-传入ids：",t),e.next=6,d.a.deleteProblemAllIds(t);case 6:return $log.log("专项巡检-删除问题-删除问题表和关联表成功"),r=[],t.forEach((function(e){r.push(m.default.removeSyncGroup(e))})),e.next=11,Promise.all(r);case 11:if($log.log("专项巡检-删除问题-删除上传队列成功"),i){e.next=18;break}return a=[],t.forEach((function(e){var t=f.a.addLog({relation_id:e,business_type:"special-inspect",event:"删除"});a.push(t)})),e.next=17,Promise.all(a);case 17:$log.log("专项巡检-删除问题-添加删除业务日志");case 18:return e.abrupt("return",Promise.resolve());case 21:return e.prev=21,e.t0=e.catch(1),$log.log("专项巡检-删除问题-error：",e.t0),e.abrupt("return",Promise.reject(e.t0));case 25:case"end":return e.stop()}}),e,null,[[1,21]])}))),function(e){return r.apply(this,arguments)})}}).call(this,i("391c"))},"7d4e":function(e,t,i){var r=i("c59b");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("62c5f5a2",r,!0,{sourceMap:!1,shadowMode:!1})},"81f2":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,'.zjapp .main[data-v-2cac8864]{position:fixed;width:100%;bottom:0}.zjapp .arrow[data-v-2cac8864]{position:absolute;top:-7px;right:18px;width:0;height:0;border-bottom:7px solid #fff;border-right:7px solid transparent;border-left:7px solid transparent}.zjapp .content[data-v-2cac8864]{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-2cac8864]{display:flex;flex-direction:column;background-color:#fff;overflow:auto}.zjapp .box-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1}.zjapp .detail-hd[data-v-2cac8864]{display:flex;padding:6px 15px}.zjapp .detail-arrow-right[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-right[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:12px;border:5px solid transparent;border-left:5px solid #c8c8c8}.zjapp .detail-arrow-down[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-down[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:15px;border:5px solid transparent;border-top:5px solid #c8c8c8}.zjapp .detail-title[data-v-2cac8864]{flex:1;line-height:34px;color:#111;font-size:16px}.zjapp .detail-bd[data-v-2cac8864]{padding:8px 15px 8px 35px;background-color:#fafafa}.zjapp .text-line[data-v-2cac8864]{font-size:14px;color:#666;line-height:30px;margin-bottom:30px}.zjapp .detail-hd-single[data-v-2cac8864]{padding:6px 0;margin:0 15px}.zjapp .detail-bd-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1;padding:8px 15px;background-color:#fff}',""])},"827e":function(e,t,i){"use strict";i("9c2b")},"8e66":function(e,t,i){"use strict";i("0dc2")},"8ec2":function(e,t,i){"use strict";i.r(t);var r=i("bdab").a,a=(i("827e"),i("17cc")),n=Object(a.a)(r,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("page-content",{attrs:{title:"检查项登记","show-go-root":!0}},[e.isLoading?e._e():i("check-guide",{directives:[{name:"track",rawName:"v-track",value:"专项巡检-检查指引",expression:"'专项巡检-检查指引'"}],attrs:{slot:"header-bar-right","item-id":e.specialInspectId,module:"special-inspect"},slot:"header-bar-right"}),i("scroller",[!e.isLoading&&e.detailData&&e.detailData.id?[i("div",{staticClass:"title border-bottom"},[e._v(e._s(e.title))]),e.checkitemRule?i("div",{staticClass:"rule border-bottom"},[e._v(e._s(e.checkitemRule))]):e._e(),i("item",{attrs:{label:"检查结果",mode:"edit",border:"bottom"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("radio-box",{attrs:{options:["不合格","合格"]},model:{value:e.resultType,callback:function(t){e.resultType=t},expression:"resultType"}})],1)]),i("div",{staticClass:"mt10"},["不合格"===e.resultType?i("item",{attrs:{label:"倒扣分",mode:"edit"}},[i("template",{slot:"right"},[i("div",{staticClass:"item-con align-r"},[i("number-input",{attrs:{decimal:2,range:[0,999999.99]},on:{blur:e.saveDraft},model:{value:e.detailData.deduction,callback:function(t){e.$set(e.detailData,"deduction",t)},expression:"detailData.deduction"}})],1),i("div",{staticClass:"item-font ml5"},[e._v("分")])])],2):e._e(),i("item",{staticClass:"p15 border-bottom"},[i("item-img-list",{attrs:{maxlength:15},on:{callback:e.saveDraft},model:{value:e.detailData.images,callback:function(t){e.$set(e.detailData,"images",t)},expression:"detailData.images"}})],1),i("item-textarea",{attrs:{placeholder:"补充说明"},on:{blur:e.saveDraft},model:{value:e.detailData.remark,callback:function(t){e.$set(e.detailData,"remark",t)},expression:"detailData.remark"}})],1),i("problem-list",{attrs:{list:e.problemList,edit:e.editable},on:{add:e.createProblem,clickItem:e.openProblemDetail}}),"草稿"===e.detailData.status?i("app-button-group",[i("app-button",{attrs:{type:"text"},on:{click:e.deleteDraft}},[e._v(" 删除此草稿 ")])],1):e._e(),e.allowRest?i("app-button-group",[i("app-button",{attrs:{type:"text"},on:{click:e.checkItemRest}},[e._v(" 删除已检查内容 ")])],1):e._e()]:e._e()],2),!e.isLoading&&e.detailData&&e.detailData.id?["合格"===e.detailData.status||"不合格"===e.detailData.status?i("app-button-group",{attrs:{"fixed-bottom":""}},[i("app-button",{on:{click:e.submit}},[e._v(" 提交 ")])],1):i("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[i("app-button",{staticStyle:{width:"50%"},attrs:{plain:""},on:{click:e.saveDraftAndBack}},[e._v(" 暂存 ")]),i("app-button",{on:{click:e.submit}},[e._v(" 提交 ")])],1)]:e._e(),i("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.detailData||!e.detailData.id,"empty-text":"获取数据失败"}})],2)}),[],!1,null,"d6e7eb86",null);t.default=n.exports},"8fdd":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .problem-wrap-title[data-v-4cfa77e4]{display:flex;justify-content:space-between;align-items:center;font-size:14px;color:#666;padding-left:15px;height:43px}.zjapp .problem-wrap-title .problem-btn[data-v-4cfa77e4]{padding:13px 15px;color:#4275e8}.zjapp .problem-wrap .problem-list[data-v-4cfa77e4]{background:#fff}.zjapp .problem-wrap .problem-list .problem-item[data-v-4cfa77e4]{display:flex;border-bottom:1px solid #ececec;padding:12px 15px}.zjapp .problem-wrap .problem-list .problem-item img[data-v-4cfa77e4]{width:70px;height:70px;background:coral;margin-right:10px}.zjapp .problem-wrap .problem-list .problem-item .content[data-v-4cfa77e4]{margin-right:10px;flex:1;display:flex;flex-direction:column;justify-content:space-between}.zjapp .problem-wrap .problem-list .problem-item .content .desc[data-v-4cfa77e4]{font-size:16px;color:#333;line-height:22px}.zjapp .problem-wrap .problem-list .problem-item .content .date[data-v-4cfa77e4]{color:#999;line-height:20px}.zjapp .problem-wrap .problem-list .problem-item .status[data-v-4cfa77e4]{display:flex;align-items:center;color:#0bc666}.zjapp .problem-wrap .problem-list .empty[data-v-4cfa77e4]{padding:40px 0;display:flex;flex-direction:column;align-items:center;color:#999}.zjapp .problem-wrap .problem-list .empty img[data-v-4cfa77e4]{width:150px;margin-bottom:24px}",""])},"91c1":function(e,t,i){"use strict";(function(e){i("5ab2"),i("6d57"),i("e10e"),i("9a33");var r=i("28f8"),a=i("e68e"),n=i("6f9e"),o=i("bcc7"),c=i("e89f");function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}t.a={name:"CheckGuideDetailDrop",components:{ItemImgList:a.a},mixins:[c.a],data:function(){return{show:!1,showList:!1,isLoading:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,module:"",itemIds:[],data:[],target:""}},watch:{show:function(e){var t=this;e&&this.$nextTick((function(){t.showList=!0}))}},created:function(){n.a.$on("routerBeforeEach",this.closePopup),n.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){n.a.$off("routerBeforeEach",this.closePopup),n.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(t){this.show=!0,this.$emit("open"),this.module=t.module,this.itemIds=t.itemIds,this.options=t.options;var i=document.querySelector(".layout-main .layout-header");if(this.contentTop=i.offsetHeight,t.el){var r=t.el.getBoundingClientRect();this.contentTop=r.bottom}this.target=t.el,this.listHeight=e.minBy([window.innerHeight-this.contentTop-50,510]),this.getData()},closePopup:function(){var e=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(t){e.$on("afterClosePopup",t)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(e){e&&e.target&&e.target!==this.target&&this.show&&this.closePopup()},getData:function(){var t=this;return this.options&&this.options.length?(this.data=e.map(this.options,(function(e){return l(l({},e),{},{isOpen:!1})})),Promise.resolve()):o.a.getMeasureCheckItem(this.itemIds).then((function(i){t.data=e.map(i,(function(t){var i=t.content?t.content.trim():"",r=i?i.split("\n"):[],a=t.content_image?JSON.parse(t.content_image):[],n=e.filter(r,(function(e){return!/<img([\s\S]*)>/gm.test(e)}));return e.each(a,(function(e){e.url=e.url.split("@")[0]})),{id:t.id,name:t.full_name,textArr:n,contentImage:a,isOpen:!1}}))})).catch((function(e){console.error(e)}))},toggleItem:function(e){this.data.length>1&&this.$set(e,"isOpen",!e.isOpen)}}}}).call(this,i("391c"))},"967a":function(e,t,i){"use strict";var r=i("8d95");t.a={REPAIR_DEADLINE_STATUS:{name:"repair_deadline_status",status:["待整改"],module:[r.a.CHECK]}}},"9b25":function(e,t,i){"use strict";i("b09a")},"9c2b":function(e,t,i){var r=i("ee0f");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("35621ddc",r,!0,{sourceMap:!1,shadowMode:!1})},"9dea":function(e,t,i){"use strict";i("fda1")},b09a:function(e,t,i){var r=i("2939");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("65170d73",r,!0,{sourceMap:!1,shadowMode:!1})},bdab:function(e,t,i){"use strict";(function(e){i("5ab2"),i("6d57"),i("e10e");var r=i("28f8"),a=(i("6a61"),i("2e91")),n=(i("cc57"),i("f369")),o=i("774b"),c=i("07d2"),s=i("e68e"),l=i("3c64"),u=i("1059"),d=i("6948"),p=i("7378"),m=i("e2a7"),f=i("3bd5"),h=(i("c745"),i("37d5"),i("5ff0"),i("48f4"),i("6e1b")),g=i("7bac"),b=i("6f9e"),_=i("114f"),v=i("7c70");function y(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}var x,k=f.a.getUser(),w="special-inspect-detail-draf-status";t.a={name:"SpecialInspectDetailEdit",components:{CheckGuide:n.a,Scroller:o.a,Item:c.a,ItemImgList:s.a,ItemTextarea:l.a,RadioBox:u.a,NumberInput:d.a,ProblemList:p.a},data:function(){return{isLoading:!0,specialInspectId:"",placeId:"",isBatchPlaceMode:!1,resultType:"",detailData:{},problemList:[],editable:!1,allowRest:!1}},computed:{title:function(){return this.detailData&&this.detailData.checkitem&&this.detailData.checkitem.name||""},checkitemRule:function(){var e=this.detailData&&this.detailData.checkitem&&this.detailData.checkitem.extension||{};return e.rating_rule&&e.rating_rule.value||""}},created:function(){var e=this;Object(b.e)((function(){e.init()}))},activated:function(){this.specialInspectId=this.$route.query.specialInspectId,this.placeId=this.$route.query.placeId,this.isBatchPlaceMode=!!this.placeId,this.$router.isBack||(this.isLoading=!0),this.init()},methods:{init:function(){var e=this;return this.isLoading=!0,this.getDetailData().then((function(){return e.getBatchData(e.detailData.batch_id)})).then((function(){return e.getProblemList()})).finally((function(){e.isLoading=!1})).catch((function(t){$log.error(t),e.detailData={}}))},getDetailData:function(){var e=this;return this.specialInspectId?Promise.resolve().then((function(){return e.isBatchPlaceMode?h.a.getPlaceSpecialInspectData(e.specialInspectId,e.placeId):h.a.getSpecialInspectData(e.specialInspectId)})).then((function(t){return e.detailData=t,e.getResultType()})):Promise.reject("缺少参数")},getBatchData:function(t){var i=this;return t?h.a.getBatchDetailAndCheckers(t).then((function(t){var r=e.some(t.checkers,{user_id:k.user_id});return i.editable="检查完毕"!==t.status&&r,t})).then((function(e){return h.a.getDetailToAllow(i.detailData.status,e.status,e.checkers,e.mode).then((function(e){i.allowRest=e.allowRest}))})):Promise.reject("缺少批次id")},getProblemList:function(){var e=this;return _.a.getProblemList(this.specialInspectId,this.placeId).then((function(t){e.problemList=t}))},getResultType:function(){var e=this;if(this.detailData&&this.detailData.status&&"未设置"!==this.detailData.status){if("草稿"===this.detailData.status)return g.a.getUserObject(w).then((function(t){t=t||{},e.resultType=t[e.detailData.id]||"不合格"}));["合格","不合格"].some((function(t){return t===e.detailData.status}))?this.resultType=this.detailData.status:this.resultType="不合格"}else this.resultType="不合格"},saveDraft:function(){var e=this;if(["合格","不合格"].some((function(t){return t===e.detailData.status})))return Promise.resolve();var t={id:this.detailData.id,status:"草稿",deduction:this.detailData.deduction,images:this.detailData.images,remark:this.detailData.remark};return t.status="草稿",Promise.resolve().then((function(){return e.isBatchPlaceMode?h.a.updatePlaceSpecialInspectData(t):h.a.updateSpecialInspectData(t)})).then((function(){return g.a.getUserObject(w).then((function(i){return(i=i||{})[t.id]=e.resultType,g.a.saveUserObject(w,i)}))})).then((function(){e.detailData.status="草稿"}))},deleteDraft:function(){var e=this,t={id:this.detailData.id,status:"未设置",deduction:"",images:[],remark:""};return Promise.resolve().then((function(){return e.isBatchPlaceMode?h.a.updatePlaceSpecialInspectData(t):h.a.updateSpecialInspectData(t)})).then((function(){return g.a.getUserObject(w).then((function(e){return delete(e=e||{})[t.id],g.a.saveUserObject(w,e)}))})).then((function(){e.$router.go(-1)}))},checkItemRest:(x=Object(a.a)(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t={specialInspectId:this.specialInspectId,problemIds:this.problemList.map((function(e){return e.id})),placeCheckitemId:this.detailData.id},e.prev=1,e.next=4,v.a.networkTest("确定删除已检查内容与问题？\n删除的已检查内容与问题将无法找回。");case 4:if(e.sent){e.next=7;break}return e.abrupt("return");case 7:return e.next=9,v.a.postRestCheckItemTemplate11(t);case 9:m.a.hideLoading(),m.a.alert("删除成功"),this.$router.go(-1),e.next=18;break;case 14:e.prev=14,e.t0=e.catch(1),m.a.hideLoading(),m.a.alert(e.t0.errmsg);case 18:case"end":return e.stop()}}),e,this,[[1,14]])}))),function(){return x.apply(this,arguments)}),saveDraftAndBack:function(){var e=this;this.saveDraft().then((function(){m.a.alert("保存成功"),setTimeout((function(){e.$router.go(-1)}),500)}))},submit:function(){var e=this;m.a.loading("正在提交");var t=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?y(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):y(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},this.detailData);if(t.status=this.resultType,"合格"===this.resultType&&(t.deduction=""),"不合格"!==this.resultType||void 0!==t.deduction||null!=t.deduction||""!==t.deduction)return Promise.resolve().then((function(){return e.isBatchPlaceMode?h.a.submitPlaceSpecialInspectData(t):h.a.submitSpecialInspectData(t)})).then((function(){m.a.hideLoading(),m.a.alert("提交成功"),e.$router.go(-1)}));m.a.alert("请输入倒扣分")},createProblem:function(){this.$router.push({name:"SpecialInspecProblemPureEdit",query:{specialInspectId:this.specialInspectId,placeId:this.placeId}})},openProblemDetail:function(e){var t;t="草稿"===e.status?"SpecialInspecProblemPureEdit":"SpecialInspecProblemPureView",this.$router.push({name:t,query:{problemId:e.id}})}}}}).call(this,i("391c"))},c070:function(e,t,i){var r=i("574c");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("35590dcb",r,!0,{sourceMap:!1,shadowMode:!1})},c59b:function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .item-list{position:relative;padding:10px;display:flex;align-items:center;background-color:#fff;min-height:100px}.zjapp .item-list .img{display:block;width:80px;height:80px;background:no-repeat 50%;background-size:cover;background-color:#ddd}.zjapp .item-list .item-list-con{flex:1;padding:0 15px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.zjapp .item-list .item-list-con .title{height:30px;line-height:24px;color:#111;font-size:16px;padding-top:6px;margin:0;padding-right:10px;margin-right:-10px;white-space:nowrap!important;overflow:hidden!important;text-overflow:ellipsis!important;font-weight:400}.zjapp .item-list .item-list-con .title .type-tag{display:inline-block;height:16px;line-height:16px;padding:0 4px;border-radius:2px;border:1px solid #4275e8;color:#4275e8;font-size:12px;zoom:.8;margin:3px 0 0 0;vertical-align:text-top}.zjapp .item-list .item-list-con .text{height:30px;line-height:24px;color:#8c8c8c;padding-bottom:6px;padding-right:11px;margin-right:-10px}.zjapp .item-list .item-list-con .text,.zjapp .item-list .item-list-con .time{font-size:14px;white-space:nowrap!important;overflow:hidden!important;text-overflow:ellipsis!important}.zjapp .item-list .item-list-con .time{height:20px;line-height:20px;color:#b3b3b3;padding-right:11px!important;margin-right:-10px!important}.zjapp .item-list .item-list-con .time .ion{color:#a6a6a6;font-size:20px;font-weight:700;margin-right:5px;vertical-align:top}.zjapp .item-list .item-list-r{width:60px;line-height:18px;text-align:center}.zjapp .item-list .item-list-status{min-width:4em;line-height:18px;text-align:center;white-space:normal;font-size:14px}.zjapp .item-list .icon-unread{display:inline-block;text-align:center;width:12px;height:12px;border-radius:6px;background-color:red}.zjapp .item-list .icon-return,.zjapp .item-list .icon-timeout,.zjapp .item-list .icon-urgent{display:inline-block;width:16px;height:16px;text-align:center;line-height:16px;font-size:12px;font-style:normal;color:#fff;border-radius:2px;-webkit-border-radius:2px;vertical-align:top;margin-top:4px;margin-right:5px}.zjapp .item-list .icon-timeout{background:#964bfe}.zjapp .item-list .icon-return{background:#fe8b00}.zjapp .item-list .icon-urgent{background:#ff3c3d}.zjapp .item-list .icon-return:last-child,.zjapp .item-list .icon-timeout:last-child,.zjapp .item-list .icon-urgent:last-child{margin-right:0}.zjapp .item-list-tip{height:70px;line-height:60px;color:#b4b4b4;text-align:center}.zjapp .status-new-tag{position:absolute;right:0;top:0;width:50px;height:50px;overflow:hidden;z-index:10}.zjapp .status-new-tag>.tag{position:absolute;right:-32px;bottom:22px;height:20px;line-height:20px;width:100px;color:#fff;font-size:12px;transform:rotate(45deg);text-align:center;border-width:1px;border-style:solid}.zjapp .time-status{font-size:10px;color:#999}",""])},d0fb:function(e,t,i){"use strict";(function(e){var r=i("fd50"),a=i("bcc7"),n=i("515e"),o=i("e89f"),c=i("07d2"),s=i("7bac"),l=i("a7c3"),u=i("4360");t.a={name:"CheckGuideList",components:{Item:c.a},mixins:[o.a],store:u.a,props:{data:{type:String,default:""}},data:function(){return{show:!1,isLoading:!0,listData:[],module:"",itemId:"",batchId:"",sectionId:"",options:""}},computed:{moduleAttribute:function(){return this.$store.state.global.moduleAttribute}},mounted:function(){this.data=[]},methods:{openPopup:function(t){var i,a=this;for(var n in this.value=!0,this.show=!0,this.module=t.module,this.itemId=t.itemId,this.batchId=t.batchId,this.sectionId=t.sectionId,this.options=t.options,this.$emit("open"),t)this[n]=t[n];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module];var o=!1;e.isEmpty(this.itemId)?!e.isEmpty(this.checkType)&&e.isEmpty(this.sectionId)?i=this.initByType():e.isEmpty(this.batchId)?e.isEmpty(this.options)?e.isEmpty(this.sectionId)?i=r.a.when():(o=!0,i=this.initByBidsection()):i=this.initByOptions():i=this.initByBatch():i=this.initById(),this.isLoading=!0,i.then((function(t){var i=a.moduleAttribute[a.module]||{};!e.isEmpty(i)&&i.setUsualItems&&o?s.a.getUserKey(a.mmkvCode()).then((function(e){e=null===e?t:a.mergeArray(a.deepClone(t),e),a.listData=e||[],a.isLoading=!1})):(a.listData=t||[],a.isLoading=!1)}))},mmkvCode:function(){var e=this.moduleAttribute[this.module]||{};return l.a[e.mmkv_item]+"_"+this.sectionId},mergeArray:function(t,i){var r=this;return e.filter(t,(function(t){var a=i[t.id];return e.isEmpty(t.subitem)||(t.subitem=r.mergeArray(t.subitem,i)),!e.isEmpty(a)||"desc"===t.type}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},clickItem:function(e){e.subitem&&e.subitem.length?this.$set(e,"isOpen",!e.isOpen):"special-inspect"===this.module?n.a.openPopup({itemId:e.id,module:this.module}):n.a.openPopup({itemId:e.item_id,module:this.module})},initById:function(){var e=this;if("special-inspect"!==this.module)return a.a.getCheckItem(this.itemId,this.checkType).then((function(t){return t?e.sectionId?a.a.getBidSectionCheckItemListByCode(e.sectionId,t.code):a.a.getCheckItemTreeByCode(t.code):r.a.when()}))},initByType:function(){return a.a.getCheckItemGuidelineList(this.checkType)},initByBatch:function(){return r.a.when()},initByBidsection:function(){return a.a.getBidSectionCheckItemTreeByType(this.sectionId,this.checkType)},initByOptions:function(){return r.a.resolve(this.options)},deepClone:function(e){return JSON.parse(JSON.stringify(e))}}}}).call(this,i("391c"))},dc98:function(e,t,i){"use strict";i("0732")},dd16:function(e,t,i){"use strict";(function(e){t.a={name:"StatusText",props:{status:{type:String},text:{type:String},extend:{type:Object,default:function(){return{}}}},data:function(){return{classSet:e.extend({"草稿":"color-gray","暂存":"color-gray","检查中":"color-orange","待整改":"color-red","待复验":"color-orange","待验收":"color-red","待报验":"color-red","待申请进场":"color-red","待初验":"color-red","待送检":"color-red","待上传报告":"color-red","待退场":"color-red","待建设单位验收":"color-red","待区域验收":"color-red","供应链退回":"color-red","预创建":"color-status-blue","已提交":"color-green","已整改":"color-green","已验收":"color-green","已通过":"color-green","已退场":"color-gray","已关闭":"color-gray","非正常关闭":"color-gray","已退回":"color-red","已完成":"color-green","已甩项":"color-gray","检查完毕":"color-green","送检合格":"color-green","复验合格":"color-green","验收合格":"color-green","验收不合格":"color-red","未验收":"color-orange","待点评":"color-orange","已点评":"color-green","合格":"color-green","不合格":"color-red","进度正常":"color-green","进度滞后":"color-red","施工单位验收合格":"color-green","监理单位验收合格":"color-green","建设单位验收合格":"color-green","施工单位验收不合格":"color-red","监理单位验收不合格":"color-red","建设单位验收不合格":"color-red"},this.extend)}},mounted:function(){}}}).call(this,i("391c"))},e89f:function(e,t,i){"use strict";var r=i("04f3"),a=i("cf09"),n=i("4360"),o=0;t.a={name:"PopupMixin",data:function(){return{backButtonEvent:null}},watch:{show:function(e){var t=this;if(e){if(this.$nextTick((function(){t.$el&&t.$el.style&&(t.$el.style.zIndex=++a.a.zIndex,o++,n.a.commit("app/SET_HAS_POPUP",!!o))})),!this.backButtonEvent){var i=this.close||this.closePopup;this.backButtonEvent=Object(r.a)(i)}}else--o<0&&(o=0),n.a.commit("app/SET_HAS_POPUP",!!o),this.backButtonEvent&&(Object(r.c)(this.backButtonEvent),this.backButtonEvent=null)}},methods:{}}},ebf1:function(e,t,i){"use strict";(function(e){t.a={name:"RadioBox",props:{options:{type:[Array,Object],default:function(){return[]}},value:{type:String,default:""},align:{type:String,default:"r"},customClass:{type:String,default:""}},data:function(){return{}},computed:{optionsType:function(){return e.isArray(this.options)?"array":e.isObject(this.options)?"object":""}},methods:{onSelect:function(e){var t;"array"===this.optionsType?t=this.options[e]:"object"===this.optionsType&&(t=e),this.$emit("input",t),this.$emit("onSelect",t)}}}}).call(this,i("391c"))},ee0f:function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .title[data-v-d6e7eb86]{padding:10px 15px;line-height:26px;font-size:16px;color:#333;font-weight:500;background-color:#fff}.zjapp .rule[data-v-d6e7eb86]{padding:13px 15px;line-height:20px;font-size:14px;color:#999;background-color:#fff}[data-v-d6e7eb86] .item-textarea textarea{min-height:130px}.zjapp .problem-list-title[data-v-d6e7eb86]{padding:13px 15px;line-height:20px;font-size:14px;color:#666}.zjapp .tips-box[data-v-d6e7eb86]{padding:40px 0;background-color:#fff}",""])},f1e4:function(e,t,i){"use strict";(function(e){i("5ab2"),i("e10e");var r=i("28f8"),a=(i("9e76"),i("6d57"),i("9a33"),i("f548"),i("cc57"),i("4ad6")),n=i("e89f"),o=i("bcc7"),c=i("3122"),s=i("6e1b"),l=i("c130"),u=i("0636");function d(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function p(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?d(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):d(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}t.a={name:"CheckGuideDetail",components:{},mixins:[n.a],data:function(){return{show:!1,isLoading:!0,isImageDownloading:!1,title:"",content:[],module:"",itemId:""}},methods:{openPopup:function(t){var i=this;for(var r in this.value=!0,this.show=!0,this.module=t.module,this.itemId=t.itemId,this.$emit("open"),t)this[r]=t[r];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module],this.isLoading=!0,("special-inspect"===this.module?s.a.getSpecialInspectCheckItemDetail(this.itemId):"templet-plan"===this.module?l.a.getTempletDetail(this.itemId):"material"===this.module?u.a.getMaterialDetail(this.itemId):o.a.getCheckItem(this.itemId,this.checkType)).then((function(t){console.log("checkitemData",t),i.checkitemData=t,i.title=t.full_name||t.name,"special-inspect"!==i.module&&"inspect"!==i.module&&"fly-inspect"!==i.module&&"material"!==i.module||(t.content=t.guideline||t.content);var r=t.content?t.content.trim():"";if(r=(r=(r=(r=(r=r.replace(/<\/p><p>/gm,"\n")).replace(/<p>/gm,"")).replace(/<\/p>/gm,"")).replace(/<br>/gm,"")).replace(/<br \/>/gm,""),/(<img[^\>]*>)/gm.test(r)){var a=r.split(/(<img[^\>]*>)/gm);(a=a.filter((function(e){return!!e}))).forEach((function(e,t){e&&!/^\s*\n/.test(e)&&t&&!/\n\s*$/.test(a[t-1])&&(a[t]="\n"+e)})),r=a.join("")}var n=r?r.split("\n"):[];i.content=e.map(n,(function(e,t){var i;if(/<img([\s\S]*)>/gm.test(e)){var r=e.split(/\ssrc="([^"]*)"/gm)[1],a=r?r.match(/[\w|-]{36}/gm)[0]:(new Date).getTime()+"-"+t;i={isImg:!0,src:"",url:r,status:"pending",id:a,ready:!0}}else i={isImg:!1,val:e};return i})),i.downloadImage(),i.isLoading=!1})).catch((function(e){$log.log(e)}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},getThumbnail:function(e){return"pending"===e.status?c.a.IMAGE_LOADING:"rejected"===e.status?c.a.IMAGE_RELOAD:"dev"===APP_ENV?e.url:"fulfilled"===e.status?e.src:($log.log("检查指引-显示图片：",e),c.a.IMAGE_PLACEHOLD)},imgError:function(e,t){$log.error("检查指引-加载图片出现错误：",e);var i=p({},e);i.status="rejected",this.$set(this.content,t,i)},downloadImage:function(t){var i=this;t=t?[t]:this.imageList(),e.each(t,(function(t){var r=p({},t),a=e.map(i.content,(function(e){return e.id})).indexOf(t.id);c.a.isNeedDownload(t.url).then((function(e){e?c.a.download(t.url).then((function(e){r.status="fulfilled",r.src=c.a.fixUrl(e),i.$set(i.content,a,r)})).catch((function(e){$log.error("检查指引-下载图片：",e)})):(r.status="fulfilled",r.src=c.a.fixUrl(c.a.getPathFromUrl(t.url)),i.$set(i.content,a,r))}))}))},imageList:function(){return e.filter(this.content,(function(e){return e.isImg}))},imgClick:function(t){var i=this;if("pending"===t.status)return!1;if("rejected"===t.status)return this.downloadImage(t),$log.log("检查指引-点击重新加载-重新下载图片：",t),!1;var r=this.imageList(),n=e.map(r,(function(e){return e.id})).indexOf(t.id);r=e.map(r,(function(e){return i.getThumbnail(e)})),a.a.openImageBrowser(r,n)}}}}).call(this,i("391c"))},f369:function(e,t,i){"use strict";var r=i("fd50"),a=i("bcc7"),n=i("329b"),o=i("d0fb").a,c=(i("9b25"),i("17cc")),s=Object(c.a)(o,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("transition",{attrs:{name:"slide-right"}},[e.show?i("page-content",{attrs:{mode:"dialog",title:"检查指引","on-close":e.closePopup}},[!e.isLoading&&e.listData.length?i("div",{staticClass:"page-scroll"},e._l(e.listData,(function(t,r){return i("div",{key:r},[i("item",{attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){e.clickItem(t)}}},[i("div",{staticClass:"item-text fw-b color-blue one-line"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,r){return i("div",{key:r,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){e.clickItem(t)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,r){return i("div",{key:r,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){e.clickItem(t)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,r){return i("div",{key:r,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){e.clickItem(t)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])])],1)})):e._e()],2)})):e._e()],2)})):e._e()],2)}))):e._e(),i("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.listData.length,"empty-text":"没有检查项"}})],1):e._e()],1)}),[],!1,null,"74102c05",null).exports,l=!1;l||(l=new(n.default.extend(s))({el:document.createElement("div")}),document.body.appendChild(l.$el));var u=l,d=i("515e"),p=i("91c1").a,m=(i("dc98"),Object(c.a)(p,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return e.show?i("div",{staticClass:"main",style:{top:e.contentTop+"px"}},[i("i",{staticClass:"arrow"}),i("div",{staticClass:"content",on:{click:function(t){return t.target!==t.currentTarget?null:e.closePopup(t)}}},[i("transition",{attrs:{name:"slide-down"},on:{enter:function(t){e.isOpening=!0},"after-enter":function(t){e.isOpening=!1},leave:function(t){e.isClosing=!0},"after-leave":e.afterClose}},[e.showList?i("div",{staticClass:"box",style:{height:e.listHeight+"px"}},e._l(e.data,(function(t,r){return i("div",{key:r,class:{"border-bottom":e.data.length>1,"box-single":1===e.data.length}},[i("div",{staticClass:"detail-hd",class:{"border-bottom":e.data.length<=1,"detail-hd-single":e.data.length<=1},on:{click:function(i){e.toggleItem(t)}}},[e.data.length>1?i("i",{class:{"detail-arrow-right":!t.isOpen,"detail-arrow-down":t.isOpen}}):e._e(),i("div",{staticClass:"detail-title"},[e._v(e._s(t.name))])]),e.data.length<=1||t.isOpen?i("div",{staticClass:"detail-bd",class:{"detail-bd-single":e.data.length<=1}},[e._l(t.textArr,(function(t,r){return i("p",{key:r,staticClass:"text-line"},[e._v("\n              "+e._s(t)+"\n            ")])})),i("item-img-list",{attrs:{editabled:!1},model:{value:t.contentImage,callback:function(i){e.$set(t,"contentImage",i)},expression:"item.contentImage"}}),i("loading-status",{attrs:{"is-empty":!t.textArr.length&&!t.contentImage.length,"empty-text":"PC端未设置检查指引"}})],2):e._e()])}))):e._e()])],1)]):e._e()}),[],!1,null,"2cac8864",null).exports),f=!1;f||(f=new(n.default.extend(m))({el:document.createElement("div")}),document.body.appendChild(f.$el));var h=f,g={name:"CheckGuide",components:{},props:{module:{type:String,default:""},mode:{type:String,default:"page"},itemId:{type:String,default:""},itemIds:{type:Array,default:function(){return[]}},batchId:{type:String,default:""},sectionId:{type:String,default:""},options:{type:Array,default:function(){return[]}},optionsPromise:{type:Function,default:function(){}},beforeOpen:{type:Function,default:function(){}}},data:function(){return{isLoading:!1}},methods:{openCheckGuide:function(){var e=this,t=this.beforeOpen&&this.beforeOpen();t instanceof Promise||(t=Promise.resolve(t)),t.then((function(t){!1!==t&&("drop"===e.mode?h.openPopup({itemIds:e.itemIds,el:e.$refs["check-guide-btn"],options:e.options}):("templet-plan"===e.module?r.a.when(!1):e.itemId&&e.sectionId?a.a.hasChildSectionCheckItem(e.itemId,e.sectionId):e.itemId?a.a.hasChildCheckItem(e.itemId):r.a.when(!0)).then((function(t){t?u.openPopup({module:e.module,itemId:e.itemId,batchId:e.batchId,sectionId:e.sectionId,options:e.options}):d.a.openPopup({itemId:e.itemId,module:e.module})})))}))}}},b=Object(c.a)(g,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{ref:"check-guide-btn",staticClass:"header-btn",on:{click:function(t){e.openCheckGuide()}}},[i("icon",{attrs:{name:"nav-info"}})],1)}),[],!1,null,null,null);t.a=b.exports},fa4f:function(e,t,i){"use strict";var r=i("4aef"),a=i("967a"),n={name:"ItemList",components:{StatusText:r.a},props:{img:{type:String,default:""},title:{type:String,default:""},detail:{type:String,default:""},footer:{type:String,default:""},status:{type:String,default:""},isShowNewStatus:{type:Boolean,default:!1},statusText:{type:String,default:""},statusClassSet:{type:Object,default:function(){return{}}},typeTag:{type:String,default:""},isUnread:{type:Boolean,default:!1},isTimeout:{type:Boolean,default:!1},isUrgent:{type:Boolean,default:!1},isReturn:{type:Boolean,default:!1},repairDeadline:{type:String,default:null}},data:function(){return{repairDeadlineStatus:a.a.REPAIR_DEADLINE_STATUS.status}},computed:{bgNewClass:function(){return{"草稿":"bg-gray7 b-color","暂存":"bg-gray b-color","检查中":"bg-orange b-color","待整改":"bg-red2 b-color ","待复验":"bg-purple b-color","待验收":"bg-red b-color","待报验":"bg-red b-color","待申请进场":"bg-red b-color","待初验":"bg-red b-color","待送检":"bg-red b-color","待上传报告":"bg-red b-color","待退场":"bg-red b-color","待建设单位验收":"bg-red b-color","待区域验收":"bg-red b-color","已提交":"bg-green b-color","已整改":"bg-green b-color","已验收":"bg-green b-color","已通过":"bg-green2 b-color","已退场":"bg-gray b-color","已关闭":"bg-gray7 b-color","非正常关闭":"bg-gray b-color","已退回":"bg-red b-color","已完成":"bg-green b-color","已甩项":"bg-gray b-color","检查完毕":"bg-green b-color","送检合格":"bg-green b-color","复验合格":"bg-green b-color","验收合格":"bg-green b-color","验收不合格":"bg-red b-color","未验收":"bg-orange b-color","待点评":"bg-orange b-color","已点评":"bg-green b-color","合格":"bg-green b-color","不合格":"bg-red b-color","进度正常":"bg-green2 b-color","进度滞后":"bg-red2 b-color","施工单位验收合格":"bg-green b-color","监理单位验收合格":"bg-green b-color","建设单位验收合格":"bg-green b-color","施工单位验收不合格":"bg-red b-color","监理单位验收不合格":"bg-red b-color","建设单位验收不合格":"bg-red b-color"}}},activated:function(){}},o=(i("19a9"),i("17cc")),c=Object(o.a)(n,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",e._g({staticClass:"item-list border-bottom"},e.$listeners),[e.isShowNewStatus?i("div",{staticClass:"status-new-tag"},[i("div",{staticClass:"tag",class:e.bgNewClass[e.status]},[e._v("\n      "+e._s(e.status)+"\n    ")])]):e._e(),e.img?i("div",{staticClass:"img",style:{"background-image":"url("+e.img+")"}}):e._e(),i("div",{staticClass:"item-list-con"},[i("h2",{staticClass:"title"},[e.isUnread?i("i",{staticClass:"icon-unread"}):e._e(),e.isTimeout?i("i",{staticClass:"icon-timeout"},[e._v("\n        超\n      ")]):e._e(),e.isUrgent?i("i",{staticClass:"icon-urgent"},[e._v("\n        急\n      ")]):e._e(),e.isReturn?i("i",{staticClass:"icon-return"},[e._v("\n        退\n      ")]):e._e(),e.$slots.title?e._t("title"):[e.typeTag?i("span",{staticClass:"type-tag"},[e._v(e._s(e.typeTag))]):e._e(),e._v("\n        "+e._s(e.title||"")+"\n      ")]],2),i("p",{staticClass:"text"},[e._v(e._s(e.detail||""))]),e.$slots.footer?e._t("footer"):i("p",{staticClass:"time",domProps:{innerHTML:e._s(e.footer||"")}})],2),e.status&&!e.isShowNewStatus?i("div",{staticClass:"item-list-status"},[i("status-text",{attrs:{status:e.status,text:e.statusText,extend:e.statusClassSet}}),e.repairDeadline&&e.repairDeadlineStatus.includes(e.status)?i("p",{staticClass:"time-status"},[e._v("\n      "+e._s(e._f("timeStatus")(e.repairDeadline))+"\n    ")]):e._e()],1):e._e()])}),[],!1,null,null,null);t.a=c.exports},fda1:function(e,t,i){var r=i("19a7");"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,i("85cb").default)("cb2469e8",r,!0,{sourceMap:!1,shadowMode:!1})},fe9e:function(e,t,i){"use strict";i("3cd8")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwtZHJvcC52dWU/MmYzNyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9jb21wb25lbnRzL3Byb2JsZW0tbGlzdC52dWU/ZGQ0MyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvcmFkaW8tYm94L2luZGV4LnZ1ZT83NzQyIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9yYWRpby1ib3gvaW5kZXgudnVlPzIzOGMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3JhZGlvLWJveC9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9zcGVjaWFsLWluc3BlY3QvcHJvYmxlbS9zZXJ2aWNlLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9yYWRpby1ib3gvaW5kZXgudnVlP2ZiZGIiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tbGlzdC9pbmRleC52dWU/NmMyNSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZT81ZWJjIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3Mvc3BlY2lhbC1pbnNwZWN0L3Byb2JsZW0vcmVwb3NpdG9yeS5qcyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/ZjE1OSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/M2ExNyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/ZThjOSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy9jb21wb25lbnRzL2l0ZW0tdGV4dGFyZWEvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9pdGVtLXRleHRhcmVhL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwudnVlP2Q4MDAiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvc3RhdHVzLXRleHQvaW5kZXgudnVlP2M1NDEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvc3RhdHVzLXRleHQvaW5kZXgudnVlPzM4NWQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvc3RhdHVzLXRleHQvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC52dWU/ZWJkOCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC52dWU/OGRmMiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwuanMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tdGV4dGFyZWEvaW5kZXgudnVlPzRlMWQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9zZXJ2aWNlL2NoZWNrL2NoZWNrLXByb2JsZW0tc2VydmljZS5qcyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwudnVlP2U0OGEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9zcGVjaWFsLWluc3BlY3QvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QudnVlP2VkN2YiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9zcGVjaWFsLWluc3BlY3QvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QudnVlP2ZhNGYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvdmlld3Mvc3BlY2lhbC1pbnNwZWN0L2NvbXBvbmVudHMvcHJvYmxlbS1saXN0LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9jb21wb25lbnRzL3Byb2JsZW0tbGlzdC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9zcGVjaWFsLWluc3BlY3QvY29tcG9uZW50cy9kZWxldGUuanMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tbGlzdC9pbmRleC52dWU/NmJhMCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwtZHJvcC52dWU/OWMwYyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9kZXRhaWwvZWRpdC52dWU/MmVjZCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9jb21wb25lbnRzL3Byb2JsZW0tbGlzdC52dWU/MTFiYSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9kZXRhaWwvZWRpdC52dWU/MDQwYSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9kZXRhaWwvZWRpdC52dWU/ZjRjYiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9kZXRhaWwvZWRpdC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9zcGVjaWFsLWluc3BlY3QvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QudnVlPzM0Y2EiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbmZpZy9nbG9iYWwtc3RhdHVzLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2xpc3QudnVlP2UyZTUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9zcGVjaWFsLWluc3BlY3QvZGV0YWlsL2VkaXQudnVlP2Y2NDYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3JhZGlvLWJveC9pbmRleC52dWU/NDFkOCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZT9lMTc2Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9kZXRhaWwvZWRpdC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tdGV4dGFyZWEvaW5kZXgudnVlP2FhNTAiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tbGlzdC9pbmRleC52dWU/Y2I5NiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvbGlzdC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AudnVlPzMzNDEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L3N0YXR1cy10ZXh0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3V0aWxzL3BvcHVwLW1peGluLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL2NvbXBvbmVudHMvcmFkaW8tYm94L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9kZXRhaWwvZWRpdC52dWU/MDJiMyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9pbmRleC52dWU/YTc1NyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZT8wMjYxIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2xpc3QudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2xpc3QudnVlP2E4OGQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvbGlzdC5qcyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwtZHJvcC52dWU/NzA3ZCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwtZHJvcC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AudnVlP2Q4MzgiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AuanMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvaW5kZXgudnVlP2E4MGUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tbGlzdC9pbmRleC52dWU/M2QwMSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS1saXN0L2luZGV4LnZ1ZT85MmQwIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL2NvbXBvbmVudHMvaXRlbS1saXN0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS1saXN0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvcmFkaW8tYm94L2luZGV4LnZ1ZT9kZWJhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC52dWU/MzNhNyJdLCJuYW1lcyI6WyJjb250ZW50IiwibW9kdWxlIiwiaSIsImxvY2FscyIsImV4cG9ydHMiLCJhZGQiLCJkZWZhdWx0IiwiY29tcG9uZW50IiwiX3ZtIiwidGhpcyIsIl9oIiwiJGNyZWF0ZUVsZW1lbnQiLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJjbGFzcyIsImFsaWduIiwiY3VzdG9tQ2xhc3MiLCJfbCIsIml0ZW0iLCJrZXkiLCJzZWxlY3RlZCIsIm9wdGlvbnNUeXBlIiwidmFsdWUiLCJvbiIsIiRldmVudCIsIm9uU2VsZWN0IiwiX3YiLCJfcyIsImN1cnJlbnRVc2VyIiwiY29udGV4dCIsImdldFVzZXIiLCJkZWZhdWx0UGxhY2VLZXkiLCJnZXRQcm9ibGVtRGF0YSIsImlkIiwiQ2hlY2tRdWFsaXR5UHJvYmxlbVNlcnZpY2UiLCJnZXRDaGVja1Byb2JsZW1JbmZvIiwidGhlbiIsInAiLCJzdGF0dXMiLCJwcm9qX2lkIiwicGxhY2UiLCJidWlsZGluZ19pZCIsInVuaXRfaWQiLCJ1bml0IiwiZmxvb3IiLCJyb29tX2lkIiwiZnVsbF9uYW1lIiwiYmlkc2VjdGlvbl9pZCIsImJhdGNoX2lkIiwiYmF0Y2hfdHlwZSIsImNyZWF0ZWRfYnkiLCJjaGVja0l0ZW0iLCJpdGVtX2lkIiwibmFtZSIsIml0ZW1fbmFtZSIsIml0ZW1fZnVsbF9uYW1lIiwicGFyZW50SWQiLCJpdGVtX3BhcmVudF9pZCIsImRlc2NyaXB0aW9uIiwiZGVzY19pZCIsImRlc2MiLCJpbWFnZV9maWxlIiwiSlNPTiIsInBhcnNlIiwicmVtYXJrIiwicmVwYWlyX3JlcXVpcmVtZW50cyIsImxldmVsIiwiZW1lcmdlbmN5X2RlZ3JlZSIsImRlYWRsaW5lIiwidW5kZWZpbmVkIiwiTnVtYmVyIiwicGxhY2VfcG9pbnQiLCJwcm9ibGVtX3ZhbHVlcyIsImRyYXdpbmdfZmlsZSIsInJlcGFpcl9zZXQiLCJwcm9jZXNzX21vZGUiLCJyZXBhaXIiLCJyZXBhaXJfaW1hZ2VfZmlsZSIsImNvbnRyYWN0b3IiLCJjb250cmFjdG9yX2lkIiwiY29udHJhY3Rvcl9uYW1lIiwicmVpbnNwZWN0X3NldCIsImNjX3NldCIsImNjX3NldF9hcnJheSIsInNlbnRfYmFjayIsInNlbnRfYmFja19pbWFnZV9maWxlIiwicmVnaXN0IiwibW9iaWxlIiwiaXNfaW1fdXNlciIsImN1cnJlbnRSZWluc3BlY3RCeSIsIl8iLCJmaW5kIiwiY2xvbmUiLCJyZWluc3BlY3RCeSIsInVzZXJfaWQiLCJyZWluc3BlY3RfaW1hZ2VfZmlsZSIsInJlaW5zcGVjdF9yZW1hcmsiLCJwcm9ibGVtRGF0YSIsImJpeklkIiwiYml6X2lkIiwiU3BlY2lhbEluc3BlY3RSZXBvc2l0b3J5IiwiZ2V0U3BlY2lhbEluc3BlY3REYXRhIiwicmVzIiwiY2hlY2tpdGVtX2lkIiwiY2hlY2tpdGVtX25hbWUiLCJjaGVja2l0ZW1fZnVsbF9uYW1lIiwiY2hlY2tpdGVtX3BhcmVudF9pZCIsInNwZWNpYWxJbnNwZWN0SWQiLCJTcGVjaWFsSW5zcGVjdFNlcnZpY2UiLCJnZXRCYXRjaERldGFpbEFuZENoZWNrZXJzIiwiYmF0Y2hEZXRhaWwiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsImNyZWF0ZU5ld0RhdGEiLCJwbGFjZUlkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJnZXRQbGFjZVNwZWNpYWxJbnNwZWN0RGF0YSIsImdldFNwZWNpYWxJbnNwZWN0Q2hlY2tJdGVtRGV0YWlsIiwicmVqZWN0IiwiRXJyb3IiLCJzcGVjaWFsSW5zcGVjdERhdGEiLCJnZXRCYXRjaFBsYWNlIiwiZGVmYXVsdFBsYWNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0T2JqZWN0IiwidXNlciIsImRlZHVjdGlvbiIsInJlZGxpbmVfZGVkdWN0aW9uIiwiYml6X2NoaWxkcmVuX2lkIiwiY2hlY2tpdGVtX2V4dGVuc2lvbiIsImdldERpYWdyYW0iLCJwbGFjZURhdGEiLCJDb21tb25Sb29tU2VydmljZSIsImdldFJvb21UeXBlRGlhZ3JhbSIsIkNvbW1vbkZsb29yU2VydmljZSIsImdldFByb2JsZW1MaXN0IiwiYml6SWRzIiwiQXJyYXkiLCJpc0FycmF5IiwicHJvYmxlbUxpc3QiLCJmb3JFYWNoIiwicHJvYmxlbSIsInRodW1ibmFpbCIsIkltYWdlU2VydmljZSIsImdldERlZmF1bHRUaHVtYm5haWxGcm9tTGlzdCIsImdldEJhdGNoUHJvYmxlbUxpc3QiLCJiYXRjaElkIiwiZ2V0QWxsUHJvYmxlbUluY2xvdWRSb290U3BlY2lhbEluc3BlY3RJZHMiLCJpZHMiLCJtYXAiLCJnZXRQbGFjZVByb2JsZW1MaXN0IiwiZ2V0TW9kZTExU3BlY2lsSW5zcGVjdEJ5UGxhY2VJZCIsInNwZWNpYWxfaW5zcGVjdF9pZCIsImRlbGV0ZUJhdGNoRHJhZnRQcm9ibGVtIiwiUmVwb3NpdG9yeSIsInB1c2giLCJsb2NhbERCIiwiZXhlY3V0ZVNxbCIsImNvbXBvbmVudHMiLCJwcm9wcyIsInR5cGUiLCJTdHJpbmciLCJwbGFjZWhvbGRlciIsIm1heGxlbmd0aCIsImJvcmRlckJvdHRvbSIsIkJvb2xlYW4iLCJkYXRhIiwidGV4dGFyZWFIZWlnaHQiLCJpc0xvY2siLCJibHVyVGltZSIsImNvbXB1dGVkIiwibGFzdExlbmd0aCIsImxlbmd0aCIsIm1vdW50ZWQiLCIkbmV4dFRpY2siLCJtZXRob2RzIiwib25mb2N1cyIsInRpbWUiLCJ3aW5kb3ciLCJjb3Jkb3ZhIiwicGx1Z2lucyIsIktleWJvYXJkIiwiJHJlZnMiLCJpbnB1dCIsImJsdXIiLCJjbG9zZSIsIiRlbWl0Iiwib25ibHVyIiwiRGF0ZSIsImdldFRpbWUiLCJzZXRTdGF0dXMiLCJsb2ciLCJib29sIiwib25pbnB1dCIsInNldFRpbWVvdXQiLCJzdWJzdHJpbmciLCJyZWYiLCJzdHlsZSIsImhlaWdodCIsImF0dHJzIiwiZG9tUHJvcHMiLCJJbmZpbml0eSIsIl9lIiwiY2xhc3NTZXQiLCJ0ZXh0IiwiY2xvc2VQb3B1cCIsImlzTG9hZGluZyIsInRpdGxlIiwiaXNJbWciLCJzcmMiLCJyZWFkeSIsImdldFRodW1ibmFpbCIsImltZ0Vycm9yIiwiaW1nQ2xpY2siLCJ2YWwiLCJpbnN0YW5jZSIsIlZ1ZSIsImV4dGVuZCIsImRpYWxvZyIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYm9keSIsImFwcGVuZENoaWxkIiwiJGVsIiwiX2FwcGVuZFRvQ0MiLCJDaGVja1F1YWxpdHlQcm9ibGVtQ0NSZXBvc2l0b3J5IiwiZ2V0UHJvYmxlbUNDQWxsQ29sdW1uIiwiY2NMaXN0Iiwic29tZSIsImNjIiwidXBkYXRlUHJvYmxlbVJlYWRpbmdUaW1lIiwidXNlcl9uYW1lIiwicmVhZGluZ190aW1lIiwiVXRpbHMiLCJnZXROb3dEYXRlIiwiYXBwZW5kQ0MiLCJfZ2V0UHJvYmxlbUxvY2FsU3RhdHVzIiwic3RhdHVzVGV4dCIsIiRxIiwic3RhdHVzX3RleHQiLCJnZXRDaGVja1Byb2JsZW1EcmFmdExpc3QiLCJDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeSIsIiRsb2ciLCJnZXRDaGVja1Byb2JsZW1MaXN0IiwidXNlcklkIiwiZGF0YVJlc3VsdCIsImwiLCJnZXRQcm9ibGVtTG9jYWxTdGF0dXMiLCJyZXN1bHQiLCJnZXRDaGVja1Byb2JsZW1Db3VudCIsImRhdGFDb3VudCIsInRvdGFsIiwiYWxsIiwiZ2V0Q2hlY2tQcm9ibGVtIiwiQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcGFpclJlcG9zaXRvcnkiLCJnZXRSZXBhaXIiLCJDaGVja1F1YWxpdHlQcm9ibGVtUmVpbnNwZWN0UmVwb3NpdG9yeSIsImdldE11dGxpUmVpbnNwZWN0IiwiZ2V0Q0MiLCJnZXRSZWluc3BlY3RCeUxpc3QiLCJyZXN1bHRzIiwicmVpbnNwZWN0QnlMaXN0IiwicmVwYWlyU2V0IiwiaGFzX3JlYWQiLCJyZWluc3BlY3RTZXQiLCJpc0VtcHR5IiwiY2NTZXQiLCJjY19zZXRfaWRfYXJyYXkiLCJjY19zZXRfbmFtZV9hcnJheSIsImNjU2V0QWxsIiwiY2Nfc2V0X2FsbF9pZF9hcnJheSIsInJlZ2lzdF9ieSIsInNlbnRfYmFja19ieSIsInJlcGFpcl9ieSIsInJlaW5zcGVjdF9ieSIsIlByb2plY3RTZXJ2aWNlIiwiZ2V0QWxsUHJvamVjdFVzZXJzIiwidXNlcnMiLCJyZWdpc3RVc2VyIiwic2VudEJhY2tVc2VyIiwicmVwYWlyVXNlciIsInJlaW5zcGVjdFVzZXIiLCJyZWluc3BlY3QiLCJyZWluc3BlY3RfZGF0ZSIsInJlaW5zcGVjdEJ5SWQiLCJmaWx0ZXIiLCJzdWJtaXQiLCJ0b2RvTW9kdWxlQ29kZSIsIm5lZWRSZXBhaXIiLCJyZXBhaXJfZGVhZGxpbmUiLCJyZWdpc3RfZGF0ZSIsImNyZWF0ZWRfb24iLCJzdHJpbmdpZnkiLCJDaGVja1F1YWxpdHlQcm9ibGVtTG9nUmVwb3NpdG9yeSIsInNhdmVQcm9ibGVtU3RhdHVzTG9nIiwiRGF0YVN5bmNocm9uaXplciIsImFkZFN5bmNHcm91cCIsIlRvZG9TZXJ2aWNlIiwic2F2ZVRvZG8iLCJtb2R1bGVfY29kZSIsIl9zdWJtaXRQcm9ibGVtV2l0aG91dE5lZWRSZXBhaXIiLCJkYXRlIiwic2V0RGF0ZSIsImdldERhdGUiLCJtb21lbnQiLCJmb3JtYXQiLCJpbnNlcnRUb2RvRGF0YSIsInNhdmUiLCJ0ZXN0IiwibW9kZSIsImNvbnRyYWN0X2lkIiwiY29udHJhY3QiLCJkZWR1Y3Rpb25fbGV2ZWwiLCJ1cGRhdGUiLCJ1dWlkIiwiaW5zZXJ0IiwiZGVsZXRlIiwicSIsIm1vZHVsZUNvZGUiLCJyZXBhaXJfZGF0ZSIsInJlcGFpckltYWdlRmlsZSIsImV4aXN0c1Byb2JsZW0iLCJyZXBhaXJQcm9ibGVtIiwicmVwYWlyX3JlbWFyayIsInNvcnQiLCJnZXRUb2RvU29ydCIsImNsb3NlX2RhdGUiLCJzZW50X2JhY2tfdGltZXMiLCJyZWluc3BlY3RQYXNzIiwicmVpbnNwZWN0SWQiLCJyZWluc3BlY3RJbWFnZUZpbGUiLCJub3ciLCJsaXN0IiwiYWxsRG9uZSIsImV2ZXJ5IiwicmVzcGVjdF9ieSIsInJlaW5zcGVjdF9jb21wbGV0ZWRfZGF0ZSIsInJlaW5zcGVjdFByb2JsZW1QYXNzIiwicmVpbnNwZWN0UmVqZWN0Iiwic3luY1F1ZXVlIiwic2VudF9iYWNrX3JlbWFyayIsInNlbnRfYmFja19kYXRlIiwic2VudEJhY2tJbWFnZUZpbGUiLCJyZWluc3BlY3RQcm9ibGVtUmVqZWN0IiwiY2xlYXJSZWluc3BlY3RCeURhdGEiLCJjaGVja3F1YWxpdHlfcHJvYmxlbV9pZCIsImNsb3NlX3JlYXNvbiIsImNsb3NlUHJvYmxlbSIsImNoYW5nZVJlcGFpciIsImlzQ29udHJhY3RvckNoYW5nZSIsInVwZGF0ZVByb2JsZW1Nb2RpZmllZEJ5IiwidXBkYXRlUHJvYmxlbUNvbnRyYWN0b3IiLCJjb250cmFjdG9ySWQiLCJjaGFuZ2VQcm9ibGVtUmVwYWlyZXIiLCJDaGVja1F1YWxpdHlQcm9ibGVtRnBJbmZvUmVwb3NpdG9yeSIsInNhdmVQcm9ibGVtRnBJbmZvIiwicmVwYWlyX3NldF9vbGQiLCJjaGFuZ2VSZWluc3BlY3QiLCJjaGFuZ2VQcm9ibGVtUmVpbnNwZWN0IiwicmVpbnNwZWN0SWRzIiwiam9pbiIsInJlaW5zcGVjdElkc09sZCIsInJlaW5zcGVjdF9zZXRfb2xkIiwiY2hhbmdlQ0MiLCJzYXZlUHJvYmxlbUNDIiwiY2hhbmdlQ29udHJhY3RvciIsImNoYW5nZVJlcGFpckRlYWRsaW5lIiwicmVwYWlyRGVhZGxpbmUiLCJ0b2RheSIsImlzX3RpbWVvdXQiLCJ1cGRhdGVQcm9ibGVtUmVwYWlyRGVhZGxpbmUiLCJnZXRQcm9ibGVtTG9jYWxTdGF0dXNCeUlkIiwic2F2ZVJlcGFpckluZm8iLCJwcm9ibGVtSWQiLCJyZXBhaXJSZW1hcmsiLCJnZXRDaGVja1Byb2JsZW1EcmFmdCIsIlRvZG9MaXN0U2VydmljZSIsImJhY2tVcERyYWZ0IiwicHJvYmxlbVJlYWQiLCJ0YWtlUGljdHVyZUFuZFNhdmUiLCJvcHRpb25zIiwidGFrZVBpY3R1cmUiLCJpbWFnZSIsIkJhdGNoU2VydmljZSIsImdldEJhdGNoIiwiYmF0Y2giLCJzYXZlQnlQaWN0dXJlIiwicGF0aCIsInRlbXAiLCJ3aGVuIiwiY3JlYXRlUHJvYmxlbSIsInBpY3R1cmVQYXRoIiwiYWxsb3dTZWxlY3RQaWN0dXJlIiwiR2xvYmFsU3RvcmFnZVJlcG9zaXRvcnkiLCJnZXRWYWx1ZSIsInJlaW5zcGVjdEJ5Q29uZmxpY3QiLCJ1cGxvYWRSZXN1bHQiLCJyZW1vdmVQcm9ibGVtUmVpbnNwZWN0QnkiLCJpbnNlcnRSZWluc3BlY3RCeUxpc3QiLCJUb2RvUmVwb3NpdG9yeSIsInJlbW92ZVByb2JsZW1Ub2RvIiwiaW5zZXJ0VG9kb0xpc3QiLCJ0b2RvIiwiY29weVByb2JsZW0iLCJnZXRQcm9ibGVtQWxsQ29sdW1uIiwiZ2V0UmVwYWlyQWxsQ29sdW1uIiwiZ2V0UmVpbnNwZWN0QWxsQ29sdW1uIiwicmVwYWlyTGlzdCIsInJlaW5zcGVjdExpc3QiLCJtb2RpZmllZF9ieSIsImRvd25sb2FkX3RpbWUiLCJ1cGRhdGVfdGltZXN0YW1wIiwiYXJyIiwibWF0Y2giLCJwYXJzZUludCIsImRlYWRsaW5lRGF0ZSIsImFycjIiLCJyZWdpc3REYXRlIiwiTWF0aCIsImNlaWwiLCJlYWNoIiwiZGVmYXVsdENjTGlzdCIsImluc2VydFJlaW5zcGVjdCIsInNhdmVEZWZhdWx0Q2MiLCJyZW1vdmVMb2NhbEludmFsaWRQcm9ibGVtIiwicHJvbWlzZSIsInByb2JsZW1fcmVwYWlyIiwicmVtb3ZlSW52YWxpZERhdGEiLCJwcm9ibGVtX3JlaW5zcGVjdCIsInByb2JsZW1fY2MiLCJjaGlsZHJlbl9Qcm9ibGVtIiwicmVtb3ZlSW52YWxpZENoaWxkUHJvYmxlbSIsInJlbW92ZUxvY2FsSW52YWxpZFByb2JsZW0xIiwicmVtb3RlRGF0YSIsImxvY2FsRGF0YSIsImNoZWNrcXVhbGl0eV9wcm9ibGVtIiwiZGVsZXRlUHJvYmxlbUJ5SWQiLCJjaGVja3F1YWxpdHlfcmVwYWlyIiwiY2hlY2txdWFsaXR5X2NjIiwicmVtb3ZlQ2xvc2VkQmF0Y2hQcm9ibGVtIiwiZ2V0Q2xvc2VkQmF0Y2hJZExpc3QiLCJiYXRjaElkcyIsImRlbGV0ZUJhdGNoUHJvYmxlbXMiLCJnZXRQcm9ibGVtc0J5QmF0Y2giLCJwcm9ibGVtcyIsImltYWdlQ29sdW1ucyIsImZpbGVzIiwiaW1hZ2VzIiwibG9jYWwiLCJmaWxlIiwicGx1Z2luQXBpIiwiaXNGaWxlRXhpc3RzIiwiZXhpc3RzIiwiZGVsZXRlRmlsZSIsImRlbGV0ZVByb2JsZW1CeUJhdGNoIiwiZ2V0TGVhZGVyQ29tbWVudHMiLCJnZXRQaG90b1JlcXVpcmVkIiwicHJvaklkIiwicGhvdG9HcmF5Iiwic3RvcmUiLCJzdGF0ZSIsImdsb2JhbCIsImFsbEdyYXlSZWxlYXNlIiwiVXNpbmdQcm9qZWN0UGFyYW1ldGVyIiwiQ29tbW9uQmFzZWRhdGFTZXJ2aWNlIiwiZ2V0UHJvalBhcmFtZXRlciIsImlzUGhvdG9SZXF1aXJlZCIsIkl0ZW1MaXN0IiwiZWRpdCIsInBuZ19lbXB0eSIsIm9wZW5Qcm9ibGVtRGV0YWlsIiwiZm9ybWF0RGF0ZSIsInVucmVhZCIsIm5ldHdvcmtUZXN0IiwibWVzc2FnZSIsIm5ldHdvcmsiLCJnZXRIYXNOZXR3b3JrIiwiUG9wdXAiLCJhbGVydCIsImNvbmZpcm0iLCJva1RleHQiLCJjYW5jZWxUZXh0IiwiY2xhc3NOYW1lIiwicG9wIiwibG9hZGluZyIsIm1lYXN1cmVDaGVja0l0ZW1zUmVzdCIsImNoZWNrSXRlbXMiLCJzcGVjaWFsX2luc3BlY3RfaWRzIiwiV2ViU2VydmljZSIsInBvc3QiLCJlcnJjb2RlIiwiY2hlY2tJdGVtc1Byb21pc2UiLCJzaURhdGEiLCJtZWFzdXJlSXRlbURhdGEiLCJncm91cF9pZCIsIm1lYXN1cmVtZW50X3BvaW50cyIsInByb2JsZW1fcG9pbnRzIiwicHJvYmxlbV92YWx1ZXNfemlwIiwic3BlY2lhbFVwZGF0YSIsInVwZGF0ZVNwZWNpYWxJbnNwZWN0RGF0YSIsIm1lYXN1cmVJdGVtIiwidXBkYXRlU3BlY2lhbEluc3BlY3RNZWFzdXJlSXRlbSIsInJlbW92ZUdyb3VwIiwicmVtb3ZlU3luY0dyb3VwIiwicG9zdERlbGV0ZVByb2JsZW0iLCJwb3N0UmVzdENoZWNrSXRlbVRlbXBsYXRlMTEiLCJwbGFjZUNoZWNraXRlbUlkIiwicHJvYmxlbUlkcyIsInBvc3REYXRhIiwicGxhY2VfY2hlY2tpdGVtX2lkIiwic3FsRGVsZXRlUHJvYmxlbSIsImNoZWNrZXIiLCJ1cGRhdGVQbGFjZVNwZWNpYWxJbnNwZWN0RGF0YSIsInBvc3RSZXN0UHJvYmxlbUNoZWNraXRlbSIsInJlc3RTcGVjaWFsRmllbGQiLCJzcGVjaWFsRGF0YSIsImdldFByb2JsZW1CeVNwZWNpYWxJbnNwZWN0IiwiaXNCdXNpbmVzc0xvZyIsImRlbGV0ZVByb2JsZW1BbGxJZHMiLCJkZWxldGVTeW5jIiwiZGVsZXRlTG9nIiwiQnVzaW5lc3NMb2dTZXJ2aWNlIiwiYWRkTG9nIiwicmVsYXRpb25faWQiLCJidXNpbmVzc190eXBlIiwiZXZlbnQiLCJkaXJlY3RpdmVzIiwicmF3TmFtZSIsImV4cHJlc3Npb24iLCJzbG90IiwiZGV0YWlsRGF0YSIsImNoZWNraXRlbVJ1bGUiLCJtb2RlbCIsImNhbGxiYWNrIiwiJCR2IiwicmVzdWx0VHlwZSIsInNhdmVEcmFmdCIsIiRzZXQiLCJlZGl0YWJsZSIsImRlbGV0ZURyYWZ0IiwiY2hlY2tJdGVtUmVzdCIsInN0YXRpY1N0eWxlIiwic2F2ZURyYWZ0QW5kQmFjayIsIm1peGlucyIsInNob3ciLCJzaG93TGlzdCIsImlzT3BlbmluZyIsImlzQ2xvc2luZyIsImNvbnRlbnRUb3AiLCJsaXN0SGVpZ2h0IiwiaXRlbUlkcyIsInRhcmdldCIsIndhdGNoIiwidiIsImNyZWF0ZWQiLCJkZXN0cm95ZWQiLCJvcGVuUG9wdXAiLCJwYXJhbXMiLCIkaGVhZCIsIm9mZnNldEhlaWdodCIsImJvdW5kaW5nIiwiYm90dG9tIiwibWluQnkiLCJpbm5lckhlaWdodCIsImdldERhdGEiLCJhZnRlckNsb3NlIiwib25DbGlja090aGVyIiwiZSIsImlzT3BlbiIsInRvZ2dsZUl0ZW0iLCJSRVBBSVJfREVBRExJTkVfU1RBVFVTIiwiTW9kdWxlIiwiQ0hFQ0siLCJDaGVja0d1aWRlIiwiU2Nyb2xsZXIiLCJJdGVtIiwiSXRlbUltZ0xpc3QiLCJJdGVtVGV4dGFyZWEiLCJSYWRpb0JveCIsIk51bWJlcklucHV0IiwiUHJvYmxlbUxpc3QiLCJpc0JhdGNoUGxhY2VNb2RlIiwiYWxsb3dSZXN0IiwiYWN0aXZhdGVkIiwiJHJvdXRlIiwicXVlcnkiLCIkcm91dGVyIiwiaXNCYWNrIiwiaW5pdCIsImdldERldGFpbERhdGEiLCJnZXRCYXRjaERhdGEiLCJnZXRSZXN1bHRUeXBlIiwic3RhdHVzU2V0Iiwicm91dGVOYW1lIiwibGlzdERhdGEiLCJpdGVtSWQiLCJzZWN0aW9uSWQiLCJtb2R1bGVBdHRyaWJ1dGUiLCIkc3RvcmUiLCJjaGVja1R5cGUiLCJjaGVjayIsInByb2Nlc3MiLCJpbml0QnlUeXBlIiwiaXNJbml0QnlCaWRzZWN0aW9uIiwiaW5pdEJ5Qmlkc2VjdGlvbiIsImluaXRCeU9wdGlvbnMiLCJpbml0QnlCYXRjaCIsImluaXRCeUlkIiwibWRhIiwic2V0VXN1YWxJdGVtcyIsIm1ta3ZDb2RlIiwibWVyZ2VBcnJheSIsIm9sZERhdGEiLCJzdWJpdGVtIiwibmV3UmVzIiwiY2xpY2tJdGVtIiwiZGVlcENsb25lIiwiT2JqZWN0IiwicG9wdXBDb3VudCIsImJhY2tCdXR0b25FdmVudCIsInpJbmRleCIsImNvbW1pdCIsImNsb3NlRm4iLCJhZGRCYWNrRXZlbnRRdWV1ZSIsImNsZWFyQmFja0J1dHRvbkV2ZW50IiwiaXNJbWFnZURvd25sb2FkaW5nIiwidXJsIiwib2JqIiwiaW5kZXgiLCJkb3dubG9hZEltYWdlIiwiaW1hZ2VMaXN0IiwiaXNOZWVkIiwia2V5MiIsInN1Yml0ZW1BIiwia2V5MyIsInN1Yml0ZW1CIiwia2V5NCIsInRvcCIsImN1cnJlbnRUYXJnZXQiLCJpdGVtSW5kZXgiLCJ0ZXh0SW5kZXgiLCJ0ZXh0QXJyIiwiY29udGVudEltYWdlIiwib3B0aW9uc1Byb21pc2UiLCJGdW5jdGlvbiIsImJlZm9yZU9wZW4iLCJvcGVuQ2hlY2tHdWlkZSIsImhhc0NoaWxkIiwiaW1nIiwiZGV0YWlsIiwiZm9vdGVyIiwiaXNTaG93TmV3U3RhdHVzIiwic3RhdHVzQ2xhc3NTZXQiLCJ0eXBlVGFnIiwiaXNVbnJlYWQiLCJpc1RpbWVvdXQiLCJpc1VyZ2VudCIsImlzUmV0dXJuIiwicmVwYWlyRGVhZGxpbmVTdGF0dXMiLCJiZ05ld0NsYXNzIiwi6I2J56i/Iiwi5pqC5a2YIiwi5qOA5p+l5LitIiwi5b6F5pW05pS5Iiwi5b6F5aSN6aqMIiwi5b6F6aqM5pS2Iiwi5b6F5oql6aqMIiwi5b6F55Sz6K+36L+b5Zy6Iiwi5b6F5Yid6aqMIiwi5b6F6YCB5qOAIiwi5b6F5LiK5Lyg5oql5ZGKIiwi5b6F6YCA5Zy6Iiwi5b6F5bu66K6+5Y2V5L2N6aqM5pS2Iiwi5b6F5Yy65Z+f6aqM5pS2Iiwi5bey5o+Q5LqkIiwi5bey5pW05pS5Iiwi5bey6aqM5pS2Iiwi5bey6YCa6L+HIiwi5bey6YCA5Zy6Iiwi5bey5YWz6ZetIiwi6Z2e5q2j5bi45YWz6ZetIiwi5bey6YCA5ZueIiwi5bey5a6M5oiQIiwi5bey55Sp6aG5Iiwi5qOA5p+l5a6M5q+VIiwi6YCB5qOA5ZCI5qC8Iiwi5aSN6aqM5ZCI5qC8Iiwi6aqM5pS25ZCI5qC8Iiwi6aqM5pS25LiN5ZCI5qC8Iiwi5pyq6aqM5pS2Iiwi5b6F54K56K+EIiwi5bey54K56K+EIiwi5ZCI5qC8Iiwi5LiN5ZCI5qC8Iiwi6L+b5bqm5q2j5bi4Iiwi6L+b5bqm5rue5ZCOIiwi5pa95bel5Y2V5L2N6aqM5pS25ZCI5qC8Iiwi55uR55CG5Y2V5L2N6aqM5pS25ZCI5qC8Iiwi5bu66K6+5Y2V5L2N6aqM5pS25ZCI5qC8Iiwi5pa95bel5Y2V5L2N6aqM5pS25LiN5ZCI5qC8Iiwi55uR55CG5Y2V5L2N6aqM5pS25LiN5ZCI5qC8Iiwi5bu66K6+5Y2V5L2N6aqM5pS25LiN5ZCI5qC8IiwiX2ciLCIkbGlzdGVuZXJzIiwiJHNsb3RzIiwiX3QiLCJpbmNsdWRlcyIsIl9mIl0sIm1hcHBpbmdzIjoieUtBR0EsSUFBSUEsRUFBVSxFQUFRLFFBQ0EsaUJBQVpBLElBQXNCQSxFQUFVLENBQUMsQ0FBQ0MsRUFBT0MsRUFBSUYsRUFBUyxNQUM3REEsRUFBUUcsU0FBUUYsRUFBT0csUUFBVUosRUFBUUcsU0FHL0JFLEVBREgsRUFBUSxRQUEwRkMsU0FDM0YsV0FBWU4sR0FBUyxFQUFNLENBQUMsV0FBWSxFQUFNLFlBQWEsSyx1QkNMNUUsSUFBSUEsRUFBVSxFQUFRLFFBQ0EsaUJBQVpBLElBQXNCQSxFQUFVLENBQUMsQ0FBQ0MsRUFBT0MsRUFBSUYsRUFBUyxNQUM3REEsRUFBUUcsU0FBUUYsRUFBT0csUUFBVUosRUFBUUcsU0FHL0JFLEVBREgsRUFBUSxRQUE2RkMsU0FDOUYsV0FBWU4sR0FBUyxFQUFNLENBQUMsV0FBWSxFQUFNLFlBQWEsSyxrQ0NSNUUsSUNBa2MsRSxVQUFHLEUsd0JDUWpjTyxFQUFZLFlBQ2QsR0ZUVyxXQUFhLElBQUlDLEVBQUlDLEtBQVNDLEVBQUdGLEVBQUlHLGVBQW1CQyxFQUFHSixFQUFJSyxNQUFNRCxJQUFJRixFQUFHLE9BQU9FLEVBQUcsTUFBTSxDQUFDRSxZQUFZLGtCQUFrQkMsTUFBTyxTQUFXUCxFQUFJUSxNQUFRLElBQU1SLEVBQUlTLGFBQWNULEVBQUlVLEdBQUlWLEVBQVcsU0FBRSxTQUFTVyxFQUFLQyxHQUFLLE9BQU9SLEVBQUcsT0FBTyxDQUFDUSxJQUFJQSxFQUFJTixZQUFZLFlBQVlDLE1BQU0sQ0FDeFJNLFNBQ3NCLFVBQXBCYixFQUFJYyxZQUNBZCxFQUFJZSxR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ODcxNDQ1MTE5NSIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC1kcm9wLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTJjYWM4ODY0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiMWI1YjA3ZGVcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wcm9ibGVtLWxpc3QudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGNmYTc3ZTQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIxZGZhZThhMVwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcInJlZGlvLWJveC1ncm91cFwiLGNsYXNzOihcImFsaWduLVwiICsgX3ZtLmFsaWduICsgXCIgXCIgKyBfdm0uY3VzdG9tQ2xhc3MpfSxfdm0uX2woKF92bS5vcHRpb25zKSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCdzcGFuJyx7a2V5OmtleSxzdGF0aWNDbGFzczpcInJhZGlvLWJveFwiLGNsYXNzOntcbiAgICAgIHNlbGVjdGVkOlxuICAgICAgICBfdm0ub3B0aW9uc1R5cGUgPT09ICdhcnJheSdcbiAgICAgICAgICA/IF92bS52YWx1ZSA9PT0gaXRlbVxuICAgICAgICAgIDogX3ZtLm9wdGlvbnNUeXBlID09PSAnb2JqZWN0J1xuICAgICAgICAgID8gX3ZtLnZhbHVlID09PSBrZXlcbiAgICAgICAgICA6IGZhbHNlLFxuICAgIH0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5vblNlbGVjdChrZXkpfX19LFtfdm0uX3YoXCJcXG4gICAgXCIrX3ZtLl9zKGl0ZW0pK1wiXFxuICBcIildKX0pKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1iMGEzMDkyNCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1iMGEzMDkyNCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJiMGEzMDkyNFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8qXG4gKiBAQXV0aG9yOiBqaWFuZ2wwMlxuICogQERhdGU6IDIwMjAtMDYtMTEgMTY6NTg6MzVcbiAqIEBMYXN0RWRpdG9yczogamlhbmdsMDJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjAtMDYtMTYgMDE6NTQ6NTRcbiAqIEBEZXNjcmlwdGlvbjog5LiT6aG55beh5qOA6Zeu6aKYIHNlcnZpY2VcbiAqL1xuXG5pbXBvcnQgU3BlY2lhbEluc3BlY3RSZXBvc2l0b3J5IGZyb20gJ0BzcmMvcmVwb3NpdG9yaWVzL3NwZWNpYWwtaW5zcGVjdC1yZXBvc2l0b3J5JztcbmltcG9ydCBDaGVja1F1YWxpdHlQcm9ibGVtU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY2hlY2svY2hlY2stcHJvYmxlbS1zZXJ2aWNlJztcbmltcG9ydCBDb21tb25Sb29tU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL3Jvb20tc2VydmljZSc7XG5pbXBvcnQgQ29tbW9uRmxvb3JTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vZmxvb3Itc2VydmljZSc7XG5pbXBvcnQgbG9jYWxTdG9yYWdlIGZyb20gJ0BzcmMvZnJhbWV3b3JrL2xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgY29udGV4dCBmcm9tICdAc3JjL2ZyYW1ld29yay9jb250ZXh0JztcbmltcG9ydCBJbWFnZVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9pbWFnZS1zZXJ2aWNlJztcbmltcG9ydCBSZXBvc2l0b3J5IGZyb20gJy4vcmVwb3NpdG9yeS5qcyc7XG5pbXBvcnQgQmF0Y2hTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vYmF0Y2gtc2VydmljZSc7XG5pbXBvcnQgU3BlY2lhbEluc3BlY3RTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9zcGVjaWFsLWluc3BlY3Qvc3BlY2lhbC1pbnNwZWN0LXNlcnZpY2UnO1xuXG5jb25zdCBjdXJyZW50VXNlciA9IGNvbnRleHQuZ2V0VXNlcigpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRlZmF1bHRQbGFjZUtleTogJ3NwZWNpYWwtaW5zcGVjdC1wcm9sYmVtLXB1cmUtZGVmYXVsdC1wbGFjZScsXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb246IOiOt+WPlumXrumimOaVsOaNrlxuICAgKiBAcGFyYW0ge3R5cGV9IGlkIOmXrumimGlk77yMY2hlY2txdWFsaXR5X3Byb2JsZW0g6KGo5Li76ZSuXG4gICAqIEByZXR1cm46IHByb21pc2UgLT4gT2JqZWN0XG4gICAqL1xuICBnZXRQcm9ibGVtRGF0YShpZCkge1xuICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtU2VydmljZS5nZXRDaGVja1Byb2JsZW1JbmZvKGlkKVxuICAgICAgLnRoZW4ocCA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4ucCxcbiAgICAgICAgICBpZDogcC5pZCxcbiAgICAgICAgICBzdGF0dXM6IHAuc3RhdHVzLFxuICAgICAgICAgIHByb2pfaWQ6IHAucHJval9pZCxcbiAgICAgICAgICBwbGFjZToge1xuICAgICAgICAgICAgYnVpbGRpbmdfaWQ6IHAuYnVpbGRpbmdfaWQsXG4gICAgICAgICAgICB1bml0X2lkOiBwLnVuaXQsXG4gICAgICAgICAgICBmbG9vcjogcC5mbG9vcixcbiAgICAgICAgICAgIHJvb21faWQ6IHAucm9vbV9pZCxcbiAgICAgICAgICAgIGZ1bGxfbmFtZTogcC5wbGFjZSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJpZHNlY3Rpb25faWQ6IHAuYmlkc2VjdGlvbl9pZCxcbiAgICAgICAgICBiYXRjaF9pZDogcC5iYXRjaF9pZCxcbiAgICAgICAgICBiYXRjaF90eXBlOiBwLmJhdGNoX3R5cGUsXG4gICAgICAgICAgY3JlYXRlZF9ieTogcC5jcmVhdGVkX2J5LFxuICAgICAgICAgIGNoZWNrSXRlbToge1xuICAgICAgICAgICAgaWQ6IHAuaXRlbV9pZCxcbiAgICAgICAgICAgIG5hbWU6IHAuaXRlbV9uYW1lLFxuICAgICAgICAgICAgZnVsbF9uYW1lOiBwLml0ZW1fZnVsbF9uYW1lLFxuICAgICAgICAgICAgcGFyZW50SWQ6IHAuaXRlbV9wYXJlbnRfaWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgICAgICAgaWQ6IHAuZGVzY19pZCxcbiAgICAgICAgICAgIG5hbWU6IHAuZGVzYyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGltYWdlX2ZpbGU6IEpTT04ucGFyc2UocC5pbWFnZV9maWxlIHx8ICdbXScpLFxuICAgICAgICAgIHJlbWFyazogcC5yZW1hcmssXG4gICAgICAgICAgcmVwYWlyX3JlcXVpcmVtZW50czogcC5yZXBhaXJfcmVxdWlyZW1lbnRzLCAvLyDmlbTmlLnopoHmsYJcbiAgICAgICAgICBsZXZlbDogcC5lbWVyZ2VuY3lfZGVncmVlIHx8ICfkuIDoiKwnLFxuICAgICAgICAgIGRlYWRsaW5lOiBwLmRlYWRsaW5lID09PSB1bmRlZmluZWQgfHwgcC5kZWFkbGluZSA9PT0gbnVsbCA/IDcgOiBOdW1iZXIocC5kZWFkbGluZSksXG4gICAgICAgICAgYnVpbGRpbmdfaWQ6IHAuYnVpbGRpbmdfaWQsXG4gICAgICAgICAgdW5pdDogcC51bml0LFxuICAgICAgICAgIGZsb29yOiBwLmZsb29yLFxuICAgICAgICAgIHJvb21faWQ6IHAucm9vbV9pZCxcbiAgICAgICAgICBwbGFjZV9wb2ludDogSlNPTi5wYXJzZShwLnByb2JsZW1fdmFsdWVzIHx8ICdbXScpLFxuICAgICAgICAgIGRyYXdpbmdfZmlsZTogSlNPTi5wYXJzZShwLmRyYXdpbmdfZmlsZSB8fCAnW10nKSxcbiAgICAgICAgICByZXBhaXJfc2V0OiBwLnJlcGFpcl9zZXQsXG4gICAgICAgICAgcHJvY2Vzc19tb2RlOiBwLnByb2Nlc3NfbW9kZSxcbiAgICAgICAgICAvLyDmlbTmlLnkurpcbiAgICAgICAgICByZXBhaXI6XG4gICAgICAgICAgICBwLnJlcGFpciAmJiBwLnJlcGFpci5pZFxuICAgICAgICAgICAgICA/IHsgLi4ucC5yZXBhaXIgfVxuICAgICAgICAgICAgICA6IHAucmVwYWlyX3NldCAmJiBwLnJlcGFpcl9zZXQuaWRcbiAgICAgICAgICAgICAgPyB7IC4uLnAucmVwYWlyX3NldCB9XG4gICAgICAgICAgICAgIDoge30sXG4gICAgICAgICAgcmVwYWlyX2ltYWdlX2ZpbGU6IEpTT04ucGFyc2UocC5yZXBhaXJfaW1hZ2VfZmlsZSB8fCAnW10nKSxcbiAgICAgICAgICAvLyDotKPku7vljZXkvY1cbiAgICAgICAgICBjb250cmFjdG9yOiB7IGlkOiBwLmNvbnRyYWN0b3JfaWQsIG5hbWU6IHAuY29udHJhY3Rvcl9uYW1lIH0sXG4gICAgICAgICAgLy8g5aSN6aqM5Lq6XG4gICAgICAgICAgcmVpbnNwZWN0X3NldDogcC5yZWluc3BlY3Rfc2V0LFxuICAgICAgICAgIC8vIOaKhOmAgeS6ulxuICAgICAgICAgIGNjX3NldDogcC5jY19zZXRfYXJyYXkgfHwgW10sXG5cbiAgICAgICAgICAvLyDpgIDlm57kurpcbiAgICAgICAgICBzZW50X2JhY2s6IHAuc2VudF9iYWNrICYmIHAuc2VudF9iYWNrLmlkID8geyAuLi5wLnNlbnRfYmFjayB9IDoge30sXG4gICAgICAgICAgc2VudF9iYWNrX2ltYWdlX2ZpbGU6IEpTT04ucGFyc2UocC5zZW50X2JhY2tfaW1hZ2VfZmlsZSB8fCAnW10nKSxcblxuICAgICAgICAgIHJlZ2lzdDoge1xuICAgICAgICAgICAgaWQ6IHAucmVnaXN0LmlkLFxuICAgICAgICAgICAgbmFtZTogcC5yZWdpc3QubmFtZSxcbiAgICAgICAgICAgIG1vYmlsZTogcC5yZWdpc3QubW9iaWxlLFxuICAgICAgICAgICAgaXNfaW1fdXNlcjogcC5yZWdpc3QuaXNfaW1fdXNlcixcbiAgICAgICAgICB9LFxuICAgICAgICAgIGN1cnJlbnRSZWluc3BlY3RCeTogXy5maW5kKF8uY2xvbmUocC5yZWluc3BlY3RCeSksIGl0ZW0gPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IGNvbnRleHQuZ2V0VXNlcigpLnVzZXJfaWQ7XG4gICAgICAgICAgfSkgfHwgeyByZWluc3BlY3RfaW1hZ2VfZmlsZTogW10sIHJlaW5zcGVjdF9yZW1hcms6ICcnIH0sXG4gICAgICAgIH07XG4gICAgICB9KVxuICAgICAgLnRoZW4ocHJvYmxlbURhdGEgPT4ge1xuICAgICAgICBsZXQgYml6SWQgPSAocHJvYmxlbURhdGEgJiYgcHJvYmxlbURhdGEuYml6X2lkKSB8fCAnJztcbiAgICAgICAgaWYgKCFiaXpJZCkge1xuICAgICAgICAgIHJldHVybiBwcm9ibGVtRGF0YTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOiOt+WPlumXrumimOajgOafpemhue+8jOajgOafpemhueWtmOWcqCBzcGVjaWFsX2luc3BlY3Qg6KGoXG4gICAgICAgIC8vIGJpel9pZCDlj6/og73mmK8gc3BlY2lhbF9pbnNwZWN0IOS4u+mUru+8jOS5n+WPr+iDveaYryBzcGVjaWFsX2luc3BlY3RfcGxhY2VfY2hlY2tpdGVtIOS4u+mUrlxuICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RSZXBvc2l0b3J5LmdldFNwZWNpYWxJbnNwZWN0RGF0YShiaXpJZCkudGhlbihyZXMgPT4ge1xuICAgICAgICAgIC8vIGlmIChyZXMpIHtcbiAgICAgICAgICBwcm9ibGVtRGF0YS5jaGVja0l0ZW0gPSB7XG4gICAgICAgICAgICBpZDogcmVzLmNoZWNraXRlbV9pZCxcbiAgICAgICAgICAgIG5hbWU6IHJlcy5jaGVja2l0ZW1fbmFtZSxcbiAgICAgICAgICAgIGZ1bGxfbmFtZTogcmVzLmNoZWNraXRlbV9mdWxsX25hbWUsXG4gICAgICAgICAgICBwYXJlbnRJZDogcmVzLmNoZWNraXRlbV9wYXJlbnRfaWQsXG4gICAgICAgICAgfTtcbiAgICAgICAgICBwcm9ibGVtRGF0YS5zcGVjaWFsSW5zcGVjdElkID0gcmVzLmlkO1xuICAgICAgICAgIHJldHVybiBwcm9ibGVtRGF0YTtcbiAgICAgICAgICAvKiB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFNwZWNpYWxJbnNwZWN0UmVwb3NpdG9yeS5nZXRNb2RlMTFTcGVjaWFsSW5zcGVjdERhdGFCeUJpeklkKGJpeklkKS50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5jaGVja0l0ZW0gPSB7XG4gICAgICAgICAgICAgICAgaWQ6IGRhdGEuY2hlY2tpdGVtX2lkLFxuICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEuY2hlY2tpdGVtX25hbWUsXG4gICAgICAgICAgICAgICAgZnVsbF9uYW1lOiBkYXRhLmNoZWNraXRlbV9mdWxsX25hbWUsXG4gICAgICAgICAgICAgICAgcGFyZW50SWQ6IGRhdGEuY2hlY2tpdGVtX3BhcmVudF9pZCxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEuc3BlY2lhbEluc3BlY3RJZCA9IGRhdGEuaWQ7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHByb2JsZW1EYXRhO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSAqL1xuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAudGhlbihwcm9ibGVtRGF0YSA9PiB7XG4gICAgICAgIC8vIOiOt+WPlumXrumimOeahOaJueasoeS/oeaBr+WSjOajgOafpeS6ulxuICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLmdldEJhdGNoRGV0YWlsQW5kQ2hlY2tlcnMocHJvYmxlbURhdGEuYmF0Y2hfaWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICBwcm9ibGVtRGF0YS5iYXRjaERldGFpbCA9IHJlcztcbiAgICAgICAgICByZXR1cm4gcHJvYmxlbURhdGE7XG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbjog5Yib5bu65paw6Zeu6aKYXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBzcGVjaWFsSW5zcGVjdElkIOS4k+mhueW3oeajgGlk77yMc3BlY2lhbF9pbnNwZWN0IOihqOS4u+mUru+8jOW/heWhq1xuICAgKiBAcGFyYW0ge1N0cmluZ30gcGxhY2VJZCDmtYvljLppZO+8jHNwZWNpYWxfaW5zcGVjdF9wbGFjZSDooajkuLvplK7vvIzpgInloatcbiAgICogQHJldHVybjogUHJvbWlzZSAtPiBPYmplY3RcbiAgICovXG4gIGNyZWF0ZU5ld0RhdGEoc3BlY2lhbEluc3BlY3RJZCwgcGxhY2VJZCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoIXNwZWNpYWxJbnNwZWN0SWQpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCfkuJPpobnlt6Hmo4DvvIzliJvlu7rpl67popjvvIznvLrlsJEgc3BlY2lhbEluc3BlY3RJZCcpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwbGFjZUlkKSB7XG4gICAgICAgICAgLy8g5pyJ5rWL5Yy677yM6I635Y+W5rWL5Yy65qOA5p+l6aG55LiK55qE5pWw5o2uXG4gICAgICAgICAgcmV0dXJuIFNwZWNpYWxJbnNwZWN0UmVwb3NpdG9yeS5nZXRQbGFjZVNwZWNpYWxJbnNwZWN0RGF0YShzcGVjaWFsSW5zcGVjdElkLCBwbGFjZUlkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDml6DmtYvljLrml7bvvIzojrflj5bkuJPpobnlt6Hmo4Dmo4Dmn6XpobnmlbDmja5cbiAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RSZXBvc2l0b3J5LmdldFNwZWNpYWxJbnNwZWN0Q2hlY2tJdGVtRGV0YWlsKHNwZWNpYWxJbnNwZWN0SWQpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnRoZW4oc3BlY2lhbEluc3BlY3REYXRhID0+IHtcbiAgICAgICAgLy8g6buY6K6k6YOo5L2NXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGlmIChwbGFjZUlkKSB7XG4gICAgICAgICAgICAgIHJldHVybiBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkuZ2V0QmF0Y2hQbGFjZShwbGFjZUlkKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcy5idWlsZGluZ19pZCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYnVpbGRpbmdfaWQ6IHJlcy5idWlsZGluZ19pZCxcbiAgICAgICAgICAgICAgICAgICAgdW5pdF9pZDogcmVzLnVuaXQsXG4gICAgICAgICAgICAgICAgICAgIGZsb29yOiByZXMuZmxvb3IsXG4gICAgICAgICAgICAgICAgICAgIHJvb21faWQ6IHJlcy5yb29tX2lkLFxuICAgICAgICAgICAgICAgICAgICBmdWxsX25hbWU6IHJlcy5uYW1lLFxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4oZGVmYXVsdFBsYWNlID0+IHtcbiAgICAgICAgICAgIHNwZWNpYWxJbnNwZWN0RGF0YS5kZWZhdWx0UGxhY2UgPVxuICAgICAgICAgICAgICBkZWZhdWx0UGxhY2UgfHxcbiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmdldE9iamVjdCh0aGlzLmRlZmF1bHRQbGFjZUtleSwgbG9jYWxTdG9yYWdlLmxldmVsLnVzZXIpIHx8XG4gICAgICAgICAgICAgIHt9O1xuICAgICAgICAgICAgcmV0dXJuIHNwZWNpYWxJbnNwZWN0RGF0YTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAudGhlbihzcGVjaWFsSW5zcGVjdERhdGEgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN0YXR1czogJycsXG4gICAgICAgICAgcHJval9pZDogc3BlY2lhbEluc3BlY3REYXRhLnByb2pfaWQsXG4gICAgICAgICAgcGxhY2U6IHNwZWNpYWxJbnNwZWN0RGF0YS5kZWZhdWx0UGxhY2UgfHwge30sXG4gICAgICAgICAgYmF0Y2hfaWQ6IHNwZWNpYWxJbnNwZWN0RGF0YS5iYXRjaF9pZCxcbiAgICAgICAgICBiYXRjaF90eXBlOiAn5LiT6aG55beh5qOAJyxcbiAgICAgICAgICBjaGVja0l0ZW06IHtcbiAgICAgICAgICAgIGlkOiBzcGVjaWFsSW5zcGVjdERhdGEuaXRlbV9pZCB8fCBzcGVjaWFsSW5zcGVjdERhdGEuY2hlY2tpdGVtX2lkLFxuICAgICAgICAgICAgbmFtZTogc3BlY2lhbEluc3BlY3REYXRhLml0ZW1fbmFtZSB8fCBzcGVjaWFsSW5zcGVjdERhdGEuY2hlY2tpdGVtX25hbWUsXG4gICAgICAgICAgICBmdWxsX25hbWU6IHNwZWNpYWxJbnNwZWN0RGF0YS5mdWxsX25hbWUgfHwgc3BlY2lhbEluc3BlY3REYXRhLmNoZWNraXRlbV9mdWxsX25hbWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjoge30sXG4gICAgICAgICAgaW1hZ2VfZmlsZTogW10sXG4gICAgICAgICAgcmVtYXJrOiAnJyxcbiAgICAgICAgICBsZXZlbDogJ+S4gOiIrCcsXG4gICAgICAgICAgZGVhZGxpbmU6IDcsXG4gICAgICAgICAgcmVwYWlyX3NldDoge30sXG4gICAgICAgICAgY29udHJhY3Rvcjoge30sXG4gICAgICAgICAgY2Nfc2V0OiBbXSxcbiAgICAgICAgICByZWluc3BlY3Rfc2V0OiBbXSxcbiAgICAgICAgICBiaWRzZWN0aW9uX2lkOiAnJyxcbiAgICAgICAgICBidWlsZGluZ19pZDpcbiAgICAgICAgICAgIChzcGVjaWFsSW5zcGVjdERhdGEuZGVmYXVsdFBsYWNlICYmIHNwZWNpYWxJbnNwZWN0RGF0YS5kZWZhdWx0UGxhY2UuYnVpbGRpbmdfaWQpIHx8ICcnLFxuICAgICAgICAgIHVuaXQ6IChzcGVjaWFsSW5zcGVjdERhdGEuZGVmYXVsdFBsYWNlICYmIHNwZWNpYWxJbnNwZWN0RGF0YS5kZWZhdWx0UGxhY2UudW5pdF9pZCkgfHwgJycsXG4gICAgICAgICAgZmxvb3I6IChzcGVjaWFsSW5zcGVjdERhdGEuZGVmYXVsdFBsYWNlICYmIHNwZWNpYWxJbnNwZWN0RGF0YS5kZWZhdWx0UGxhY2UuZmxvb3IpIHx8ICcnLFxuICAgICAgICAgIHJvb21faWQ6XG4gICAgICAgICAgICAoc3BlY2lhbEluc3BlY3REYXRhLmRlZmF1bHRQbGFjZSAmJiBzcGVjaWFsSW5zcGVjdERhdGEuZGVmYXVsdFBsYWNlLnJvb21faWQpIHx8ICcnLFxuICAgICAgICAgIHBsYWNlX3BvaW50OiBbXSxcbiAgICAgICAgICBkZWR1Y3Rpb246IDEsXG4gICAgICAgICAgcmVkbGluZV9kZWR1Y3Rpb246IDAsXG4gICAgICAgICAgYml6X2lkOiBzcGVjaWFsSW5zcGVjdElkLFxuICAgICAgICAgIGJpel9jaGlsZHJlbl9pZDogc3BlY2lhbEluc3BlY3REYXRhLmlkLFxuICAgICAgICAgIGNyZWF0ZWRfYnk6IGN1cnJlbnRVc2VyLnVzZXJfaWQsXG4gICAgICAgICAgY2hlY2tpdGVtX2V4dGVuc2lvbjogSlNPTi5wYXJzZShzcGVjaWFsSW5zcGVjdERhdGEuY2hlY2tpdGVtX2V4dGVuc2lvbiB8fCAne30nKSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb246IOiOt+WPluaIt+Wei+Wbvu+8jOWPr+iOt+WPliDigJzmiLfigJ0g5ZKMIOKAnOWxguKAneeahOaIt+Wei+WbvlxuICAgKiBAcGFyYW0ge3R5cGV9XG4gICAqIEByZXR1cm46XG4gICAqL1xuICBnZXREaWFncmFtKHBsYWNlRGF0YSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcbiAgICAgIGlmICghcGxhY2VEYXRhKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbGV0IHsgYnVpbGRpbmdfaWQsIHVuaXRfaWQsIGZsb29yLCByb29tX2lkIH0gPSBwbGFjZURhdGE7XG4gICAgICBpZiAocm9vbV9pZCkge1xuICAgICAgICAvLyDmjInmiLfojrflj5bmiLflnovlm75cbiAgICAgICAgcmV0dXJuIENvbW1vblJvb21TZXJ2aWNlLmdldFJvb21UeXBlRGlhZ3JhbShyb29tX2lkKTtcbiAgICAgIH0gZWxzZSBpZiAodW5pdF9pZCAmJiBmbG9vcikge1xuICAgICAgICAvLyDmjInlsYLojrflj5bmiLflnovlm77vvIzliIbljZXlhYNcbiAgICAgICAgcmV0dXJuIENvbW1vbkZsb29yU2VydmljZS5nZXREaWFncmFtKGJ1aWxkaW5nX2lkLCB1bml0X2lkLCBmbG9vciwgMSk7XG4gICAgICB9IGVsc2UgaWYgKGZsb29yKSB7XG4gICAgICAgIC8vIOaMieWxguiOt+WPluaIt+Wei+Wbvu+8jOS4jeWIhuWNleWFg1xuICAgICAgICByZXR1cm4gQ29tbW9uRmxvb3JTZXJ2aWNlLmdldERpYWdyYW0oYnVpbGRpbmdfaWQsICcnLCBmbG9vciwgMik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbjog6I635Y+W6Zeu6aKY5YiX6KGoXG4gICAqIEBwYXJhbSB7U3RyaW5nIHwgQXJyYXl9IGJpeklkcyBzcGVjaWFsX2luc3BlY3Qg6KGo5Li76ZSuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwbGFjZUlkIOa1i+WMumlkXG4gICAqIEByZXR1cm46XG4gICAqL1xuICBnZXRQcm9ibGVtTGlzdChiaXpJZHMgPSBbXSwgcGxhY2VJZCkge1xuICAgIGJpeklkcyA9IEFycmF5LmlzQXJyYXkoYml6SWRzKSA/IGJpeklkcyA6IFtiaXpJZHNdO1xuXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIHJldHVybiBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkuZ2V0UHJvYmxlbUxpc3QoYml6SWRzLCBwbGFjZUlkKTtcbiAgICAgIH0pXG4gICAgICAudGhlbihwcm9ibGVtTGlzdCA9PiB7XG4gICAgICAgIChwcm9ibGVtTGlzdCB8fCBbXSkuZm9yRWFjaChwcm9ibGVtID0+IHtcbiAgICAgICAgICBwcm9ibGVtLnRodW1ibmFpbCA9IEltYWdlU2VydmljZS5nZXREZWZhdWx0VGh1bWJuYWlsRnJvbUxpc3QoXG4gICAgICAgICAgICBwcm9ibGVtLmltYWdlX2ZpbGUsXG4gICAgICAgICAgICAn5LiT6aG55beh5qOAJ1xuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKHByb2JsZW0uc3RhdHVzID09PSAn5qOA5p+l5a6M5q+VJykge1xuICAgICAgICAgICAgcHJvYmxlbS5zdGF0dXMgPSAn5bey5o+Q5LqkJztcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBwcm9ibGVtTGlzdDtcbiAgICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb246IOiOt+WPluaJueasoeeahOaJgOaciemXrumimFxuICAgKiBAcGFyYW0ge1N0cmluZ30gYmF0Y2hJZFxuICAgKiBAcmV0dXJuOiBQcm9taXNlXG4gICAqL1xuICBnZXRCYXRjaFByb2JsZW1MaXN0KGJhdGNoSWQpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIFNwZWNpYWxJbnNwZWN0UmVwb3NpdG9yeS5nZXRBbGxQcm9ibGVtSW5jbG91ZFJvb3RTcGVjaWFsSW5zcGVjdElkcyhiYXRjaElkKTtcbiAgICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBsZXQgaWRzID0gKHJlcyB8fCBbXSkubWFwKGl0ZW0gPT4gaXRlbS5pZCk7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByb2JsZW1MaXN0KGlkcyk7XG4gICAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uOiDojrflj5bmtYvljLrnmoTmiYDmnInpl67pophcbiAgICogQHBhcmFtIHtTdHJpbmd9IHBsYWNlSWRcbiAgICogQHJldHVybjpcbiAgICovXG4gIGdldFBsYWNlUHJvYmxlbUxpc3QocGxhY2VJZCkge1xuICAgIHJldHVybiBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkuZ2V0TW9kZTExU3BlY2lsSW5zcGVjdEJ5UGxhY2VJZChwbGFjZUlkKS50aGVuKHJlcyA9PiB7XG4gICAgICBsZXQgaWRzID0gKHJlcyB8fCBbXSkubWFwKGl0ZW0gPT4gaXRlbS5zcGVjaWFsX2luc3BlY3RfaWQpO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvYmxlbUxpc3QoaWRzLCBwbGFjZUlkKTtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uOiDliKDpmaTmibnmrKHnmoTmiYDmnInojYnnqL/pl67pophcbiAgICogQHBhcmFtIHt0eXBlfVxuICAgKiBAcmV0dXJuOlxuICAgKi9cbiAgZGVsZXRlQmF0Y2hEcmFmdFByb2JsZW0oYmF0Y2hJZCkge1xuICAgIHJldHVybiBSZXBvc2l0b3J5LmRlbGV0ZUJhdGNoRHJhZnRQcm9ibGVtKGJhdGNoSWQpO1xuICB9LFxufTtcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5yZWRpby1ib3gtZ3JvdXBbZGF0YS12LWIwYTMwOTI0XXtmb250LXNpemU6MDttYXJnaW4tdG9wOi0xMHB4fS56amFwcCAucmVkaW8tYm94LWdyb3VwLmFsaWduLWxbZGF0YS12LWIwYTMwOTI0XXt0ZXh0LWFsaWduOmxlZnR9LnpqYXBwIC5yZWRpby1ib3gtZ3JvdXAuYWxpZ24tcltkYXRhLXYtYjBhMzA5MjRde3RleHQtYWxpZ246cmlnaHR9LnpqYXBwIC5yYWRpby1ib3hbZGF0YS12LWIwYTMwOTI0XXtkaXNwbGF5OmlubGluZS1ibG9jaztoZWlnaHQ6MzRweDtsaW5lLWhlaWdodDozMnB4O21pbi13aWR0aDo2MHB4O3BhZGRpbmc6MCA1cHg7bWFyZ2luOjEwcHggMCAwIDEwcHg7Ym9yZGVyOjFweCBzb2xpZCAjZDlkOWQ5O2JhY2tncm91bmQ6I2ZmZjtjb2xvcjojNjY2O3ZlcnRpY2FsLWFsaWduOnRvcDtmb250LXNpemU6MTRweDt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXItcmFkaXVzOjNweH0uemphcHAgLnJhZGlvLWJveFtkYXRhLXYtYjBhMzA5MjRdOmZpcnN0LWNoaWxke21hcmdpbi1sZWZ0OjB9LnpqYXBwIC5yYWRpby1ib3guc2VsZWN0ZWRbZGF0YS12LWIwYTMwOTI0XXtib3JkZXItY29sb3I6IzQyNzVlODtjb2xvcjojNDI3NWU4fVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLnBhZ2Utc2Nyb2xsW2RhdGEtdi03NDEwMmMwNV17ZmxleDoxO292ZXJmbG93OmF1dG87cGFkZGluZy1ib3R0b206MTAwcHg7dHJhbnNmb3JtOnRyYW5zbGF0ZVooMCl9LnpqYXBwIC5zdWJsaXN0W2RhdGEtdi03NDEwMmMwNV17cGFkZGluZy1sZWZ0OjI1cHg7cGFkZGluZy10b3A6MXB4O2JhY2tncm91bmQtY29sb3I6I2ZmZn0uemphcHAgLnN1Ymxpc3Q+LnN1Ymxpc3RbZGF0YS12LTc0MTAyYzA1XXtwYWRkaW5nLWxlZnQ6MTBweDtwYWRkaW5nLXRvcDowfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIi8qXG4gKiBAQXV0aG9yOiBqaWFuZ2wwMlxuICogQERhdGU6IDIwMjAtMDYtMTYgMDE6MzU6MzFcbiAqIEBMYXN0RWRpdG9yczogamlhbmdsMDJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjAtMDYtMTYgMDE6Mzc6MTJcbiAqIEBEZXNjcmlwdGlvbjog6Zeu6aKY5LuT5YKo5paH5Lu2XG4gKi9cbmltcG9ydCBsb2NhbERCIGZyb20gJ0BzcmMvZnJhbWV3b3JrL2xvY2FsREInO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb246IOWIoOmZpOaJueasoeeahOaJgOacieiNieeov++8jOaPkOS6pOaJueasoeaXtlxuICAgKiBAcGFyYW0ge1N0cmluZ30gYmF0Y2hJZFxuICAgKiBAcmV0dXJuOiBQcm9taXNlXG4gICAqL1xuICBkZWxldGVCYXRjaERyYWZ0UHJvYmxlbShiYXRjaElkKSB7XG4gICAgbGV0IHNxbCA9IGBkZWxldGUgZnJvbSBjaGVja3F1YWxpdHlfcHJvYmxlbSB3aGVyZSBiYXRjaF9pZCA9ID8gYW5kIHN0YXR1cyA9ICfojYnnqL8nYDtcbiAgICByZXR1cm4gbG9jYWxEQi5leGVjdXRlU3FsKHNxbCwgW2JhdGNoSWRdKTtcbiAgfSxcbn07XG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dGFyZWFcIixjbGFzczp7J2JvcmRlci1ib3R0b20nOiBfdm0uYm9yZGVyQm90dG9tfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dGFyZWEtY29udGVudFwifSxbX2MoJ3RleHRhcmVhJyx7cmVmOlwiaW5wdXRcIixzdHlsZTooeyBoZWlnaHQ6IF92bS50ZXh0YXJlYUhlaWdodCArICdweCcgfSksYXR0cnM6e1wicGxhY2Vob2xkZXJcIjpfdm0ucGxhY2Vob2xkZXJ9LGRvbVByb3BzOntcInZhbHVlXCI6X3ZtLnZhbHVlfSxvbjp7XCJmb2N1c1wiOl92bS5vbmZvY3VzLFwiYmx1clwiOl92bS5vbmJsdXIsXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2V0U3RhdHVzKHRydWUpfSxcImNvbXBvc2l0aW9uZW5kXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2V0U3RhdHVzKGZhbHNlKX0sXCJpbnB1dFwiOl92bS5vbmlucHV0fX0pLF9jKCdkaXYnLHtyZWY6XCJydWxlXCIsc3RhdGljQ2xhc3M6XCJydWxlXCJ9LFtfdm0uX3YoXCJcXG4gICAgICBcIitfdm0uX3MoX3ZtLnZhbHVlKStcIlxcbiAgICBcIildKSwoX3ZtLm1heGxlbmd0aCAhPT0gSW5maW5pdHkpP19jKCdwJyx7c3RhdGljQ2xhc3M6XCJjb3VudGVyXCJ9LFtfdm0uX3YoXCJcXG4gICAgICBcIitfdm0uX3MoX3ZtLmxhc3RMZW5ndGgpK1wiXFxuICAgIFwiKV0pOl92bS5fZSgpXSldKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJpdGVtLXRleHRhcmVhXCIgOmNsYXNzPVwieydib3JkZXItYm90dG9tJzogYm9yZGVyQm90dG9tfVwiPlxuICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHRhcmVhLWNvbnRlbnRcIj5cbiAgICAgIDx0ZXh0YXJlYVxuICAgICAgICByZWY9XCJpbnB1dFwiXG4gICAgICAgIDp2YWx1ZT1cInZhbHVlXCJcbiAgICAgICAgOnBsYWNlaG9sZGVyPVwicGxhY2Vob2xkZXJcIlxuICAgICAgICA6c3R5bGU9XCJ7IGhlaWdodDogdGV4dGFyZWFIZWlnaHQgKyAncHgnIH1cIlxuICAgICAgICBAZm9jdXM9XCJvbmZvY3VzXCJcbiAgICAgICAgQGJsdXI9XCJvbmJsdXJcIlxuICAgICAgICBAY29tcG9zaXRpb25zdGFydD1cInNldFN0YXR1cyh0cnVlKVwiXG4gICAgICAgIEBjb21wb3NpdGlvbmVuZD1cInNldFN0YXR1cyhmYWxzZSlcIlxuICAgICAgICBAaW5wdXQ9XCJvbmlucHV0XCJcbiAgICAgID48L3RleHRhcmVhPlxuXG4gICAgICA8ZGl2IHJlZj1cInJ1bGVcIiBjbGFzcz1cInJ1bGVcIj5cbiAgICAgICAge3sgdmFsdWUgfX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8cCB2LWlmPVwibWF4bGVuZ3RoICE9PSBJbmZpbml0eVwiIGNsYXNzPVwiY291bnRlclwiPlxuICAgICAgICB7eyBsYXN0TGVuZ3RoIH19XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0l0ZW1UZXh0YXJlYScsXG4gIGNvbXBvbmVudHM6IHt9LFxuICBwcm9wczoge1xuICAgIHZhbHVlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIHBsYWNlaG9sZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIG1heGxlbmd0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMjAwLFxuICAgIH0sXG4gICAgYm9yZGVyQm90dG9tOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXh0YXJlYUhlaWdodDogNDAsXG4gICAgICBpc0xvY2s6IGZhbHNlLFxuICAgICAgYmx1clRpbWU6IG51bGwsXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBsYXN0TGVuZ3RoKCkge1xuICAgICAgbGV0IHZhbHVlTGVuZ3RoID0gKHRoaXMudmFsdWUgJiYgdGhpcy52YWx1ZS5sZW5ndGgpIHx8IDA7XG4gICAgICBjb25zdCBsZW5ndGggPSB0aGlzLm1heGxlbmd0aCAtIHZhbHVlTGVuZ3RoO1xuICAgICAgcmV0dXJuIGxlbmd0aCA+IDAgPyBsZW5ndGggOiAwO1xuICAgIH0sXG4gIH0sXG4gIG1vdW50ZWQoKSB7XG4gICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgdGhpcy50ZXh0YXJlYUhlaWdodCA9ICh0aGlzLiRyZWZzLnJ1bGUgJiYgdGhpcy4kcmVmcy5ydWxlLm9mZnNldEhlaWdodCkgfHwgNDA7XG4gICAgfSk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbmZvY3VzKCkge1xuICAgICAgLy8gaW9zIOS4reaWh+i+k+WFpeazle+8jOi+k+WFpei/mOayoeWujOaIkOeahOaXtuWAme+8iOi+k+WFpeahhui/mOaYr+iLseaWh++8ie+8jOi+k+WFpeahhuWkseWOu+eEpueCueWQjuS8muWGjeasoeiOt+WPlueEpueCuVxuICAgICAgbGV0IHRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgIGlmICh0aGlzLmJsdXJUaW1lICYmIHRpbWUgLSB0aGlzLmJsdXJUaW1lIDwgMzAwKSB7XG4gICAgICAgIGlmICh3aW5kb3cuY29yZG92YSAmJiB3aW5kb3cuY29yZG92YS5wbHVnaW5zICYmIHdpbmRvdy5jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQpIHtcbiAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmJsdXIoKTtcbiAgICAgICAgICB3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuYmx1clRpbWUgPSBudWxsO1xuXG4gICAgICB0aGlzLiRlbWl0KCdmb2N1cycpO1xuICAgIH0sXG4gICAgb25ibHVyKCkge1xuICAgICAgdGhpcy5ibHVyVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gICAgICB0aGlzLiRlbWl0KCdibHVyJyk7XG4gICAgfSxcbiAgICBzZXRTdGF0dXMoYm9vbCkge1xuICAgICAgY29uc29sZS5sb2coYm9vbCk7XG4gICAgICB0aGlzLmlzTG9jayA9IGJvb2w7XG4gICAgfSxcbiAgICBvbmlucHV0KGUpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuaXNMb2NrKSB7XG4gICAgICAgICAgbGV0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA+IHRoaXMubWF4bGVuZ3RoKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnN1YnN0cmluZygwLCB0aGlzLm1heGxlbmd0aCk7XG4gICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIOiuoeeul+aWh+acrOWfn+mrmOW6plxuICAgICAgICAgIHRoaXMuJHJlZnMucnVsZS5pbm5lclRleHQgPSB2YWx1ZTtcbiAgICAgICAgICB0aGlzLnRleHRhcmVhSGVpZ2h0ID0gdGhpcy4kcmVmcy5ydWxlICYmIHRoaXMuJHJlZnMucnVsZS5vZmZzZXRIZWlnaHQgKyAyMDtcblxuICAgICAgICAgIC8vIOmAmuefpeWPjOWQkee7keWumlxuICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpO1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSwgMCk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+XG4uaXRlbS10ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA1cHggMTVweDtcbn1cbi5pdGVtLXRleHRhcmVhLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uaXRlbS10ZXh0YXJlYSB0ZXh0YXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7XG59XG4uaXRlbS10ZXh0YXJlYSAucnVsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICAvLyB6LWluZGV4OiAtMTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG4uaXRlbS10ZXh0YXJlYSAuY291bnRlciB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW46IDAgMCAtNXB4IDA7XG4gIGhlaWdodDogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDE1cHg7XG4gIGNvbG9yOiAkY29sb3JHcmF5MztcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuPC9zdHlsZT5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNiYWFlNzcwJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00MzA0MmYwZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjY3YzE2MjAwXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3NwYW4nLHtjbGFzczpfdm0uY2xhc3NTZXRbX3ZtLnN0YXR1c119LFtfdm0uX3YoX3ZtLl9zKF92bS50ZXh0IHx8IF92bS5zdGF0dXMpKV0pfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWEzNmIyNTM0JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZGV0YWlsLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00MzA0MmYwZCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2RldGFpbC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00MzA0MmYwZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI0MzA0MmYwZFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd0cmFuc2l0aW9uJyx7YXR0cnM6e1wibmFtZVwiOlwic2xpZGUtcmlnaHRcIn19LFsoX3ZtLnNob3cpP19jKCdwYWdlLWNvbnRlbnQnLHtjbGFzczp7ICdjb250ZW50LW5vdC1lbXB0eSc6IF92bS5jb250ZW50Lmxlbmd0aCB9LGF0dHJzOntcIm1vZGVcIjpcImRpYWxvZ1wiLFwidGl0bGVcIjpcIuajgOafpeaMh+W8lVwiLFwib24tY2xvc2VcIjpfdm0uY2xvc2VQb3B1cH19LFsoIV92bS5pc0xvYWRpbmcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImNoZWNrLWd1aWRlLWRldGFpbC1oZCBib3JkZXItYm90dG9tXCJ9LFtfYygnaDInLHtzdGF0aWNDbGFzczpcImNoZWNrLWd1aWRlLWRldGFpbC10aXRsZSBwYjEwXCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS50aXRsZSkpXSldKTpfdm0uX2UoKSwoIV92bS5pc0xvYWRpbmcgJiYgX3ZtLmNvbnRlbnQubGVuZ3RoKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjaGVjay1ndWlkZS1kZXRhaWwtY29udGVudFwifSxfdm0uX2woKF92bS5jb250ZW50KSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCdwJyx7a2V5OmtleX0sWyhpdGVtLmlzSW1nICYmIGl0ZW0uc3JjKT9fYygnaW1nJyx7Y2xhc3M6eyAnaW1nLW5vdC1yZWFkeSc6ICFpdGVtLnJlYWR5LCBlcnJvcjogaXRlbS5zdGF0dXMgPT09ICdyZWplY3RlZCcgfSxhdHRyczp7XCJzcmNcIjpfdm0uZ2V0VGh1bWJuYWlsKGl0ZW0pfSxvbjp7XCJlcnJvclwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmltZ0Vycm9yKGl0ZW0sIGtleSl9LFwiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pbWdDbGljayhpdGVtKX19fSk6X3ZtLl9lKCksKCFpdGVtLmlzSW1nKT9fYygnc3BhbicsW192bS5fdihcIlxcbiAgICAgICAgICBcIitfdm0uX3MoaXRlbS52YWwpK1wiXFxuICAgICAgICBcIildKTpfdm0uX2UoKV0pfSkpOl92bS5fZSgpLF9jKCdsb2FkaW5nLXN0YXR1cycse2F0dHJzOntcImlzLWxvYWRpbmdcIjpfdm0uaXNMb2FkaW5nLFwiaXMtZW1wdHlcIjohX3ZtLmNvbnRlbnQubGVuZ3RoLFwiZW1wdHktdGV4dFwiOlwiUEPnq6/mnKrorr7nva7mo4Dmn6XmjIflvJVcIn19KV0sMSk6X3ZtLl9lKCldLDEpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XG5pbXBvcnQgZGlhbG9nIGZyb20gJy4vZGV0YWlsLnZ1ZSc7XG5cbmxldCBpbnN0YW5jZSA9IGZhbHNlO1xuXG5pZiAoIWluc3RhbmNlKSB7XG4gIGxldCBEaWFsb2dDb21wb25lbnQgPSBWdWUuZXh0ZW5kKGRpYWxvZyk7XG4gIGluc3RhbmNlID0gbmV3IERpYWxvZ0NvbXBvbmVudCh7XG4gICAgZWw6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICB9KTtcblxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGluc3RhbmNlLiRlbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLml0ZW0tdGV4dGFyZWF7YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6NXB4IDE1cHh9LnpqYXBwIC5pdGVtLXRleHRhcmVhLWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmV9LnpqYXBwIC5pdGVtLXRleHRhcmVhIC5ydWxlLC56amFwcCAuaXRlbS10ZXh0YXJlYSB0ZXh0YXJlYXt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6NDBweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNnB4O3BhZGRpbmc6MDtib3JkZXI6bm9uZX0uemphcHAgLml0ZW0tdGV4dGFyZWEgLnJ1bGV7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3Zpc2liaWxpdHk6aGlkZGVuO3dvcmQtYnJlYWs6YnJlYWstYWxsfS56amFwcCAuaXRlbS10ZXh0YXJlYSAuY291bnRlcnt0ZXh0LWFsaWduOnJpZ2h0O21hcmdpbjowIDAgLTVweCAwO2hlaWdodDoxNXB4O2xpbmUtaGVpZ2h0OjE1cHg7Y29sb3I6I2IyYjJiMjtmb250LXNpemU6MTJweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCIvKipcbiAqIOWuieWFqOaWh+aYjumXrumimOacjeWKoeWvueixoVxuICovXG5cbmltcG9ydCAkcSBmcm9tICdAc3RhdGljL2xpYi9wcm9taXNlJztcbmltcG9ydCBjb250ZXh0IGZyb20gJ0BzcmMvZnJhbWV3b3JrL2NvbnRleHQnO1xuaW1wb3J0IFV0aWxzIGZyb20gJ0BzcmMvdXRpbHMvaW5kZXgnO1xuaW1wb3J0IHBsdWdpbkFwaSBmcm9tICdAc3JjL2FwaS9wbHVnaW5BcGknO1xuaW1wb3J0IEltYWdlU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2ltYWdlLXNlcnZpY2UnO1xuaW1wb3J0IEJhdGNoU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2JhdGNoLXNlcnZpY2UnO1xuaW1wb3J0IFByb2plY3RTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vcHJvamVjdC1zZXJ2aWNlJztcbmltcG9ydCBUb2RvTGlzdFNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL3RvZG8vdG9kby1saXN0LXNlcnZpY2UnO1xuaW1wb3J0IERhdGFTeW5jaHJvbml6ZXIgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9kYXRhLXN5bmNocm9uaXplcic7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgc3RvcmUgZnJvbSAnQHN0b3JlJztcblxuaW1wb3J0IENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5IGZyb20gJ0BzcmMvcmVwb3NpdG9yaWVzL2NoZWNrLXF1YWxpdHktcHJvYmxlbS1yZXBvc2l0b3J5JztcbmltcG9ydCBDaGVja1F1YWxpdHlQcm9ibGVtQ0NSZXBvc2l0b3J5IGZyb20gJ0BzcmMvcmVwb3NpdG9yaWVzL2NoZWNrLXF1YWxpdHktcHJvYmxlbS1jYy1yZXBvc2l0b3J5JztcbmltcG9ydCBDaGVja1F1YWxpdHlQcm9ibGVtUmVwYWlyUmVwb3NpdG9yeSBmcm9tICdAc3JjL3JlcG9zaXRvcmllcy9jaGVjay1xdWFsaXR5LXByb2JsZW0tcmVwYWlyLXJlcG9zaXRvcnknO1xuaW1wb3J0IENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5IGZyb20gJ0BzcmMvcmVwb3NpdG9yaWVzL2NoZWNrLXF1YWxpdHktcHJvYmxlbS1yZWluc3BlY3QtcmVwb3NpdG9yeSc7XG5pbXBvcnQgQ2hlY2tRdWFsaXR5UHJvYmxlbUZwSW5mb1JlcG9zaXRvcnkgZnJvbSAnQHNyYy9yZXBvc2l0b3JpZXMvY2hlY2stcXVhbGl0eS1wcm9ibGVtLWZwaW5mby1yZXBvc2l0b3J5JztcbmltcG9ydCBDaGVja1F1YWxpdHlQcm9ibGVtTG9nUmVwb3NpdG9yeSBmcm9tICdAc3JjL3JlcG9zaXRvcmllcy9jaGVjay1xdWFsaXR5LXByb2JsZW0tbG9nLXJlcG9zaXRvcnknO1xuaW1wb3J0IEdsb2JhbFN0b3JhZ2VSZXBvc2l0b3J5IGZyb20gJ0BzcmMvcmVwb3NpdG9yaWVzL2dsb2JhbC1zdG9yYWdlLXJlcG9zaXRvcnknO1xuaW1wb3J0IENvbW1vbkJhc2VkYXRhU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2NvbW1vbi1iYXNlZGF0YS1zZXJ2aWNlJztcblxuaW1wb3J0IFRvZG9TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS90b2RvL3RvZG8tc2VydmljZSc7XG5cbi8qIENoZWNrTW9kLmZhY3RvcnkoJ0NoZWNrUXVhbGl0eVByb2JsZW1TZXJ2aWNlJywgWyckcScsICckcm9vdFNjb3BlJywgJyRmaWx0ZXInLCAnJHRpbWVvdXQnLCAnJGxvZycsICduZXR3b3JrJywgJ1BvcHVwJywgJ2NvbnRleHQnLCAnVXRpbHMnLCAncGx1Z2luQXBpJywgJ1dlYlNlcnZpY2UnLCAnSW1hZ2VTZXJ2aWNlJywgJ0JhdGNoU2VydmljZScsICdQcm9qZWN0U2VydmljZScsICdUb2RvTGlzdFNlcnZpY2UnLFxuICAgICAgICAgICAgJ2xvY2FsU3RvcmFnZScsICdsb2NhbFN0b3JhZ2VLZXlzJywgJ0RhdGFTeW5jaHJvbml6ZXInLCAnQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnknLCAnQ2hlY2tRdWFsaXR5UHJvYmxlbUNDUmVwb3NpdG9yeScsICdDaGVja1F1YWxpdHlQcm9ibGVtUmVwYWlyUmVwb3NpdG9yeScsICdDaGVja1F1YWxpdHlQcm9ibGVtUmVpbnNwZWN0UmVwb3NpdG9yeScsICdHbG9iYWxTdG9yYWdlUmVwb3NpdG9yeScsICdDaGVja1F1YWxpdHlQcm9ibGVtRnBJbmZvUmVwb3NpdG9yeScsICdDaGVja1F1YWxpdHlQcm9ibGVtTG9nUmVwb3NpdG9yeScsICdUb2RvU2VydmljZScsICdUb2RvUmVwb3NpdG9yeScsXG4gICAgZnVuY3Rpb24gKCRxLCAkcm9vdFNjb3BlLCAkZmlsdGVyLCAkdGltZW91dCwgJGxvZyxcbiAgICAgICAgICAgIG5ldHdvcmssIFBvcHVwLCBjb250ZXh0LCBVdGlscywgcGx1Z2luQXBpLCBXZWJTZXJ2aWNlLCBJbWFnZVNlcnZpY2UsIEJhdGNoU2VydmljZSwgUHJvamVjdFNlcnZpY2UsIFRvZG9MaXN0U2VydmljZSwgbG9jYWxTdG9yYWdlLCBsb2NhbFN0b3JhZ2VLZXlzLCBEYXRhU3luY2hyb25pemVyLFxuICAgICAgICAgICAgQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnksIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnksIENoZWNrUXVhbGl0eVByb2JsZW1SZXBhaXJSZXBvc2l0b3J5LCBDaGVja1F1YWxpdHlQcm9ibGVtUmVpbnNwZWN0UmVwb3NpdG9yeSwgR2xvYmFsU3RvcmFnZVJlcG9zaXRvcnksXG4gICAgICAgICAgICBDaGVja1F1YWxpdHlQcm9ibGVtRnBJbmZvUmVwb3NpdG9yeSwgQ2hlY2tRdWFsaXR5UHJvYmxlbUxvZ1JlcG9zaXRvcnksIFRvZG9TZXJ2aWNlLCBUb2RvUmVwb3NpdG9yeSlcbnsgKi9cblxudmFyIF9zZWxmO1xuXG4vKipcbiAqIOiOt+WPlumXrumimOWvueixoVxuICogQHBhcmFtIGlkIOmXrumimElkXG4gKiBAcmV0dXJucyB7Kn1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfZ2V0Q2hlY2tQcm9ibGVtSW5mbyA9IGZ1bmN0aW9uKGlkKSB7XG4gIGlmICghaWQpIHtcbiAgICByZXR1cm4gJHEucmVzb2x2ZSh7fSk7XG4gIH1cbiAgcmV0dXJuICRxXG4gICAgLmFsbChbXG4gICAgICBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5nZXRDaGVja1Byb2JsZW0oaWQpLFxuICAgICAgQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcGFpclJlcG9zaXRvcnkuZ2V0UmVwYWlyKGlkKSxcbiAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmdldE11dGxpUmVpbnNwZWN0KGlkKSxcbiAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnkuZ2V0Q0MoaWQpLFxuICAgICAgQ2hlY2tRdWFsaXR5UHJvYmxlbUNDUmVwb3NpdG9yeS5nZXRQcm9ibGVtQ0NBbGxDb2x1bW4oaWQpLFxuICAgICAgQ2hlY2tRdWFsaXR5UHJvYmxlbVJlaW5zcGVjdFJlcG9zaXRvcnkuZ2V0UmVpbnNwZWN0QnlMaXN0KGlkKSxcbiAgICBdKVxuICAgIC50aGVuKGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgICAgIHZhciBwcm9ibGVtID0gcmVzdWx0c1swXTtcbiAgICAgIHZhciByZWluc3BlY3RCeUxpc3QgPSByZXN1bHRzWzVdO1xuXG4gICAgICB2YXIgcmVwYWlyU2V0ID0gcmVzdWx0c1sxXTtcbiAgICAgIGlmIChyZXBhaXJTZXQpIHtcbiAgICAgICAgcHJvYmxlbS5yZXBhaXJfc2V0ID0gcmVwYWlyU2V0O1xuICAgICAgICBwcm9ibGVtLmhhc19yZWFkID0gcmVwYWlyU2V0Lmhhc19yZWFkO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVpbnNwZWN0U2V0ID0gcmVzdWx0c1syXTtcbiAgICAgIGlmICghXy5pc0VtcHR5KHJlaW5zcGVjdFNldCkpIHtcbiAgICAgICAgcHJvYmxlbS5yZWluc3BlY3Rfc2V0ID0gcmVpbnNwZWN0U2V0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvYmxlbS5yZWluc3BlY3Rfc2V0ID0gW107XG4gICAgICB9XG5cbiAgICAgIHZhciBjY1NldCA9IHJlc3VsdHNbM107XG4gICAgICBpZiAoY2NTZXQgJiYgY2NTZXQubGVuZ3RoID4gMCkge1xuICAgICAgICBwcm9ibGVtLmNjX3NldF9pZF9hcnJheSA9IF8ubWFwKGNjU2V0LCBmdW5jdGlvbihjYykge1xuICAgICAgICAgIHJldHVybiB7IGlkOiBjYy51c2VyX2lkIH07XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHByb2JsZW0uY2Nfc2V0X25hbWVfYXJyYXkgPSBfLm1hcChjY1NldCwgZnVuY3Rpb24oY2MpIHtcbiAgICAgICAgICByZXR1cm4geyBuYW1lOiBjYy51c2VyX25hbWUgfTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcHJvYmxlbS5jY19zZXRfYXJyYXkgPSBfLm1hcChjY1NldCwgZnVuY3Rpb24oY2MpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IGNjLnVzZXJfaWQsXG4gICAgICAgICAgICBuYW1lOiBjYy51c2VyX25hbWUsXG4gICAgICAgICAgICBtb2JpbGU6IGNjLm1vYmlsZSxcbiAgICAgICAgICAgIGlzX2ltX3VzZXI6IGNjLmlzX2ltX3VzZXIsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBjY1NldEFsbCA9IHJlc3VsdHNbNF07XG4gICAgICBpZiAoY2NTZXRBbGwgJiYgY2NTZXRBbGwubGVuZ3RoID4gMCkge1xuICAgICAgICBwcm9ibGVtLmNjX3NldF9hbGxfaWRfYXJyYXkgPSBfLm1hcChjY1NldEFsbCwgZnVuY3Rpb24oY2MpIHtcbiAgICAgICAgICByZXR1cm4geyBpZDogY2MuY2MgfTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9ibGVtLnJlZ2lzdF9ieSB8fCBwcm9ibGVtLnNlbnRfYmFja19ieSB8fCBwcm9ibGVtLnJlcGFpcl9ieSB8fCBwcm9ibGVtLnJlaW5zcGVjdF9ieSkge1xuICAgICAgICByZXR1cm4gUHJvamVjdFNlcnZpY2UuZ2V0QWxsUHJvamVjdFVzZXJzKHByb2JsZW0ucHJval9pZCkudGhlbihmdW5jdGlvbih1c2Vycykge1xuICAgICAgICAgIGlmIChwcm9ibGVtLnJlZ2lzdF9ieSkge1xuICAgICAgICAgICAgdmFyIHJlZ2lzdFVzZXIgPSBfLmZpbmQodXNlcnMsIGZ1bmN0aW9uKHVzZXIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVzZXIudXNlcl9pZCA9PT0gcHJvYmxlbS5yZWdpc3RfYnk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHJlZ2lzdFVzZXIpIHtcbiAgICAgICAgICAgICAgcHJvYmxlbS5yZWdpc3QgPSByZWdpc3RVc2VyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChwcm9ibGVtLnNlbnRfYmFja19ieSkge1xuICAgICAgICAgICAgdmFyIHNlbnRCYWNrVXNlciA9IF8uZmluZCh1c2VycywgZnVuY3Rpb24odXNlcikge1xuICAgICAgICAgICAgICByZXR1cm4gdXNlci51c2VyX2lkID09PSBwcm9ibGVtLnNlbnRfYmFja19ieTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHNlbnRCYWNrVXNlcikge1xuICAgICAgICAgICAgICBwcm9ibGVtLnNlbnRfYmFjayA9IHtcbiAgICAgICAgICAgICAgICBpZDogc2VudEJhY2tVc2VyLnVzZXJfaWQsXG4gICAgICAgICAgICAgICAgbmFtZTogc2VudEJhY2tVc2VyLnVzZXJfbmFtZSxcbiAgICAgICAgICAgICAgICBtb2JpbGU6IHNlbnRCYWNrVXNlci5tb2JpbGUsXG4gICAgICAgICAgICAgICAgaXNfaW1fdXNlcjogc2VudEJhY2tVc2VyLmlzX2ltX3VzZXIsXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHByb2JsZW0ucmVwYWlyX2J5KSB7XG4gICAgICAgICAgICB2YXIgcmVwYWlyVXNlciA9IF8uZmluZCh1c2VycywgZnVuY3Rpb24odXNlcikge1xuICAgICAgICAgICAgICByZXR1cm4gdXNlci51c2VyX2lkID09PSBwcm9ibGVtLnJlcGFpcl9ieTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHJlcGFpclVzZXIpIHtcbiAgICAgICAgICAgICAgcHJvYmxlbS5yZXBhaXIgPSByZXBhaXJVc2VyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghXy5pc0VtcHR5KHJlaW5zcGVjdEJ5TGlzdCkpIHtcbiAgICAgICAgICAgIHByb2JsZW0ucmVpbnNwZWN0QnkgPSBfLm1hcChyZWluc3BlY3RCeUxpc3QsIGZ1bmN0aW9uKHJlaW5zcGVjdEJ5KSB7XG4gICAgICAgICAgICAgIHZhciByZWluc3BlY3RVc2VyID0gXy5maW5kKHVzZXJzLCBmdW5jdGlvbih1c2VyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVzZXIudXNlcl9pZCA9PT0gcmVpbnNwZWN0QnkucmVpbnNwZWN0O1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgaWYgKHJlaW5zcGVjdFVzZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgaWQ6IHJlaW5zcGVjdFVzZXIudXNlcl9pZCxcbiAgICAgICAgICAgICAgICAgIG5hbWU6IHJlaW5zcGVjdFVzZXIudXNlcl9uYW1lLFxuICAgICAgICAgICAgICAgICAgbW9iaWxlOiByZWluc3BlY3RVc2VyLm1vYmlsZSxcbiAgICAgICAgICAgICAgICAgIGlzX2ltX3VzZXI6IHJlaW5zcGVjdFVzZXIuaXNfaW1fdXNlcixcbiAgICAgICAgICAgICAgICAgIHJlaW5zcGVjdF9kYXRlOiByZWluc3BlY3RCeS5yZWluc3BlY3RfZGF0ZSxcbiAgICAgICAgICAgICAgICAgIHJlaW5zcGVjdF9yZW1hcms6IHJlaW5zcGVjdEJ5LnJlaW5zcGVjdF9yZW1hcmssXG4gICAgICAgICAgICAgICAgICByZWluc3BlY3RfaW1hZ2VfZmlsZTogSlNPTi5wYXJzZShyZWluc3BlY3RCeS5yZWluc3BlY3RfaW1hZ2VfZmlsZSB8fCAnW10nKSxcbiAgICAgICAgICAgICAgICAgIHJlaW5zcGVjdEJ5SWQ6IHJlaW5zcGVjdEJ5LmlkLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIGlkOiByZWluc3BlY3RCeS5yZWluc3BlY3QsXG4gICAgICAgICAgICAgICAgICBuYW1lOiAn6K+l55So5oi35bey6KKr5Yig6ZmkJyxcbiAgICAgICAgICAgICAgICAgIG1vYmlsZTogJycsXG4gICAgICAgICAgICAgICAgICBpc19pbV91c2VyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgcmVpbnNwZWN0X2RhdGU6IHJlaW5zcGVjdEJ5LnJlaW5zcGVjdF9kYXRlLFxuICAgICAgICAgICAgICAgICAgcmVpbnNwZWN0X3JlbWFyazogJycsXG4gICAgICAgICAgICAgICAgICByZWluc3BlY3RfaW1hZ2VfZmlsZTogW10sXG4gICAgICAgICAgICAgICAgICByZWluc3BlY3RCeUlkOiByZWluc3BlY3RCeS5pZCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcHJvYmxlbS5yZWluc3BlY3RCeSA9IF8uZmlsdGVyKHByb2JsZW0ucmVpbnNwZWN0QnksIGZ1bmN0aW9uKHJlaW5zcGVjdCkge1xuICAgICAgICAgICAgICByZXR1cm4gISFyZWluc3BlY3Q7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcHJvYmxlbS5yZWluc3BlY3QgPSBfLmZpbHRlcihwcm9ibGVtLnJlaW5zcGVjdEJ5LCBmdW5jdGlvbihyZWluc3BlY3QpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICEhcmVpbnNwZWN0LnJlaW5zcGVjdF9kYXRlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8g5Y+q5pyJ6K+m5oOF6aG16Z2i5omN55So5Yiw5LiL6Z2i6L+Z5Yeg5Liq5bGe5oCn77yM6ICM6K+m5oOF6aG16Z2i6Iez5bCR5a2Y5ZyocmVnaXN0X2J5XG4gICAgICAgICAgcHJvYmxlbS5yZWdpc3QgPSBwcm9ibGVtLnJlZ2lzdCB8fCB7fTtcbiAgICAgICAgICBwcm9ibGVtLnNlbnRfYmFjayA9IHByb2JsZW0uc2VudF9iYWNrIHx8IHt9O1xuICAgICAgICAgIHByb2JsZW0ucmVwYWlyID0gcHJvYmxlbS5yZXBhaXIgfHwge307XG4gICAgICAgICAgcHJvYmxlbS5yZWluc3BlY3QgPSBwcm9ibGVtLnJlaW5zcGVjdCB8fCBbXTtcblxuICAgICAgICAgIHJldHVybiBwcm9ibGVtO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2JsZW0ucmVnaXN0ID0ge307XG4gICAgICAgIHByb2JsZW0uc2VudF9iYWNrID0ge307XG4gICAgICAgIHByb2JsZW0ucmVwYWlyID0ge307XG4gICAgICAgIHByb2JsZW0ucmVpbnNwZWN0ID0gW107XG4gICAgICAgIHJldHVybiAkcS5yZXNvbHZlKHByb2JsZW0pO1xuICAgICAgfVxuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAkbG9nLmxvZyhlcnJvcik7XG4gICAgfSk7XG59O1xuXG4vLyDkuJPpobnlt6Hmo4AgLSDkuI3pgJrnn6XmlbTmlLnnmoTmtYHnqItcbnZhciBfc3VibWl0UHJvYmxlbVdpdGhvdXROZWVkUmVwYWlyID0gZnVuY3Rpb24ocHJvYmxlbURhdGEsIHRvZG9Nb2R1bGVDb2RlKSB7XG4gIHZhciB1c2VyID0gY29udGV4dC5nZXRVc2VyKCk7XG5cbiAgcHJvYmxlbURhdGEucmVwYWlyX2RlYWRsaW5lID0gJyc7XG4gIHByb2JsZW1EYXRhLnJlZ2lzdF9ieSA9IHVzZXIudXNlcl9pZDtcbiAgcHJvYmxlbURhdGEucmVnaXN0X2RhdGUgPSBVdGlscy5nZXROb3dEYXRlKCk7XG4gIHByb2JsZW1EYXRhLmNyZWF0ZWRfYnkgPSB1c2VyLnVzZXJfaWQ7XG4gIHByb2JsZW1EYXRhLmNyZWF0ZWRfb24gPSBVdGlscy5nZXROb3dEYXRlKCk7XG4gIHByb2JsZW1EYXRhLmltYWdlX2ZpbGUgPSBKU09OLnN0cmluZ2lmeShwcm9ibGVtRGF0YS5pbWFnZV9maWxlKTtcblxuICBpZiAocHJvYmxlbURhdGEuZHJhd2luZ19maWxlKSB7XG4gICAgcHJvYmxlbURhdGEuZHJhd2luZ19maWxlID0gSlNPTi5zdHJpbmdpZnkocHJvYmxlbURhdGEuZHJhd2luZ19maWxlKTtcbiAgfVxuXG4gICRsb2cubG9nKCfkuJPpobnlt6Hmo4AtLT7kuI3pgJrnn6XmlbTmlLknLCBwcm9ibGVtRGF0YSk7XG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5zdWJtaXQocHJvYmxlbURhdGEpXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAvLyDkv53lrZjpl67popjnirbmgIHlj5jljJbml6Xlv5dcbiAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtTG9nUmVwb3NpdG9yeS5zYXZlUHJvYmxlbVN0YXR1c0xvZyhcbiAgICAgICAgcHJvYmxlbURhdGEucHJval9pZCxcbiAgICAgICAgJycsXG4gICAgICAgIHByb2JsZW1EYXRhLmJhdGNoX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5pZCxcbiAgICAgICAgJ+W3suaPkOS6pCcsXG4gICAgICAgICcnLFxuICAgICAgICAnJyxcbiAgICAgICAgcHJvYmxlbURhdGEuaW1hZ2VfZmlsZVxuICAgICAgKTtcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIF9hcHBlbmRUb0NDKHByb2JsZW1EYXRhLmlkLCAn55m76K6w5Lq6Jyk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbihyZWluc3BlY3RCeUxpc3QpIHtcbiAgICAgIHJldHVybiBEYXRhU3luY2hyb25pemVyLmFkZFN5bmNHcm91cChbXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgXSk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIOWmguaenOS4uuS4k+mhueW3oeajgO+8jOS4jeWKoOWFpeW+heWKnuihqFxuICAgICAgaWYgKHRvZG9Nb2R1bGVDb2RlICE9PSAnc3BlY2lhbC1pbnNwZWN0LXByb2JsZW0nKSB7XG4gICAgICAgIHJldHVybiBUb2RvU2VydmljZS5zYXZlVG9kbyh7XG4gICAgICAgICAgYml6X2lkOiBwcm9ibGVtRGF0YS5pZCxcbiAgICAgICAgICBwcm9qX2lkOiBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgICAgICAgIG1vZHVsZV9jb2RlOiB0b2RvTW9kdWxlQ29kZSB8fCAnJyxcbiAgICAgICAgICB0eXBlOiAyLCAvLyDpl67popjkuI3pnIDmlbTmlLlcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59O1xuLyoqXG4gKiDmj5DkuqTpl67popjljZVcbiAqIEBwYXJhbSBwcm9ibGVtRGF0YSDpl67popjljZXmlbDmja5cbiAqIEByZXR1cm5zIHsqfVxuICogQHByaXZhdGVcbiAqL1xudmFyIF9zdWJtaXQgPSBmdW5jdGlvbihwcm9ibGVtRGF0YSwgdG9kb01vZHVsZUNvZGUsIG5lZWRSZXBhaXIpIHtcbiAgLyoqXG4gICAqIDIwMTktMTItMTkgbmVlZFJlcGFpcu+8jOaYr+eUqOS6juS4k+mhueW3oeajgOS4jemAmuefpeaVtOaUueeahOWPguaVsO+8jGZhbHNl5Li65LiN6YCa55+l5pW05pS577yM55u05o6l5Y+Y5Li65qOA5p+l5a6M5oiQ77ybXG4gICAqIOeOsOWcuuS/ruaUuSB0b2RvTW9kdWxlQ29kZSwgbmVlZFJlcGFpcuWPguaVsOmhuuW6j++8jOWIoOmZpOS5i+WJjeeahOWkhOeQhlxuICAgKi9cbiAgaWYgKG5lZWRSZXBhaXIgPT09IGZhbHNlKSB7XG4gICAgLy8g5LiT6aG55beh5qOAIC0g5LiN6YCa55+l5pW05pS5XG4gICAgcmV0dXJuIF9zdWJtaXRQcm9ibGVtV2l0aG91dE5lZWRSZXBhaXIocHJvYmxlbURhdGEsIHRvZG9Nb2R1bGVDb2RlKTtcbiAgfVxuXG4gIGlmIChcbiAgICBwcm9ibGVtRGF0YS5zdGF0dXMgIT09ICflvoXmj5DkuqQnICYmXG4gICAgcHJvYmxlbURhdGEuc3RhdHVzICE9PSAn6I2J56i/JyAmJlxuICAgIHByb2JsZW1EYXRhLnN0YXR1cyAhPT0gJ+WQiOagvOiNieeovycgJiZcbiAgICBwcm9ibGVtRGF0YS5zdGF0dXMgIT09ICfkuI3lkIjmoLzojYnnqL8nXG4gICkge1xuICAgIHJldHVybiAkcS5yZWplY3QoJ+mXrumimOWNleeKtuaAgeW8guW4uCcpO1xuICB9XG5cbiAgaWYgKCFwcm9ibGVtRGF0YS5jaGVja0l0ZW0uaWQpIHtcbiAgICByZXR1cm4gJHEucmVqZWN0KCfor7flhYjpgInmi6nmo4Dmn6XpobknKTtcbiAgfVxuXG4gIGlmICghcHJvYmxlbURhdGEucmVwYWlyX3NldCB8fCAhcHJvYmxlbURhdGEucmVwYWlyX3NldC5pZCkge1xuICAgIHJldHVybiAkcS5yZWplY3QoJ+ivt+mAieaLqemXrumimOeahOaVtOaUueS6uicpO1xuICB9XG5cbiAgaWYgKF8uaXNFbXB0eShwcm9ibGVtRGF0YS5yZWluc3BlY3Rfc2V0KSkge1xuICAgIHJldHVybiAkcS5yZWplY3QoJ+ivt+mAieaLqemXrumimOeahOWkjemqjOS6uicpO1xuICB9XG5cbiAgdmFyIHVzZXIgPSBjb250ZXh0LmdldFVzZXIoKTtcblxuICBwcm9ibGVtRGF0YS5zdGF0dXMgPSAn5b6F5pW05pS5JztcblxuICAvLyDorqHnrpfmlbTmlLnlrozmiJDmnJ/pmZAg5b2T5YmN5pe26Ze0K+aVtOaUueacn+mZkFxuICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIE51bWJlcihwcm9ibGVtRGF0YS5kZWFkbGluZSkpO1xuICBwcm9ibGVtRGF0YS5yZXBhaXJfZGVhZGxpbmUgPSBtb21lbnQoZGF0ZSkuZm9ybWF0KCdZWVlZLU1NLUREJyk7XG4gIC8qKlxuICAgMjAyMC0xMC0wOSDkuJPpobnlt6Hmo4DkuIvvvIzkvJrmnInku6XkuIvmg4XlhrXvvJpcbiAgIDHjgIHmnKrpgJrnn6XmlbTmlLnvvIzkuIrkvKDlm77niYfvvIzmj5DkuqTpl67popjvvJtcbiAgIDLjgIHlj6bkuIDkuKrkurrpgJrnn6XmlbTmlLnvvIzkvJrlsIYgcmVnaXN0X2J544CBcmVnaXN0X2RhdGXjgIFjcmVhdGVkX2J544CBY3JlYXRlZF9vbuaUueS4uuW9k+WJjeeUqOaIt++8m1xuICAgM+OAgeWbvueJh+S4iueahOeUqOaIt+WSjOmXrumimOaPkOS6pOS6uuS4jeS4gOiHtO+8m1xuICAg5re75Yqg5Yik5pat77yaXG4gICAx44CB5LiT6aG55beh5qOA5qih5Z2X77ybXG4gICAy44CB5aaC5p6c5bey57uP5pyJcmVnaXN0X2J5562J77yM5YiZ5LiN5L2/55So5b2T5YmN55So5oi377yM55So5pWw5o2u5bqT5pWw5o2u77ybXG4gICAz44CB5aaC5p6c5rKh5pyJcmVnaXN0X2J5562J77yM5YiZ5L2/55So5b2T5YmN55So5oi377ybXG4gICovXG4gIGNvbnN0IGlzUmF3RGF0ZSA9XG4gICAgdG9kb01vZHVsZUNvZGUgPT09ICdzcGVjaWFsLWluc3BlY3QtcHJvYmxlbScgJiZcbiAgICBwcm9ibGVtRGF0YS5yZWdpc3RfYnkgJiZcbiAgICBwcm9ibGVtRGF0YS5yZWdpc3RfZGF0ZSAmJlxuICAgIHByb2JsZW1EYXRhLmNyZWF0ZWRfYnkgJiZcbiAgICBwcm9ibGVtRGF0YS5jcmVhdGVkX29uO1xuXG4gIGlmICghaXNSYXdEYXRlKSB7XG4gICAgcHJvYmxlbURhdGEucmVnaXN0X2J5ID0gdXNlci51c2VyX2lkO1xuICAgIHByb2JsZW1EYXRhLnJlZ2lzdF9kYXRlID0gVXRpbHMuZ2V0Tm93RGF0ZSgpO1xuICAgIHByb2JsZW1EYXRhLmNyZWF0ZWRfYnkgPSB1c2VyLnVzZXJfaWQ7XG4gICAgcHJvYmxlbURhdGEuY3JlYXRlZF9vbiA9IFV0aWxzLmdldE5vd0RhdGUoKTtcbiAgfVxuICBwcm9ibGVtRGF0YS5pbWFnZV9maWxlID0gSlNPTi5zdHJpbmdpZnkocHJvYmxlbURhdGEuaW1hZ2VfZmlsZSk7XG4gIGlmIChwcm9ibGVtRGF0YS5kcmF3aW5nX2ZpbGUpIHtcbiAgICBwcm9ibGVtRGF0YS5kcmF3aW5nX2ZpbGUgPSBKU09OLnN0cmluZ2lmeShwcm9ibGVtRGF0YS5kcmF3aW5nX2ZpbGUpO1xuICB9XG5cbiAgJGxvZy5sb2coJ+eOsOWcuuajgOafpS0tPuaPkOS6pOmXrumimCcsIHByb2JsZW1EYXRhKTtcbiAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LnN1Ym1pdChwcm9ibGVtRGF0YSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIOS/neWtmOmXrumimOeKtuaAgeWPmOWMluaXpeW/l1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1Mb2dSZXBvc2l0b3J5LnNhdmVQcm9ibGVtU3RhdHVzTG9nKFxuICAgICAgICBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5iaWRzZWN0aW9uX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5iYXRjaF9pZCxcbiAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgICflt7Lmj5DkuqQnLFxuICAgICAgICAnJyxcbiAgICAgICAgJycsXG4gICAgICAgIHByb2JsZW1EYXRhLmltYWdlX2ZpbGVcbiAgICAgICk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIOWwhuW9k+WJjeS6uuWKoOWFpeaKhOmAgeS6uumbhuWQiFxuICAgICAgcmV0dXJuIF9hcHBlbmRUb0NDKHByb2JsZW1EYXRhLmlkLCAn55m76K6w5Lq6Jyk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIOW+heWKnuihqOaPkuWFpeWIm+W7uuS6uu+8jOS4k+mhueW3oeajgOS4jeWKoOWFpeW+heWKnlxuICAgICAgaWYgKHRvZG9Nb2R1bGVDb2RlICE9PSAnc3BlY2lhbC1pbnNwZWN0LXByb2JsZW0nKSB7XG4gICAgICAgIGxldCB0eXBlID0gcHJvYmxlbURhdGEuY3JlYXRlZF9ieSA9PT0gcHJvYmxlbURhdGEucmVwYWlyX3NldC5pZCA/IDEgOiAyO1xuICAgICAgICByZXR1cm4gVG9kb1NlcnZpY2UuaW5zZXJ0VG9kb0RhdGEoXG4gICAgICAgICAgcHJvYmxlbURhdGEuY3JlYXRlZF9ieSxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5pZCxcbiAgICAgICAgICB0b2RvTW9kdWxlQ29kZSxcbiAgICAgICAgICB0eXBlLFxuICAgICAgICAgIDBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmdldFJlaW5zcGVjdEJ5TGlzdChwcm9ibGVtRGF0YS5pZCk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbihyZWluc3BlY3RCeUxpc3QpIHtcbiAgICAgIHJldHVybiBEYXRhU3luY2hyb25pemVyLmFkZFN5bmNHcm91cChbXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3JlcGFpcicsIHByb2JsZW1EYXRhLmlkXSxcbiAgICAgICAgWydjaGVja3F1YWxpdHlfcmVpbnNwZWN0JywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgICBbJ2NoZWNrcXVhbGl0eV9yZWluc3BlY3RfYnknLCBfLm1hcChyZWluc3BlY3RCeUxpc3QsICdpZCcpXSxcbiAgICAgICAgWydjaGVja3F1YWxpdHlfY2MnLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICBdKTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgJGxvZy5lcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gJHEucmVqZWN0KGVycm9yKTtcbiAgICB9KTtcbn07XG5cbi8qKlxuICog5L+d5a2Y6I2J56i/XG4gKiBAcGFyYW0gcHJvYmxlbURhdGEg6Zeu6aKY5Y2V5pWw5o2uXG4gKiBAcmV0dXJucyB7Kn1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfc2F2ZSA9IGZ1bmN0aW9uKHByb2JsZW1EYXRhKSB7XG4gIGlmIChcbiAgICBwcm9ibGVtRGF0YS5zdGF0dXMgIT09ICflvoXmj5DkuqQnICYmXG4gICAgcHJvYmxlbURhdGEuc3RhdHVzICE9PSAn6I2J56i/JyAmJlxuICAgIHByb2JsZW1EYXRhLnN0YXR1cyAhPT0gJ+WQiOagvOiNieeovycgJiZcbiAgICBwcm9ibGVtRGF0YS5zdGF0dXMgIT09ICfkuI3lkIjmoLzojYnnqL8nXG4gICkge1xuICAgIHJldHVybiAkcS5yZWplY3QoJ+mXrumimOWNleeKtuaAgeW8guW4uOOAgicpO1xuICB9XG5cbiAgaWYgKCEvXlxcKz9bMC05XSokLy50ZXN0KHByb2JsZW1EYXRhLmRlYWRsaW5lKSkge1xuICAgIHJldHVybiAkcS5yZWplY3QoJ+aVtOaUueacn+mZkOW/hemhu+aYr+ato+aVtOaVsCcpO1xuICB9XG5cbiAgdmFyIGRhdGEgPSB7XG4gICAgaWQ6IHByb2JsZW1EYXRhLmlkLFxuICAgIHJlbWFyazogcHJvYmxlbURhdGEucmVtYXJrLFxuICAgIGltYWdlX2ZpbGU6IHByb2JsZW1EYXRhLmltYWdlX2ZpbGUsXG4gICAgYmF0Y2hfaWQ6IHByb2JsZW1EYXRhLmJhdGNoX2lkLFxuICAgIGJhdGNoX3R5cGU6IHByb2JsZW1EYXRhLmJhdGNoX3R5cGUsXG4gICAgYmlkc2VjdGlvbl9pZDogcHJvYmxlbURhdGEuYmlkc2VjdGlvbl9pZCB8fCAnJyxcbiAgICBwcm9qX2lkOiBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgIGNyZWF0ZWRfYnk6IHByb2JsZW1EYXRhLmNyZWF0ZWRfYnksXG4gICAgY3JlYXRlZF9vbjogVXRpbHMuZ2V0Tm93RGF0ZSgpLFxuICAgIHN0YXR1czogcHJvYmxlbURhdGEuc3RhdHVzLFxuICAgIHJvb21faWQ6IHByb2JsZW1EYXRhLnJvb21faWQgfHwgJycsXG4gICAgYnVpbGRpbmdfaWQ6IHByb2JsZW1EYXRhLmJ1aWxkaW5nX2lkIHx8ICcnLFxuICAgIHVuaXQ6IHByb2JsZW1EYXRhLnVuaXQgfHwgJycsXG4gICAgZmxvb3I6IHByb2JsZW1EYXRhLmZsb29yIHx8ICcnLFxuICAgIGJpel9pZDogcHJvYmxlbURhdGEuYml6X2lkIHx8ICcnLFxuICAgIGJpel9jaGlsZHJlbl9pZDogcHJvYmxlbURhdGEuYml6X2NoaWxkcmVuX2lkIHx8ICcnLFxuICAgIGRlZHVjdGlvbjogdHlwZW9mIHByb2JsZW1EYXRhLmRlZHVjdGlvbiA9PT0gJ3VuZGVmaW5lZCcgPyAnJyA6IHByb2JsZW1EYXRhLmRlZHVjdGlvbixcbiAgICByZWRsaW5lX2RlZHVjdGlvbjpcbiAgICAgIHByb2JsZW1EYXRhLm1vZGUgPT09IDQgfHwgcHJvYmxlbURhdGEubW9kZSA9PT0gOCA/IHByb2JsZW1EYXRhLnJlZGxpbmVfZGVkdWN0aW9uIDogMCxcbiAgICBjb250cmFjdF9pZDogcHJvYmxlbURhdGEuY29udHJhY3QgJiYgcHJvYmxlbURhdGEuY29udHJhY3QuaWQgPyBwcm9ibGVtRGF0YS5jb250cmFjdC5pZCA6ICcnLFxuICB9O1xuXG4gIC8vIOaVtOaUueimgeaxglxuICBpZiAocHJvYmxlbURhdGEucmVwYWlyX3JlcXVpcmVtZW50cykge1xuICAgIGRhdGEucmVwYWlyX3JlcXVpcmVtZW50cyA9IHByb2JsZW1EYXRhLnJlcGFpcl9yZXF1aXJlbWVudHMgfHwgJyc7IC8vIOaVtOaUueimgeaxglxuICB9XG5cbiAgaWYgKHByb2JsZW1EYXRhLmNoZWNrSXRlbSAmJiBwcm9ibGVtRGF0YS5jaGVja0l0ZW0uaWQpIHtcbiAgICBkYXRhLml0ZW1faWQgPSBwcm9ibGVtRGF0YS5jaGVja0l0ZW0uaWQ7XG4gIH1cbiAgaWYgKHByb2JsZW1EYXRhLnBsYWNlICYmIHByb2JsZW1EYXRhLnBsYWNlLmZ1bGxfbmFtZSkge1xuICAgIGRhdGEucGxhY2UgPSBwcm9ibGVtRGF0YS5wbGFjZS5mdWxsX25hbWU7XG4gIH1cbiAgaWYgKHByb2JsZW1EYXRhLmNvbnRyYWN0b3IgJiYgcHJvYmxlbURhdGEuY29udHJhY3Rvci5pZCkge1xuICAgIGRhdGEuY29udHJhY3Rvcl9pZCA9IHByb2JsZW1EYXRhLmNvbnRyYWN0b3IuaWQ7XG4gIH1cbiAgaWYgKHByb2JsZW1EYXRhLmRlc2NyaXB0aW9uICYmIHByb2JsZW1EYXRhLmRlc2NyaXB0aW9uLmlkKSB7XG4gICAgZGF0YS5kZXNjX2lkID0gcHJvYmxlbURhdGEuZGVzY3JpcHRpb24uaWQ7XG4gIH0gZWxzZSB7XG4gICAgZGF0YS5kZXNjX2lkID0gJyc7XG4gIH1cbiAgLypcbiAgMjAxOS0wNS0yMyDkv67mlLlidWdcbiAg6Zeu6aKY77ya6YCJ5oup5LqG5qOA5p+l6aG55pyJ5o+P6L+w77yM5YaN6YCJ5peg5o+P6L+w5qOA5p+l6aG577yM5L+d5a2Y5pe26L+Y5piv5Lya5bim5LiK5LmL5YmN6YCJ5oup55qE5o+P6L+w77ybXG4gIOWOn+WboO+8muaXoOaPj+i/sOajgOafpeaXtui/m+WFpeS4jeS6hmlm77yM5YiZ5peg5rOV5L+u5pS5ZGVzY19pZO+8jOS8muS/neeVmeS5i+WJjeeahOaPj+i/sFxuICDkv67mlLnvvJrliKDpmaRpZumAieaLqe+8jOaUueS4uuS4ieWFg+i/kOeul+espu+8m1xuICAqL1xuICAvLyBkYXRhLmRlc2NfaWQgPSBwcm9ibGVtRGF0YS5kZXNjcmlwdGlvblxuICAvLyAgID8gcHJvYmxlbURhdGEuZGVzY3JpcHRpb24uaWQgfHwgJydcbiAgLy8gICA6ICcnO1xuXG4gIGRhdGEuZW1lcmdlbmN5X2RlZ3JlZSA9IHByb2JsZW1EYXRhLmxldmVsO1xuXG4gIGlmIChwcm9ibGVtRGF0YS5kZWFkbGluZSkge1xuICAgIGRhdGEuZGVhZGxpbmUgPSBwcm9ibGVtRGF0YS5kZWFkbGluZTtcbiAgfVxuICBpZiAocHJvYmxlbURhdGEucGxhY2VfcG9pbnQpIHtcbiAgICBkYXRhLnByb2JsZW1fdmFsdWVzID0gSlNPTi5zdHJpbmdpZnkocHJvYmxlbURhdGEucGxhY2VfcG9pbnQpO1xuICB9XG5cbiAgZGF0YS5pbWFnZV9maWxlID0gSlNPTi5zdHJpbmdpZnkocHJvYmxlbURhdGEuaW1hZ2VfZmlsZSk7XG5cbiAgaWYgKHByb2JsZW1EYXRhLmRyYXdpbmdfZmlsZSkge1xuICAgIGRhdGEuZHJhd2luZ19maWxlID0gSlNPTi5zdHJpbmdpZnkocHJvYmxlbURhdGEuZHJhd2luZ19maWxlKTtcbiAgfVxuXG4gIC8vIOiHquWumuS5iemDqOS9je+8jHByb2Nlc3NfbW9kZSA9PT0gOTDml7bvvIzlsIZwcm9jZXNzX21vZGXliqDlhaXlhbbkuK3vvIzlnKjnjrDlnLrjgIHlronlhajjgIHotKjph4/lpoLmnpzpgInnmoTmmK/pnZ7pg6jkvY3vvIzliJnkuLpudWxs77yM55So5Lul6YeN572uXG4gIGlmIChwcm9ibGVtRGF0YS5wcm9jZXNzX21vZGUgfHwgcHJvYmxlbURhdGEucHJvY2Vzc19tb2RlID09PSBudWxsKSB7XG4gICAgZGF0YS5wcm9jZXNzX21vZGUgPSBwcm9ibGVtRGF0YS5wcm9jZXNzX21vZGU7XG4gIH1cblxuICAvLyDotKjph4/po47pmanvvIzlsIbnrYnnuqdBL0IvQ+a3u+WKoOWIsOaaguWtmFxuICBpZiAocHJvYmxlbURhdGEubW9kZSA9PT0gOCkge1xuICAgIGRhdGEuZGVkdWN0aW9uX2xldmVsID0gcHJvYmxlbURhdGEuZGVkdWN0aW9uX2xldmVsO1xuICB9XG5cbiAgaWYgKCFwcm9ibGVtRGF0YS5pZCkge1xuICAgIGRhdGEuaWQgPSBVdGlscy51dWlkKCk7XG5cbiAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkuaW5zZXJ0KGRhdGEpXG4gICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LnVwZGF0ZShcbiAgICAgICAgICBkYXRhLFxuICAgICAgICAgIHByb2JsZW1EYXRhLmNjX3NldCxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5yZXBhaXJfc2V0LFxuICAgICAgICAgIHByb2JsZW1EYXRhLnJlaW5zcGVjdF9zZXRcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuICRxLnJlc29sdmUoZGF0YS5pZCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgICByZXR1cm4gJHEucmVqZWN0KGVycm9yKTtcbiAgICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS51cGRhdGUoXG4gICAgICBkYXRhLFxuICAgICAgcHJvYmxlbURhdGEuY2Nfc2V0LFxuICAgICAgcHJvYmxlbURhdGEucmVwYWlyX3NldCxcbiAgICAgIHByb2JsZW1EYXRhLnJlaW5zcGVjdF9zZXRcbiAgICApXG4gICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuICRxLnJlc29sdmUocHJvYmxlbURhdGEuaWQpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAkbG9nLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgICB9KTtcbiAgfVxufTtcblxudmFyIF9kZWxldGUgPSBmdW5jdGlvbihpZCkge1xuICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkuZ2V0Q2hlY2tQcm9ibGVtKGlkKS50aGVuKGZ1bmN0aW9uKHEpIHtcbiAgICBpZiAoXG4gICAgICBxLnN0YXR1cyA9PT0gJ+W+heaPkOS6pCcgfHxcbiAgICAgIHEuc3RhdHVzID09PSAn6I2J56i/JyB8fFxuICAgICAgcS5zdGF0dXMgPT09ICflkIjmoLzojYnnqL8nIHx8XG4gICAgICBxLnN0YXR1cyA9PT0gJ+S4jeWQiOagvOiNieeovydcbiAgICApIHtcbiAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5kZWxldGUoaWQpLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgICByZXR1cm4gJHEucmVqZWN0KGVycm9yKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAkbG9nLmxvZygn6Zeu6aKY5Y2V54q25oCB5byC5bi477yaJyArIGlkKTtcbiAgICAgIHJldHVybiAkcS5yZWplY3QoJ+mXrumimOWNleeKtuaAgeW8guW4uCcpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIOiOt+WPluiNieeov+WIl+ihqFxuICogQHBhcmFtIGJhdGNoSWRcbiAqIEByZXR1cm5zIHsqfHByb21pc2V9XG4gKi9cbnZhciBfZ2V0Q2hlY2tQcm9ibGVtRHJhZnRMaXN0ID0gZnVuY3Rpb24oYmF0Y2hJZCkge1xuICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkuZ2V0Q2hlY2tQcm9ibGVtRHJhZnRMaXN0KGJhdGNoSWQpLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgJGxvZy5lcnJvcihlcnJvcik7XG4gICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gIH0pO1xufTtcblxuLyoqXG4gKiDojrflj5blt7Lmj5DkuqTliJfooahcbiAqIEBwYXJhbSBiYXRjaElkIOaJueasoUlkXG4gKiBAcmV0dXJucyB7Knxwcm9taXNlfHttZXRob2QsIGlzQXJyYXl9fVxuICovXG52YXIgX2dldENoZWNrUHJvYmxlbUxpc3QgPSBmdW5jdGlvbihiYXRjaElkKSB7XG4gIHZhciB1c2VySWQgPSBjb250ZXh0LmdldFVzZXIoKS51c2VyX2lkO1xuICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkuZ2V0Q2hlY2tQcm9ibGVtTGlzdChiYXRjaElkLCB1c2VySWQpXG4gICAgLnRoZW4oZnVuY3Rpb24oZGF0YVJlc3VsdCkge1xuICAgICAgXy5tYXAoZGF0YVJlc3VsdCwgZnVuY3Rpb24obCkge1xuICAgICAgICBfc2VsZi5nZXRQcm9ibGVtTG9jYWxTdGF0dXMoeyBzdGF0dXM6IGwuc3RhdHVzIH0pLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgbC5zdGF0dXNfdGV4dCA9IHJlc3VsdC5zdGF0dXNfdGV4dDtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LmdldENoZWNrUHJvYmxlbUNvdW50KGJhdGNoSWQsIHVzZXJJZCkudGhlbihmdW5jdGlvbihcbiAgICAgICAgZGF0YUNvdW50XG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuICRxLnJlc29sdmUoeyBkYXRhOiBkYXRhUmVzdWx0LCB0b3RhbDogZGF0YUNvdW50Wydjb3VudCddIH0pO1xuICAgICAgfSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIOWujOaIkOaVtOaUuVxuICogQHBhcmFtIHByb2JsZW1EYXRhIOmXrumimOWNleaVsOaNrlxuICogQHJldHVybnMge3Byb21pc2V9XG4gKi9cbnZhciBfcmVwYWlyID0gZnVuY3Rpb24ocHJvYmxlbURhdGEsIG1vZHVsZUNvZGUpIHtcbiAgaWYgKHByb2JsZW1EYXRhLnN0YXR1cyAhPT0gJ+W+heaVtOaUuScpIHtcbiAgICByZXR1cm4gJHEucmVqZWN0KCfpl67popjljZXnirbmgIHlvILluLgnKTtcbiAgfVxuXG4gIC8qIGlmKCFwcm9ibGVtRGF0YS5yZXBhaXJfaW1hZ2VfZmlsZSB8fCBwcm9ibGVtRGF0YS5yZXBhaXJfaW1hZ2VfZmlsZS5sZW5ndGggPT09IDApe1xuICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdCgn6K+35ouN5pGE5pW05pS554Wn54mHJyk7XG4gICAgICAgIH0gKi9cbiAgdmFyIHVzZXIgPSBjb250ZXh0LmdldFVzZXIoKTtcblxuICBwcm9ibGVtRGF0YS5zdGF0dXMgPSAn5b6F5aSN6aqMJztcbiAgcHJvYmxlbURhdGEucmVwYWlyX2J5ID0gdXNlci51c2VyX2lkO1xuICBwcm9ibGVtRGF0YS5yZXBhaXJfZGF0ZSA9IFV0aWxzLmdldE5vd0RhdGUoKTtcblxuICB2YXIgcmVwYWlySW1hZ2VGaWxlID0gSlNPTi5zdHJpbmdpZnkocHJvYmxlbURhdGEucmVwYWlyX2ltYWdlX2ZpbGUpO1xuXG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5nZXRDaGVja1Byb2JsZW0ocHJvYmxlbURhdGEuaWQpXG4gICAgLnRoZW4oZnVuY3Rpb24oZXhpc3RzUHJvYmxlbSkge1xuICAgICAgaWYgKGV4aXN0c1Byb2JsZW0gJiYgZXhpc3RzUHJvYmxlbS5zdGF0dXMgIT09ICflvoXmlbTmlLknKSB7XG4gICAgICAgICRsb2cubG9nKCfmj5DkuqTmlbTmlLnml7bmlbDmja7lt7Llj5jkuLonLCBleGlzdHNQcm9ibGVtKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAkbG9nLmxvZygn546w5Zy65qOA5p+lLS0+5a6M5oiQ5pW05pS5JywgcHJvYmxlbURhdGEpO1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LnJlcGFpclByb2JsZW0oXG4gICAgICAgIHByb2JsZW1EYXRhLmlkLFxuICAgICAgICBwcm9ibGVtRGF0YS5zdGF0dXMsXG4gICAgICAgIHByb2JsZW1EYXRhLnJlcGFpcl9ieSxcbiAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX3JlbWFyayxcbiAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX2RhdGUsXG4gICAgICAgIHJlcGFpckltYWdlRmlsZVxuICAgICAgKVxuICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyDkv53lrZjpl67popjnirbmgIHlj5jljJbml6Xlv5dcbiAgICAgICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbUxvZ1JlcG9zaXRvcnkuc2F2ZVByb2JsZW1TdGF0dXNMb2coXG4gICAgICAgICAgICBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgICAgICAgICAgcHJvYmxlbURhdGEuYmlkc2VjdGlvbl9pZCxcbiAgICAgICAgICAgIHByb2JsZW1EYXRhLmJhdGNoX2lkLFxuICAgICAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgICAgICAn5bey5pW05pS5JyxcbiAgICAgICAgICAgICcnLFxuICAgICAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX3JlbWFyayxcbiAgICAgICAgICAgIHJlcGFpckltYWdlRmlsZVxuICAgICAgICAgICk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8vIOWwhuW9k+WJjeS6uuWKoOWFpeaKhOmAgeS6uumbhuWQiFxuICAgICAgICAgIHJldHVybiBfYXBwZW5kVG9DQyhwcm9ibGVtRGF0YS5pZCwgJ+aTjeS9nOS6uicpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyDlpoLmnpzkuLrkuJPpobnlt6Hmo4DvvIzkuI3liqDlhaXlvoXlip7ooahcbiAgICAgICAgICBpZiAobW9kdWxlQ29kZSAhPT0gJ3NwZWNpYWwtaW5zcGVjdC1wcm9ibGVtJykge1xuICAgICAgICAgICAgLy8g5pW05pS55Lq65b6F5Yqe5Y+Y5bey5YqeLOWmguaenOWkjemqjOS6uuacieaVtOaUueS6uizku43nhLbkuLrlvoXlip5cbiAgICAgICAgICAgIHZhciB0eXBlID0gMjtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgXy5maWx0ZXIocHJvYmxlbURhdGEucmVpbnNwZWN0X3NldCwge1xuICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHByb2JsZW1EYXRhLnJlcGFpcl9ieSxcbiAgICAgICAgICAgICAgfSkubGVuZ3RoXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgdHlwZSA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgc29ydCA9IFRvZG9TZXJ2aWNlLmdldFRvZG9Tb3J0KFxuICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5zdGF0dXMsXG4gICAgICAgICAgICAgIHByb2JsZW1EYXRhLnJlcGFpcl9kZWFkbGluZSxcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEuY2xvc2VfZGF0ZSxcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX2RhdGUsXG4gICAgICAgICAgICAgIHByb2JsZW1EYXRhLnNlbnRfYmFja190aW1lcyxcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEuZW1lcmdlbmN5X2RlZ3JlZSxcbiAgICAgICAgICAgICAgJ2NoZWNrJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHJldHVybiBUb2RvU2VydmljZS5pbnNlcnRUb2RvRGF0YShcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX2J5LFxuICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5pZCxcbiAgICAgICAgICAgICAgJ2NoZWNrJyxcbiAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgc29ydFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBEYXRhU3luY2hyb25pemVyLmFkZFN5bmNHcm91cChbXG4gICAgICAgICAgICBbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgICAgICAgWydjaGVja3F1YWxpdHlfY2MnLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgICAgXSk7XG4gICAgICAgIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAkbG9nLmVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyb3IpO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiDlpI3pqozpgJrov4dcbiAqIEBwYXJhbSBwcm9ibGVtRGF0YSDpl67popjljZXmlbDmja5cbiAqIEByZXR1cm5zIHtwcm9taXNlfVxuICovXG52YXIgX3JlaW5zcGVjdFBhc3MgPSBmdW5jdGlvbihwcm9ibGVtRGF0YSwgbW9kdWxlQ29kZSkge1xuICBpZiAocHJvYmxlbURhdGEuc3RhdHVzICE9PSAn5b6F5aSN6aqMJykge1xuICAgIHJldHVybiAkcS5yZWplY3QoJ+mXrumimOWNleeKtuaAgeW8guW4uCcpO1xuICB9XG5cbiAgcHJvYmxlbURhdGEuY3VycmVudFJlaW5zcGVjdEJ5ID0gcHJvYmxlbURhdGEuY3VycmVudFJlaW5zcGVjdEJ5IHx8IHt9O1xuXG4gIHZhciB1c2VyID0gY29udGV4dC5nZXRVc2VyKCk7XG5cbiAgdmFyIHJlaW5zcGVjdElkID0gJyc7XG4gIHZhciByZWluc3BlY3RJbWFnZUZpbGUgPSBfLmlzRW1wdHkocHJvYmxlbURhdGEuY3VycmVudFJlaW5zcGVjdEJ5LnJlaW5zcGVjdF9pbWFnZV9maWxlKVxuICAgID8gJydcbiAgICA6IEpTT04uc3RyaW5naWZ5KHByb2JsZW1EYXRhLmN1cnJlbnRSZWluc3BlY3RCeS5yZWluc3BlY3RfaW1hZ2VfZmlsZSk7XG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5nZXRDaGVja1Byb2JsZW0ocHJvYmxlbURhdGEuaWQpXG4gICAgLnRoZW4oZnVuY3Rpb24oZXhpc3RzUHJvYmxlbSkge1xuICAgICAgaWYgKGV4aXN0c1Byb2JsZW0gJiYgZXhpc3RzUHJvYmxlbS5zdGF0dXMgIT09ICflvoXlpI3pqownKSB7XG4gICAgICAgIC8vICRsb2cubG9nKCfmj5DkuqTlpI3pqozml7bmlbDmja7lt7Llj5jkuLonLCBleGlzdHNQcm9ibGVtKTsgLy8g5omT5Y2w55qE5pWw5o2u5aSq5aSn77yM5a655piT5Y2h6aG/XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gJGxvZy5sb2coJ+eOsOWcuuajgOafpS0tPuWkjemqjOmAmui/hycsIHByb2JsZW1EYXRhKTsgLy8g5omT5Y2w55qE5pWw5o2u5aSq5aSn77yM5a655piT5Y2h6aG/XG4gICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlaW5zcGVjdFJlcG9zaXRvcnkucmVpbnNwZWN0UGFzcyhcbiAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgIHVzZXIudXNlcl9pZCxcbiAgICAgICAgVXRpbHMubm93KCksXG4gICAgICAgIHJlaW5zcGVjdEltYWdlRmlsZSxcbiAgICAgICAgcHJvYmxlbURhdGEuY3VycmVudFJlaW5zcGVjdEJ5LnJlaW5zcGVjdF9yZW1hcmsgfHwgJydcbiAgICAgIClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmdldFJlaW5zcGVjdEJ5TGlzdChwcm9ibGVtRGF0YS5pZCkudGhlbihcbiAgICAgICAgICAgIGZ1bmN0aW9uKGxpc3QpIHtcbiAgICAgICAgICAgICAgdmFyIGFsbERvbmUgPSBfLmV2ZXJ5KGxpc3QsIGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gISFpdGVtLnJlaW5zcGVjdF9kYXRlO1xuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICB2YXIgcmVpbnNwZWN0ID0gXy5maW5kKGxpc3QsIHsgcmVpbnNwZWN0OiB1c2VyLnVzZXJfaWQgfSk7XG4gICAgICAgICAgICAgIGlmICghcmVpbnNwZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdCgn6Zeu6aKY5Y2V5aSN6aqM5Lq65byC5bi4Jyk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZWluc3BlY3RJZCA9IHJlaW5zcGVjdC5pZDtcblxuICAgICAgICAgICAgICBpZiAoYWxsRG9uZSkge1xuICAgICAgICAgICAgICAgIC8vIOWPquacieWFqOmDqOWujOaIkOaJjeaUueWkp+eKtuaAgVxuICAgICAgICAgICAgICAgIHByb2JsZW1EYXRhLnN0YXR1cyA9ICflt7LpgJrov4cnO1xuICAgICAgICAgICAgICAgIHByb2JsZW1EYXRhLnJlc3BlY3RfYnkgPSB1c2VyLnVzZXJfaWQ7XG4gICAgICAgICAgICAgICAgcHJvYmxlbURhdGEucmVpbnNwZWN0X2NvbXBsZXRlZF9kYXRlID0gVXRpbHMuZ2V0Tm93RGF0ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5yZWluc3BlY3RQcm9ibGVtUGFzcyhcbiAgICAgICAgICAgICAgICAgIHByb2JsZW1EYXRhLmlkLFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbURhdGEuc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbURhdGEucmVpbnNwZWN0X2NvbXBsZXRlZF9kYXRlLFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbURhdGEucmVzcGVjdF9ieVxuICAgICAgICAgICAgICAgICkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgIC8vIOS/neWtmOmXrumimOeKtuaAgeWPmOWMluaXpeW/l1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1Mb2dSZXBvc2l0b3J5LnNhdmVQcm9ibGVtU3RhdHVzTG9nKFxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5iaWRzZWN0aW9uX2lkLFxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5iYXRjaF9pZCxcbiAgICAgICAgICAgICAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgICAgICAgICAgICAgICflt7LlpI3pqownLFxuICAgICAgICAgICAgICAgICAgICAnJyxcbiAgICAgICAgICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgLy8g5bCG5b2T5YmN5Lq65Yqg5YWl5oqE6YCB5Lq66ZuG5ZCIXG4gICAgICAgICAgcmV0dXJuIF9hcHBlbmRUb0NDKHByb2JsZW1EYXRhLmlkLCAn5pON5L2c5Lq6Jyk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8vIOWmguaenOS4uuS4k+mhueW3oeajgO+8jOS4jeWKoOWFpeW+heWKnuihqFxuICAgICAgICAgIGlmIChtb2R1bGVDb2RlICE9PSAnc3BlY2lhbC1pbnNwZWN0LXByb2JsZW0nKSB7XG4gICAgICAgICAgICAvLyDlpI3pqozpgJrov4flvoXlip4tLT7lt7Llip5cbiAgICAgICAgICAgIHZhciBzb3J0ID0gVG9kb1NlcnZpY2UuZ2V0VG9kb1NvcnQoXG4gICAgICAgICAgICAgIHByb2JsZW1EYXRhLnN0YXR1cyxcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX2RlYWRsaW5lLFxuICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5jbG9zZV9kYXRlLFxuICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5yZXBhaXJfZGF0ZSxcbiAgICAgICAgICAgICAgcHJvYmxlbURhdGEuc2VudF9iYWNrX3RpbWVzLFxuICAgICAgICAgICAgICBwcm9ibGVtRGF0YS5lbWVyZ2VuY3lfZGVncmVlLFxuICAgICAgICAgICAgICAnY2hlY2snXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgcmV0dXJuIFRvZG9TZXJ2aWNlLmluc2VydFRvZG9EYXRhKFxuICAgICAgICAgICAgICB1c2VyLnVzZXJfaWQsXG4gICAgICAgICAgICAgIHByb2JsZW1EYXRhLmlkLFxuICAgICAgICAgICAgICBtb2R1bGVDb2RlIHx8ICdjaGVjaycsXG4gICAgICAgICAgICAgIDIsXG4gICAgICAgICAgICAgIHNvcnRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gRGF0YVN5bmNocm9uaXplci5hZGRTeW5jR3JvdXAoW1xuICAgICAgICAgICAgWydjaGVja3F1YWxpdHlfcHJvYmxlbScsIHByb2JsZW1EYXRhLmlkXSxcbiAgICAgICAgICAgIFsnY2hlY2txdWFsaXR5X3JlaW5zcGVjdF9ieScsIHJlaW5zcGVjdElkXSxcbiAgICAgICAgICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgICAgIF0pO1xuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgJGxvZy5lcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gJHEucmVqZWN0KGVycm9yKTtcbiAgICB9KTtcbn07XG5cbi8qKlxuICog5aSN6aqM6YCA5ZueXG4gKiBAcGFyYW0gcHJvYmxlbURhdGEg6Zeu6aKY5Y2V5pWw5o2uXG4gKiBAcmV0dXJucyB7cHJvbWlzZX1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfcmVpbnNwZWN0UmVqZWN0ID0gZnVuY3Rpb24ocHJvYmxlbURhdGEsIG1vZHVsZUNvZGUpIHtcbiAgdmFyIHN5bmNRdWV1ZSA9IFtcbiAgICBbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtJywgcHJvYmxlbURhdGEuaWRdLFxuICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICBdO1xuXG4gIGlmIChwcm9ibGVtRGF0YS5zdGF0dXMgIT09ICflvoXlpI3pqownKSB7XG4gICAgcmV0dXJuICRxLnJlamVjdCgn6Zeu6aKY5Y2V54q25oCB5byC5bi4Jyk7XG4gIH1cblxuICBpZiAoIXByb2JsZW1EYXRhLnNlbnRfYmFja19yZW1hcmspIHtcbiAgICByZXR1cm4gJHEucmVqZWN0KCfor7floavlhpnpgIDlm57ljp/lm6AnKTtcbiAgfVxuICB2YXIgdXNlciA9IGNvbnRleHQuZ2V0VXNlcigpO1xuXG4gIGlmICghcHJvYmxlbURhdGEuc2VudF9iYWNrX3RpbWVzKSB7XG4gICAgcHJvYmxlbURhdGEuc2VudF9iYWNrX3RpbWVzID0gMTtcbiAgfSBlbHNlIHtcbiAgICBwcm9ibGVtRGF0YS5zZW50X2JhY2tfdGltZXMrKztcbiAgfVxuXG4gIHByb2JsZW1EYXRhLnN0YXR1cyA9ICflvoXmlbTmlLknO1xuICBwcm9ibGVtRGF0YS5zZW50X2JhY2tfZGF0ZSA9IFV0aWxzLmdldE5vd0RhdGUoKTtcbiAgcHJvYmxlbURhdGEuc2VudF9iYWNrX2J5ID0gdXNlci51c2VyX2lkO1xuICB2YXIgc2VudEJhY2tJbWFnZUZpbGUgPSBKU09OLnN0cmluZ2lmeShwcm9ibGVtRGF0YS5zZW50X2JhY2tfaW1hZ2VfZmlsZSk7XG4gICRsb2cubG9nKCfnjrDlnLrmo4Dmn6UtLT7lpI3pqozpgIDlm54nLCBwcm9ibGVtRGF0YSk7XG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5yZWluc3BlY3RQcm9ibGVtUmVqZWN0KFxuICAgIHByb2JsZW1EYXRhLmlkLFxuICAgIHByb2JsZW1EYXRhLnN0YXR1cyxcbiAgICBwcm9ibGVtRGF0YS5zZW50X2JhY2tfZGF0ZSxcbiAgICBwcm9ibGVtRGF0YS5zZW50X2JhY2tfcmVtYXJrLFxuICAgIHNlbnRCYWNrSW1hZ2VGaWxlLFxuICAgIHByb2JsZW1EYXRhLnNlbnRfYmFja19ieSxcbiAgICBwcm9ibGVtRGF0YS5zZW50X2JhY2tfdGltZXNcbiAgKVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g5L+d5a2Y6Zeu6aKY54q25oCB5Y+Y5YyW5pel5b+XXG4gICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbUxvZ1JlcG9zaXRvcnkuc2F2ZVByb2JsZW1TdGF0dXNMb2coXG4gICAgICAgIHByb2JsZW1EYXRhLnByb2pfaWQsXG4gICAgICAgIHByb2JsZW1EYXRhLmJpZHNlY3Rpb25faWQsXG4gICAgICAgIHByb2JsZW1EYXRhLmJhdGNoX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5pZCxcbiAgICAgICAgJ+W3sumAgOWbnicsXG4gICAgICAgIHByb2JsZW1EYXRhLnNlbnRfYmFja19yZW1hcmssXG4gICAgICAgICcnLFxuICAgICAgICBzZW50QmFja0ltYWdlRmlsZVxuICAgICAgKTtcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g5oqK5omA5pyJ5aSN6aqM5Lq655qE5aSN6aqM5pWw5o2u5riF56m6XG4gICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlaW5zcGVjdFJlcG9zaXRvcnkuY2xlYXJSZWluc3BlY3RCeURhdGEocHJvYmxlbURhdGEuaWQpO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAvLyDlsIblvZPliY3kurrliqDlhaXmioTpgIHkurrpm4blkIhcbiAgICAgIHJldHVybiBfYXBwZW5kVG9DQyhwcm9ibGVtRGF0YS5pZCwgJ+aTjeS9nOS6uicpO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAvLyDlpoLmnpzkuLrkuJPpobnlt6Hmo4DvvIzkuI3liqDlhaXlvoXlip7ooahcbiAgICAgIGlmIChtb2R1bGVDb2RlICE9PSAnc3BlY2lhbC1pbnNwZWN0LXByb2JsZW0nKSB7XG4gICAgICAgIC8vIOWkjemqjOmAgOWbnuW+heWKni0tPuW3suWKnlxuICAgICAgICB2YXIgdHlwZSA9IDI7XG4gICAgICAgIGlmIChwcm9ibGVtRGF0YS5yZXBhaXJfc2V0LmlkICYmIHByb2JsZW1EYXRhLnJlcGFpcl9zZXQuaWQgPT09IHVzZXIudXNlcl9pZCkge1xuICAgICAgICAgIHR5cGUgPSAxO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzb3J0ID0gVG9kb1NlcnZpY2UuZ2V0VG9kb1NvcnQoXG4gICAgICAgICAgcHJvYmxlbURhdGEuc3RhdHVzLFxuICAgICAgICAgIHByb2JsZW1EYXRhLnJlcGFpcl9kZWFkbGluZSxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5jbG9zZV9kYXRlLFxuICAgICAgICAgIHByb2JsZW1EYXRhLnJlcGFpcl9kYXRlLFxuICAgICAgICAgIHByb2JsZW1EYXRhLnNlbnRfYmFja190aW1lcyxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5lbWVyZ2VuY3lfZGVncmVlLFxuICAgICAgICAgICdjaGVjaydcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIFRvZG9TZXJ2aWNlLmluc2VydFRvZG9EYXRhKHVzZXIudXNlcl9pZCwgcHJvYmxlbURhdGEuaWQsICdjaGVjaycsIHR5cGUsIHNvcnQpO1xuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlaW5zcGVjdFJlcG9zaXRvcnkuZ2V0UmVpbnNwZWN0QnlMaXN0KHByb2JsZW1EYXRhLmlkKS50aGVuKFxuICAgICAgICBmdW5jdGlvbihyZWluc3BlY3RCeUxpc3QpIHtcbiAgICAgICAgICBzeW5jUXVldWUucHVzaChbJ2NoZWNrcXVhbGl0eV9yZWluc3BlY3RfYnknLCBfLm1hcChyZWluc3BlY3RCeUxpc3QsICdpZCcpXSk7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIOmHjee9ruaVtOaUueS6uuW3suivu+acquivu+eKtuaAgSzku6XliY3nmoTml6fmlbDmja7kuI3lpITnkIZcbiAgICAgIGlmIChwcm9ibGVtRGF0YS5oYXNfcmVhZCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcGFpclJlcG9zaXRvcnkudXBkYXRlKFxuICAgICAgICAgIHsgaGFzX3JlYWQ6IDAgfSxcbiAgICAgICAgICB7IGNoZWNrcXVhbGl0eV9wcm9ibGVtX2lkOiBwcm9ibGVtRGF0YS5pZCB9XG4gICAgICAgICkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICBzeW5jUXVldWUucHVzaChbJ2NoZWNrcXVhbGl0eV9yZXBhaXInLCBwcm9ibGVtRGF0YS5pZF0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIERhdGFTeW5jaHJvbml6ZXIuYWRkU3luY0dyb3VwKHN5bmNRdWV1ZSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIOmdnuato+W4uOWFs+mXrVxuICogQHBhcmFtIHByb2JsZW1EYXRhIOmXrumimOWNleaVsOaNrlxuICogQHJldHVybnMge3Byb21pc2V9XG4gKiBAcHJpdmF0ZVxuICovXG52YXIgX2Nsb3NlID0gZnVuY3Rpb24ocHJvYmxlbURhdGEsIG1vZHVsZUNvZGUpIHtcbiAgaWYgKHByb2JsZW1EYXRhLnN0YXR1cyAhPT0gJ+W+heaVtOaUuScpIHtcbiAgICByZXR1cm4gJHEucmVqZWN0KCfpl67popjljZXnirbmgIHlvILluLgnKTtcbiAgfVxuXG4gIGlmICghcHJvYmxlbURhdGEuY2xvc2VfcmVhc29uKSB7XG4gICAgcmV0dXJuICRxLnJlamVjdCgn6K+35aGr5YaZ5YWz6Zet5Y6f5ZugJyk7XG4gIH1cbiAgdmFyIHVzZXIgPSBjb250ZXh0LmdldFVzZXIoKTtcbiAgcHJvYmxlbURhdGEuY2xvc2VfZGF0ZSA9IFV0aWxzLmdldE5vd0RhdGUoKTtcbiAgcHJvYmxlbURhdGEuc3RhdHVzID0gJ+W3suWFs+mXrSc7XG4gICRsb2cubG9nKCfnjrDlnLrmo4Dmn6UtLT7pnZ7mraPluLjlhbPpl60nLCBwcm9ibGVtRGF0YSk7XG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5jbG9zZVByb2JsZW0oXG4gICAgcHJvYmxlbURhdGEuaWQsXG4gICAgcHJvYmxlbURhdGEuc3RhdHVzLFxuICAgIHByb2JsZW1EYXRhLmNsb3NlX2RhdGUsXG4gICAgcHJvYmxlbURhdGEuY2xvc2VfcmVhc29uXG4gIClcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIOS/neWtmOmXrumimOeKtuaAgeWPmOWMluaXpeW/l1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1Mb2dSZXBvc2l0b3J5LnNhdmVQcm9ibGVtU3RhdHVzTG9nKFxuICAgICAgICBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5iaWRzZWN0aW9uX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5iYXRjaF9pZCxcbiAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgICflt7LlhbPpl60nLFxuICAgICAgICBwcm9ibGVtRGF0YS5jbG9zZV9yZWFzb24sXG4gICAgICAgICcnLFxuICAgICAgICAnJ1xuICAgICAgKTtcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g5bCG5b2T5YmN5Lq65Yqg5YWl5oqE6YCB5Lq66ZuG5ZCIXG4gICAgICByZXR1cm4gX2FwcGVuZFRvQ0MocHJvYmxlbURhdGEuaWQsICfmk43kvZzkuronKTtcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g5aaC5p6c5Li65LiT6aG55beh5qOA77yM5LiN5Yqg5YWl5b6F5Yqe6KGoXG4gICAgICBpZiAobW9kdWxlQ29kZSAhPT0gJ3NwZWNpYWwtaW5zcGVjdC1wcm9ibGVtJykge1xuICAgICAgICAvLyDpnZ7mraPluLjlhbPpl63lvoXlip4tLT7lt7Llip5cbiAgICAgICAgdmFyIHNvcnQgPSBUb2RvU2VydmljZS5nZXRUb2RvU29ydChcbiAgICAgICAgICBwcm9ibGVtRGF0YS5zdGF0dXMsXG4gICAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX2RlYWRsaW5lLFxuICAgICAgICAgIHByb2JsZW1EYXRhLmNsb3NlX2RhdGUsXG4gICAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX2RhdGUsXG4gICAgICAgICAgcHJvYmxlbURhdGEuc2VudF9iYWNrX3RpbWVzLFxuICAgICAgICAgIHByb2JsZW1EYXRhLmVtZXJnZW5jeV9kZWdyZWUsXG4gICAgICAgICAgJ2NoZWNrJ1xuICAgICAgICApO1xuICAgICAgICByZXR1cm4gVG9kb1NlcnZpY2UuaW5zZXJ0VG9kb0RhdGEodXNlci51c2VyX2lkLCBwcm9ibGVtRGF0YS5pZCwgJ2NoZWNrJywgMiwgc29ydCk7XG4gICAgICB9XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBEYXRhU3luY2hyb25pemVyLmFkZFN5bmNHcm91cChbXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgXSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIOS/ruaUueaVtOaUueS6ulxuICogQHBhcmFtIHByb2JsZW1EYXRhIOmXrumimOWNleaVsOaNrlxuICogQHJldHVybnMge3Byb21pc2V9XG4gKiBAcHJpdmF0ZVxuICovXG52YXIgX2NoYW5nZVJlcGFpciA9IGZ1bmN0aW9uKHByb2JsZW1EYXRhLCBpc0NvbnRyYWN0b3JDaGFuZ2UsIG1vZHVsZUNvZGUpIHtcbiAgaWYgKCFwcm9ibGVtRGF0YS5yZXBhaXJfc2V0IHx8ICFwcm9ibGVtRGF0YS5yZXBhaXJfc2V0LmlkKSB7XG4gICAgcmV0dXJuICRxLnJlamVjdCgn6K+35oyH5a6a5LiA5Liq5pW05pS55Lq6Jyk7XG4gIH1cbiAgdmFyIHVzZXIgPSBjb250ZXh0LmdldFVzZXIoKTtcbiAgJGxvZy5sb2coJ+eOsOWcuuajgOafpS0tPuS/ruaUueaVtOaUueS6uicsIHByb2JsZW1EYXRhKTtcbiAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LnVwZGF0ZVByb2JsZW1Nb2RpZmllZEJ5KHByb2JsZW1EYXRhLmlkKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIC8vIOWmguaenOaJv+W7uuWVhuWPmOS6hu+8jOWImeimgeS/neWtmOaJv+W7uuWVhlxuICAgICAgaWYgKGlzQ29udHJhY3RvckNoYW5nZSkge1xuICAgICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkudXBkYXRlUHJvYmxlbUNvbnRyYWN0b3IoXG4gICAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgICAgcHJvYmxlbURhdGEuY29udHJhY3Rvci5pZFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoaXNDb250cmFjdG9yQ2hhbmdlKSB7XG4gICAgICAgIHZhciBjb250cmFjdG9ySWQgPSBwcm9ibGVtRGF0YS5jb250cmFjdG9yID8gcHJvYmxlbURhdGEuY29udHJhY3Rvci5pZCB8fCAnJyA6ICcnO1xuICAgICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkudXBkYXRlUHJvYmxlbUNvbnRyYWN0b3IocHJvYmxlbURhdGEuaWQsIGNvbnRyYWN0b3JJZCk7XG4gICAgICB9XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIC8vIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwYWlyUmVwb3NpdG9yeS5jaGFuZ2VQcm9ibGVtUmVwYWlyKHByb2JsZW1EYXRhLmlkLCBwcm9ibGVtRGF0YS5yZXBhaXJfc2V0KTtcbiAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwYWlyUmVwb3NpdG9yeS5jaGFuZ2VQcm9ibGVtUmVwYWlyZXIocHJvYmxlbURhdGEpO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbUZwSW5mb1JlcG9zaXRvcnkuc2F2ZVByb2JsZW1GcEluZm8oXG4gICAgICAgIHByb2JsZW1EYXRhLnByb2pfaWQsXG4gICAgICAgIHByb2JsZW1EYXRhLmJpZHNlY3Rpb25faWQsXG4gICAgICAgIHByb2JsZW1EYXRhLmJhdGNoX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5pZCxcbiAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX3NldC5pZCxcbiAgICAgICAgcHJvYmxlbURhdGEucmVwYWlyX3NldF9vbGQuaWQsXG4gICAgICAgICfliIbphY3mlbTmlLnkuronXG4gICAgICApO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAvLyDlsIblvZPliY3kurrliqDlhaXmioTpgIHkurrpm4blkIhcbiAgICAgIHJldHVybiBfYXBwZW5kVG9DQyhwcm9ibGVtRGF0YS5pZCwgJ+aTjeS9nOS6uicpO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAvLyDlpoLmnpzkuLrkuJPpobnlt6Hmo4DvvIzkuI3liqDlhaXlvoXlip7ooahcbiAgICAgIGlmIChtb2R1bGVDb2RlICE9PSAnc3BlY2lhbC1pbnNwZWN0LXByb2JsZW0nKSB7XG4gICAgICAgIC8vIOS/ruaUueaVtOaUueS6uuW+heWKni0tPuW3suWKnlxuICAgICAgICB2YXIgdHlwZSA9IDI7XG4gICAgICAgIGlmIChwcm9ibGVtRGF0YS5yZXBhaXJfc2V0LmlkICYmIHByb2JsZW1EYXRhLnJlcGFpcl9zZXQuaWQgPT09IHVzZXIudXNlcl9pZCkge1xuICAgICAgICAgIHR5cGUgPSAxO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzb3J0ID0gVG9kb1NlcnZpY2UuZ2V0VG9kb1NvcnQoXG4gICAgICAgICAgcHJvYmxlbURhdGEuc3RhdHVzLFxuICAgICAgICAgIHByb2JsZW1EYXRhLnJlcGFpcl9kZWFkbGluZSxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5jbG9zZV9kYXRlLFxuICAgICAgICAgIHByb2JsZW1EYXRhLnJlcGFpcl9kYXRlLFxuICAgICAgICAgIHByb2JsZW1EYXRhLnNlbnRfYmFja190aW1lcyxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5lbWVyZ2VuY3lfZGVncmVlLFxuICAgICAgICAgICdjaGVjaydcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIFRvZG9TZXJ2aWNlLmluc2VydFRvZG9EYXRhKHVzZXIudXNlcl9pZCwgcHJvYmxlbURhdGEuaWQsICdjaGVjaycsIHR5cGUsIHNvcnQpO1xuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gRGF0YVN5bmNocm9uaXplci5hZGRTeW5jR3JvdXAoW1xuICAgICAgICBbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgICBbJ2NoZWNrcXVhbGl0eV9yZXBhaXInLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgICBbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtX2ZwaW5mbycsIHByb2JsZW1EYXRhLmlkXSxcbiAgICAgIF0pO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAkbG9nLmVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyb3IpO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiDkv67mlLnlpI3pqozkurpcbiAqIEBwYXJhbSBwcm9ibGVtRGF0YSDpl67popjljZXmlbDmja5cbiAqIEByZXR1cm5zIHtwcm9taXNlfVxuICogQHByaXZhdGVcbiAqL1xudmFyIF9jaGFuZ2VSZWluc3BlY3QgPSBmdW5jdGlvbihwcm9ibGVtRGF0YSwgbW9kdWxlQ29kZSkge1xuICBpZiAoXy5pc0VtcHR5KHByb2JsZW1EYXRhLnJlaW5zcGVjdF9zZXQpKSB7XG4gICAgcmV0dXJuICRxLnJlamVjdCgn6K+35oyH5a6a5LiA5Liq5aSN6aqM5Lq6Jyk7XG4gIH1cbiAgdmFyIHVzZXIgPSBjb250ZXh0LmdldFVzZXIoKTtcbiAgJGxvZy5sb2coJ+eOsOWcuuajgOafpS0tPuS/ruaUueWkjemqjOS6uicsIHByb2JsZW1EYXRhKTtcbiAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LnVwZGF0ZVByb2JsZW1Nb2RpZmllZEJ5KHByb2JsZW1EYXRhLmlkKVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmNoYW5nZVByb2JsZW1SZWluc3BlY3QoXG4gICAgICAgIHByb2JsZW1EYXRhLmlkLFxuICAgICAgICBwcm9ibGVtRGF0YS5yZWluc3BlY3Rfc2V0LFxuICAgICAgICB0cnVlXG4gICAgICApO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmVpbnNwZWN0SWRzID0gXy5tYXAocHJvYmxlbURhdGEucmVpbnNwZWN0X3NldCwgZnVuY3Rpb24ocmVpbnNwZWN0KSB7XG4gICAgICAgIHJldHVybiByZWluc3BlY3QuaWQ7XG4gICAgICB9KS5qb2luKCcsJyk7XG4gICAgICB2YXIgcmVpbnNwZWN0SWRzT2xkID0gXy5tYXAocHJvYmxlbURhdGEucmVpbnNwZWN0X3NldF9vbGQsIGZ1bmN0aW9uKHJlaW5zcGVjdCkge1xuICAgICAgICByZXR1cm4gcmVpbnNwZWN0LmlkO1xuICAgICAgfSkuam9pbignLCcpO1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1GcEluZm9SZXBvc2l0b3J5LnNhdmVQcm9ibGVtRnBJbmZvKFxuICAgICAgICBwcm9ibGVtRGF0YS5wcm9qX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5iaWRzZWN0aW9uX2lkLFxuICAgICAgICBwcm9ibGVtRGF0YS5iYXRjaF9pZCxcbiAgICAgICAgcHJvYmxlbURhdGEuaWQsXG4gICAgICAgIHJlaW5zcGVjdElkcyxcbiAgICAgICAgcmVpbnNwZWN0SWRzT2xkLFxuICAgICAgICAn5YiG6YWN5aSN6aqM5Lq6J1xuICAgICAgKTtcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g5bCG5b2T5YmN5Lq65Yqg5YWl5oqE6YCB5Lq66ZuG5ZCIXG4gICAgICByZXR1cm4gX2FwcGVuZFRvQ0MocHJvYmxlbURhdGEuaWQsICfmk43kvZzkuronKTtcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g5aaC5p6c5Li65LiT6aG55beh5qOA77yM5LiN5Yqg5YWl5b6F5Yqe6KGoXG4gICAgICBpZiAobW9kdWxlQ29kZSAhPT0gJ3NwZWNpYWwtaW5zcGVjdC1wcm9ibGVtJykge1xuICAgICAgICAvLyDkv67mlLnlpI3pqozkurrlvoXlip4tLT7lt7Llip5cbiAgICAgICAgdmFyIHR5cGUgPSAyO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgXy5maWx0ZXIocHJvYmxlbURhdGEucmVpbnNwZWN0X3NldCwgeyB1c2VyX2lkOiB1c2VyLnVzZXJfaWQgfSkubGVuZ3RoICYmXG4gICAgICAgICAgcHJvYmxlbURhdGEuc3RhdHVzID09PSAn5b6F5aSN6aqMJ1xuICAgICAgICApIHtcbiAgICAgICAgICB0eXBlID0gMTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc29ydCA9IFRvZG9TZXJ2aWNlLmdldFRvZG9Tb3J0KFxuICAgICAgICAgIHByb2JsZW1EYXRhLnN0YXR1cyxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5yZXBhaXJfZGVhZGxpbmUsXG4gICAgICAgICAgcHJvYmxlbURhdGEuY2xvc2VfZGF0ZSxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5yZXBhaXJfZGF0ZSxcbiAgICAgICAgICBwcm9ibGVtRGF0YS5zZW50X2JhY2tfdGltZXMsXG4gICAgICAgICAgcHJvYmxlbURhdGEuZW1lcmdlbmN5X2RlZ3JlZSxcbiAgICAgICAgICAnY2hlY2snXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBUb2RvU2VydmljZS5pbnNlcnRUb2RvRGF0YSh1c2VyLnVzZXJfaWQsIHByb2JsZW1EYXRhLmlkLCAnY2hlY2snLCB0eXBlLCBzb3J0KTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmdldFJlaW5zcGVjdEJ5TGlzdChwcm9ibGVtRGF0YS5pZCk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbihyZWluc3BlY3RCeUxpc3QpIHtcbiAgICAgIHJldHVybiBEYXRhU3luY2hyb25pemVyLmFkZFN5bmNHcm91cChbXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3JlaW5zcGVjdCcsIHByb2JsZW1EYXRhLmlkXSxcbiAgICAgICAgWydjaGVja3F1YWxpdHlfcmVpbnNwZWN0X2J5JywgXy5tYXAocmVpbnNwZWN0QnlMaXN0LCAnaWQnKV0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgICBbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtX2ZwaW5mbycsIHByb2JsZW1EYXRhLmlkXSxcbiAgICAgIF0pO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAkbG9nLmVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyb3IpO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiDkv67mlLnmioTpgIHkurpcbiAqIEBwYXJhbSBwcm9ibGVtRGF0YSDpl67popjljZXmlbDmja5cbiAqIEByZXR1cm5zIHtwcm9taXNlfVxuICogQHByaXZhdGVcbiAqL1xudmFyIF9jaGFuZ2VDQyA9IGZ1bmN0aW9uKHByb2JsZW1EYXRhKSB7XG4gICRsb2cubG9nKCfnjrDlnLrmo4Dmn6UtLT7kv67mlLnmioTpgIHkuronLCBwcm9ibGVtRGF0YSk7XG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS51cGRhdGVQcm9ibGVtTW9kaWZpZWRCeShwcm9ibGVtRGF0YS5pZClcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtQ0NSZXBvc2l0b3J5LnNhdmVQcm9ibGVtQ0MocHJvYmxlbURhdGEuaWQsIHByb2JsZW1EYXRhLmNjX3NldCk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBEYXRhU3luY2hyb25pemVyLmFkZFN5bmNHcm91cChbXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwcm9ibGVtRGF0YS5pZF0sXG4gICAgICAgIFsnY2hlY2txdWFsaXR5X2NjJywgcHJvYmxlbURhdGEuaWRdLFxuICAgICAgXSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIOS/ruaUuei0o+S7u+WNleS9jVxuICogQHBhcmFtIHByb2JsZW1EYXRhIOmXrumimOWNleaVsOaNrlxuICogQHJldHVybnMge3Byb21pc2V9XG4gKiBAcHJpdmF0ZVxuICovXG52YXIgX2NoYW5nZUNvbnRyYWN0b3IgPSBmdW5jdGlvbihwcm9ibGVtRGF0YSkge1xuICBpZiAoIXByb2JsZW1EYXRhLmNvbnRyYWN0b3IgfHwgIXByb2JsZW1EYXRhLmNvbnRyYWN0b3IuaWQpIHtcbiAgICByZXR1cm4gJHEucmVqZWN0KCfor7fmjIflrprotKPku7vljZXkvY0nKTtcbiAgfVxuICAkbG9nLmxvZygn546w5Zy65qOA5p+lLS0+5L+u5pS56LSj5Lu75Y2V5L2NJywgcHJvYmxlbURhdGEpO1xuICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkudXBkYXRlUHJvYmxlbUNvbnRyYWN0b3IoXG4gICAgcHJvYmxlbURhdGEuaWQsXG4gICAgcHJvYmxlbURhdGEuY29udHJhY3Rvci5pZFxuICApXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gRGF0YVN5bmNocm9uaXplci5hZGRTeW5jR3JvdXAoW1snY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwcm9ibGVtRGF0YS5pZF1dKTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgJGxvZy5lcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gJHEucmVqZWN0KGVycm9yKTtcbiAgICB9KTtcbn07XG5cbi8qKlxuICog5L+u5pS55pW05pS55pyf6ZmQXG4gKiBAcGFyYW0gcHJvYmxlbURhdGEg6Zeu6aKY5Y2V5pWw5o2uXG4gKiBAcmV0dXJucyB7cHJvbWlzZX1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfY2hhbmdlUmVwYWlyRGVhZGxpbmUgPSBmdW5jdGlvbihwcm9ibGVtRGF0YSkge1xuICB2YXIgciA9IC9eKFxcZCspLShcXGR7MSwyfSktKFxcZHsxLDJ9KSQvOyAvLyB5eXl5LU1NLWRkXG4gIGlmICghci50ZXN0KHByb2JsZW1EYXRhLnJlcGFpcl9kZWFkbGluZSkpIHtcbiAgICByZXR1cm4gJHEucmVqZWN0KCfmlbTmlLnmnJ/pmZDpnIDopoHkuIDkuKrml6XmnJ/moLzlvI/nmoTlgLwnKTtcbiAgfVxuXG4gIHZhciByZXBhaXJEZWFkbGluZSA9IG1vbWVudChwcm9ibGVtRGF0YS5yZXBhaXJfZGVhZGxpbmUpLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuICB2YXIgdG9kYXkgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVktTU0tREQnKTtcblxuICBwcm9ibGVtRGF0YS5pc190aW1lb3V0ID0gcmVwYWlyRGVhZGxpbmUgPCB0b2RheTtcbiAgJGxvZy5sb2coJ+eOsOWcuuajgOafpS0tPuS/ruaUueaVtOaUueacn+mZkCcsIHByb2JsZW1EYXRhKTtcbiAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LnVwZGF0ZVByb2JsZW1SZXBhaXJEZWFkbGluZShcbiAgICBwcm9ibGVtRGF0YS5pZCxcbiAgICBwcm9ibGVtRGF0YS5yZXBhaXJfZGVhZGxpbmVcbiAgKVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIERhdGFTeW5jaHJvbml6ZXIuYWRkU3luY0dyb3VwKFtbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtJywgcHJvYmxlbURhdGEuaWRdXSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICRsb2cuZXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIOWwhuW9k+WJjeS6uua3u+WKoOiHs+aKhOmAgeS6uumbhuWQiFxuICogQHBhcmFtIGlkIOmXrumimElkXG4gKiBAcGFyYW0gdHlwZSDmioTpgIHnsbvlnovvvIjooqvmioTpgIF855m76K6w5Lq6fOaTjeS9nOS6uu+8iVxuICogQHByaXZhdGVcbiAqL1xudmFyIF9hcHBlbmRUb0NDID0gZnVuY3Rpb24oaWQsIHR5cGUpIHtcbiAgdmFyIHVzZXIgPSBjb250ZXh0LmdldFVzZXIoKTtcblxuICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbUNDUmVwb3NpdG9yeS5nZXRQcm9ibGVtQ0NBbGxDb2x1bW4oaWQpLnRoZW4oZnVuY3Rpb24oY2NMaXN0KSB7XG4gICAgLy8g5bCG5b2T5YmN5Lq65Yqg5YWl5oqE6YCB5Lq66ZuG5ZCIXG4gICAgLy8g5aaC5p6c5oqE6YCB5Lq66ZuG5ZCI5bey57uP5YyF5ZCr6Zeu6aKY55qE55m76K6w5Lq677yM5YiZ5LiN5YaN6YeN5aSN5re75YqgXG4gICAgaWYgKFxuICAgICAgXy5zb21lKGNjTGlzdCwgZnVuY3Rpb24oY2MpIHtcbiAgICAgICAgcmV0dXJuIGNjLmNjID09PSB1c2VyLnVzZXJfaWQgJiYgY2MudHlwZSA9PT0gdHlwZTtcbiAgICAgIH0pXG4gICAgKSB7XG4gICAgICAvLyDmioTpgIHkurrlt7Lnu4/lrZjlnKjvvIzku4Xmm7TmlrDpmIXor7vml7bpl7RcbiAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtQ0NSZXBvc2l0b3J5LnVwZGF0ZVByb2JsZW1SZWFkaW5nVGltZShpZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBjYyA9IHtcbiAgICAgICAgaWQ6IHVzZXIudXNlcl9pZCxcbiAgICAgICAgbmFtZTogdXNlci51c2VyX25hbWUsXG4gICAgICAgIHR5cGU6IHR5cGUsXG4gICAgICAgIHJlYWRpbmdfdGltZTogVXRpbHMuZ2V0Tm93RGF0ZSgpLFxuICAgICAgfTtcbiAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtQ0NSZXBvc2l0b3J5LmFwcGVuZENDKGlkLCBjYykudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnkudXBkYXRlUHJvYmxlbVJlYWRpbmdUaW1lKGlkKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIOiOt+WPlumXrumimOWNleWcqOacrOWcsOeahOeKtuaAge+8iOWPr+iDveS8muWtmOWcqOacquS4iuS8oOeahOaDheWGte+8iVxuICogQHBhcmFtIHByb2JsZW0g6Zeu6aKY5Y2V5a+56LGhIHtzdGF0dXMsIHJlaW5zcGVjdF9ieSwgcmVwYWlyX3NldF9pZCwgcmVpbnNwZWN0X3NldF9pZH1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfZ2V0UHJvYmxlbUxvY2FsU3RhdHVzID0gZnVuY3Rpb24ocHJvYmxlbSkge1xuICB2YXIgc3RhdHVzVGV4dCA9IHByb2JsZW0uc3RhdHVzO1xuICBpZiAocHJvYmxlbS5zdGF0dXMgPT09ICflt7LlhbPpl60nKSB7XG4gICAgc3RhdHVzVGV4dCA9ICfpnZ7mraPluLjlhbPpl60nO1xuICB9XG5cbiAgcmV0dXJuICRxLnJlc29sdmUoeyBzdGF0dXNfdGV4dDogc3RhdHVzVGV4dCB9KTtcbn07XG5cbi8qKlxuICog6I635Y+W6Zeu6aKY5Y2V5Zyo5pys5Zyw55qE54q25oCB77yI5Y+v6IO95Lya5a2Y5Zyo5pyq5LiK5Lyg55qE5oOF5Ya177yJXG4gKiBAcGFyYW0gaWQg6Zeu6aKY5Y2VSWRcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfZ2V0UHJvYmxlbUxvY2FsU3RhdHVzQnlJZCA9IGZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiBfZ2V0UHJvYmxlbUxvY2FsU3RhdHVzKHsgc3RhdHVzOiBwLnN0YXR1cyB9KTtcbn07XG5cbi8qKlxuICog55So5LqO5pqC5a2Y5pW05pS55Lq65Li05pe257yW6L6R55qE5L+h5oGvXG4gKiBAcGFyYW0gcHJvYmxlbUlkIOmXrumimElkXG4gKiBAcGFyYW0gcmVwYWlyUmVtYXJrIOaVtOaUueihpeWFheivtOaYjlxuICogQHBhcmFtIHJlcGFpckltYWdlRmlsZSDmlbTmlLnlm77niYdcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBfc2F2ZVJlcGFpckluZm8gPSBmdW5jdGlvbihwcm9ibGVtSWQsIHJlcGFpclJlbWFyaywgcmVwYWlySW1hZ2VGaWxlKSB7XG4gIHJlcGFpckltYWdlRmlsZSA9IEpTT04uc3RyaW5naWZ5KHJlcGFpckltYWdlRmlsZSk7XG4gIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5zYXZlUmVwYWlySW5mbyhcbiAgICBwcm9ibGVtSWQsXG4gICAgcmVwYWlyUmVtYXJrLFxuICAgIHJlcGFpckltYWdlRmlsZVxuICApLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LmdldENoZWNrUHJvYmxlbURyYWZ0KHByb2JsZW1JZCkudGhlbihmdW5jdGlvbihwKSB7XG4gICAgICByZXR1cm4gVG9kb0xpc3RTZXJ2aWNlLmJhY2tVcERyYWZ0KHByb2JsZW1JZCwgcC5wcm9qX2lkLCAnY2hlY2txdWFsaXR5X3Byb2JsZW0nLCBwKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG4vKipcbiAqIOacjeWKoeWFrOW8gOeahOWvueixoVxc5pa55rOVXG4gKi9cbl9zZWxmID0ge1xuICAvKipcbiAgICog6I635Y+W6I2J56i/5YiX6KGoXG4gICAqL1xuICBnZXRDaGVja1Byb2JsZW1EcmFmdExpc3Q6IF9nZXRDaGVja1Byb2JsZW1EcmFmdExpc3QsXG4gIC8qKlxuICAgKiDojrflj5blt7Lmj5DkuqTliJfooahcbiAgICovXG4gIGdldENoZWNrUHJvYmxlbUxpc3Q6IF9nZXRDaGVja1Byb2JsZW1MaXN0LFxuICAvKipcbiAgICog5qC55o2uSWTov5Tlm57pl67popjlr7nosaFcbiAgICovXG4gIGdldENoZWNrUHJvYmxlbUluZm86IF9nZXRDaGVja1Byb2JsZW1JbmZvLFxuICAvKipcbiAgICog5o+Q5Lqk6Zeu6aKY5Y2VXG4gICAqL1xuICBzdWJtaXQ6IF9zdWJtaXQsXG4gIC8qKlxuICAgKiDkv53lrZjojYnnqL9cbiAgICovXG4gIHNhdmU6IF9zYXZlLFxuICAvKipcbiAgICog5Yig6Zmk6I2J56i/XG4gICAqL1xuICBkZWxldGU6IF9kZWxldGUsXG4gIC8qKlxuICAgKiDlrozmiJDmlbTmlLlcbiAgICovXG4gIHJlcGFpcjogX3JlcGFpcixcbiAgLyoqXG4gICAqIOWkjemqjOmAmui/h1xuICAgKi9cbiAgcmVpbnNwZWN0UGFzczogX3JlaW5zcGVjdFBhc3MsXG4gIC8qKlxuICAgKiDlpI3pqozpgIDlm55cbiAgICovXG4gIHJlaW5zcGVjdFJlamVjdDogX3JlaW5zcGVjdFJlamVjdCxcbiAgLyoqXG4gICAqIOmdnuato+W4uOWFs+mXrVxuICAgKi9cbiAgY2xvc2U6IF9jbG9zZSxcbiAgLyoqXG4gICAqIOS/ruaUueaVtOaUueS6ulxuICAgKi9cbiAgY2hhbmdlUmVwYWlyOiBfY2hhbmdlUmVwYWlyLFxuICAvKipcbiAgICog5L+u5pS55aSN6aqM5Lq6XG4gICAqL1xuICBjaGFuZ2VSZWluc3BlY3Q6IF9jaGFuZ2VSZWluc3BlY3QsXG4gIC8qKlxuICAgKiDkv67mlLnmioTpgIHkurpcbiAgICovXG4gIGNoYW5nZUNDOiBfY2hhbmdlQ0MsXG4gIC8qKlxuICAgKiDkv67mlLnmib/lu7rllYZcbiAgICovXG4gIGNoYW5nZUNvbnRyYWN0b3I6IF9jaGFuZ2VDb250cmFjdG9yLFxuICAvKipcbiAgICog5L+u5pS55pW05pS55pyf6ZmQXG4gICAqL1xuICBjaGFuZ2VSZXBhaXJEZWFkbGluZTogX2NoYW5nZVJlcGFpckRlYWRsaW5lLFxuICAvKipcbiAgICog6I635Y+W6Zeu6aKY5Y2V5Zyo5pys5Zyw55qE54q25oCB77yI5Y+v6IO95Lya5a2Y5Zyo5pyq5LiK5Lyg55qE5oOF5Ya177yJXG4gICAqL1xuICBnZXRQcm9ibGVtTG9jYWxTdGF0dXNCeUlkOiBfZ2V0UHJvYmxlbUxvY2FsU3RhdHVzQnlJZCxcbiAgLyoqXG4gICAqIOiOt+WPlumXrumimOWNleWcqOacrOWcsOeahOeKtuaAge+8iOWPr+iDveS8muWtmOWcqOacquS4iuS8oOeahOaDheWGte+8ie+8jOS8oOmAkumXrumimOWNleWvueixoe+8jOaAp+iDvei+g+W/q1xuICAgKi9cbiAgZ2V0UHJvYmxlbUxvY2FsU3RhdHVzOiBfZ2V0UHJvYmxlbUxvY2FsU3RhdHVzLFxuICAvKipcbiAgICog55So5LqO5L+d5a2Y5pW05pS55Lq65Li05pe257yW6L6R55qE5L+h5oGvXG4gICAqL1xuICBzYXZlUmVwYWlySW5mbzogX3NhdmVSZXBhaXJJbmZvLFxuXG4gIHByb2JsZW1SZWFkOiBmdW5jdGlvbihwcm9ibGVtSWQpIHtcbiAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcGFpclJlcG9zaXRvcnkudXBkYXRlKFxuICAgICAgeyBoYXNfcmVhZDogMSB9LFxuICAgICAgeyBjaGVja3F1YWxpdHlfcHJvYmxlbV9pZDogcHJvYmxlbUlkIH1cbiAgICApLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gRGF0YVN5bmNocm9uaXplci5hZGRTeW5jR3JvdXAoW1xuICAgICAgICBbJ2NoZWNrcXVhbGl0eV9wcm9ibGVtJywgcHJvYmxlbUlkXSxcbiAgICAgICAgWydjaGVja3F1YWxpdHlfcmVwYWlyJywgcHJvYmxlbUlkXSxcbiAgICAgIF0pO1xuICAgIH0pO1xuICB9LFxuICAvKipcbiAgICog5ouN54Wn5bm25L+d5a2Y6I2J56i/XG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgdGFrZVBpY3R1cmVBbmRTYXZlOiBmdW5jdGlvbihiYXRjaElkKSB7XG4gICAgdmFyIG9wdGlvbnMgPSB7fTtcbiAgICBvcHRpb25zLnNob290VmlkZW8gPSB0cnVlO1xuXG4gICAgcmV0dXJuIEltYWdlU2VydmljZS50YWtlUGljdHVyZShvcHRpb25zKVxuICAgICAgLnRoZW4oZnVuY3Rpb24oaW1hZ2UpIHtcbiAgICAgICAgaWYgKGltYWdlKSB7XG4gICAgICAgICAgcmV0dXJuIEJhdGNoU2VydmljZS5nZXRCYXRjaChiYXRjaElkKS50aGVuKGZ1bmN0aW9uKGJhdGNoKSB7XG4gICAgICAgICAgICB2YXIgcHJvYmxlbSA9IHtcbiAgICAgICAgICAgICAgcHJval9pZDogYmF0Y2gucHJval9pZCxcbiAgICAgICAgICAgICAgYmlkc2VjdGlvbl9pZDogYmF0Y2guYmlkc2VjdGlvbl9pZCxcbiAgICAgICAgICAgICAgYmF0Y2hfaWQ6IGJhdGNoLmlkLFxuICAgICAgICAgICAgICBkZWFkbGluZTogYmF0Y2gucmVwYWlyX2RlYWRsaW5lLFxuICAgICAgICAgICAgICBiYXRjaF90eXBlOiBiYXRjaC5iYXRjaF90eXBlLFxuICAgICAgICAgICAgICBjcmVhdGVkX2J5OiBjb250ZXh0LmdldFVzZXIoKS51c2VyX2lkLFxuICAgICAgICAgICAgICBjcmVhdGVkX29uOiBVdGlscy5ub3coKSxcbiAgICAgICAgICAgICAgaW1hZ2VfZmlsZTogW2ltYWdlXSxcbiAgICAgICAgICAgICAgc3RhdHVzOiAn5b6F5o+Q5LqkJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gX3NlbGYuc2F2ZShwcm9ibGVtKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAkbG9nLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICog5qC55o2u54Wn54mH5L+d5a2Y6I2J56i/XG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgc2F2ZUJ5UGljdHVyZTogZnVuY3Rpb24ocGF0aCwgYmF0Y2hJZCkge1xuICAgIGlmICghcGF0aCkge1xuICAgICAgcmV0dXJuICRxLndoZW4oKTtcbiAgICB9XG4gICAgcmV0dXJuIEJhdGNoU2VydmljZS5nZXRCYXRjaChiYXRjaElkKVxuICAgICAgLnRoZW4oZnVuY3Rpb24oYmF0Y2gpIHtcbiAgICAgICAgdmFyIHByb2JsZW0gPSB7XG4gICAgICAgICAgcHJval9pZDogYmF0Y2gucHJval9pZCxcbiAgICAgICAgICBiaWRzZWN0aW9uX2lkOiBiYXRjaC5iaWRzZWN0aW9uX2lkLFxuICAgICAgICAgIGJhdGNoX2lkOiBiYXRjaC5pZCxcbiAgICAgICAgICBkZWFkbGluZTogYmF0Y2gucmVwYWlyX2RlYWRsaW5lLFxuICAgICAgICAgIGJhdGNoX3R5cGU6IGJhdGNoLmJhdGNoX3R5cGUsXG4gICAgICAgICAgY3JlYXRlZF9ieTogY29udGV4dC5nZXRVc2VyKCkudXNlcl9pZCxcbiAgICAgICAgICBjcmVhdGVkX29uOiBVdGlscy5ub3coKSxcbiAgICAgICAgICBpbWFnZV9maWxlOiBbeyB0ZW1wOiBwYXRoIH1dLFxuICAgICAgICAgIHN0YXR1czogJ+W+heaPkOS6pCcsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfc2VsZi5zYXZlKHByb2JsZW0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAkbG9nLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmV0dXJuICRxLnJlamVjdChlcnJvcik7XG4gICAgICB9KTtcbiAgfSxcblxuICBjcmVhdGVQcm9ibGVtOiBmdW5jdGlvbihwaWN0dXJlUGF0aCwgYmF0Y2hJZCkge1xuICAgIHJldHVybiBCYXRjaFNlcnZpY2UuZ2V0QmF0Y2goYmF0Y2hJZCkudGhlbihmdW5jdGlvbihiYXRjaCkge1xuICAgICAgdmFyIHByb2JsZW0gPSB7XG4gICAgICAgIHByb2pfaWQ6IGJhdGNoLnByb2pfaWQsXG4gICAgICAgIGJpZHNlY3Rpb25faWQ6IGJhdGNoLmJpZHNlY3Rpb25faWQsXG4gICAgICAgIGJhdGNoX2lkOiBiYXRjaC5pZCxcbiAgICAgICAgZGVhZGxpbmU6IGJhdGNoLnJlcGFpcl9kZWFkbGluZSxcbiAgICAgICAgYmF0Y2hfdHlwZTogYmF0Y2guYmF0Y2hfdHlwZSxcbiAgICAgICAgY3JlYXRlZF9ieTogY29udGV4dC5nZXRVc2VyKCkudXNlcl9pZCxcbiAgICAgICAgY3JlYXRlZF9vbjogVXRpbHMubm93KCksXG4gICAgICAgIGltYWdlX2ZpbGU6IFt7IHRlbXA6IHBpY3R1cmVQYXRoIH1dLFxuICAgICAgICBzdGF0dXM6ICflvoXmj5DkuqQnLFxuICAgICAgfTtcbiAgICAgIHJldHVybiBfc2VsZi5zYXZlKHByb2JsZW0pO1xuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiDmi43nhadcbiAgICogQHJldHVybnMgeyp8cHJvbWlzZX1cbiAgICovXG4gIHRha2VQaWN0dXJlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSW1hZ2VTZXJ2aWNlLnRha2VQaWN0dXJlKCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIOaYr+WQpuWFgeiuuOS7juebuOWGjOmAieeFp+eJh1xuICAgKiBAcmV0dXJucyB7KnxQcm9taXNlLjxUPn1cbiAgICovXG4gIGFsbG93U2VsZWN0UGljdHVyZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEdsb2JhbFN0b3JhZ2VSZXBvc2l0b3J5LmdldFZhbHVlKCd1cGxvYWRfZnJvbV9waG9uZV9hbGJ1bXMnKS50aGVuKGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuIHZhbCA9PT0gJzEnO1xuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiDlpoLmnpzmnI3liqHnq6/lt7LmnInkurrlpI3pqozpgJrov4fvvIxBUFAg6K+V5Zu+5pS55aSN6aqM5Lq677yM5bCx5Lya5Lqn55Sf6K+l5Yay56qBXG4gICAqIOWkhOeQhuWKnuazle+8jOeUqOacjeWKoeWZqOacgOaWsOaVsOaNruimhuebluacrOWcsFxuICAgKiBAcGFyYW0gdXBsb2FkUmVzdWx0XG4gICAqL1xuICByZWluc3BlY3RCeUNvbmZsaWN0OiBmdW5jdGlvbih1cGxvYWRSZXN1bHQpIHtcbiAgICBpZiAoXy5pc0VtcHR5KHVwbG9hZFJlc3VsdC5yZWluc3BlY3RCeSkpIHtcbiAgICAgIHJldHVybiAkcS53aGVuKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LnJlbW92ZVByb2JsZW1SZWluc3BlY3RCeShcbiAgICAgIHVwbG9hZFJlc3VsdC5yZWluc3BlY3RCeVswXS5jaGVja3F1YWxpdHlfcHJvYmxlbV9pZFxuICAgIClcbiAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlaW5zcGVjdFJlcG9zaXRvcnkuaW5zZXJ0UmVpbnNwZWN0QnlMaXN0KFxuICAgICAgICAgIHVwbG9hZFJlc3VsdC5yZWluc3BlY3RCeVxuICAgICAgICApO1xuICAgICAgfSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gVG9kb1JlcG9zaXRvcnkucmVtb3ZlUHJvYmxlbVRvZG8oXG4gICAgICAgICAgdXBsb2FkUmVzdWx0LnJlaW5zcGVjdEJ5WzBdLmNoZWNrcXVhbGl0eV9wcm9ibGVtX2lkXG4gICAgICAgICk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBUb2RvUmVwb3NpdG9yeS5pbnNlcnRUb2RvTGlzdCh1cGxvYWRSZXN1bHQudG9kbyk7XG4gICAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICog5aSN5Yi26Zeu6aKY77yM5o6S6Zmk77ya54Wn54mH44CB6KGl5YWF6K+05piO44CB5oi35Z6L5Zu+5LiK5qCH6K6w55qE54K5XG4gICAqIEBwYXJhbSBpZFxuICAgKi9cbiAgY29weVByb2JsZW06IGZ1bmN0aW9uKGlkKSB7XG4gICAgcmV0dXJuICRxXG4gICAgICAuYWxsKFtcbiAgICAgICAgQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkuZ2V0UHJvYmxlbUFsbENvbHVtbihpZCksXG4gICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1SZXBhaXJSZXBvc2l0b3J5LmdldFJlcGFpckFsbENvbHVtbihpZCksXG4gICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmdldFJlaW5zcGVjdEFsbENvbHVtbihpZCksXG4gICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5LmdldFJlaW5zcGVjdEJ5TGlzdChpZCksXG4gICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnkuZ2V0UHJvYmxlbUNDQWxsQ29sdW1uKGlkKSxcbiAgICAgIF0pXG4gICAgICAudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgdmFyIHByb2JsZW0gPSByZXN1bHRbMF07XG4gICAgICAgIHZhciByZXBhaXJMaXN0ID0gcmVzdWx0WzFdO1xuICAgICAgICB2YXIgcmVpbnNwZWN0TGlzdCA9IHJlc3VsdFsyXTtcbiAgICAgICAgdmFyIHJlaW5zcGVjdEJ5TGlzdCA9IHJlc3VsdFszXTtcbiAgICAgICAgdmFyIGNjTGlzdCA9IHJlc3VsdFs0XTtcblxuICAgICAgICBwcm9ibGVtLmlkID0gVXRpbHMudXVpZCgpO1xuICAgICAgICAvLyDmlrDpnIDmsYLopoHmsYLlpI3liLbov5nkuKTpobnvvJpodHRwOi8vamlyYS5teXNvZnQuY29tLmNuL2Jyb3dzZS9ZRFpKLTExOTUzXG4gICAgICAgIC8vIHByb2JsZW0ucmVtYXJrID0gJyc7XG4gICAgICAgIC8vIHByb2JsZW0uaW1hZ2VfZmlsZSA9ICcnO1xuICAgICAgICBwcm9ibGVtLnN0YXR1cyA9ICflvoXmj5DkuqQnO1xuICAgICAgICBwcm9ibGVtLnJlZ2lzdF9ieSA9ICcnO1xuICAgICAgICBwcm9ibGVtLnJlcGFpcl9ieSA9ICcnO1xuICAgICAgICBwcm9ibGVtLnJlcGFpcl9yZW1hcmsgPSAnJztcbiAgICAgICAgcHJvYmxlbS5yZXBhaXJfZGF0ZSA9ICcnO1xuICAgICAgICBwcm9ibGVtLnJlcGFpcl9pbWFnZV9maWxlID0gJyc7XG4gICAgICAgIHByb2JsZW0uc2VudF9iYWNrX2J5ID0gJyc7XG4gICAgICAgIHByb2JsZW0uc2VudF9iYWNrX2RhdGUgPSAnJztcbiAgICAgICAgcHJvYmxlbS5zZW50X2JhY2tfdGltZXMgPSAwO1xuICAgICAgICBwcm9ibGVtLnNlbnRfYmFja19yZW1hcmsgPSAnJztcbiAgICAgICAgcHJvYmxlbS5zZW50X2JhY2tfaW1hZ2VfZmlsZSA9ICcnO1xuICAgICAgICBwcm9ibGVtLnJlaW5zcGVjdF9ieSA9ICcnO1xuICAgICAgICBwcm9ibGVtLnJlaW5zcGVjdF9jb21wbGV0ZWRfZGF0ZSA9ICcnO1xuICAgICAgICBwcm9ibGVtLmNsb3NlX2RhdGUgPSAnJztcbiAgICAgICAgcHJvYmxlbS5jbG9zZV9yZWFzb24gPSAnJztcbiAgICAgICAgcHJvYmxlbS5jcmVhdGVkX2J5ID0gY29udGV4dC5nZXRVc2VyKCkudXNlcl9pZDtcbiAgICAgICAgcHJvYmxlbS5jcmVhdGVkX29uID0gVXRpbHMubm93KCk7XG4gICAgICAgIHByb2JsZW0ubW9kaWZpZWRfYnkgPSBjb250ZXh0LmdldFVzZXIoKS51c2VyX2lkO1xuICAgICAgICBwcm9ibGVtLmRvd25sb2FkX3RpbWUgPSAnJztcbiAgICAgICAgcHJvYmxlbS51cGRhdGVfdGltZXN0YW1wID0gJyc7XG4gICAgICAgIC8vIOimgeaxguWkjeWItueCueS9jSBodHRwOi8vamlyYS5teXNvZnQuY29tLmNuL2Jyb3dzZS9ZRFpKLTEyMTUyXG4gICAgICAgIC8vIHByb2JsZW0ucHJvYmxlbV92YWx1ZXMgPSAnJztcbiAgICAgICAgLy8gcHJvYmxlbS5wcm9ibGVtX3ZhbHVlc196aXAgPSAnJztcblxuICAgICAgICBpZiAocHJvYmxlbS5yZXBhaXJfZGVhZGxpbmUgJiYgIXByb2JsZW0uZGVhZGxpbmUgJiYgcHJvYmxlbS5yZWdpc3RfZGF0ZSkge1xuICAgICAgICAgIHZhciBhcnIgPSBwcm9ibGVtLnJlcGFpcl9kZWFkbGluZS5tYXRjaCgvXFxkKy9nKTtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJyW2ldID0gcGFyc2VJbnQoYXJyW2ldKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGRlYWRsaW5lRGF0ZSA9IG5ldyBEYXRlKFxuICAgICAgICAgICAgYXJyWzBdLFxuICAgICAgICAgICAgYXJyWzFdIC0gMSxcbiAgICAgICAgICAgIGFyclsyXSxcbiAgICAgICAgICAgIGFyclszXSB8fCAwLFxuICAgICAgICAgICAgYXJyWzRdIHx8IDAsXG4gICAgICAgICAgICBhcnJbNV0gfHwgMFxuICAgICAgICAgICk7XG5cbiAgICAgICAgICB2YXIgYXJyMiA9IHByb2JsZW0ucmVnaXN0X2RhdGUubWF0Y2goL1xcZCsvZyk7XG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcnIyW2ldID0gcGFyc2VJbnQoYXJyMltpXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciByZWdpc3REYXRlID0gbmV3IERhdGUoXG4gICAgICAgICAgICBhcnIyWzBdLFxuICAgICAgICAgICAgYXJyMlsxXSAtIDEsXG4gICAgICAgICAgICBhcnIyWzJdLFxuICAgICAgICAgICAgYXJyMlszXSB8fCAwLFxuICAgICAgICAgICAgYXJyMls0XSB8fCAwLFxuICAgICAgICAgICAgYXJyMls1XSB8fCAwXG4gICAgICAgICAgKTtcbiAgICAgICAgICBwcm9ibGVtLmRlYWRsaW5lID0gTWF0aC5jZWlsKFxuICAgICAgICAgICAgKGRlYWRsaW5lRGF0ZS5nZXRUaW1lKCkgLSByZWdpc3REYXRlLmdldFRpbWUoKSkgLyAoMTAwMCAqIDYwICogNjAgKiAyNClcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHByb2JsZW0ucmVnaXN0X2RhdGUgPSAnJztcbiAgICAgICAgcHJvYmxlbS5yZXBhaXJfZGVhZGxpbmUgPSAnJztcblxuICAgICAgICBfLmVhY2gocmVwYWlyTGlzdCwgZnVuY3Rpb24ocmVwYWlyKSB7XG4gICAgICAgICAgcmVwYWlyLmlkID0gVXRpbHMudXVpZCgpO1xuICAgICAgICAgIHJlcGFpci5jaGVja3F1YWxpdHlfcHJvYmxlbV9pZCA9IHByb2JsZW0uaWQ7XG4gICAgICAgICAgcmVwYWlyLmRvd25sb2FkX3RpbWUgPSAnJztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy5lYWNoKHJlaW5zcGVjdExpc3QsIGZ1bmN0aW9uKHJlaW5zcGVjdCkge1xuICAgICAgICAgIHJlaW5zcGVjdC5pZCA9IFV0aWxzLnV1aWQoKTtcbiAgICAgICAgICByZWluc3BlY3QuY2hlY2txdWFsaXR5X3Byb2JsZW1faWQgPSBwcm9ibGVtLmlkO1xuICAgICAgICAgIHJlaW5zcGVjdC5kb3dubG9hZF90aW1lID0gJyc7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF8uZWFjaChyZWluc3BlY3RCeUxpc3QsIGZ1bmN0aW9uKHJlaW5zcGVjdEJ5KSB7XG4gICAgICAgICAgcmVpbnNwZWN0QnkuaWQgPSBVdGlscy51dWlkKCk7XG4gICAgICAgICAgcmVpbnNwZWN0QnkuY2hlY2txdWFsaXR5X3Byb2JsZW1faWQgPSBwcm9ibGVtLmlkO1xuICAgICAgICAgIHJlaW5zcGVjdEJ5LnJlaW5zcGVjdF9kYXRlID0gJyc7XG4gICAgICAgICAgcmVwYWlyTGlzdC5yZWluc3BlY3RfcmVtYXJrID0gJyc7XG4gICAgICAgICAgcmVwYWlyTGlzdC5yZWluc3BlY3RfaW1hZ2VfZmlsZSA9ICcnO1xuICAgICAgICAgIHJlaW5zcGVjdEJ5LmRvd25sb2FkX3RpbWUgPSAnJztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8g5aSN5Yi26buY6K6k5oqE6YCB5Lq6XG4gICAgICAgIHZhciBkZWZhdWx0Q2NMaXN0ID0gXy5maWx0ZXIoY2NMaXN0LCBmdW5jdGlvbihjYykge1xuICAgICAgICAgIHJldHVybiBjYy50eXBlID09PSAn6buY6K6kJztcbiAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHRDY0xpc3QgPSBfLm1hcChkZWZhdWx0Q2NMaXN0LCBmdW5jdGlvbihjYykge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogY2MuY2MsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY2NMaXN0ID0gXy5maWx0ZXIoY2NMaXN0LCBmdW5jdGlvbihjYykge1xuICAgICAgICAgIHJldHVybiBjYy50eXBlID09PSAn6KKr5oqE6YCBJztcbiAgICAgICAgfSk7XG4gICAgICAgIGNjTGlzdCA9IF8ubWFwKGNjTGlzdCwgZnVuY3Rpb24oY2MpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IGNjLmNjLFxuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAkcS5hbGwoW1xuICAgICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5Lmluc2VydChwcm9ibGVtKSxcbiAgICAgICAgICBDaGVja1F1YWxpdHlQcm9ibGVtUmVwYWlyUmVwb3NpdG9yeS5pbnNlcnQocmVwYWlyTGlzdCksXG4gICAgICAgICAgQ2hlY2tRdWFsaXR5UHJvYmxlbVJlaW5zcGVjdFJlcG9zaXRvcnkuaW5zZXJ0UmVpbnNwZWN0KHJlaW5zcGVjdExpc3QpLFxuICAgICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1SZWluc3BlY3RSZXBvc2l0b3J5Lmluc2VydFJlaW5zcGVjdEJ5TGlzdChyZWluc3BlY3RCeUxpc3QpLFxuICAgICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnkuc2F2ZVByb2JsZW1DQyhwcm9ibGVtLmlkLCBjY0xpc3QpLFxuICAgICAgICAgIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnkuc2F2ZURlZmF1bHRDYyhwcm9ibGVtLmlkLCBkZWZhdWx0Q2NMaXN0KSxcbiAgICAgICAgXSk7XG4gICAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICog5Lul5pyN5Yqh5Zmo6Zeu6aKY5pWw5o2u5Li65Z+65YeG77yM56e76Zmk5pys5Zyw55qE5peg5pWI5pWw5o2uXG4gICAqIEBwYXJhbSBwcm9ibGVtRGF0YVxuICAgKi9cbiAgcmVtb3ZlTG9jYWxJbnZhbGlkUHJvYmxlbTogZnVuY3Rpb24ocHJvYmxlbURhdGEpIHtcbiAgICB2YXIgcHJvbWlzZSA9ICRxLndoZW4oKTtcblxuICAgIGlmIChwcm9ibGVtRGF0YS5wcm9ibGVtX3JlcGFpcikge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBhaXJSZXBvc2l0b3J5LnJlbW92ZUludmFsaWREYXRhKFxuICAgICAgICAgIHByb2JsZW1EYXRhLnByb2JsZW0uaWQsXG4gICAgICAgICAgXy5tYXAocHJvYmxlbURhdGEucHJvYmxlbV9yZXBhaXIsICdpZCcpXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocHJvYmxlbURhdGEucHJvYmxlbV9yZWluc3BlY3QpIHtcbiAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVpbnNwZWN0UmVwb3NpdG9yeS5yZW1vdmVJbnZhbGlkRGF0YShcbiAgICAgICAgICBwcm9ibGVtRGF0YS5wcm9ibGVtLmlkLFxuICAgICAgICAgIF8ubWFwKHByb2JsZW1EYXRhLnByb2JsZW1fcmVpbnNwZWN0LCAnaWQnKVxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHByb2JsZW1EYXRhLnByb2JsZW1fY2MpIHtcbiAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtQ0NSZXBvc2l0b3J5LnJlbW92ZUludmFsaWREYXRhKFxuICAgICAgICAgIHByb2JsZW1EYXRhLnByb2JsZW0uaWQsXG4gICAgICAgICAgXy5tYXAocHJvYmxlbURhdGEucHJvYmxlbV9jYywgJ2lkJylcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChwcm9ibGVtRGF0YS5jaGlsZHJlbl9Qcm9ibGVtKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkucmVtb3ZlSW52YWxpZENoaWxkUHJvYmxlbShcbiAgICAgICAgICBwcm9ibGVtRGF0YS5wcm9ibGVtLmlkLFxuICAgICAgICAgIHByb2JsZW1EYXRhLmNoaWxkcmVuX1Byb2JsZW1cbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9LFxuXG4gIHJlbW92ZUxvY2FsSW52YWxpZFByb2JsZW0xOiBmdW5jdGlvbihyZW1vdGVEYXRhLCBsb2NhbERhdGEpIHtcbiAgICB2YXIgcHJvYmxlbSA9IGxvY2FsRGF0YS5jaGVja3F1YWxpdHlfcHJvYmxlbTtcbiAgICByZXR1cm4gJHFcbiAgICAgIC53aGVuKClcbiAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAobG9jYWxEYXRhLmNoZWNrcXVhbGl0eV9wcm9ibGVtKSB7XG4gICAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1SZXBvc2l0b3J5LmRlbGV0ZVByb2JsZW1CeUlkKHByb2JsZW0uaWQpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChsb2NhbERhdGEuY2hlY2txdWFsaXR5X3JlcGFpcikge1xuICAgICAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwYWlyUmVwb3NpdG9yeS5yZW1vdmVJbnZhbGlkRGF0YShcbiAgICAgICAgICAgIHByb2JsZW0uaWQsXG4gICAgICAgICAgICBfLm1hcChsb2NhbERhdGEuY2hlY2txdWFsaXR5X3JlcGFpciwgJ2lkJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChsb2NhbERhdGEuY2hlY2txdWFsaXR5X2NjKSB7XG4gICAgICAgICAgcmV0dXJuIENoZWNrUXVhbGl0eVByb2JsZW1DQ1JlcG9zaXRvcnkucmVtb3ZlSW52YWxpZERhdGEoXG4gICAgICAgICAgICBwcm9ibGVtLmlkLFxuICAgICAgICAgICAgXy5tYXAobG9jYWxEYXRhLmNoZWNrcXVhbGl0eV9jYywgJ2lkJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICog5oqK5bey5YWz6Zet5om55qyh55qE6Zeu6aKY56e76ZmkXG4gICAqIEByZXR1cm5zIHsqfFByb21pc2UuPFRSZXN1bHQ+fVxuICAgKi9cbiAgcmVtb3ZlQ2xvc2VkQmF0Y2hQcm9ibGVtOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gQmF0Y2hTZXJ2aWNlLmdldENsb3NlZEJhdGNoSWRMaXN0KCkudGhlbihmdW5jdGlvbihiYXRjaElkcykge1xuICAgICAgLy8g5Yig6Zmk5bey5YWz6Zet5om55qyh55qE6Zeu6aKY5Y+K5pys5Zyw5Zu+54mHXG4gICAgICByZXR1cm4gX3NlbGYuZGVsZXRlQmF0Y2hQcm9ibGVtcyhiYXRjaElkcyk7XG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIOWIoOmZpOaJueasoeS4i+eahOmXrumimO+8iOWFs+mXreaJueasoe+8iVxuICAgKiBAcGFyYW0gYmF0Y2hJZHNcbiAgICovXG4gIGRlbGV0ZUJhdGNoUHJvYmxlbXM6IGZ1bmN0aW9uKGJhdGNoSWRzKSB7XG4gICAgJGxvZy5sb2coJ+WIoOmZpOW3suWFs+mXreaJueasoeeahOmXrumimCcpO1xuICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5nZXRQcm9ibGVtc0J5QmF0Y2goYmF0Y2hJZHMpXG4gICAgICAudGhlbihmdW5jdGlvbihwcm9ibGVtcykge1xuICAgICAgICAvLyDliKDpmaTpl67popjlm77niYdcbiAgICAgICAgdmFyIHByb21pc2UgPSAkcS53aGVuKCk7XG4gICAgICAgIHZhciBpbWFnZUNvbHVtbnMgPSBbJ2ltYWdlX2ZpbGUnLCAncmVwYWlyX2ltYWdlX2ZpbGUnLCAnc2VudF9iYWNrX2ltYWdlX2ZpbGUnXTtcbiAgICAgICAgdmFyIGZpbGVzID0gW107XG4gICAgICAgIF8uZWFjaChwcm9ibGVtcywgZnVuY3Rpb24ocHJvYmxlbSkge1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW1hZ2VDb2x1bW5zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIgaW1hZ2VzID0gKHByb2JsZW1baW1hZ2VDb2x1bW5zW2ldXSA9IEpTT04ucGFyc2UocHJvYmxlbVtpbWFnZUNvbHVtbnNbaV1dIHx8ICdbXScpKTtcbiAgICAgICAgICAgIF8uZWFjaChpbWFnZXMsIGZ1bmN0aW9uKGltYWdlKSB7XG4gICAgICAgICAgICAgIGlmIChpbWFnZS5sb2NhbCkge1xuICAgICAgICAgICAgICAgIGZpbGVzLnB1c2goaW1hZ2UubG9jYWwpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKGltYWdlLnRodW1ibmFpbCkge1xuICAgICAgICAgICAgICAgIGZpbGVzLnB1c2goaW1hZ2UudGh1bWJuYWlsKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChpbWFnZS50ZW1wKSB7XG4gICAgICAgICAgICAgICAgZmlsZXMucHVzaChpbWFnZS50ZW1wKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBfLmVhY2goZmlsZXMsIGZ1bmN0aW9uKGZpbGUpIHtcbiAgICAgICAgICBwcm9taXNlID0gcHJvbWlzZVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwbHVnaW5BcGkuaXNGaWxlRXhpc3RzKGZpbGUpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGV4aXN0cykge1xuICAgICAgICAgICAgICBpZiAoZXhpc3RzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBsdWdpbkFwaS5kZWxldGVGaWxlKGZpbGUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBDaGVja1F1YWxpdHlQcm9ibGVtUmVwb3NpdG9yeS5kZWxldGVQcm9ibGVtQnlCYXRjaChiYXRjaElkcyk7XG4gICAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICog6I635Y+W6aKG5a+85om556S6XG4gICAqIEBwYXJhbSBwcm9ibGVtSWRcbiAgICovXG4gIGdldExlYWRlckNvbW1lbnRzOiBmdW5jdGlvbihwcm9ibGVtSWQpIHtcbiAgICByZXR1cm4gQ2hlY2tRdWFsaXR5UHJvYmxlbVJlcG9zaXRvcnkuZ2V0TGVhZGVyQ29tbWVudHMocHJvYmxlbUlkKS50aGVuKGZ1bmN0aW9uKGxpc3QpIHtcbiAgICAgIF8uZWFjaChsaXN0LCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgIGl0ZW0udXNlciA9IHtcbiAgICAgICAgICBpZDogaXRlbS51c2VyX2lkLFxuICAgICAgICAgIG5hbWU6IGl0ZW0udXNlcl9uYW1lLFxuICAgICAgICAgIG1vYmlsZTogaXRlbS5tb2JpbGUsXG4gICAgICAgICAgaXNfaW1fdXNlcjogaXRlbS5pc19pbV91c2VyLFxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChpdGVtLmltYWdlX2ZpbGUpIHtcbiAgICAgICAgICBpdGVtLmltYWdlX2ZpbGUgPSBKU09OLnBhcnNlKGl0ZW0uaW1hZ2VfZmlsZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gbGlzdDtcbiAgICB9KTtcbiAgfSxcblxuICBnZXRQaG90b1JlcXVpcmVkKHByb2pJZCwga2V5KSB7XG4gICAgY29uc3QgcGhvdG9HcmF5ID0gc3RvcmUuc3RhdGUuZ2xvYmFsLmFsbEdyYXlSZWxlYXNlLlVzaW5nUHJvamVjdFBhcmFtZXRlcjtcbiAgICByZXR1cm4gQ29tbW9uQmFzZWRhdGFTZXJ2aWNlLmdldFByb2pQYXJhbWV0ZXIocHJvaklkLCAnaXNfcGhvdG9fcmVxdWlyZWQnLCBrZXkpXG4gICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgaWYgKHBob3RvR3JheSkge1xuICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gTnVtYmVyKGRhdGFbMF0udmFsdWUpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmUuc3RhdGUuZ2xvYmFsLmlzUGhvdG9SZXF1aXJlZFtrZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gc3RvcmUuc3RhdGUuZ2xvYmFsLmlzUGhvdG9SZXF1aXJlZFtrZXldO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgfSk7XG4gIH0sXG59O1xuLy8gfV0pO1xuXG5leHBvcnQgZGVmYXVsdCBfc2VsZjtcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5jb250ZW50LW5vdC1lbXB0eVtkYXRhLXYtNDMwNDJmMGRdIC5sYXlvdXQtY29udGVudHtkaXNwbGF5OmF1dG87b3ZlcmZsb3c6YXV0bztwYWRkaW5nLWJvdHRvbToxMDBweH0uemphcHAgLmNoZWNrLWd1aWRlLWRldGFpbC1oZFtkYXRhLXYtNDMwNDJmMGRde21hcmdpbi1sZWZ0OjMwcHg7cGFkZGluZzoyNXB4IDMwcHggNXB4IDB9LnpqYXBwIC5jaGVjay1ndWlkZS1kZXRhaWwtdGl0bGVbZGF0YS12LTQzMDQyZjBkXXttYXJnaW46MDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxOHB4O2NvbG9yOiMxMTE7Zm9udC13ZWlnaHQ6NzAwO3dvcmQtYnJlYWs6YnJlYWstYWxsfS56amFwcCAuY2hlY2stZ3VpZGUtZGV0YWlsLWluZm9bZGF0YS12LTQzMDQyZjBkXXtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM4YzhjOGN9LnpqYXBwIC5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudFtkYXRhLXYtNDMwNDJmMGRde3BhZGRpbmc6MzBweDtsaW5lLWhlaWdodDozMHB4O2NvbG9yOiMzMzM7Zm9udC1zaXplOjE2cHh9LnpqYXBwIC5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudCBwW2RhdGEtdi00MzA0MmYwZF17bWFyZ2luLWJvdHRvbTozMHB4O21pbi1oZWlnaHQ6MWVtfS56amFwcCAuY2hlY2stZ3VpZGUtZGV0YWlsLWNvbnRlbnQgaW1nW2RhdGEtdi00MzA0MmYwZF17bWF4LXdpZHRoOjEwMCV9LnpqYXBwIC5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudCAuaW1nLW5vdC1yZWFkeVtkYXRhLXYtNDMwNDJmMGRde3dpZHRoOjgwcHg7aGVpZ2h0OmF1dG99LnpqYXBwIC5lcnJvcltkYXRhLXYtNDMwNDJmMGRde21heC13aWR0aDo1MCV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicHJvYmxlbS13cmFwXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwcm9ibGVtLXdyYXAtdGl0bGVcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInByb2JsZW0tdGl0bGVcIn0sW192bS5fdihcIumXrumimOWIl+ihqChcIitfdm0uX3MoX3ZtLmxpc3QubGVuZ3RoKStcIilcIildKSwoX3ZtLmVkaXQpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInByb2JsZW0tYnRuXCIsb246e1wiY2xpY2tcIjpfdm0uY3JlYXRlUHJvYmxlbX19LFtfdm0uX3YoXCLmlrDlop5cIildKTpfdm0uX2UoKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcInByb2JsZW0tbGlzdFwifSxbKF92bS5saXN0ICYmIF92bS5saXN0Lmxlbmd0aCk/X3ZtLl9sKChfdm0ubGlzdCksZnVuY3Rpb24oaXRlbSxrZXkpe3JldHVybiBfYygnaXRlbS1saXN0Jyx7a2V5OmtleSxhdHRyczp7XCJpcy11bnJlYWRcIjppdGVtLnVucmVhZCxcImlzLXRpbWVvdXRcIjppdGVtLmlzX3RpbWVvdXQsXCJpcy11cmdlbnRcIjppdGVtLmVtZXJnZW5jeV9kZWdyZWUgPT0gJ+e0p+aApScgfHwgaXRlbS5lbWVyZ2VuY3lfZGVncmVlID09ICfnibnmgKUnLFwiaXMtcmV0dXJuXCI6aXRlbS5zZW50X2JhY2tfdGltZXMgPiAwLFwiaW1nXCI6aXRlbS50aHVtYm5haWwsXCJ0aXRsZVwiOml0ZW0uaXRlbV9mdWxsX25hbWUsXCJkZXRhaWxcIjppdGVtLmRlc2MgfHwgJycgKyBpdGVtLnJlbWFyayB8fCAnJyxcImZvb3RlclwiOl92bS5mb3JtYXREYXRlKGl0ZW0uY3JlYXRlZF9vbikgKyAnICcgKyAoaXRlbS5wbGFjZSB8fCAnJyksXCJzdGF0dXNcIjppdGVtLnN0YXR1cyxcInN0YXR1cy10ZXh0XCI6aXRlbS5zdGF0dXN9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ub3BlblByb2JsZW1EZXRhaWwoaXRlbSl9fX0pfSk6W19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImVtcHR5XCJ9LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6X3ZtLnBuZ19lbXB0eSxcImFsdFwiOlwiXCJ9fSksX2MoJ3NwYW4nLFtfdm0uX3YoXCLmmoLml6DmlrDlop7pl67pophcIildKV0pXV0sMildKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcHJvYmxlbS1saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcHJvYmxlbS1saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInByb2JsZW0td3JhcFwiPlxuICAgIDxkaXYgY2xhc3M9XCJwcm9ibGVtLXdyYXAtdGl0bGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9ibGVtLXRpdGxlXCI+6Zeu6aKY5YiX6KGoKHt7IGxpc3QubGVuZ3RoIH19KTwvZGl2PlxuICAgICAgPGRpdiB2LWlmPVwiZWRpdFwiIGNsYXNzPVwicHJvYmxlbS1idG5cIiBAY2xpY2s9XCJjcmVhdGVQcm9ibGVtXCI+5paw5aKePC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInByb2JsZW0tbGlzdFwiPlxuICAgICAgPHRlbXBsYXRlIHYtaWY9XCJsaXN0ICYmIGxpc3QubGVuZ3RoXCI+XG4gICAgICAgIDxpdGVtLWxpc3RcbiAgICAgICAgICB2LWZvcj1cIihpdGVtLCBrZXkpIGluIGxpc3RcIlxuICAgICAgICAgIDprZXk9XCJrZXlcIlxuICAgICAgICAgIDppcy11bnJlYWQ9XCJpdGVtLnVucmVhZFwiXG4gICAgICAgICAgOmlzLXRpbWVvdXQ9XCJpdGVtLmlzX3RpbWVvdXRcIlxuICAgICAgICAgIDppcy11cmdlbnQ9XCJpdGVtLmVtZXJnZW5jeV9kZWdyZWUgPT0gJ+e0p+aApScgfHwgaXRlbS5lbWVyZ2VuY3lfZGVncmVlID09ICfnibnmgKUnXCJcbiAgICAgICAgICA6aXMtcmV0dXJuPVwiaXRlbS5zZW50X2JhY2tfdGltZXMgPiAwXCJcbiAgICAgICAgICA6aW1nPVwiaXRlbS50aHVtYm5haWxcIlxuICAgICAgICAgIDp0aXRsZT1cIml0ZW0uaXRlbV9mdWxsX25hbWVcIlxuICAgICAgICAgIDpkZXRhaWw9XCJpdGVtLmRlc2MgfHwgJycgKyBpdGVtLnJlbWFyayB8fCAnJ1wiXG4gICAgICAgICAgOmZvb3Rlcj1cImZvcm1hdERhdGUoaXRlbS5jcmVhdGVkX29uKSArICcgJyArIChpdGVtLnBsYWNlIHx8ICcnKVwiXG4gICAgICAgICAgOnN0YXR1cz1cIml0ZW0uc3RhdHVzXCJcbiAgICAgICAgICA6c3RhdHVzLXRleHQ9XCJpdGVtLnN0YXR1c1wiXG4gICAgICAgICAgQGNsaWNrPVwib3BlblByb2JsZW1EZXRhaWwoaXRlbSlcIlxuICAgICAgICAvPlxuICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJlbXB0eVwiPlxuICAgICAgICAgIDxpbWcgOnNyYz1cInBuZ19lbXB0eVwiIGFsdD1cIlwiIC8+XG4gICAgICAgICAgPHNwYW4+5pqC5peg5paw5aKe6Zeu6aKYPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvdGVtcGxhdGU+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBJdGVtTGlzdCBmcm9tICdAc3JjL2NvbXBvbmVudHMvaXRlbS1saXN0JztcbmltcG9ydCBwbmdfZW1wdHkgZnJvbSAnQGFzc2V0cy9pbWcvZW1wdHktaWNvbi9jb21tb24ucG5nJztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ1Byb2JsZW1MaXN0JyxcbiAgY29tcG9uZW50czoge1xuICAgIEl0ZW1MaXN0LFxuICB9LFxuICBwcm9wczoge1xuICAgIGVkaXQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0KCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9LFxuICAgIH0sXG4gICAgbGlzdDoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0KCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBuZ19lbXB0eSxcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge30sXG4gIG1ldGhvZHM6IHtcbiAgICBjcmVhdGVQcm9ibGVtKCkge1xuICAgICAgdGhpcy4kZW1pdCgnYWRkJyk7XG4gICAgfSxcbiAgICBvcGVuUHJvYmxlbURldGFpbChpdGVtKSB7XG4gICAgICB0aGlzLiRlbWl0KCdjbGlja0l0ZW0nLCBpdGVtKTtcbiAgICB9LFxuICAgIGZvcm1hdERhdGUoZGF0ZSkge1xuICAgICAgcmV0dXJuIG1vbWVudChkYXRlKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW0nKTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4ucHJvYmxlbS13cmFwIHtcbiAgJi10aXRsZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICM2NjY7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIGhlaWdodDogNDNweDtcbiAgICAucHJvYmxlbS1idG4ge1xuICAgICAgcGFkZGluZzogMTNweCAxNXB4O1xuICAgICAgY29sb3I6ICM0Mjc1ZTg7XG4gICAgfVxuICB9XG4gIC5wcm9ibGVtLWxpc3Qge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgLnByb2JsZW0taXRlbSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7XG4gICAgICAvLyBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgcGFkZGluZzogMTJweCAxNXB4O1xuICAgICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICAgIGhlaWdodDogNzBweDtcbiAgICAgICAgYmFja2dyb3VuZDogY29yYWw7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgIH1cbiAgICAgIC5jb250ZW50IHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIC5kZXNjIHtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgY29sb3I6IHJnYmEoNTEsIDUxLCA1MSwgMSk7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICAgIH1cbiAgICAgICAgLmRhdGUge1xuICAgICAgICAgIGNvbG9yOiByZ2JhKDE1MywgMTUzLCAxNTMsIDEpO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAuc3RhdHVzIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgY29sb3I6ICMwYmM2NjY7XG4gICAgICB9XG4gICAgfVxuICAgIC5lbXB0eSB7XG4gICAgICBwYWRkaW5nOiA0MHB4IDA7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBjb2xvcjogIzk5OTtcbiAgICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL3Byb2JsZW0tbGlzdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NGNmYTc3ZTQmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vcHJvYmxlbS1saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vcHJvYmxlbS1saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9wcm9ibGVtLWxpc3QudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGNmYTc3ZTQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNGNmYTc3ZTRcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCIvKipcbiAqIDIwMjAtMDgtMTBcbiAqXG4gKiDkuJPnlKjkuo7kuJPpobnlt6Hmo4DvvIzliKDpmaTpl67popgr6YeN572u5qOA5p+l6aG55L2/55SoXG4gKlxuICog5Zug5LiT6aG55beh5qOA5Yig6Zmk6Zeu6aKY5ZKM5qOA5p+l6aG555qE6YCQ5riQ5aKe5aSa77yM5Zug5q2k57uf5LiA5YaZ5Yiw6L+Z5Liq5paH5Lu25LitXG4gKlxuICog546w5YyF5ZCr5qih5Z2XICAgIOaooeadv+exu+WeiyAgICAg5piv5ZCm5pyJ6YeN572u5qOA5p+l6aG5ICAgICAgICAgIOaYr+WQpuacieWIoOmZpOmXrumimFxuICog5a6e5rWL5a6e6YePICAgICAgICAgNyAgICAgICAgICAgICAg5pivICAgICAgICAgICAgICAgICAgICAgICAg5ZCmXG4gKiDop4LmhJ/mqKHmnb8gICAgICAgIDExICAgICAgICAgICAgICDmmK8gICAgICAgICAgICAgICAgICAgICAgICDmmK9cbiAqIOadg+mHjSAgICAgICAgICAgIDEgICAgICAgICAgICAgIOWQpiAgICAgICAgICAgICAgICAgICAgICAgIOaYr1xuICog5p2D6YeNK+W+l+WIhueOhyAgICAgIDQgICAgICAgICAgICAg5ZCmICAgICAgICAgICAgICAgICAgICAgICAg5pivXG4gKiDlvpfliIbnjocgICAgICAgICAgMyAgICAgICAgICAgICAg5ZCmICAgICAgICAgICAgICAgICAgICAgICAgIOaYr1xuICog5ruh5YeP5omjICAgICAgICAgIDUgICAgICAgICAgICAgIOWQpiAgICAgICAgICAgICAgICAgICAgICAgICDmmK9cbiAqIOi0qOmHj+mjjumZqSAgICAgICAgOCAgICAgICAgICAgICAg5ZCmICAgICAgICAgICAgICAgICAgICAgICAgIOaYr1xuICovXG5cbmltcG9ydCBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkgZnJvbSAnQHNyYy9yZXBvc2l0b3JpZXMvc3BlY2lhbC1pbnNwZWN0LXJlcG9zaXRvcnknO1xuaW1wb3J0IFdlYlNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi93ZWItc2VydmljZSc7XG5pbXBvcnQgRGF0YVN5bmNocm9uaXplciBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2RhdGEtc3luY2hyb25pemVyJztcbmltcG9ydCBCdXNpbmVzc0xvZ1NlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9idXNpbmVzcy1sb2ctc2VydmljZSc7XG5pbXBvcnQgbmV0d29yayBmcm9tICdAc3JjL2ZyYW1ld29yay9uZXR3b3JrJztcbmltcG9ydCBQb3B1cCBmcm9tICdAc3JjL3V0aWxzL3BvcHVwJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAvLyDml6DnvZHnu5zliKTmlq0gKyDlvLnlh7rmoYbmtYHnqItcbiAgYXN5bmMgbmV0d29ya1Rlc3QobWVzc2FnZSkge1xuICAgIGxldCBoYXNOZXR3b3JrID0gYXdhaXQgbmV0d29yay5nZXRIYXNOZXR3b3JrKCk7XG4gICAgaWYgKCFoYXNOZXR3b3JrKSB7XG4gICAgICBQb3B1cC5hbGVydCgn5b2T5YmN5peg572R57ucJyk7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoKTtcbiAgICB9XG5cbiAgICBsZXQgcG9wID0gYXdhaXQgUG9wdXAuY29uZmlybSh7XG4gICAgICBtZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgb2tUZXh0OiAn5Yig6ZmkJyxcbiAgICAgIGNhbmNlbFRleHQ6ICflj5bmtognLFxuICAgICAgY2xhc3NOYW1lOiAnZGlhbG9nLWN1c3RvbWl6ZSBjb25maXJtLWNvbG9yLXJlZCcsXG4gICAgfSk7XG4gICAgaWYgKHBvcCkge1xuICAgICAgUG9wdXAubG9hZGluZygn5q2j5Zyo5o+Q5LqkLi4uJyk7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocG9wKTtcbiAgfSxcblxuICAvLyDlrp7mtYvlrp7ph4/vvIzmo4Dmn6Xpobnph43nva5cbiAgYXN5bmMgbWVhc3VyZUNoZWNrSXRlbXNSZXN0KGNoZWNrSXRlbXMpIHtcbiAgICB0cnkge1xuICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgIHNwZWNpYWxfaW5zcGVjdF9pZHM6IGNoZWNrSXRlbXMubWFwKGl0ZW0gPT4gaXRlbS5zcGVjaWFsX2luc3BlY3RfaWQpLmpvaW4oJywnKSxcbiAgICAgIH07XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWunua1i+WunumHjy3mo4Dmn6Xpobnph43nva4t6K+35rGC55qE5Y+C5pWw77yaJywgZGF0YSk7XG5cbiAgICAgIC8vIDHjgIHosIPnlKjmjqXlj6PvvIzliKDpmaTnur/kuIrmlbDmja5cbiAgICAgIGxldCBwb3N0ID0gYXdhaXQgV2ViU2VydmljZS5wb3N0KFxuICAgICAgICAnL29ubGluZS9zcGVjaWFsLWluc3BlY3QvZGVsZXRlLWRhdGEtb2YtY2hlY2tpdGVtJyxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgZGF0YVxuICAgICAgKTtcblxuICAgICAgaWYgKE51bWJlcihwb3N0LmVycmNvZGUpICYmIE51bWJlcihwb3N0LmVycmNvZGUpICE9PSAwKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChwb3N0KTtcbiAgICAgIH1cblxuICAgICAgbGV0IGNoZWNrSXRlbXNQcm9taXNlID0gW107IC8vIOWIoOmZpOW3suajgOmhueaVsOaNrlxuICAgICAgXy5mb3JFYWNoKGNoZWNrSXRlbXMsIGl0ZW0gPT4ge1xuICAgICAgICBsZXQgc2lEYXRhID0ge1xuICAgICAgICAgIHJlbWFyazogJycsXG4gICAgICAgICAgc3RhdHVzOiAn5pyq6K6+572uJyxcbiAgICAgICAgICBpbWFnZV9maWxlOiAnW10nLFxuICAgICAgICAgIGlkOiBpdGVtLnNwZWNpYWxfaW5zcGVjdF9pZCxcbiAgICAgICAgICBkb3dubG9hZF90aW1lOiBwb3N0LnVwZGF0ZV90aW1lc3RhbXAsIC8vIOabtOaWsOatpOmhueaYr+S4uuS6hu+8jOS4i+aLieaVsOaNruaXtuS4jeaJp+ihjOWQjuWPsOS4i+WPkeeahOmHjee9rnNxbFxuICAgICAgICB9O1xuICAgICAgICBsZXQgbWVhc3VyZUl0ZW1EYXRhID0ge1xuICAgICAgICAgIGlkOiBpdGVtLmlkLFxuICAgICAgICAgIGdyb3VwX2lkOiAnJyxcbiAgICAgICAgICBtZWFzdXJlbWVudF9wb2ludHM6ICcnLFxuICAgICAgICAgIHByb2JsZW1fcG9pbnRzOiAnJyxcbiAgICAgICAgICBwcm9ibGVtX3ZhbHVlczogJycsXG4gICAgICAgICAgcHJvYmxlbV92YWx1ZXNfemlwOiAnJyxcbiAgICAgICAgfTtcblxuICAgICAgICAkbG9nLmxvZyhcbiAgICAgICAgICAn5LiT6aG55beh5qOALeWunua1i+WunumHjy3mo4Dmn6Xpobnph43nva4t6K+35rGC55qE5Y+C5pWw77yaJyxcbiAgICAgICAgICAnIHNwZWNpYWxfaW5zcGVjdCA9PiAnLFxuICAgICAgICAgIHNpRGF0YSxcbiAgICAgICAgICAnIHNwZWNpYWxfaW5zcGVjdF9tZWFzdXJlX2l0ZW0gPT4nLFxuICAgICAgICAgIG1lYXN1cmVJdGVtRGF0YVxuICAgICAgICApO1xuICAgICAgICAvLyDph43nva7lt7Lmo4DpobnmlbDmja5cbiAgICAgICAgbGV0IHNwZWNpYWxVcGRhdGEgPSBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkudXBkYXRlU3BlY2lhbEluc3BlY3REYXRhKHNpRGF0YSk7XG4gICAgICAgIC8vIOmHjee9rua1i+mHj+aVsOaNrlxuICAgICAgICBsZXQgbWVhc3VyZUl0ZW0gPSBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkudXBkYXRlU3BlY2lhbEluc3BlY3RNZWFzdXJlSXRlbShtZWFzdXJlSXRlbURhdGEpO1xuICAgICAgICAvLyDliKDpmaTkuIrkvKDpmJ/liJdcbiAgICAgICAgbGV0IHJlbW92ZUdyb3VwID0gRGF0YVN5bmNocm9uaXplci5yZW1vdmVTeW5jR3JvdXAoaXRlbS5zcGVjaWFsX2luc3BlY3RfaWQpO1xuXG4gICAgICAgIGNoZWNrSXRlbXNQcm9taXNlLnB1c2goc3BlY2lhbFVwZGF0YSwgbWVhc3VyZUl0ZW0sIHJlbW92ZUdyb3VwKTtcbiAgICAgIH0pO1xuXG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChjaGVja0l0ZW1zUHJvbWlzZSk7XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWunua1i+WunumHjy3mo4Dmn6Xpobnph43nva4t5oiQ5YqfJyk7XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3lrp7mtYvlrp7ph48t5qOA5p+l6aG56YeN572uLWVycm9y77yaJywgZXJyb3IpO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIOWIoOmZpOmXrumimO+8jOWcqOe6v1xuICAgKiBpZHPvvJrlj6/kvKDlrZfnrKbkuLLvvIzlj6/mlbDnu4RcbiAgICovXG4gIGFzeW5jIHBvc3REZWxldGVQcm9ibGVtKGlkKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIDHjgIHosIPnlKjmjqXlj6PvvIzliKDpmaTnur/kuIrmlbDmja5cbiAgICAgIGxldCBwb3N0ID0gYXdhaXQgV2ViU2VydmljZS5wb3N0KCcvb25saW5lL3Byb2JsZW0tc2VjdXJlL2RlbGV0ZScsIG51bGwsIHsgaWQ6IGlkIH0pO1xuICAgICAgaWYgKE51bWJlcihwb3N0LmVycmNvZGUpICYmIE51bWJlcihwb3N0LmVycmNvZGUpICE9PSAwKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChwb3N0KTtcbiAgICAgIH1cblxuICAgICAgLy8gMuOAgeWIoOmZpOmXrumimOihqOWSjOWFs+iBlOihqFxuICAgICAgLy8gbGV0IGlzQnVzaW5lc3NMb2cgPSBwb3N0LmNvZGUgPT09IDUxNjEwMTsgLy8g6Zeu6aKY5LiN5a2Y5Zyo77yM5LiN5re75Yqg5Yig6Zmk55qE5Lia5Yqh5pel5b+XXG4gICAgICAvLyBhd2FpdCB0aGlzLnNxbERlbGV0ZVByb2JsZW0oaWQsIGlzQnVzaW5lc3NMb2cpO1xuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHBvc3QpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWIoOmZpOmXrumimC1lcnJvcu+8micsIGVycm9yKTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiDliKDpmaTmo4Dmn6XpobnnmoTlm77niYfjgIHooaXlhYXor7TmmI7jgIHmo4Dmn6XkurrvvIzop4LmhJ/mqKHmnb9cbiAgICAgc3BlY2lhbEluc3BlY3RJZDogc3BlY2lhbF9pbnNwZWN0IOS4u+mUrmlkXG4gICAqIHBsYWNlQ2hlY2tJdGVtSWTvvJpzcGVjaWFsX2luc3BlY3RfcGxhY2VfY2hlY2tpdGVtIOS4u+mUrmlk77yMXG4gICAqIHByb2JsZW1JZHPvvJrpl67pophpZOaVsOe7hFxuICAgKi9cbiAgYXN5bmMgcG9zdFJlc3RDaGVja0l0ZW1UZW1wbGF0ZTExKGRhdGEpIHtcbiAgICB0cnkge1xuICAgICAgbGV0IHsgc3BlY2lhbEluc3BlY3RJZCwgcGxhY2VDaGVja2l0ZW1JZCwgcHJvYmxlbUlkcyB9ID0gZGF0YTtcblxuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3op4LmhJ/mqKHmnb8t5Yig6Zmk5qOA5p+l6aG55YaF5a65LeS8oOWFpeaVsOaNru+8micsIGRhdGEpO1xuXG4gICAgICAvLyAx44CB6LCD55So5o6l5Y+j77yM5Yig6Zmk57q/5LiK5pWw5o2uXG4gICAgICBsZXQgcG9zdERhdGEgPSB7XG4gICAgICAgIHNwZWNpYWxfaW5zcGVjdF9pZHM6IHNwZWNpYWxJbnNwZWN0SWQsXG4gICAgICAgIHBsYWNlX2NoZWNraXRlbV9pZDogcGxhY2VDaGVja2l0ZW1JZCxcbiAgICAgIH07XG4gICAgICBsZXQgcG9zdCA9IGF3YWl0IFdlYlNlcnZpY2UucG9zdChcbiAgICAgICAgJy9vbmxpbmUvc3BlY2lhbC1pbnNwZWN0L2RlbGV0ZS1kYXRhLW9mLWNoZWNraXRlbScsXG4gICAgICAgIG51bGwsXG4gICAgICAgIHBvc3REYXRhXG4gICAgICApO1xuICAgICAgaWYgKE51bWJlcihwb3N0LmVycmNvZGUpICYmIE51bWJlcihwb3N0LmVycmNvZGUpICE9PSAwKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChwb3N0KTtcbiAgICAgIH1cblxuICAgICAgLy8gMuOAgeWIoOmZpOmXrumimOihqOWSjOWFs+iBlOihqFxuICAgICAgYXdhaXQgdGhpcy5zcWxEZWxldGVQcm9ibGVtKHByb2JsZW1JZHMpO1xuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3op4LmhJ/mqKHmnb8t5Yig6Zmk5qOA5p+l6aG55YaF5a65LeWIoOmZpOmXrumimOaIkOWKnycpO1xuXG4gICAgICAvLyAz44CB5pu05paw5qOA5p+l6aG555qE5YaF5a65XG4gICAgICBsZXQgcGxhY2VEYXRhID0ge1xuICAgICAgICBpZDogcGxhY2VDaGVja2l0ZW1JZCxcbiAgICAgICAgc3RhdHVzOiAn5pyq6K6+572uJyxcbiAgICAgICAgcmVtYXJrOiBudWxsLFxuICAgICAgICBjaGVja2VyOiAnJyxcbiAgICAgICAgaW1hZ2VfZmlsZTogJ1tdJyxcbiAgICAgICAgZGVkdWN0aW9uOiBudWxsLFxuICAgICAgICBkb3dubG9hZF90aW1lOiBwb3N0LnVwZGF0ZV90aW1lc3RhbXAsIC8vIOabtOaWsOatpOmhueaYr+S4uuS6hu+8jOS4i+aLieaVsOaNruaXtuS4jeaJp+ihjOWQjuWPsOS4i+WPkeeahOmHjee9rnNxbFxuICAgICAgfTtcbiAgICAgICRsb2cubG9nKCfmm7TmlrBzcGVjaWFsX2luc3BlY3RfcGxhY2VfY2hlY2tpdGVt5pWw5o2u77yaJywgcGxhY2VEYXRhKTtcbiAgICAgIGF3YWl0IFNwZWNpYWxJbnNwZWN0UmVwb3NpdG9yeS51cGRhdGVQbGFjZVNwZWNpYWxJbnNwZWN0RGF0YShwbGFjZURhdGEpO1xuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3op4LmhJ/mqKHmnb8t5Yig6Zmk5qOA5p+l6aG55YaF5a65LeWIoOmZpOajgOafpemhueeahOWGheWuueaIkOWKnycpO1xuXG4gICAgICAvLyA044CB5Yig6Zmk5LiK5Lyg6Zif5YiXXG4gICAgICBhd2FpdCBEYXRhU3luY2hyb25pemVyLnJlbW92ZVN5bmNHcm91cChwbGFjZUNoZWNraXRlbUlkKTtcbiAgICAgICRsb2cubG9nKCfkuJPpobnlt6Hmo4At6KeC5oSf5qih5p2/LeWIoOmZpOajgOafpemhueWGheWuuS3liKDpmaTkuIrkvKDpmJ/liJfmiJDlip8nKTtcblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWIoOmZpOmXrumimC1lcnJvcu+8micsIGVycm9yKTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiDliKDpmaTmo4Dmn6XpobnkuIvnmoTor6bmg4XvvIzlnKjnur/vvIzpgJrnlKhcbiAgICAgc3BlY2lhbEluc3BlY3RJZDogc3BlY2lhbF9pbnNwZWN0IOS4u+mUrmlkXG4gICAgIHJlc3RTcGVjaWFsRmllbGTvvJpPYmplY3TvvIznlKjkuo7ph43nva5zcGVjaWFsX2luc3BlY3TnmoTnibnmrorlrZfmrrVcbiAgICogcGxhY2VDaGVja0l0ZW1JZO+8mnNwZWNpYWxfaW5zcGVjdF9wbGFjZV9jaGVja2l0ZW0g5Li76ZSuaWTvvIxcbiAgICogcHJvYmxlbUlkc++8mumXrumimGlk5pWw57uEXG4gICAqL1xuICBhc3luYyBwb3N0UmVzdFByb2JsZW1DaGVja2l0ZW0oZGF0YSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgeyBzcGVjaWFsSW5zcGVjdElkLCByZXN0U3BlY2lhbEZpZWxkID0ge30gfSA9IGRhdGE7XG5cbiAgICAgICRsb2cubG9nKCfkuJPpobnlt6Hmo4At6YeN572u5qOA5p+l6aG55YaF5a65LeS8oOWFpeaVsOaNru+8micsIGRhdGEpO1xuXG4gICAgICAvLyAx44CB6LCD55So5o6l5Y+j77yM5Yig6Zmk57q/5LiK5pWw5o2uXG4gICAgICBsZXQgcG9zdERhdGEgPSB7XG4gICAgICAgIHNwZWNpYWxfaW5zcGVjdF9pZHM6IHNwZWNpYWxJbnNwZWN0SWQsXG4gICAgICB9O1xuICAgICAgbGV0IHBvc3QgPSBhd2FpdCBXZWJTZXJ2aWNlLnBvc3QoXG4gICAgICAgICcvb25saW5lL3NwZWNpYWwtaW5zcGVjdC9kZWxldGUtZGF0YS1vZi1jaGVja2l0ZW0nLFxuICAgICAgICBudWxsLFxuICAgICAgICBwb3N0RGF0YVxuICAgICAgKTtcbiAgICAgIGlmIChOdW1iZXIocG9zdC5lcnJjb2RlKSAmJiBOdW1iZXIocG9zdC5lcnJjb2RlKSAhPT0gMCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocG9zdCk7XG4gICAgICB9XG5cbiAgICAgIC8vIDPjgIHmm7TmlrDmo4Dmn6XpobnnmoTlhoXlrrlcbiAgICAgIGxldCBzcGVjaWFsRGF0YSA9IHtcbiAgICAgICAgLy8g6buY6K6k6YO96YeN572u55qE5a2X5q61XG4gICAgICAgIGlkOiBzcGVjaWFsSW5zcGVjdElkLFxuICAgICAgICBzdGF0dXM6ICfmnKrorr7nva4nLFxuICAgICAgICByZW1hcms6IG51bGwsXG4gICAgICAgIGltYWdlX2ZpbGU6ICdbXScsXG4gICAgICAgIGRvd25sb2FkX3RpbWU6IHBvc3QudXBkYXRlX3RpbWVzdGFtcCwgLy8g5pu05paw5q2k6aG55piv5Li65LqG77yM5LiL5ouJ5pWw5o2u5pe25LiN5omn6KGM5ZCO5Y+w5LiL5Y+R55qE6YeN572uc3FsXG5cbiAgICAgICAgLy8g5pyJ5LiA5Lqb54m55q6K55qE5qih5p2/77yM6ZyA6KaB6YeN572u55qE5a2X5q61XG4gICAgICAgIC4uLnJlc3RTcGVjaWFsRmllbGQsXG4gICAgICB9O1xuICAgICAgJGxvZy5sb2coJ+abtOaWsHNwZWNpYWxfaW5zcGVjdOaVsOaNru+8micsIHNwZWNpYWxEYXRhKTtcbiAgICAgIGF3YWl0IFNwZWNpYWxJbnNwZWN0UmVwb3NpdG9yeS51cGRhdGVTcGVjaWFsSW5zcGVjdERhdGEoc3BlY2lhbERhdGEpO1xuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3ph43nva7mo4Dmn6XpobnlhoXlrrkt6YeN572u5oiQ5YqfJyk7XG5cbiAgICAgIC8vIDTjgIHliKDpmaTkuIrkvKDpmJ/liJdcbiAgICAgIGF3YWl0IERhdGFTeW5jaHJvbml6ZXIucmVtb3ZlU3luY0dyb3VwKHNwZWNpYWxJbnNwZWN0SWQpO1xuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3ph43nva7mo4Dmn6XpobnlhoXlrrkt5Yig6Zmk5LiK5Lyg6Zif5YiX5oiQ5YqfJyk7XG5cbiAgICAgIC8vIDXjgIHliKDpmaTpl67pophcbiAgICAgIGxldCBwcm9ibGVtTGlzdCA9IGF3YWl0IFNwZWNpYWxJbnNwZWN0UmVwb3NpdG9yeS5nZXRQcm9ibGVtQnlTcGVjaWFsSW5zcGVjdChzcGVjaWFsSW5zcGVjdElkKTtcbiAgICAgIHByb2JsZW1MaXN0ID0gXy5tYXAocHJvYmxlbUxpc3QsIGl0ZW0gPT4gaXRlbS5pZCk7XG4gICAgICBpZiAocHJvYmxlbUxpc3QpIHtcbiAgICAgICAgdGhpcy5zcWxEZWxldGVQcm9ibGVtKHByb2JsZW1MaXN0KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALemHjee9ruajgOafpemhuS1lcnJvcu+8micsIGVycm9yKTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiDliKDpmaTmnKzlnLDnmoTpl67popjooajmlbDmja7vvIzkuI3mn6Xor6LmmK/lkKblnKjnur9cbiAgICogQHBhcmFtIHtTdHJpbmcvQXJyYXl9IGlkcyDpl67pophpZOaVsOe7hFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGlzQnVzaW5lc3NMb2cg5piv5ZCm6K6w5b2V5pel5b+XXG4gICAqL1xuICBhc3luYyBzcWxEZWxldGVQcm9ibGVtKGlkcywgaXNCdXNpbmVzc0xvZyA9IGZhbHNlKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIOWmguaenOmdnuaVsOe7hO+8jOWImeaUueS4uuaVsOe7hFxuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGlkcykpIHtcbiAgICAgICAgaWRzID0gW2lkc107XG4gICAgICB9XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWIoOmZpOmXrumimC3kvKDlhaVpZHPvvJonLCBpZHMpO1xuXG4gICAgICAvLyAx44CB5Yig6Zmk6Zeu6aKY6KGo5ZKM5YWz6IGU6KGoXG4gICAgICBhd2FpdCBTcGVjaWFsSW5zcGVjdFJlcG9zaXRvcnkuZGVsZXRlUHJvYmxlbUFsbElkcyhpZHMpO1xuICAgICAgJGxvZy5sb2coJ+S4k+mhueW3oeajgC3liKDpmaTpl67popgt5Yig6Zmk6Zeu6aKY6KGo5ZKM5YWz6IGU6KGo5oiQ5YqfJyk7XG5cbiAgICAgIC8vIDLjgIHliKDpmaTkuIrkvKDpmJ/liJdcbiAgICAgIGxldCBkZWxldGVTeW5jID0gW107XG4gICAgICBpZHMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgZGVsZXRlU3luYy5wdXNoKERhdGFTeW5jaHJvbml6ZXIucmVtb3ZlU3luY0dyb3VwKGl0ZW0pKTtcbiAgICAgIH0pO1xuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoZGVsZXRlU3luYyk7XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWIoOmZpOmXrumimC3liKDpmaTkuIrkvKDpmJ/liJfmiJDlip8nKTtcblxuICAgICAgLy8gM+OAgea3u+WKoOS4muWKoeaXpeW/l1xuICAgICAgaWYgKCFpc0J1c2luZXNzTG9nKSB7XG4gICAgICAgIGxldCBkZWxldGVMb2cgPSBbXTtcbiAgICAgICAgaWRzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgbGV0IGxvZyA9IEJ1c2luZXNzTG9nU2VydmljZS5hZGRMb2coe1xuICAgICAgICAgICAgcmVsYXRpb25faWQ6IGl0ZW0sXG4gICAgICAgICAgICBidXNpbmVzc190eXBlOiAnc3BlY2lhbC1pbnNwZWN0JyxcbiAgICAgICAgICAgIGV2ZW50OiAn5Yig6ZmkJyxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGRlbGV0ZUxvZy5wdXNoKGxvZyk7XG4gICAgICAgIH0pO1xuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChkZWxldGVMb2cpO1xuICAgICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWIoOmZpOmXrumimC3mt7vliqDliKDpmaTkuJrliqHml6Xlv5cnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAkbG9nLmxvZygn5LiT6aG55beh5qOALeWIoOmZpOmXrumimC1lcnJvcu+8micsIGVycm9yKTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICB9LFxufTtcbiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiNjJjNWY1YTJcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAubWFpbltkYXRhLXYtMmNhYzg4NjRde3Bvc2l0aW9uOmZpeGVkO3dpZHRoOjEwMCU7Ym90dG9tOjB9LnpqYXBwIC5hcnJvd1tkYXRhLXYtMmNhYzg4NjRde3Bvc2l0aW9uOmFic29sdXRlO3RvcDotN3B4O3JpZ2h0OjE4cHg7d2lkdGg6MDtoZWlnaHQ6MDtib3JkZXItYm90dG9tOjdweCBzb2xpZCAjZmZmO2JvcmRlci1yaWdodDo3cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWxlZnQ6N3B4IHNvbGlkIHRyYW5zcGFyZW50fS56amFwcCAuY29udGVudFtkYXRhLXYtMmNhYzg4NjRde3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNCk7b3ZlcmZsb3c6aGlkZGVufS56amFwcCAuYm94W2RhdGEtdi0yY2FjODg2NF17ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7b3ZlcmZsb3c6YXV0b30uemphcHAgLmJveC1zaW5nbGVbZGF0YS12LTJjYWM4ODY0XXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXg6MX0uemphcHAgLmRldGFpbC1oZFtkYXRhLXYtMmNhYzg4NjRde2Rpc3BsYXk6ZmxleDtwYWRkaW5nOjZweCAxNXB4fS56amFwcCAuZGV0YWlsLWFycm93LXJpZ2h0W2RhdGEtdi0yY2FjODg2NF17d2lkdGg6MTNweDtoZWlnaHQ6MzRweDtvdmVyZmxvdzpoaWRkZW59LnpqYXBwIC5kZXRhaWwtYXJyb3ctcmlnaHRbZGF0YS12LTJjYWM4ODY0XTpiZWZvcmV7ZGlzcGxheTpibG9jaztjb250ZW50OlxcXCJcXFwiO3dpZHRoOjA7aGVpZ2h0OjA7bWFyZ2luLXRvcDoxMnB4O2JvcmRlcjo1cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWxlZnQ6NXB4IHNvbGlkICNjOGM4Yzh9LnpqYXBwIC5kZXRhaWwtYXJyb3ctZG93bltkYXRhLXYtMmNhYzg4NjRde3dpZHRoOjEzcHg7aGVpZ2h0OjM0cHg7b3ZlcmZsb3c6aGlkZGVufS56amFwcCAuZGV0YWlsLWFycm93LWRvd25bZGF0YS12LTJjYWM4ODY0XTpiZWZvcmV7ZGlzcGxheTpibG9jaztjb250ZW50OlxcXCJcXFwiO3dpZHRoOjA7aGVpZ2h0OjA7bWFyZ2luLXRvcDoxNXB4O2JvcmRlcjo1cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcDo1cHggc29saWQgI2M4YzhjOH0uemphcHAgLmRldGFpbC10aXRsZVtkYXRhLXYtMmNhYzg4NjRde2ZsZXg6MTtsaW5lLWhlaWdodDozNHB4O2NvbG9yOiMxMTE7Zm9udC1zaXplOjE2cHh9LnpqYXBwIC5kZXRhaWwtYmRbZGF0YS12LTJjYWM4ODY0XXtwYWRkaW5nOjhweCAxNXB4IDhweCAzNXB4O2JhY2tncm91bmQtY29sb3I6I2ZhZmFmYX0uemphcHAgLnRleHQtbGluZVtkYXRhLXYtMmNhYzg4NjRde2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM2NjY7bGluZS1oZWlnaHQ6MzBweDttYXJnaW4tYm90dG9tOjMwcHh9LnpqYXBwIC5kZXRhaWwtaGQtc2luZ2xlW2RhdGEtdi0yY2FjODg2NF17cGFkZGluZzo2cHggMDttYXJnaW46MCAxNXB4fS56amFwcCAuZGV0YWlsLWJkLXNpbmdsZVtkYXRhLXYtMmNhYzg4NjRde2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleDoxO3BhZGRpbmc6OHB4IDE1cHg7YmFja2dyb3VuZC1jb2xvcjojZmZmfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZWRpdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1kNmU3ZWI4NiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3Byb2JsZW0tbGlzdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00Y2ZhNzdlNCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygncGFnZS1jb250ZW50Jyx7YXR0cnM6e1widGl0bGVcIjpcIuajgOafpemhueeZu+iusFwiLFwic2hvdy1nby1yb290XCI6dHJ1ZX19LFsoIV92bS5pc0xvYWRpbmcpP19jKCdjaGVjay1ndWlkZScse2RpcmVjdGl2ZXM6W3tuYW1lOlwidHJhY2tcIixyYXdOYW1lOlwidi10cmFja1wiLHZhbHVlOign5LiT6aG55beh5qOALeajgOafpeaMh+W8lScpLGV4cHJlc3Npb246XCIn5LiT6aG55beh5qOALeajgOafpeaMh+W8lSdcIn1dLGF0dHJzOntcInNsb3RcIjpcImhlYWRlci1iYXItcmlnaHRcIixcIml0ZW0taWRcIjpfdm0uc3BlY2lhbEluc3BlY3RJZCxcIm1vZHVsZVwiOlwic3BlY2lhbC1pbnNwZWN0XCJ9LHNsb3Q6XCJoZWFkZXItYmFyLXJpZ2h0XCJ9KTpfdm0uX2UoKSxfYygnc2Nyb2xsZXInLFsoIV92bS5pc0xvYWRpbmcgJiYgX3ZtLmRldGFpbERhdGEgJiYgX3ZtLmRldGFpbERhdGEuaWQpP1tfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ0aXRsZSBib3JkZXItYm90dG9tXCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS50aXRsZSkpXSksKF92bS5jaGVja2l0ZW1SdWxlKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJydWxlIGJvcmRlci1ib3R0b21cIn0sW192bS5fdihfdm0uX3MoX3ZtLmNoZWNraXRlbVJ1bGUpKV0pOl92bS5fZSgpLF9jKCdpdGVtJyx7YXR0cnM6e1wibGFiZWxcIjpcIuajgOafpee7k+aenFwiLFwibW9kZVwiOlwiZWRpdFwiLFwiYm9yZGVyXCI6XCJib3R0b21cIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbX2MoJ3JhZGlvLWJveCcse2F0dHJzOntcIm9wdGlvbnNcIjpbJ+S4jeWQiOagvCcsICflkIjmoLwnXX0sbW9kZWw6e3ZhbHVlOihfdm0ucmVzdWx0VHlwZSksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5yZXN1bHRUeXBlPSQkdn0sZXhwcmVzc2lvbjpcInJlc3VsdFR5cGVcIn19KV0sMSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJtdDEwXCJ9LFsoX3ZtLnJlc3VsdFR5cGUgPT09ICfkuI3lkIjmoLwnKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLlgJLmiaPliIZcIixcIm1vZGVcIjpcImVkaXRcIn19LFtfYygndGVtcGxhdGUnLHtzbG90OlwicmlnaHRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tY29uIGFsaWduLXJcIn0sW19jKCdudW1iZXItaW5wdXQnLHthdHRyczp7XCJkZWNpbWFsXCI6MixcInJhbmdlXCI6WzAsIDk5OTk5OS45OV19LG9uOntcImJsdXJcIjpfdm0uc2F2ZURyYWZ0fSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWxEYXRhLmRlZHVjdGlvbiksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWxEYXRhLCBcImRlZHVjdGlvblwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsRGF0YS5kZWR1Y3Rpb25cIn19KV0sMSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1mb250IG1sNVwifSxbX3ZtLl92KFwi5YiGXCIpXSldKV0sMik6X3ZtLl9lKCksX2MoJ2l0ZW0nLHtzdGF0aWNDbGFzczpcInAxNSBib3JkZXItYm90dG9tXCJ9LFtfYygnaXRlbS1pbWctbGlzdCcse2F0dHJzOntcIm1heGxlbmd0aFwiOjE1fSxvbjp7XCJjYWxsYmFja1wiOl92bS5zYXZlRHJhZnR9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbERhdGEuaW1hZ2VzKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbERhdGEsIFwiaW1hZ2VzXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWxEYXRhLmltYWdlc1wifX0pXSwxKSxfYygnaXRlbS10ZXh0YXJlYScse2F0dHJzOntcInBsYWNlaG9sZGVyXCI6XCLooaXlhYXor7TmmI5cIn0sb246e1wiYmx1clwiOl92bS5zYXZlRHJhZnR9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbERhdGEucmVtYXJrKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbERhdGEsIFwicmVtYXJrXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWxEYXRhLnJlbWFya1wifX0pXSwxKSxfYygncHJvYmxlbS1saXN0Jyx7YXR0cnM6e1wibGlzdFwiOl92bS5wcm9ibGVtTGlzdCxcImVkaXRcIjpfdm0uZWRpdGFibGV9LG9uOntcImFkZFwiOl92bS5jcmVhdGVQcm9ibGVtLFwiY2xpY2tJdGVtXCI6X3ZtLm9wZW5Qcm9ibGVtRGV0YWlsfX0pLChfdm0uZGV0YWlsRGF0YS5zdGF0dXMgPT09ICfojYnnqL8nKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcsW19jKCdhcHAtYnV0dG9uJyx7YXR0cnM6e1widHlwZVwiOlwidGV4dFwifSxvbjp7XCJjbGlja1wiOl92bS5kZWxldGVEcmFmdH19LFtfdm0uX3YoXCIg5Yig6Zmk5q2k6I2J56i/IFwiKV0pXSwxKTpfdm0uX2UoKSwoX3ZtLmFsbG93UmVzdCk/X2MoJ2FwcC1idXR0b24tZ3JvdXAnLFtfYygnYXBwLWJ1dHRvbicse2F0dHJzOntcInR5cGVcIjpcInRleHRcIn0sb246e1wiY2xpY2tcIjpfdm0uY2hlY2tJdGVtUmVzdH19LFtfdm0uX3YoXCIg5Yig6Zmk5bey5qOA5p+l5YaF5a65IFwiKV0pXSwxKTpfdm0uX2UoKV06X3ZtLl9lKCldLDIpLCghX3ZtLmlzTG9hZGluZyAmJiBfdm0uZGV0YWlsRGF0YSAmJiBfdm0uZGV0YWlsRGF0YS5pZCk/Wyhfdm0uZGV0YWlsRGF0YS5zdGF0dXMgPT09ICflkIjmoLwnIHx8IF92bS5kZXRhaWxEYXRhLnN0YXR1cyA9PT0gJ+S4jeWQiOagvCcpP19jKCdhcHAtYnV0dG9uLWdyb3VwJyx7YXR0cnM6e1wiZml4ZWQtYm90dG9tXCI6XCJcIn19LFtfYygnYXBwLWJ1dHRvbicse29uOntcImNsaWNrXCI6X3ZtLnN1Ym1pdH19LFtfdm0uX3YoXCIg5o+Q5LqkIFwiKV0pXSwxKTpfYygnYXBwLWJ1dHRvbi1ncm91cCcse2F0dHJzOntcImZpeGVkLWJvdHRvbVwiOlwiXCIsXCJzZWFtbGVzc1wiOlwiXCJ9fSxbX2MoJ2FwcC1idXR0b24nLHtzdGF0aWNTdHlsZTp7XCJ3aWR0aFwiOlwiNTAlXCJ9LGF0dHJzOntcInBsYWluXCI6XCJcIn0sb246e1wiY2xpY2tcIjpfdm0uc2F2ZURyYWZ0QW5kQmFja319LFtfdm0uX3YoXCIg5pqC5a2YIFwiKV0pLF9jKCdhcHAtYnV0dG9uJyx7b246e1wiY2xpY2tcIjpfdm0uc3VibWl0fX0sW192bS5fdihcIiDmj5DkuqQgXCIpXSldLDEpXTpfdm0uX2UoKSxfYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1sb2FkaW5nXCI6X3ZtLmlzTG9hZGluZyxcImlzLWVtcHR5XCI6IV92bS5kZXRhaWxEYXRhIHx8ICFfdm0uZGV0YWlsRGF0YS5pZCxcImVtcHR5LXRleHRcIjpcIuiOt+WPluaVsOaNruWksei0pVwifX0pXSwyKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2VkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kNmU3ZWI4NiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZWRpdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1kNmU3ZWI4NiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJkNmU3ZWI4NlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5wcm9ibGVtLXdyYXAtdGl0bGVbZGF0YS12LTRjZmE3N2U0XXtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyO2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM2NjY7cGFkZGluZy1sZWZ0OjE1cHg7aGVpZ2h0OjQzcHh9LnpqYXBwIC5wcm9ibGVtLXdyYXAtdGl0bGUgLnByb2JsZW0tYnRuW2RhdGEtdi00Y2ZhNzdlNF17cGFkZGluZzoxM3B4IDE1cHg7Y29sb3I6IzQyNzVlOH0uemphcHAgLnByb2JsZW0td3JhcCAucHJvYmxlbS1saXN0W2RhdGEtdi00Y2ZhNzdlNF17YmFja2dyb3VuZDojZmZmfS56amFwcCAucHJvYmxlbS13cmFwIC5wcm9ibGVtLWxpc3QgLnByb2JsZW0taXRlbVtkYXRhLXYtNGNmYTc3ZTRde2Rpc3BsYXk6ZmxleDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZWNlY2VjO3BhZGRpbmc6MTJweCAxNXB4fS56amFwcCAucHJvYmxlbS13cmFwIC5wcm9ibGVtLWxpc3QgLnByb2JsZW0taXRlbSBpbWdbZGF0YS12LTRjZmE3N2U0XXt3aWR0aDo3MHB4O2hlaWdodDo3MHB4O2JhY2tncm91bmQ6Y29yYWw7bWFyZ2luLXJpZ2h0OjEwcHh9LnpqYXBwIC5wcm9ibGVtLXdyYXAgLnByb2JsZW0tbGlzdCAucHJvYmxlbS1pdGVtIC5jb250ZW50W2RhdGEtdi00Y2ZhNzdlNF17bWFyZ2luLXJpZ2h0OjEwcHg7ZmxleDoxO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59LnpqYXBwIC5wcm9ibGVtLXdyYXAgLnByb2JsZW0tbGlzdCAucHJvYmxlbS1pdGVtIC5jb250ZW50IC5kZXNjW2RhdGEtdi00Y2ZhNzdlNF17Zm9udC1zaXplOjE2cHg7Y29sb3I6IzMzMztsaW5lLWhlaWdodDoyMnB4fS56amFwcCAucHJvYmxlbS13cmFwIC5wcm9ibGVtLWxpc3QgLnByb2JsZW0taXRlbSAuY29udGVudCAuZGF0ZVtkYXRhLXYtNGNmYTc3ZTRde2NvbG9yOiM5OTk7bGluZS1oZWlnaHQ6MjBweH0uemphcHAgLnByb2JsZW0td3JhcCAucHJvYmxlbS1saXN0IC5wcm9ibGVtLWl0ZW0gLnN0YXR1c1tkYXRhLXYtNGNmYTc3ZTRde2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7Y29sb3I6IzBiYzY2Nn0uemphcHAgLnByb2JsZW0td3JhcCAucHJvYmxlbS1saXN0IC5lbXB0eVtkYXRhLXYtNGNmYTc3ZTRde3BhZGRpbmc6NDBweCAwO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6Y2VudGVyO2NvbG9yOiM5OTl9LnpqYXBwIC5wcm9ibGVtLXdyYXAgLnByb2JsZW0tbGlzdCAuZW1wdHkgaW1nW2RhdGEtdi00Y2ZhNzdlNF17d2lkdGg6MTUwcHg7bWFyZ2luLWJvdHRvbToyNHB4fVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdlxuICAgIHYtaWY9XCJzaG93XCJcbiAgICBjbGFzcz1cIm1haW5cIlxuICAgIDpzdHlsZT1cInsgdG9wOiBjb250ZW50VG9wICsgJ3B4JyB9XCJcbiAgPlxuICAgIDxpIGNsYXNzPVwiYXJyb3dcIiAvPlxuICAgIDxkaXZcbiAgICAgIGNsYXNzPVwiY29udGVudFwiXG4gICAgICBAY2xpY2suc2VsZj1cImNsb3NlUG9wdXBcIlxuICAgID5cbiAgICAgIDx0cmFuc2l0aW9uXG4gICAgICAgIG5hbWU9XCJzbGlkZS1kb3duXCJcbiAgICAgICAgQGVudGVyPVwiaXNPcGVuaW5nID0gdHJ1ZVwiXG4gICAgICAgIEBhZnRlci1lbnRlcj1cImlzT3BlbmluZyA9IGZhbHNlXCJcbiAgICAgICAgQGxlYXZlPVwiaXNDbG9zaW5nID0gdHJ1ZVwiXG4gICAgICAgIEBhZnRlci1sZWF2ZT1cImFmdGVyQ2xvc2VcIlxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgdi1pZj1cInNob3dMaXN0XCJcbiAgICAgICAgICBjbGFzcz1cImJveFwiXG4gICAgICAgICAgOnN0eWxlPVwieydoZWlnaHQnOiBsaXN0SGVpZ2h0ICsgJ3B4J31cIlxuICAgICAgICA+XG4gICAgICAgICAgPCEtLSDlhoXlrrkgLS0+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgdi1mb3I9XCIoaXRlbSwgaXRlbUluZGV4KSBpbiBkYXRhXCJcbiAgICAgICAgICAgIDprZXk9XCJpdGVtSW5kZXhcIlxuICAgICAgICAgICAgOmNsYXNzPVwieydib3JkZXItYm90dG9tJzogZGF0YS5sZW5ndGggPiAxLCAnYm94LXNpbmdsZSc6IGRhdGEubGVuZ3RoID09PSAxfVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPCEtLSDmo4Dmn6XpobnlkI3np7AgLS0+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNsYXNzPVwiZGV0YWlsLWhkXCJcbiAgICAgICAgICAgICAgOmNsYXNzPVwieydib3JkZXItYm90dG9tJzogZGF0YS5sZW5ndGggPD0gMSwgJ2RldGFpbC1oZC1zaW5nbGUnOiBkYXRhLmxlbmd0aCA8PSAxfVwiXG4gICAgICAgICAgICAgIEBjbGljaz1cInRvZ2dsZUl0ZW0oaXRlbSlcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgIHYtaWY9XCJkYXRhLmxlbmd0aCA+IDFcIlxuICAgICAgICAgICAgICAgIDpjbGFzcz1cInsnZGV0YWlsLWFycm93LXJpZ2h0JzogIWl0ZW0uaXNPcGVuLCAnZGV0YWlsLWFycm93LWRvd24nOiBpdGVtLmlzT3Blbn1cIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGV0YWlsLXRpdGxlXCI+e3tpdGVtLm5hbWV9fTwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8IS0tIOajgOafpemhueWQjeensCBlbmQgLS0+XG5cbiAgICAgICAgICAgIDwhLS0g5qOA5p+l5oyH5byV5YaF5a65IC0tPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICB2LWlmPVwiZGF0YS5sZW5ndGggPD0gMSB8fCBpdGVtLmlzT3BlblwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiZGV0YWlsLWJkXCJcbiAgICAgICAgICAgICAgOmNsYXNzPVwieydkZXRhaWwtYmQtc2luZ2xlJzogZGF0YS5sZW5ndGggPD0gMX1cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8cFxuICAgICAgICAgICAgICAgIHYtZm9yPVwiKHRleHQsIHRleHRJbmRleCkgaW4gaXRlbS50ZXh0QXJyXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwidGV4dEluZGV4XCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cInRleHQtbGluZVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7e3RleHR9fVxuICAgICAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICAgICAgPGl0ZW0taW1nLWxpc3RcbiAgICAgICAgICAgICAgICB2LW1vZGVsPVwiaXRlbS5jb250ZW50SW1hZ2VcIlxuICAgICAgICAgICAgICAgIDplZGl0YWJsZWQ9XCJmYWxzZVwiXG4gICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgPGxvYWRpbmctc3RhdHVzXG4gICAgICAgICAgICAgICAgOmlzLWVtcHR5PVwiIWl0ZW0udGV4dEFyci5sZW5ndGggJiYgIWl0ZW0uY29udGVudEltYWdlLmxlbmd0aFwiXG4gICAgICAgICAgICAgICAgZW1wdHktdGV4dD1cIlBD56uv5pyq6K6+572u5qOA5p+l5oyH5byVXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPCEtLSDmo4Dmn6XmjIflvJXlhoXlrrkgZW5kIC0tPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwhLS0g5YaF5a65IGVuZCAtLT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RyYW5zaXRpb24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBJdGVtSW1nTGlzdCBmcm9tICdAc3JjL2NvbXBvbmVudHMvaXRlbS1pbWctbGlzdCc7XG5cbmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnQGNvbW1vbi9ldmVudC1idXMnO1xuaW1wb3J0IENvbW1vbkNoZWNrSXRlbVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9jaGVjay1pdGVtLXNlcnZpY2UuanMnO1xuaW1wb3J0IFBvcHVwTWl4aW4gZnJvbSAnQHNyYy91dGlscy9wb3B1cC1taXhpbic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0NoZWNrR3VpZGVEZXRhaWxEcm9wJyxcbiAgY29tcG9uZW50czogeyBJdGVtSW1nTGlzdCB9LFxuICBtaXhpbnM6IFtQb3B1cE1peGluXSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2hvdzogZmFsc2UsXG4gICAgICBzaG93TGlzdDogZmFsc2UsXG4gICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgaXNPcGVuaW5nOiBmYWxzZSxcbiAgICAgIGlzQ2xvc2luZzogZmFsc2UsXG5cbiAgICAgIC8vIOS4i+aLieahhui3neemu+mhtumDqOeahOi3neemu1xuICAgICAgY29udGVudFRvcDogNjQsXG4gICAgICAvLyDliJfooajpq5jluqZcbiAgICAgIGxpc3RIZWlnaHQ6IDUxMCxcblxuICAgICAgbW9kdWxlOiAnJyxcbiAgICAgIGl0ZW1JZHM6IFtdLFxuICAgICAgZGF0YTogW10sXG4gICAgICB0YXJnZXQ6ICcnLFxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgc2hvdyh2KSB7XG4gICAgICBpZiAodikge1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zaG93TGlzdCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgRXZlbnRCdXMuJG9uKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICBFdmVudEJ1cy4kb24oJ3BhZ2VDb250ZW50Q2xpY2snLCB0aGlzLm9uQ2xpY2tPdGhlcik7XG4gIH0sXG4gIGRlc3Ryb3llZCgpIHtcbiAgICBFdmVudEJ1cy4kb2ZmKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICBFdmVudEJ1cy4kb2ZmKCdwYWdlQ29udGVudENsaWNrJywgdGhpcy5vbkNsaWNrT3RoZXIpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb3BlblBvcHVwKHBhcmFtcykge1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuJGVtaXQoJ29wZW4nKTtcblxuICAgICAgdGhpcy5tb2R1bGUgPSBwYXJhbXMubW9kdWxlO1xuICAgICAgdGhpcy5pdGVtSWRzID0gcGFyYW1zLml0ZW1JZHM7XG4gICAgICB0aGlzLm9wdGlvbnMgPSBwYXJhbXMub3B0aW9ucztcblxuICAgICAgLy8g6K6h566X6aG26YOo6Led56a7XG4gICAgICBjb25zdCAkaGVhZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sYXlvdXQtbWFpbiAubGF5b3V0LWhlYWRlcicpO1xuICAgICAgdGhpcy5jb250ZW50VG9wID0gJGhlYWQub2Zmc2V0SGVpZ2h0O1xuXG4gICAgICAvLyDorqHnrpfpobbpg6jot53nprtcbiAgICAgIGlmIChwYXJhbXMuZWwpIHtcbiAgICAgICAgbGV0IGJvdW5kaW5nID0gcGFyYW1zLmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICB0aGlzLmNvbnRlbnRUb3AgPSBib3VuZGluZy5ib3R0b207XG4gICAgICB9XG4gICAgICB0aGlzLnRhcmdldCA9IHBhcmFtcy5lbDtcblxuICAgICAgdGhpcy5saXN0SGVpZ2h0ID0gXy5taW5CeShbd2luZG93LmlubmVySGVpZ2h0IC0gdGhpcy5jb250ZW50VG9wIC0gNTAsIDUxMF0pO1xuXG4gICAgICB0aGlzLmdldERhdGEoKTtcbiAgICB9LFxuICAgIC8vIOWFs+mXreW8ueeql1xuICAgIGNsb3NlUG9wdXAoKSB7XG4gICAgICBpZiAodGhpcy5pc09wZW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNob3dMaXN0ID0gZmFsc2U7XG4gICAgICB0aGlzLiRlbWl0KCdjbG9zZScpO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHRoaXMuJG9uKCdhZnRlckNsb3NlUG9wdXAnLCByZXNvbHZlKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgYWZ0ZXJDbG9zZSgpIHtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuXG4gICAgICB0aGlzLmlzQ2xvc2luZyA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnYWZ0ZXJDbG9zZVBvcHVwJyk7XG4gICAgfSxcbiAgICAvLyDngrnlh7vlhbbku5blnLDmlrnvvIzlhbPpl63lvLnnqpdcbiAgICBvbkNsaWNrT3RoZXIoZSkge1xuICAgICAgaWYgKCFlIHx8ICFlLnRhcmdldCB8fCBlLnRhcmdldCA9PT0gdGhpcy50YXJnZXQgfHwgIXRoaXMuc2hvdykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcbiAgICB9LFxuXG4gICAgZ2V0RGF0YSgpIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmxlbmd0aCkge1xuICAgICAgICB0aGlzLmRhdGEgPSBfLm1hcCh0aGlzLm9wdGlvbnMsIGl0ZW0gPT4ge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5pdGVtLFxuICAgICAgICAgICAgaXNPcGVuOiBmYWxzZSxcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIENvbW1vbkNoZWNrSXRlbVNlcnZpY2UuZ2V0TWVhc3VyZUNoZWNrSXRlbSh0aGlzLml0ZW1JZHMpXG4gICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IF8ubWFwKHJlcywgaXRlbSA9PiB7XG4gICAgICAgICAgICAgIGxldCBjb250ZW50ID0gaXRlbS5jb250ZW50ID8gaXRlbS5jb250ZW50LnRyaW0oKSA6ICcnO1xuICAgICAgICAgICAgICBsZXQgY29udGVudEFyciA9IGNvbnRlbnQgPyBjb250ZW50LnNwbGl0KCdcXG4nKSA6IFtdO1xuICAgICAgICAgICAgICBsZXQgY29udGVudEltYWdlID0gaXRlbS5jb250ZW50X2ltYWdlID8gSlNPTi5wYXJzZShpdGVtLmNvbnRlbnRfaW1hZ2UpIDogW107XG4gICAgICAgICAgICAgIGxldCB0ZXh0QXJyID0gXy5maWx0ZXIoY29udGVudEFyciwgdiA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICEvPGltZyhbXFxzXFxTXSopPi9nbS50ZXN0KHYpO1xuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICBfLmVhY2goY29udGVudEltYWdlLCB2ID0+IHtcbiAgICAgICAgICAgICAgICB2LnVybCA9IHYudXJsLnNwbGl0KCdAJylbMF07XG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgICAgICAgICAgbmFtZTogaXRlbS5mdWxsX25hbWUsXG4gICAgICAgICAgICAgICAgdGV4dEFycixcbiAgICAgICAgICAgICAgICBjb250ZW50SW1hZ2UsXG4gICAgICAgICAgICAgICAgaXNPcGVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICB0b2dnbGVJdGVtKGl0ZW0pIHtcbiAgICAgIGlmICh0aGlzLmRhdGEubGVuZ3RoID4gMSkge1xuICAgICAgICB0aGlzLiRzZXQoaXRlbSwgJ2lzT3BlbicsICFpdGVtLmlzT3Blbik7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4ubWFpbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMDtcbn1cbi5hcnJvdyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtN3B4O1xuICByaWdodDogMThweDtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgYm9yZGVyLWJvdHRvbTogN3B4IHNvbGlkIHdoaXRlO1xuICBib3JkZXItcmlnaHQ6IDdweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDdweCBzb2xpZCB0cmFuc3BhcmVudDtcbn1cbi5jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG4uYm94LXNpbmdsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXg6IDE7XG59XG5cbi5kZXRhaWwtaGQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiA2cHggMTVweDtcbn1cbi5kZXRhaWwtYXJyb3ctcmlnaHQge1xuICB3aWR0aDogMTNweDtcbiAgaGVpZ2h0OiAzNHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmRldGFpbC1hcnJvdy1yaWdodDo6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBtYXJnaW4tdG9wOiAxMnB4O1xuICBib3JkZXI6IDVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYzhjOGM4O1xufVxuLmRldGFpbC1hcnJvdy1kb3duIHtcbiAgd2lkdGg6IDEzcHg7XG4gIGhlaWdodDogMzRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5kZXRhaWwtYXJyb3ctZG93bjo6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBtYXJnaW4tdG9wOiAxNXB4O1xuICBib3JkZXI6IDVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcDogNXB4IHNvbGlkICNjOGM4Yzg7XG59XG4uZGV0YWlsLXRpdGxlIHtcbiAgZmxleDogMTtcbiAgbGluZS1oZWlnaHQ6IDM0cHg7XG4gIGNvbG9yOiAjMTExO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5kZXRhaWwtYmQge1xuICBwYWRkaW5nOiA4cHggMTVweCA4cHggMzVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cbi50ZXh0LWxpbmUge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjNjY2O1xuICBsaW5lLWhlaWdodDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuLmRldGFpbC1oZC1zaW5nbGUge1xuICBwYWRkaW5nOiA2cHggMDtcbiAgbWFyZ2luOiAwIDE1cHg7XG59XG4uZGV0YWlsLWJkLXNpbmdsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXg6IDE7XG4gIHBhZGRpbmc6IDhweCAxNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cbjwvc3R5bGU+XG4iLCIvKipcbiAyMDIwLTA5LTA4XG4g5YWo5bGA55qE54q25oCB6YWN572u6aG5XG4gKi9cblxuaW1wb3J0IE1vZHVsZSBmcm9tICdAc3JjL2NvbmZpZy9tb2R1bGUtY29kZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLy8g6Zeu6aKY5YiX6KGo44CB5Y+z5L6n54q25oCB5LiL77yM5pi+56S66LaF5pe2WFjlpKkr5Ymp5L2ZWFjlpKkr5LiN6LazMeWkqVxuICBSRVBBSVJfREVBRExJTkVfU1RBVFVTOiB7XG4gICAgbmFtZTogJ3JlcGFpcl9kZWFkbGluZV9zdGF0dXMnLFxuICAgIHN0YXR1czogWyflvoXmlbTmlLknXSxcbiAgICBtb2R1bGU6IFtNb2R1bGUuQ0hFQ0tdLFxuICB9LFxufTtcbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbGlzdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03NDEwMmMwNSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lZGl0LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWQ2ZTdlYjg2Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiMzU2MjFkZGNcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWIwYTMwOTI0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2xpc3QudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzQxMDJjMDUmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI2NTE3MGQ3M1wiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsIjx0ZW1wbGF0ZT5cbiAgPHBhZ2UtY29udGVudCB0aXRsZT1cIuajgOafpemhueeZu+iusFwiIDpzaG93LWdvLXJvb3Q9XCJ0cnVlXCI+XG4gICAgPCEtLSDlpLTpg6jlj7PkvqfmjInpkq4gLS0+XG4gICAgPGNoZWNrLWd1aWRlXG4gICAgICB2LWlmPVwiIWlzTG9hZGluZ1wiXG4gICAgICB2LXRyYWNrPVwiJ+S4k+mhueW3oeajgC3mo4Dmn6XmjIflvJUnXCJcbiAgICAgIHNsb3Q9XCJoZWFkZXItYmFyLXJpZ2h0XCJcbiAgICAgIDppdGVtLWlkPVwic3BlY2lhbEluc3BlY3RJZFwiXG4gICAgICBtb2R1bGU9XCJzcGVjaWFsLWluc3BlY3RcIlxuICAgIC8+XG4gICAgPCEtLSDlpLTpg6jlj7PkvqfmjInpkq4gZW5kIC0tPlxuXG4gICAgPHNjcm9sbGVyPlxuICAgICAgPHRlbXBsYXRlIHYtaWY9XCIhaXNMb2FkaW5nICYmIGRldGFpbERhdGEgJiYgZGV0YWlsRGF0YS5pZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGUgYm9yZGVyLWJvdHRvbVwiPnt7IHRpdGxlIH19PC9kaXY+XG4gICAgICAgIDxkaXYgdi1pZj1cImNoZWNraXRlbVJ1bGVcIiBjbGFzcz1cInJ1bGUgYm9yZGVyLWJvdHRvbVwiPnt7IGNoZWNraXRlbVJ1bGUgfX08L2Rpdj5cblxuICAgICAgICA8aXRlbSBsYWJlbD1cIuajgOafpee7k+aenFwiIG1vZGU9XCJlZGl0XCIgYm9yZGVyPVwiYm90dG9tXCI+XG4gICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tY29uXCI+XG4gICAgICAgICAgICA8cmFkaW8tYm94IHYtbW9kZWw9XCJyZXN1bHRUeXBlXCIgOm9wdGlvbnM9XCJbJ+S4jeWQiOagvCcsICflkIjmoLwnXVwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwibXQxMFwiPlxuICAgICAgICAgIDwhLS0g5YCS5omj5YiGIC0tPlxuICAgICAgICAgIDxpdGVtIHYtaWY9XCJyZXN1bHRUeXBlID09PSAn5LiN5ZCI5qC8J1wiIGxhYmVsPVwi5YCS5omj5YiGXCIgbW9kZT1cImVkaXRcIj5cbiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PVwicmlnaHRcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tY29uIGFsaWduLXJcIj5cbiAgICAgICAgICAgICAgICA8bnVtYmVyLWlucHV0XG4gICAgICAgICAgICAgICAgICB2LW1vZGVsPVwiZGV0YWlsRGF0YS5kZWR1Y3Rpb25cIlxuICAgICAgICAgICAgICAgICAgOmRlY2ltYWw9XCIyXCJcbiAgICAgICAgICAgICAgICAgIDpyYW5nZT1cIlswLCA5OTk5OTkuOTldXCJcbiAgICAgICAgICAgICAgICAgIEBibHVyPVwic2F2ZURyYWZ0XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tZm9udCBtbDVcIj7liIY8L2Rpdj5cbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgICAgPGl0ZW0gY2xhc3M9XCJwMTUgYm9yZGVyLWJvdHRvbVwiPlxuICAgICAgICAgICAgPGl0ZW0taW1nLWxpc3Qgdi1tb2RlbD1cImRldGFpbERhdGEuaW1hZ2VzXCIgOm1heGxlbmd0aD1cIjE1XCIgQGNhbGxiYWNrPVwic2F2ZURyYWZ0XCIgLz5cbiAgICAgICAgICA8L2l0ZW0+XG4gICAgICAgICAgPGl0ZW0tdGV4dGFyZWEgdi1tb2RlbD1cImRldGFpbERhdGEucmVtYXJrXCIgcGxhY2Vob2xkZXI9XCLooaXlhYXor7TmmI5cIiBAYmx1cj1cInNhdmVEcmFmdFwiIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwhLS0g6Zeu6aKY5YiX6KGoIC0tPlxuICAgICAgICA8cHJvYmxlbS1saXN0XG4gICAgICAgICAgOmxpc3Q9XCJwcm9ibGVtTGlzdFwiXG4gICAgICAgICAgOmVkaXQ9XCJlZGl0YWJsZVwiXG4gICAgICAgICAgQGFkZD1cImNyZWF0ZVByb2JsZW1cIlxuICAgICAgICAgIEBjbGlja0l0ZW09XCJvcGVuUHJvYmxlbURldGFpbFwiXG4gICAgICAgIC8+XG5cbiAgICAgICAgPCEtLSDliKDpmaTojYnnqL/mjInpkq4gLS0+XG4gICAgICAgIDxhcHAtYnV0dG9uLWdyb3VwIHYtaWY9XCJkZXRhaWxEYXRhLnN0YXR1cyA9PT0gJ+iNieeovydcIj5cbiAgICAgICAgICA8YXBwLWJ1dHRvbiB0eXBlPVwidGV4dFwiIEBjbGljaz1cImRlbGV0ZURyYWZ0XCI+IOWIoOmZpOatpOiNieeovyA8L2FwcC1idXR0b24+XG4gICAgICAgIDwvYXBwLWJ1dHRvbi1ncm91cD5cblxuICAgICAgICA8IS0tIOWIoOmZpOW3suajgOafpeWGheWuuSAtLT5cbiAgICAgICAgPGFwcC1idXR0b24tZ3JvdXAgdi1pZj1cImFsbG93UmVzdFwiPlxuICAgICAgICAgIDxhcHAtYnV0dG9uIHR5cGU9XCJ0ZXh0XCIgQGNsaWNrPVwiY2hlY2tJdGVtUmVzdFwiPiDliKDpmaTlt7Lmo4Dmn6XlhoXlrrkgPC9hcHAtYnV0dG9uPlxuICAgICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgIDwvc2Nyb2xsZXI+XG5cbiAgICA8dGVtcGxhdGUgdi1pZj1cIiFpc0xvYWRpbmcgJiYgZGV0YWlsRGF0YSAmJiBkZXRhaWxEYXRhLmlkXCI+XG4gICAgICA8IS0tIOi0tOW6leaMiemSriAtLT5cbiAgICAgIDxhcHAtYnV0dG9uLWdyb3VwXG4gICAgICAgIHYtaWY9XCJkZXRhaWxEYXRhLnN0YXR1cyA9PT0gJ+WQiOagvCcgfHwgZGV0YWlsRGF0YS5zdGF0dXMgPT09ICfkuI3lkIjmoLwnXCJcbiAgICAgICAgZml4ZWQtYm90dG9tXG4gICAgICA+XG4gICAgICAgIDxhcHAtYnV0dG9uIEBjbGljaz1cInN1Ym1pdFwiPiDmj5DkuqQgPC9hcHAtYnV0dG9uPlxuICAgICAgPC9hcHAtYnV0dG9uLWdyb3VwPlxuICAgICAgPGFwcC1idXR0b24tZ3JvdXAgdi1lbHNlIGZpeGVkLWJvdHRvbSBzZWFtbGVzcz5cbiAgICAgICAgPGFwcC1idXR0b24gcGxhaW4gc3R5bGU9XCJ3aWR0aDogNTAlXCIgQGNsaWNrPVwic2F2ZURyYWZ0QW5kQmFja1wiPiDmmoLlrZggPC9hcHAtYnV0dG9uPlxuICAgICAgICA8YXBwLWJ1dHRvbiBAY2xpY2s9XCJzdWJtaXRcIj4g5o+Q5LqkIDwvYXBwLWJ1dHRvbj5cbiAgICAgIDwvYXBwLWJ1dHRvbi1ncm91cD5cbiAgICAgIDwhLS0g6LS05bqV5oyJ6ZKuIGVuZCAtLT5cbiAgICA8L3RlbXBsYXRlPlxuXG4gICAgPGxvYWRpbmctc3RhdHVzXG4gICAgICA6aXMtbG9hZGluZz1cImlzTG9hZGluZ1wiXG4gICAgICA6aXMtZW1wdHk9XCIhZGV0YWlsRGF0YSB8fCAhZGV0YWlsRGF0YS5pZFwiXG4gICAgICBlbXB0eS10ZXh0PVwi6I635Y+W5pWw5o2u5aSx6LSlXCJcbiAgICAvPlxuICA8L3BhZ2UtY29udGVudD5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgQ2hlY2tHdWlkZSBmcm9tICdAc3JjL3dpZGdldC9jaGVjay1ndWlkZS9pbmRleC52dWUnO1xuaW1wb3J0IFNjcm9sbGVyIGZyb20gJ0Bjb21wb25lbnRzL3Njcm9sbGVyJztcbmltcG9ydCBJdGVtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgSXRlbUltZ0xpc3QgZnJvbSAnQHNyYy9jb21wb25lbnRzL2l0ZW0taW1nLWxpc3QnO1xuaW1wb3J0IEl0ZW1UZXh0YXJlYSBmcm9tICdAY29tcG9uZW50cy9pdGVtLXRleHRhcmVhJztcbmltcG9ydCBSYWRpb0JveCBmcm9tICdAY29tcG9uZW50cy9yYWRpby1ib3gnO1xuaW1wb3J0IE51bWJlcklucHV0IGZyb20gJ0Bjb21wb25lbnRzL251bWJlci1pbnB1dC9pbmRleC52dWUnO1xuaW1wb3J0IFByb2JsZW1MaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvcHJvYmxlbS1saXN0JztcblxuaW1wb3J0IFBvcHVwIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAnO1xuaW1wb3J0IGNvbnRleHQgZnJvbSAnQHNyYy9mcmFtZXdvcmsvY29udGV4dCc7XG5pbXBvcnQgQ29tbW9uQmFzZWRhdGFTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY29tbW9uLWJhc2VkYXRhLXNlcnZpY2UnO1xuaW1wb3J0IFByb2plY3RTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vcHJvamVjdC1zZXJ2aWNlJztcbmltcG9ydCBDb21tb25Db25zdHJ1Y3Rpb25TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY29uc3RydWN0aW9uLXNlcnZpY2UnO1xuaW1wb3J0IERhdGFTeW5jaHJvbml6ZXIgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9kYXRhLXN5bmNocm9uaXplcic7XG5pbXBvcnQgU3BlY2lhbEluc3BlY3RTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9zcGVjaWFsLWluc3BlY3Qvc3BlY2lhbC1pbnNwZWN0LXNlcnZpY2UnO1xuaW1wb3J0IG1ta3YgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbW1rdic7XG5pbXBvcnQgeyBvbkRvd25sb2FkSGFzUm93cywgb25SZWxvYWRQYWdlIH0gZnJvbSAnQHNyYy9jb21tb24vZXZlbnQtYnVzJztcbmltcG9ydCBQcm9ibGVtU2VydmljZSBmcm9tICcuLi9wcm9ibGVtL3NlcnZpY2UuanMnO1xuaW1wb3J0IFNwZWNpYWxJbnNwZWN0Q29tcG9uZW50c0RlbGV0ZSBmcm9tICdAc3JjL3ZpZXdzL3NwZWNpYWwtaW5zcGVjdC9jb21wb25lbnRzL2RlbGV0ZSc7XG5cbmNvbnN0IGN1cnJlbnRVc2VyID0gY29udGV4dC5nZXRVc2VyKCk7XG4vLyDojYnnqL/nmoTmo4Dmn6Xnu5PmnpzlrZjlnKggbW1rdlxuY29uc3QgZHJhZlN0YXR1c0tleSA9ICdzcGVjaWFsLWluc3BlY3QtZGV0YWlsLWRyYWYtc3RhdHVzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnU3BlY2lhbEluc3BlY3REZXRhaWxFZGl0JyxcbiAgY29tcG9uZW50czoge1xuICAgIENoZWNrR3VpZGUsXG4gICAgU2Nyb2xsZXIsXG4gICAgSXRlbSxcbiAgICBJdGVtSW1nTGlzdCxcbiAgICBJdGVtVGV4dGFyZWEsXG4gICAgUmFkaW9Cb3gsXG4gICAgTnVtYmVySW5wdXQsXG4gICAgUHJvYmxlbUxpc3QsXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzTG9hZGluZzogdHJ1ZSxcbiAgICAgIHNwZWNpYWxJbnNwZWN0SWQ6ICcnLFxuICAgICAgcGxhY2VJZDogJycsXG5cbiAgICAgIC8vIOaYr+WQpuaYr+a1i+WMuuaooeW8j++8jOa1i+WMuuaooeW8j+eahOaVsOaNruS7jiBzcGVjaWFsX2luc3BlY3RfcGxhY2VfY2hlY2tpdGVtIOihqOiOt+WPllxuICAgICAgaXNCYXRjaFBsYWNlTW9kZTogZmFsc2UsXG4gICAgICByZXN1bHRUeXBlOiAnJyxcblxuICAgICAgLy8g6aG16Z2i5pWw5o2uXG4gICAgICBkZXRhaWxEYXRhOiB7fSxcblxuICAgICAgLy8g6Zeu6aKY5YiX6KGoXG4gICAgICBwcm9ibGVtTGlzdDogW10sXG5cbiAgICAgIC8vIOaYr+WQpuWFgeiuuOe8lui+ke+8jOaJueasoeacquaPkOS6pO+8jOaJueasoeajgOafpeS6uuWPr+S7pee8lui+kVxuICAgICAgZWRpdGFibGU6IGZhbHNlLFxuICAgICAgYWxsb3dSZXN0OiBmYWxzZSwgLy8g6IO95ZCm6YeN572u5qOA5p+l6aG5XG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICB0aXRsZSgpIHtcbiAgICAgIHJldHVybiAodGhpcy5kZXRhaWxEYXRhICYmIHRoaXMuZGV0YWlsRGF0YS5jaGVja2l0ZW0gJiYgdGhpcy5kZXRhaWxEYXRhLmNoZWNraXRlbS5uYW1lKSB8fCAnJztcbiAgICB9LFxuICAgIC8vIOajgOafpemhueinhOWImVxuICAgIGNoZWNraXRlbVJ1bGUoKSB7XG4gICAgICBsZXQgZXh0ZW5zaW9uID1cbiAgICAgICAgKHRoaXMuZGV0YWlsRGF0YSAmJiB0aGlzLmRldGFpbERhdGEuY2hlY2tpdGVtICYmIHRoaXMuZGV0YWlsRGF0YS5jaGVja2l0ZW0uZXh0ZW5zaW9uKSB8fCB7fTtcbiAgICAgIHJldHVybiAoZXh0ZW5zaW9uLnJhdGluZ19ydWxlICYmIGV4dGVuc2lvbi5yYXRpbmdfcnVsZS52YWx1ZSkgfHwgJyc7XG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlZCgpIHtcbiAgICBvblJlbG9hZFBhZ2UoKCkgPT4ge1xuICAgICAgdGhpcy5pbml0KCk7XG4gICAgfSk7XG4gIH0sXG4gIGFjdGl2YXRlZCgpIHtcbiAgICB0aGlzLnNwZWNpYWxJbnNwZWN0SWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5zcGVjaWFsSW5zcGVjdElkO1xuICAgIHRoaXMucGxhY2VJZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnBsYWNlSWQ7XG4gICAgdGhpcy5pc0JhdGNoUGxhY2VNb2RlID0gISF0aGlzLnBsYWNlSWQ7XG5cbiAgICBpZiAoIXRoaXMuJHJvdXRlci5pc0JhY2spIHtcbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcbiAgICB9XG4gICAgdGhpcy5pbml0KCk7XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGluaXQoKSB7XG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICByZXR1cm4gdGhpcy5nZXREZXRhaWxEYXRhKClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHJldHVybiB0aGlzLmdldEJhdGNoRGF0YSh0aGlzLmRldGFpbERhdGEuYmF0Y2hfaWQpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvYmxlbUxpc3QoKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgJGxvZy5lcnJvcihlcnJvcik7XG4gICAgICAgICAgdGhpcy5kZXRhaWxEYXRhID0ge307XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBnZXREZXRhaWxEYXRhKCkge1xuICAgICAgaWYgKCF0aGlzLnNwZWNpYWxJbnNwZWN0SWQpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCfnvLrlsJHlj4LmlbAnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5pc0JhdGNoUGxhY2VNb2RlKSB7XG4gICAgICAgICAgICAvLyDlpoLmnpzmnInmtYvljLoocGxhY2VJZCnvvIzliJnmn6Xor6Igc3BlY2lhbF9pbnNwZWN0X3BsYWNlX2NoZWNraXRlbSDooajnmoTmlbDmja5cbiAgICAgICAgICAgIHJldHVybiBTcGVjaWFsSW5zcGVjdFNlcnZpY2UuZ2V0UGxhY2VTcGVjaWFsSW5zcGVjdERhdGEoXG4gICAgICAgICAgICAgIHRoaXMuc3BlY2lhbEluc3BlY3RJZCxcbiAgICAgICAgICAgICAgdGhpcy5wbGFjZUlkXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyDmsqHmnInmtYvljLrvvIzliJnmn6Xor6Igc3BlY2lhbF9pbnNwZWN0IOihqOaVsOaNrlxuICAgICAgICAgICAgcmV0dXJuIFNwZWNpYWxJbnNwZWN0U2VydmljZS5nZXRTcGVjaWFsSW5zcGVjdERhdGEodGhpcy5zcGVjaWFsSW5zcGVjdElkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgdGhpcy5kZXRhaWxEYXRhID0gcmVzO1xuXG4gICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVzdWx0VHlwZSgpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6I635Y+W5om55qyh5pWw5o2uXG4gICAgZ2V0QmF0Y2hEYXRhKGJhdGNoSWQpIHtcbiAgICAgIGlmICghYmF0Y2hJZCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ+e8uuWwkeaJueasoWlkJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLmdldEJhdGNoRGV0YWlsQW5kQ2hlY2tlcnMoYmF0Y2hJZClcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICBsZXQgaXNCYXRjaENoZWNrZXIgPSBfLnNvbWUocmVzLmNoZWNrZXJzLCB7IHVzZXJfaWQ6IGN1cnJlbnRVc2VyLnVzZXJfaWQgfSk7XG4gICAgICAgICAgdGhpcy5lZGl0YWJsZSA9IHJlcy5zdGF0dXMgIT09ICfmo4Dmn6Xlrozmr5UnICYmIGlzQmF0Y2hDaGVja2VyO1xuICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgcmV0dXJuIFNwZWNpYWxJbnNwZWN0U2VydmljZS5nZXREZXRhaWxUb0FsbG93KFxuICAgICAgICAgICAgdGhpcy5kZXRhaWxEYXRhLnN0YXR1cyxcbiAgICAgICAgICAgIHJlcy5zdGF0dXMsXG4gICAgICAgICAgICByZXMuY2hlY2tlcnMsXG4gICAgICAgICAgICByZXMubW9kZVxuICAgICAgICAgICkudGhlbihhbGxvd3MgPT4ge1xuICAgICAgICAgICAgdGhpcy5hbGxvd1Jlc3QgPSBhbGxvd3MuYWxsb3dSZXN0OyAvLyDog73lkKbph43nva7mo4Dmn6XpoblcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGdldFByb2JsZW1MaXN0KCkge1xuICAgICAgcmV0dXJuIFByb2JsZW1TZXJ2aWNlLmdldFByb2JsZW1MaXN0KHRoaXMuc3BlY2lhbEluc3BlY3RJZCwgdGhpcy5wbGFjZUlkKS50aGVuKFxuICAgICAgICBwcm9ibGVtTGlzdCA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9ibGVtTGlzdCA9IHByb2JsZW1MaXN0O1xuXG4gICAgICAgICAgLy8g6Ieq5Yqo5Yqg6L295Zu+54mHXG4gICAgICAgICAgLyogdmFyIG5lZWREb3dubG9hZERhdGEgPSBfLmZpbHRlcihwcm9ibGVtTGlzdCwgZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgIHZhciBpbWFnZXMgPSBKU09OLnBhcnNlKGl0ZW0uaW1hZ2VfZmlsZSB8fCAnW10nKTtcbiAgICAgICAgICByZXR1cm4gSW1hZ2VTZXJ2aWNlLmlzTmVlZFRodW1ibmFpbChpbWFnZXMpO1xuICAgICAgICB9KTtcblxuICAgICAgICBEYXRhU3luY2hyb25pemVyLmF1dG9Mb2FkVGh1bWJuYWlsKFxuICAgICAgICAgIG5lZWREb3dubG9hZERhdGEsXG4gICAgICAgICAgJ+S4k+mhueW3oeajgCcsXG4gICAgICAgICAgJ2ltYWdlX2ZpbGUnLFxuICAgICAgICAgICd0aHVtYm5haWwnLFxuICAgICAgICAgICdjaGVja3F1YWxpdHlfcHJvYmxlbSdcbiAgICAgICAgKTsgKi9cbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9LFxuXG4gICAgLyog6I635Y+W4oCc5qOA5p+l57uT5p6c4oCdXG4gICAgICog54q25oCB5Li65pyq6K6+572u5pe277ya6buY6K6k5LiN5ZCI5qC8XG4gICAgICog54q25oCB5Li66I2J56i/5pe277ya5LuOIG1ta3Yg6I635Y+WXG4gICAgICog54q25oCB5Li64oCc5ZCI5qC84oCd5oiW4oCc5LiN5ZCI5qC84oCd5pe277ya5qOA5p+l57uT5p6cID0g54q25oCBXG4gICAgICovXG4gICAgZ2V0UmVzdWx0VHlwZSgpIHtcbiAgICAgIGlmICghdGhpcy5kZXRhaWxEYXRhIHx8ICF0aGlzLmRldGFpbERhdGEuc3RhdHVzIHx8IHRoaXMuZGV0YWlsRGF0YS5zdGF0dXMgPT09ICfmnKrorr7nva4nKSB7XG4gICAgICAgIHRoaXMucmVzdWx0VHlwZSA9ICfkuI3lkIjmoLwnO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmRldGFpbERhdGEuc3RhdHVzID09PSAn6I2J56i/Jykge1xuICAgICAgICByZXR1cm4gbW1rdi5nZXRVc2VyT2JqZWN0KGRyYWZTdGF0dXNLZXkpLnRoZW4oc3RhdHVzU2V0ID0+IHtcbiAgICAgICAgICBzdGF0dXNTZXQgPSBzdGF0dXNTZXQgfHwge307XG4gICAgICAgICAgdGhpcy5yZXN1bHRUeXBlID0gc3RhdHVzU2V0W3RoaXMuZGV0YWlsRGF0YS5pZF0gfHwgJ+S4jeWQiOagvCc7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChbJ+WQiOagvCcsICfkuI3lkIjmoLwnXS5zb21lKGl0ZW0gPT4gaXRlbSA9PT0gdGhpcy5kZXRhaWxEYXRhLnN0YXR1cykpIHtcbiAgICAgICAgdGhpcy5yZXN1bHRUeXBlID0gdGhpcy5kZXRhaWxEYXRhLnN0YXR1cztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmVzdWx0VHlwZSA9ICfkuI3lkIjmoLwnO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBzYXZlRHJhZnQoKSB7XG4gICAgICBpZiAoWyflkIjmoLwnLCAn5LiN5ZCI5qC8J10uc29tZShpdGVtID0+IGl0ZW0gPT09IHRoaXMuZGV0YWlsRGF0YS5zdGF0dXMpKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgIGlkOiB0aGlzLmRldGFpbERhdGEuaWQsXG4gICAgICAgIHN0YXR1czogJ+iNieeovycsXG4gICAgICAgIGRlZHVjdGlvbjogdGhpcy5kZXRhaWxEYXRhLmRlZHVjdGlvbixcbiAgICAgICAgaW1hZ2VzOiB0aGlzLmRldGFpbERhdGEuaW1hZ2VzLFxuICAgICAgICByZW1hcms6IHRoaXMuZGV0YWlsRGF0YS5yZW1hcmssXG4gICAgICB9O1xuICAgICAgZGF0YS5zdGF0dXMgPSAn6I2J56i/JztcblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5pc0JhdGNoUGxhY2VNb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLnVwZGF0ZVBsYWNlU3BlY2lhbEluc3BlY3REYXRhKGRhdGEpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLnVwZGF0ZVNwZWNpYWxJbnNwZWN0RGF0YShkYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICByZXR1cm4gbW1rdi5nZXRVc2VyT2JqZWN0KGRyYWZTdGF0dXNLZXkpLnRoZW4oc3RhdHVzU2V0ID0+IHtcbiAgICAgICAgICAgIHN0YXR1c1NldCA9IHN0YXR1c1NldCB8fCB7fTtcbiAgICAgICAgICAgIHN0YXR1c1NldFtkYXRhLmlkXSA9IHRoaXMucmVzdWx0VHlwZTtcbiAgICAgICAgICAgIHJldHVybiBtbWt2LnNhdmVVc2VyT2JqZWN0KGRyYWZTdGF0dXNLZXksIHN0YXR1c1NldCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICB0aGlzLmRldGFpbERhdGEuc3RhdHVzID0gJ+iNieeovyc7XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDliKDpmaTojYnnqL9cbiAgICBkZWxldGVEcmFmdCgpIHtcbiAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICBpZDogdGhpcy5kZXRhaWxEYXRhLmlkLFxuICAgICAgICBzdGF0dXM6ICfmnKrorr7nva4nLFxuICAgICAgICBkZWR1Y3Rpb246ICcnLFxuICAgICAgICBpbWFnZXM6IFtdLFxuICAgICAgICByZW1hcms6ICcnLFxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5pc0JhdGNoUGxhY2VNb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLnVwZGF0ZVBsYWNlU3BlY2lhbEluc3BlY3REYXRhKGRhdGEpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLnVwZGF0ZVNwZWNpYWxJbnNwZWN0RGF0YShkYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICByZXR1cm4gbW1rdi5nZXRVc2VyT2JqZWN0KGRyYWZTdGF0dXNLZXkpLnRoZW4oc3RhdHVzU2V0ID0+IHtcbiAgICAgICAgICAgIHN0YXR1c1NldCA9IHN0YXR1c1NldCB8fCB7fTtcbiAgICAgICAgICAgIGRlbGV0ZSBzdGF0dXNTZXRbZGF0YS5pZF07XG4gICAgICAgICAgICByZXR1cm4gbW1rdi5zYXZlVXNlck9iamVjdChkcmFmU3RhdHVzS2V5LCBzdGF0dXNTZXQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOWIoOmZpOW3suajgOafpeWGheWuuVxuICAgIGFzeW5jIGNoZWNrSXRlbVJlc3QoKSB7XG4gICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgc3BlY2lhbEluc3BlY3RJZDogdGhpcy5zcGVjaWFsSW5zcGVjdElkLFxuICAgICAgICBwcm9ibGVtSWRzOiB0aGlzLnByb2JsZW1MaXN0Lm1hcChpdGVtID0+IGl0ZW0uaWQpLCAvLyDpl67pophpZOaVsOe7hFxuICAgICAgICBwbGFjZUNoZWNraXRlbUlkOiB0aGlzLmRldGFpbERhdGEuaWQsIC8vIOa1i+WMuuS4i+euoeeQhuajgOafpemhueeahGlkXG4gICAgICB9O1xuXG4gICAgICB0cnkge1xuICAgICAgICBsZXQgcG9wID0gYXdhaXQgU3BlY2lhbEluc3BlY3RDb21wb25lbnRzRGVsZXRlLm5ldHdvcmtUZXN0KFxuICAgICAgICAgICfnoa7lrprliKDpmaTlt7Lmo4Dmn6XlhoXlrrnkuI7pl67popjvvJ9cXG7liKDpmaTnmoTlt7Lmo4Dmn6XlhoXlrrnkuI7pl67popjlsIbml6Dms5Xmib7lm57jgIInXG4gICAgICAgICk7XG4gICAgICAgIGlmICghcG9wKSByZXR1cm47XG5cbiAgICAgICAgYXdhaXQgU3BlY2lhbEluc3BlY3RDb21wb25lbnRzRGVsZXRlLnBvc3RSZXN0Q2hlY2tJdGVtVGVtcGxhdGUxMShkYXRhKTtcbiAgICAgICAgUG9wdXAuaGlkZUxvYWRpbmcoKTtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+WIoOmZpOaIkOWKnycpO1xuICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oLTEpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgUG9wdXAuaGlkZUxvYWRpbmcoKTtcbiAgICAgICAgUG9wdXAuYWxlcnQoZXJyb3IuZXJybXNnKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2F2ZURyYWZ0QW5kQmFjaygpIHtcbiAgICAgIHRoaXMuc2F2ZURyYWZ0KCkudGhlbigoKSA9PiB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCfkv53lrZjmiJDlip8nKTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBzdWJtaXQoKSB7XG4gICAgICBQb3B1cC5sb2FkaW5nKCfmraPlnKjmj5DkuqQnKTtcblxuICAgICAgbGV0IGRhdGEgPSB7IC4uLnRoaXMuZGV0YWlsRGF0YSB9O1xuICAgICAgZGF0YS5zdGF0dXMgPSB0aGlzLnJlc3VsdFR5cGU7XG4gICAgICBpZiAodGhpcy5yZXN1bHRUeXBlID09PSAn5ZCI5qC8Jykge1xuICAgICAgICBkYXRhLmRlZHVjdGlvbiA9ICcnO1xuICAgICAgfVxuICAgICAgaWYgKFxuICAgICAgICB0aGlzLnJlc3VsdFR5cGUgPT09ICfkuI3lkIjmoLwnICYmXG4gICAgICAgIGRhdGEuZGVkdWN0aW9uID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgZGF0YS5kZWR1Y3Rpb24gPT0gbnVsbCAmJlxuICAgICAgICBkYXRhLmRlZHVjdGlvbiA9PT0gJydcbiAgICAgICkge1xuICAgICAgICBQb3B1cC5hbGVydCgn6K+36L6T5YWl5YCS5omj5YiGJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5pc0JhdGNoUGxhY2VNb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLnN1Ym1pdFBsYWNlU3BlY2lhbEluc3BlY3REYXRhKGRhdGEpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLnN1Ym1pdFNwZWNpYWxJbnNwZWN0RGF0YShkYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBQb3B1cC5oaWRlTG9hZGluZygpO1xuICAgICAgICAgIFBvcHVwLmFsZXJ0KCfmj5DkuqTmiJDlip8nKTtcbiAgICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oLTEpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgY3JlYXRlUHJvYmxlbSgpIHtcbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtcbiAgICAgICAgbmFtZTogJ1NwZWNpYWxJbnNwZWNQcm9ibGVtUHVyZUVkaXQnLFxuICAgICAgICBxdWVyeToge1xuICAgICAgICAgIHNwZWNpYWxJbnNwZWN0SWQ6IHRoaXMuc3BlY2lhbEluc3BlY3RJZCxcbiAgICAgICAgICBwbGFjZUlkOiB0aGlzLnBsYWNlSWQsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9wZW5Qcm9ibGVtRGV0YWlsKGl0ZW0pIHtcbiAgICAgIHZhciByb3V0ZU5hbWU7XG4gICAgICBpZiAoaXRlbS5zdGF0dXMgPT09ICfojYnnqL8nKSB7XG4gICAgICAgIHJvdXRlTmFtZSA9ICdTcGVjaWFsSW5zcGVjUHJvYmxlbVB1cmVFZGl0JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJvdXRlTmFtZSA9ICdTcGVjaWFsSW5zcGVjUHJvYmxlbVB1cmVWaWV3JztcbiAgICAgIH1cbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtcbiAgICAgICAgbmFtZTogcm91dGVOYW1lLFxuICAgICAgICBxdWVyeToge1xuICAgICAgICAgIHByb2JsZW1JZDogaXRlbS5pZCxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi50aXRsZSB7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuLnJ1bGUge1xuICBwYWRkaW5nOiAxM3B4IDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjOTk5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cbi9kZWVwLyAuaXRlbS10ZXh0YXJlYSB0ZXh0YXJlYSB7XG4gIG1pbi1oZWlnaHQ6IDEzMHB4O1xufVxuXG4ucHJvYmxlbS1saXN0LXRpdGxlIHtcbiAgcGFkZGluZzogMTNweCAxNXB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzY2Njtcbn1cbi50aXBzLWJveCB7XG4gIHBhZGRpbmc6IDQwcHggMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG48L3N0eWxlPlxuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIzNTU5MGRjYlwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5pdGVtLWxpc3R7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzoxMHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZmZmO21pbi1oZWlnaHQ6MTAwcHh9LnpqYXBwIC5pdGVtLWxpc3QgLmltZ3tkaXNwbGF5OmJsb2NrO3dpZHRoOjgwcHg7aGVpZ2h0OjgwcHg7YmFja2dyb3VuZDpuby1yZXBlYXQgNTAlO2JhY2tncm91bmQtc2l6ZTpjb3ZlcjtiYWNrZ3JvdW5kLWNvbG9yOiNkZGR9LnpqYXBwIC5pdGVtLWxpc3QgLml0ZW0tbGlzdC1jb257ZmxleDoxO3BhZGRpbmc6MCAxNXB4O3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpc30uemphcHAgLml0ZW0tbGlzdCAuaXRlbS1saXN0LWNvbiAudGl0bGV7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MjRweDtjb2xvcjojMTExO2ZvbnQtc2l6ZToxNnB4O3BhZGRpbmctdG9wOjZweDttYXJnaW46MDtwYWRkaW5nLXJpZ2h0OjEwcHg7bWFyZ2luLXJpZ2h0Oi0xMHB4O3doaXRlLXNwYWNlOm5vd3JhcCFpbXBvcnRhbnQ7b3ZlcmZsb3c6aGlkZGVuIWltcG9ydGFudDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzIWltcG9ydGFudDtmb250LXdlaWdodDo0MDB9LnpqYXBwIC5pdGVtLWxpc3QgLml0ZW0tbGlzdC1jb24gLnRpdGxlIC50eXBlLXRhZ3tkaXNwbGF5OmlubGluZS1ibG9jaztoZWlnaHQ6MTZweDtsaW5lLWhlaWdodDoxNnB4O3BhZGRpbmc6MCA0cHg7Ym9yZGVyLXJhZGl1czoycHg7Ym9yZGVyOjFweCBzb2xpZCAjNDI3NWU4O2NvbG9yOiM0Mjc1ZTg7Zm9udC1zaXplOjEycHg7em9vbTouODttYXJnaW46M3B4IDAgMCAwO3ZlcnRpY2FsLWFsaWduOnRleHQtdG9wfS56amFwcCAuaXRlbS1saXN0IC5pdGVtLWxpc3QtY29uIC50ZXh0e2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjI0cHg7Y29sb3I6IzhjOGM4YztwYWRkaW5nLWJvdHRvbTo2cHg7cGFkZGluZy1yaWdodDoxMXB4O21hcmdpbi1yaWdodDotMTBweH0uemphcHAgLml0ZW0tbGlzdCAuaXRlbS1saXN0LWNvbiAudGV4dCwuemphcHAgLml0ZW0tbGlzdCAuaXRlbS1saXN0LWNvbiAudGltZXtmb250LXNpemU6MTRweDt3aGl0ZS1zcGFjZTpub3dyYXAhaW1wb3J0YW50O292ZXJmbG93OmhpZGRlbiFpbXBvcnRhbnQ7dGV4dC1vdmVyZmxvdzplbGxpcHNpcyFpbXBvcnRhbnR9LnpqYXBwIC5pdGVtLWxpc3QgLml0ZW0tbGlzdC1jb24gLnRpbWV7aGVpZ2h0OjIwcHg7bGluZS1oZWlnaHQ6MjBweDtjb2xvcjojYjNiM2IzO3BhZGRpbmctcmlnaHQ6MTFweCFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi0xMHB4IWltcG9ydGFudH0uemphcHAgLml0ZW0tbGlzdCAuaXRlbS1saXN0LWNvbiAudGltZSAuaW9ue2NvbG9yOiNhNmE2YTY7Zm9udC1zaXplOjIwcHg7Zm9udC13ZWlnaHQ6NzAwO21hcmdpbi1yaWdodDo1cHg7dmVydGljYWwtYWxpZ246dG9wfS56amFwcCAuaXRlbS1saXN0IC5pdGVtLWxpc3Qtcnt3aWR0aDo2MHB4O2xpbmUtaGVpZ2h0OjE4cHg7dGV4dC1hbGlnbjpjZW50ZXJ9LnpqYXBwIC5pdGVtLWxpc3QgLml0ZW0tbGlzdC1zdGF0dXN7bWluLXdpZHRoOjRlbTtsaW5lLWhlaWdodDoxOHB4O3RleHQtYWxpZ246Y2VudGVyO3doaXRlLXNwYWNlOm5vcm1hbDtmb250LXNpemU6MTRweH0uemphcHAgLml0ZW0tbGlzdCAuaWNvbi11bnJlYWR7ZGlzcGxheTppbmxpbmUtYmxvY2s7dGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6MTJweDtoZWlnaHQ6MTJweDtib3JkZXItcmFkaXVzOjZweDtiYWNrZ3JvdW5kLWNvbG9yOnJlZH0uemphcHAgLml0ZW0tbGlzdCAuaWNvbi1yZXR1cm4sLnpqYXBwIC5pdGVtLWxpc3QgLmljb24tdGltZW91dCwuemphcHAgLml0ZW0tbGlzdCAuaWNvbi11cmdlbnR7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MTZweDtoZWlnaHQ6MTZweDt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoxNnB4O2ZvbnQtc2l6ZToxMnB4O2ZvbnQtc3R5bGU6bm9ybWFsO2NvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czoycHg7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjJweDt2ZXJ0aWNhbC1hbGlnbjp0b3A7bWFyZ2luLXRvcDo0cHg7bWFyZ2luLXJpZ2h0OjVweH0uemphcHAgLml0ZW0tbGlzdCAuaWNvbi10aW1lb3V0e2JhY2tncm91bmQ6Izk2NGJmZX0uemphcHAgLml0ZW0tbGlzdCAuaWNvbi1yZXR1cm57YmFja2dyb3VuZDojZmU4YjAwfS56amFwcCAuaXRlbS1saXN0IC5pY29uLXVyZ2VudHtiYWNrZ3JvdW5kOiNmZjNjM2R9LnpqYXBwIC5pdGVtLWxpc3QgLmljb24tcmV0dXJuOmxhc3QtY2hpbGQsLnpqYXBwIC5pdGVtLWxpc3QgLmljb24tdGltZW91dDpsYXN0LWNoaWxkLC56amFwcCAuaXRlbS1saXN0IC5pY29uLXVyZ2VudDpsYXN0LWNoaWxke21hcmdpbi1yaWdodDowfS56amFwcCAuaXRlbS1saXN0LXRpcHtoZWlnaHQ6NzBweDtsaW5lLWhlaWdodDo2MHB4O2NvbG9yOiNiNGI0YjQ7dGV4dC1hbGlnbjpjZW50ZXJ9LnpqYXBwIC5zdGF0dXMtbmV3LXRhZ3twb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDowO3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7b3ZlcmZsb3c6aGlkZGVuO3otaW5kZXg6MTB9LnpqYXBwIC5zdGF0dXMtbmV3LXRhZz4udGFne3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0Oi0zMnB4O2JvdHRvbToyMnB4O2hlaWdodDoyMHB4O2xpbmUtaGVpZ2h0OjIwcHg7d2lkdGg6MTAwcHg7Y29sb3I6I2ZmZjtmb250LXNpemU6MTJweDt0cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXItd2lkdGg6MXB4O2JvcmRlci1zdHlsZTpzb2xpZH0uemphcHAgLnRpbWUtc3RhdHVze2ZvbnQtc2l6ZToxMHB4O2NvbG9yOiM5OTl9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiPHRlbXBsYXRlPlxuICA8dHJhbnNpdGlvbiBuYW1lPVwic2xpZGUtcmlnaHRcIj5cbiAgICA8cGFnZS1jb250ZW50XG4gICAgICB2LWlmPVwic2hvd1wiXG4gICAgICBtb2RlPVwiZGlhbG9nXCJcbiAgICAgIHRpdGxlPVwi5qOA5p+l5oyH5byVXCJcbiAgICAgIDpvbi1jbG9zZT1cImNsb3NlUG9wdXBcIlxuICAgID5cbiAgICAgIDxkaXZcbiAgICAgICAgdi1pZj1cIiFpc0xvYWRpbmcgJiYgbGlzdERhdGEubGVuZ3RoXCJcbiAgICAgICAgY2xhc3M9XCJwYWdlLXNjcm9sbFwiXG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICB2LWZvcj1cIihpdGVtLCBrZXkpIGluIGxpc3REYXRhXCJcbiAgICAgICAgICA6a2V5PVwia2V5XCJcbiAgICAgICAgPlxuICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICBib3JkZXI9XCJib3R0b21cIlxuICAgICAgICAgICAgOmljb24tcmlnaHQ9XCJpdGVtLnN1Yml0ZW0gJiYgaXRlbS5zdWJpdGVtLmxlbmd0aCA/IChpdGVtLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J1wiXG4gICAgICAgICAgICBAY2xpY2s9XCJjbGlja0l0ZW0oaXRlbSlcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHQgZnctYiBjb2xvci1ibHVlIG9uZS1saW5lXCI+e3tpdGVtLml0ZW1fbmFtZX19PC9kaXY+XG4gICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiaXRlbS5pc09wZW5cIj5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbSwga2V5MikgaW4gaXRlbS5zdWJpdGVtXCJcbiAgICAgICAgICAgICAgOmtleT1cImtleTJcIlxuICAgICAgICAgICAgICBjbGFzcz1cInN1Ymxpc3RcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aXRlbVxuICAgICAgICAgICAgICAgIGJvcmRlcj1cImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJwbDBcIlxuICAgICAgICAgICAgICAgIDppY29uLXJpZ2h0PVwic3ViaXRlbS5zdWJpdGVtICYmIHN1Yml0ZW0uc3ViaXRlbS5sZW5ndGggPyAoc3ViaXRlbS5pc09wZW4gPyAnYXJyb3ctdXAnIDogJ2Fycm93LWRvd24nKSA6ICdhcnJvdy1yaWdodCdcIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrSXRlbShzdWJpdGVtKVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0IGNoZWNraXRlbS1saXN0LW5hbWVcIj57e3N1Yml0ZW0uaXRlbV9uYW1lfX08L2Rpdj5cbiAgICAgICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInN1Yml0ZW0uaXNPcGVuXCI+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbUEsIGtleTMpIGluIHN1Yml0ZW0uc3ViaXRlbVwiXG4gICAgICAgICAgICAgICAgICA6a2V5PVwia2V5M1wiXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cInN1Ymxpc3RcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicGwwXCJcbiAgICAgICAgICAgICAgICAgICAgOmljb24tcmlnaHQ9XCJzdWJpdGVtQS5zdWJpdGVtICYmIHN1Yml0ZW1BLnN1Yml0ZW0ubGVuZ3RoID8gKHN1Yml0ZW1BLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J1wiXG4gICAgICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrSXRlbShzdWJpdGVtQSlcIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0IGNoZWNraXRlbS1saXN0LW5hbWVcIj57e3N1Yml0ZW1BLml0ZW1fbmFtZX19PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2l0ZW0+XG4gICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInN1Yml0ZW1BLmlzT3BlblwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbUIsIGtleTQpIGluIHN1Yml0ZW1BLnN1Yml0ZW1cIlxuICAgICAgICAgICAgICAgICAgICAgIDprZXk9XCJrZXk0XCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInN1Ymxpc3RcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInBsMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6aWNvbi1yaWdodD1cInN1Yml0ZW1CLnN1Yml0ZW0gJiYgc3ViaXRlbUIuc3ViaXRlbS5sZW5ndGggPyAoc3ViaXRlbUIuaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJykgOiAnYXJyb3ctcmlnaHQnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrSXRlbShzdWJpdGVtQilcIlxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHQgY2hlY2tpdGVtLWxpc3QtbmFtZVwiPnt7c3ViaXRlbUIuaXRlbV9uYW1lfX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2l0ZW0+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxsb2FkaW5nLXN0YXR1c1xuICAgICAgICA6aXMtbG9hZGluZz1cImlzTG9hZGluZ1wiXG4gICAgICAgIDppcy1lbXB0eT1cIiFsaXN0RGF0YS5sZW5ndGhcIlxuICAgICAgICBlbXB0eS10ZXh0PVwi5rKh5pyJ5qOA5p+l6aG5XCJcbiAgICAgIC8+XG4gICAgPC9wYWdlLWNvbnRlbnQ+XG4gIDwvdHJhbnNpdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgJHEgZnJvbSAnQHN0YXRpYy9saWIvcHJvbWlzZSc7XG5cbmltcG9ydCBDb21tb25DaGVja0l0ZW1TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY2hlY2staXRlbS1zZXJ2aWNlLmpzJztcbmltcG9ydCBDaGVja0d1aWRlRGV0YWlsIGZyb20gJ0BzcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC5qcyc7XG5pbXBvcnQgUG9wdXBNaXhpbiBmcm9tICdAc3JjL3V0aWxzL3BvcHVwLW1peGluJztcbmltcG9ydCBJdGVtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgbW1rdiBmcm9tICdAc3JjL2ZyYW1ld29yay9tbWt2JztcbmltcG9ydCBtbWt2S2V5cyBmcm9tICdAc3JjL2ZyYW1ld29yay9tbWt2LmtleXMnO1xuaW1wb3J0IHN0b3JlIGZyb20gJ0BzdG9yZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0NoZWNrR3VpZGVMaXN0JyxcbiAgY29tcG9uZW50czogeyBJdGVtIH0sXG4gIG1peGluczogW1BvcHVwTWl4aW5dLFxuICBzdG9yZSxcbiAgcHJvcHM6IHtcbiAgICBkYXRhOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIGlzTG9hZGluZzogdHJ1ZSxcblxuICAgICAgbGlzdERhdGE6IFtdLFxuXG4gICAgICBtb2R1bGU6ICcnLFxuICAgICAgaXRlbUlkOiAnJyxcbiAgICAgIGJhdGNoSWQ6ICcnLFxuICAgICAgc2VjdGlvbklkOiAnJyxcbiAgICAgIG9wdGlvbnM6ICcnLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgLy8g55So5Lul5a2Y5YKo5ZyodnV45Lit5Lyg5YWl55qE5YC877yM6L+Z5Liq5piv5Li65LqG5aSa5qih5Z2X77yM5b+r6YCf5L2/55So5LiA5Lqb5Y+C5pWw55qE5YC8XG4gICAgbW9kdWxlQXR0cmlidXRlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmdsb2JhbC5tb2R1bGVBdHRyaWJ1dGU7XG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCgpIHtcbiAgICB0aGlzLmRhdGEgPSBbXTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9wZW5Qb3B1cChwYXJhbXMpIHtcbiAgICAgIGxldCBwcm9taXNlO1xuXG4gICAgICB0aGlzLnZhbHVlID0gdHJ1ZTtcbiAgICAgIHRoaXMuc2hvdyA9IHRydWU7XG5cbiAgICAgIHRoaXMubW9kdWxlID0gcGFyYW1zLm1vZHVsZTtcbiAgICAgIHRoaXMuaXRlbUlkID0gcGFyYW1zLml0ZW1JZDtcbiAgICAgIHRoaXMuYmF0Y2hJZCA9IHBhcmFtcy5iYXRjaElkO1xuICAgICAgdGhpcy5zZWN0aW9uSWQgPSBwYXJhbXMuc2VjdGlvbklkO1xuICAgICAgdGhpcy5vcHRpb25zID0gcGFyYW1zLm9wdGlvbnM7XG5cbiAgICAgIHRoaXMuJGVtaXQoJ29wZW4nKTtcblxuICAgICAgZm9yIChsZXQga2V5IGluIHBhcmFtcykge1xuICAgICAgICB0aGlzW2tleV0gPSBwYXJhbXNba2V5XTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jaGVja1R5cGUgPSB7XG4gICAgICAgIGNoZWNrOiAzMSxcbiAgICAgICAgJ2NoZWNrLXNhZmV0eSc6IDM2LFxuICAgICAgICAnY2hlY2stcXVhbGl0eSc6IDM3LFxuICAgICAgICAnbWVhc3VyZS12Myc6IDQxLFxuICAgICAgICBwcm9jZXNzOiAzMixcbiAgICAgICAgJ2ZseS1pbnNwZWN0JzogMTAxLFxuICAgICAgfVt0aGlzLm1vZHVsZV07XG5cbiAgICAgIGxldCBpc0luaXRCeUJpZHNlY3Rpb24gPSBmYWxzZTtcbiAgICAgIGlmICghXy5pc0VtcHR5KHRoaXMuaXRlbUlkKSkge1xuICAgICAgICBwcm9taXNlID0gdGhpcy5pbml0QnlJZCgpO1xuICAgICAgfSBlbHNlIGlmICghXy5pc0VtcHR5KHRoaXMuY2hlY2tUeXBlKSAmJiBfLmlzRW1wdHkodGhpcy5zZWN0aW9uSWQpKSB7XG4gICAgICAgIHByb21pc2UgPSB0aGlzLmluaXRCeVR5cGUoKTtcbiAgICAgIH0gZWxzZSBpZiAoIV8uaXNFbXB0eSh0aGlzLmJhdGNoSWQpKSB7XG4gICAgICAgIHByb21pc2UgPSB0aGlzLmluaXRCeUJhdGNoKCk7XG4gICAgICB9IGVsc2UgaWYgKCFfLmlzRW1wdHkodGhpcy5vcHRpb25zKSkge1xuICAgICAgICBwcm9taXNlID0gdGhpcy5pbml0QnlPcHRpb25zKCk7XG4gICAgICB9IGVsc2UgaWYgKCFfLmlzRW1wdHkodGhpcy5zZWN0aW9uSWQpKSB7XG4gICAgICAgIGlzSW5pdEJ5Qmlkc2VjdGlvbiA9IHRydWU7XG4gICAgICAgIHByb21pc2UgPSB0aGlzLmluaXRCeUJpZHNlY3Rpb24oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb21pc2UgPSAkcS53aGVuKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHByb21pc2UudGhlbihkYXRhID0+IHtcbiAgICAgICAgLy8g6aOe5qOA5LiT6aG544CB546w5Zy644CB5a6J5YWo44CB6LSo6YeP5qOA5p+l55qE6aaW6aG15ZKM5qOA5p+l6aG555qE5qOA5p+l5oyH5byVXG4gICAgICAgIGNvbnN0IG1kYSA9IHRoaXMubW9kdWxlQXR0cmlidXRlW3RoaXMubW9kdWxlXSB8fCB7fTtcbiAgICAgICAgaWYgKCFfLmlzRW1wdHkobWRhKSAmJiBtZGEuc2V0VXN1YWxJdGVtcyAmJiBpc0luaXRCeUJpZHNlY3Rpb24pIHtcbiAgICAgICAgICBtbWt2LmdldFVzZXJLZXkodGhpcy5tbWt2Q29kZSgpKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgIHJlcyA9IGRhdGE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXMgPSB0aGlzLm1lcmdlQXJyYXkodGhpcy5kZWVwQ2xvbmUoZGF0YSksIHJlcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMubGlzdERhdGEgPSByZXMgfHwgW107IC8vIOagkeaVsOaNrlxuICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmxpc3REYXRhID0gZGF0YSB8fCBbXTtcbiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6L+U5Zue5b2T5YmN55qE5qih5Z2X55qEIG1ta3Yg55qE5Zu65a6a5YC8XG4gICAgbW1rdkNvZGUoKSB7XG4gICAgICBjb25zdCBtb2R1bGUgPSB0aGlzLm1vZHVsZUF0dHJpYnV0ZVt0aGlzLm1vZHVsZV0gfHwge307XG4gICAgICByZXR1cm4gbW1rdktleXNbbW9kdWxlLm1ta3ZfaXRlbV0gKyAnXycgKyB0aGlzLnNlY3Rpb25JZDtcbiAgICB9LFxuXG4gICAgLy8g5qC55o2ubW1rdueahOaVsOaNru+8jOWwhumAieS4reeahOaVsOaNrui/m+ihjOetm+mAiVxuICAgIG1lcmdlQXJyYXkob2xkRGF0YSwgbW1rdkRhdGEpIHtcbiAgICAgIHJldHVybiBfLmZpbHRlcihvbGREYXRhLCByZXMgPT4ge1xuICAgICAgICBsZXQgbmV3UmVzID0gbW1rdkRhdGFbcmVzLmlkXTtcbiAgICAgICAgaWYgKCFfLmlzRW1wdHkocmVzLnN1Yml0ZW0pKSB7XG4gICAgICAgICAgcmVzLnN1Yml0ZW0gPSB0aGlzLm1lcmdlQXJyYXkocmVzLnN1Yml0ZW0sIG1ta3ZEYXRhKTtcbiAgICAgICAgfVxuICAgICAgICAvLyDpl67popjmj4/ov7Dlm6DkuLrlnKjmo4Dmn6Xpobnlj6/op4HmgKfkuK3kuI3lj6/op4HvvIzmiYDku6XmlbDmja7lubbmsqHmnInlsIbpl67popjmj4/ov7Dmt7vliqDlhbbkuK1cbiAgICAgICAgcmV0dXJuICFfLmlzRW1wdHkobmV3UmVzKSB8fCByZXMudHlwZSA9PT0gJ2Rlc2MnO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIGNsb3NlUG9wdXAoKSB7XG4gICAgICB0aGlzLnZhbHVlID0gZmFsc2U7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgfSxcblxuICAgIC8vIOajgOafpemhueeCueWHu+S6i+S7tlxuICAgIGNsaWNrSXRlbShpdGVtKSB7XG4gICAgICBpZiAoaXRlbS5zdWJpdGVtICYmIGl0ZW0uc3ViaXRlbS5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy4kc2V0KGl0ZW0sICdpc09wZW4nLCAhaXRlbS5pc09wZW4pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm1vZHVsZSA9PT0gJ3NwZWNpYWwtaW5zcGVjdCcpIHtcbiAgICAgICAgLy9cbiAgICAgICAgQ2hlY2tHdWlkZURldGFpbC5vcGVuUG9wdXAoe1xuICAgICAgICAgIGl0ZW1JZDogaXRlbS5pZCxcbiAgICAgICAgICBtb2R1bGU6IHRoaXMubW9kdWxlLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIENoZWNrR3VpZGVEZXRhaWwub3BlblBvcHVwKHtcbiAgICAgICAgICBpdGVtSWQ6IGl0ZW0uaXRlbV9pZCxcbiAgICAgICAgICBtb2R1bGU6IHRoaXMubW9kdWxlLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g5qC55o2uIGl0ZW0taWQg5Yid5aeL5YyWXG4gICAgaW5pdEJ5SWQoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGUgPT09ICdzcGVjaWFsLWluc3BlY3QnKSB7XG4gICAgICAgIC8vIOS4k+mhueW3oeajgFxuICAgICAgICAvKiByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLmdldFNwZWNpYWxJbnNwZWN0Q2hlY2tJdGVtRGV0YWlsKFxuICAgICAgICAgIHRoaXMuaXRlbUlkXG4gICAgICAgICkudGhlbihjaGVja0l0ZW0gPT4ge1xuICAgICAgICAgIGNoZWNrSXRlbS5jb250ZW50ID0gY2hlY2tJdGVtLmd1aWRlbGluZTtcbiAgICAgICAgICBpdGVtRGF0YSA9IGNoZWNrSXRlbTtcbiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB9KTsgKi9cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOaZrumAmuajgOafpemhuVxuICAgICAgICByZXR1cm4gQ29tbW9uQ2hlY2tJdGVtU2VydmljZS5nZXRDaGVja0l0ZW0odGhpcy5pdGVtSWQsIHRoaXMuY2hlY2tUeXBlKS50aGVuKGNoZWNrSXRlbSA9PiB7XG4gICAgICAgICAgLy8g5Yik5pat5piv5ZCm5pyJ5a2Q57qnXG4gICAgICAgICAgaWYgKCFjaGVja0l0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybiAkcS53aGVuKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHRoaXMuc2VjdGlvbklkKSB7XG4gICAgICAgICAgICAvLyDlpoLmnpzmnInmoIfmrrXvvIzmn6XmoIfmrrXmo4Dmn6XpoblcbiAgICAgICAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldEJpZFNlY3Rpb25DaGVja0l0ZW1MaXN0QnlDb2RlKFxuICAgICAgICAgICAgICB0aGlzLnNlY3Rpb25JZCxcbiAgICAgICAgICAgICAgY2hlY2tJdGVtLmNvZGVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOayoeacieagh+autSBpZO+8jOWImeafpeaJgOacieajgOafpemhuVxuICAgICAgICAgICAgcmV0dXJuIENvbW1vbkNoZWNrSXRlbVNlcnZpY2UuZ2V0Q2hlY2tJdGVtVHJlZUJ5Q29kZShjaGVja0l0ZW0uY29kZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g5qC55o2uIGNoZWNrLXR5cGUg5Yid5aeL5YyWXG4gICAgaW5pdEJ5VHlwZSgpIHtcbiAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldENoZWNrSXRlbUd1aWRlbGluZUxpc3QodGhpcy5jaGVja1R5cGUpO1xuICAgIH0sXG5cbiAgICBpbml0QnlCYXRjaCgpIHtcbiAgICAgIC8qIHJldHVybiBTcGVjaWFsSW5zcGVjdFNlcnZpY2UuZ2V0U3BlY2lhbEluc3BlY3RDaGVja0l0ZW1HdWlkZShcbiAgICAgICAgdGhpcy5iYXRjaElkXG4gICAgICApOyAqL1xuICAgICAgcmV0dXJuICRxLndoZW4oKTtcbiAgICB9LFxuXG4gICAgLy8g5p+l6K+i5qCH5q6155qE5qOA5p+l5oyH5byVXG4gICAgaW5pdEJ5Qmlkc2VjdGlvbigpIHtcbiAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldEJpZFNlY3Rpb25DaGVja0l0ZW1UcmVlQnlUeXBlKFxuICAgICAgICB0aGlzLnNlY3Rpb25JZCxcbiAgICAgICAgdGhpcy5jaGVja1R5cGVcbiAgICAgICk7XG4gICAgfSxcblxuICAgIC8vIOagueaNriBvcHRpb25zIOWIneWni+WMllxuICAgIGluaXRCeU9wdGlvbnMoKSB7XG4gICAgICByZXR1cm4gJHEucmVzb2x2ZSh0aGlzLm9wdGlvbnMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBKU09O77yM5rex5ou36LSdXG4gICAgICovXG4gICAgZGVlcENsb25lKGRhdGEpIHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5wYWdlLXNjcm9sbCB7XG4gIGZsZXg6IDE7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbn1cblxuLnN1Ymxpc3Qge1xuICBwYWRkaW5nLWxlZnQ6IDI1cHg7XG4gIHBhZGRpbmctdG9wOiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuLnN1Ymxpc3QgPiAuc3VibGlzdCB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy10b3A6IDA7XG59XG48L3N0eWxlPlxuIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtZHJvcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yY2FjODg2NCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCI8dGVtcGxhdGU+XG4gIDxzcGFuIDpjbGFzcz1cImNsYXNzU2V0W3N0YXR1c11cIj57eyB0ZXh0IHx8IHN0YXR1cyB9fTwvc3Bhbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdTdGF0dXNUZXh0JyxcbiAgcHJvcHM6IHtcbiAgICAvLyDnlKjkuo7orqHnrpfnirbmgIHpopzoibLvvIzlkozlnKjmsqHmnIkgdGV4dCDml7blsZXnpLrmlofmnKxcbiAgICBzdGF0dXM6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICB9LFxuICAgIC8vIOS7heeUqOS6juWxleekuueahOWGheWuuVxuICAgIHRleHQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICB9LFxuICAgIC8vIOiHquWumuS5ieminOiJsuaLk+WxlVxuICAgIGV4dGVuZDoge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzU2V0OiBfLmV4dGVuZChcbiAgICAgICAge1xuICAgICAgICAgIOiNieeovzogJ2NvbG9yLWdyYXknLFxuICAgICAgICAgIOaaguWtmDogJ2NvbG9yLWdyYXknLFxuICAgICAgICAgIOajgOafpeS4rTogJ2NvbG9yLW9yYW5nZScsXG5cbiAgICAgICAgICDlvoXmlbTmlLk6ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOW+heWkjemqjDogJ2NvbG9yLW9yYW5nZScsXG4gICAgICAgICAg5b6F6aqM5pS2OiAnY29sb3ItcmVkJyxcbiAgICAgICAgICDlvoXmiqXpqow6ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOW+heeUs+ivt+i/m+WcujogJ2NvbG9yLXJlZCcsXG4gICAgICAgICAg5b6F5Yid6aqMOiAnY29sb3ItcmVkJyxcbiAgICAgICAgICDlvoXpgIHmo4A6ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOW+heS4iuS8oOaKpeWRijogJ2NvbG9yLXJlZCcsXG4gICAgICAgICAg5b6F6YCA5Zy6OiAnY29sb3ItcmVkJyxcbiAgICAgICAgICDlvoXlu7rorr7ljZXkvY3pqozmlLY6ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOW+heWMuuWfn+mqjOaUtjogJ2NvbG9yLXJlZCcsXG5cbiAgICAgICAgICAvLyDmnZDmlpnpqozmlLYgLSDnlLLkvpvmnZDpqozmlLZcbiAgICAgICAgICDkvpvlupTpk77pgIDlm546ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOmihOWIm+W7ujogJ2NvbG9yLXN0YXR1cy1ibHVlJyxcblxuICAgICAgICAgIOW3suaPkOS6pDogJ2NvbG9yLWdyZWVuJyxcbiAgICAgICAgICDlt7LmlbTmlLk6ICdjb2xvci1ncmVlbicsXG4gICAgICAgICAg5bey6aqM5pS2OiAnY29sb3ItZ3JlZW4nLFxuICAgICAgICAgIOW3sumAmui/hzogJ2NvbG9yLWdyZWVuJyxcbiAgICAgICAgICDlt7LpgIDlnLo6ICdjb2xvci1ncmF5JyxcbiAgICAgICAgICDlt7LlhbPpl606ICdjb2xvci1ncmF5JyxcbiAgICAgICAgICDpnZ7mraPluLjlhbPpl606ICdjb2xvci1ncmF5JyxcbiAgICAgICAgICDlt7LpgIDlm546ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOW3suWujOaIkDogJ2NvbG9yLWdyZWVuJyxcbiAgICAgICAgICDlt7LnlKnpobk6ICdjb2xvci1ncmF5JyxcblxuICAgICAgICAgIOajgOafpeWujOavlTogJ2NvbG9yLWdyZWVuJyxcbiAgICAgICAgICDpgIHmo4DlkIjmoLw6ICdjb2xvci1ncmVlbicsXG4gICAgICAgICAg5aSN6aqM5ZCI5qC8OiAnY29sb3ItZ3JlZW4nLFxuICAgICAgICAgIOmqjOaUtuWQiOagvDogJ2NvbG9yLWdyZWVuJyxcbiAgICAgICAgICDpqozmlLbkuI3lkIjmoLw6ICdjb2xvci1yZWQnLFxuXG4gICAgICAgICAg5pyq6aqM5pS2OiAnY29sb3Itb3JhbmdlJyxcblxuICAgICAgICAgIOW+heeCueivhDogJ2NvbG9yLW9yYW5nZScsXG4gICAgICAgICAg5bey54K56K+EOiAnY29sb3ItZ3JlZW4nLFxuXG4gICAgICAgICAg5ZCI5qC8OiAnY29sb3ItZ3JlZW4nLFxuICAgICAgICAgIOS4jeWQiOagvDogJ2NvbG9yLXJlZCcsXG5cbiAgICAgICAgICAvLyDlvaLosaHov5vluqZcbiAgICAgICAgICDov5vluqbmraPluLg6ICdjb2xvci1ncmVlbicsXG4gICAgICAgICAg6L+b5bqm5rue5ZCOOiAnY29sb3ItcmVkJyxcbiAgICAgICAgICDmlr3lt6XljZXkvY3pqozmlLblkIjmoLw6ICdjb2xvci1ncmVlbicsXG4gICAgICAgICAg55uR55CG5Y2V5L2N6aqM5pS25ZCI5qC8OiAnY29sb3ItZ3JlZW4nLFxuICAgICAgICAgIOW7uuiuvuWNleS9jemqjOaUtuWQiOagvDogJ2NvbG9yLWdyZWVuJyxcbiAgICAgICAgICDmlr3lt6XljZXkvY3pqozmlLbkuI3lkIjmoLw6ICdjb2xvci1yZWQnLFxuICAgICAgICAgIOebkeeQhuWNleS9jemqjOaUtuS4jeWQiOagvDogJ2NvbG9yLXJlZCcsXG4gICAgICAgICAg5bu66K6+5Y2V5L2N6aqM5pS25LiN5ZCI5qC8OiAnY29sb3ItcmVkJyxcbiAgICAgICAgfSxcbiAgICAgICAgdGhpcy5leHRlbmRcbiAgICAgICksXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZCgpIHt9LFxufTtcbjwvc2NyaXB0PlxuIiwiLyog5by556qX55qE5re35YWlXG4gKiDlpITnkIbkuIDkuIvkuovmg4XvvJpcbiAqIDEuei1pbmRleCDopobnm5bpl67pophcbiAqIDIu54mp55CG6L+U5Zue6ZSuXG4gKiAzLuiuvue9riBzdG9yZSDnmoQgaGFzUG9wdXAg55qE5YC8XG4gKi9cblxuaW1wb3J0IHsgYWRkQmFja0V2ZW50UXVldWUsIGNsZWFyQmFja0J1dHRvbkV2ZW50IH0gZnJvbSAnQHNyYy9jb21tb24vYmFja2J1dHRvbic7XG5pbXBvcnQgeyBjb250ZXh0IH0gZnJvbSAndmFudC9lcy9taXhpbnMvcG9wdXAvY29udGV4dCc7XG5pbXBvcnQgc3RvcmUgZnJvbSAnQHN0b3JlJztcblxubGV0IHBvcHVwQ291bnQgPSAwO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdQb3B1cE1peGluJyxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYmFja0J1dHRvbkV2ZW50OiBudWxsLFxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgc2hvdyh2KSB7XG4gICAgICBpZiAodikge1xuICAgICAgICAvLyDorr7nva4gei1pbmRleFxuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuJGVsICYmIHRoaXMuJGVsLnN0eWxlKSB7XG4gICAgICAgICAgICB0aGlzLiRlbC5zdHlsZS56SW5kZXggPSArK2NvbnRleHQuekluZGV4O1xuICAgICAgICAgICAgcG9wdXBDb3VudCsrO1xuICAgICAgICAgICAgc3RvcmUuY29tbWl0KCdhcHAvU0VUX0hBU19QT1BVUCcsICEhcG9wdXBDb3VudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyDlvLnnqpfmiZPlvIDvvIzms6jlhozniannkIbov5Tlm57plK5cbiAgICAgICAgaWYgKCF0aGlzLmJhY2tCdXR0b25FdmVudCkge1xuICAgICAgICAgIGxldCBjbG9zZUZuID0gdGhpcy5jbG9zZSB8fCB0aGlzLmNsb3NlUG9wdXA7XG4gICAgICAgICAgdGhpcy5iYWNrQnV0dG9uRXZlbnQgPSBhZGRCYWNrRXZlbnRRdWV1ZShjbG9zZUZuKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcG9wdXBDb3VudC0tO1xuICAgICAgICBpZiAocG9wdXBDb3VudCA8IDApIHtcbiAgICAgICAgICBwb3B1cENvdW50ID0gMDtcbiAgICAgICAgfVxuICAgICAgICBzdG9yZS5jb21taXQoJ2FwcC9TRVRfSEFTX1BPUFVQJywgISFwb3B1cENvdW50KTtcblxuICAgICAgICAvLyDlvLnnqpflhbPpl63vvIzms6jplIDniannkIbov5Tlm57plK5cbiAgICAgICAgaWYgKHRoaXMuYmFja0J1dHRvbkV2ZW50KSB7XG4gICAgICAgICAgY2xlYXJCYWNrQnV0dG9uRXZlbnQodGhpcy5iYWNrQnV0dG9uRXZlbnQpO1xuICAgICAgICAgIHRoaXMuYmFja0J1dHRvbkV2ZW50ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gIH0sXG4gIG1ldGhvZHM6IHt9LFxufTtcbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInJlZGlvLWJveC1ncm91cFwiIDpjbGFzcz1cImBhbGlnbi0ke2FsaWdufSAke2N1c3RvbUNsYXNzfWBcIj5cbiAgICA8c3BhblxuICAgICAgdi1mb3I9XCIoaXRlbSwga2V5KSBpbiBvcHRpb25zXCJcbiAgICAgIDprZXk9XCJrZXlcIlxuICAgICAgY2xhc3M9XCJyYWRpby1ib3hcIlxuICAgICAgOmNsYXNzPVwie1xuICAgICAgICBzZWxlY3RlZDpcbiAgICAgICAgICBvcHRpb25zVHlwZSA9PT0gJ2FycmF5J1xuICAgICAgICAgICAgPyB2YWx1ZSA9PT0gaXRlbVxuICAgICAgICAgICAgOiBvcHRpb25zVHlwZSA9PT0gJ29iamVjdCdcbiAgICAgICAgICAgID8gdmFsdWUgPT09IGtleVxuICAgICAgICAgICAgOiBmYWxzZSxcbiAgICAgIH1cIlxuICAgICAgQGNsaWNrPVwib25TZWxlY3Qoa2V5KVwiXG4gICAgPlxuICAgICAge3sgaXRlbSB9fVxuICAgIDwvc3Bhbj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ1JhZGlvQm94JyxcbiAgcHJvcHM6IHtcbiAgICBvcHRpb25zOiB7XG4gICAgICB0eXBlOiBbQXJyYXksIE9iamVjdF0sXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICAvLyDlr7npvZDmlrnlvI/vvIxsOuW3puWvuem9kO+8jHI65Y+z5a+56b2QXG4gICAgYWxpZ246IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdyJyxcbiAgICB9LFxuICAgIGN1c3RvbUNsYXNzOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBvcHRpb25zVHlwZSgpIHtcbiAgICAgIGlmIChfLmlzQXJyYXkodGhpcy5vcHRpb25zKSkge1xuICAgICAgICByZXR1cm4gJ2FycmF5JztcbiAgICAgIH0gZWxzZSBpZiAoXy5pc09iamVjdCh0aGlzLm9wdGlvbnMpKSB7XG4gICAgICAgIHJldHVybiAnb2JqZWN0JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICAgIH1cbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb25TZWxlY3Qoa2V5KSB7XG4gICAgICBsZXQgcmVzdWx0O1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zVHlwZSA9PT0gJ2FycmF5Jykge1xuICAgICAgICByZXN1bHQgPSB0aGlzLm9wdGlvbnNba2V5XTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmVzdWx0ID0ga2V5O1xuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHJlc3VsdCk7XG4gICAgICB0aGlzLiRlbWl0KCdvblNlbGVjdCcsIHJlc3VsdCk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLnJlZGlvLWJveC1ncm91cCB7XG4gIGZvbnQtc2l6ZTogMDtcbiAgbWFyZ2luLXRvcDogLTEwcHg7XG59XG4ucmVkaW8tYm94LWdyb3VwLmFsaWduLWwge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnJlZGlvLWJveC1ncm91cC5hbGlnbi1yIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4ucmFkaW8tYm94IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDM0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICBtaW4td2lkdGg6IDYwcHg7XG4gIHBhZGRpbmc6IDAgNXB4O1xuICBtYXJnaW46IDEwcHggMCAwIDEwcHg7XG4gIGJvcmRlcjogc29saWQgMXB4ICNkOWQ5ZDk7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjNjY2O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuLnJhZGlvLWJveDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLnJhZGlvLWJveC5zZWxlY3RlZCB7XG4gIGJvcmRlci1jb2xvcjogJHRoZW1lQ29sb3I7XG4gIGNvbG9yOiAkdGhlbWVDb2xvcjtcbn1cbjwvc3R5bGU+XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAudGl0bGVbZGF0YS12LWQ2ZTdlYjg2XXtwYWRkaW5nOjEwcHggMTVweDtsaW5lLWhlaWdodDoyNnB4O2ZvbnQtc2l6ZToxNnB4O2NvbG9yOiMzMzM7Zm9udC13ZWlnaHQ6NTAwO2JhY2tncm91bmQtY29sb3I6I2ZmZn0uemphcHAgLnJ1bGVbZGF0YS12LWQ2ZTdlYjg2XXtwYWRkaW5nOjEzcHggMTVweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM5OTk7YmFja2dyb3VuZC1jb2xvcjojZmZmfVtkYXRhLXYtZDZlN2ViODZdIC5pdGVtLXRleHRhcmVhIHRleHRhcmVhe21pbi1oZWlnaHQ6MTMwcHh9LnpqYXBwIC5wcm9ibGVtLWxpc3QtdGl0bGVbZGF0YS12LWQ2ZTdlYjg2XXtwYWRkaW5nOjEzcHggMTVweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM2NjZ9LnpqYXBwIC50aXBzLWJveFtkYXRhLXYtZDZlN2ViODZde3BhZGRpbmc6NDBweCAwO2JhY2tncm91bmQtY29sb3I6I2ZmZn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCI8dGVtcGxhdGU+XG4gIDx0cmFuc2l0aW9uIG5hbWU9XCJzbGlkZS1yaWdodFwiPlxuICAgIDxwYWdlLWNvbnRlbnRcbiAgICAgIHYtaWY9XCJzaG93XCJcbiAgICAgIG1vZGU9XCJkaWFsb2dcIlxuICAgICAgdGl0bGU9XCLmo4Dmn6XmjIflvJVcIlxuICAgICAgOm9uLWNsb3NlPVwiY2xvc2VQb3B1cFwiXG4gICAgICA6Y2xhc3M9XCJ7ICdjb250ZW50LW5vdC1lbXB0eSc6IGNvbnRlbnQubGVuZ3RoIH1cIlxuICAgID5cbiAgICAgIDxkaXYgdi1pZj1cIiFpc0xvYWRpbmdcIiBjbGFzcz1cImNoZWNrLWd1aWRlLWRldGFpbC1oZCBib3JkZXItYm90dG9tXCI+XG4gICAgICAgIDxoMiBjbGFzcz1cImNoZWNrLWd1aWRlLWRldGFpbC10aXRsZSBwYjEwXCI+e3sgdGl0bGUgfX08L2gyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgdi1pZj1cIiFpc0xvYWRpbmcgJiYgY29udGVudC5sZW5ndGhcIiBjbGFzcz1cImNoZWNrLWd1aWRlLWRldGFpbC1jb250ZW50XCI+XG4gICAgICAgIDxwIHYtZm9yPVwiKGl0ZW0sIGtleSkgaW4gY29udGVudFwiIDprZXk9XCJrZXlcIj5cbiAgICAgICAgICA8aW1nXG4gICAgICAgICAgICB2LWlmPVwiaXRlbS5pc0ltZyAmJiBpdGVtLnNyY1wiXG4gICAgICAgICAgICA6c3JjPVwiZ2V0VGh1bWJuYWlsKGl0ZW0pXCJcbiAgICAgICAgICAgIDpjbGFzcz1cInsgJ2ltZy1ub3QtcmVhZHknOiAhaXRlbS5yZWFkeSwgZXJyb3I6IGl0ZW0uc3RhdHVzID09PSAncmVqZWN0ZWQnIH1cIlxuICAgICAgICAgICAgQGVycm9yPVwiaW1nRXJyb3IoaXRlbSwga2V5KVwiXG4gICAgICAgICAgICBAY2xpY2s9XCJpbWdDbGljayhpdGVtKVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8c3BhbiB2LWlmPVwiIWl0ZW0uaXNJbWdcIj5cbiAgICAgICAgICAgIHt7IGl0ZW0udmFsIH19XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGxvYWRpbmctc3RhdHVzXG4gICAgICAgIDppcy1sb2FkaW5nPVwiaXNMb2FkaW5nXCJcbiAgICAgICAgOmlzLWVtcHR5PVwiIWNvbnRlbnQubGVuZ3RoXCJcbiAgICAgICAgZW1wdHktdGV4dD1cIlBD56uv5pyq6K6+572u5qOA5p+l5oyH5byVXCJcbiAgICAgIC8+XG4gICAgPC9wYWdlLWNvbnRlbnQ+XG4gIDwvdHJhbnNpdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG4vLyBpbXBvcnQgJHEgZnJvbSAnQHN0YXRpYy9saWIvcHJvbWlzZSc7XG5pbXBvcnQgcGx1Z2luQXBpIGZyb20gJ0BzcmMvYXBpL3BsdWdpbkFwaSc7XG5pbXBvcnQgUG9wdXBNaXhpbiBmcm9tICdAc3JjL3V0aWxzL3BvcHVwLW1peGluJztcbmltcG9ydCBDb21tb25DaGVja0l0ZW1TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY2hlY2staXRlbS1zZXJ2aWNlLmpzJztcbmltcG9ydCBJbWFnZVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9pbWFnZS1zZXJ2aWNlJztcbi8vIGltcG9ydCBXZWJTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vd2ViLXNlcnZpY2UnO1xuaW1wb3J0IFNwZWNpYWxJbnNwZWN0U2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2Uvc3BlY2lhbC1pbnNwZWN0L3NwZWNpYWwtaW5zcGVjdC1zZXJ2aWNlJztcbi8vIGltcG9ydCBEYXRhU3luY2hyb25pemVyIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vZGF0YS1zeW5jaHJvbml6ZXInO1xuaW1wb3J0IFRlbXBsZXRQbGFuU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvdGVtcGxldC1wbGFuL3RlbXBsZXQtcGxhbi1zZXJ2aWNlJztcbmltcG9ydCBNYXRlcmlhbFNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL21hdGVyaWFsL21hdGVyaWFsLXNlcnZpY2UnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdDaGVja0d1aWRlRGV0YWlsJyxcbiAgY29tcG9uZW50czoge30sXG4gIG1peGluczogW1BvcHVwTWl4aW5dLFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIGlzTG9hZGluZzogdHJ1ZSxcbiAgICAgIGlzSW1hZ2VEb3dubG9hZGluZzogZmFsc2UsXG5cbiAgICAgIHRpdGxlOiAnJyxcbiAgICAgIGNvbnRlbnQ6IFtdLFxuXG4gICAgICBtb2R1bGU6ICcnLFxuICAgICAgaXRlbUlkOiAnJyxcbiAgICB9O1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb3BlblBvcHVwKHBhcmFtcykge1xuICAgICAgbGV0IHByb21pc2U7XG5cbiAgICAgIHRoaXMudmFsdWUgPSB0cnVlO1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcblxuICAgICAgdGhpcy5tb2R1bGUgPSBwYXJhbXMubW9kdWxlO1xuICAgICAgdGhpcy5pdGVtSWQgPSBwYXJhbXMuaXRlbUlkO1xuXG4gICAgICB0aGlzLiRlbWl0KCdvcGVuJyk7XG5cbiAgICAgIGZvciAobGV0IGtleSBpbiBwYXJhbXMpIHtcbiAgICAgICAgdGhpc1trZXldID0gcGFyYW1zW2tleV07XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY2hlY2tUeXBlID0ge1xuICAgICAgICBjaGVjazogMzEsXG4gICAgICAgICdjaGVjay1zYWZldHknOiAzNixcbiAgICAgICAgJ2NoZWNrLXF1YWxpdHknOiAzNyxcbiAgICAgICAgJ21lYXN1cmUtdjMnOiA0MSxcbiAgICAgICAgcHJvY2VzczogMzIsXG4gICAgICAgICdmbHktaW5zcGVjdCc6IDEwMSxcbiAgICAgIH1bdGhpcy5tb2R1bGVdO1xuXG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG5cbiAgICAgIGlmICh0aGlzLm1vZHVsZSA9PT0gJ3NwZWNpYWwtaW5zcGVjdCcpIHtcbiAgICAgICAgLy8g5LiT6aG55beh5qOAXG4gICAgICAgIHByb21pc2UgPSBTcGVjaWFsSW5zcGVjdFNlcnZpY2UuZ2V0U3BlY2lhbEluc3BlY3RDaGVja0l0ZW1EZXRhaWwodGhpcy5pdGVtSWQpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm1vZHVsZSA9PT0gJ3RlbXBsZXQtcGxhbicpIHtcbiAgICAgICAgcHJvbWlzZSA9IFRlbXBsZXRQbGFuU2VydmljZS5nZXRUZW1wbGV0RGV0YWlsKHRoaXMuaXRlbUlkKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5tb2R1bGUgPT09ICdtYXRlcmlhbCcpIHtcbiAgICAgICAgcHJvbWlzZSA9IE1hdGVyaWFsU2VydmljZS5nZXRNYXRlcmlhbERldGFpbCh0aGlzLml0ZW1JZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9taXNlID0gQ29tbW9uQ2hlY2tJdGVtU2VydmljZS5nZXRDaGVja0l0ZW0odGhpcy5pdGVtSWQsIHRoaXMuY2hlY2tUeXBlKTtcbiAgICAgIH1cblxuICAgICAgcHJvbWlzZVxuICAgICAgICAudGhlbihjaGVja2l0ZW1EYXRhID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnY2hlY2tpdGVtRGF0YScsIGNoZWNraXRlbURhdGEpO1xuICAgICAgICAgIHRoaXMuY2hlY2tpdGVtRGF0YSA9IGNoZWNraXRlbURhdGE7XG4gICAgICAgICAgdGhpcy50aXRsZSA9IGNoZWNraXRlbURhdGEuZnVsbF9uYW1lIHx8IGNoZWNraXRlbURhdGEubmFtZTtcblxuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHRoaXMubW9kdWxlID09PSAnc3BlY2lhbC1pbnNwZWN0JyB8fFxuICAgICAgICAgICAgdGhpcy5tb2R1bGUgPT09ICdpbnNwZWN0JyB8fFxuICAgICAgICAgICAgdGhpcy5tb2R1bGUgPT09ICdmbHktaW5zcGVjdCcgfHxcbiAgICAgICAgICAgIHRoaXMubW9kdWxlID09PSAnbWF0ZXJpYWwnXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBjaGVja2l0ZW1EYXRhLmNvbnRlbnQgPSBjaGVja2l0ZW1EYXRhLmd1aWRlbGluZSB8fCBjaGVja2l0ZW1EYXRhLmNvbnRlbnQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjaGVja2l0ZW1EYXRhLmNvbnRlbnQgPyBjaGVja2l0ZW1EYXRhLmNvbnRlbnQudHJpbSgpIDogJyc7XG4gICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPFxcL3A+PHA+L2dtLCAnXFxuJyk7XG4gICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPHA+L2dtLCAnJyk7XG4gICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPFxcL3A+L2dtLCAnJyk7XG4gICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPGJyPi9nbSwgJycpO1xuICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2UoLzxiciBcXC8+L2dtLCAnJyk7XG5cbiAgICAgICAgICAvLyDlvLrliLblm77niYfmjaLooYzmmL7npLpcbiAgICAgICAgICBpZiAoLyg8aW1nW15cXD5dKj4pL2dtLnRlc3QoY29udGVudCkpIHtcbiAgICAgICAgICAgIGxldCBjb25BcnIgPSBjb250ZW50LnNwbGl0KC8oPGltZ1teXFw+XSo+KS9nbSk7IC8vIOS7peWbvueJh+adpeWIh+WJsuWtl+espuS4slxuICAgICAgICAgICAgY29uQXJyID0gY29uQXJyLmZpbHRlcih2ID0+ICEhdik7XG4gICAgICAgICAgICBjb25BcnIuZm9yRWFjaCgodiwgaykgPT4ge1xuICAgICAgICAgICAgICBpZiAodiAmJiAhL15cXHMqXFxuLy50ZXN0KHYpICYmIGsgJiYgIS9cXG5cXHMqJC8udGVzdChjb25BcnJbayAtIDFdKSkge1xuICAgICAgICAgICAgICAgIC8vIOWmguaenOS4jeaYr+S7peaNouihjOespuW8gOWktO+8jOWImeWKoOS4iuaNouihjOesplxuICAgICAgICAgICAgICAgIGNvbkFycltrXSA9ICdcXG4nICsgdjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb25BcnIuam9pbignJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbGV0IGNvbnRlbnRBcnIgPSBjb250ZW50ID8gY29udGVudC5zcGxpdCgnXFxuJykgOiBbXTtcblxuICAgICAgICAgIHRoaXMuY29udGVudCA9IF8ubWFwKGNvbnRlbnRBcnIsICh2YWwsIGNvbnRlbnRJbmRleCkgPT4ge1xuICAgICAgICAgICAgdmFyIGNvbnRlbnRJdGVtO1xuICAgICAgICAgICAgaWYgKC88aW1nKFtcXHNcXFNdKik+L2dtLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICBsZXQgaW1nU3JjID0gdmFsLnNwbGl0KC9cXHNzcmM9XCIoW15cIl0qKVwiL2dtKVsxXTtcblxuICAgICAgICAgICAgICAvLyDmnIDnu4jmmL7npLrlm77niYfnlKjnmoQgc3JjXG4gICAgICAgICAgICAgIGxldCByZXNTcmMgPSAnJztcbiAgICAgICAgICAgICAgLy8g5piv5ZCm5pyJ5pi+56S655qE5Zu+54mHXG4gICAgICAgICAgICAgIGxldCByZWFkeSA9IHRydWU7XG4gICAgICAgICAgICAgIC8vIOWbvueJh+eahOeKtuaAge+8mnBlbmRpbmfvvIjov5vooYzkuK3vvInjgIFmdWxmaWxsZWTvvIjlt7LmiJDlip/vvInlkoxyZWplY3RlZO+8iOW3suWksei0pe+8iVxuICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gJ3BlbmRpbmcnO1xuICAgICAgICAgICAgICAvLyDlm77niYdpZFxuICAgICAgICAgICAgICBsZXQgaWQgPSBpbWdTcmNcbiAgICAgICAgICAgICAgICA/IGltZ1NyYy5tYXRjaCgvW1xcd3wtXXszNn0vZ20pWzBdXG4gICAgICAgICAgICAgICAgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSArICctJyArIGNvbnRlbnRJbmRleDtcblxuICAgICAgICAgICAgICBjb250ZW50SXRlbSA9IHtcbiAgICAgICAgICAgICAgICBpc0ltZzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzcmM6IHJlc1NyYywgLy8g5pyA57uI5pi+56S65Zu+54mHXG4gICAgICAgICAgICAgICAgdXJsOiBpbWdTcmMsIC8vIOWtmOaUvuWbvueJh+eahOWOn+Wbvu+8jOS4gOiIrOaDheWGteS4i+aYr2h0dHBz55qE5Zu+54mH77yM5LiN6L+H56a757q/5qih5byP5LiL77yM5pi+56S65pys5Zyw5Zu+54mHXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXMsXG4gICAgICAgICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgICAgICAgIHJlYWR5OiByZWFkeSxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNvbnRlbnRJdGVtID0geyBpc0ltZzogZmFsc2UsIHZhbDogdmFsIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29udGVudEl0ZW07XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy5kb3dubG9hZEltYWdlKCk7IC8vIOS4i+i9veWbvueJh1xuICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgJGxvZy5sb2coZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICog5YWz6Zet5by556qXXG4gICAgICovXG4gICAgY2xvc2VQb3B1cCgpIHtcbiAgICAgIHRoaXMudmFsdWUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICog5qC55o2uaXRlbei/lOWbnueahHN0YXR1c++8jOi/lOWbnuebuOW6lOeahOWbvueJh1xuICAgICAqIHBlbmRpbmfvvIjov5vooYzkuK3vvInjgIFmdWxmaWxsZWTvvIjlt7LmiJDlip/vvInlkoxyZWplY3RlZO+8iOW3suWksei0pe+8iVxuICAgICAqIOW8gOWPkeeOr+Wig+i/lOWbnmh0dHBz55qE5Zu+54mHXG4gICAgICovXG4gICAgZ2V0VGh1bWJuYWlsKGl0ZW0pIHtcbiAgICAgIGlmIChpdGVtLnN0YXR1cyA9PT0gJ3BlbmRpbmcnKSB7XG4gICAgICAgIHJldHVybiBJbWFnZVNlcnZpY2UuSU1BR0VfTE9BRElORztcbiAgICAgIH0gZWxzZSBpZiAoaXRlbS5zdGF0dXMgPT09ICdyZWplY3RlZCcpIHtcbiAgICAgICAgcmV0dXJuIEltYWdlU2VydmljZS5JTUFHRV9SRUxPQUQ7XG4gICAgICB9IGVsc2UgaWYgKEFQUF9FTlYgPT09ICdkZXYnKSB7XG4gICAgICAgIC8vIOW8gOWPkeeOr+Wig++8jOS4jeivu+WPluacrOWcsOaWh+S7tu+8iHRlbXDvvIlcbiAgICAgICAgcmV0dXJuIGl0ZW0udXJsO1xuICAgICAgfSBlbHNlIGlmIChpdGVtLnN0YXR1cyA9PT0gJ2Z1bGZpbGxlZCcpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uc3JjO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJGxvZy5sb2coJ+ajgOafpeaMh+W8lS3mmL7npLrlm77niYfvvJonLCBpdGVtKTtcbiAgICAgICAgcmV0dXJuIEltYWdlU2VydmljZS5JTUFHRV9QTEFDRUhPTEQ7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIOWbvueJh+WKoOi9veWksei0peeahOWkhOeQhlxuICAgICAqIOaAu+acieS6m+WbvueJh+ayoeacieWKnuazleaYvuekuui/mOaYr+aAjuS5iOa7tO+8jOe7meS7luS4gOS4qum7mOiupOWbvueJh+aYvuekuu+8jOS4jeimgeWHuueOsOmXrumimFxuICAgICAqL1xuICAgIGltZ0Vycm9yKGl0ZW0sIGluZGV4KSB7XG4gICAgICAkbG9nLmVycm9yKCfmo4Dmn6XmjIflvJUt5Yqg6L295Zu+54mH5Ye6546w6ZSZ6K+v77yaJywgaXRlbSk7XG4gICAgICBsZXQgb2JqID0geyAuLi5pdGVtIH07XG4gICAgICBvYmouc3RhdHVzID0gJ3JlamVjdGVkJztcbiAgICAgIHRoaXMuJHNldCh0aGlzLmNvbnRlbnQsIGluZGV4LCBvYmopO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiDkuIvovb3lm77niYdcbiAgICAgKiAy44CBSW1hZ2VTZXJ2aWNlLmlzTmVlZERvd25sb2FkIOWIpOaWreWbvueJh+aYr+WQpumcgOimgeS4i+i9vVxuICAgICAqIDPjgIFJbWFnZVNlcnZpY2UuZG93bmxvYWQg5qC55o2u5Zu+54mH55qE6Lev5b6E5LiL6L2955u45bqU55qE5Zu+54mHXG4gICAgICogNOOAgUltYWdlU2VydmljZS5nZXRQYXRoRnJvbVVybCDov5Tlm57mnKzlnLDnmoTlm77niYdcbiAgICAgKiA144CBSW1hZ2VTZXJ2aWNlLmZpeFVybCDnu5nlm77niYfmt7vliqDliY3nvIBcbiAgICAgKi9cbiAgICBkb3dubG9hZEltYWdlKGl0ZW0pIHtcbiAgICAgIC8vIOWmguaenOS8oOWFpeWPguaVsO+8jOWImeWPquWKoOi9veW9k+WJjeeahOWPguaVsFxuICAgICAgaXRlbSA9IGl0ZW0gPyBbaXRlbV0gOiB0aGlzLmltYWdlTGlzdCgpO1xuXG4gICAgICAvLyDliKTmlq3mmK/lkKbmnInnvZFcbiAgICAgIF8uZWFjaChpdGVtLCByZXMgPT4ge1xuICAgICAgICBsZXQgb2JqID0geyAuLi5yZXMgfTsgLy8g6I635Y+W5a+56LGhXG4gICAgICAgIGxldCBpbmRleCA9IF8ubWFwKHRoaXMuY29udGVudCwgcmVzID0+IHJlcy5pZCkuaW5kZXhPZihyZXMuaWQpOyAvLyDojrflj5bmlbDnu4TkuK3nmoTntKLlvJVcblxuICAgICAgICBJbWFnZVNlcnZpY2UuaXNOZWVkRG93bmxvYWQocmVzLnVybCkudGhlbihpc05lZWQgPT4ge1xuICAgICAgICAgIGlmIChpc05lZWQpIHtcbiAgICAgICAgICAgIEltYWdlU2VydmljZS5kb3dubG9hZChyZXMudXJsKVxuICAgICAgICAgICAgICAudGhlbihpbWFnZSA9PiB7XG4gICAgICAgICAgICAgICAgb2JqLnN0YXR1cyA9ICdmdWxmaWxsZWQnO1xuICAgICAgICAgICAgICAgIG9iai5zcmMgPSBJbWFnZVNlcnZpY2UuZml4VXJsKGltYWdlKTtcbiAgICAgICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5jb250ZW50LCBpbmRleCwgb2JqKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAkbG9nLmVycm9yKCfmo4Dmn6XmjIflvJUt5LiL6L295Zu+54mH77yaJywgZXJyb3IpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgb2JqLnN0YXR1cyA9ICdmdWxmaWxsZWQnO1xuICAgICAgICAgICAgb2JqLnNyYyA9IEltYWdlU2VydmljZS5maXhVcmwoSW1hZ2VTZXJ2aWNlLmdldFBhdGhGcm9tVXJsKHJlcy51cmwpKTtcbiAgICAgICAgICAgIHRoaXMuJHNldCh0aGlzLmNvbnRlbnQsIGluZGV4LCBvYmopO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6L+U5Zue5pyJ5Zu+54mH55qE5pWw57uEXG4gICAgaW1hZ2VMaXN0KCkge1xuICAgICAgcmV0dXJuIF8uZmlsdGVyKHRoaXMuY29udGVudCwgcmVzID0+IHJlcy5pc0ltZyk7XG4gICAgfSxcblxuICAgIC8vIOeCueWHu+WbvueJh+S6i+S7tlxuICAgIGltZ0NsaWNrKGl0ZW0pIHtcbiAgICAgIC8vIOagueaNrueKtuaAgeaYvuekuu+8jOS4jeWQjOaViOaenFxuICAgICAgaWYgKGl0ZW0uc3RhdHVzID09PSAncGVuZGluZycpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDliqDovb3kuK3nmoTkuI3miafooYxcbiAgICAgIH0gZWxzZSBpZiAoaXRlbS5zdGF0dXMgPT09ICdyZWplY3RlZCcpIHtcbiAgICAgICAgdGhpcy5kb3dubG9hZEltYWdlKGl0ZW0pO1xuICAgICAgICAkbG9nLmxvZygn5qOA5p+l5oyH5byVLeeCueWHu+mHjeaWsOWKoOi9vS3ph43mlrDkuIvovb3lm77niYfvvJonLCBpdGVtKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDliqDovb3kuK3nmoTkuI3miafooYxcbiAgICAgIH1cblxuICAgICAgbGV0IGltYWdlTGlzdCA9IHRoaXMuaW1hZ2VMaXN0KCk7IC8vIOiOt+WPluacieWbvueJh+eahOaVsOe7hFxuICAgICAgbGV0IGluZGV4ID0gXy5tYXAoaW1hZ2VMaXN0LCByZXMgPT4gcmVzLmlkKS5pbmRleE9mKGl0ZW0uaWQpOyAvLyDojrflj5bpgInmi6nnmoTlm77niYfnmoTlnKggaW1hZ2VMaXN05Lit55qE57Si5byVXG4gICAgICBpbWFnZUxpc3QgPSBfLm1hcChpbWFnZUxpc3QsIHJlcyA9PiB0aGlzLmdldFRodW1ibmFpbChyZXMpKTsgLy8g6L+U5Zue55u45bqU55qE5Zu+54mH5Zyw5Z2AXG4gICAgICBwbHVnaW5BcGkub3BlbkltYWdlQnJvd3NlcihpbWFnZUxpc3QsIGluZGV4KTsgLy8g5p+l55yL5aSn5Zu+XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLmNvbnRlbnQtbm90LWVtcHR5IC9kZWVwLyAubGF5b3V0LWNvbnRlbnQge1xuICBkaXNwbGF5OiBhdXRvO1xuICBvdmVyZmxvdzogYXV0bztcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xufVxuLmNoZWNrLWd1aWRlLWRldGFpbC1oZCB7XG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICBwYWRkaW5nOiAyNXB4IDMwcHggNXB4IDA7XG59XG4uY2hlY2stZ3VpZGUtZGV0YWlsLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBjb2xvcjogIzExMTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cbi5jaGVjay1ndWlkZS1kZXRhaWwtaW5mbyB7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjOGM4YzhjO1xufVxuLmNoZWNrLWd1aWRlLWRldGFpbC1jb250ZW50IHtcbiAgcGFkZGluZzogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGNvbG9yOiAjMzMzO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4uY2hlY2stZ3VpZGUtZGV0YWlsLWNvbnRlbnQgcCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIG1pbi1oZWlnaHQ6IDFlbTtcbn1cbi5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudCBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4uY2hlY2stZ3VpZGUtZGV0YWlsLWNvbnRlbnQgLmltZy1ub3QtcmVhZHkge1xuICB3aWR0aDogODBweDtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuLmVycm9yIHtcbiAgbWF4LXdpZHRoOiA1MCU7XG59XG48L3N0eWxlPlxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3JlZjpcImNoZWNrLWd1aWRlLWJ0blwiLHN0YXRpY0NsYXNzOlwiaGVhZGVyLWJ0blwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ub3BlbkNoZWNrR3VpZGUoKX19fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJuYXYtaW5mb1wifX0pXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbGlzdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2xpc3QudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9saXN0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03NDEwMmMwNSZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vbGlzdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vbGlzdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03NDEwMmMwNSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI3NDEwMmMwNVwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd0cmFuc2l0aW9uJyx7YXR0cnM6e1wibmFtZVwiOlwic2xpZGUtcmlnaHRcIn19LFsoX3ZtLnNob3cpP19jKCdwYWdlLWNvbnRlbnQnLHthdHRyczp7XCJtb2RlXCI6XCJkaWFsb2dcIixcInRpdGxlXCI6XCLmo4Dmn6XmjIflvJVcIixcIm9uLWNsb3NlXCI6X3ZtLmNsb3NlUG9wdXB9fSxbKCFfdm0uaXNMb2FkaW5nICYmIF92bS5saXN0RGF0YS5sZW5ndGgpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBhZ2Utc2Nyb2xsXCJ9LF92bS5fbCgoX3ZtLmxpc3REYXRhKSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6a2V5fSxbX2MoJ2l0ZW0nLHthdHRyczp7XCJib3JkZXJcIjpcImJvdHRvbVwiLFwiaWNvbi1yaWdodFwiOml0ZW0uc3ViaXRlbSAmJiBpdGVtLnN1Yml0ZW0ubGVuZ3RoID8gKGl0ZW0uaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJykgOiAnYXJyb3ctcmlnaHQnfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNsaWNrSXRlbShpdGVtKX19fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IGZ3LWIgY29sb3ItYmx1ZSBvbmUtbGluZVwifSxbX3ZtLl92KF92bS5fcyhpdGVtLml0ZW1fbmFtZSkpXSldKSwoaXRlbS5pc09wZW4pP192bS5fbCgoaXRlbS5zdWJpdGVtKSxmdW5jdGlvbihzdWJpdGVtLGtleTIpe3JldHVybiBfYygnZGl2Jyx7a2V5OmtleTIsc3RhdGljQ2xhc3M6XCJzdWJsaXN0XCJ9LFtfYygnaXRlbScse3N0YXRpY0NsYXNzOlwicGwwXCIsYXR0cnM6e1wiYm9yZGVyXCI6XCJib3R0b21cIixcImljb24tcmlnaHRcIjpzdWJpdGVtLnN1Yml0ZW0gJiYgc3ViaXRlbS5zdWJpdGVtLmxlbmd0aCA/IChzdWJpdGVtLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J30sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jbGlja0l0ZW0oc3ViaXRlbSl9fX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dCBjaGVja2l0ZW0tbGlzdC1uYW1lXCJ9LFtfdm0uX3YoX3ZtLl9zKHN1Yml0ZW0uaXRlbV9uYW1lKSldKV0pLChzdWJpdGVtLmlzT3Blbik/X3ZtLl9sKChzdWJpdGVtLnN1Yml0ZW0pLGZ1bmN0aW9uKHN1Yml0ZW1BLGtleTMpe3JldHVybiBfYygnZGl2Jyx7a2V5OmtleTMsc3RhdGljQ2xhc3M6XCJzdWJsaXN0XCJ9LFtfYygnaXRlbScse3N0YXRpY0NsYXNzOlwicGwwXCIsYXR0cnM6e1wiYm9yZGVyXCI6XCJib3R0b21cIixcImljb24tcmlnaHRcIjpzdWJpdGVtQS5zdWJpdGVtICYmIHN1Yml0ZW1BLnN1Yml0ZW0ubGVuZ3RoID8gKHN1Yml0ZW1BLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J30sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jbGlja0l0ZW0oc3ViaXRlbUEpfX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgY2hlY2tpdGVtLWxpc3QtbmFtZVwifSxbX3ZtLl92KF92bS5fcyhzdWJpdGVtQS5pdGVtX25hbWUpKV0pXSksKHN1Yml0ZW1BLmlzT3Blbik/X3ZtLl9sKChzdWJpdGVtQS5zdWJpdGVtKSxmdW5jdGlvbihzdWJpdGVtQixrZXk0KXtyZXR1cm4gX2MoJ2Rpdicse2tleTprZXk0LHN0YXRpY0NsYXNzOlwic3VibGlzdFwifSxbX2MoJ2l0ZW0nLHtzdGF0aWNDbGFzczpcInBsMFwiLGF0dHJzOntcImJvcmRlclwiOlwiYm90dG9tXCIsXCJpY29uLXJpZ2h0XCI6c3ViaXRlbUIuc3ViaXRlbSAmJiBzdWJpdGVtQi5zdWJpdGVtLmxlbmd0aCA/IChzdWJpdGVtQi5pc09wZW4gPyAnYXJyb3ctdXAnIDogJ2Fycm93LWRvd24nKSA6ICdhcnJvdy1yaWdodCd9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uY2xpY2tJdGVtKHN1Yml0ZW1CKX19fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IGNoZWNraXRlbS1saXN0LW5hbWVcIn0sW192bS5fdihfdm0uX3Moc3ViaXRlbUIuaXRlbV9uYW1lKSldKV0pXSwxKX0pOl92bS5fZSgpXSwyKX0pOl92bS5fZSgpXSwyKX0pOl92bS5fZSgpXSwyKX0pKTpfdm0uX2UoKSxfYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1sb2FkaW5nXCI6X3ZtLmlzTG9hZGluZyxcImlzLWVtcHR5XCI6IV92bS5saXN0RGF0YS5sZW5ndGgsXCJlbXB0eS10ZXh0XCI6XCLmsqHmnInmo4Dmn6XpoblcIn19KV0sMSk6X3ZtLl9lKCldLDEpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XG5pbXBvcnQgZGlhbG9nIGZyb20gJy4vbGlzdC52dWUnO1xuXG5sZXQgaW5zdGFuY2UgPSBmYWxzZTtcblxuaWYgKCFpbnN0YW5jZSkge1xuICBsZXQgRGlhbG9nQ29tcG9uZW50ID0gVnVlLmV4dGVuZChkaWFsb2cpO1xuICBpbnN0YW5jZSA9IG5ldyBEaWFsb2dDb21wb25lbnQoe1xuICAgIGVsOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgfSk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5zdGFuY2UuJGVsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtZHJvcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC1kcm9wLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZGV0YWlsLWRyb3AudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJjYWM4ODY0JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RldGFpbC1kcm9wLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGV0YWlsLWRyb3AudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2RldGFpbC1kcm9wLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTJjYWM4ODY0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjJjYWM4ODY0XCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gKF92bS5zaG93KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJtYWluXCIsc3R5bGU6KHsgdG9wOiBfdm0uY29udGVudFRvcCArICdweCcgfSl9LFtfYygnaScse3N0YXRpY0NsYXNzOlwiYXJyb3dcIn0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImNvbnRlbnRcIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldCAhPT0gJGV2ZW50LmN1cnJlbnRUYXJnZXQpeyByZXR1cm4gbnVsbDsgfXJldHVybiBfdm0uY2xvc2VQb3B1cCgkZXZlbnQpfX19LFtfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNsaWRlLWRvd25cIn0sb246e1wiZW50ZXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pc09wZW5pbmcgPSB0cnVlfSxcImFmdGVyLWVudGVyXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uaXNPcGVuaW5nID0gZmFsc2V9LFwibGVhdmVcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pc0Nsb3NpbmcgPSB0cnVlfSxcImFmdGVyLWxlYXZlXCI6X3ZtLmFmdGVyQ2xvc2V9fSxbKF92bS5zaG93TGlzdCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYm94XCIsc3R5bGU6KHsnaGVpZ2h0JzogX3ZtLmxpc3RIZWlnaHQgKyAncHgnfSl9LF92bS5fbCgoX3ZtLmRhdGEpLGZ1bmN0aW9uKGl0ZW0saXRlbUluZGV4KXtyZXR1cm4gX2MoJ2Rpdicse2tleTppdGVtSW5kZXgsY2xhc3M6eydib3JkZXItYm90dG9tJzogX3ZtLmRhdGEubGVuZ3RoID4gMSwgJ2JveC1zaW5nbGUnOiBfdm0uZGF0YS5sZW5ndGggPT09IDF9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWhkXCIsY2xhc3M6eydib3JkZXItYm90dG9tJzogX3ZtLmRhdGEubGVuZ3RoIDw9IDEsICdkZXRhaWwtaGQtc2luZ2xlJzogX3ZtLmRhdGEubGVuZ3RoIDw9IDF9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0udG9nZ2xlSXRlbShpdGVtKX19fSxbKF92bS5kYXRhLmxlbmd0aCA+IDEpP19jKCdpJyx7Y2xhc3M6eydkZXRhaWwtYXJyb3ctcmlnaHQnOiAhaXRlbS5pc09wZW4sICdkZXRhaWwtYXJyb3ctZG93bic6IGl0ZW0uaXNPcGVufX0pOl92bS5fZSgpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC10aXRsZVwifSxbX3ZtLl92KF92bS5fcyhpdGVtLm5hbWUpKV0pXSksKF92bS5kYXRhLmxlbmd0aCA8PSAxIHx8IGl0ZW0uaXNPcGVuKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtYmRcIixjbGFzczp7J2RldGFpbC1iZC1zaW5nbGUnOiBfdm0uZGF0YS5sZW5ndGggPD0gMX19LFtfdm0uX2woKGl0ZW0udGV4dEFyciksZnVuY3Rpb24odGV4dCx0ZXh0SW5kZXgpe3JldHVybiBfYygncCcse2tleTp0ZXh0SW5kZXgsc3RhdGljQ2xhc3M6XCJ0ZXh0LWxpbmVcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgXCIrX3ZtLl9zKHRleHQpK1wiXFxuICAgICAgICAgICAgXCIpXSl9KSxfYygnaXRlbS1pbWctbGlzdCcse2F0dHJzOntcImVkaXRhYmxlZFwiOmZhbHNlfSxtb2RlbDp7dmFsdWU6KGl0ZW0uY29udGVudEltYWdlKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoaXRlbSwgXCJjb250ZW50SW1hZ2VcIiwgJCR2KX0sZXhwcmVzc2lvbjpcIml0ZW0uY29udGVudEltYWdlXCJ9fSksX2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtZW1wdHlcIjohaXRlbS50ZXh0QXJyLmxlbmd0aCAmJiAhaXRlbS5jb250ZW50SW1hZ2UubGVuZ3RoLFwiZW1wdHktdGV4dFwiOlwiUEPnq6/mnKrorr7nva7mo4Dmn6XmjIflvJVcIn19KV0sMik6X3ZtLl9lKCldKX0pKTpfdm0uX2UoKV0pXSwxKV0pOl92bS5fZSgpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XG5pbXBvcnQgZGlhbG9nIGZyb20gJy4vZGV0YWlsLWRyb3AudnVlJztcblxubGV0IGluc3RhbmNlID0gZmFsc2U7XG5cbmlmICghaW5zdGFuY2UpIHtcbiAgbGV0IERpYWxvZ0NvbXBvbmVudCA9IFZ1ZS5leHRlbmQoZGlhbG9nKTtcbiAgaW5zdGFuY2UgPSBuZXcgRGlhbG9nQ29tcG9uZW50KHtcbiAgICBlbDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXG4gIH0pO1xuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5zdGFuY2UuJGVsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cImhlYWRlci1idG5cIiByZWY9XCJjaGVjay1ndWlkZS1idG5cIiBAY2xpY2s9XCJvcGVuQ2hlY2tHdWlkZSgpXCI+XG4gICAgPGljb24gbmFtZT1cIm5hdi1pbmZvXCIgLz5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuLy8gXG5pbXBvcnQgJHEgZnJvbSAnQHN0YXRpYy9saWIvcHJvbWlzZSc7XG5pbXBvcnQgQ29tbW9uQ2hlY2tJdGVtU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2NoZWNrLWl0ZW0tc2VydmljZS5qcyc7XG5pbXBvcnQgQ2hlY2tHdWlkZUxpc3QgZnJvbSAnQHNyYy93aWRnZXQvY2hlY2stZ3VpZGUvbGlzdC5qcyc7XG5pbXBvcnQgQ2hlY2tHdWlkZURldGFpbCBmcm9tICdAc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwuanMnO1xuaW1wb3J0IENoZWNrR3VpZGVEZXRhaWxEcm9wIGZyb20gJ0BzcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnQ2hlY2tHdWlkZScsXG4gIGNvbXBvbmVudHM6IHt9LFxuICBwcm9wczoge1xuICAgIC8vIOaooeWdl2NvZGXvvIzpu5jorqTnqbrvvIzlj5YgcHJvYmxlbV9jbGFzcyDooajlhoXlrrnjgIInc3BlY2lhbC1pbnNwZWN0JyDkuJPpobnlt6Hmo4BcbiAgICBtb2R1bGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgLy8g5by556qX55qE5pa55byP77yMZHJvcCjkuIvmi4nmoYYpIHwgcGFnZSjpobXpnaLlvaLlvI/nmoTlvLnnqpcpXG4gICAgbW9kZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3BhZ2UnLFxuICAgIH0sXG4gICAgaXRlbUlkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIGl0ZW1JZHM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gW10sXG4gICAgfSxcbiAgICBiYXRjaElkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIHNlY3Rpb25JZDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICBvcHRpb25zOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLFxuICAgIH0sXG4gICAgb3B0aW9uc1Byb21pc2U6IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogKCkgPT4ge30sXG4gICAgfSxcbiAgICBiZWZvcmVPcGVuOiB7XG4gICAgICB0eXBlOiBGdW5jdGlvbixcbiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9LFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgfTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIC8vIOaJk+W8gOajgOafpeaMh+W8leW8ueeql1xuICAgIG9wZW5DaGVja0d1aWRlKCkge1xuICAgICAgbGV0IGJlZm9yZU9wZW4gPSB0aGlzLmJlZm9yZU9wZW4gJiYgdGhpcy5iZWZvcmVPcGVuKCk7XG5cbiAgICAgIGlmICghKGJlZm9yZU9wZW4gaW5zdGFuY2VvZiBQcm9taXNlKSkge1xuICAgICAgICBiZWZvcmVPcGVuID0gUHJvbWlzZS5yZXNvbHZlKGJlZm9yZU9wZW4pO1xuICAgICAgfVxuXG4gICAgICBiZWZvcmVPcGVuLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICBpZiAodGhpcy5tb2RlID09PSAnZHJvcCcpIHtcbiAgICAgICAgICAgIC8vIOS4i+aLieaooeW8j1xuICAgICAgICAgICAgQ2hlY2tHdWlkZURldGFpbERyb3Aub3BlblBvcHVwKHtcbiAgICAgICAgICAgICAgaXRlbUlkczogdGhpcy5pdGVtSWRzLFxuICAgICAgICAgICAgICBlbDogdGhpcy4kcmVmc1snY2hlY2stZ3VpZGUtYnRuJ10sXG4gICAgICAgICAgICAgIG9wdGlvbnM6IHRoaXMub3B0aW9ucyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgcHJvbWlzZTtcblxuICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5pyJ5a2Q6ZuGXG4gICAgICAgICAgICBpZiAodGhpcy5tb2R1bGUgPT09ICd0ZW1wbGV0LXBsYW4nKSB7XG4gICAgICAgICAgICAgIHByb21pc2UgPSAkcS53aGVuKGZhbHNlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5pdGVtSWQgJiYgdGhpcy5zZWN0aW9uSWQpIHtcbiAgICAgICAgICAgICAgcHJvbWlzZSA9IENvbW1vbkNoZWNrSXRlbVNlcnZpY2UuaGFzQ2hpbGRTZWN0aW9uQ2hlY2tJdGVtKFxuICAgICAgICAgICAgICAgIHRoaXMuaXRlbUlkLFxuICAgICAgICAgICAgICAgIHRoaXMuc2VjdGlvbklkXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXRlbUlkKSB7XG4gICAgICAgICAgICAgIHByb21pc2UgPSBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmhhc0NoaWxkQ2hlY2tJdGVtKHRoaXMuaXRlbUlkKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHByb21pc2UgPSAkcS53aGVuKHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwcm9taXNlLnRoZW4oaGFzQ2hpbGQgPT4ge1xuICAgICAgICAgICAgICBpZiAoaGFzQ2hpbGQpIHtcbiAgICAgICAgICAgICAgICAvLyDmnInlrZDpm4bvvIzmiZPlvIDmo4Dmn6XpobnliJfooajvvIjmoJHlvaLvvInlvLnnqpdcbiAgICAgICAgICAgICAgICBDaGVja0d1aWRlTGlzdC5vcGVuUG9wdXAoe1xuICAgICAgICAgICAgICAgICAgbW9kdWxlOiB0aGlzLm1vZHVsZSxcbiAgICAgICAgICAgICAgICAgIGl0ZW1JZDogdGhpcy5pdGVtSWQsXG4gICAgICAgICAgICAgICAgICBiYXRjaElkOiB0aGlzLmJhdGNoSWQsXG4gICAgICAgICAgICAgICAgICBzZWN0aW9uSWQ6IHRoaXMuc2VjdGlvbklkLFxuICAgICAgICAgICAgICAgICAgb3B0aW9uczogdGhpcy5vcHRpb25zLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIOayoeacieWtkOmbhu+8jOaJk+W8gOajgOafpeaMh+W8leivpuaDheW8ueeql1xuICAgICAgICAgICAgICAgIENoZWNrR3VpZGVEZXRhaWwub3BlblBvcHVwKHtcbiAgICAgICAgICAgICAgICAgIGl0ZW1JZDogdGhpcy5pdGVtSWQsXG4gICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMubW9kdWxlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xNDA5YTdhYyZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLF92bS5fZyh7c3RhdGljQ2xhc3M6XCJpdGVtLWxpc3QgYm9yZGVyLWJvdHRvbVwifSxfdm0uJGxpc3RlbmVycyksWyhfdm0uaXNTaG93TmV3U3RhdHVzKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJzdGF0dXMtbmV3LXRhZ1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGFnXCIsY2xhc3M6X3ZtLmJnTmV3Q2xhc3NbX3ZtLnN0YXR1c119LFtfdm0uX3YoXCJcXG4gICAgICBcIitfdm0uX3MoX3ZtLnN0YXR1cykrXCJcXG4gICAgXCIpXSldKTpfdm0uX2UoKSwoX3ZtLmltZyk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaW1nXCIsc3R5bGU6KHsgJ2JhY2tncm91bmQtaW1hZ2UnOiAndXJsKCcgKyBfdm0uaW1nICsgJyknIH0pfSk6X3ZtLl9lKCksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1saXN0LWNvblwifSxbX2MoJ2gyJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbKF92bS5pc1VucmVhZCk/X2MoJ2knLHtzdGF0aWNDbGFzczpcImljb24tdW5yZWFkXCJ9KTpfdm0uX2UoKSwoX3ZtLmlzVGltZW91dCk/X2MoJ2knLHtzdGF0aWNDbGFzczpcImljb24tdGltZW91dFwifSxbX3ZtLl92KFwiXFxuICAgICAgICDotoVcXG4gICAgICBcIildKTpfdm0uX2UoKSwoX3ZtLmlzVXJnZW50KT9fYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbi11cmdlbnRcIn0sW192bS5fdihcIlxcbiAgICAgICAg5oClXFxuICAgICAgXCIpXSk6X3ZtLl9lKCksKF92bS5pc1JldHVybik/X2MoJ2knLHtzdGF0aWNDbGFzczpcImljb24tcmV0dXJuXCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgIOmAgFxcbiAgICAgIFwiKV0pOl92bS5fZSgpLChfdm0uJHNsb3RzWyd0aXRsZSddKT9fdm0uX3QoXCJ0aXRsZVwiKTpbKF92bS50eXBlVGFnKT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidHlwZS10YWdcIn0sW192bS5fdihfdm0uX3MoX3ZtLnR5cGVUYWcpKV0pOl92bS5fZSgpLF92bS5fdihcIlxcbiAgICAgICAgXCIrX3ZtLl9zKF92bS50aXRsZSB8fCAnJykrXCJcXG4gICAgICBcIildXSwyKSxfYygncCcse3N0YXRpY0NsYXNzOlwidGV4dFwifSxbX3ZtLl92KF92bS5fcyhfdm0uZGV0YWlsIHx8ICcnKSldKSwoX3ZtLiRzbG90c1snZm9vdGVyJ10pP192bS5fdChcImZvb3RlclwiKTpfYygncCcse3N0YXRpY0NsYXNzOlwidGltZVwiLGRvbVByb3BzOntcImlubmVySFRNTFwiOl92bS5fcyhfdm0uZm9vdGVyIHx8ICcnKX19KV0sMiksKF92bS5zdGF0dXMgJiYgIV92bS5pc1Nob3dOZXdTdGF0dXMpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tbGlzdC1zdGF0dXNcIn0sW19jKCdzdGF0dXMtdGV4dCcse2F0dHJzOntcInN0YXR1c1wiOl92bS5zdGF0dXMsXCJ0ZXh0XCI6X3ZtLnN0YXR1c1RleHQsXCJleHRlbmRcIjpfdm0uc3RhdHVzQ2xhc3NTZXR9fSksKF92bS5yZXBhaXJEZWFkbGluZSAmJiBfdm0ucmVwYWlyRGVhZGxpbmVTdGF0dXMuaW5jbHVkZXMoX3ZtLnN0YXR1cykpP19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aW1lLXN0YXR1c1wifSxbX3ZtLl92KFwiXFxuICAgICAgXCIrX3ZtLl9zKF92bS5fZihcInRpbWVTdGF0dXNcIikoX3ZtLnJlcGFpckRlYWRsaW5lKSkrXCJcXG4gICAgXCIpXSk6X3ZtLl9lKCldLDEpOl92bS5fZSgpXSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiaXRlbS1saXN0IGJvcmRlci1ib3R0b21cIiB2LW9uPVwiJGxpc3RlbmVyc1wiPlxuICAgIDxkaXYgY2xhc3M9XCJzdGF0dXMtbmV3LXRhZ1wiIHYtaWY9XCJpc1Nob3dOZXdTdGF0dXNcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJ0YWdcIiA6Y2xhc3M9XCJiZ05ld0NsYXNzW3N0YXR1c11cIj5cbiAgICAgICAge3sgc3RhdHVzIH19XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IHYtaWY9XCJpbWdcIiA6c3R5bGU9XCJ7ICdiYWNrZ3JvdW5kLWltYWdlJzogJ3VybCgnICsgaW1nICsgJyknIH1cIiBjbGFzcz1cImltZ1wiPjwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cIml0ZW0tbGlzdC1jb25cIj5cbiAgICAgIDxoMiBjbGFzcz1cInRpdGxlXCI+XG4gICAgICAgIDxpIHYtaWY9XCJpc1VucmVhZFwiIGNsYXNzPVwiaWNvbi11bnJlYWRcIj4gPC9pPlxuICAgICAgICA8aSB2LWlmPVwiaXNUaW1lb3V0XCIgY2xhc3M9XCJpY29uLXRpbWVvdXRcIj5cbiAgICAgICAgICDotoVcbiAgICAgICAgPC9pPlxuICAgICAgICA8aSB2LWlmPVwiaXNVcmdlbnRcIiBjbGFzcz1cImljb24tdXJnZW50XCI+XG4gICAgICAgICAg5oClXG4gICAgICAgIDwvaT5cbiAgICAgICAgPGkgdi1pZj1cImlzUmV0dXJuXCIgY2xhc3M9XCJpY29uLXJldHVyblwiPlxuICAgICAgICAgIOmAgFxuICAgICAgICA8L2k+XG4gICAgICAgIDxzbG90IHYtaWY9XCIkc2xvdHNbJ3RpdGxlJ11cIiBuYW1lPVwidGl0bGVcIj48L3Nsb3Q+XG4gICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0eXBlLXRhZ1wiIHYtaWY9XCJ0eXBlVGFnXCI+e3sgdHlwZVRhZyB9fTwvc3Bhbj5cbiAgICAgICAgICB7eyB0aXRsZSB8fCAnJyB9fVxuICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgPC9oMj5cbiAgICAgIDxwIGNsYXNzPVwidGV4dFwiPnt7IGRldGFpbCB8fCAnJyB9fTwvcD5cbiAgICAgIDxzbG90IHYtaWY9XCIkc2xvdHNbJ2Zvb3RlciddXCIgbmFtZT1cImZvb3RlclwiPjwvc2xvdD5cbiAgICAgIDxwIHYtZWxzZSBjbGFzcz1cInRpbWVcIiB2LWh0bWw9XCJmb290ZXIgfHwgJydcIj48L3A+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IHYtaWY9XCJzdGF0dXMgJiYgIWlzU2hvd05ld1N0YXR1c1wiIGNsYXNzPVwiaXRlbS1saXN0LXN0YXR1c1wiPlxuICAgICAgPHN0YXR1cy10ZXh0IDpzdGF0dXM9XCJzdGF0dXNcIiA6dGV4dD1cInN0YXR1c1RleHRcIiA6ZXh0ZW5kPVwic3RhdHVzQ2xhc3NTZXRcIiAvPlxuICAgICAgPCEtLSDlj7PkvqfnmoTotoXml7blpKnmlbDmlofmnKznrYnvvIzlpoLmnpzmsqHmnInkvKDlhaXliJnkuI3mmL7npLogLS0+XG4gICAgICA8cCB2LWlmPVwicmVwYWlyRGVhZGxpbmUgJiYgcmVwYWlyRGVhZGxpbmVTdGF0dXMuaW5jbHVkZXMoc3RhdHVzKVwiIGNsYXNzPVwidGltZS1zdGF0dXNcIj5cbiAgICAgICAge3sgcmVwYWlyRGVhZGxpbmUgfCB0aW1lU3RhdHVzIH19XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBTdGF0dXNUZXh0IGZyb20gJ0BzcmMvd2lkZ2V0L3N0YXR1cy10ZXh0Lyc7XG5pbXBvcnQgQ29uZmlnR2xvYmFsUyBmcm9tICdAc3JjL2NvbmZpZy9nbG9iYWwtc3RhdHVzJzsgLy8g5YWo5bGA55qE54q25oCB6YWN572u6aG5XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0l0ZW1MaXN0JyxcbiAgY29tcG9uZW50czogeyBTdGF0dXNUZXh0IH0sXG4gIHByb3BzOiB7XG4gICAgaW1nOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIHRpdGxlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIGRldGFpbDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICBmb290ZXI6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgLy8g55So5LqO6K6h566X54q25oCB6aKc6Imy77yM5aaC5p6c5rKh5pyJ5YiZ5Y+WIHN0YXR1c1RleHRcbiAgICBzdGF0dXM6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgaXNTaG93TmV3U3RhdHVzOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICAvLyDmmL7npLrnmoTnirbmgIHmloflrZdcbiAgICBzdGF0dXNUZXh0OiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIHN0YXR1c0NsYXNzU2V0OiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICAvLyDnsbvlnotcbiAgICB0eXBlVGFnOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIGlzVW5yZWFkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICBpc1RpbWVvdXQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICAgIGlzVXJnZW50OiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICBpc1JldHVybjoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG5cbiAgICAvLyDmlbTmlLnml7bpl7TvvIzmoLnmja7mlbTmlLnml7bpl7Tov5Tlm57mlofmnKxcbiAgICByZXBhaXJEZWFkbGluZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyDmmL7npLrlvoXmlbTmlLnnmoTnirbmgIFcbiAgICAgIHJlcGFpckRlYWRsaW5lU3RhdHVzOiBDb25maWdHbG9iYWxTLlJFUEFJUl9ERUFETElORV9TVEFUVVMuc3RhdHVzLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgYmdOZXdDbGFzcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIOiNieeovzogJ2JnLWdyYXk3IGItY29sb3InLFxuICAgICAgICDmmoLlrZg6ICdiZy1ncmF5IGItY29sb3InLFxuICAgICAgICDmo4Dmn6XkuK06ICdiZy1vcmFuZ2UgYi1jb2xvcicsXG5cbiAgICAgICAg5b6F5pW05pS5OiAnYmctcmVkMiBiLWNvbG9yICcsXG4gICAgICAgIOW+heWkjemqjDogJ2JnLXB1cnBsZSBiLWNvbG9yJyxcbiAgICAgICAg5b6F6aqM5pS2OiAnYmctcmVkIGItY29sb3InLFxuICAgICAgICDlvoXmiqXpqow6ICdiZy1yZWQgYi1jb2xvcicsXG4gICAgICAgIOW+heeUs+ivt+i/m+WcujogJ2JnLXJlZCBiLWNvbG9yJyxcbiAgICAgICAg5b6F5Yid6aqMOiAnYmctcmVkIGItY29sb3InLFxuICAgICAgICDlvoXpgIHmo4A6ICdiZy1yZWQgYi1jb2xvcicsXG4gICAgICAgIOW+heS4iuS8oOaKpeWRijogJ2JnLXJlZCBiLWNvbG9yJyxcbiAgICAgICAg5b6F6YCA5Zy6OiAnYmctcmVkIGItY29sb3InLFxuICAgICAgICDlvoXlu7rorr7ljZXkvY3pqozmlLY6ICdiZy1yZWQgYi1jb2xvcicsXG4gICAgICAgIOW+heWMuuWfn+mqjOaUtjogJ2JnLXJlZCBiLWNvbG9yJyxcblxuICAgICAgICDlt7Lmj5DkuqQ6ICdiZy1ncmVlbiBiLWNvbG9yJyxcbiAgICAgICAg5bey5pW05pS5OiAnYmctZ3JlZW4gYi1jb2xvcicsXG4gICAgICAgIOW3sumqjOaUtjogJ2JnLWdyZWVuIGItY29sb3InLFxuICAgICAgICDlt7LpgJrov4c6ICdiZy1ncmVlbjIgYi1jb2xvcicsXG4gICAgICAgIOW3sumAgOWcujogJ2JnLWdyYXkgYi1jb2xvcicsXG4gICAgICAgIOW3suWFs+mXrTogJ2JnLWdyYXk3IGItY29sb3InLFxuICAgICAgICDpnZ7mraPluLjlhbPpl606ICdiZy1ncmF5IGItY29sb3InLFxuICAgICAgICDlt7LpgIDlm546ICdiZy1yZWQgYi1jb2xvcicsXG4gICAgICAgIOW3suWujOaIkDogJ2JnLWdyZWVuIGItY29sb3InLFxuICAgICAgICDlt7LnlKnpobk6ICdiZy1ncmF5IGItY29sb3InLFxuXG4gICAgICAgIOajgOafpeWujOavlTogJ2JnLWdyZWVuIGItY29sb3InLFxuICAgICAgICDpgIHmo4DlkIjmoLw6ICdiZy1ncmVlbiBiLWNvbG9yJyxcbiAgICAgICAg5aSN6aqM5ZCI5qC8OiAnYmctZ3JlZW4gYi1jb2xvcicsXG4gICAgICAgIOmqjOaUtuWQiOagvDogJ2JnLWdyZWVuIGItY29sb3InLFxuICAgICAgICDpqozmlLbkuI3lkIjmoLw6ICdiZy1yZWQgYi1jb2xvcicsXG5cbiAgICAgICAg5pyq6aqM5pS2OiAnYmctb3JhbmdlIGItY29sb3InLFxuXG4gICAgICAgIOW+heeCueivhDogJ2JnLW9yYW5nZSBiLWNvbG9yJyxcbiAgICAgICAg5bey54K56K+EOiAnYmctZ3JlZW4gYi1jb2xvcicsXG5cbiAgICAgICAg5ZCI5qC8OiAnYmctZ3JlZW4gYi1jb2xvcicsXG4gICAgICAgIOS4jeWQiOagvDogJ2JnLXJlZCBiLWNvbG9yJyxcblxuICAgICAgICAvLyDlvaLosaHov5vluqZcbiAgICAgICAg6L+b5bqm5q2j5bi4OiAnYmctZ3JlZW4yIGItY29sb3InLFxuICAgICAgICDov5vluqbmu57lkI46ICdiZy1yZWQyIGItY29sb3InLFxuICAgICAgICDmlr3lt6XljZXkvY3pqozmlLblkIjmoLw6ICdiZy1ncmVlbiBiLWNvbG9yJyxcbiAgICAgICAg55uR55CG5Y2V5L2N6aqM5pS25ZCI5qC8OiAnYmctZ3JlZW4gYi1jb2xvcicsXG4gICAgICAgIOW7uuiuvuWNleS9jemqjOaUtuWQiOagvDogJ2JnLWdyZWVuIGItY29sb3InLFxuICAgICAgICDmlr3lt6XljZXkvY3pqozmlLbkuI3lkIjmoLw6ICdiZy1yZWQgYi1jb2xvcicsXG4gICAgICAgIOebkeeQhuWNleS9jemqjOaUtuS4jeWQiOagvDogJ2JnLXJlZCBiLWNvbG9yJyxcbiAgICAgICAg5bu66K6+5Y2V5L2N6aqM5pS25LiN5ZCI5qC8OiAnYmctcmVkIGItY29sb3InLFxuICAgICAgfTtcbiAgICB9LFxuICB9LFxuICBhY3RpdmF0ZWQoKSB7fSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+XG4uaXRlbS1saXN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgbWluLWhlaWdodDogMTAwcHg7XG59XG4uaXRlbS1saXN0IC5pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDgwcHg7XG4gIGhlaWdodDogODBweDtcbiAgYmFja2dyb3VuZDogbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XG59XG4uaXRlbS1saXN0IC5pdGVtLWxpc3QtY29uIHtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogMCAxNXB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cbi5pdGVtLWxpc3QgLml0ZW0tbGlzdC1jb24gLnRpdGxlIHtcbiAgaGVpZ2h0OiAzMHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICMxMTE7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgcGFkZGluZy10b3A6IDZweDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgLnR5cGUtdGFnIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIHBhZGRpbmc6IDAgNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDI3NWU4O1xuICAgIGNvbG9yOiAjNDI3NWU4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB6b29tOiAwLjg7XG4gICAgbWFyZ2luOiAzcHggMCAwIDA7XG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xuICB9XG59XG4uaXRlbS1saXN0IC5pdGVtLWxpc3QtY29uIC50ZXh0IHtcbiAgaGVpZ2h0OiAzMHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICM4YzhjOGM7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZy1ib3R0b206IDZweDtcbiAgcGFkZGluZy1yaWdodDogMTFweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTBweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzICFpbXBvcnRhbnQ7XG59XG4uaXRlbS1saXN0IC5pdGVtLWxpc3QtY29uIC50aW1lIHtcbiAgaGVpZ2h0OiAyMHB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgY29sb3I6ICNiM2IzYjM7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZy1yaWdodDogMTFweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IC0xMHB4ICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcyAhaW1wb3J0YW50O1xufVxuLml0ZW0tbGlzdCAuaXRlbS1saXN0LWNvbiAudGltZSAuaW9uIHtcbiAgY29sb3I6ICNhNmE2YTY7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuLml0ZW0tbGlzdCAuaXRlbS1saXN0LXIge1xuICB3aWR0aDogNjBweDtcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5pdGVtLWxpc3QgLml0ZW0tbGlzdC1zdGF0dXMge1xuICBtaW4td2lkdGg6IDRlbTtcbiAgLy8gbWF4LXdpZHRoOiA0ZW07XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5pdGVtLWxpc3QgLmljb24tdW5yZWFkIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMnB4O1xuICBoZWlnaHQ6IDEycHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuLml0ZW0tbGlzdCAuaWNvbi1yZXR1cm4sXG4uaXRlbS1saXN0IC5pY29uLXVyZ2VudCxcbi5pdGVtLWxpc3QgLmljb24tdGltZW91dCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDJweDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgbWFyZ2luLXRvcDogNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cbi5pdGVtLWxpc3QgLmljb24tdGltZW91dCB7XG4gIGJhY2tncm91bmQ6ICM5NjRiZmU7XG59XG4uaXRlbS1saXN0IC5pY29uLXJldHVybiB7XG4gIGJhY2tncm91bmQ6ICNmZThiMDA7XG59XG4uaXRlbS1saXN0IC5pY29uLXVyZ2VudCB7XG4gIGJhY2tncm91bmQ6ICNmZjNjM2Q7XG59XG4uaXRlbS1saXN0IC5pY29uLXJldHVybjpsYXN0LWNoaWxkLFxuLml0ZW0tbGlzdCAuaWNvbi11cmdlbnQ6bGFzdC1jaGlsZCxcbi5pdGVtLWxpc3QgLmljb24tdGltZW91dDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuLml0ZW0tbGlzdC10aXAge1xuICBoZWlnaHQ6IDcwcHg7XG4gIGxpbmUtaGVpZ2h0OiA2MHB4O1xuICBjb2xvcjogI2I0YjRiNDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc3RhdHVzLW5ldy10YWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDEwO1xuICA+IC50YWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogLTMycHg7XG4gICAgYm90dG9tOiAyMnB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgfVxufVxuXG4udGltZS1zdGF0dXMge1xuICBmb250LXNpemU6IDEwcHg7XG4gIGNvbG9yOiAjOTk5O1xufVxuPC9zdHlsZT5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRiZTg4OWMxJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWIwYTMwOTI0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiY2IyNDY5ZThcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00MzA0MmYwZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiXSwic291cmNlUm9vdCI6IiJ9