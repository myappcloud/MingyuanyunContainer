(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-2de76192"],{"0e83":function(t,e,i){"use strict";i("ab53f")},"774b":function(t,e,i){"use strict";var a=i("d18d").a,o=(i("b225"),i("17cc")),n=Object(o.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?i("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[i("div",{staticClass:"pull-refresh"},[i("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?i("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?i("div",{staticClass:"page-loading"},[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?i("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=n.exports},"8dfa":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .item[data-v-40982cdb]{padding-right:0}[data-v-40982cdb] .app-radio{margin-top:5px}.zjapp .btn-detail[data-v-40982cdb]{position:relative;padding:0 20px;height:22px;line-height:22px;margin:4px 0;color:#8c8c8c;border-left:1px solid #d9d9d9}.zjapp .btn-detail[data-v-40982cdb]:before{position:absolute;content:"";width:100%;height:46px;top:-12px;left:0}',""])},9455:function(t,e,i){"use strict";i("f272")},"9d55":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},ab53f:function(t,e,i){var a=i("8dfa");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("4464da64",a,!0,{sourceMap:!1,shadowMode:!1})},b225:function(t,e,i){"use strict";i("ef48")},c62c:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .app-radio[data-v-2340da0b]{position:relative;line-height:20px;font-size:0}.zjapp .app-radio>*[data-v-2340da0b]{display:inline-block;vertical-align:middle}.zjapp .app-radio .app-radio-icon[data-v-2340da0b]{width:20px;height:20px;border:1px solid #d9d9d9;border-radius:20px}.zjapp .app-radio .app-radio-icon+*[data-v-2340da0b]{margin-left:10px;font-size:16px}.zjapp .app-radio .checked-icon[data-v-2340da0b]{position:relative;border:1px solid #4275e8}.zjapp .app-radio .checked-icon[data-v-2340da0b]:before{content:" ";background:#4275e8;display:inline-block;width:14px;height:14px;border-radius:20px;position:absolute;top:2px;left:2px}',""])},d18d:function(t,e,i){"use strict";(function(t){i("2b45");var a,o=i("4360"),n=i("48f4"),s=i("162a"),r=i("e2a7"),l=i("a500"),c=i("6f9e"),u={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return o.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return o.a.state.global.isNumberInputOpen?o.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;c.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var i=e&&e.target,a=i&&i.tagName&&i.tagName.toLowerCase();if("input"===a||"textarea"===a){window.addEventListener("resize",(function e(){var a=i.getBoundingClientRect(),o=t.$el.getBoundingClientRect(),n=a.bottom-o.bottom;n>0&&t.scrollBy(n),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){c.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,i=this.$refs["scroll-warp"].scrollTop,a=this.$refs["scroll-warp"].scrollHeight;if(i+this.$refs["scroll-warp"].clientHeight>=a-5&&!this.loading&&this.hasNext){this.loading=!0;var o=this.$listeners.loadNext();o&&o.then&&"function"==typeof o.then?o.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(u&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,i=t.touches[0].clientY;return Math.abs(i-u.y)>Math.abs(e-u.x)&&Math.abs(i-u.y)>=3?i>u.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(u={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,i=t.touches[0].clientY,a=i-u.y,o=this.getTouchDiretion(t);"down"===o?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(a-u.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===o?this.pullDist>0&&(this.pullDist=u.pullDist-(u.y-i),t.preventDefault()):this.pullDist=u.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(u={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,i=this.pullDist,a=t,o=a-i,n=i;return i===a?Promise.resolve():new Promise((function(t){!function s(){window.requestAnimationFrame((function(){n+=o/6,e.pullDist=n,i<a&&n<a||i>a&&n>a?s():(e.pullDist=a,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=n.default.getCurrentModuleCode(),i=n.default.getCurrentRoute(),a=i.meta&&i.meta.isTodo;if(n.default.isModuleNeedBuilding(e)&&!a){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return l.a.addTrack("公共-手动下拉刷新","",""),s.a.beginManualUpdate(),n.default.checkSync(t).then((function(t){return s.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?r.a.alert("当前网络无法同步数据"):r.a.alert(t),s.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,o=this.getScrollTop(),n=o+t,s=Math.round(i/16.7),r=t/s,l=o,c=a=+new Date;return o===n?Promise.resolve():new Promise((function(t){!function i(){window.requestAnimationFrame((function(){c===a&&(l+=r,e.$refs["scroll-warp"].scrollTop=l,o<n&&l<n||o>n&&l>n?i():(e.$refs["scroll-warp"].scrollTop=n,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,i=this.getScrollTop(),a=t-i;return this.scrollBy(a,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,i=(t=t.$el?t.$el:t).getBoundingClientRect(),a=this.$refs["scroll-warp"].getBoundingClientRect();if(i&&a){var n=document.documentElement.clientHeight-(o.a.state.global.isNumberInputOpen?e:0),s=a.bottom<n?a.bottom:n,r=a.top-i.top,l=i.bottom-s;r>0?this.scrollBy(-r-10):l>0&&this.scrollBy(l+10)}},isCurrent:function(e,i){var a=this;e.length&&t.each(e,(function(t){t._uid===i?a.isCurrKeyboard=!0:a.isCurrent(t.$children,i)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,i("391c"))},dc52:function(t,e,i){"use strict";var a={props:{text:{type:String,default:""},checked:{type:Boolean,default:!1},changeRadio:{type:Function,default:function(){return 0}}},data:function(){return{status:!1}},watch:{checked:function(t){this.status=t}},created:function(){this.status=this.checked},methods:{clickEvent:function(){this.status=!0,this.$emit("changeRadio",this.status)}}},o=(i("9455"),i("17cc")),n=Object(o.a)(a,(function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"app-radio",on:{click:this.clickEvent}},[e("span",{class:{"app-radio-icon":!0,"checked-icon":this.status}}),this.text?e("span",[this._v(this._s(this.text))]):e("span",[this._t("default")],2)])}),[],!1,null,"2340da0b",null);e.a=n.exports},e670:function(t,e,i){"use strict";i.r(e);var a=i("e72d").a,o=(i("0e83"),i("17cc")),n=Object(o.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("page-content",{attrs:{title:"检查批次","show-go-root":!0,"on-close":t.backEvent}},[t.hasNewBatchRights?i("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:t.addNew},slot:"header-bar-right"},[t._v("\n    新建\n  ")]):t._e(),i("scroller",{attrs:{"is-empty":!t.batchList.length,"has-next":t.listLimit<t.batchList.length},on:{pullDown:t.init,loadNext:t.pageLoad}},[t._l(t.batchListShow,(function(e){return i("item",{key:e.id,attrs:{border:"bottom"},on:{click:function(i){t.selectBatch(e)}}},[i("app-radio",{attrs:{checked:e.id===t.curBatch.id}}),i("div",{staticClass:"item-text"},[t._v(t._s(e.name))]),i("div",{staticClass:"btn-detail",on:{click:function(i){i.stopPropagation(),t.batchDetail(e)}}},[t._v("\n        详情\n      ")])],1)})),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.isLoading&&!t.batchList.length,"empty-text":"这里暂无批次"}})],2)],1)}),[],!1,null,"40982cdb",null);e.default=n.exports},e72d:function(t,e,i){"use strict";(function(t){i("f548"),i("ed63"),i("8cf2"),i("e697"),i("6a61");var a,o,n=i("2e91"),s=i("774b"),r=i("07d2"),l=i("dc52"),c=i("3bd5"),u=i("6e1b"),p=i("3516"),h=(i("6144"),i("7bac"));e.a={name:"SpecialInspectBatchList",components:{Scroller:s.a,Item:r.a,appRadio:l.a},data:function(){return{isLoading:!0,user:c.a.getUser(),hasNewBatchRights:!1,batchList:[],curBatch:{},listLimit:20,queryProjId:""}},computed:{projId:function(){return this.$store.state.global.currentProject.id},batchLocalStorageKey:function(){return"SpecialInspectBatchStorageKey-"+this.$store.state.global.currentProject.id},batchListShow:function(){return this.batchList&&this.batchList.length?this.batchList.slice(0,this.listLimit):[]}},activated:function(){this.init()},methods:{init:function(){var t=this;return this.getBatchList().then((function(){return t.getCurBatch()})).then((function(){return p.a.checkUserBatchRights(t.user.user_id).then((function(e){t.hasNewBatchRights=!!e}))})).catch((function(t){console.error(t)}))},getBatchList:function(){var t=this;return this.projId!==this.queryProjId&&(this.batchList=[],this.isLoading=!0),u.a.getSpecialInspectBatch(this.projId,this.user.user_id).then((function(e){t.batchList=e,t.isLoading=!1,t.queryProjId=t.projId}))},getCurBatch:(o=Object(n.a)(regeneratorRuntime.mark((function e(){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h.a.getUserKey(this.batchLocalStorageKey);case 2:(i=e.sent)&&i.proj_id===this.projId?this.curBatch=t.find(this.batchList,{id:i.id})||this.batchList[0]:this.curBatch=this.batchList[0];case 4:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)}),pageLoad:function(){this.listLimit=this.listLimit+20},backEvent:function(){this.$store.state.global.prevRouter.path.includes("/special-inspect-index")?this.$router.back():this.$router.replace("/special-inspect-index",!0)},addNew:function(){this.$router.push("/special-inspect-batch-add")},batchDetail:function(t){this.$router.push("/special-inspect-batch-detail/".concat(t.id))},selectBatch:(a=Object(n.a)(regeneratorRuntime.mark((function t(e){var i=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.curBatch=e,t.next=3,h.a.saveUserObject(this.batchLocalStorageKey,e);case 3:window.setTimeout((function(){i.$router.go(-1)}),300);case 4:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})}}}).call(this,i("391c"))},ef48:function(t,e,i){var a=i("9d55");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("a1a65c0c",a,!0,{sourceMap:!1,shadowMode:!1})},f272:function(t,e,i){var a=i("c62c");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("6a97aac3",a,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,