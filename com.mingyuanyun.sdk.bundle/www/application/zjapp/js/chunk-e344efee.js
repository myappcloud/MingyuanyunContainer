(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-e344efee"],{"0748":function(t,e,a){"use strict";a("3cc7")},2964:function(t,e,a){"use strict";(function(t){a("5ab2"),a("6d57"),a("e10e"),a("f548");var o,n=a("28f8"),i=(a("6a61"),a("2e91")),s=(a("cc57"),a("f7ab")),r=a("774b"),c=a("f546"),l=a("efa7"),d=a("d623"),u=a("7bac"),p=a("a7c3"),f=a("aab3"),h=a("49ca"),b=a("7cb8"),g=a("b61f");function m(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}function v(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?m(Object(a),!0).forEach((function(e){Object(n.a)(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}e.a={name:"WaterPouringTest",components:{SynchronizeTipBar:s.a,Scroller:r.a,StatusTotalBar:c.a,PlaceList:l.a,DropDownSelect:d.a},data:function(){return{isLoading:!0,projId:"",placeOptions:[],place:[],floorList:[],total:[],finished:0,qualified:0,unqualified:0,batchPlaceOptions:[]}},computed:{placeText:function(){return this.isLoading?"...":t.isEmpty(this.place)?"请选择":this.place[1].name}},activated:function(){this.projId=this.$store.state.global.currentProject.id,this.init()},methods:{init:(o=Object(i.a)(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getPlaceOptions();case 2:return t.next=4,this.getPlace();case 4:return t.next=6,this.getFloorList();case 6:return t.next=8,this.getBatchFloorList();case 8:this.isLoading=!1,console.log("首页加载...");case 10:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)}),getPlaceOptions:function(){var e=this;return this.projId?f.a.getSectionAndBuildings(this.projId).then((function(a){e.placeOptions=t.map(a,(function(e){var a=v(v({},e),{},{children:t.map(e.buildings,(function(t){return v({},t)}))});return delete a.buildings,a}))})).catch((function(t){console.error(t)})):Promise.resolve()},setPlace:function(t){var e=this;return u.a.saveUserObject(p.a.WATER_POURING_TEST_BUILDING+this.projId,t).then((function(){e.place=t,e.getFloorList(),e.getBatchFloorList()}))},getPlace:function(){var t=this;return u.a.getUserObject(p.a.WATER_POURING_TEST_BUILDING+this.projId).then((function(e){console.log({cacheData:e});var a=e||[],o=[];Object(b.k)(a,t.placeOptions)?o=a:(o=Object(b.h)(t.placeOptions),u.a.saveUserObject(p.a.WATER_POURING_TEST_BUILDING+t.projId,o)),t.place=o}))},getFloorList:function(){var e=this,a=this.place[1]?this.place[1].id:"",o=this.place[1].units||[],n=[],i=0,s=0,r=0,c=Promise.resolve();return t.isEmpty(o)?f.a.getFloorListWithRooms(a,"").then((function(a){var o=t.map(a,(function(t){var e=v(v({},t),{},{name:t.floorName,children:t.rooms});return delete e.rooms,e}));return e.getTotal(o,"")})).then((function(t){e.floorList=t.floorList,i=t.finished,s=t.qualified,r=t.unqualified,e.total=[{status:"待验收",total:i,color:"orange"},{status:"不合格",total:r,color:"red"},{status:"合格",total:s,color:"green"}]})).catch((function(t){console.error(t)})):(t.each(o,(function(o){c=c.then((function(){return f.a.getFloorListWithRooms(a,o.id||"").then((function(a){var n=t.map(a,(function(t){var e=v(v({},t),{},{name:o.id.replace("单元","")+"单元"+t.floorName,children:t.rooms});return delete e.rooms,e}));return e.getTotal(n,o.id||"")})).then((function(t){n=n.concat(t.floorList),i+=t.finished,s+=t.qualified,r+=t.unqualified})).catch((function(t){console.error(t)}))}))})),c.then((function(){e.floorList=n,e.total=[{status:"待验收",total:i,color:"orange"},{status:"不合格",total:r,color:"red"},{status:"合格",total:s,color:"green"}]})))},getTotal:function(e,a){var o=this.place[1]?this.place[1].id:"";return h.a.getTestStatusData(o,a).then((function(a){var o=t.groupBy(a,"room_id"),n=0,i=0,s=0;return t.each(e,(function(e){t.each(e.children,(function(t){if(o[t.id]){var e=o[t.id][0];t.status=e.status,t.testId=e.id}else t.status="",t.testId="";"待验收"===t.status&&(n+=1),"合格"===t.status&&(i+=1),"不合格"===t.status&&(s+=1)}))})),{floorList:e,finished:n,qualified:i,unqualified:s}})).catch((function(t){console.error(t)}))},getBatchFloorList:function(){var t=this,e=this.place[1]?this.place[1].id:"";h.a.getBatchRooms2(e).then((function(e){t.batchPlaceOptions=e,console.log(e)}))},enterBatchDetail:function(){var t=this;console.log("开始传值");var e=this.place[1]&&this.place[1].units&&this.place[1].units.length?"unit-floor-room":"floor-room";g.a.openPopup({title:"选择覆盖部位",type:e,options:this.batchPlaceOptions,selected:[],rightBtn:"确定",rightBtnEvent:function(e){return console.log("PlaceListDialog - data:",e),u.a.saveUserObject(p.a.WATER_POURING_TEST_SEL_ROOMS,e).then((function(){var e={bidsection_id:t.place[0].id,building_id:t.place[1].id};return t.$router.push({name:"WaterPouringTestEdit",query:e})}))}})},dreachRecord:function(){this.$router.push({name:"WaterPouringTestRecord"})},gotoDetail:function(t){var e=this;console.log(t);var a={bidsection_id:this.place[0].id,building_id:t.building_id,building_name:(this.place[1]||{}).name,unit:t.unit,floor:Object(b.a)(t.floor,"层"),room_id:t.id,room_name:t.name,status:t.status};"合格"===t.status||"不合格"===t.status?this.$router.push({name:"WaterPouringTestRecordDetail",query:v(v({},a),{},{isRoomEntry:!0})}):u.a.saveUserObject(p.a.WATER_POURING_TEST_SEL_ROOMS,[t]).then((function(){e.$router.push({name:"WaterPouringTestEdit",query:a})}))}}}}).call(this,a("391c"))},"394b":function(t,e,a){var o=a("8d4c");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("a723c790",o,!0,{sourceMap:!1,shadowMode:!1})},"3cc7":function(t,e,a){var o=a("44a1");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("12a96fd8",o,!0,{sourceMap:!1,shadowMode:!1})},"44a1":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .multiple-place-content[data-v-4b9b8166]{z-index:99999;max-height:134px;border-bottom:1px solid #ececec;overflow:auto;scroll-behavior:smooth}.zjapp .multiple-place-content.-fixed[data-v-4b9b8166]{position:absolute;left:0;right:0;top:0}.zjapp .selected[data-v-4b9b8166]{position:relative;display:flex;padding:13px 15px;font-size:15px;background-color:#fff;overflow:scroll}.zjapp .selected label[data-v-4b9b8166]{margin-right:10px;color:#999;white-space:nowrap}.zjapp .select-wrap[data-v-4b9b8166]{flex:1;background-color:#fff;overflow:auto;scroll-behavior:smooth}.zjapp .van-collapse[data-v-4b9b8166] .van-cell{align-items:center}.zjapp .van-collapse[data-v-4b9b8166] .icon{margin-right:10px;vertical-align:middle}.zjapp .van-collapse[data-v-4b9b8166] .van-collapse-item__content{padding:0}.zjapp .group.-border-bottom[data-v-4b9b8166]{border-bottom:1px solid #ececec}.zjapp .group-name[data-v-4b9b8166]{font-size:14px;color:#999;height:34px;padding-top:15px}.zjapp .element-list[data-v-4b9b8166]{display:flex;flex-wrap:wrap}.zjapp .element[data-v-4b9b8166]{min-width:75px;height:28px;line-height:28px;text-align:center;margin:10px 6px 10px 0;padding:0 10px;background:#fff;border-radius:100px;color:#333;font-size:14px;border:1px solid #dcdcdc}.zjapp .element.-disabled[data-v-4b9b8166]{background:#ececec;color:#999;border-color:#ececec}.zjapp .element.-checked[data-v-4b9b8166]{background:#4275e8;color:#fff;border-color:#4275e8}",""])},"5b85":function(t,e,a){var o=a("e2a8");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("45a0f20c",o,!0,{sourceMap:!1,shadowMode:!1})},"65e9":function(t,e,a){"use strict";(function(t){a("5ab2"),a("6d57"),a("e10e");var o=a("28f8"),n=a("4360"),i=a("48f4"),s=a("162a"),r=a("f2d3"),c=a("6906"),l=a("a18c"),d=a("c745");function u(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?u(Object(a),!0).forEach((function(e){Object(o.a)(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}e.a={name:"SynchronizeTipBar",props:{isTodo:{type:Boolean},useDownload:{type:Boolean,default:!0},enterDoCheck:{type:Boolean,default:!0},buildingId:{type:String,default:""},automaticUpdateCallback:{type:Function,default:null}},data:function(){return{currentModuleCode:"",oneUpdateData:!0}},computed:{projId:function(){return n.a.state.global.currentProject.id},waitUploadNum:function(){return n.a.state.global.waitUploadNum},hasTopProgress:function(){return n.a.state.global.hasTopProgress},hasChanged:function(){if(!this.useDownload)return!1;if(this.currentModuleCode){var t,e=i.default.isModuleNeedBuilding(this.currentModuleCode)&&!this.isTodo;return!(e&&!this.buildingId)&&(t=this.isTodo?n.a.state.global.todoChangedStatus||{}:n.a.state.global.businessChangedStatus||{},e?!!t[this.currentModuleCode]&&t[this.currentModuleCode][this.buildingId]:t[this.currentModuleCode])}return!1},show:function(){return(this.hasChanged||this.waitUploadNum)&&!this.hasTopProgress},oneDataSync:function(){return this.$store.state.app.oneDataSync}},watch:{hasChanged:function(t){var e=this;t&&this.$nextTick((function(){setTimeout((function(){var t=e.$refs["synchronize-tip-bar"];if(t&&t.style){t.style.display="none";var a=t.offsetHeight;t.style.display="block",$log.log(a)}}),100)}))},buildingId:function(t){this.currentModuleCode&&i.default.isModuleNeedBuilding(this.currentModuleCode)&&t&&(console.log("楼栋重新加载，是否再次自动加载数据：",this.oneUpdateData),this.oneUpdateData&&this.automaticLogic(),this.checkSync())},show:function(t){t?this.$emit("show"):this.$emit("hide")}},activated:function(){this.init()},methods:{init:function(){this.getCurrentModuleCode(),this.enterDoCheck&&!l.a.isBack&&this.checkSync(),this.automaticLogic()},automaticLogic:function(){var t=this;this.$router.isBack||(this.oneUpdateData=!0,d.a.getAutomaticLoadData().then((function(e){$log.log("是否要自动加载 ===> ",e&&t.oneDataSync&&"function"==typeof t.automaticUpdateCallback),e&&t.oneDataSync&&"function"==typeof t.automaticUpdateCallback&&t.dataSync().then((function(e){console.log("是否需要初始化页面 ====> ",Boolean(e)),e&&t.automaticUpdateCallback()}))})))},getCurrentModuleCode:function(){var t=i.default.getCurrentModuleCode(),e=this.isTodo?"todo":"";this.currentModuleCode=t||e},checkSync:function(){var e=this,a="checkDataUpdate",o=this.currentModuleCode,s=this.buildingId,l=n.a.state.global.isLeader?this.projId:"";return!i.default.isModuleNeedBuilding(o)||s||this.isTodo?(this.isTodo&&(a+="_todo"),o&&(a+="_".concat(o)),s&&(a+="_".concat(s)),c.a.execAfterInterval(120,a).then((function(){return e.isTodo?"todo"===o?r.a.getModuleList().then((function(e){var a=t.map(e,"code");return i.default.hasTodoChangedData("",a)})):i.default.hasTodoChangedData("",[o]):i.default.hasBusinessChangedData(l,[o],s)})).then((function(t){if(e.isTodo){var a=p({},n.a.state.global.todoChangedStatus);a[o]=t,n.a.commit("global/SET_TODO_CHANGED_STATUS",a)}else{var i=p({},n.a.state.global.businessChangedStatus);if(s){var r=i[o]?i[o]:{};r[s]=t,i[o]=r}else i[o]=t;n.a.commit("global/SET_BUSINESS_CHANGED_STATUS",i)}})).catch((function(t){return t&&!0===t.timeNotTo?($log.debug(t.msg),!1):$q.reject(t)}))):Promise.resolve()},dataSync:function(){var t=this.currentModuleCode,e=this.buildingId,a=i.default.isModuleNeedBuilding(t),o=a&&!e;return $log.log("模块名：",t," 楼栋id：",e," 当前模块是否需要楼栋id：",a," 判断是否终止自动更新：",o),o?Promise.resolve():(this.oneUpdateData=!1,s.a.beginManualUpdate(),i.default.checkSync(e).then((function(t){return s.a.endManualUpdate(),t})).catch((function(t){$log.error("自动更新错误",t),s.a.endManualUpdate()})))}}}}).call(this,a("391c"))},"7c9b":function(t,e,a){"use strict";(function(t){a("e204"),a("f548"),a("6d57"),a("cc57"),a("c904");var o=a("e89f"),n=a("1df9"),i=a("774b"),s=a("e2a7"),r=a("7cb8");e.a={components:{PageContent:n.a,Scroller:i.a},mixins:[o.a],data:function(){return{show:!1,title:"",options:[],actionTabs:[],mapSelectedItems:[],selectedResult:"",optionsMap:{},statusMap:{},autoSuffix:!0,nameKeys:{"unit-floor-room":[{id:"unit",name:"unit_name",children:"floors"},{id:"floor",name:"floor_name",children:"rooms"},{name:"room_name"}],"floor-room":[{id:"floor",name:"floor_name",children:"rooms"},{name:"room_name"}],"unit-floor":[{id:"unit",name:"unit_name",children:"floors"},{id:"floor",name:"floor_name"}],floor:[{id:"floor",name:"floor_name"}]}}},computed:{selectedResultText:function(){return t.clone(this.mapSelectedItems).sort((function(t,e){return t.order-e.order})).reduce((function(t,e){return t+="、"+e.name}),"").substring(1)}},mounted:function(){window.dialogTest=this},methods:{initData:function(t){var e=this;this.actionTabs=[],this.mapSelectedItems=[],this.selectedResult="",this.options=t||[],"floor"===this.type&&this.options.floors&&(this.options=this.options[0].floors);var a=this.traversOptions(this.options);if("floor"===this.type){var o=0,n=[];for(var i in this.statusMap)this.statusMap[i].pid="allfloors",this.statusMap[i].disabled||(o+=2),n.push(i);var s=!1;0===o&&(s=!0),this.statusMap.allfloors={id:"allfloors",status:"0",total:o,countChecked:0,children:n,disabled:s}}a.forEach((function(t){e.toggleItem(t.id,!0)}))},traversOptions:function(t){var e=this,a={},o={},n=[],i=this.nameKeys[this.type],s=0;function c(t){var i=t.val,r=t.mapId,c=t.parentId,d=t.childrenKey,u=t.isChecked,p=t.isForceChecked,f=t.isDisabled;a[r]=i;var h=c?o[c].name:"",b={id:r,status:"0",order:s++,originName:i.name,disabled:f,isForceChecked:p,name:e.autoSuffix?(h+i.name).replace(/单元.*层(.)/,"单元$1"):h+i.name};if(o[r]=b,d&&(b.total=i[d]?2*i[d].filter((function(t){return!l(t)})).length:0,0===b.total&&(b.disabled=!0),b.countChecked=0),c){b.pid=c;var g=o[c];g.children||(g.children=[]),g.children.push(r)}i.status&&(b.statusText=i.status),u&&n.push(b)}function l(t){return!!(t.used||t.disabled||t.status&&!t.checked)}return function t(a){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(Array.isArray(a)&&a.length){var s=n?n+"-":"",d=o===i.length-1;a.forEach((function(a){var u=i[o];a.name||(a.name=a[u.name]||""),a.id||(a.id=a[u.id]),e.autoSuffix&&(a.hasOwnProperty("floors")&&(a.name=Object(r.a)(a.name,"单元")),a.hasOwnProperty("rooms")&&(a.name=Object(r.a)(a.name,"层")));var p=!1;d&&l(a)&&(p=!0);var f=!1,h=!1;d&&((f=a.checked||!1)&&(h=!0),~e.selected.findIndex((function(t){return"unit-floor"===e.type?t.id===a.id&&t.unit===a.unit:t.id===a.id}))&&(h=!0));var b=s+a.id,g=u.children;c({val:a,mapId:b,parentId:n,childrenKey:g,isChecked:h,isForceChecked:f,isDisabled:p}),g&&t(a[g],o+1,b)}))}}(t),this.optionsMap=a,this.statusMap=o,n},openPopup:function(t){this.show=!0,this.title=t.title,this.selected=t.selected,this.onSelect=t.onSelect,this.rightBtn=t.rightBtn,this.type=t.type,this.rightBtnEvent=t.rightBtnEvent,this.autoSuffix=!1!==t.autoSuffix,this.initData(t.options),this.$emit("open")},closePopup:function(){this.show=!1,this.$emit("close")},_handlerItemSelected:function(t,e){if(!t.total){var a=this.mapSelectedItems.indexOf(t);e?~a&&this.mapSelectedItems.splice(a,1):~a||this.mapSelectedItems.push(t)}},toggleItem:function(t,e){var a=this,o=this.statusMap;var n=o[t];if(!e&&n.isForceChecked||n.disabled)n.statusText&&!e&&s.a.alert(n.statusText);else{var i,r=n.status;(function t(e,i){var s=o[e];s.status=i,"2"===i&&s.total?s.countChecked=s.total:s.countChecked=0,s.hasOwnProperty("children")?s.children.length&&s.children.forEach((function(e){a.optionsMap[e].checked||t(e,i)})):n.isForceChecked||s.disabled||a._handlerItemSelected(s,"0"===i)})(t,i="2"===r?"0":"2"),function t(e,a){var n=o[e].pid;if(n){var i=o[n],s=function(t,e){var a=t.status,o=t.total;t.countChecked=t.countChecked+e;var n=t.countChecked;switch(!0){case 0===n:t.status="0";break;case n<o:t.status="1";break;case n===o:t.status="2";break;default:$log.error("something is wrong on @toggleItem: current pItem's pCountChecked: ".concat(n,", pTotal: ").concat(o))}return t.status-a}(i,a);0!==s&&t(i.id,s)}}(t,i-r)}},mapStatusToClass:function(t,e){if(this.statusMap[t].disabled)return"-disabled";return["","-indeterminate","-checked"][this.statusMap[t].status]},onRightBtnEvent:function(){var e=this;if(t.isEmpty(this.mapSelectedItems)){if("room"===this.type.substr(-4))return s.a.alert("请选择房间");if("floor"===this.type.substr(-5))return s.a.alert("请选择楼层")}var a=[];this.mapSelectedItems.forEach((function(t){a.push(e.optionsMap[t.id])})),this.rightBtnEvent(a),this.show=!1}}}}).call(this,a("391c"))},"8d4c":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .synchronize-tip-bar[data-v-aaf184a8]{height:30px;padding:5px 15px;line-height:20px;text-align:center;background-color:#ffe6e6;color:#ff6060;font-size:14px}.zjapp .synchronize-tip-bar .icon-caution[data-v-aaf184a8]{line-height:20px;margin-right:5px}@media screen and (-webkit-min-device-pixel-ratio:1){.zjapp .synchronize-tip-bar[data-v-aaf184a8]{border:none;background-image:linear-gradient(0deg,#ffd3d3,#ffd3d3 100%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}}@media screen and (-webkit-min-device-pixel-ratio:1.5){.zjapp .synchronize-tip-bar[data-v-aaf184a8]{border:none;background-image:linear-gradient(0deg,#ffd3d3,#ffd3d3 66.6667%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}}@media screen and (-webkit-min-device-pixel-ratio:2){.zjapp .synchronize-tip-bar[data-v-aaf184a8]{border:none;background-image:linear-gradient(0deg,#ffd3d3,#ffd3d3 50%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}}@media screen and (-webkit-min-device-pixel-ratio:2.625){.zjapp .synchronize-tip-bar[data-v-aaf184a8]{border:none;background-image:linear-gradient(0deg,#ffd3d3,#ffd3d3 38.0952%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}}@media screen and (-webkit-min-device-pixel-ratio:3){.zjapp .synchronize-tip-bar[data-v-aaf184a8]{border:none;background-image:linear-gradient(0deg,#ffd3d3,#ffd3d3 33.3333%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}}@media screen and (-webkit-min-device-pixel-ratio:4){.zjapp .synchronize-tip-bar[data-v-aaf184a8]{border:none;background-image:linear-gradient(0deg,#ffd3d3,#ffd3d3 25%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}}",""])},a7b6:function(t,e,a){"use strict";a("394b")},b61f:function(t,e,a){"use strict";var o=a("329b"),n=a("7c9b").a,i=(a("0748"),a("17cc")),s=Object(i.a)(n,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("transition",{attrs:{name:"slide-right"}},[t.show?a("page-content",{attrs:{title:t.title,mode:"dialog","on-close":t.closePopup}},[t.rightBtn?a("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:t.onRightBtnEvent},slot:"header-bar-right"},[t._v("\n      "+t._s(t.rightBtn)+"("+t._s(t.mapSelectedItems.length)+")\n    ")]):t._e(),a("div",{staticClass:"multiple-place-content"},[a("div",{staticClass:"selected"},[a("label",[t._v("已选:")]),a("div",{staticClass:"text"},[t._v("\n          "+t._s(t.selectedResultText)+"\n        ")])])]),a("div",{staticClass:"multiple-place-content -fixed"},[a("div",{staticClass:"selected"},[a("label",[t._v("已选:")]),a("div",{staticClass:"text"},[t._v("\n          "+t._s(t.selectedResultText)+"\n        ")])])]),a("div",{staticClass:"select-wrap"},["unit-floor-room"===t.type?a("van-collapse",{model:{value:t.actionTabs,callback:function(e){t.actionTabs=e},expression:"actionTabs"}},t._l(t.options,(function(e){return a("van-collapse-item",{key:e.id,staticClass:"section",attrs:{name:e.id}},[a("strong",{attrs:{slot:"title"},on:{click:function(a){a.stopPropagation(),t.toggleItem(e.id)}},slot:"title"},[a("icon",{attrs:{slot:"icon",name:"checkbox-square"+t.mapStatusToClass(e.id)},slot:"icon"}),t._v(t._s(e.name))],1),t._l(e[t.nameKeys[t.type][0].children],(function(o){return a("div",{key:o.id,staticClass:"group pl40 pr15  -border-bottom"},[a("div",{staticClass:"group-name"},[t._v(t._s(o.name))]),a("div",{staticClass:"element-list"},[a("div",{staticClass:"element -all",class:t.mapStatusToClass([e.id,o.id].join("-"),o),on:{click:function(a){t.toggleItem([e.id,o.id].join("-"))}}},[t._v("\n                  全选\n                ")]),t._l(o[t.nameKeys[t.type][1].children],(function(n){return a("div",{key:n.name,staticClass:"element",class:t.mapStatusToClass([e.id,o.id,n.id].join("-")),on:{click:function(a){t.toggleItem([e.id,o.id,n.id].join("-"))}}},[t._v("\n                  "+t._s(n.name)+"\n                ")])}))],2)])}))],2)}))):t._e(),"floor-room"===t.type?a("div",{staticClass:"section"},t._l(t.options,(function(e){return a("div",{key:e.id,staticClass:"group pl15 pr15"},[a("div",{staticClass:"group-name"},[t._v(t._s(e.name))]),a("div",{staticClass:"element-list"},[a("div",{staticClass:"element -all",class:t.mapStatusToClass(e.id,e),on:{click:function(a){t.toggleItem(e.id)}}},[t._v("\n              全选\n            ")]),t._l(e[t.nameKeys[t.type][0].children],(function(o){return a("div",{key:o.id,staticClass:"element mr15",class:t.mapStatusToClass([e.id,o.id].join("-")),on:{click:function(a){t.toggleItem([e.id,o.id].join("-"))}}},[t._v("\n              "+t._s(o.name)+"\n            ")])}))],2)])}))):t._e(),"floor"===t.type?a("div",{staticClass:"section"},[a("div",{staticClass:"group pl15 pr15"},[a("div",{staticClass:"group-name"},[t._v("全部")]),a("div",{staticClass:"element-list"},[a("div",{staticClass:"element mr15",class:t.mapStatusToClass("allfloors"),on:{click:function(e){t.toggleItem("allfloors")}}},[t._v("\n              全选\n            ")]),t._l(t.options,(function(e){return a("div",{key:e.name,staticClass:"element mr15",class:t.mapStatusToClass(e.id),on:{click:function(a){t.toggleItem(e.id)}}},[t._v("\n              "+t._s(e.name)+"\n            ")])}))],2)])]):t._e(),"unit-floor"===t.type?a("div",{staticClass:"section"},t._l(t.options,(function(e){return a("div",{key:e.name,staticClass:"group pl15 pr15"},[a("div",{staticClass:"group-name"},[t._v(t._s(e.name))]),a("div",{staticClass:"element-list"},[a("div",{staticClass:"element mr15",class:t.mapStatusToClass(e.id,e),on:{click:function(a){t.toggleItem(e.id)}}},[t._v("\n              全选\n            ")]),t._l(e[t.nameKeys[t.type][0].children],(function(o){return a("div",{key:o.name,staticClass:"element mr15",class:t.mapStatusToClass([e.id,o.id].join("-")),on:{click:function(a){t.toggleItem([e.id,o.id].join("-"))}}},[t._v("\n              "+t._s(o.name)+"\n            ")])}))],2)])}))):t._e(),t.options.length?t._e():a("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容"}})],1)]):t._e()],1)}),[],!1,null,"4b9b8166",null).exports,r=!1;r||(r=new(o.default.extend(s))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},e2a8:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'.zjapp .status-total-bar[data-v-be07cd9c]{display:flex;flex-direction:row;text-align:center}.zjapp .total-item[data-v-be07cd9c]{flex:1;line-height:20px;padding:10px 5px 0;color:#111;font-size:12px}.zjapp .total-status[data-v-be07cd9c]{white-space:nowrap}.zjapp .total-status[data-v-be07cd9c]:before{content:"";width:10px;height:10px;display:inline-block;vertical-align:top;margin:5px 5px 0 0;background-color:#ddd;border-radius:50%}.zjapp .total-status-orange[data-v-be07cd9c]:before{background-color:#fc8b01}.zjapp .total-status-orange2[data-v-be07cd9c]:before{background-color:#ff8e24}.zjapp .total-status-white2[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #dcdcdc}.zjapp .total-status-red[data-v-be07cd9c]:before{background-color:#ff3d3d}.zjapp .total-status-green[data-v-be07cd9c]:before{background-color:#0bc666}.zjapp .total-status-white[data-v-be07cd9c]:before{background-color:#fff}.zjapp .total-status-white-border[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #dcdcdc}.zjapp .total-status-blue[data-v-be07cd9c]:before{background-color:#4174e9}.zjapp .total-status-purple-border[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #796bfb}.zjapp .total-status-green-border[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #0bc666}.zjapp .status-total-bar.-abs-top-right[data-v-be07cd9c]{position:absolute;top:0;right:13px}.zjapp .status-total-bar.-abs-top-right .total-item[data-v-be07cd9c]{padding-left:3px;padding-right:3px}.zjapp .status-total-bar.-abs-top-right .total-status[data-v-be07cd9c]:before{margin-right:2px}',""])},e89f:function(t,e,a){"use strict";var o=a("04f3"),n=a("cf09"),i=a("4360"),s=0;e.a={name:"PopupMixin",data:function(){return{backButtonEvent:null}},watch:{show:function(t){var e=this;if(t){if(this.$nextTick((function(){e.$el&&e.$el.style&&(e.$el.style.zIndex=++n.a.zIndex,s++,i.a.commit("app/SET_HAS_POPUP",!!s))})),!this.backButtonEvent){var a=this.close||this.closePopup;this.backButtonEvent=Object(o.a)(a)}}else--s<0&&(s=0),i.a.commit("app/SET_HAS_POPUP",!!s),this.backButtonEvent&&(Object(o.c)(this.backButtonEvent),this.backButtonEvent=null)}},methods:{}}},f179:function(t,e,a){"use strict";a.r(e);var o=a("2964").a,n=a("17cc"),i=Object(n.a)(o,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"淋水试验"}},[a("synchronize-tip-bar",{attrs:{"automatic-update-callback":t.init}}),a("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:t.dreachRecord},slot:"header-bar-right"},[t._v("\n    淋水记录\n  ")]),a("drop-down-select",{staticClass:"bg-sub-theme border-bottom",attrs:{value:t.place,options:t.placeOptions,stage:2,"min-select-stage":2,"options-map":[{name:"标段"},{key:"children",name:"楼栋"}],"empty-text":["无标段","无楼栋"]},on:{onSelect:t.setPlace}},[a("div",{staticClass:"select-text"},[t._v(t._s(t.placeText))])]),a("scroller",{on:{pullDown:t.init}},[a("status-total-bar",{attrs:{data:t.total}}),a("place-list",{directives:[{name:"track",rawName:"v-track",value:"闭水试验-进入房间",expression:"'闭水试验-进入房间'"}],attrs:{data:t.floorList,"has-title":!0,"status-class":{"合格":"bg-green","不合格":"bg-red","待验收":"bg-orange"}},on:{click:t.gotoDetail}}),a("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.floorList||!t.floorList.length,"empty-text":t.place.building&&t.place.building.id?"没有楼层":"当前项目没有楼栋"}})],1),a("app-button-group",{attrs:{"fixed-bottom":""}},[a("app-button",{on:{click:t.enterBatchDetail}},[t._v("\n      批量淋水\n    ")])],1)],1)}),[],!1,null,null,null);e.default=i.exports},f546:function(t,e,a){"use strict";var o={name:"StatusTotalBar",props:{data:{type:Array,default:function(){return[]}},status:{type:String,default:"default"}},data:function(){return{}}},n=(a("f6de"),a("17cc")),i=Object(n.a)(o,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"status-total-bar"},t._l(t.data,(function(e,o){return a("div",{key:o,staticClass:"total-item"},["default"===t.status?[a("p",[a("span",{staticClass:"total-status",class:"total-status-"+e.color},[t._v("\n          "+t._s(e.status)+"\n        ")])]),a("p",[t._v("\n        "+t._s(e.total)+"\n      ")])]:t._e(),"laser-scanning"===t.status?[a("p",[a("span",{staticClass:"total-status",class:"total-status-"+e.color},[t._v("\n          "+t._s(e.status)+"\n        ")]),t._v("\n        ("+t._s(e.total)+")\n      ")])]:t._e()],2)})))}),[],!1,null,"be07cd9c",null);e.a=i.exports},f6de:function(t,e,a){"use strict";a("5b85")},f7ab:function(t,e,a){"use strict";var o=a("65e9").a,n=(a("a7b6"),a("17cc")),i=Object(n.a)(o,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return t.show?a("div",{ref:"synchronize-tip-bar",staticClass:"synchronize-tip-bar"},[a("icon",{attrs:{name:"caution"}}),t.waitUploadNum?a("span",[t._v("您有"+t._s(t.waitUploadNum)+"条数据待上传")]):t._e(),!t.waitUploadNum&&t.hasChanged?a("span",[t._v("有新数据")]):t._e(),t._v("\n  ，下拉可"+t._s(t.waitUploadNum?"上传":"刷新")+"\n")],1):t._e()}),[],!1,null,"aaf184a8",null);e.a=i.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,