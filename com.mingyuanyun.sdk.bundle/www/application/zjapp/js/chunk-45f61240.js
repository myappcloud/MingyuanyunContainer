(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-45f61240"],{"08d4":function(t,e,a){"use strict";a("3880")},"2c4c":function(t,e,a){"use strict";a.r(e);var o=a("7361").a,n=(a("f6c3"),a("17cc")),r=Object(n.a)(o,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{class:{"list-empty":t.isLoading||!t.listData||!t.listData.length}},[!t.isLoading&&t.listData.length?[t._m(0),a("tree-base",{attrs:{data:t.listData,"indent-size":10,"memory-open-set":!0,"default-open-level":1/0},on:{onClickNode:t.onClickNode},scopedSlots:t._u([{key:"left",fn:function(e){return a("div",{staticClass:"tree-text"},[t._v(t._s(e.data.template_name))])}},{key:"right",fn:function(e){return[a("div",{staticClass:"tree-weight"},[t._v(t._s(e.data.weight)+"%")]),a("div",{staticClass:"tree-score"},[t._v("\n          "+t._s(e.data.score||("检查完毕"===t.batchData.status&&"检查中"===e.data.status?"已甩项":""))+"\n        ")]),100===e.data.template_mode?a("icon",{staticClass:"tree-icon-tips",attrs:{name:"yiwen"},on:{click:function(a){a.stopPropagation(),t.formulaTips(e.data)}}}):t._e(),100!==e.data.template_mode?a("icon",{staticClass:"tree-icon-arrow",attrs:{name:"检查完毕"===t.batchData.status&&"检查中"===e.data.status?"":"arrow-right"}}):t._e()]}}])}),"检查完毕"===t.batchData.status?a("div",{staticClass:"p15 color-gray3 align-c"},[t._v("\n      "+t._s(t._f("formatDate")(t.batchData.modified_on))+" "+t._s(t.batchData.created_by_name)+" 提交检查完毕\n    ")]):t._e(),t.isBatchCreator&&"检查完毕"!==t.batchData.status?a("app-button-group",{staticClass:"mt20"},[a("app-button",{on:{click:t.submitBatch}},[t._v("\n        检查完毕并提交\n      ")])],1):t._e()]:t._e(),a("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.listData.length,"empty-text":"暂无数据"}})],2)}),[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tree-header border-bottom"},[e("div",{staticClass:"tree-header-template"},[this._v("评分表")]),e("div",{staticClass:"tree-header-weight"},[this._v("权重")]),e("div",{staticClass:"tree-header-score"},[this._v("得分")])])}],!1,null,"4499ded3",null);e.default=r.exports},3880:function(t,e,a){var o=a("b66d");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("1e2c6191",o,!0,{sourceMap:!1,shadowMode:!1})},"3c77":function(t,e,a){"use strict";a("9dd9"),a("f548");var o=a("28f8"),n=(a("163d"),a("7bac")),r=a("4360");n.a.getUserObject("tree-base-open-set-memory").then((function(t){r.a.commit("components/SET_TREE_BASE_OPEN_SET",t||{})}));var i={name:"TreeBase",props:{data:{type:Array,default:function(){return[]}},keyword:{type:String,default:""},level:{type:Number,default:0},iconPosition:{type:String,default:"left"},indentSize:{type:Number,default:14},memoryOpenSet:{type:Boolean,default:!1},defaultOpenLevel:{type:Number,default:0},hasSlotLeft:{type:Boolean,default:!1},hasSlotRight:{type:Boolean,default:!1},listStyle:{type:Object,default:function(){return{}}},nodeStyle:{type:Object,default:function(){return{}}},textStyle:{type:Object,default:function(){return{}}}},data:function(){return{selfOpenSet:{}}},computed:{openSet:function(){return this.memoryOpenSet?r.a.state.components.treeBaseOpenSet:this.selfOpenSet},showSlotLeft:function(){return this.level?this.hasSlotLeft:!!this.$scopedSlots.left},showSlotRight:function(){return this.level?this.hasSlotRight:!!this.$scopedSlots.right}},methods:{itemClick:function(t){if(t.children&&t.children.length){if(this.memoryOpenSet)!function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},r.a.state.components.treeBaseOpenSet,t);r.a.commit("components/SET_TREE_BASE_OPEN_SET",e),n.a.saveUserObject("tree-base-open-set-memory",e)}(Object(o.a)({},t.id,!this.isNodeOpen(t.id)));else this.$set(this.selfOpenSet,t.id,!this.isNodeOpen(t.id));this.$emit("onClickFoldNode",t)}else this.$emit("onClickEndNode",t);this.$emit("onClickNode",t)},isNodeOpen:function(t){return void 0===this.openSet[t]?this.level<this.defaultOpenLevel:this.openSet[t]},onClickNode:function(t){this.$emit("onClickNode",t)},onClickFoldNode:function(t){this.$emit("onClickFoldNode",t)},onClickEndNode:function(t){this.$emit("onClickEndNode",t)},keywordFilter:function(t){return this.keyword?t.replace(new RegExp(this.keyword,"gm"),'<span class="color-blue">'+this.keyword+"</span>"):t}}},c=(a("08d4"),a("17cc")),l=Object(c.a)(i,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"tree-con"},t._l(t.data,(function(e){return a("div",{key:e.id,staticClass:"tree-list",style:Object.assign({},t.listStyle["level-all"],t.listStyle["level-"+t.level])},[a("div",{staticClass:"tree-node border-bottom",class:"tree-node-level-"+t.level,style:Object.assign({},t.nodeStyle["level-all"],t.nodeStyle["level-"+t.level]),on:{click:function(a){t.itemClick(e)}}},[a("div",{staticClass:"tree-indent",style:{width:t.indentSize*t.level+"px"}}),"left"===t.iconPosition?a("div",{staticClass:"tree-icon",class:{"icon-dropdown":e.children&&e.children.length&&(void 0===t.openSet[e.id]?t.level<t.defaultOpenLevel:t.openSet[e.id]),"icon-dropright":e.children&&e.children.length&&!(void 0===t.openSet[e.id]?t.level<t.defaultOpenLevel:t.openSet[e.id])}}):t._e(),a("div",{staticClass:"tree-main"},[t.showSlotLeft?t._t("left",null,{data:e}):a("div",{staticClass:"tree-text",style:Object.assign({},t.textStyle["level-all"],t.textStyle["level-"+t.level]),domProps:{innerHTML:t._s(t.keywordFilter(e.name))}})],2),t.showSlotRight?t._t("right",null,{data:e}):t._e(),"right"===t.iconPosition&&e.children&&e.children.length?a("icon",{staticClass:"icon-right",attrs:{name:(void 0===t.openSet[e.id]?t.level<t.defaultOpenLevel:t.openSet[e.id])?"arrow-up":"arrow-down"}}):t._e()],2),t._t("siblings",null,{data:e}),e.children&&e.children.length&&(void 0===t.openSet[e.id]?t.level<t.defaultOpenLevel:t.openSet[e.id])?[a("tree-base",{key:"children-"+e.id,attrs:{data:e.children,level:t.level+1,keyword:t.keyword,"default-open-level":t.defaultOpenLevel,"memory-open-set":t.memoryOpenSet,"icon-position":t.iconPosition,"has-slot-left":t.showSlotLeft,"has-slot-right":t.showSlotRight,"indent-size":t.indentSize,"list-style":t.listStyle,"node-style":t.nodeStyle,"text-style":t.textStyle},on:{onClickNode:t.onClickNode,onClickFoldNode:t.onClickFoldNode,onClickEndNode:t.onClickEndNode},scopedSlots:t._u([{key:"left",fn:function(e){return[t._t("left",null,{data:e.data})]}},{key:"right",fn:function(e){return[t._t("right",null,{data:e.data})]}},{key:"siblings",fn:function(e){return[t._t("siblings",null,{data:e.data})]}}])})]:t._e()],2)})))}),[],!1,null,"0083fc0a",null);e.a=l.exports},"4aef":function(t,e,a){"use strict";var o=a("dd16").a,n=a("17cc"),r=Object(n.a)(o,(function(){var t=this.$createElement;return(this._self._c||t)("span",{class:this.classSet[this.status]},[this._v(this._s(this.text||this.status))])}),[],!1,null,null,null);e.a=r.exports},"58fc":function(t,e,a){var o=a("fa68");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("8a3ef548",o,!0,{sourceMap:!1,shadowMode:!1})},7361:function(t,e,a){"use strict";(function(t){a("5ab2"),a("e10e");var o=a("28f8"),n=(a("6d57"),a("06a2"),a("07d2")),r=a("3c77"),i=a("4aef"),c=a("6e1b"),l=(a("37d5"),a("3516")),s=a("48f4"),d=a("e2a7"),h=a("3bd5"),p=a("7cb8"),u=a("fc33");function f(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}var g=h.a.getUser();e.a={name:"IndexList",components:{Item:n.a,StatusText:i.a,TreeBase:r.a},props:{batchId:{type:String}},data:function(){return{isLoading:!1,batchData:{},listData:[],routeBatchId:"",isBatchCreator:!1,isBatchChecker:!1,editable:!1}},watch:{batchId:{handler:function(t){t?this.init():(this.batchData={},this.listData=[])},immediate:!0}},created:function(){this.$on("reload",this.init)},activated:function(){this.routeBatchId=this.$route.query.batch_id,this.init()},methods:{init:function(){var t=this;return Promise.all([this.getBatchData(),this.getListData()]).finally((function(){t.isLoading=!1,t.$emit("loaded",t.listData)})).catch((function(e){$log.error(e),t.batchData={},t.listData=[],t.isLoading=!1}))},getBatchData:function(){var e=this;return this.batchId?c.a.getSpecialInspectBatchById(this.batchId).then((function(t){e.batchData=t,e.isBatchCreator=t.created_by===g.user_id})).then((function(){return Promise.resolve().then((function(){var a=e.batchData.root_id||e.batchData.parent_id||e.batchData.id;return l.a.getBatchUsers(a).then((function(a){var o=h.a.getUser().user_id;e.isBatchChecker=t.some(a,{user_id:o}),e.editable="检查完毕"!==e.batchData.status&&e.isBatchChecker}))}))})):Promise.reject("缺少批次id")},getListData:function(){var t=this;return this.batchId?u.a.getBatchTree(this.batchId).then((function(e){t.listData=e})):Promise.reject("缺少批次id")},onClickNode:function(t){100!==t.template_mode&&("检查完毕"===this.batchData.status&&"检查完毕"!==t.status||this.$router.push({path:"/special-inspect-combo-template-detail",query:{batchId:t.id,from:this.routeBatchId?"todo":""}}))},formulaTips:function(t){var e=u.a.getScoreFormula(t.children,t.algorithm);d.a.notify(e,{buttonName:"知道了",className:"broad-dialog"})},submitBatch:function(){var t=this,e=function(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?f(Object(a),!0).forEach((function(e){Object(o.a)(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):f(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}({},this.batchData);return delete e.contracts,Promise.resolve().then((function(){if(!t.listData.some((function(t){return Object(p.i)(t.score)})))return Promise.reject("请完成至少一个末级模板再提交")})).then((function(){return d.a.confirm("请确保所有检查人已上传数据，提交后不可修改，确认提交？").then((function(a){if(a)return c.a.finishCheckBatch(e).then((function(){return s.default.setLocalChanged(),t.init()}))}))})).catch((function(t){$log.error(t),t&&500102===t.errcode?d.a.alert("检测到检查结果有冲突，请下拉刷新后再试"):d.a.alert(t)}))}}}}).call(this,a("391c"))},b66d:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'.zjapp .tree-node[data-v-0083fc0a]{display:flex;flex-direction:row;align-items:center;justify-content:center;padding:8px 15px}.zjapp .tree-main[data-v-0083fc0a]{flex:1}.zjapp .tree-text[data-v-0083fc0a]{font-size:14px;color:#333;line-height:20px;padding:5px 0;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:2}.zjapp .tree-indent[data-v-0083fc0a]{width:14px;height:20px}.zjapp .tree-icon[data-v-0083fc0a]{position:relative;width:20px;height:20px;line-height:20px;color:#c8c8c8;font-size:26px}.zjapp .icon-dropdown[data-v-0083fc0a]:before,.zjapp .icon-dropright[data-v-0083fc0a]:before{content:"";position:absolute;width:0;height:0;border:6px solid #c8c8c8}.zjapp .icon-dropdown[data-v-0083fc0a]:before{top:7px;left:0;border-left-color:transparent}.zjapp .icon-dropdown[data-v-0083fc0a]:before,.zjapp .icon-dropright[data-v-0083fc0a]:before{border-right-color:transparent;border-bottom-color:transparent}.zjapp .icon-dropright[data-v-0083fc0a]:before{top:4px;left:2px;border-top-color:transparent}.zjapp .icon-right[data-v-0083fc0a]{margin-left:10px;color:#c8c8c8;line-height:30px}',""])},dd16:function(t,e,a){"use strict";(function(t){e.a={name:"StatusText",props:{status:{type:String},text:{type:String},extend:{type:Object,default:function(){return{}}}},data:function(){return{classSet:t.extend({"草稿":"color-gray","暂存":"color-gray","检查中":"color-orange","待整改":"color-red","待复验":"color-orange","待验收":"color-red","待报验":"color-red","待申请进场":"color-red","待初验":"color-red","待送检":"color-red","待上传报告":"color-red","待退场":"color-red","待建设单位验收":"color-red","待区域验收":"color-red","供应链退回":"color-red","预创建":"color-status-blue","已提交":"color-green","已整改":"color-green","已验收":"color-green","已通过":"color-green","已退场":"color-gray","已关闭":"color-gray","非正常关闭":"color-gray","已退回":"color-red","已完成":"color-green","已甩项":"color-gray","检查完毕":"color-green","送检合格":"color-green","复验合格":"color-green","验收合格":"color-green","验收不合格":"color-red","未验收":"color-orange","待点评":"color-orange","已点评":"color-green","合格":"color-green","不合格":"color-red","进度正常":"color-green","进度滞后":"color-red","施工单位验收合格":"color-green","监理单位验收合格":"color-green","建设单位验收合格":"color-green","施工单位验收不合格":"color-red","监理单位验收不合格":"color-red","建设单位验收不合格":"color-red"},this.extend)}},mounted:function(){}}}).call(this,a("391c"))},f6c3:function(t,e,a){"use strict";a("58fc")},fa68:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .list-empty[data-v-4499ded3]{display:flex;flex-direction:column;flex:1}.zjapp .app-btn-text[data-v-4499ded3]{font-size:16px}.zjapp .tree-header[data-v-4499ded3]{display:flex;padding:5px 0;line-height:20px;font-size:14px;color:#888}.zjapp .tree-header-template[data-v-4499ded3]{flex:1;padding:0 15px}.zjapp .tree-header-weight[data-v-4499ded3]{width:90px;text-align:center}.zjapp .tree-header-score[data-v-4499ded3]{width:90px;padding-right:40px;text-align:right}[data-v-4499ded3] .tree-node{position:relative;background-color:#fafafa}[data-v-4499ded3] .tree-node-level-0,[data-v-4499ded3] .tree-node-level-1{background-color:#fff}[data-v-4499ded3] .tree-node .tree-text{color:#666}[data-v-4499ded3] .tree-node-level-0 .tree-text{color:#111;font-weight:700}[data-v-4499ded3] .tree-node-level-1 .tree-text{color:#333}.zjapp .tree-weight[data-v-4499ded3]{width:90px;text-align:center;color:#666;font-size:14px}.zjapp .tree-score[data-v-4499ded3]{margin-right:-29px;width:90px;padding-right:40px;text-align:right;color:#666;font-size:14px}.zjapp .tree-icon-tips[data-v-4499ded3]{margin-left:-4px;font-size:18px;color:#c8c8c8}.zjapp .tree-icon-arrow[data-v-4499ded3]{width:14px;font-size:14px;color:#c8c8c8}",""])},fc33:function(t,e,a){"use strict";a("2b45"),a("6d57");var o=a("fc9f"),n=function(t){return o.a.query("select b.*, t.name as template_name, t.mode as template_mode, bc.weight\n      from batch b\n      left join special_inspect_template t on t.id = b.template_id\n      left join special_inspect_template_batch_combo bc on bc.batch_id = b.id and bc.template_id = t.id\n      where b.root_id = ? and ifnull(b.parent_id, '') != ''\n      order by bc.sort",[t])},r=function(t){return o.a.query("select b.*, t.name as template_name, t.mode as template_mode, bc.weight\n      from batch b\n      left join special_inspect_template t on t.id = b.template_id\n      left join special_inspect_template_batch_combo bc on bc.batch_id = b.id and bc.template_id = t.id\n      where b.root_id = ?\n      order by bc.sort",[t])},i=a("7cb8");function c(t){if(!t||!t.length)return[];var e=[],a=[];return t.forEach((function(t){e[t.id]=t})),t.forEach((function(t){t.parent_id&&e[t.parent_id]?(e[t.parent_id].children||(e[t.parent_id].children=[]),e[t.parent_id].children.push(t)):a.push(t)})),a}e.a={getBatchTree:function(t){var e=this;return n(t).then((function(t){(t||[]).forEach((function(t){try{var e=JSON.parse(t.template_extension||{});t.algorithm=parseInt(e.total_score_algorithm)||1}catch(e){t.algorithm=1}}));var a=c(t);return e.setBatchTreeScore(a),a}))},setBatchTreeScore:function(t){var e=this;t&&t.length&&t.forEach((function(t){t.children&&t.children.length&&(e.setBatchTreeScore(t.children),t.score=e.getScore(t.children,t.algorithm))}))},getBatchTotalData:function(t){var e=this;return r(t).then((function(t){(t||[]).forEach((function(t){try{var e=JSON.parse(t.template_extension||{});t.algorithm=parseInt(e.total_score_algorithm)}catch(e){t.algorithm=1}}));var a=c(t);return e.setBatchTreeScore(a),a}))},getScoreWeight:function(t,e){return Object(i.i)(t)?Object(i.i)(e)?(t=parseFloat(t))*(e=parseFloat(e)/100):parseFloat(t):0},getScoreWeightText:function(t,e){return Object(i.i)(t)?Object(i.i)(e)?(t="%"===t.toString().substr(-1)?t:"".concat(t,"%"),e="%"===e.toString().substr(-1)?e:"".concat(e,"%"),"".concat(t,"*").concat(e)):t:""},getScore:function(){var t,e,a=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r="";return 1===n?(o.forEach((function(e){if(Object(i.i)(e.score)){var o=e.score,n=e.weight;t=t||0,t+=a.getScoreWeight(o,n)}})),r=t):2===n&&(o.forEach((function(o){if(Object(i.i)(o.score)){var n=o.score,r=o.weight;t=t||0,e=e||0,t+=a.getScoreWeight(n,r),e+=parseFloat(r)/100}})),r=Object(i.i)(t)?e?t/e:0:""),r=Object(i.i)(r)?(Math.round(100*r)/100).toFixed(2)+"%":""},getScoreFormula:function(){var t,e=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=[],r=[];return 1===o?(t="得分=组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n",a.forEach((function(t){if(Object(i.i)(t.score)){var a=t.score,o=t.weight;n.push(e.getScoreWeightText(a,o))}})),n&&n.length&&(t+="=".concat(n.join("+"),"=").concat(this.getScore(a,o)))):2===o&&(t="得分=（组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n）/（权重1+权重2+...+权重n）",a.forEach((function(t){if(Object(i.i)(t.score)){var a=t.score,o=t.weight;n.push(e.getScoreWeightText(a,o)),r.push("".concat(o,"%"))}})),n&&n.length&&(t+="=(".concat(n.join("+"),")/(").concat(r.join("+"),")=").concat(this.getScore(a,o)))),t}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,