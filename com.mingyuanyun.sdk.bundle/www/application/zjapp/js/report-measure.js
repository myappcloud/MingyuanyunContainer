(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["report-measure"],{"059c":function(t,e,a){var r=a("938a");"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,a("85cb").default)("2fd35fba",r,!0,{sourceMap:!1,shadowMode:!1})},1608:function(t,e,a){"use strict";(function(t){a("cc57");var r=a("07d2"),n=a("774b"),i=a("e2a7"),o=a("5685");e.a={name:"Report",components:{Item:r.a,Scroller:n.a},filters:{number:function(e){return t.isNumber(e)?e.toFixed(1):e}},data:function(){return{isLoading:!0,reportData:[]}},computed:{projectSelected:function(){return this.$store.state.global.currentReportProject},fromScheduleManage:function(){return this.$store.state.global.prevRouter&&"SchedulePlanDetail"===this.$store.state.global.prevRouter.name}},activated:function(){this.$router.isBack||this.getReportData()},methods:{getReportData:function(){var t=this,e=this.projectSelected.id;this.isLoading=!0,o.a.getMeasureData(e).then((function(e){console.log("getReportData =======",e),t.reportData=e,t.isLoading=!1})).catch((function(e){i.a.alert(e),t.isLoading=!1}))},gotoBuildingDetail:function(t){this.$router.push({name:"ReportMeasureBuilding",query:{buildingId:t.building_id}})}}}}).call(this,a("391c"))},2045:function(t,e,a){var r=a("fb9c");"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,a("85cb").default)("13f50b47",r,!0,{sourceMap:!1,shadowMode:!1})},"33f2":function(t,e,a){"use strict";a("3e7f")},"3e7f":function(t,e,a){var r=a("49713");"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,a("85cb").default)("42e406f2",r,!0,{sourceMap:!1,shadowMode:!1})},49713:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .item-select-project>div[data-v-04f772dc]{pointer-events:none}.zjapp .title[data-v-04f772dc]{height:60px;line-height:20px;padding:20px;font-size:18px;color:#111}.zjapp .table-hd[data-v-04f772dc],.zjapp .title[data-v-04f772dc]{text-align:center;background-color:#fff}.zjapp .table-hd[data-v-04f772dc]{display:flex;position:relative;z-index:3;padding:10px 0;font-size:14px;color:#666}.zjapp .table-bd[data-v-04f772dc]{background-color:#fff;text-align:center}.zjapp .table-title[data-v-04f772dc]{padding:10px;line-height:20px;text-align:center;color:#7a95d1;font-size:15px;background-color:#ebf1ff}.zjapp .table-row[data-v-04f772dc]{display:flex;align-items:center;justify-content:center}.zjapp .table-row-count[data-v-04f772dc]{background-color:#f7f7f7}.zjapp .table-cell[data-v-04f772dc]{width:80px}.zjapp .table-cell[data-v-04f772dc],.zjapp .table-cell-slide[data-v-04f772dc]{line-height:20px;text-align:center;font-size:14px}.zjapp .table-cell-slide[data-v-04f772dc]{flex:1}.zjapp .table-bd .table-cell[data-v-04f772dc]{padding:10px 0;min-height:60px}.zjapp .table-label[data-v-04f772dc]{flex:1;height:100%;max-height:60px;padding:0 15px;overflow:hidden;font-size:15px;color:#111}.zjapp .passport[data-v-04f772dc]{height:20px;font-size:15px;color:#4275e8}.zjapp .num[data-v-04f772dc]{height:20px;font-size:12px;color:#8c8c8c}.zjapp .empty[data-v-04f772dc]{line-height:40px;font-size:12px;color:#d9d9d9}.zjapp .table-row-count .table-label[data-v-04f772dc]{height:100%;max-height:40px;padding:0 15px;overflow:hidden;font-size:15px;color:#8c8c8c}.zjapp .table-row-count .table-cell[data-v-04f772dc]{padding:10px 0;width:80px;line-height:20px;min-height:40px;color:#8c8c8c}.zjapp .table-row-count .passport[data-v-04f772dc]{height:20px;font-size:15px;color:#8c8c8c}.zjapp .table-row-count .empty[data-v-04f772dc]{height:20px;line-height:20px}.zjapp .icon-arrow-right[data-v-04f772dc]{width:30px;padding-right:15px;font-size:16px;color:#c8c8c8}.zjapp .icon-empty[data-v-04f772dc]{width:30px}",""])},"4bf6":function(t,e,a){"use strict";a("2045")},"55b9":function(t,e,a){"use strict";a.r(e);var r=a("c9af").a,n=(a("7270"),a("17cc")),i=Object(n.a)(r,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"报表-实测实量"}},[t.isLoading?t._e():[a("item",{staticClass:"item-part-title"},[a("i",{staticClass:"icon-part"}),a("div",{staticClass:"item-text"},[t._v("近6个月趋势")]),a("div",{staticClass:"item-con"},[a("div",{staticClass:"legend"},[a("span",{staticClass:"square-box"}),t._v(" 测点数 "),a("span",{staticClass:"circle-box"}),t._v(" 合格率\n        ")])])]),a("div",{staticClass:"graphic"},[a("ul",t._l(t.monthMeasure,(function(e){return a("li",{key:e.month,attrs:{month:e.month+"月",point:t.abbNumber(e.sum_measurement_points)}},[a("div",[a("span",{style:{height:(100*e.sum_measurement_points/t.maxCheckedNum).toFixed(1)+"%"}})])])}))),a("canvas",{attrs:{id:"measurePercentPass"}})]),a("item",{staticClass:"item-part-title"},[a("i",{staticClass:"icon-part"}),a("div",{staticClass:"item-text"},[t._v("数据统计")])]),a("item",{staticClass:"group-order-btn"},[a("div",{staticClass:"item-con left-btn-group"},[a("a",{class:{selected:"project"===t.selectedType},attrs:{href:"javascript:;"},on:{click:function(e){t.changeSelectedType("project")}}},[t._v("\n          按项目\n        ")]),a("a",{directives:[{name:"track",rawName:"v-track",value:"报表-集团实测实量-检查项",expression:"'报表-集团实测实量-检查项'"}],class:{selected:"checkitem"===t.selectedType},attrs:{href:"javascript:;"},on:{click:function(e){t.changeSelectedType("checkitem")}}},[t._v("\n          按检查项\n        ")])]),a("div",{staticClass:"item-con right-btn-group align-r"},[a("a",{class:{selected:"sum"===t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.changeTimeSec("sum")}}},[t._v("\n          累计\n        ")]),a("a",{directives:[{name:"track",rawName:"v-track",value:"报表-集团实测实量-上周",expression:"'报表-集团实测实量-上周'"}],class:{selected:"lastWeek"===t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.changeTimeSec("lastWeek")}}},[t._v("\n          上周\n        ")])])]),a("div",{staticClass:"tree-title border-top"},[a("div",{staticClass:"tree-text pr15"},[t._v(t._s("project"===t.selectedType?"项目":"检查项"))]),a("div",{staticClass:"tree-num"},[t._v("测点数")]),a("div",{staticClass:"tree-passport"},[t._v("合格率")])]),t._l(t.treeData,(function(e,r){return[a("div",{key:r,staticClass:"tree-item border-top bg-white",on:{click:function(a){t.toggleItem(e)}}},[a("div",{class:{"tree-icon":!0,"icon-dropdown":e.children&&e.children.length&&e.isOpen,"icon-dropright":e.children&&e.children.length&&!e.isOpen}}),a("div",{staticClass:"tree-text color-black pl15"},[t._v(t._s(e.name))]),a("div",{staticClass:"tree-num"},[t._v(t._s(e.checkPointNum[t.timeSec]))]),a("div",{staticClass:"tree-passport",class:{"color-red":e.passRate[t.timeSec]<90}},[t._v("\n          "+t._s(e.passRate[t.timeSec]+"%")+"\n        ")])]),e.isOpen?t._l(e.children,(function(e,n){return a("div",{key:r+"-"+n,staticClass:"tree-item tree-item-child border-top"},[a("div",{staticClass:"tree-text pl15"},[t._v(t._s(e.name))]),a("div",{staticClass:"tree-num"},[t._v(t._s(e.checkPointNum[t.timeSec]))]),a("div",{staticClass:"tree-passport",class:{"color-red":e.passRate[t.timeSec]<90}},[t._v("\n            "+t._s(e.passRate[t.timeSec]+"%")+"\n          ")])])})):t._e()]}))],a("loading-status",{attrs:{"is-loading":t.isLoading}})],2)}),[],!1,null,"8d9ff952",null);e.default=i.exports},5685:function(t,e,a){"use strict";(function(t){var r=a("162a"),n=a("6144"),i=a("9cd1"),o=a("da2f"),s=a("c77f");function c(t,e){return t?(t-e)/t*100:0}var l={getProcessCheckNewBuilding:function(t){var e=n.a.getString("reportDateType",n.a.level.user)||"month";return Object(o.d)({proj_id:t,query_type:e})},getProjTotalData:function(){return r.a.request("/report/project-over-view")},getDailyCheckData:function(t,e,a,n,i){var o={proj_id:t,bidsection_id:e,begin_date:a,end_date:n};return i&&(o.module=i),r.a.request("/report/check",o)},getReportCheckList:function(t){return r.a.request("/report/check-batch-problem-list",{batch_id:t.batchId,begin_date:t.dateStart,end_date:t.dateEnd})},getReportCheckTimeoutList:function(t,e,a){return r.a.request("/report/get-over-due-check",{proj_id:t,key:e,page:a,pageSize:15})},getOverDueCheckConfig:function(t){return r.a.request("/report/get-over-due-check-config",{proj_id:t})},getReportCheckDetail:function(t){return r.a.request("/report/check-batch-problem-detail",{id:t})},postReportCheckUpdate:function(t){return r.a.post("/checkquality-comment/upload",{},t)},postReportCheckSendBack:function(t){return r.a.post("/checkquality-comment/send-back",{},t)},measureProjectData:[],waterPercolationData:[],getMeasureData:function(e){return r.a.request("/report/measure",{proj_id:e}).then((function(e){return t.each(e,(function(e){e.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},e.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},e.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(e.buildings,(function(a){a.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},a.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},a.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(a.check_items,(function(r){r.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},r.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},r.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(r.children,(function(n){e.repair_data.measurement_points_num+=n.measure_data[0].measurement_points,e.repair_data.problem_points_num+=n.measure_data[0].problem_points,e.repair_data.checkitem_num+=n.measure_data[0].measurement_points?1:0,e.supervision_data.measurement_points_num+=n.measure_data[1].measurement_points,e.supervision_data.problem_points_num+=n.measure_data[1].problem_points,e.supervision_data.checkitem_num+=n.measure_data[1].measurement_points?1:0,e.construct_data.measurement_points_num+=n.measure_data[2].measurement_points,e.construct_data.problem_points_num+=n.measure_data[2].problem_points,e.construct_data.checkitem_num+=n.measure_data[2].measurement_points?1:0,a.repair_data.measurement_points_num+=n.measure_data[0].measurement_points,a.repair_data.problem_points_num+=n.measure_data[0].problem_points,a.repair_data.checkitem_num+=n.measure_data[0].measurement_points?1:0,a.supervision_data.measurement_points_num+=n.measure_data[1].measurement_points,a.supervision_data.problem_points_num+=n.measure_data[1].problem_points,a.supervision_data.checkitem_num+=n.measure_data[1].measurement_points?1:0,a.construct_data.measurement_points_num+=n.measure_data[2].measurement_points,a.construct_data.problem_points_num+=n.measure_data[2].problem_points,a.construct_data.checkitem_num+=n.measure_data[2].measurement_points?1:0,r.repair_data.measurement_points_num+=n.measure_data[0].measurement_points,r.repair_data.problem_points_num+=n.measure_data[0].problem_points,r.repair_data.checkitem_num+=n.measure_data[0].measurement_points?1:0,r.supervision_data.measurement_points_num+=n.measure_data[1].measurement_points,r.supervision_data.problem_points_num+=n.measure_data[1].problem_points,r.supervision_data.checkitem_num+=n.measure_data[1].measurement_points?1:0,r.construct_data.measurement_points_num+=n.measure_data[2].measurement_points,r.construct_data.problem_points_num+=n.measure_data[2].problem_points,r.construct_data.checkitem_num+=n.measure_data[2].measurement_points?1:0,t.each(n.measure_data,(function(t){t.measurement_points?t.passport=(t.measurement_points-t.problem_points)/t.measurement_points*100:t.passport=0}))})),r.repair_data.passport=c(r.repair_data.measurement_points_num,r.repair_data.problem_points_num),r.supervision_data.passport=c(r.supervision_data.measurement_points_num,r.supervision_data.problem_points_num),r.construct_data.passport=c(r.construct_data.measurement_points_num,r.construct_data.problem_points_num)})),a.repair_data.passport=c(a.repair_data.measurement_points_num,a.repair_data.problem_points_num),a.supervision_data.passport=c(a.supervision_data.measurement_points_num,a.supervision_data.problem_points_num),a.construct_data.passport=c(a.construct_data.measurement_points_num,a.construct_data.problem_points_num)})),e.repair_data.passport=c(e.repair_data.measurement_points_num,e.repair_data.problem_points_num),e.supervision_data.passport=c(e.supervision_data.measurement_points_num,e.supervision_data.problem_points_num),e.construct_data.passport=c(e.construct_data.measurement_points_num,e.construct_data.problem_points_num)})),e}))},measureBuildData:{},setMeasureBuildData:function(t){l.measureBuildData=t},getMeasureBuildData:function(e){return t.isEmpty(l.measureBuildData)?l.getMeasureData(e).then((function(t){return t[0]})):Promise.resolve(l.measureBuildData)},getCheckAcceptData:function(t){return r.a.request("/report/check-accept",{proj_id:t})},getCheckAcceptDataOfBuilding:function(t,e,a){return r.a.request("/report/check-accept-detail",{section_id:t,building_id:e,unit:a||""})},getProcessCheckData:function(t,e){return r.a.request("/report/processcheck",{building_id:t,unit:e})},getProcessCheckData2:function(t){return Object(o.g)({building_id:t})},getMaterialData:function(t,e,a){return r.a.request("/report/material",{proj_id:t,begin_date:e,end_date:a})},getProcessAcceptBuilding:function(t){var e=n.a.getString("reportDateType",n.a.level.user)||"month";return Object(s.m)({proj_id:t,query_type:e})},getWaterPercolation:function(t){return r.a.request("/report/close-water-test",{proj_id:t})},getProcessAcceptData:function(t,e,a,r){return Object(s.n)({building_id:t,unit:e,start:a||"",end:r||""})},getProcessAcceptPileItem:function(t){return r.a.request("/report/get-pile-check-items",{bidsection_id:t})},getProcessAcceptPileData:function(t,e){return r.a.request("/report/process-accept-with-pile",{building_id:t,item_id:e})},getMeasureCheckedData:function(){return r.a.request("/report/leader-measure")},getSchedulePlanData:function(){return Object(i.i)()},getSchedulePlanProjectData:function(t){return Object(i.a)({proj_id:t})},getCheckProblemStatisticsData:function(t){return r.a.request("/report/leader-secure",t)},getProcessCheckStatisticsData:function(){return Object(o.k)()},schedulePlanNodeList:function(t){return Object(i.e)({plan_id:t})}};e.a=l}).call(this,a("391c"))},7270:function(t,e,a){"use strict";a("059c")},7703:function(t,e,a){"use strict";a.r(e);var r=a("1608").a,n=(a("33f2"),a("17cc")),i=Object(n.a)(r,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"报表-实测实量","show-go-root":t.fromScheduleManage}},[t.isLoading?t._e():a("scroller",[a("div",{staticClass:"title"},[t._v("已测检查项及当前合格率")]),a("div",{staticClass:"table-hd border-tb"},[a("div",{staticClass:"table-cell-slide"},[t._v("楼栋")]),a("div",{staticClass:"table-cell"},[t._v("施工单位")]),a("div",{staticClass:"table-cell"},[t._v("监理单位")]),a("div",{staticClass:"table-cell"},[t._v("建设单位")]),a("i",{staticClass:"icon-empty"})]),t._l(t.reportData,(function(e){return a("div",{key:e.bidsection_id,staticClass:"table-bd"},[a("div",{staticClass:"table-title border-bottom"},[t._v(t._s(e.bidsection_name))]),t._l(e.buildings,(function(e){return a("div",{key:e.building_id,staticClass:"table-row border-bottom",on:{click:function(a){t.gotoBuildingDetail(e)}}},[a("div",{staticClass:"table-label"},[t._v(t._s(e.building_name))]),a("div",{staticClass:"table-cell border-left"},[e.repair_data.checkitem_num?[a("p",{staticClass:"passport",class:{"color-red":e.repair_data.passport<=90}},[t._v("\n              "+t._s(t._f("number")(e.repair_data.passport))+"\n              "),a("span",{staticClass:"f10"},[t._v("%")])]),a("p",{staticClass:"num"},[t._v(t._s(e.repair_data.checkitem_num)+"项")])]:a("p",{staticClass:"empty"},[t._v("未测")])],2),a("div",{staticClass:"table-cell"},[e.supervision_data.checkitem_num?[a("p",{staticClass:"passport",class:{"color-red":e.supervision_data.passport<=90}},[t._v("\n              "+t._s(t._f("number")(e.supervision_data.passport))+"\n              "),a("span",{staticClass:"f10"},[t._v("%")])]),a("p",{staticClass:"num"},[t._v(t._s(e.supervision_data.checkitem_num)+"项")])]:a("p",{staticClass:"empty"},[t._v("未测")])],2),a("div",{staticClass:"table-cell"},[e.construct_data.checkitem_num?[a("p",{staticClass:"passport",class:{"color-red":e.construct_data.passport<=90}},[t._v("\n              "+t._s(t._f("number")(e.construct_data.passport))+"\n              "),a("span",{staticClass:"f10"},[t._v("%")])]),a("p",{staticClass:"num"},[t._v(t._s(e.construct_data.checkitem_num)+"项")])]:a("p",{staticClass:"empty"},[t._v("未测")])],2),a("icon",{attrs:{name:e.repair_data.checkitem_num||e.supervision_data.checkitem_num||e.construct_data.checkitem_num?"arrow-right":"empty"}})],1)})),a("div",{staticClass:"table-row table-row-count border-bottom"},[a("div",{staticClass:"table-label"},[t._v("总计")]),a("div",{staticClass:"table-cell border-left"},[e.repair_data.checkitem_num?a("p",{staticClass:"passport",class:{"color-red":e.repair_data.passport<=90}},[t._v("\n            "+t._s(t._f("number")(e.repair_data.passport))+"\n            "),a("span",{staticClass:"f10"},[t._v("%")])]):a("p",{staticClass:"empty"},[t._v("未测")])]),a("div",{staticClass:"table-cell"},[e.supervision_data.checkitem_num?a("p",{staticClass:"passport",class:{"color-red":e.supervision_data.passport<=90}},[t._v("\n            "+t._s(t._f("number")(e.supervision_data.passport))+"\n            "),a("span",{staticClass:"f10"},[t._v("%")])]):a("p",{staticClass:"empty"},[t._v("未测")])]),a("div",{staticClass:"table-cell"},[e.construct_data.checkitem_num?a("p",{staticClass:"passport",class:{"color-red":e.construct_data.passport<=90}},[t._v("\n            "+t._s(t._f("number")(e.construct_data.passport))+"\n            "),a("span",{staticClass:"f10"},[t._v("%")])]):a("p",{staticClass:"empty"},[t._v("未测")])]),a("i",{staticClass:"icon-empty"})])],2)}))],2),a("loading-status",{attrs:{"is-loading":t.isLoading}})],1)}),[],!1,null,"04f772dc",null);e.default=i.exports},"774b":function(t,e,a){"use strict";var r=a("d18d").a,n=(a("b225"),a("17cc")),i=Object(n.a)(r,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?a("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[a("div",{staticClass:"pull-refresh"},[a("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?a("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?a("div",{staticClass:"page-loading"},[a("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[a("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?a("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=i.exports},"938a":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'[data-v-8d9ff952] .layout-content{overflow:auto;display:block}.zjapp .icon-part[data-v-8d9ff952]{position:absolute;top:15px;left:0;width:4px;height:16px;background-color:#4275e8}.zjapp .item-part-title[data-v-8d9ff952]{align-items:center}.zjapp .item-part-title .item-text[data-v-8d9ff952]{font-size:18px}.zjapp .legend[data-v-8d9ff952]{text-align:right;font-size:12px;color:#666}.zjapp .legend span[data-v-8d9ff952]{height:8px;width:8px;display:inline-block;margin-right:5px;margin-left:10px}.zjapp .legend .square-box[data-v-8d9ff952]{background:#5e94ff}.zjapp .legend .circle-box[data-v-8d9ff952]{border-radius:50%;border:2px solid #4275e8;position:relative}.zjapp .legend .circle-box[data-v-8d9ff952]:before{left:-6px}.zjapp .legend .circle-box[data-v-8d9ff952]:after,.zjapp .legend .circle-box[data-v-8d9ff952]:before{content:"";height:0;width:4px;border-top:2px solid rgba(66,117,232,.6);position:absolute;top:1px}.zjapp .legend .circle-box[data-v-8d9ff952]:after{right:-6px}.zjapp .graphic[data-v-8d9ff952]{padding:40px 0;height:208px;width:100%;position:relative;background-color:#fff}.zjapp .graphic ul[data-v-8d9ff952]{height:120px;width:100%;position:relative;padding-top:4px;padding-bottom:4px}.zjapp .graphic li[data-v-8d9ff952]{float:left;width:16.666%;text-align:center;height:120px;position:relative}.zjapp .graphic li[data-v-8d9ff952]:before{content:attr(point);position:absolute;left:0;right:0;top:-27px;text-align:center;font-size:12px}.zjapp .graphic li[data-v-8d9ff952]:after{content:attr(month);position:absolute;left:0;right:0;bottom:-27px;text-align:center;font-size:14px}.zjapp .graphic li div[data-v-8d9ff952]{height:100%;width:30px;margin:auto;background:#ebf1ff;position:relative;border-radius:4px;overflow:hidden}.zjapp .graphic li div span[data-v-8d9ff952]{width:100%;position:absolute;left:0;right:0;bottom:0;background-image:linear-gradient(#9ed7ff,#779fff)}.zjapp .graphic canvas[data-v-8d9ff952]{position:absolute;right:0;bottom:0;left:0;top:40px}.zjapp .group-order-btn[data-v-8d9ff952]{padding:15px 0}.zjapp .left-btn-group[data-v-8d9ff952]{margin-top:3px;white-space:nowrap}.zjapp .left-btn-group a[data-v-8d9ff952]{display:inline-block;line-height:22px;padding:0 10px;text-align:center;color:#999;font-size:16px}.zjapp .left-btn-group a[data-v-8d9ff952]:first-child{border:none;background-image:linear-gradient(270deg,#dcdcdc,#dcdcdc 50%,transparent 0);background-size:1px 100%;background-repeat:no-repeat;background-position:100% 0}.zjapp .left-btn-group a.selected[data-v-8d9ff952]{color:#4275e8}.zjapp .right-btn-group[data-v-8d9ff952]{margin-right:15px;white-space:nowrap}.zjapp .right-btn-group a[data-v-8d9ff952]{display:inline-block;width:52px;line-height:26px;margin-left:6px;border:1px solid #dcdcdc;border-radius:14px;text-align:center;color:#666;font-size:14px}.zjapp .right-btn-group a.selected[data-v-8d9ff952]{color:#4275e8;border-color:#4275e8}.zjapp .tree-title[data-v-8d9ff952]{padding:0 15px;display:flex;color:#888;background-color:#fafafa}.zjapp .tree-item[data-v-8d9ff952]{position:relative;display:flex;align-items:center;padding:8px 15px}.zjapp .tree-item-child[data-v-8d9ff952]{background-color:#fafafa}.zjapp .tree-text[data-v-8d9ff952]{flex:2;padding:5px 0;line-height:20px}.zjapp .tree-num[data-v-8d9ff952],.zjapp .tree-passport[data-v-8d9ff952]{flex:1;padding:5px;line-height:20px;text-align:center}.zjapp .tree-icon[data-v-8d9ff952]{position:absolute;width:15px;height:30px}.zjapp .icon-dropdown[data-v-8d9ff952]{top:20px;left:13px}.zjapp .icon-dropright[data-v-8d9ff952]{top:16px;left:15px}.zjapp .icon-dropdown[data-v-8d9ff952]:before,.zjapp .icon-dropright[data-v-8d9ff952]:before{display:block;content:"";width:0;height:0;border:6px solid #c8c8c8}.zjapp .icon-dropdown[data-v-8d9ff952]:before{border-left-color:transparent}.zjapp .icon-dropdown[data-v-8d9ff952]:before,.zjapp .icon-dropright[data-v-8d9ff952]:before{border-right-color:transparent;border-bottom-color:transparent}.zjapp .icon-dropright[data-v-8d9ff952]:before{border-top-color:transparent}',""])},"9cd1":function(t,e,a){"use strict";a.d(e,"h",(function(){return o})),a.d(e,"m",(function(){return s})),a.d(e,"g",(function(){return c})),a.d(e,"f",(function(){return l})),a.d(e,"d",(function(){return p})),a.d(e,"l",(function(){return u})),a.d(e,"k",(function(){return d})),a.d(e,"j",(function(){return f})),a.d(e,"b",(function(){return m})),a.d(e,"e",(function(){return h})),a.d(e,"c",(function(){return _})),a.d(e,"i",(function(){return g})),a.d(e,"a",(function(){return b}));var r=a("5e8d"),n=a("162a"),i=a("bcc78");function o(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanTaskInfo.url;return n.a.request(e,t)}))}function s(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanSaveTask.url;return n.a.post(e,null,t)}))}function c(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanPlanList.url;return n.a.request(e,t)}))}function l(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanNodeList.url;return n.a.request(e,t)}))}function p(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanNodeInfo.url;return n.a.request(e,t)}))}function u(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanSaveReport.url;return n.a.post(e,null,t)}))}function d(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanSaveCompleteTime.url;return n.a.post(e,null,t)}))}function f(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanSaveChecker.url;return n.a.post(e,null,t)}))}function m(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanCheckerLogList.url;return n.a.request(e,t)}))}function h(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanNodeLevel.url;return n.a.request(e,t)}))}function _(){return Object(r.a)().then((function(){var t=i.a.schedulePlanCompletedTimeSetting.url;return n.a.request(t)}))}function g(){return Object(r.a)().then((function(){var t=i.a.schedulePlanLeaderSchedulePlan.url;return n.a.request(t)}))}function b(t){return Object(r.a)().then((function(){var e=i.a.schedulePlanGetByFirstProject.url;return n.a.request(e,t)}))}},"9d55":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},b225:function(t,e,a){"use strict";a("ef48")},c77f:function(t,e,a){"use strict";a.d(e,"i",(function(){return s})),a.d(e,"h",(function(){return c})),a.d(e,"a",(function(){return l})),a.d(e,"f",(function(){return p})),a.d(e,"g",(function(){return u})),a.d(e,"e",(function(){return d})),a.d(e,"m",(function(){return f})),a.d(e,"n",(function(){return m})),a.d(e,"b",(function(){return h})),a.d(e,"j",(function(){return _})),a.d(e,"k",(function(){return g})),a.d(e,"c",(function(){return b})),a.d(e,"d",(function(){return v})),a.d(e,"l",(function(){return x})),a.d(e,"o",(function(){return j}));var r=a("5e8d"),n=a("162a"),i=a("bcc78"),o=a("da71");function s(t){return Object(r.a)().then((function(){var e=i.a.commonGetProblemClassTree.url;return n.a.request(e,t)}))}function c(t){return Object(r.a)().then((function(){var e=i.a.pileAcceptGetPileBuildingSummary.url;return n.a.request(e,t)}))}function l(t){return Object(r.a)().then((function(){var e=i.a.pileAcceptGetBidsectionBuildingTree.url;return n.a.request(e,t)}))}function p(){return Object(r.a)().then((function(){var t=i.a.pileAcceptGetPileAcceptItems.url;return n.a.request(t)}))}function u(t){return Object(r.a)().then((function(){var e=i.a.pileAcceptGetPileAcceptList.url;return n.a.request(e,t)}))}function d(t){return Object(r.a)().then((function(){var e=i.a.pileAcceptGetPileAcceptInfo.url;return n.a.request(e,t)}))}function f(t){return Object(r.a)().then((function(){var e=i.a.processAcceptBuilding.url;return n.a.request(e,t)}))}function m(t){return Object(r.a)().then((function(){var e=i.a.processAcceptCollect.url;return n.a.request(e,t)}))}function h(t){return Object(r.a)().then((function(){var e=i.a.processAcceptv3GetBuildingList.url;return n.a.request(e,t)}))}function _(t){return Object(r.a)().then((function(){var e=i.a.processAcceptv3GetProcessAcceptv3List.url;return n.a.request(e,t)}))}function g(t){return Object(r.a)().then((function(){var e=o.a.getReportOrgTree.url;return n.a.request(e,t)}))}function b(t){return Object(r.a)().then((function(){var e=o.a.getHomeReports.url;return n.a.request(e,t)}))}function v(t){return Object(r.a)().then((function(){var e=o.a.getMyReports.url;return n.a.request(e,t)}))}function x(t){return Object(r.a)().then((function(){var e=o.a.getReportPools.url;return n.a.request(e,t)}))}function j(t){return Object(r.a)().then((function(){var e=o.a.saveMyReportsSetting.url;return n.a.post(e,null,t)}))}},c9af:function(t,e,a){"use strict";(function(t){a("6f84"),a("f548");var r=a("4c09"),n=a("07d2"),i=a("e2a7"),o=a("5685"),s=a("e900");e.a={name:"ReportMeasureLeader",components:{Item:n.a},filters:{number:function(e){return t.isNumber(e)?e.toFixed(1):e}},data:function(){return{isLoading:!0,reportData:[],selectedType:"project",timeSec:"sum",monthMeasure:[],maxCheckedNum:1,projMeasure:[],itemMeasure:[],treeData:[]}},watch:{isLoading:function(t){var e=this;t||this.$nextTick((function(){e.drawChart()}))}},activated:function(){this.getReportData()},methods:{getReportData:function(){var e=this;return this.isLoading=!0,o.a.getMeasureCheckedData().then((function(a){console.log("res ===========",a),e.monthMeasure=a.monthMeasure,e.projMeasure=a.projMeasure,e.itemMeasure=a.itemMeasure,e.maxCheckedNum=Math.max.apply(Math,[1].concat(Object(r.a)(t.map(a.monthMeasure,"sum_measurement_points")))),console.log("this.maxCheckedNum =======",e.maxCheckedNum),console.log("ssss =======",t.map(a.monthMeasure,"sum_measurement_points")),e.getTreeData(),e.isLoading=!1})).catch((function(t){console.error(t),i.a.alert(t),e.isLoading=!1}))},abbNumber:function(e){return t.isNumber(e)&&e>1e4?(e/1e4).toFixed(1)+"万":e},drawChart:function(){var t=this.monthMeasure,e=[],a=document.querySelectorAll(".graphic li"),r=+window.getComputedStyle(a[0]).width.replace("px",""),n=document.querySelector("#measurePercentPass");Object(s.b)(n);for(var i=0;i<a.length;i++)e.push({x:(i+.5)*r,y:120*t[i].rate.replace("%","")/100});n.height=128,n.width=window.getComputedStyle(document.querySelector(".graphic ul")).width.replace("px","");var o=n.getContext("2d");o.lineWidth=2,o.translate(.5,124.5),o.strokeStyle="rgba(66, 117, 232, 0.6)";for(var c=0,l=0;l<e.length;l++)0===c?0!==t[l].sum_measurement_points&&(o.moveTo(e[l].x,-e[l].y),c++):0!==t[l].sum_measurement_points?o.lineTo(e[l].x,-e[l].y):c=0;o.stroke(),o.save();for(var p=0;p<e.length;p++)if(0!==t[p].sum_measurement_points){o.beginPath(),o.moveTo(e[p].x,-e[p].y),o.arc(e[p].x,-e[p].y,3,0,2*Math.PI),o.fillStyle="#fff",o.fill(),o.beginPath(),o.arc(e[p].x,-e[p].y,3,0,2*Math.PI),o.lineWidth=2,o.strokeStyle="#4275E8",o.stroke(),o.font="12px/20px Arial",o.fillStyle="#4275E8",o.textBaseline="middle";var u=t[p].rate,d=o.measureText(u).width/2;e[p].y<60?o.fillText(u,e[p].x-d/2,-e[p].y-20):o.fillText(u,e[p].x-d/2,20-e[p].y)}},getTreeData:function(){this.treeData="project"===this.selectedType?this.projMeasure:this.itemMeasure},changeSelectedType:function(t){this.selectedType=t,this.getTreeData()},changeTimeSec:function(t){this.timeSec=t},toggleItem:function(t){this.$set(t,"isOpen",!t.isOpen)}}}}).call(this,a("391c"))},d18d:function(t,e,a){"use strict";(function(t){a("2b45");var r,n=a("4360"),i=a("48f4"),o=a("162a"),s=a("e2a7"),c=a("a500"),l=a("6f9e"),p={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return n.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return n.a.state.global.isNumberInputOpen?n.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;l.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var a=e&&e.target,r=a&&a.tagName&&a.tagName.toLowerCase();if("input"===r||"textarea"===r){window.addEventListener("resize",(function e(){var r=a.getBoundingClientRect(),n=t.$el.getBoundingClientRect(),i=r.bottom-n.bottom;i>0&&t.scrollBy(i),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){l.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,a=this.$refs["scroll-warp"].scrollTop,r=this.$refs["scroll-warp"].scrollHeight;if(a+this.$refs["scroll-warp"].clientHeight>=r-5&&!this.loading&&this.hasNext){this.loading=!0;var n=this.$listeners.loadNext();n&&n.then&&"function"==typeof n.then?n.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(p&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,a=t.touches[0].clientY;return Math.abs(a-p.y)>Math.abs(e-p.x)&&Math.abs(a-p.y)>=3?a>p.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(p={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,a=t.touches[0].clientY,r=a-p.y,n=this.getTouchDiretion(t);"down"===n?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(r-p.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===n?this.pullDist>0&&(this.pullDist=p.pullDist-(p.y-a),t.preventDefault()):this.pullDist=p.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(p={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,a=this.pullDist,r=t,n=r-a,i=a;return a===r?Promise.resolve():new Promise((function(t){!function o(){window.requestAnimationFrame((function(){i+=n/6,e.pullDist=i,a<r&&i<r||a>r&&i>r?o():(e.pullDist=r,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=i.default.getCurrentModuleCode(),a=i.default.getCurrentRoute(),r=a.meta&&a.meta.isTodo;if(i.default.isModuleNeedBuilding(e)&&!r){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return c.a.addTrack("公共-手动下拉刷新","",""),o.a.beginManualUpdate(),i.default.checkSync(t).then((function(t){return o.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?s.a.alert("当前网络无法同步数据"):s.a.alert(t),o.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,n=this.getScrollTop(),i=n+t,o=Math.round(a/16.7),s=t/o,c=n,l=r=+new Date;return n===i?Promise.resolve():new Promise((function(t){!function a(){window.requestAnimationFrame((function(){l===r&&(c+=s,e.$refs["scroll-warp"].scrollTop=c,n<i&&c<i||n>i&&c>i?a():(e.$refs["scroll-warp"].scrollTop=i,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,a=this.getScrollTop(),r=t-a;return this.scrollBy(r,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,a=(t=t.$el?t.$el:t).getBoundingClientRect(),r=this.$refs["scroll-warp"].getBoundingClientRect();if(a&&r){var i=document.documentElement.clientHeight-(n.a.state.global.isNumberInputOpen?e:0),o=r.bottom<i?r.bottom:i,s=r.top-a.top,c=a.bottom-o;s>0?this.scrollBy(-s-10):c>0&&this.scrollBy(c+10)}},isCurrent:function(e,a){var r=this;e.length&&t.each(e,(function(t){t._uid===a?r.isCurrKeyboard=!0:r.isCurrent(t.$children,a)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,a("391c"))},d7e3:function(t,e,a){"use strict";a.r(e);var r=a("fe45").a,n=(a("4bf6"),a("17cc")),i=Object(n.a)(r,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"详情","show-go-root":"Report"}},[t.isLoading?t._e():a("scroller",[a("div",{staticClass:"title"},[a("span",{staticClass:"color-theme"},[t._v(t._s(t.reportData.building_name))]),t._v("已测户数及当前合格率\n    ")]),a("div",{staticClass:"table-hd border-tb"},[a("div",{staticClass:"table-cell-slide"},[t._v("检查项")]),a("div",{staticClass:"table-cell"},[t._v("施工单位")]),a("div",{staticClass:"table-cell"},[t._v("监理单位")]),a("div",{staticClass:"table-cell"},[t._v("建设单位")])]),t._l(t.reportData.check_items,(function(e,r){return a("div",{key:r,staticClass:"table-bd"},[a("div",{staticClass:"table-title border-bottom"},[t._v(t._s(e.parent_item_name))]),t._l(e.children,(function(e){return a("div",{key:e.item_id,staticClass:"table-row border-bottom",on:{click:function(a){t.gotoItemDetail(e)}}},[a("div",{staticClass:"table-label"},[t._v(t._s(e.item_name))]),a("div",{staticClass:"table-cell border-left"},[e.measure_data[0].p_num?[a("p",{staticClass:"passport",class:{"color-red":e.measure_data[0].passport<=90}},[t._v("\n              "+t._s(t._f("number")(e.measure_data[0].passport))+"\n              "),a("span",{staticClass:"f10"},[t._v("%")])]),a("p",{staticClass:"num"},[t._v(t._s(e.measure_data[0].p_num)+t._s("1"===e.process_mode?"户":"层"))])]:a("p",{staticClass:"empty"},[t._v("未测")])],2),a("div",{staticClass:"table-cell border-left"},[e.measure_data[1].p_num?[a("p",{staticClass:"passport",class:{"color-red":e.measure_data[1].passport<=90}},[t._v("\n              "+t._s(t._f("number")(e.measure_data[1].passport))+"\n              "),a("span",{staticClass:"f10"},[t._v("%")])]),a("p",{staticClass:"num"},[t._v(t._s(e.measure_data[1].p_num)+t._s("1"===e.process_mode?"户":"层"))])]:a("p",{staticClass:"empty"},[t._v("未测")])],2),a("div",{staticClass:"table-cell border-left"},[e.measure_data[2].p_num?[a("p",{staticClass:"passport",class:{"color-red":e.measure_data[2].passport<=90}},[t._v("\n              "+t._s(t._f("number")(e.measure_data[2].passport))+"\n              "),a("span",{staticClass:"f10"},[t._v("%")])]),a("p",{staticClass:"num"},[t._v(t._s(e.measure_data[2].p_num)+t._s("1"===e.process_mode?"户":"层"))])]:a("p",{staticClass:"empty"},[t._v("未测")])],2)])})),a("div",{staticClass:"table-row table-row-count border-bottom"},[a("div",{staticClass:"table-label"},[t._v("总计")]),a("div",{staticClass:"table-cell border-left"},[e.repair_data.checkitem_num?a("p",{staticClass:"passport",class:{"color-red":e.repair_data.passport<=90}},[t._v("\n            "+t._s(t._f("number")(e.repair_data.passport))+"\n            "),a("span",{staticClass:"f10"},[t._v("%")])]):a("p",{staticClass:"empty"},[t._v("未测")])]),a("div",{staticClass:"table-cell border-left"},[e.supervision_data.checkitem_num?a("p",{staticClass:"passport",class:{"color-red":e.supervision_data.passport<=90}},[t._v("\n            "+t._s(t._f("number")(e.supervision_data.passport))+"\n            "),a("span",{staticClass:"f10"},[t._v("%")])]):a("p",{staticClass:"empty"},[t._v("未测")])]),a("div",{staticClass:"table-cell border-left"},[e.construct_data.checkitem_num?a("p",{staticClass:"passport",class:{"color-red":e.construct_data.passport<=90}},[t._v("\n            "+t._s(t._f("number")(e.construct_data.passport))+"\n            "),a("span",{staticClass:"f10"},[t._v("%")])]):a("p",{staticClass:"empty"},[t._v("未测")])])])],2)}))],2),a("loading-status",{attrs:{"is-loading":t.isLoading}})],1)}),[],!1,null,"578e2343",null);e.default=i.exports},e900:function(t,e,a){"use strict";a.d(e,"a",(function(){return r})),a.d(e,"b",(function(){return n}));a("f548");function r(t){var e,a,r,n=(a=(e=t).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1,(window.devicePixelRatio||1)/a);1!==n&&(!function(t,e){for(var a in t)t.hasOwnProperty(a)&&e(t[a],a)}({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(e,a){var r;t[a]=(r=t[a],function(){var t,a,i=Array.prototype.slice.call(arguments);if("all"===e)i=i.map((function(t){return t*n}));else if(Array.isArray(e))for(t=0,a=e.length;t<a;t++)i[e[t]]*=n;return r.apply(this,i)})})),t.stroke=(r=t.stroke,function(){this.lineWidth*=n,r.apply(this,arguments),this.lineWidth/=n}),t.fillText=function(t){return function(){var e=Array.prototype.slice.call(arguments);e[1]*=n,e[2]*=n,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,a){return e*n+a})),t.apply(this,e),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,a){return e/n+a}))}}(t.fillText),t.strokeText=function(t){return function(){var e=Array.prototype.slice.call(arguments);e[1]*=n,e[2]*=n,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,a){return e*n+a})),t.apply(this,e),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,a){return e/n+a}))}}(t.strokeText),t.extended=!0)}var n=function(t){var e,a;(e=t).getContext=(a=e.getContext,function(t){var e,n,i=a.call(this,t);return"2d"===t&&(e=i.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||i.mozBackingStorePixelRatio||i.msBackingStorePixelRatio||i.oBackingStorePixelRatio||i.backingStorePixelRatio||1,(n=(window.devicePixelRatio||1)/e)>1&&(this.style.height=this.height+"px",this.style.width=this.width+"px",this.width*=n,this.height*=n)),r(i),i})}},ef48:function(t,e,a){var r=a("9d55");"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,a("85cb").default)("a1a65c0c",r,!0,{sourceMap:!1,shadowMode:!1})},fb9c:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .item-select-project>div[data-v-578e2343]{pointer-events:none}.zjapp .title[data-v-578e2343]{height:60px;line-height:20px;padding:20px;font-size:18px;color:#111}.zjapp .table-hd[data-v-578e2343],.zjapp .title[data-v-578e2343]{text-align:center;background-color:#fff}.zjapp .table-hd[data-v-578e2343]{display:flex;position:relative;z-index:3;padding:10px 0;font-size:14px;color:#666}.zjapp .table-bd[data-v-578e2343]{background-color:#fff;text-align:center}.zjapp .table-title[data-v-578e2343]{padding:10px;line-height:20px;text-align:center;color:#7a95d1;font-size:15px;background-color:#ebf1ff}.zjapp .table-row[data-v-578e2343]{display:flex;align-items:center;justify-content:center}.zjapp .table-row-count[data-v-578e2343]{background-color:#f7f7f7}.zjapp .table-cell[data-v-578e2343]{width:80px}.zjapp .table-cell[data-v-578e2343],.zjapp .table-cell-slide[data-v-578e2343]{line-height:20px;text-align:center;font-size:14px}.zjapp .table-cell-slide[data-v-578e2343]{flex:1}.zjapp .table-bd .table-cell[data-v-578e2343]{padding:10px 0;min-height:60px}.zjapp .table-label[data-v-578e2343]{flex:1;height:100%;max-height:60px;padding:0 15px;overflow:hidden;font-size:15px;color:#111;text-align:left}.zjapp .passport[data-v-578e2343]{height:20px;font-size:15px;color:#4275e8}.zjapp .num[data-v-578e2343]{height:20px;font-size:12px;color:#8c8c8c}.zjapp .empty[data-v-578e2343]{line-height:40px;font-size:12px;color:#d9d9d9}.zjapp .table-row-count .table-label[data-v-578e2343]{height:100%;max-height:40px;padding:0 15px;overflow:hidden;font-size:15px;color:#8c8c8c}.zjapp .table-row-count .table-cell[data-v-578e2343]{padding:10px 0;width:80px;line-height:20px;min-height:40px;color:#8c8c8c}.zjapp .table-row-count .passport[data-v-578e2343]{height:20px;font-size:15px;color:#8c8c8c}.zjapp .table-row-count .empty[data-v-578e2343]{height:20px;line-height:20px}.zjapp .icon-arrow-right[data-v-578e2343]{width:30px;padding-right:15px;font-size:16px;color:#c8c8c8}.zjapp .icon-empty[data-v-578e2343]{width:30px}",""])},fe45:function(t,e,a){"use strict";(function(t){a("5ab2"),a("6d57"),a("e10e"),a("cc57");var r=a("28f8"),n=(a("6a61"),a("2e91")),i=(a("e697"),a("07d2")),o=a("774b"),s=a("e2a7"),c=a("5685"),l=a("ed08");function p(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function u(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?p(Object(a),!0).forEach((function(e){Object(r.a)(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}var d,f=!1;e.a={name:"Report",components:{Item:i.a,Scroller:o.a},filters:{number:function(e){return t.isNumber(e)?e.toFixed(1):e}},data:function(){return{isLoading:!0,buildingId:"",section:{},building:{},reportData:[]}},computed:{projId:function(){return this.$store.state.global.currentReportProject.id},project:function(){return this.$store.state.global.currentReportProject}},activated:function(){this.$router.isBack||(this.buildingId=this.$route.query.buildingId,this.getReportData())},methods:{getReportData:function(){var e=this;this.isLoading=!0,c.a.getMeasureData(this.projId).then((function(a){t.each(a,(function(a){var r=t.find(a.buildings,{building_id:e.buildingId});r&&(e.section={id:a.bidsection_id,name:a.bidsection_name},e.building={id:r.building_id,name:r.building_name},e.reportData=r)})),e.isLoading=!1})).catch((function(t){s.a.alert(t),e.isLoading=!1}))},gotoItemDetail:(d=Object(n.a)(regeneratorRuntime.mark((function t(e){var r,i,o=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!f){t.next=2;break}return t.abrupt("return");case 2:return f=!0,r=[{},{id:e.item_id,name:e.item_name}],i=[u({},this.section),u({},this.building),{id:"",name:""}],this.$store.commit("global/SET_CURRENT_PROJECT",this.project),this.$store.dispatch("measure/setIndexPlace",i),this.$store.dispatch("measure/setIndexCheckitem",r),t.next=10,Promise.resolve().then(a.bind(null,"37d5"));case 10:t.sent.default.getProject(this.project.id).then((function(t){if(t&&t.expire_time&&t.expire_time<=l.a.now())return Promise.reject("该项目租期已过")})).then(Object(n.a)(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.resolve().then(a.bind(null,"06f6"));case 2:return e=t.sent.default,t.abrupt("return",e.projectHasRoomData(o.project.id).then(function(){var t=Object(n.a)(regeneratorRuntime.mark((function t(e){var r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e){t.next=7;break}return t.next=3,Promise.resolve().then(a.bind(null,"48f4"));case 3:return(r=t.sent.default).setLocalChanged(),r.showTopProgress(),t.abrupt("return",r.executeSync(o.building.id));case 7:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()));case 4:case"end":return t.stop()}}),t)})))).then((function(){o.$router.history.current.name===o.$route.name&&(o.$router.push({name:"MeasureIndex"}),f=!1)})).catch((function(t){s.a.alert(t),console.error(t),f=!1}));case 12:case"end":return t.stop()}}),t,this)}))),function(t){return d.apply(this,arguments)})}}}).call(this,a("391c"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,