(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["report-leader-process-check-statistics"],{1237:function(t,e,i){"use strict";i.r(e);var o=i("417f").a,s=(i("8d6d"),i("17cc")),n=Object(s.a)(o,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("page-content",{staticClass:"measure-pass-rate",attrs:{title:"报表-工序移交"}},[t.noData||t.isLoading||t.errorTips?t._e():i("div",{staticStyle:{height:"100%",overflow:"hidden",background:"#fff","padding-bottom":"100px"}},[i("div",{staticStyle:{padding:"12px 0",overflow:"hidden",height:"52px"}},[i("div",{staticClass:"fl left-btn-group",staticStyle:{"font-weight":"bold"}},[i("a",{class:{selected:"finishCount"===t.selectedType},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleType("finishCount")}}},[t._v("次数")]),i("a",{class:{selected:"finishRate"===t.selectedType},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleType("finishRate")}}},[t._v("完成率")])]),i("div",{directives:[{name:"show",rawName:"v-show",value:"finishCount"===t.selectedType,expression:"selectedType === 'finishCount'"}],staticClass:"fr right-btn-group"},[i("a",{class:{selected:"sum"===t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleTimeSec("sum")}}},[t._v("累计")]),i("a",{class:{selected:"lastWeek"===t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleTimeSec("lastWeek")}}},[t._v("上周")])])]),i("div",{staticClass:"fixed-report-title"},[i("table",{directives:[{name:"show",rawName:"v-show",value:"finishCount"==t.selectedType,expression:"selectedType == 'finishCount'"}]},[i("tr",[i("td",[t._v("项目")]),i("td",[t._v("移交次数")]),i("td",[t._v("一次验收"),i("br"),t._v("通过率")])])]),i("table",{directives:[{name:"show",rawName:"v-show",value:"finishRate"==t.selectedType,expression:"selectedType == 'finishRate'"}]},[i("tr",[i("td",[t._v("项目")]),i("td",{staticStyle:{width:"50%"}},[t._v("\n            总体完成率"),i("i",{staticClass:"icon icon-yiwen special-inspect-icon-tips",on:{click:function(e){t.tips()}}})])])])]),i("scroller",{staticStyle:{height:"100%","margin-top":"0px"}},[i("ul",{directives:[{name:"show",rawName:"v-show",value:"finishCount"==t.selectedType,expression:"selectedType == 'finishCount'"}],staticClass:"table-tree-r",staticStyle:{"margin-top":"0"}},t._l(t.list.finishCount,(function(e,o){return i("li",{key:o,class:{open:!e.open},on:{click:function(i){t.toggleFold(e)}}},[i("div",[t._v(t._s(e.name))]),i("div",[t._v("\n            "+t._s(e[t.timeSec].processCount>1e4?(e[t.timeSec].processCount/1e4).toFixed(1)+"万":e[t.timeSec].processCount)+"\n          ")]),i("div",[t._v(t._s((100*+e[t.timeSec].passRate).toFixed(1)+"%"))]),i("ul",{on:{click:function(t){t.stopPropagation()}}},t._l(e.children,(function(e,o){return i("li",{key:o},[i("div",[t._v(t._s(e.first_project_name))]),i("div",[t._v("\n                "+t._s(e[t.timeSec].processCount>1e4?(e[t.timeSec].processCount/1e4).toFixed(1)+"万":e[t.timeSec].processCount)+"\n              ")]),i("div",[t._v(t._s((100*+e[t.timeSec].passRate).toFixed(1)+"%"))])])})))])}))),i("ul",{directives:[{name:"show",rawName:"v-show",value:"finishRate"==t.selectedType,expression:"selectedType == 'finishRate'"}],staticClass:"table-tree-r",staticStyle:{"margin-top":"0"}},t._l(t.list.finishRate,(function(e,o){return i("li",{key:o,class:{open:!e.open},on:{click:function(i){t.toggleFold(e)}}},[i("div",[t._v(t._s(e.name))]),i("div",{staticStyle:{width:"49%"}},[i("p",{staticClass:"process-bar"},[i("span",{style:{width:100*+e.rate+"%"}})]),i("span",[t._v(t._s((100*+e.rate).toFixed(1)+"%")+" ")])]),i("ul",{on:{click:function(t){t.stopPropagation()}}},t._l(e.children,(function(e,o){return i("li",{key:o},[i("div",[t._v(t._s(e.first_project_name))]),i("div",{staticStyle:{width:"49%"}},[i("p",{staticClass:"process-bar"},[i("span",{style:{width:100*+e.rate+"%"}})]),i("span",{},[t._v(t._s((100*+e.rate).toFixed(1)+"%"))])])])})))])})))])],1),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":t.noData||!!t.errorTips,"empty-text":t.errorTips?t.errorTips:"没有报表数据",type:t.errorTips?"error":"report"}})],1)}),[],!1,null,"2cb6af89",null);e.default=n.exports},"417f":function(t,e,i){"use strict";(function(t){var o=i("07d2"),s=i("e2a7"),n=i("da2f"),l=i("774b");e.a={name:"ReportProcessCheckStatisticsCtrl",components:{Item:o.a,Scroller:l.a},filters:{},data:function(){return{isLoading:!0,errorTips:"",timeSec:"lastWeek",selectedType:"finishCount",list:{},noData:!0}},watch:{},activated:function(){this.init()},mounted:function(){},methods:{init:function(){var e=this;return this.isLoading=!0,this.errorTips="",this.noData=!0,Object(n.k)().then((function(i){e.list=i,e.isLoading=!1,e.noData=t.isEmpty(i)})).catch((function(i){console.error(i),e.list={},e.errorTips=t.isString(i)?i:"获取数据失败",e.isLoading=!1}))},toggleType:function(t){this.selectedType=t},toggleTimeSec:function(t){this.timeSec=t},tips:function(){s.a.notify("根据标段所选检查项、部位划分计算，<br>总体完成率=已验收移交通过的部位总数/理论上可验收移交的部位总数","知道了",{cssClass:"notifyBox"})},toggleFold:function(t){this.$set(t,"open",!t.open)}}}}).call(this,i("391c"))},"774b":function(t,e,i){"use strict";var o=i("d18d").a,s=(i("b225"),i("17cc")),n=Object(s.a)(o,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?i("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[i("div",{staticClass:"pull-refresh"},[i("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?i("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?i("div",{staticClass:"page-loading"},[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?i("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=n.exports},"8d6d":function(t,e,i){"use strict";i("a903")},"9d55":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},a903:function(t,e,i){var o=i("ae52");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,i("85cb").default)("79241da7",o,!0,{sourceMap:!1,shadowMode:!1})},ae52:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .fixed-report-title[data-v-2cb6af89],.zjapp .table-tree-r li[data-v-2cb6af89]{border:none!important}.zjapp .special-inspect-icon-tips[data-v-2cb6af89]{font-size:18px;color:#b4b4b4;line-height:34px;padding-left:10px}",""])},b225:function(t,e,i){"use strict";i("ef48")},d18d:function(t,e,i){"use strict";(function(t){i("2b45");var o,s=i("4360"),n=i("48f4"),l=i("162a"),a=i("e2a7"),r=i("a500"),c=i("6f9e"),p={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return s.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return s.a.state.global.isNumberInputOpen?s.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;c.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var i=e&&e.target,o=i&&i.tagName&&i.tagName.toLowerCase();if("input"===o||"textarea"===o){window.addEventListener("resize",(function e(){var o=i.getBoundingClientRect(),s=t.$el.getBoundingClientRect(),n=o.bottom-s.bottom;n>0&&t.scrollBy(n),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){c.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,i=this.$refs["scroll-warp"].scrollTop,o=this.$refs["scroll-warp"].scrollHeight;if(i+this.$refs["scroll-warp"].clientHeight>=o-5&&!this.loading&&this.hasNext){this.loading=!0;var s=this.$listeners.loadNext();s&&s.then&&"function"==typeof s.then?s.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(p&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,i=t.touches[0].clientY;return Math.abs(i-p.y)>Math.abs(e-p.x)&&Math.abs(i-p.y)>=3?i>p.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(p={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,i=t.touches[0].clientY,o=i-p.y,s=this.getTouchDiretion(t);"down"===s?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(o-p.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===s?this.pullDist>0&&(this.pullDist=p.pullDist-(p.y-i),t.preventDefault()):this.pullDist=p.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(p={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,i=this.pullDist,o=t,s=o-i,n=i;return i===o?Promise.resolve():new Promise((function(t){!function l(){window.requestAnimationFrame((function(){n+=s/6,e.pullDist=n,i<o&&n<o||i>o&&n>o?l():(e.pullDist=o,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=n.default.getCurrentModuleCode(),i=n.default.getCurrentRoute(),o=i.meta&&i.meta.isTodo;if(n.default.isModuleNeedBuilding(e)&&!o){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return r.a.addTrack("公共-手动下拉刷新","",""),l.a.beginManualUpdate(),n.default.checkSync(t).then((function(t){return l.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?a.a.alert("当前网络无法同步数据"):a.a.alert(t),l.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,s=this.getScrollTop(),n=s+t,l=Math.round(i/16.7),a=t/l,r=s,c=o=+new Date;return s===n?Promise.resolve():new Promise((function(t){!function i(){window.requestAnimationFrame((function(){c===o&&(r+=a,e.$refs["scroll-warp"].scrollTop=r,s<n&&r<n||s>n&&r>n?i():(e.$refs["scroll-warp"].scrollTop=n,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,i=this.getScrollTop(),o=t-i;return this.scrollBy(o,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,i=(t=t.$el?t.$el:t).getBoundingClientRect(),o=this.$refs["scroll-warp"].getBoundingClientRect();if(i&&o){var n=document.documentElement.clientHeight-(s.a.state.global.isNumberInputOpen?e:0),l=o.bottom<n?o.bottom:n,a=o.top-i.top,r=i.bottom-l;a>0?this.scrollBy(-a-10):r>0&&this.scrollBy(r+10)}},isCurrent:function(e,i){var o=this;e.length&&t.each(e,(function(t){t._uid===i?o.isCurrKeyboard=!0:o.isCurrent(t.$children,i)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,i("391c"))},ef48:function(t,e,i){var o=i("9d55");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,i("85cb").default)("a1a65c0c",o,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,