(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-9fee836a"],{"0eb70":function(e,t,n){"use strict";n("990c")},"114f":function(e,t,n){"use strict";(function(e){n("5ab2"),n("e10e"),n("6d57"),n("e697"),n("cc57"),n("163d");var i=n("28f8"),r=n("8693"),c=n("5b5e"),o=n("06f6"),a=n("242b"),s=n("6144"),l=n("3bd5"),u=n("3122"),d=n("2a15"),f=(n("3516"),n("6e1b"));function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var m=l.a.getUser();t.a={defaultPlaceKey:"special-inspect-prolbem-pure-default-place",getProblemData:function(t){return c.a.getCheckProblemInfo(t).then((function(t){return p(p({},t),{},{id:t.id,status:t.status,proj_id:t.proj_id,place:{building_id:t.building_id,unit_id:t.unit,floor:t.floor,room_id:t.room_id,full_name:t.place},bidsection_id:t.bidsection_id,batch_id:t.batch_id,batch_type:t.batch_type,created_by:t.created_by,checkItem:{id:t.item_id,name:t.item_name,full_name:t.item_full_name,parentId:t.item_parent_id},description:{id:t.desc_id,name:t.desc},image_file:JSON.parse(t.image_file||"[]"),remark:t.remark,repair_requirements:t.repair_requirements,level:t.emergency_degree||"一般",deadline:void 0===t.deadline||null===t.deadline?7:Number(t.deadline),building_id:t.building_id,unit:t.unit,floor:t.floor,room_id:t.room_id,place_point:JSON.parse(t.problem_values||"[]"),drawing_file:JSON.parse(t.drawing_file||"[]"),repair_set:t.repair_set,process_mode:t.process_mode,repair:t.repair&&t.repair.id?p({},t.repair):t.repair_set&&t.repair_set.id?p({},t.repair_set):{},repair_image_file:JSON.parse(t.repair_image_file||"[]"),contractor:{id:t.contractor_id,name:t.contractor_name},reinspect_set:t.reinspect_set,cc_set:t.cc_set_array||[],sent_back:t.sent_back&&t.sent_back.id?p({},t.sent_back):{},sent_back_image_file:JSON.parse(t.sent_back_image_file||"[]"),regist:{id:t.regist.id,name:t.regist.name,mobile:t.regist.mobile,is_im_user:t.regist.is_im_user},currentReinspectBy:e.find(e.clone(t.reinspectBy),(function(e){return e.id===l.a.getUser().user_id}))||{reinspect_image_file:[],reinspect_remark:""}})})).then((function(e){var t=e&&e.biz_id||"";return t?r.a.getSpecialInspectData(t).then((function(t){return e.checkItem={id:t.checkitem_id,name:t.checkitem_name,full_name:t.checkitem_full_name,parentId:t.checkitem_parent_id},e.specialInspectId=t.id,e})):e})).then((function(e){return f.a.getBatchDetailAndCheckers(e.batch_id).then((function(t){return e.batchDetail=t,e}))})).catch((function(e){console.error(e)}))},createNewData:function(e,t){var n=this;return Promise.resolve().then((function(){return e?t?r.a.getPlaceSpecialInspectData(e,t):r.a.getSpecialInspectCheckItemDetail(e):Promise.reject(new Error("专项巡检，创建问题，缺少 specialInspectId"))})).then((function(e){return Promise.resolve().then((function(){if(t)return r.a.getBatchPlace(t).then((function(e){if(e.building_id)return{building_id:e.building_id,unit_id:e.unit,floor:e.floor,room_id:e.room_id,full_name:e.name}}))})).then((function(t){return e.defaultPlace=t||s.a.getObject(n.defaultPlaceKey,s.a.level.user)||{},e}))})).then((function(t){return{status:"",proj_id:t.proj_id,place:t.defaultPlace||{},batch_id:t.batch_id,batch_type:"专项巡检",checkItem:{id:t.item_id||t.checkitem_id,name:t.item_name||t.checkitem_name,full_name:t.full_name||t.checkitem_full_name},description:{},image_file:[],remark:"",level:"一般",deadline:7,repair_set:{},contractor:{},cc_set:[],reinspect_set:[],bidsection_id:"",building_id:t.defaultPlace&&t.defaultPlace.building_id||"",unit:t.defaultPlace&&t.defaultPlace.unit_id||"",floor:t.defaultPlace&&t.defaultPlace.floor||"",room_id:t.defaultPlace&&t.defaultPlace.room_id||"",place_point:[],deduction:1,redline_deduction:0,biz_id:e,biz_children_id:t.id,created_by:m.user_id,checkitem_extension:JSON.parse(t.checkitem_extension||"{}")}}))},getDiagram:function(e){return Promise.resolve().then((function(){if(e){var t=e.building_id,n=e.unit_id,i=e.floor,r=e.room_id;return r?o.default.getRoomTypeDiagram(r):n&&i?a.a.getDiagram(t,n,i,1):i?a.a.getDiagram(t,"",i,2):void 0}}))},getProblemList:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0;return e=Array.isArray(e)?e:[e],Promise.resolve().then((function(){return r.a.getProblemList(e,t)})).then((function(e){return(e||[]).forEach((function(e){e.thumbnail=u.a.getDefaultThumbnailFromList(e.image_file,"专项巡检"),"检查完毕"===e.status&&(e.status="已提交")})),e}))},getBatchProblemList:function(e){var t=this;return Promise.resolve().then((function(){return r.a.getAllProblemIncloudRootSpecialInspectIds(e)})).then((function(e){var n=(e||[]).map((function(e){return e.id}));return t.getProblemList(n)}))},getPlaceProblemList:function(e){var t=this;return r.a.getMode11SpecilInspectByPlaceId(e).then((function(n){var i=(n||[]).map((function(e){return e.special_inspect_id}));return t.getProblemList(i,e)}))},deleteBatchDraftProblem:function(e){return d.a.deleteBatchDraftProblem(e)}}}).call(this,n("391c"))},"26ff":function(e,t,n){"use strict";(function(e){n("5ab2"),n("e10e"),n("cc57");var i=n("28f8"),r=(n("6d57"),n("06a2"),n("07d2")),c=n("4aef"),o=n("c726"),a=n("6e1b"),s=n("37d5"),l=n("3516"),u=n("48f4"),d=n("e2a7"),f=n("3bd5"),h=n("114f");function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}var m=f.a.getUser();t.a={name:"IndexList",components:{Item:r.a,StatusText:c.a},props:{batchId:{type:String}},data:function(){return{isLoading:!1,batchData:{},listData:[],placeTotal:[],isBatchCreator:!1,isBatchChecker:!1,editable:!1}},watch:{batchId:{handler:function(e){e?this.init():(this.batchData={},this.listData=[])},immediate:!0}},created:function(){this.$on("reload",this.init)},activated:function(){this.init()},methods:{init:function(){var e=this;return Promise.all([this.getBatchData(),this.getListData()]).finally((function(){e.isLoading=!1,e.$emit("loaded",e.listData)})).catch((function(t){$log.error(t),e.batchData={},e.listData=[],e.isLoading=!1}))},getBatchData:function(){var t=this;return this.batchId?a.a.getSpecialInspectBatchById(this.batchId).then((function(e){t.batchData=e,t.isBatchCreator=e.created_by===m.user_id})).then((function(){return Promise.resolve().then((function(){var n=t.batchData.root_id||t.batchData.parent_id||t.batchData.id;return l.a.getBatchUsers(n).then((function(n){var i=f.a.getUser().user_id;t.isBatchChecker=e.some(n,{user_id:i}),t.editable="检查完毕"!==t.batchData.status&&t.isBatchChecker}))}))})):Promise.reject("缺少批次id")},getListData:function(){var e=this;return this.batchId?a.a.getBatchPlaces(this.batchId).then((function(t){return a.a.getMode11PlacesEndItemTotal(e.batchId).then((function(n){e.placeTotal=n;var i={};(n||[]).forEach((function(e){i[e.id]=e})),(t||[]).forEach((function(e){var t=i[e.id];e.done=t&&t.done?t.done:0,e.unqualified=t&&t.unqualified?t.unqualified:0})),e.listData=t})).catch((function(e){d.a.alert(e)}))})):Promise.reject("缺少批次id")},addPlace:function(){var e=this;return a.a.hasBatchCheckitem(this.batchId).then((function(t){t?o.a.open({title:"选择测区",projectId:e.batchData.proj_id,callback:function(t){return o.a.close(),a.a.addBatchPlace(t,e.batchId,e.batchData.proj_id).then((function(){return e.getListData()})).catch((function(e){$log.error(e),d.a.alert("添加测区失败")}))}}):d.a.alert("没有批次检查项，请先下拉同步数据")}))},getPlaceOptions:function(){return s.default.getPlaceList(this.batchData.proj_id)},gotoPlaceCheckitem:function(e){this.$router.push({name:"SpecialInspectCheckitemList",query:{batchId:this.batchId,placeId:e.id}})},submitBatch:function(){var e=this,t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},this.batchData);return delete t.contracts,Promise.resolve().then((function(){var t=e.placeTotal.filter((function(e){return 0===e.done})),n=e.placeTotal.filter((function(e){return 0!==e.draft}));if(t.length){var i=t.map((function(e){return e.name})).join("、");return Promise.reject("".concat(i,"未检查，请先处理再提交"))}if(n.length){var r=n.map((function(e){return e.name})).join("、");return Promise.reject("".concat(r,"有草稿数据，请先处理再提交"))}})).then((function(){return a.a.getMode11WaitUploadPlaceCheckitem(t.id).then((function(e){if(e&&e.length)return Promise.reject("还有问题正在上传，请等待问题上传完毕")}))})).then((function(){return d.a.confirm("请确保所有检查人已上传数据，提交后不可修改，确认提交？").then((function(n){if(n)return a.a.finishCheckBatch(t).then((function(){return u.default.setLocalChanged(),e.init()})).then((function(){return h.a.deleteBatchDraftProblem(e.batchId)}))}))})).catch((function(e){$log.error(e),e&&500102===e.errcode?d.a.alert("检测到检查结果有冲突，请下拉刷新后再试"):d.a.alert(e)}))}}}}).call(this,n("391c"))},"2a15":function(e,t,n){"use strict";var i=n("fc9f");t.a={deleteBatchDraftProblem:function(e){return i.a.executeSql("delete from checkquality_problem where batch_id = ? and status = '草稿'",[e])}}},"2e80":function(e,t,n){var i=n("9e2b");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("85cb").default)("3ccc3358",i,!0,{sourceMap:!1,shadowMode:!1})},"3e1e":function(e,t,n){"use strict";n("2e80")},"4aef":function(e,t,n){"use strict";var i=n("dd16").a,r=n("17cc"),c=Object(r.a)(i,(function(){var e=this.$createElement;return(this._self._c||e)("span",{class:this.classSet[this.status]},[this._v(this._s(this.text||this.status))])}),[],!1,null,null,null);t.a=c.exports},"4e84":function(e,t,n){"use strict";n("5ab2"),n("6d57"),n("e10e");var i=n("28f8"),r=(n("cc57"),n("fc9f")),c=function(e){var t="select * from section \n      where proj_id = '".concat(e,"' \n      order by name");return r.a.query(t)},o=function(e){var t="select b.*, sb.section_id from building b\n      join section_building sb on b.id = sb.building_id\n      where b.proj_id = '".concat(e,"' \n      order by b.sort, b.code");return r.a.query(t)},a=function(e){var t="select b.* from section_building sb \n      left join building b on sb.building_id = b.id \n      where sb.section_id = '".concat(e,"' \n      order by b.sort, b.code");return r.a.query(t)},s=function(e){var t="select * from build_unit \n      where building_id = '".concat(e,"'\n      order by sort");return r.a.query(t)},l=function(e){var t="select * from building_floor \n      where building_id = '".concat(e,"' \n      order by sort");return r.a.query(t)},u=function(e,t,n){var i=t?" and unit = '".concat(t,"' "):"",c="select * from room where \n      building_id = '".concat(e,"' and floor = '").concat(n,"' ").concat(i," \n      order by sort");return r.a.query(c)},d=n("7cb8");function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}t.a={getSections:function(e){return c(e)},getBuildingsByProject:function(e){return o(e)},getBuildingsBySection:function(e){return a(e)},getUnits:function(e){return s(e).then((function(e){return((e=e.filter((function(e){return!!e.name})))||[]).map((function(e){return h(h({},e),{},{id:e.name,name:Object(d.a)(e.name,"单元")})}))}))},getFloors:function(e){return l(e).then((function(e){return(e||[]).map((function(e){return h(h({},e),{},{id:e.floor,name:Object(d.a)(e.floor,"层")})}))}))},getRooms:function(e,t,n){return u(e,t,n).then((function(e){return(e||[]).map((function(e){return h(h({},e),{},{name:e.room_no})}))}))}}},"68c1":function(e,t,n){(e.exports=n("690e")(!1)).push([e.i,".zjapp .list-empty[data-v-052597d6]{display:flex;flex-direction:column;flex:1}.zjapp .app-btn-text[data-v-052597d6]{font-size:16px}",""])},"990c":function(e,t,n){var i=n("68c1");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("85cb").default)("5633251b",i,!0,{sourceMap:!1,shadowMode:!1})},"9e2b":function(e,t,n){(e.exports=n("690e")(!1)).push([e.i,"[data-v-0f3c0354] .layout-content{display:flex;flex-direction:column;overflow:hidden;background:#fff}.zjapp .page-scroll[data-v-0f3c0354]{flex:1;overflow:auto;padding-bottom:100px}.zjapp .bread-crumb[data-v-0f3c0354]{padding:8px 15px;font-size:16px;line-height:30px;color:#999}.zjapp .bread-crumb .level-item i[data-v-0f3c0354]{font-size:12px;margin:0 10px}.zjapp .bread-crumb .level-item:last-child>i[data-v-0f3c0354]{display:none}.zjapp .bread-crumb .active[data-v-0f3c0354]{color:#4275e8}.zjapp .empty-msg[data-v-0f3c0354]{display:flex;align-items:center;justify-content:center;color:#c8c8c8;margin-top:30px}.zjapp .empty-msg .line[data-v-0f3c0354]{width:48px;margin:0 8px;border-top:1px solid #e4e4e4}[data-v-0f3c0354] .icon-qualified{color:#4275e8}.zjapp .place-item[data-v-0f3c0354]{align-items:center}",""])},bb04:function(e,t,n){"use strict";n.r(t);var i=n("26ff").a,r=(n("0eb70"),n("17cc")),c=Object(r.a)(i,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{class:{"list-empty":e.isLoading||!e.listData||!e.listData.length}},[!e.isLoading&&e.listData.length?[e._l(e.listData,(function(t){return n("item",{key:t.id,staticClass:"border-bottom",attrs:{"icon-left":"part-title","icon-right":"arrow-right"},on:{click:function(n){e.gotoPlaceCheckitem(t)}}},[n("div",{staticClass:"item-text"},[e._v(e._s(t.name))]),n("div",{staticClass:"item-font color-gray"},[e._v("\n        "+e._s(t.done?t.unqualified+"项不合格":"未检查")+"\n      ")])])})),e.editable?n("app-button-group",[n("app-button",{attrs:{type:"text"},on:{click:e.addPlace}},[e._v("\n        添加测区\n      ")])],1):e._e(),"检查完毕"===e.batchData.status?n("div",{staticClass:"p15 color-gray3 align-c"},[e._v("\n      "+e._s(e._f("formatDate")(e.batchData.modified_on))+" "+e._s(e.batchData.created_by_name)+" 提交检查完毕\n    ")]):e._e(),e.isBatchCreator&&"检查完毕"!==e.batchData.status?n("app-button-group",{staticClass:"mt20"},[n("app-button",{on:{click:e.submitBatch}},[e._v("\n        检查完毕并提交\n      ")])],1):e._e()]:e._e(),n("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.listData.length}},[n("div",{attrs:{slot:"empty-text"},slot:"empty-text"},[e._v("\n      暂无测区"),e.editable?[e._v("，"),n("app-button",{attrs:{type:"text"},on:{click:e.addPlace}},[e._v("\n          请添加\n        ")])]:e._e()],2)])],2)}),[],!1,null,"052597d6",null);t.default=c.exports},c726:function(e,t,n){"use strict";var i=n("329b"),r=(n("5ab2"),n("28f8")),c=(n("ed63"),n("8cf2"),n("e697"),n("6d57"),n("e10e"),n("cc57"),n("e204"),n("e89f")),o=n("07d2"),a=n("4e84");function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var u=["building","unit","floor","room"],d=["unit"],f={name:"PlaceSelectDialog",components:{Item:o.a},mixins:[c.a],data:function(){return{show:!1,isLoading:!0,title:"",items:[],optionalItems:[],curItem:"",options:[],hasUnit:!1,projectId:"",sectionId:"",selected:{},defaultSelected:{},beforeConfirm:function(){},callback:function(){}}},computed:{crumbs:function(){var e=[],t=this.items,n=this.curItem,i=t.findIndex((function(e){return e===n}));if(i>=0)for(var r=0;r<=i;r++){var c=t[r],o=t[r-1],a=o?this.selected[o]&&this.selected[o].name:"全部";("unit"!==o||a)&&e.push({name:a,item:c})}return e},hasSelected:function(){return!!this.selected&&!!Object.keys(this.selected).length},prevItem:function(){var e=this,t=this.items.findIndex((function(t){return t===e.curItem}));return this.items[t-1]},nextItem:function(){var e=this,t=this.items.findIndex((function(t){return t===e.curItem}));return this.items[t+1]}},methods:{open:function(e){if(this.items=e.items||u,this.optionalItems=e.optionalItems||d,!this.items||!this.items.length)return Promise.reject(new Error("palce-select open() 参数错误"));this.curItem=this.items[0],this.projectId=e.projectId,this.sectionId=e.sectionId,this.defaultSelected=e.selected,this.title=e.title,this.beforeConfirm="function"==typeof e.beforeConfirm?e.beforeConfirm:function(){},this.callback="function"==typeof e.callback?e.callback:function(){},this.init(),this.show=!0},close:function(){this.show=!1},getDefaultId:function(e){if(!this.defaultSelected)return"";var t=this.defaultSelected[e];switch(e){case"section":return t&&t.id||"";case"building":return this.defaultSelected.building_id||t&&t.id||"";case"unit":return this.defaultSelected.unit_id||t&&t.id||"";case"floor":return("string"==typeof t?t:t&&t.id)||"";case"room":return this.defaultSelected.room_id||t&&t.id||""}},init:function(){var e=this,t=Promise.resolve(),n=!0;return this.selected={},this.curItem=this.items[0],this.items.forEach((function(i){t=t.then((function(){if(n)return e.getOptions(i).then((function(t){var r=e.getDefaultId(i),c=r&&(t||[]).find((function(e){return e.id===r}));if(!t||!t.length)return e.$set(e.selected,i,null),void(n=!!e.optionalItems.includes(i));c?(e.$set(e.selected,i,l({},c)),e.options=t,e.curItem=i,n=!0):(i===e.items[0]&&(e.options=t),n=!1)}))}))})),t},crumbClick:function(e){var t=this;this.curItem=e.item;var n=this.items.findIndex((function(e){return e===t.curItem}));return this.clearChildrenFromIndex(n),this.getOptions().then((function(e){if(t.options=e,"unit"===t.curItem&&(!t.options||!t.options.length)&&t.nextItem)return t.curItem=t.nextItem,t.getOptions().then((function(e){t.options=e}))}))},clearChildrenFromIndex:function(e){for(var t=this.items,n=e;n<t.length;n++){var i=t[n];this.$delete(this.selected,i)}},getOptions:function(e){var t=this;this.isLoading=!0,e=e||this.curItem;var n=this.items;return Promise.resolve().then((function(){var i=t.projectId,r=t.sectionId||t.selected&&t.selected.section&&t.selected.section.id,c=t.selected&&t.selected.building&&t.selected.building.id,o=t.selected&&t.selected.unit&&t.selected.unit.id,s=t.selected&&t.selected.floor&&t.selected.floor.id;switch(e){case"section":return a.a.getSections(i);case"building":return n.some((function(e){return"section"===e}))?a.a.getBuildingsBySection(r):a.a.getBuildingsByProject(i);case"unit":return a.a.getUnits(c);case"floor":return a.a.getFloors(c);case"room":return a.a.getRooms(c,o,s)}})).then((function(n){return"unit"===e&&(t.hasUnit=n&&n.length),n})).catch((function(e){$log.error(e)})).finally((function(){t.isLoading=!1}))},selectedItem:function(e){var t=this,n=this.items,i=this.curItem;if(i&&e){this.$set(this.selected,i,l({},e));var r=n.findIndex((function(e){return e===i}));this.clearChildrenFromIndex(r+1),this.nextItem?(this.curItem=this.nextItem,this.getOptions().then((function(e){if(t.options=e,"unit"===t.curItem&&(!t.options||!t.options.length)&&t.nextItem)return t.curItem=t.nextItem,t.getOptions().then((function(e){t.options=e}))})).then((function(){t.options&&t.options.length||t.finish()}))):this.finish()}},finish:function(){var e=this,t={fullname:""};this.items.forEach((function(n){var i=e.selected[n];i&&(t[n]=i,"floor"===n&&e.selected.room||(t.fullname+=i.name))}));var n=this.beforeConfirm&&this.beforeConfirm(t);n instanceof Promise||(n=Promise.resolve(n)),n.then((function(n){if(!1===n)return!1;e.callback&&e.callback(t)}))}}},h=(n("3e1e"),n("17cc")),p=Object(h.a)(f,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("transition",{attrs:{name:"slide-right"}},[e.show?n("page-content",{attrs:{mode:"dialog",title:e.title,"on-close":e.close}},[n("div",{staticClass:"bread-crumb"},e._l(e.crumbs,(function(t){return n("span",{key:t.item,staticClass:"level-item",class:{active:t.item===(e.hasUnit||"unit"!==e.prevItem?e.curItem:e.prevItem)},on:{click:function(n){e.crumbClick(t)}}},[e._v("\n        "+e._s(t.name)),n("icon",{attrs:{name:"arrow-right"}})],1)}))),!e.isLoading&&e.options.length?n("div",{ref:"placeSelectScroll",staticClass:"page-scroll"},[e._l(e.options,(function(t,i){return n("item",{key:i,staticClass:"border-bottom place-item",attrs:{text:t.name,"icon-right":e.selected[e.curItem]&&e.selected[e.curItem].id===t.id?"qualified":""},on:{click:function(n){e.selectedItem(t)}}})})),n("div",{staticClass:"empty-msg"},[n("span",{staticClass:"line"}),e._v("\n        就这么多了\n        "),n("span",{staticClass:"line"})])],2):e._e(),!e.isLoading&&e.options.length?n("app-button-group",{attrs:{"fixed-bottom":""}},[n("app-button",{attrs:{disabled:!e.hasSelected},on:{click:e.finish}},[e._v("\n        确定\n      ")])],1):e._e(),n("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.options||!e.options.length,"empty-text":"没有信息"}})],1):e._e()],1)}),[],!1,null,"0f3c0354",null).exports,m=!1;m||(m=new(i.default.extend(p))({el:document.createElement("div")}),document.body.appendChild(m.$el));t.a=m},dd16:function(e,t,n){"use strict";(function(e){t.a={name:"StatusText",props:{status:{type:String},text:{type:String},extend:{type:Object,default:function(){return{}}}},data:function(){return{classSet:e.extend({"草稿":"color-gray","暂存":"color-gray","检查中":"color-orange","待整改":"color-red","待复验":"color-orange","待验收":"color-red","待报验":"color-red","待申请进场":"color-red","待初验":"color-red","待送检":"color-red","待上传报告":"color-red","待退场":"color-red","待建设单位验收":"color-red","待区域验收":"color-red","供应链退回":"color-red","预创建":"color-status-blue","已提交":"color-green","已整改":"color-green","已验收":"color-green","已通过":"color-green","已退场":"color-gray","已关闭":"color-gray","非正常关闭":"color-gray","已退回":"color-red","已完成":"color-green","已甩项":"color-gray","检查完毕":"color-green","送检合格":"color-green","复验合格":"color-green","验收合格":"color-green","验收不合格":"color-red","未验收":"color-orange","待点评":"color-orange","已点评":"color-green","合格":"color-green","不合格":"color-red","进度正常":"color-green","进度滞后":"color-red","施工单位验收合格":"color-green","监理单位验收合格":"color-green","建设单位验收合格":"color-green","施工单位验收不合格":"color-red","监理单位验收不合格":"color-red","建设单位验收不合格":"color-red"},this.extend)}},mounted:function(){}}}).call(this,n("391c"))},e89f:function(e,t,n){"use strict";var i=n("04f3"),r=n("cf09"),c=n("4360"),o=0;t.a={name:"PopupMixin",data:function(){return{backButtonEvent:null}},watch:{show:function(e){var t=this;if(e){if(this.$nextTick((function(){t.$el&&t.$el.style&&(t.$el.style.zIndex=++r.a.zIndex,o++,c.a.commit("app/SET_HAS_POPUP",!!o))})),!this.backButtonEvent){var n=this.close||this.closePopup;this.backButtonEvent=Object(i.a)(n)}}else--o<0&&(o=0),c.a.commit("app/SET_HAS_POPUP",!!o),this.backButtonEvent&&(Object(i.c)(this.backButtonEvent),this.backButtonEvent=null)}},methods:{}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,