(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-3fdbdaab"],{"2c74":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .tree-node[data-v-9ed883e2]{position:relative;flex:1;display:flex;align-items:center;overflow:hidden}.zjapp .tree-node .main-name[data-v-9ed883e2]{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.zjapp .tree-node .xingxing[data-v-9ed883e2]{font-size:14px;position:absolute;left:0;color:#4275e8;margin-right:6px}.zjapp .tree-node .xingxing.translate[data-v-9ed883e2]{color:transparent}.zjapp .tree-node .is-expired[data-v-9ed883e2]{min-width:60px;margin-left:12px;font-size:12px;text-align:center;border-radius:4px;color:#fff;background-color:#ff3c46}.zjapp .tree-node .check-icon[data-v-9ed883e2]{position:absolute;right:0}.zjapp .content[data-v-9ed883e2]{position:fixed;left:0;top:0;width:100%;height:100%;overflow:hidden;z-index:9}.zjapp .list[data-v-9ed883e2]{position:absolute;top:0;left:0;width:100%;overflow:auto;background-color:#fff;display:flex;flex-direction:column}.zjapp .list .scroll-view[data-v-9ed883e2]{flex:1;overflow-y:auto}[data-v-9ed883e2] .icon-qualified{width:34px;height:34px;line-height:34px;text-align:center;color:#4275e8}",""])},"6b61":function(e,t,i){"use strict";i("d3f8")},"70fe":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,'.zjapp .apply-daily-sub-setting .setting-title[data-v-db2d61ca]{position:relative;height:46px;padding:0 15px;box-sizing:border-box;line-height:46px;font-size:18px;font-weight:500;color:#333;background:#fff}.zjapp .apply-daily-sub-setting .setting-title[data-v-db2d61ca]:after{position:absolute;left:0;top:15px;display:block;width:4px;height:16px;content:"";background:#4275e8}.zjapp .apply-daily-sub-setting .setting-title .btn-inline[data-v-db2d61ca]{float:right;font-size:14px;color:#4275e8}.zjapp .apply-daily-sub-setting .setting-main .projects-list li[data-v-db2d61ca]{position:relative;height:46px;line-height:46px;padding:0 16px;box-sizing:border-box;border-bottom:1px solid #ececec;font-size:14px;color:#333;background:#fff}.zjapp .apply-daily-sub-setting .setting-main .projects-list li .name[data-v-db2d61ca]{position:absolute;left:16px;right:94px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .apply-daily-sub-setting .setting-main .projects-list li .sub-btn[data-v-db2d61ca]{position:relative;float:right;width:68px;height:24px;margin-top:11px;line-height:24px;text-align:center;color:#999;border:1px solid #999;border-radius:12px;font-size:12px}.zjapp .apply-daily-sub-setting .setting-main .projects-list li .sub-btn .loading-icon[data-v-db2d61ca]{position:absolute;left:50%;top:50%;transform:translate3d(-50%,-50%,0)}.zjapp .apply-daily-sub-setting .setting-main .projects-list li .sub-btn.active[data-v-db2d61ca]{color:#4275e8;border-color:#4275e8}',""])},"774b":function(e,t,i){"use strict";var n=i("d18d").a,o=(i("b225"),i("17cc")),s=Object(o.a)(n,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":e.pulling,"scroll-warp-complete":!e.hasNext&&!e.isEmpty,"scroll-warp-empty":e.isEmpty},style:{"padding-bottom":e.numberKeyboardCoverHeight+"px"},on:{scroll:e.onScroll,touchstart:e.onTouchstart,touchmove:e.onTouchmove,touchend:e.onTouchend}},[e.allowPullDown?i("div",{staticClass:"pull-refresh-warp",style:{height:e.pullDist+"px"}},[i("div",{staticClass:"pull-refresh"},[i("div",{staticClass:"animation-refresher",class:{refreshing:e.refreshing}}),e.updateTime?i("p",{staticClass:"pull-refresh-date"},[e._v("最后成功同步："+e._s(e.updateTime))]):e._e()])]):e._e(),e._t("default"),e.loading?i("div",{staticClass:"page-loading"},[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):e._e(),e.hasNext||e.isEmpty?e._e():[e.$slots.end?e._t("end"):e._e(),!e.$slots.end&&e.endText?i("div",{staticClass:"end-text"},[e._v("\n      "+e._s(e.endText)+"\n    ")]):e._e()]],2)}),[],!1,null,"2b1a346c",null);t.a=s.exports},8013:function(e,t,i){"use strict";i.r(t);i("5ab2"),i("e10e"),i("6d57");var n=i("28f8"),o=(i("cc57"),i("74cb"),i("190e")),s=i("774b"),r=i("1b7e"),a=i("329b"),l=(i("9dd9"),i("f548"),i("06a2"),i("88c5"),i("a1d4")),c=(i("6144"),i("915f")),p=i("04f3"),d=i("9eea"),u=i("fc08"),h={name:"DropDownSelectPeojectDialog",components:{Tree:l.a,appSearchBar:d.a},mixins:[c.a],data:function(){return{show:!1,showList:!1,isSearching:!1,listHeight:475,searchKeyword:"",options:[],selected:{},followProjectMapIds:new Map,backButtonEvent:null}},watch:{show:function(e){var t=this;e&&this.$nextTick((function(){t.showList=!0}))}},mounted:function(){},methods:{getFollowProjectIds:function(){var e=this;return u.a.getData().then((function(t){return e.followProjectMapIds=t.list}))},scrollToSelect:function(){var e=this.$refs.slidebox&&this.$refs.slidebox.$el,t=e&&e.querySelector(".is-checked");t&&t.scrollIntoViewIfNeeded(!0)},openPopup:function(e){var t=this;this.getFollowProjectIds(),this.value=!0,this.show=!0,this.options=e.options,this.selected=e.selected,this.listHeight=window.innerHeight-50,this.selected&&this.selected.id&&setTimeout((function(){t.scrollToSelect()}),200),this.backButtonEvent||(this.backButtonEvent=Object(p.a)(this.closePopup))},closePopup:function(){this.show=!1,this.value=!1,this.showList=!1,this.searchKeyword="",this.backButtonEvent&&(Object(p.c)(this.backButtonEvent),this.backButtonEvent=null)},onClose:function(){this.show=!1,this.setSearchMode(!1),this.$refs["app-search-bar-tree-select"]&&this.$refs["app-search-bar-tree-select"].cancelSearch()},select:function(e,t){var i=this;this.$refs["app-search-bar-checkitem-select"]&&this.$refs["app-search-bar-checkitem-select"].saveHistory(),this.selected=e,this.$emit("select",e,t),setTimeout((function(){i.closePopup()}),100)},setSearchMode:function(e){this.isSearching=e},keywordFilter:function(e){var t="";return t="1"===e.is_end?e.name.replace(new RegExp("^".concat(e.parent_name||"","-")),""):e.name,this.searchKeyword?t.replace(new RegExp(this.searchKeyword,"gm"),'<span class="color-blue">'+this.searchKeyword+"</span>"):t}}},f=(i("c5d7"),i("17cc")),g=Object(f.a)(h,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("transition",{attrs:{name:"slide-right"},on:{afterLeave:e.onClose}},[e.show?i("page-content",{staticClass:"content",attrs:{title:"选择项目","show-go-back":!0,"on-close":e.closePopup}},[e.showList?i("div",{staticClass:"list",style:{height:e.listHeight+"px"}},[i("app-search-bar",{ref:"app-search-bar-checkitem-select",staticClass:"bg-white",attrs:{"history-key":"home-tree-search-history-key"},on:{changeSearchStatus:e.setSearchMode},model:{value:e.searchKeyword,callback:function(t){e.searchKeyword=t},expression:"searchKeyword"}}),!e.isSearching||e.searchKeyword?i("tree",{ref:"slidebox",staticClass:"scroll-view",attrs:{"is-right":!1,accordion:!0,list:e.options,select:e.selected,keyword:e.searchKeyword,type:"check","empty-loading-status-text":"查无可订阅项目"},on:{onSelect:e.select},scopedSlots:e._u([{key:"default",fn:function(t){var n=t.item;return i("div",{staticClass:"tree-node"},[i("span",{staticClass:"main-name",domProps:{innerHTML:e._s(e.keywordFilter(n))}}),n.is_expired&&0!==n.is_expired?i("span",{staticClass:"is-expired"},[e._v("租期已过")]):e._e()])}}])}):e._e()],1):e._e()]):e._e()],1)}),[],!1,null,"9ed883e2",null).exports,b=!1;b||(b=new(a.default.extend(g))({el:document.createElement("div")}),document.body.appendChild(b.$el));var m=b,v=i("162a"),y=i("e2a7");function w(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function x(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?w(Object(i),!0).forEach((function(t){Object(n.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):w(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var j={components:Object(n.a)({Scroller:s.a},o.a.name,o.a),data:function(){return{isLoading:!1,errorTips:null,items:[],selectProjectDialog:m,classifyId:"",projectList:[]}},computed:{projectListExpiredFilter:function(){var e=this;return function t(i){var n=[];return i.forEach((function(i){if(!(i.is_expired&&0!==i.is_expired))if(i.is_end&&"1"===i.is_end){e.items.filter((function(e){return e.proj_id===i.id})).length>0||n.push(i)}else{var o=i.children||[];(o=t(o)).length>0&&n.push(x(x({},i),{},{children:o}))}})),n}(this.projectList)}},activated:function(){this.init()},methods:{subscribeChange:function(e){var t=this;e.subscribe_changing||(this.$set(e,"subscribe_changing",!0),v.a.post("/online/message/subscribe-project",null,{cate_id:this.classifyId,proj_id:e.proj_id,is_subscribe:e.subscribed?0:1}).then((function(){e.subscribed=!e.subscribed,t.$set(e,"subscribe_changing",!1)})))},selectAProject:function(e){this.selectProjectDialog.openPopup({options:this.projectListExpiredFilter})},selectedProjectHandler:function(e){if(0===this.items.filter((function(t){return t.proj_id===e.id})).length){var t={proj_id:e.id,proj_name:e.name,subscribed:!1};this.subscribeChange(t),this.items.push(t)}},hasNetWork:function(){var e=this;return r.a.getHasNetwork().then((function(t){return console.log("是否有网络",t),t||(e.errorTips="暂无网络"),t}))},init:function(){var e=this;return this.selectProjectDialog.$on("select",this.selectedProjectHandler),this.classifyId=this.$route.query.classifyId,this.items=[],this.isLoading=!0,this.hasNetWork().then((function(e){if(!e)return Promise.reject("当前无网络")})).then((function(){return v.a.request("/project-map/get-report-org-tree")})).then((function(t){e.projectList=t})).then((function(){return v.a.request("/online/message/subscribed-projects",{cate_id:e.classifyId})})).then((function(t){e.items=t.map((function(e){return x(x({},e),{},{subscribed:!0})})),e.isLoading=!1})).catch((function(t){y.a.alert(t.errmsg||t),e.isLoading=!1}))}}},k=(i("6b61"),Object(f.a)(j,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("page-content",{attrs:{title:"消息","show-go-back":!0}},[e.isLoading?e._e():i("div",{staticClass:"apply-daily-sub-setting"},[i("div",{staticClass:"setting-title"},[e._v("\n        订阅项目\n        "),i("div",{staticClass:"btn-inline",on:{click:e.selectAProject}},[e._v("\n            添加\n        ")])]),i("div",{staticClass:"setting-main"},[i("scroller",{attrs:{"is-empty":0===e.items.length}},[i("ul",{staticClass:"projects-list"},e._l(e.items,(function(t,n){return i("li",{key:n},[i("span",{staticClass:"name"},[e._v(e._s(t.proj_name))]),i("span",{staticClass:"sub-btn",class:{active:!t.subscribed},on:{click:function(i){e.subscribeChange(t)}}},[e._v("\n                        "+e._s(t.subscribed?"取消订阅":"订阅")+"\n                        "),t.subscribe_changing?i("van-loading",{staticClass:"loading-icon",attrs:{size:"14px"}}):e._e()],1)])})))])],1)]),i("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.items.length,type:e.errorTips?"error":"empty","empty-text":e.errorTips||"暂无订阅项目"}})],1)}),[],!1,null,"db2d61ca",null));t.default=k.exports},"8a6d":function(e,t,i){var n=i("2c74");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("1a4d763c",n,!0,{sourceMap:!1,shadowMode:!1})},"990d":function(e,t,i){"use strict";(function(e){i("cc57"),i("9dd9"),i("163d");var n=i("ceda");t.a={components:{TreeNode:n.a},props:{list:{type:Array,default:function(){return[]}},select:{type:Object,default:function(){return{}}},keyword:{type:String,default:""},isAllOpen:{type:Boolean,default:!1},type:{type:String,default:"tree"},openLevel:{type:Number,default:0},accordion:{type:Boolean,default:!1},expandOnClickNode:{type:Boolean,default:!0},emptyLoadingStatusText:{type:String,default:"没有检查项"}},data:function(){return{isTree:!0,treeList:[]}},watch:{keyword:function(e){var t=this;console.log(e),this.$nextTick((function(){t.treeList=e?t.fitlerByKeyword(t.deepClone(t.list),e):t.deepClone(t.list)}))}},created:function(){this.isTree=!0,this.initData()},methods:{initData:function(){if(e.isEmpty(this.list))return this.treeList=[];this.keyword?this.treeList=this.fitlerByKeyword(this.deepClone(this.list),this.keyword):this.treeList=this.deepClone(this.list)},deepClone:function(e){return JSON.parse(JSON.stringify(e))},onSelect:function(e,t){this.$emit("onSelect",e,t)},fitlerByKeyword:function(t,i){var n=this,o=[];return e.each(t,(function(t){if(new RegExp(i,"gm").test(t.name))t.isOpen=!0,o.push(t);else if(!e.isEmpty(t.children)){var s=n.fitlerByKeyword(t.children,i);e.isEmpty(s)||(t.isOpen=!0,t.children=s,o.push(t))}})),o}}}}).call(this,i("391c"))},"9d55":function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},a1d4:function(e,t,i){"use strict";var n=i("990d").a,o=i("17cc"),s=Object(o.a)(n,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"tree-list"},[e._l(e.treeList,(function(t){return i("tree-node",{key:t.id,attrs:{item:t,type:e.type,select:e.select,open:e.isAllOpen||!!e.keyword,"default-open-level":e.openLevel},on:{onSelect:e.onSelect}})})),i("loading-status",{attrs:{"is-empty":!e.treeList.length,"empty-text":e.emptyLoadingStatusText}},[e.keyword?i("template",{slot:"empty-text"},[e._v("\n      未搜索到包含\n      "),i("span",{staticClass:"color-blue"},[e._v(e._s(e.keyword))]),e._v("的结果\n    ")]):e._e()],2)],2)}),[],!1,null,null,null);t.a=s.exports},b225:function(e,t,i){"use strict";i("ef48")},c5d7:function(e,t,i){"use strict";i("8a6d")},cb87:function(e,t,i){"use strict";(function(e){i("163d"),i("cc57");var n=i("07d2");t.a={name:"TreeNode",components:{Item:n.a,NodeContent:{props:{item:{required:!0}},render:function(e){var t=this.$parent.$parent.tree,i=this.item;return t.$scopedSlots.default?t.$scopedSlots.default({item:i}):e("span",{class:"main-name"},[i.name])}}},props:{level:{type:Number,default:0},item:{type:Object,default:function(){return{}}},pitem:{type:Object,default:function(){return{}}},select:{type:Object,default:function(){return{}}},open:{type:Boolean,default:!1},isRight:{type:Boolean,default:!0},type:{type:String,default:"tree"},defaultOpenLevel:{type:Number,default:0}},data:function(){return{isOpen:!1,tree:null}},computed:{showIconName:function(){return"tree"===this.type?"arrow-right":"check"===this.type&&this.item.id===this.select.id?"qualified":""}},watch:{isOpen:function(e){e&&this.$parent&&!1===this.$parent.isOpen&&(this.$parent.isOpen=!0)}},created:function(){var t=this,i=this.$parent;i.isTree?this.tree=i:this.tree=i.tree,this.isOpen=this.item.id===this.select.id||(this.open||this.level<this.defaultOpenLevel),this.tree.accordion&&this.$on("tree-node-expand",(function(i){if(e.isArray(t.$children))for(var n=1;n<t.$children.length;n++)t.$children[n].item!==i&&(t.$children[n].isOpen=!1)}))},methods:{toggleFold:function(e,t){e&&e.stopPropagation(),this.isOpen=!this.isOpen,this.$parent.$emit("tree-node-expand",this.item)},onSelect:function(e,t){this.tree.expandOnClickNode&&e.children&&e.children.length?this.toggleFold():this.$emit("onSelect",e,t)}}}}).call(this,i("391c"))},cb8d:function(e,t,i){"use strict";i("d99e")},ceda:function(e,t,i){"use strict";var n=i("cb87").a,o=(i("cb8d"),i("17cc")),s=Object(o.a)(n,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"follow-tree"},[i("item",{class:{"bg-item-gray":e.level>1,"is-checked":e.item.id===e.select.id},attrs:{border:"bottom","icon-right":e.showIconName},on:{click:function(t){e.onSelect(e.item,e.pitem)}}},[i("div",{staticClass:"item-text",style:"margin-left:"+5*e.level+"px"},[e.item.children&&e.item.children.length?i("div",{staticClass:"click-block",on:{click:function(t){e.toggleFold(t,e.item)}}}):e._e(),i("icon",{staticClass:"triangle",class:{"triangle-down":e.isOpen,translate:!e.item.children||!e.item.children.length},attrs:{name:"triangle-right"},on:{click:function(t){e.toggleFold(t,e.item)}}}),i("node-content",{attrs:{item:e.item}})],1)]),e._l(e.item.children,(function(t){return i("tree-node",{directives:[{name:"show",rawName:"v-show",value:e.isOpen,expression:"isOpen"}],key:t.id,attrs:{item:t,pitem:e.item,level:e.level+1,select:e.select,open:e.open,type:e.type,"default-open-level":e.defaultOpenLevel},on:{onSelect:e.onSelect}})}))],2)}),[],!1,null,"24402012",null);t.a=s.exports},d18d:function(e,t,i){"use strict";(function(e){i("2b45");var n,o=i("4360"),s=i("48f4"),r=i("162a"),a=i("e2a7"),l=i("a500"),c=i("6f9e"),p={};t.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return o.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return o.a.state.global.isNumberInputOpen?o.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var e=this;c.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var t=e.$refs["scroll-warp"]&&e.$refs["scroll-warp"].getBoundingClientRect&&e.$refs["scroll-warp"].getBoundingClientRect();t&&(e.gapBottom=document.documentElement.clientHeight-t.bottom),e.$el&&e.$el.addEventListener("focus",(function(t){var i=t&&t.target,n=i&&i.tagName&&i.tagName.toLowerCase();if("input"===n||"textarea"===n){window.addEventListener("resize",(function t(){var n=i.getBoundingClientRect(),o=e.$el.getBoundingClientRect(),s=n.bottom-o.bottom;s>0&&e.scrollBy(s),window.removeEventListener("resize",t,!1)}),!1)}}),!0)}))},destroyed:function(){c.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var e=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&e&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(e){var t=this,i=this.$refs["scroll-warp"].scrollTop,n=this.$refs["scroll-warp"].scrollHeight;if(i+this.$refs["scroll-warp"].clientHeight>=n-5&&!this.loading&&this.hasNext){this.loading=!0;var o=this.$listeners.loadNext();o&&o.then&&"function"==typeof o.then?o.then((function(){t.loading=!1})):this.loading=!1}this.$emit("scroll",e)},getTouchDiretion:function(e){if(!(p&&e&&e.touches&&e.touches[0]))return"";var t=e.touches[0].clientX,i=e.touches[0].clientY;return Math.abs(i-p.y)>Math.abs(t-p.x)&&Math.abs(i-p.y)>=3?i>p.y?"down":"up":""},onTouchstart:function(e){this.allowPullDown&&e.touches&&1===e.touches.length&&(p={x:e.touches[0].clientX,y:e.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(e){if(this.allowPullDown&&e.touches&&1===e.touches.length){var t=this.$refs["scroll-warp"].scrollTop,i=e.touches[0].clientY,n=i-p.y,o=this.getTouchDiretion(e);"down"===o?!this.refreshing&&t<=0?(this.pulling=!0,this.pullDist=(n-p.scrollTop)/2,e.preventDefault()):this.pulling=!1:"up"===o?this.pullDist>0&&(this.pullDist=p.pullDist-(p.y-i),e.preventDefault()):this.pullDist=p.pullDist}},onTouchend:function(){var e=this;this.allowPullDown&&(p={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(e.refreshing=!0,e.onPullDown){var t=e.onPullDown();t&&t.then&&"function"==typeof t?t.finally((function(){e.refreshing=!1,e.makePullTo(0)})):(e.refreshing=!1,e.makePullTo(0))}else e.dataSync().then((function(){e.refreshing=!1,e.makePullTo(0),e.$emit("pullDown")})).catch((function(){e.refreshing=!1,e.makePullTo(0),e.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(e){var t=this,i=this.pullDist,n=e,o=n-i,s=i;return i===n?Promise.resolve():new Promise((function(e){!function r(){window.requestAnimationFrame((function(){s+=o/6,t.pullDist=s,i<n&&s<n||i>n&&s>n?r():(t.pullDist=n,t.refreshing=!1,e())}))}()}))},dataSync:function(){var e,t=s.default.getCurrentModuleCode(),i=s.default.getCurrentRoute(),n=i.meta&&i.meta.isTodo;if(s.default.isModuleNeedBuilding(t)&&!n){if(!this.buildingId)return new Promise((function(e){setTimeout((function(){e()}),500)}));e=this.buildingId}return l.a.addTrack("公共-手动下拉刷新","",""),r.a.beginManualUpdate(),s.default.checkSync(e).then((function(e){return r.a.endManualUpdate(),e})).catch((function(e){$log.error("下拉刷新错误",e),e&&"Error: Network Error"===e.toString()?a.a.alert("当前网络无法同步数据"):a.a.alert(e),r.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(e){this.$refs["scroll-warp"].scrollTop=e},scrollBy:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,o=this.getScrollTop(),s=o+e,r=Math.round(i/16.7),a=e/r,l=o,c=n=+new Date;return o===s?Promise.resolve():new Promise((function(e){!function i(){window.requestAnimationFrame((function(){c===n&&(l+=a,t.$refs["scroll-warp"].scrollTop=l,o<s&&l<s||o>s&&l>s?i():(t.$refs["scroll-warp"].scrollTop=s,e()))}))}()}))},scrollTo:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,i=this.getScrollTop(),n=e-i;return this.scrollBy(n,t)},scrollToEle:function(e){var t=e.keyboardHeight||232,i=(e=e.$el?e.$el:e).getBoundingClientRect(),n=this.$refs["scroll-warp"].getBoundingClientRect();if(i&&n){var s=document.documentElement.clientHeight-(o.a.state.global.isNumberInputOpen?t:0),r=n.bottom<s?n.bottom:s,a=n.top-i.top,l=i.bottom-r;a>0?this.scrollBy(-a-10):l>0&&this.scrollBy(l+10)}},isCurrent:function(t,i){var n=this;t.length&&e.each(t,(function(e){e._uid===i?n.isCurrKeyboard=!0:n.isCurrent(e.$children,i)}))},onNumberKeyboardOpen:function(e){this.isCurrKeyboard=!1,this.isCurrent(this.$children,e._uid),this.isCurrKeyboard&&this.scrollToEle(e)}}}}).call(this,i("391c"))},d3f8:function(e,t,i){var n=i("70fe");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("cbd2747a",n,!0,{sourceMap:!1,shadowMode:!1})},d99e:function(e,t,i){var n=i("fe52");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("09c590ff",n,!0,{sourceMap:!1,shadowMode:!1})},ef48:function(e,t,i){var n=i("9d55");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,i("85cb").default)("a1a65c0c",n,!0,{sourceMap:!1,shadowMode:!1})},fe52:function(e,t,i){(e.exports=i("690e")(!1)).push([e.i,".zjapp .bg-item-gray[data-v-24402012]{background-color:#fafafa}.zjapp .click-block[data-v-24402012]{position:absolute;left:-10%;top:0;height:100%;width:70px}.zjapp .follow-tree .icon[data-v-24402012]{font-size:12px}.zjapp .follow-tree .triangle[data-v-24402012]{margin-right:8px;color:#c8c8c8;transition:all .3s;transform:rotate(0deg)}.zjapp .follow-tree .triangle.translate[data-v-24402012]{color:transparent}.zjapp .follow-tree .triangle-down[data-v-24402012]{transform:rotate(90deg)}.zjapp .follow-tree .item-text[data-v-24402012]{position:relative;width:100%;display:flex;align-items:center;overflow:hidden}.zjapp .follow-tree .main-name[data-v-24402012]{flex:1;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,