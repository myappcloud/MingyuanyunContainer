(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-163b7f71","chunk-59fa3e5d","chunk-0b5b35be","chunk-b1eec014","chunk-2709989a"],{"00f6":function(t,e,i){"use strict";var a=i("e2dd").a,n=(i("4bf2"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("scroller",{ref:"scroller"},[i("measure-detail-place-checkitem",{attrs:{detail:t.detail},on:{changeItems:t.changeItems,changePlace:t.changePlace}}),t.hasMasterCheckitem&&t.drawingUrl?["edit"===t.detail.mode||t.detail.isRepairMode?t._e():i("problem-detail-header",{staticClass:"bg-white",attrs:{status:t.detail.status}},[t.detail.allowReedit&&"view"===t.detail.mode?i("template",{slot:"operat"},[i("div",{staticClass:"btn-reedit",on:{click:function(e){t.changeMode("reedit")}}},[t._v("\n          修改\n          "),i("icon",{attrs:{name:"edit"}})],1)]):t._e()],2),t.detail.isRepairMode?i("status-total-bar",{attrs:{data:t.totalData}}):t._e(),i("drawing-3",{ref:"drawing",attrs:{detail:t.detail},on:{onChange:t.saveProblem,onClickPoint:t.onClickPoint}}),t.detail.isRepairMode?i("item",{attrs:{border:"top"}},[i("div",{staticClass:"item-text color-gray align-c"},[t._v("点击图纸中点位查看详情")])]):t._e(),"edit"===t.detail.mode||"redo"===t.detail.mode?[i("div",{staticStyle:{padding:"10px 0"}},[i("item",{staticClass:"pt15 pb15"},[i("item-img-list",{attrs:{maxlength:50,"track-text":"实测实量"},on:{callback:t.saveProblem},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1)],1),i("div",{staticClass:"mb10"},[i("p",{staticClass:"c-label"},[t._v("请选择施工单位")]),t._l(t.detail.problemData,(function(e){return i("single-select",{key:e.checkItem.id,attrs:{title:e.checkItem.name,"page-title":"选择施工单位",placeholder:"请选择施工单位",options:t.model.contractors},on:{onSelect:t.saveProblem},model:{value:e.contractor,callback:function(i){t.$set(e,"contractor",i)},expression:"problem.contractor"}})}))],2),t.detail.problemData[0].realityVal.length?i("item",{attrs:{label:"合格率",mode:"edit"}},[i("div",{staticClass:"item-text color-theme align-r",attrs:{slot:"right"},slot:"right"},[t._l(t.detail.problemData,(function(e,i){return[i?[t._v("; ")]:t._e(),t._v("\n            "+t._s(t._f("percent")(e.passrate,2))+"\n          ")]}))],2)]):t._e(),8!==t.detail.passrate_mode?i("item",{attrs:{label:"合格标准",mode:"edit"}},[i("div",{staticClass:"item-text color-gray align-r",attrs:{slot:"right"},slot:"right"},t._l(t.detail.problemData,(function(e,a){return i("p",{key:a},[5!==e.passrate_mode?i("span",{staticStyle:{display:"inline-block"}},[t._v(t._s(e.checkItem.name))]):t._e(),15===e.passrate_mode||16===e.passrate_mode||17===e.passrate_mode?i("span",{staticClass:"item-text_special",domProps:{innerHTML:t._s(e.standardRange)}}):i("span",{staticClass:"ml5",staticStyle:{"white-space":"nowrap"}},[t._v(t._s(e.standardRange))]),e.isJIcheMode?i("span",{staticClass:"color-gray"},[t._v("极差算法")]):t._e()])})))]):t._e(),t.hasPoint&&t.hasExceed&&"redo"!==t.detail.mode?[i("div",{staticClass:"need-repair",on:{click:t.setNeedRepair}},[i("icon",{attrs:{name:t.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),t._v("通知整改\n        ")],1),t.detail.needRepair?i("user-select",{attrs:{title:"整改人",options:t.model.repairOptions,memory:!0,"before-select":t.beforeSelectRepair},on:{onSelect:t.onSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e(),t.detail.needRepair&&t.allowMeasureReinspect?i("user-select",{attrs:{title:"复验人",multi:!0,options:t.model.reinspectOptions,memory:!0,"before-confirm":t.beforeConfirmReinspect},model:{value:t.detail.reinspect,callback:function(e){t.$set(t.detail,"reinspect",e)},expression:"detail.reinspect"}}):t._e()]:t._e()]:t._e(),"view"===t.detail.mode||"reedit"===t.detail.mode?[i("item",{attrs:{label:"合格率"}},[i("div",{staticClass:"item-text align-r color-theme",attrs:{slot:"right"},slot:"right"},[t._l(t.detail.problemData,(function(e,i){return[i?[t._v("; ")]:t._e(),t._v("\n            "+t._s(t._f("percent")(e.passrate,2))+"\n          ")]}))],2)]),i("item",{staticClass:"mt10",attrs:{label:"点数"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[t._l(t.detail.problemData,(function(e,i){return[i?[t._v("; ")]:t._e(),t._v("\n            "+t._s(e.pointNum)+"\n          ")]}))],2)]),8!==t.detail.passrate_mode?i("item",{attrs:{label:"合格标准"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},t._l(t.detail.problemData,(function(e,a){return i("p",{key:a},[5!==e.passrate_mode?i("span",[t._v(t._s(e.checkItem.name))]):t._e(),15===e.passrate_mode||16===e.passrate_mode||17===e.passrate_mode?i("span",{staticClass:"item-text_special",domProps:{innerHTML:t._s(e.standardRange)}}):i("span",{staticClass:"ml5",staticStyle:{"white-space":"nowrap"}},[t._v(t._s(e.standardRange))]),e.isJIcheMode?i("span",{staticClass:"color-gray"},[t._v("极差算法")]):t._e()])})))]):t._e(),"reedit"===t.detail.mode?i("div",{staticClass:"mb10"},[i("p",{staticClass:"c-label"},[t._v("请选择施工单位")]),t._l(t.detail.problemData,(function(e){return i("single-select",{key:e.checkItem.id,attrs:{title:e.checkItem.name,"page-title":"选择施工单位",placeholder:"请选择施工单位",options:t.model.contractors,mode:"view"},model:{value:e.contractor,callback:function(i){t.$set(e,"contractor",i)},expression:"problem.contractor"}})}))],2):t._e()]:t._e(),"view"===t.detail.mode?[t.detail.img.length?i("item",{attrs:{label:"相关照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("item-img-list",{attrs:{editabled:!1},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1)]):t._e(),t.hasContractor?i("item",{attrs:{label:"施工单位"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},t._l(t.detail.problemData,(function(e){return i("p",{key:e.id},[t._v("\n            "+t._s(e.contractor?e.contractor.name:"")+"\n          ")])})))]):t._e(),i("user-select",{attrs:{title:"检查人",mode:"view",editabled:!1},model:{value:t.detail.regist,callback:function(e){t.$set(t.detail,"regist",e)},expression:"detail.regist"}}),i("item",{attrs:{label:"检查时间",text:t.formatDate(t.detail.regist_date)}}),t.detail.isRepairMode?[t.detail.repair.id?i("user-select",{attrs:{title:"整改人",mode:"view",options:t.model.repairOptions,date:"已整改"===t.detail.status?t.formatDate(t.detail.repair_date):"",editabled:(t.detail.isChecker||t.detail.isRepair||t.detail.isReinspect)&&"待整改"===t.detail.status,"before-select":t.beforeSelectRepair},on:{onSelect:t.onSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e(),t.detail.reinspect.length?i("user-select",{attrs:{title:"复验人",mode:"view",multi:!0,options:t.model.reinspectOptions,editabled:(t.detail.isChecker||t.detail.isReinspect)&&("待整改"===t.detail.status||"待复验"===t.detail.status),"before-confirm":t.beforeConfirmReinspect},on:{onSelect:t.onSelectReinspect},model:{value:t.detail.reinspect,callback:function(e){t.$set(t.detail,"reinspect",e)},expression:"detail.reinspect"}}):t._e()]:[(t.detail.repair_image_file&&t.detail.repair_image_file.length>0||t.detail.repair_remark)&&"待整改"!==t.detail.status?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.detail.repair_remark?i("div",{staticClass:"item-font"},[t._v(t._s(t.detail.repair_remark))]):t._e(),i("item-img-list",{attrs:{editabled:!1},model:{value:t.detail.repair_image_file,callback:function(e){t.$set(t.detail,"repair_image_file",e)},expression:"detail.repair_image_file"}})],1)]):t._e(),t.detail.repair.id&&"检查完毕"!==t.detail.status?i("user-select",{attrs:{title:"整改人",mode:"view",options:t.model.repairOptions,date:"已整改"===t.detail.status?t.formatDate(t.detail.repair_date):"",editabled:(t.detail.isChecker||t.detail.isRepair)&&"待整改"===t.detail.status},on:{onSelect:t.onSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e(),t.detail.isRepair&&"待整改"===t.detail.status?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("item-img-list",{attrs:{maxlength:50,"track-text":"实测实量"},model:{value:t.detail.repair_image_file,callback:function(e){t.$set(t.detail,"repair_image_file",e)},expression:"detail.repair_image_file"}})],1)]):t._e(),t.detail.isRepair&&"待整改"===t.detail.status?i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:t.detail.repair_remark,callback:function(e){t.$set(t.detail,"repair_remark",e)},expression:"detail.repair_remark"}}):t._e(),"检查完毕"===t.detail.status&&t.hasPoint&&t.hasExceed&&"view"===t.detail.mode&&(!t.allowMeasureReinspect||t.detail.isChecker)?[i("div",{staticClass:"need-repair",on:{click:t.setNeedRepair}},[i("icon",{attrs:{name:t.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),t._v("通知整改\n          ")],1),t.detail.needRepair?i("user-select",{attrs:{title:"整改人",options:t.model.repairOptions,memory:!0,"before-select":t.beforeSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e(),t.detail.needRepair&&t.allowMeasureReinspect?i("user-select",{attrs:{title:"复验人",multi:!0,options:t.model.reinspectOptions,memory:!0,"before-confirm":t.beforeConfirmReinspect},model:{value:t.detail.reinspect,callback:function(e){t.$set(t.detail,"reinspect",e)},expression:"detail.reinspect"}}):t._e(),t.detail.needRepair?i("app-button-group",{staticClass:"pt10"},[i("app-button",{attrs:{name:"通知整改"},on:{click:t.setRepair}})],1):t._e()]:t._e()]]:t._e(),"检查中"===t.detail.status||"view"!==t.detail.mode||t.allowMeasureReinspect||t.model.currentUserBatchId!==t.detail.batch_id?t._e():i("app-button-group",[i("app-button",{attrs:{type:"operate",name:"再测一次"},on:{click:t.setRedo}})],1)]:t._e(),i("loading-status",{attrs:{"is-loading":!1,"is-empty":!t.hasMasterCheckitem||!t.drawingUrl,"empty-text":t.hasMasterCheckitem?"没有户型图":"请选择检查项"}})],2)}),[],!1,null,"5c6caac0",null);e.a=s.exports},"0159":function(t,e,i){"use strict";var a=i("329b"),n=i("76c6").a,s=(i("fe89"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"户型图","on-close":t.closePopup}},["edit"===t.mode?i("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:t.confirm},slot:"header-bar-right"},[t._v("\n      确定\n    ")]):t._e(),i("scroller",{ref:"scroller"},["edit"===t.mode?i("div",{staticClass:"p15 border-bottom color-gray"},[t._v("\n        点击户型图标记爆点位置，并输入爆点数值\n      ")]):t._e(),i("drawing",{ref:"drawing",style:{height:t.drawingHeight+"px"},attrs:{url:t.url,points:t.points},on:{onclick:t.onclick,click:function(t){t.stopPropagation()}}}),"edit"===t.mode&&t.points.length?i("div",{staticClass:"point-input-list border-tb"},t._l(t.points,(function(e,a){return i("number-input",{key:a,ref:"exceed-point-input",refInFor:!0,staticClass:"mr10 mb10",attrs:{decimal:t.valueDecimal,range:t.valueRange},on:{focus:function(e){t.inputFocus(a)},blur:t.inputBlur},model:{value:e.val,callback:function(i){t.$set(e,"val",i)},expression:"point.val"}},[i("i",{staticClass:"icon-minus",attrs:{slot:"extend"},on:{click:function(i){i.stopPropagation(),t.removeExceedPoint(e)}},slot:"extend"})])}))):t._e(),"view"===t.mode?[t._l(t.layoutPointsData,(function(e,a){return[e.itemName?i("item",{key:a,attrs:{border:"top",label:e.itemName}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t._l(e.areas,(function(a,n){return[a.points&&a.points.length?[a.areaName?i("p",{key:"name"+n,staticClass:"mb10"},[i("span",{staticClass:"area-name"},[t._v(t._s(a.areaName))])]):t._e(),i("div",{key:"points"+n},t._l(a.points,(function(a,n){return i("span",{key:n,staticClass:"point-ele mr10 mb10",class:{"point-exceed":a.isExceed,"point-cur":a.index===t.lightIndex},on:{click:function(e){t.clickPointEle(a)}}},[t._v("\n                      "+t._s(8===e.passrateMode?1===a.val?"合格":"不合格":a.val)+"\n                    ")])})))]:t._e()]}))],2)]):[t._l(e.areas,(function(a,n){return[a.points&&a.points.length?i("item",{key:n,staticClass:"pt15",attrs:{border:"top"}},[a.areaName?i("div",{staticClass:"item-label"},[t._v("\n                  "+t._s(a.areaName)+"\n                ")]):t._e(),i("div",{staticClass:"item-con"},t._l(a.points,(function(a,n){return i("span",{key:n,staticClass:"point-ele mr10 mb10",class:{"point-exceed":a.isExceed,"point-cur":a.index===t.lightIndex},on:{click:function(e){t.clickPointEle(a)}}},[t._v("\n                    "+t._s(8===e.passrateMode?1===a.val?"合格":"不合格":a.val)+"\n                  ")])})))]):t._e()]}))]]}))]:t._e(),t.scrollPaddingBottom?i("div",{style:{"padding-bottom":t.scrollPaddingBottom+"px"}}):t._e()],2)],1):t._e()],1)}),[],!1,null,"71ce7fec",null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},"03da":function(t,e,i){var a=i("393c");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("bca4d1cc",a,!0,{sourceMap:!1,shadowMode:!1})},"0732":function(t,e,i){var a=i("81f2");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("1b5b07de",a,!0,{sourceMap:!1,shadowMode:!1})},"0771":function(t,e,i){"use strict";var a=i("801f").a,n=(i("e3df"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",t._g({staticClass:"drawing-con",style:{width:t.width+"px",height:t.height+"px"}},t.$listeners),[t.isDownloading?[i("p",[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),i("p",{staticClass:"loading-text"},[t._v("正在下载...")])]:[t.error?t._e():i("canvas",{ref:"drawing-canvas",style:{width:t.width+"px",height:t.height+"px"}}),t.error?i("p",{staticClass:"error-text"},[t._v(t._s(t.error))]):t._e()]],2)}),[],!1,null,"32c61736",null);e.a=s.exports},"0aac":function(t,e,i){"use strict";i("2814")},"0cb6":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .problem-detail-header[data-v-0901aadd]{display:flex;align-items:center;justify-content:center;height:40px;padding:0 15px;line-height:40px;background-color:#f2f2f2}.zjapp .problem-detail-header .status[data-v-0901aadd]{flex:1;height:16px;line-height:16px;border-left:5px solid #ddd;padding-left:5px;color:#111;font-size:16px}.zjapp .problem-detail-header .status-red[data-v-0901aadd]{border-color:#ff3d3d}.zjapp .problem-detail-header .status-blue[data-v-0901aadd]{border-color:#4275e8}.zjapp .problem-detail-header .status-green[data-v-0901aadd]{border-color:#0bc666}.zjapp .problem-detail-header .status-orange[data-v-0901aadd]{border-color:#fc8b01}.zjapp .problem-detail-header .status-black[data-v-0901aadd]{border-color:#333}.zjapp .problem-detail-header .status-gray[data-v-0901aadd]{border-color:#999}.zjapp .problem-detail-header .return[data-v-0901aadd],.zjapp .problem-detail-header .timeout[data-v-0901aadd],.zjapp .problem-detail-header .urgent[data-v-0901aadd]{display:block;padding:0 5px;margin-left:6px;height:16px;line-height:16px;color:#fff;font-size:12px;border-radius:2px;-webkit-border-radius:2px}.zjapp .problem-detail-header .urgent[data-v-0901aadd]{background-color:#ff3d3d}.zjapp .problem-detail-header .timeout[data-v-0901aadd]{background-color:#954cfe}.zjapp .problem-detail-header .return[data-v-0901aadd]{background-color:#fc8b01}.zjapp .problem-detail-header .operat[data-v-0901aadd]{height:40px;line-height:40px;white-space:nowrap;font-size:16px;color:#6b7ba9}",""])},1068:function(t,e,i){"use strict";(function(t){i("9dd9"),i("f548"),i("cc57");var a,n=i("07d2"),s=i("269c"),o=i("6f9e"),r=i("e89f"),l=i("c745"),c=[],d=[3,3,2,2],h=["无标段","无楼栋","无楼层","无房间"],p=["","list bg-gray6","list bg-gray5","list bg-gray4"];e.a={name:"DropDownSelectDialog",components:{Item:n.a,AppButton:s.a},mixins:[r.a],data:function(){return{show:!1,showList:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,selectItems:[],layoutMap:[],loadingSet:{},optionsSet:{},selectedSet:{},componentUid:"",backButtonEvent:null,target:""}},computed:{isOptionsEmpty:function(){var e=this.selectItems[0];return!(!e||this.loadingSet[e]||!t.isEmpty(this.optionsSet[e]))},allowConfirm:function(){return!t.isEmpty(this.selectedSet)&&!t.isEmpty(this.selectedSet.floor)}},watch:{show:function(t){var e=this;t&&this.$nextTick((function(){e.showList=!0}))},selectedSet:function(e){var i=this;e&&this.$nextTick((function(){i.$refs["list-warp"]&&t.each(i.$refs["list-warp"].querySelectorAll(".selected")||[],(function(t){setTimeout((function(){t.scrollIntoViewIfNeeded(!0)}),400)}))}))}},created:function(){o.a.$on("routerBeforeEach",this.closePopup),o.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){o.a.$off("routerBeforeEach",this.closePopup),o.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(e){var i=this;if(this.show)return e.componentUid===this.componentUid?void this.closePopup():void this.closePopup().then((function(){i.openPopup(e)}));this.componentUid=e.componentUid||"";var n=document.querySelector(".layout-main .layout-header");if(this.contentTop=n.offsetHeight,e.el){var s=e.el.getBoundingClientRect();this.contentTop=s.bottom}this.target=e.el,this.listHeight=t.minBy([window.innerHeight-this.contentTop-50,510]),c=t.clone(e.selected),a=e.callback,this.projId=e.projId,this.selectItems=e.selectItems,this.layoutMap=[];for(var o=0;o<this.selectItems.length;o++)this.layoutMap.push({level:o,key:this.selectItems[o],flex:d[o],bgColor:p[o],emptyText:h[o]});this.init(),this.show=!0,this.$emit("open")},closePopup:function(){var t=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(e){t.$on("afterClosePopup",e)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(t){t&&t.target&&t.target!==this.target&&this.show&&this.closePopup()},getNextItemOptions:function(t){var e={section:this.getSectionOptions,"building-unit":this.getBuildingUnitOptions,floor:this.getFloorOptions,room:this.getRoomOptions},i=this.selectItems.indexOf(t),a=e[this.selectItems[i+1]];return a?a():Promise.resolve()},getSectionOptions:function(){var t=this;return this.$set(this.loadingSet,"section",!0),l.a.getProjectSections(this.projId).then((function(e){t.$set(t.optionsSet,"section",e),t.$set(t.loadingSet,"section",!1)}))},getBuildingUnitOptions:function(){var t=this,e=this.selectedSet.section,i=e&&e.id?e.id:"";return i?(this.$set(this.loadingSet,"building-unit",!0),l.a.getSectionBuildingAndUnit(i).then((function(e){t.$set(t.optionsSet,"building-unit",e),t.$set(t.loadingSet,"building-unit",!1)}))):Promise.resolve()},getFloorOptions:function(){var t=this,e=this.selectedSet.building,i=e&&e.id?e.id:"";return i?(this.$set(this.loadingSet,"floor",!0),l.a.getBuildingFloors(i).then((function(e){t.$set(t.optionsSet,"floor",e),t.$set(t.loadingSet,"floor",!1)}))):Promise.resolve()},getRoomOptions:function(){var t=this,e=this.selectedSet.building,i=e&&e.id?e.id:"",a=this.selectedSet.unit,n=this.selectedSet.floor;return a=a&&a.id?a.id:"",n=n&&n.id?n.id:"",i&&n?(this.$set(this.loadingSet,"room",!0),l.a.getBuildingRooms(i,a,n).then((function(e){t.$set(t.optionsSet,"room",e),t.$set(t.loadingSet,"room",!1)}))):Promise.resolve()},setItem:function(t,e){var i={section:this.setSection,"building-unit":this.setBuildingAndUnit,floor:this.setFloor,room:this.setRoom};return i[e]?i[e](t):Promise.resolve()},setSection:function(t){return this.$set(this.selectedSet,"section",t),this.clearNextAndAll("section"),this.getNextItemOptions("section")},setBuildingAndUnit:function(t){return this.$set(this.selectedSet,"building",t?{id:t.building_id,name:t.building_name}:null),this.$set(this.selectedSet,"unit",t?{id:t.unit_id,name:t.unit_name}:null),this.$set(this.selectedSet,"building-unit",t?{id:t.id,name:t.name}:null),this.clearNextAndAll("building-unit"),this.getNextItemOptions("building-unit")},setFloor:function(t){return this.$set(this.selectedSet,"floor",t),this.clearNextAndAll("floor"),this.getNextItemOptions("floor")},setRoom:function(t){return this.$set(this.selectedSet,"room",t),this.clearNextAndAll("room"),this.getNextItemOptions("room")},clearItemData:function(t){"building-unit"===t?(this.$set(this.selectedSet,"building",null),this.$set(this.selectedSet,"unit",null),this.$set(this.selectedSet,"building-unit",null),this.$set(this.optionsSet,"itemKey",[])):(this.$set(this.selectedSet,t,null),this.$set(this.optionsSet,t,[]))},clearNextAndAll:function(t){for(var e=this.selectItems.indexOf(t)+1;e<this.selectItems.length;e++)this.clearItemData(this.selectItems[e])},init:function(){var e=this;return this.getNextItemOptions().then((function(){var i=Promise.resolve();return c.project&&e.$set(e.selectedSet,"project",c.project),t.each(e.selectItems,(function(t){var a;if("building-unit"===t){var n=c.building,s=c.unit;a=n?{id:n.id+(s.id?"|"+s.id:""),name:n.name+(s.name?"-"+s.name:""),building_id:n.id,building_name:n.name,unit_id:s.id,unit_name:s.name}:null}else a=c[t];a&&i.then((function(){return e.setItem(a,t)}))})),i}))},isItemOptionsEmpty:function(e){var i=this.selectItems.indexOf(e)-1,a=this.selectItems[i];return!(t.isEmpty(this.selectedSet[a])||!t.isEmpty(this.optionsSet[e]))},showName:function(t){var e=t;return e=(e=e.replace(new RegExp("<","gm"),"&lt;")).replace(new RegExp(">","gm"),"&gt;")},select:function(e,i){var a=this,n=i===t.last(this.selectItems);this.setItem(e,i),n&&setTimeout((function(){a.confirm()}),100)},confirm:function(){if(this.allowConfirm){var e=t.extend({},this.selectedSet);a&&a(e),this.closePopup()}}}}}).call(this,i("391c"))},"12f4":function(t,e,i){"use strict";i("6a26")},"141b":function(t,e,i){var a=i("1736");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("64328a9c",a,!0,{sourceMap:!1,shadowMode:!1})},1736:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .content[data-v-1db489ae]{position:fixed;width:100%;bottom:0;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-1db489ae]{flex-direction:column}.zjapp .box[data-v-1db489ae],.zjapp .list-wrap[data-v-1db489ae]{display:flex;background-color:#fff}.zjapp .list-wrap[data-v-1db489ae]{flex-direction:row;align-items:flex-start;flex:1;height:465px}.zjapp .list[data-v-1db489ae]{padding:0 10px}.zjapp .list[data-v-1db489ae],.zjapp .list-single[data-v-1db489ae]{flex:1;overflow:auto;height:100%;scroll-behavior:smooth}.zjapp .item-dropdown[data-v-1db489ae]{padding:6px 0;background-color:transparent}.zjapp .item-dropdown[data-v-1db489ae] .item-text{font-size:14px}.zjapp .item-dropdown.selected[data-v-1db489ae]{color:#4275e8;padding-bottom:5px;border-bottom:1px solid #4275e8}.zjapp .item-dropdown.selected[data-v-1db489ae] .item-text{color:#4275e8}.zjapp .empty-tips[data-v-1db489ae],.zjapp .loading-tips[data-v-1db489ae]{padding:13px 0;line-height:20px;color:#b2b2b2;font-size:14px}.zjapp .select-note[data-v-1db489ae]{line-height:16px;font-size:12px;color:#8c8c8c}.zjapp .btn-confirm[data-v-1db489ae]{background-color:#ebf1ff;background-image:none;color:#4275e8;border-radius:0}.zjapp .btn-confirm.btn-disabled[data-v-1db489ae]{background-color:#f4f4f4;color:#b2b2b2}",""])},1985:function(t,e,i){"use strict";(function(t){i("cc57");var a=i("30df");e.a={name:"DropDownSelect",props:{value:{type:Object,default:function(){}},selectItems:{type:Array,default:function(){return["section","building-unit","floor","room"]}},isLoading:{type:Boolean,default:!1},editabled:{type:Boolean,default:!0},showUnit:{type:Boolean,default:!0}},data:function(){return{isOpen:!1}},computed:{hdText:function(){return t.isEmpty(this.value)||t.isEmpty(this.value.section)?this.editabled?"请选择":"无":this.value.section.name},bdText:function(){var e="";return t.isEmpty(this.value)||t.isEmpty(this.value.building)?e=this.editabled?"请选择":"无":(e=e+this.value.building.name||"",!t.isEmpty(this.value.unit)&&this.showUnit&&(e=e+this.value.unit.name||""),t.isEmpty(this.value.room)||t.isEmpty(this.value.room.id)?t.isEmpty(this.value.floor)||(e=e+this.value.floor.name||""):e=e+this.value.room.name||""),e}},created:function(){var t=this;a.a.$on("afterClosePopup",(function(){t.isOpen=!1}))},methods:{openDialog:function(){var t=this;if(this.editabled&&!this.isLoading){var e=this.value&&this.value.project&&this.value.project.id;e||(e=this.$store.state.global.currentProject.id),a.a.openPopup({projId:e,selected:this.value,selectItems:this.selectItems,el:this.$refs["select-con"],componentUid:this._uid,callback:function(e){t.$emit("input",e),t.$emit("onSelect",e)}}),this.isOpen=!0}}}}}).call(this,i("391c"))},"1bcd":function(t,e,i){"use strict";i.r(e);var a=i("a492").a,n=(i("a876"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("page-content",{attrs:{title:"实测实量","show-go-root":!0}},[i("template",{slot:"header-bar-center"},[t.tabs.length>1&&!t.readonly?i("div",{staticClass:"header-tabs"},t._l(t.tabs,(function(e,a){return i("div",{key:a,staticClass:"header-tab",class:{on:e.key===t.currentTab},on:{click:function(i){t.changeTab(e)}}},[t._v("\n        "+t._s(e.name)+"\n      ")])}))):i("div",{staticClass:"header-bar-title"},[t._v("\n      "+t._s(t.model.placeFullname)+"\n    ")])]),t.isLoading?t._e():i("check-guide",{attrs:{slot:"header-bar-right",module:"measure","item-ids":t.checkItemGuideIds,mode:"drop"},slot:"header-bar-right"}),t.isLoading?t._e():[t.detail&&t.detail.problemData&&t.detail.problemData.length?[1===t.detail.entry_requirements?i("measure-detail-template-1",{ref:"template-1",attrs:{detail:t.detail},on:{changeItems:t.changeItems,changePlace:t.changePlace}}):t._e(),2===t.detail.entry_requirements?i("measure-detail-template-2",{ref:"template-2",attrs:{detail:t.detail},on:{changeItems:t.changeItems,changePlace:t.changePlace}}):t._e(),3===t.detail.entry_requirements?i("measure-detail-template-3",{ref:"template-3",attrs:{detail:t.detail},on:{changeItems:t.changeItems,changePlace:t.changePlace}}):t._e()]:t._e(),i("loading-status",{attrs:{"is-empty":!t.detail.problemData.length,"empty-text":"暂无实测记录"}})],i("loading-status",{attrs:{"is-loading":t.isLoading}}),t.isLoading||3===t.detail.entry_requirements&&!t.drawingUrl?t._e():["edit"===t.detail.mode||"reedit"===t.detail.mode||"redo"===t.detail.mode||"待整改"===t.detail.status&&t.detail.isRepair&&!t.detail.isRepairMode?i("app-button-group",{attrs:{"fixed-bottom":"",seamless:"edit"===t.detail.mode||"redo"===t.detail.mode}},["edit"===t.detail.mode||"redo"===t.detail.mode?i("app-button",{staticStyle:{width:"50%"},attrs:{name:"暂存",plain:"",disabled:"redo"===t.detail.mode},on:{click:t.saveProblemAndTip,disabledClick:t.disabledSaveTip}}):t._e(),"edit"===t.detail.mode?i("app-button",{attrs:{name:"提交检查记录"},on:{click:t.submitCheck}}):t._e(),"redo"===t.detail.mode?i("app-button",{attrs:{name:"提交"},on:{click:t.submitRedo}}):t._e(),"reedit"===t.detail.mode?i("app-button",{attrs:{name:"提交检查记录"},on:{click:t.resubmitCheck}}):t._e(),"待整改"===t.detail.status&&t.detail.isRepair&&"view"===t.detail.mode&&!t.detail.isRepairMode?i("app-button",{attrs:{name:"完成整改"},on:{click:t.submitRepair}}):t._e()],1):t._e()]],2)}),[],!1,null,"73f776ea",null);e.default=s.exports},"1c2a":function(t,e,i){var a=i("8eeb");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("025a093f",a,!0,{sourceMap:!1,shadowMode:!1})},"1f63":function(t,e,i){"use strict";i("7434")},2814:function(t,e,i){var a=i("5033");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("9db19832",a,!0,{sourceMap:!1,shadowMode:!1})},2939:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .page-scroll[data-v-74102c05]{flex:1;overflow:auto;padding-bottom:100px;transform:translateZ(0)}.zjapp .sublist[data-v-74102c05]{padding-left:25px;padding-top:1px;background-color:#fff}.zjapp .sublist>.sublist[data-v-74102c05]{padding-left:10px;padding-top:0}",""])},"29be":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),n=(i("cc57"),i("163d"),i("07d2")),s=i("a5c6"),o=i("6144");function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function l(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"SingleSelect",components:{Item:n.a},props:{title:{type:String,default:""},pageTitle:{type:String,default:""},placeholder:{type:String,default:""},value:{type:Object,default:function(){return{}}},options:{type:Array,default:function(){return[]}},optionsDisabled:{type:Array,default:function(){return[]}},required:{type:Boolean,default:!0},mode:{type:String,default:"edit"},editabled:{type:Boolean,default:!0},memory:{type:Boolean,default:!1},autoSelect:{type:Boolean,default:!1},beforeOpen:{type:Function,default:function(){}},searchBar:{type:Boolean,default:!0},grouping:{type:String,default:""},autoOpen:{type:Boolean,default:!1},rightBtn:{type:String,default:""},rightBtnEvent:{type:Function,default:function(){return 0}},ifToggle:{type:Boolean,default:!1},formCheck:{type:Boolean,default:!1},editorAddData:{type:Boolean,default:!1},lineLimit:{type:[Number,String],default:1}},data:function(){return{memoryKey:this.$route.name+encodeURI(this.title)}},watch:{options:function(){this.setSelected()}},mounted:function(){this.setSelected()},methods:{openSelect:function(){var e=this;if(this.editabled){var i=this.beforeOpen();i&&i.then&&t.isFunction(i.then)?i.then((function(t){!1!==t&&e.openPopup()})):!1!==i&&this.openPopup()}},openPopup:function(){var e=this;if(this.optionsDisabled&&this.optionsDisabled.length){var i={};t.each(this.optionsDisabled,(function(t){t.id&&(i[t.id]=t)})),t.each(this.options,(function(t,a){i[t.id]?e.options[a].disabled=!0:e.options[a].disabled=!1}))}s.a.openPopup({title:this.pageTitle||"选择"+this.title,selected:this.value,options:this.options,required:this.required,searchBar:this.searchBar,grouping:this.grouping,autoOpen:this.autoOpen,rightBtn:this.rightBtn,ifToggle:this.ifToggle,lineLimit:this.lineLimit,editorAddData:this.editorAddData,onSelect:function(i){var a=t.cloneDeep(e.value);i=t.isArray(i)?t.map(i,(function(t){return l({},t)})):l({},i),e.$emit("input",i,a),e.$emit("onSelect",i,a)},rightBtnEvent:function(i){var a=t.cloneDeep(e.value);e.$emit("rightBtnEvent",i,a)}})},closePopup:function(){s.a.closePopup()},onSelect:function(t){o.a.saveObject(this.memoryKey,t,o.a.level.user),this.$emit("input",t[0]),this.$emit("onSelect",t[0])},setSelected:function(){var e=o.a.getObject(this.memoryKey,o.a.level.user);!1===this.editabled||t.isEmpty(this.options)||(t.isEmpty(this.value)?this.memory&&!t.isEmpty(e)&&t.some(this.options,{id:e.id})&&(this.$emit("input",e),this.autoSelect&&this.$emit("onSelect",e)):this.autoSelect&&this.$emit("onSelect",this.value))}}}}).call(this,i("391c"))},"2c76":function(t,e,i){"use strict";i("c070")},"2c79":function(t,e,i){var a=i("a43f");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("770b4153",a,!0,{sourceMap:!1,shadowMode:!1})},"2dd6":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .single-item[data-v-6920dde7]{min-height:44px}.zjapp .single-item>div[data-v-6920dde7]{display:flex}.zjapp .single-item>div>span[data-v-6920dde7]{flex:1;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical}.zjapp .single-item>div>span[data-v-6920dde7] label{color:#4174e9}.zjapp .single-item i[data-v-6920dde7]{line-height:24px;font-size:24px;color:#4275e8}.zjapp .single-item .disabled-item[data-v-6920dde7]{color:#aaa}",""])},"2ddb":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .supplier-editor[data-v-e465319c]{margin-bottom:10px;padding:8px;display:flex;justify-content:space-between;align-items:center;height:52px;color:#4275e8;background-color:#fff}.zjapp .supplier-editor .icon[data-v-e465319c]{border-left:1px solid #c8c8c8;padding-left:12px}.zjapp .supplier-editor .icon-edit[data-v-e465319c]{color:#c8c8c8;font-size:18px}.zjapp .supplier-editor .icon-qualified[data-v-e465319c]{color:#4275e8}.zjapp .supplier-editor .margin-r[data-v-e465319c]{margin-right:10px}.zjapp .list-title[data-v-e465319c]{position:relative;top:0;color:#888;font-size:14px;line-height:30px;min-height:40px;margin-bottom:0;margin-top:0;padding:8px 16px 2px}.zjapp .search-item>div[data-v-e465319c]{padding-right:35px}.zjapp .search-item i[data-v-e465319c]{position:absolute;color:#ccc;font-size:26px;right:0;top:50%;transform:translateY(-50%)}.zjapp .van-popup--right[data-v-e465319c]{width:100%;height:100%}[data-v-e465319c] .van-cell__title{color:#4174e9;font-weight:700}[data-v-e465319c] .van-collapse-item__content{transform:translateZ(0);padding:0 0 0 25px}[data-v-e465319c] .van-collapse-item__content .van-cell{padding-left:0}",""])},"30df":function(t,e,i){"use strict";var a=i("329b"),n=i("1068").a,s=(i("f669"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.show?i("div",{staticClass:"content",style:{top:t.contentTop+"px"},on:{click:function(e){return e.target!==e.currentTarget?null:t.closePopup(e)}}},[i("transition",{attrs:{name:"slide-down"},on:{enter:function(e){t.isOpening=!0},"after-enter":function(e){t.isOpening=!1},leave:function(e){t.isClosing=!0},"after-leave":t.afterClose}},[t.showList?i("div",{staticClass:"box",style:{height:t.listHeight+"px"}},[t.isOptionsEmpty?t._e():i("div",{ref:"list-warp",staticClass:"list-wrap"},t._l(t.layoutMap,(function(e,a){var n;return i("div",{key:"map"+a,staticClass:"list",class:(n={},n[e.bgColor]=!0,n),style:{flex:e.flex}},[t.loadingSet[e.key]?i("div",{staticClass:"loading-tips"},[t._v("\n            ...\n          ")]):[t._l(t.optionsSet[e.key],(function(a,n){return i("item",{key:n,staticClass:"item-dropdown",class:{selected:t.selectedSet[e.key]&&t.selectedSet[e.key].id===a.id},on:{click:function(i){t.select(a,e.key)}}},[i("div",{staticClass:"item-text"},[i("p",{domProps:{innerHTML:t._s(t.showName(a.nameShow||a.name))}}),i("p",{staticClass:"select-note"},[t._v(t._s(a.note))])])])})),t.optionsSet[e.key]&&t.optionsSet[e.key].length?t._e():i("div",{staticClass:"empty-tips"},[t._v("\n              "+t._s(t.isItemOptionsEmpty(e.key)?e.emptyText:"请选择")+"\n            ")])]],2)}))),i("app-button",{staticClass:"btn-confirm",class:{"btn-disabled":!t.allowConfirm},attrs:{name:"确定"},on:{click:t.confirm}}),i("loading-status",{attrs:{"is-empty":t.isOptionsEmpty,"empty-text":"没有数据"}})],1):t._e()])],1):t._e()}),[],!1,null,"1db489ae",null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},"3156b":function(t,e,i){"use strict";i("163d");var a={name:"SingleSelectItem",props:{item:{type:Object,default:function(){return{id:"",name:""}}},checked:{type:Boolean,default:!1},renderField:{type:String,default:"name"},lineLimit:{type:[Number,String],default:1}},methods:{selectItem:function(t){t.disabled||this.$emit("click",t)}}},n=(i("9788"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("van-cell",{staticClass:"single-item",attrs:{clickable:!0},on:{click:function(e){t.selectItem(t.item)}}},[i("span",{class:{"disabled-item":t.item.disabled},style:{"-webkit-line-clamp":"unlimited"===t.lineLimit?"initial":t.lineLimit},domProps:{innerHTML:t._s(t.item[t.renderField])}}),t.checked?i("van-icon",{attrs:{name:"success"}}):t._e()],1)}),[],!1,null,"6920dde7",null);e.a=s.exports},"316a":function(t,e,i){"use strict";(function(t){i("cc57"),i("163d");var a=i("afd5");e.a={name:"DropDownSelect",props:{value:{type:Array,default:function(){return[]}},masterCheckitem:{type:Array,default:function(){return[]}},options:{type:Array,default:function(){return[]}},isLoading:{type:Boolean,default:!1},editabled:{type:Boolean,default:!0},place:{type:Object,default:function(){}},batchId:{type:String,default:""},processMode:{type:[Number,String],default:""},mode:{type:String,default:"edit"},multi:{type:Boolean,default:!1},openStatus:{type:Array,default:function(){return[]}}},data:function(){return{isOpen:!1}},computed:{hdText:function(){return t.isEmpty(this.masterCheckitem)||t.isEmpty(this.masterCheckitem[0])?this.editabled?"请选择":"无":this.masterCheckitem[0].name},bdText:function(){return t.isEmpty(this.masterCheckitem)?this.editabled?"请选择":"无":t.isEmpty(this.value)?this.editabled?"请选择":"无":1===this.value.length?this.value[0].name:this.value.length+"项"}},created:function(){var t=this;a.a.$on("afterClosePopup",(function(){t.isOpen=!1}))},methods:{openDialog:function(){var t=this;this.editabled&&!this.isLoading&&(a.a.openPopup({options:this.options,selected:this.value,place:this.place,batchId:this.batchId,processMode:this.processMode,mode:this.mode,multi:this.multi,openStatus:this.openStatus,el:this.$refs["select-con"],componentUid:this._uid,callback:function(e){t.$emit("input",e),t.$emit("onSelect",e)}}),this.isOpen=!0)}}}}).call(this,i("391c"))},"32a1":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .drawing[data-v-71ce7fec]{display:block}.zjapp .point-input-list[data-v-71ce7fec]{padding:15px 0 5px 15px;background-color:#fff}.zjapp .area-name[data-v-71ce7fec]{background-color:#f0f0f0;color:#8c8c8c;padding:2px}.zjapp .point-ele[data-v-71ce7fec]{display:inline-block;width:56px;height:30px;line-height:28px;border:1px solid #dcdcdc;border-radius:3px;background-color:#fff;white-space:nowrap;overflow:hidden;color:#333;text-align:center}.zjapp .point-exceed[data-v-71ce7fec]{color:#ff4644}.zjapp .point-cur[data-v-71ce7fec]{background-color:#4275e8;border-color:#4275e8;color:#fff}",""])},"339b":function(t,e,i){"use strict";i("03da")},"393c":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .select-con[data-v-43c15cbc]{position:relative;padding:7px 40px 7px 15px;height:50px;overflow:hidden}.zjapp .select-con>*[data-v-43c15cbc]{pointer-events:none}.zjapp .select-hd[data-v-43c15cbc]{line-height:14px;font-size:10px}.zjapp .select-bd[data-v-43c15cbc],.zjapp .select-hd[data-v-43c15cbc]{color:#333;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .select-bd[data-v-43c15cbc]{margin-top:2px;line-height:20px;font-size:14px}.zjapp .select-arrow[data-v-43c15cbc]{position:absolute;top:5px;right:0;width:40px;height:40px;line-height:40px;font-size:16px;color:#c8c8c8;text-align:center}.zjapp .select-disabled[data-v-43c15cbc]{background-color:#f5f7fb}.zjapp .select-disabled .select-bd[data-v-43c15cbc],.zjapp .select-disabled .select-hd[data-v-43c15cbc]{color:#666}.zjapp .select-disabled .select-arrow[data-v-43c15cbc]{display:none}",""])},"3c64":function(t,e,i){"use strict";i("163d");var a={name:"ItemTextarea",components:{},props:{value:{type:String,default:""},placeholder:{type:String,default:""},maxlength:{type:Number,default:200},borderBottom:{type:Boolean,default:!0}},data:function(){return{textareaHeight:40,isLock:!1,blurTime:null}},computed:{lastLength:function(){var t=this.value&&this.value.length||0,e=this.maxlength-t;return e>0?e:0}},mounted:function(){var t=this;this.$nextTick((function(){t.textareaHeight=t.$refs.rule&&t.$refs.rule.offsetHeight||40}))},methods:{onfocus:function(){var t=(new Date).getTime();this.blurTime&&t-this.blurTime<300&&window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(this.$refs.input.blur(),window.cordova.plugins.Keyboard.close()),this.blurTime=null,this.$emit("focus")},onblur:function(){this.blurTime=(new Date).getTime(),this.$emit("blur")},setStatus:function(t){console.log(t),this.isLock=t},oninput:function(t){var e=this;setTimeout((function(){if(!e.isLock){var i=t.target.value;i.length>e.maxlength&&(i=i.substring(0,e.maxlength),e.$refs.input.value=i),e.$refs.rule.innerText=i,e.textareaHeight=e.$refs.rule&&e.$refs.rule.offsetHeight+20,e.$emit("input",i),e.$emit("change",i)}}),0)}}},n=(i("2c76"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"item-textarea",class:{"border-bottom":t.borderBottom}},[i("div",{staticClass:"item-textarea-content"},[i("textarea",{ref:"input",style:{height:t.textareaHeight+"px"},attrs:{placeholder:t.placeholder},domProps:{value:t.value},on:{focus:t.onfocus,blur:t.onblur,compositionstart:function(e){t.setStatus(!0)},compositionend:function(e){t.setStatus(!1)},input:t.oninput}}),i("div",{ref:"rule",staticClass:"rule"},[t._v("\n      "+t._s(t.value)+"\n    ")]),t.maxlength!==1/0?i("p",{staticClass:"counter"},[t._v("\n      "+t._s(t.lastLength)+"\n    ")]):t._e()])])}),[],!1,null,null,null);e.a=s.exports},"3cd8":function(t,e,i){var a=i("5c19");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("67c16200",a,!0,{sourceMap:!1,shadowMode:!1})},"3f7a":function(t,e,i){"use strict";(function(t){i("cc57"),i("6f84"),i("6d57"),i("e697"),i("ed63"),i("8cf2"),i("2b45"),i("163d"),i("9d30");var a=i("3122"),n=i("4ad6"),o=i("3bd5"),r=i("1b7e"),l=i("e900"),c={},d=["1","2","3","删除","4","5","6","-","7","8","9",".","上一项","0","下一项","关闭"];function h(t){return""!==t&&null!=t&&!Number.isNaN(t)}e.a={name:"MeasureDrawing3",components:{},props:{url:{type:String},data:{type:Array},pointStatus:{type:Array},points:{type:Array},mode:{type:String,default:"edit"},width:{type:Number,default:document.documentElement.clientWidth},height:{type:Number,default:document.documentElement.clientWidth},folder:{type:String,default:"house-image"},pointRadius:{type:Number,default:8},pointRatio:{type:Number,default:2},clickDelay:{type:Number,default:500},hasBouncing:{type:Boolean,default:!0},inputRange:{type:Array,default:function(){return[-9999999.99999,9999999.99999]}}},data:function(){return{drawing:null,isDownloading:!1,error:"",canvas:null,ctx:null,img:null,src:"",x:0,y:0,scale:1,defaultScale:1,pixelRatio:1,markPosition:null,markPositionImageData:[],markCoordinates:[],pinchRatio:0,xRange:null,yRange:null,scaleMin:1,scaleMax:1,isPinch:!1,clickPoints:[],touchStart:{x:0,y:0,cx:0,cy:0,time:0},isMoving:!1,moveTimer:null,moveDest:{x:null,y:null},pinchCenter:{},lightRipple:0,lightRippleTimer:null,lightRippleTimes:0,lightRippleTimesMax:2,hasWarning:!1,warningRipple:0,warningRippleTimer:null,drawPointIndex:null,lightInputIndex:null,keyboradActionData:{},isInputShow:!1,isKeyboardShow:!1,inputLength:0,hasOperaBtn:!1,hasPrevInput:!1,hasNextInput:!1}},computed:{sizeStyle:function(){return{width:"".concat(this.width,"px"),height:"".concat(this.height,"px")}},passrateMode:function(){return this.data&&this.data[0]&&this.data[0].passrateMode},comboLength:function(){return this.data&&this.data.length},drawingPoints:function(){return console.log("this.getDrawPoints(this.data) ========",this.getDrawPoints(this.data)),this.getDrawPoints(this.data)},measureItem:function(){return 5===passrateMode?["高","宽"]:5===passrateMode?["开间","进深"]:[]}},watch:{url:function(t){t&&this.$nextTick(this.getImage)},data:{handler:function(t){console.log("data cccccccccc ----------",t,this),this.draw()},deep:!0}},mounted:function(){this.getImage()},beforeDestroy:function(){this.drawing.destroy()},methods:{getImage:function(){var e=this;if(!this.isDownloading){if(console.log("getImage -----------",this.url),this.isDownloading=!0,this.url){var i=o.a.getUser().user_id,l=s.replaceAll(this.url,"\\?x-oss-process=image\\/resize,","@"),c=s.strRightBack(l,"/");if(!c)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var d=[n.a.appImagePath()+i+"/house-image/"+c,n.a.appImagePath()+i+"/drawing/"+c,n.a.appImagePath()+i+"/images/"+c,n.a.appDataPath()+i+"/house-image/"+c,n.a.appDataPath()+i+"/drawing/"+c,n.a.appDataPath()+i+"/images/"+c],h=Promise.resolve();return"dev"===APP_ENV?h=h.then((function(){return e.url})):t.each(d,(function(t){h=h.then((function(e){return e||n.a.isFileExists(t).then((function(e){if(e)return a.a._fixPath(t)}))}))})),h.then((function(t){if(console.log("获取图片 src =========",t),!t)return r.a.getHasNetwork().then((function(t){return t?a.a.download(e.url,!0,e.folder).then((function(t){e.src=t})):Promise.reject("当前无网络")}));e.src=t})).then((function(){console.log("this.src ======",e.src),e.src?(e.img=new Image,e.img.onload=function(){e.img.complete?(console.log("图片加载成功 ---------"),e.isDownloading=!1,e.$nextTick(e.init)):(console.log("11111"),e.error="加载图片失败",e.isDownloading=!1)},e.img.onerror=function(){console.log("22222"),e.error="加载图片失败",e.isDownloading=!1},e.img.src=e.src):(e.error="下载户型图失败",e.isDownloading=!1)})).catch((function(i){e.error=t.isString(i)?i:"下载户型图失败",e.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1}},init:function(){if(!this.isDownloading&&this.$refs["drawing-canvas"]){var t=this.$refs.content;this.canvas=this.$refs["drawing-canvas"],this.ctx=this.canvas.getContext("2d"),this.width=t.offsetWidth,this.height=t.offsetHeight,this.pixelRatio=this.getPixelRatio(this.ctx),this.canvas.style.height=this.height+"px",this.canvas.style.width=this.width+"px",this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,!this.ctx.extended&&Object(l.a)(this.ctx),this.bindTouchEvent(),this.calc(),this.draw()}},getPixelRatio:function(t){var e=t.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/e},winToCanvas:function(t,e){var i=this.canvas.getBoundingClientRect();return{x:t-i.left*(this.canvas.width/(i.width*this.pixelRatio)),y:e-i.top*(this.canvas.height/(i.height*this.pixelRatio))}},bindTouchEvent:function(){this.canvas.addEventListener("touchstart",this.onTouchstart),this.canvas.addEventListener("touchmove",this.onTouchmove),this.canvas.addEventListener("touchend",this.onTouchend)},unbindTouchEvent:function(){this.canvas.removeEventListener("touchstart",this.onTouchstart),this.canvas.removeEventListener("touchmove",this.onTouchmove),this.canvas.removeEventListener("touchend",this.onTouchend)},isPinching:function(t){var e=t.changedTouches.length,i=t.touches.length;return 1===e||2===e||2===i},isDragging:function(t){return 1===t.touches.length},onTouchstart:function(t){if(this.isPinch=!1,this.isDragging(t))this.touchStartHandler(t);else if(this.isPinching(t)){var e,i=t.touches[0],a=t.touches[1],n=this.winToCanvas(i.clientX,i.clientY),s=this.winToCanvas(a.clientX,a.clientY);e=Math.sqrt(Math.pow(s.x-n.x,2)+Math.pow(s.y-n.y,2)),this.pinchRatio=this.scale/e}},onTouchmove:function(t){if("img"!==this.mode){var e,i=t.touches[0];if(this.isDragging(t)){if(this.touchStart||this.touchStartHandler(t),("b"===(e=this.getDraggingDirection(this.touchStart,i))&&this.isBoundary("b")||"t"===e&&this.isBoundary("t")||"r"===e&&this.isBoundary("r")||"l"===e&&this.isBoundary("l"))&&!this.hasBouncing)return;t.preventDefault(),t.stopPropagation(),(Math.abs(i.clientX-this.touchStart.cx)>3||Math.abs(i.clientY-this.touchStart.cy)>3)&&this.touchMoveHandler(t)}else this.isPinching(t)&&this.touchPinchHandler(t)}},onTouchend:function(t){this.touchEndHandler(t)},touchStartHandler:function(t){var e=t.touches[0],i=this.winToCanvas(e.clientX,e.clientY);this.touchStart={x:i.x,y:i.y,cx:e.clientX,cy:e.clientY,time:Date.now()}},touchMoveHandler:function(t){var e=t.touches[0],i=this.winToCanvas(e.clientX,e.clientY),a=(i.x-this.touchStart.x)*this.pixelRatio,n=(i.y-this.touchStart.y)*this.pixelRatio,s=this.getMoveOverflow(),o=this.x+a,r=this.y+n;this.isPinch||(this.touchStart.x=i.x,this.touchStart.y=i.y,o<=this.xRange[0]||o>=this.xRange[1]?!1===this.hasBouncing?o<=this.xRange[0]?this.x=this.xRange[0]:this.x=this.xRange[1]:this.x+=a*Math.abs(this.canvas.width/2-s.x)/this.canvas.width/2:this.x+=a,r<=this.yRange[0]||r>=this.yRange[1]?!1===this.hasBouncing?r<=this.yRange[0]?this.y=this.yRange[0]:this.y=this.yRange[1]:this.y+=n*Math.abs(this.canvas.height/2-s.y)/this.canvas.height/2:this.y+=n,this.draw())},touchPinchHandler:function(t){var e,i,a,n,s,o=t.touches[0],r=t.touches[1],l=this.winToCanvas(o.clientX,o.clientY),c=this.winToCanvas(r.clientX,r.clientY),d=Math.sqrt(Math.pow(c.x-l.x,2)+Math.pow(c.y-l.y,2));this.isPinch=!0,e=this.pinchRatio*d,a=this.getScaleOverflow(e),n=this.scaleMin/2,s=(Math.abs(a)>n?1:Math.abs(a)/n)/2,e-=this.hasBouncing?a?a*s:0:a,this.pinchCenter=i={x:(l.x+c.x)/2*this.pixelRatio,y:(l.y+c.y)/2*this.pixelRatio},this.x=i.x-e/this.scale*(i.x-this.x),this.y=i.y-e/this.scale*(i.y-this.y),e!==this.scale&&(this.scale=e,this.setMoveRange(),this.draw())},touchEndHandler:function(t){var e=t.changedTouches[0];this.touchStart&&Date.now()-this.touchStart.time<this.clickDelay&&Math.abs(e.clientX-this.touchStart.cx)<6&&Math.abs(e.clientY-this.touchStart.cy)<6&&this.clickHandler(t),this.straighten(t)},clickHandler:function(e){var i,a,n,s,o=this,r=e.changedTouches[0],l=this.winToCanvas(r.clientX,r.clientY),c={x:((l.x-this.x/this.pixelRatio)/this.scale*this.pixelRatio).toFixed(1),y:((l.y-this.y/this.pixelRatio)/this.scale*this.pixelRatio).toFixed(1)},d=this.getClickPoint(c),p=this.isInputShow?this.getInputPopupSize():null,u=this.isInputShow?this.getInputPopupPos():null,f=this.isInputShow?{x:l.x-u.x,y:l.y-u.y}:null,m=240,g=180,v=this.isKeyboardShow?this.getKeyboradPos():null,b=this.isKeyboardShow?{x:l.x-v.x,y:l.y-v.y}:null;p&&f.x>5&&f.x<p.w-5&&f.y>0&&f.y<p.h?s="input":f&&f.x>-52&&f.x<0&&f.y>(p.h-32-10)/2&&f.y<(p.h+32+10)/2?s="remove":f&&f.x>p.w&&f.x<p.w+20+32&&f.y>(p.h-32-10)/2&&f.y<(p.h+32+10)/2?s="save":b&&b.x>0&&b.x<m&&b.y>0&&b.y<g?s="keyborad":d?s="point":c.x>=0&&c.x<=this.img.width&&c.y>=0&&c.y<=this.img.height&&(s="img"),console.log("clickType ======",s),"edit"===this.mode?("input"===s&&(1===this.passrateMode?i=Math.floor((f.x-5)/80):2===this.passrateMode?i=(i=(Math.floor(f.x/69)+3*Math.floor(f.y/33))%2?"":(Math.floor(f.x/69)+3*Math.floor(f.y/33))/2)<0||i>4?"":i:3===this.passrateMode?i=Math.floor((f.x-5)/69):3===this.passrateMode||(5===this.passrateMode||6===this.passrateMode?f.x>50&&(i=Math.floor((f.x-50)/69)+3*Math.floor(f.y/44)):7===this.passrateMode?i=Math.floor((f.x-5)/69):8===this.passrateMode?(i=Math.floor((f.x-5)/75)?0:1,this.data[0].points[this.drawPointIndex].val=i,setTimeout((function(){o.inputBlur(o.lightInputIndex),o.pointBlur(),o.draw()}),200)):12!==this.passrateMode&&13!==this.passrateMode||(i=Math.floor((f.x-5)/69))),h(i)&&this.inputFocus(i)),"remove"===s&&(this.inputBlur(this.lightInputIndex,!0),this.delPoint(this.drawPointIndex),this.pointBlur()),"save"===s&&(this.inputBlur(this.lightInputIndex),this.pointBlur()),"keyborad"===s&&(a=Math.floor(b.x/60)+4*Math.floor(b.y/45),this.setPointVal(a),this.setKeyboradAction(a)),"point"===s&&(this.inputBlur(this.lightInputIndex),n=this.getTargetPoints(this.drawPointIndex),!t.some(n,(function(t){return h(t.val)||h(t.setVal)}))&&h(this.drawPointIndex)&&(this.delPoint(this.drawPointIndex),d=this.getClickPoint(c)),this.pointFocus(d.index)),"img"===s&&(this.inputBlur(this.lightInputIndex),n=this.getTargetPoints(this.drawPointIndex),!t.some(n,(function(t){return h(t.val)||h(t.setVal)}))&&h(this.drawPointIndex)&&this.delPoint(this.drawPointIndex),this.addPoint({x:c.x,y:c.y}),this.pointFocus(this.drawingPoints.length-1,!0))):("point"===s&&((d=this.getClickPoint(c)).pointId?this.$emit("onClickPoint",d):this.pointFocus(d.index)),"img"===s&&this.pointBlur());var x={type:d?"point":"",pos:l,x:c.x,y:c.y,point:d,btn:""};this.$emit("onClick",x),this.draw()},getDraggingDirection:function(t,e){var i=t.cx-e.pageX,a=t.cy-e.pageY;return Math.abs(i)>Math.abs(a)?i>0?"r":i<0?"l":"":a>0?"b":a<0?"t":""},isBoundary:function(t){switch(t){case"t":if(this.y>=this.yRange[1])return!0;break;case"r":if(this.x<=this.xRange[0])return!0;break;case"b":if(this.y<=this.yRange[0])return!0;break;case"l":if(this.x>=this.xRange[1])return!0}return!1},pointFocus:function(e,i){var a,n,s,o,r,l=this.hasOperaBtn?42:0;this.drawPointIndex=e,this.lightRippleTimes=0,r=this.getMarkPoints(this.drawPointIndex),t.each(r,(function(t){delete t.isWarning})),this.hasWarning=t.some(this.drawingPoints,{isWarning:!0}),s=this.getInputPopupPos(),o=this.getInputPopupSize(),s.x-l<0?a=(s.x-l)*this.pixelRatio:s.x+o.w+l>this.width&&(a=(s.x+o.w+l-this.width)*this.pixelRatio),s.y<0&&(n=s.y*this.pixelRatio),1===this.passrateMode?this.inputLength=this.data.length:2===this.passrateMode?this.inputLength=5:3===this.passrateMode?this.inputLength=2:4===this.passrateMode?this.inputLength=0:5===this.passrateMode||6===this.passrateMode?this.inputLength=6:7===this.passrateMode||12===this.passrateMode?this.inputLength=3:13===this.passrateMode&&(this.inputLength=2),this.isInputShow=!0,this.moveTo(this.x-(a||0),this.y-(n||0)),"edit"===this.mode&&i&&8!==this.passrateMode&&this.inputFocus(this.lightInputIndex||0),this.setMoveRange()},pointBlur:function(){this.drawPointIndex=null,this.isInputShow=!1,this.isKeyboardShow=!1,"edit"===this.mode&&this.$emit("onChange",this.data)},inputFocus:function(t){var e,i,a=this.getKeyboradPos(),n=240,s=180;a.x<0?e=a.x*this.pixelRatio:a.x+n>this.width&&(e=(a.x+n-this.width)*this.pixelRatio),a.y+s>this.height&&(i=(a.y+s-this.height)*this.pixelRatio),this.lightInputIndex=t,this.hasPrevInput=t>0,this.hasNextInput=t<this.inputLength-1,"edit"===this.mode&&8!==this.passrateMode&&(this.isKeyboardShow=!0,this.moveTo(this.x-(e||0),this.y-(i||0))),this.autoInputSetVal(),this.setMoveRange()},inputBlur:function(e,i){var a=this.getTargetPoint(this.drawPointIndex,e),n=h(this.inputRange[0])?this.inputRange[0]:-1/0,s=h(this.inputRange[1])?this.inputRange[1]:1/0;a&&a.points&&t.each(a.points,(function(t){if(a.isSetVal){if(t.setVal=isNaN(t.setVal)?"":h(t.setVal)?Math.floor(1e5*parseFloat(t.setVal))/1e5:"",""===t.setVal)return;t.setVal<n?t.setVal=n:t.setVal>s&&(t.setVal=s)}else{if(t.val=isNaN(t.val)?"":h(t.val)?Math.floor(1e5*parseFloat(t.val))/1e5:"",""===t.val)return;t.val<n?t.val=n:t.val>s&&(t.val=s)}})),this.lightInputIndex=null,this.isKeyboardShow=!1,!i&&this.$emit("onChange",this.data)},setPointVal:function(e){var i=this,a=this.lightInputIndex;if(h(this.drawPointIndex)&&h(this.lightInputIndex)){var n=this.getTargetPoint(this.drawPointIndex,this.lightInputIndex),s=d[e];n&&n.points&&(t.each(n.points,(function(t){isNaN(s)?"删除"===s?n.isSetVal?t.setVal=t.setVal.toString().substr(0,t.setVal.toString().length-1):t.val=t.val.toString().substr(0,t.val.toString().length-1):"-"===s?n.isSetVal?h(t.setVal)||(t.setVal="-"):h(t.val)||(t.val="-"):"."===s?n.isSetVal?h(t.setVal)&&parseFloat(t.setVal)===parseInt(t.setVal)&&(t.setVal=t.setVal+s):h(t.val)&&parseFloat(t.val)===parseInt(t.val)&&(t.val=t.val+s):"上一项"===s?i.hasPrevInput&&(i.inputBlur(i.lightInputIndex),i.inputFocus(a-1)):"下一项"===s?i.hasNextInput&&(i.inputBlur(i.lightInputIndex),i.inputFocus(a+1)):"关闭"===s&&(i.inputBlur(i.lightInputIndex),i.isKeyboardShow=!1,i.lightInputIndex=null):n.isSetVal?t.setVal=(h(t.setVal)?t.setVal:"")+s:t.val=t.val+s})),n.isSetVal&&n.points&&n.points.length&&this.saveInputSetVal())}},setKeyboradAction:function(t){var e=this;this.keyboradActionData[t]&&clearTimeout(this.keyboradActionData[t]),this.keyboradActionData[t]=setTimeout((function(){delete e.keyboradActionData[t],e.draw()}),300),this.draw()},saveInputSetVal:function(){var e=this.getTargetPoints(this.drawPointIndex),i=this.data[0].checkitem.id;t.includes([3,4],this.passrateMode)?c[i]={val:e[0].setVal}:t.includes([5,6],this.passrateMode)&&(c[i]={},t.each(this.measureItem,(function(a){var n=t.find(e,{label:a}).setVal;c[i]["val-"+a]=n})))},autoInputSetVal:function(){var e=this.data[0].checkitem.id,i=this.getTargetPoints(this.drawPointIndex),a=c[e],n=t.includes([3,4,5,6],this.passrateMode),s=t.some(i,(function(t){return!h(t.setVal)}));n&&s&&a&&!t.isEmpty(a)&&(t.includes([3,4],this.passrateMode)?h(a.val)&&t.each(i,(function(t){t.setVal=a.val})):t.each(i,(function(t){var e=a["val-"+t.label];h(e)&&(t.setVal=e)})))},getMarkPoints:function(e){var i,a=[];return h(e)?(i=this.drawingPoints[e].area,1===this.passrateMode?t.each(this.data,(function(t){a.push(t.points[e])})):2===this.passrateMode?a=t.filter(this.data[0].points,(function(t){return t.area===i})):3===this.passrateMode?a=this.data[0].points[e]:4===this.passrateMode||(5===this.passrateMode||6===this.passrateMode||7===this.passrateMode?a=t.filter(this.data[0].points,(function(t){return t.area===i})):8===this.passrateMode?a=this.data[0].points[e]:12!==this.passrateMode&&13!==this.passrateMode||(a=t.filter(this.data[0].points,(function(t){return t.area===i})))),a&&!t.isArray(a)&&(a=[a]),a):null},getTargetPoint:function(e,i){var a,n,s,o,r=!1;return h(e)&&h(i)?(1===this.passrateMode?n=this.data[i].points[e]:2===this.passrateMode?(s=this.drawingPoints[e].area,n=(a=t.filter(this.data[0].points,(function(t){return t.area===s})))[i]):3===this.passrateMode?(n=this.data[0].points[e],r=1===i):4===this.passrateMode||(5===this.passrateMode||6===this.passrateMode?(5===this.passrateMode?o=["高","宽"]:6===this.passrateMode&&(o=["开间","进深"]),s=this.drawingPoints[e].area,a=t.filter(this.data[0].points,(function(t){return t.area===s})),n=t.filter(a,(function(t,e){return t.label===(0===Math.floor(i/3)?o[0]:o[1])&&(2===i||5===i||i%3%2==e%2)})),2!==i&&5!==i||(r=!0)):7===this.passrateMode?(s=this.drawingPoints[e].area,n=(a=t.filter(this.data[0].points,(function(t){return t.area===s})))[i]):8===this.passrateMode?n=this.data[0].points[e]:12!==this.passrateMode&&13!==this.passrateMode||(s=this.drawingPoints[e].area,n=(a=t.filter(this.data[0].points,(function(t){return t.area===s})))[i])),n&&!t.isArray(n)&&(n=[n]),{points:n,isSetVal:r}):null},getTargetPoints:function(e){var i,a=[];return e=h(e)?e:this.drawPointIndex,h(e)?(1===this.passrateMode?t.each(this.data,(function(i){t.each(i.points,(function(t,i){e===i&&a.push(t)}))})):2===this.passrateMode?(i=this.drawingPoints[e].area,a=t.filter(this.data[0].points,(function(t){return t.area===i}))):3===this.passrateMode?a=t.filter(this.data[0].points,(function(t,i){return e===i})):4===this.passrateMode||(5===this.passrateMode||6===this.passrateMode||7===this.passrateMode?(i=this.drawingPoints[e].area,a=t.filter(this.data[0].points,(function(t){return t.area===i}))):8===this.passrateMode?a=t.filter(this.data[0].points,(function(t,i){return e===i})):12!==this.passrateMode&&13!==this.passrateMode||(i=this.drawingPoints[e].area,a=t.filter(this.data[0].points,(function(t){return t.area===i})))),a):a},moveTo:function(t,e){var i=this;null===this.moveDest.x&&null===this.moveDest.y?this.moveDest={x:t,y:e}:(this.moveDest.x===t&&this.moveDest.y===e||(this.moveDest.x<t?this.moveDest.x=t<=this.x?this.moveDest.x:t:this.moveDest.x=t>=this.x?this.moveDest.x:t,this.moveDest.y<e?this.moveDest.y=e<=this.y?this.moveDest.y:e:this.moveDest.y=e>=this.y?this.moveDest.y:e),t=this.moveDest.x,e=this.moveDest.y),t===this.x&&e===this.y||(this.isMoving=!0,clearTimeout(this.moveTimer),this.moveTimer=setTimeout((function(){var a=!1;Math.abs(t-i.x)<1?i.x=t:(i.x+=.5*(t-i.x),a=!0),Math.abs(e-i.y)<1?i.y=e:(i.y+=.5*(e-i.y),a=!0),a?(i.moveTo(t,e),i.draw()):(i.isMoving=!1,i.moveDest={x:null,y:null})}),20))},getClickPoint:function(t){var e,i=this,a=this.pointRadius*this.pointRatio+1;return this.drawingPoints.forEach((function(n){var s=Math.sqrt(Math.pow(Math.abs(t.x-n.x),2)+Math.pow(Math.abs(t.y-n.y),2)),o=s*i.scale/i.pixelRatio;o<=i.pointRadius*i.pointRatio&&o<a&&(e=n,a=s)})),e},setMoveRange:function(){var t=this.getMoveRange(this.scale);this.xRange=t.x,this.yRange=t.y},getMoveRange:function(t){var e,i,a,n,s,o,r,l,c,d,h=this.getInputPopupPos(),p=this.getInputPopupSize(),u=this.getKeyboradPos(),f=240,m=180,g=this.hasOperaBtn?42:0;return t=t||this.scale,i=(e=this.width*this.pixelRatio-this.img.width*t)>0?e/=2:0,n=(a=this.height*this.pixelRatio-this.img.height*t)>0?a/=2:0,this.isInputShow&&(n+=s=(s=this.y-h.y*this.pixelRatio)>0&&s>n?s-n:0),(this.isInputShow||this.isKeyboardShow)&&(c=this.isInputShow?(h.x+p.w+g)*this.pixelRatio:0,d=this.isKeyboardShow?(u.x+f)*this.pixelRatio:0,e+=o=(o=this.x+this.img.width*this.scale-Math.max(c,d))<0&&o<-i?o+i:0),this.isKeyboardShow&&(a+=r=(r=this.y+this.img.height*this.scale-(u.y+m)*this.pixelRatio)<0&&r<-n?r+n:0),(this.isInputShow||this.isKeyboardShow)&&(c=this.isInputShow?(h.x-g)*this.pixelRatio:1/0,d=this.isKeyboardShow?u.x*this.pixelRatio:1/0,i+=l=(l=this.x-Math.min(c,d))>0&&l>i?l-i:0),{x:[e,i],y:[a,n]}},straighten:function(t,e){var i=this;if(!(t&&"touchend"===t.type&&0!==t.touches.length||this.isMoving)){var a=e||(this.scale<this.scaleMin?this.scaleMin:this.scale>this.scaleMax?this.scaleMax:this.scale),n=this.getMoveRange(a),s=n.x,o=n.y;(this.x<s[0]||this.x>s[1]||this.y<o[0]||this.y>o[1]||this.scale<this.scaleMin||this.scale>this.scaleMax)&&setTimeout((function(){var t=i.pinchCenter.x?i.pinchCenter.x-a*(i.pinchCenter.x-i.x)/i.scale:i.x,n=i.pinchCenter.y?i.pinchCenter.y-a*(i.pinchCenter.y-i.y)/i.scale:i.y,r=!1;t=t<s[0]?s[0]:t>s[1]?s[1]:t,n=n<o[0]?o[0]:n>o[1]?o[1]:n,Math.abs(t-i.x)<1?i.x=t:(i.x+=.5*(t-i.x),r=!0),Math.abs(n-i.y)<1?i.y=n:(i.y+=.5*(n-i.y),r=!0),Math.abs(a-i.scale)*i.img.width*i.img.height<5?i.scale=a:(i.scale+=.5*(a-i.scale),r=!0),r&&(i.straighten("",e),i.draw())}),20)}},getMoveOverflow:function(){return{x:this.x<this.xRange[0]?this.x-this.xRange[0]:this.x>this.xRange[1]?this.x-this.xRange[1]:0,y:this.y<this.yRange[0]?this.y-this.yRange[0]:this.y>this.yRange[1]?this.y-this.yRange[1]:0}},getScaleOverflow:function(t){return(t=t||this.scale)<this.scaleMin?t-this.scaleMin:t>this.scaleMax?t-this.scaleMax:0},calc:function(){var t,e;this.width/this.img.width<this.height/this.img.height?(t=this.width/this.img.width,this.x=0,this.y=(this.height-this.img.height*t)/2*this.pixelRatio):(t=this.height/this.img.height,this.x=(this.width-this.img.width*t)/2*this.pixelRatio,this.y=0),this.scale=t*this.pixelRatio,e=this.scale<.25?2:8*this.scale,this.scaleMin=this.scale,this.scaleMax=e,this.xRange=[this.x,this.x],this.yRange=[this.y,this.y]},draw:function(){var t=this;this.ctx&&(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawImage(),this.drawPoints(),this.drawInputPopup(),this.drawKeyborad(),null!==this.drawPointIndex&&this.lightRippleTimes<this.lightRippleTimesMax&&(clearTimeout(this.lightRippleTimer),this.lightRippleTimer=setTimeout((function(){t.lightRipple=t.lightRipple+.07,t.lightRipple>=1&&(t.lightRipple=0,t.lightRippleTimes=t.lightRippleTimes+1),t.lightRippleTimes>=t.lightRippleTimesMax?t.lightRipple=0:t.lightRipple=parseFloat(t.lightRipple.toFixed(2)),t.draw()}),40)),this.hasWarning&&(clearTimeout(this.warningRippleTimer),this.warningRippleTimer=setTimeout((function(){t.warningRipple=t.warningRipple+.07,t.warningRipple>=1&&(t.warningRipple=0),t.warningRipple=parseFloat(t.warningRipple.toFixed(2)),t.draw()}),40)))},drawImage:function(){this.ctx.drawImage(this.img,0,0,this.img.width,this.img.height,this.x,this.y,this.img.width*this.scale,this.img.height*this.scale)},drawPoints:function(t){var e=this;this.drawingPoints.forEach((function(i,a){e.drawPoint(i.x*e.scale/e.pixelRatio+e.x/e.pixelRatio,i.y*e.scale/e.pixelRatio+e.y/e.pixelRatio,e.pointRadius,a,t,e.drawPointIndex===a?"#4275e8":i.color||(i.isQualified?"#0bc666":"#ff3c46"),i),i.index=a}))},drawPoint:function(t,e,i,a,n,s,o){this.ctx.save(),null!==this.drawPointIndex&&this.drawPointIndex===a&&(this.ctx.beginPath(),this.ctx.fillStyle="rgba(66, 117, 232, "+(.6*(1-this.lightRipple)+.1)+")",this.ctx.arc(t,e,i*(1+this.lightRipple),0,2*Math.PI,!1),this.ctx.fill()),o.isWarning&&this.drawPointIndex!==a&&(this.ctx.beginPath(),this.ctx.fillStyle="rgba(252, 139, 1, "+(.6*(1-this.warningRipple)+.1)+")",this.ctx.arc(t,e,i*(1+this.warningRipple),0,2*Math.PI,!1),this.ctx.fill()),this.ctx.beginPath(),o.isWarning&&this.drawPointIndex!==a?this.ctx.fillStyle="#ff7439":s&&(this.ctx.fillStyle=s),this.ctx.arc(t,e,i,0,2*Math.PI,!1),this.ctx.globalAlpha=.6,this.ctx.fill(),this.ctx.globalAlpha=1,s&&(this.ctx.strokeStyle=s),this.ctx.lineWidth=1,this.ctx.stroke()},getLightPoint:function(){return(null===this.drawPointIndex?null:this.drawingPoints[this.drawPointIndex])||null},drawInputPopup:function(){var t=this.getLightPoint(),e=this.getInputPopupSize(),i=e.w,a=e.h,n=this.getInputPopupPos(),s=n.x,o=n.y;t&&this.isInputShow&&(this.ctx.fillStyle="rgba(0,0,0,0.8)",this.ctx.beginPath(),this.ctx.arc(s+5,o+5,5,Math.PI,1.5*Math.PI),this.ctx.lineTo(i+s-5,o),this.ctx.arc(s+i-5,o+5,5,1.5*Math.PI,0),this.ctx.lineTo(s+i,o+a-5),this.ctx.arc(s+i-5,o+a-5,5,0,.5*Math.PI),this.ctx.lineTo(s+i/2+5,o+a),this.ctx.lineTo(s+i/2,o+a+5),this.ctx.lineTo(s+i/2-5,o+a),this.ctx.lineTo(s+5,o+a),this.ctx.arc(s+5,o+a-5,5,.5*Math.PI,Math.PI),this.ctx.lineTo(s,o+5),this.ctx.closePath(),this.ctx.fill(),"edit"===this.mode&&(this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.beginPath(),this.ctx.arc(s-26,o+a/2,16,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill(),this.ctx.beginPath(),this.ctx.strokeStyle="#ff3d3d",this.ctx.lineWidth=2,this.ctx.moveTo(s-34,o+a/2),this.ctx.lineTo(s-18,o+a/2),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.arc(s+i+26,o+a/2,16,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill(),this.ctx.beginPath(),this.ctx.strokeStyle="#0bc666",this.ctx.lineWidth=2,this.ctx.moveTo(s+i+18,o+a/2-1),this.ctx.lineTo(s+i+24,o+a/2+5),this.ctx.lineTo(s+i+35,o+a/2-6),this.ctx.stroke(),this.ctx.lineCap="butt",this.ctx.lineJoin="miter"),this.drawInputs(s,o))},drawInputs:function(e,i){var a,n,s,o,r,l=this,c="edit"===this.mode?"#ffffff":"#b5b5b5",d=[];e=e+5+.5,i=i+5+.5,this.ctx.lineWidth=1,this.ctx.textAlign="center",this.ctx.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',1===this.passrateMode?t.each(this.data,(function(t,a){l.drawInput({x:e+79*a,y:i,borderColor:l.lightInputIndex===a?c:"#b5b5b5",label:l.data.length>1?t.checkitem.name:"实测值",val:h(t.points[l.drawPointIndex].val)?t.points[l.drawPointIndex].val:"edit"===l.mode?"":"未填",valColor:h(t.points[l.drawPointIndex].val)?t.points[l.drawPointIndex].isExceed?"#ff4545":"#ffffff":"#b5b5b5"}),a&&(l.ctx.beginPath(),l.ctx.strokeStyle="#b5b5b5",l.ctx.moveTo(e+79*a-9.5,i+16.5),l.ctx.lineTo(e+79*a-.5,i+16.5),l.ctx.stroke())})):2===this.passrateMode?(a=this.drawingPoints[this.drawPointIndex],d=t.filter(this.data[0].points,(function(t){return t.area===a.area})),t.each(d,(function(t,a){var n=Math.floor(2*a/3),s=2*a%3;l.drawInput({x:e+69*s,y:i+33*n,borderColor:l.lightInputIndex===a?c:"#b5b5b5",label:"实测值",val:t.val,valColor:t.isExceed?"#ff4545":"#ffffff",borderRadius:"n"})}))):3===this.passrateMode?(this.drawInput({x:e,y:i,borderColor:0===this.lightInputIndex?c:"#b5b5b5",label:"实测值",val:this.data[0].points[this.drawPointIndex].val,valColor:this.data[0].points[this.drawPointIndex].isExceed?"#ff4545":"#ffffff",borderRadius:"l"}),this.drawInput({x:e+69,y:i,borderColor:1===this.lightInputIndex?c:"#b5b5b5",label:"设计值",val:this.data[0].points[this.drawPointIndex].setVal,valColor:"#ffffff",borderRadius:"r"}),null!==this.lightInputIndex&&(this.ctx.beginPath(),this.ctx.strokeStyle="#ffffff",this.ctx.moveTo(e+69,i-.5),this.ctx.lineTo(e+69,i+33+.5),this.ctx.stroke())):4===this.passrateMode||(5===this.passrateMode||6===this.passrateMode?(e+=45,a=this.drawingPoints[this.drawPointIndex],d=t.filter(this.data[0].points,(function(t){return t.area===a.area})),s=t.groupBy(d,"label"),t.each(s,(function(a,n){var s=n,o="高"===n||"开间"===n?0:1;"高"===n&&(s="高度"),"宽"===n&&(s="宽度"),l.ctx.fillStyle="#ffffff",l.ctx.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',l.ctx.fillText(s,e-25,i+44*o+16.5+6),t.each(a,(function(t,a){l.drawInput({x:e+69*a,y:i+44*o,borderColor:l.lightInputIndex===3*o+a?c:"#b5b5b5",label:"实测值",val:t.val,valColor:t.isExceed?"#ff4545":"#ffffff",borderRadius:0===a?"l":"n"})})),l.drawInput({x:e+138,y:i+44*o,borderColor:l.lightInputIndex===3*o+2?c:"#b5b5b5",label:"设计值",val:a[0].setVal,valColor:"#ffffff",borderRadius:"r"})})),null!==this.lightInputIndex&&(o=Math.floor(this.lightInputIndex/3),2!==(r=this.lightInputIndex%3)&&(this.ctx.beginPath(),this.ctx.strokeStyle="#ffffff",this.ctx.moveTo(e+69*(r+1),i+44*o-.5),this.ctx.lineTo(e+69*(r+1),i+44*o+33+.5),this.ctx.stroke()))):7===this.passrateMode||12===this.passrateMode||13===this.passrateMode?(a=this.drawingPoints[this.drawPointIndex],d=t.filter(this.data[0].points,(function(t){return t.area===a.area})),t.each(d,(function(t,a){l.drawInput({x:e+69*a,y:i,borderColor:l.lightInputIndex===a?c:"#b5b5b5",label:"实测值",val:t.val,valColor:t.isExceed?"#ff4545":"#ffffff",borderRadius:0===a?"l":2===a?"r":"n"})})),0!==this.lightInputIndex&&1!==this.lightInputIndex||(this.ctx.beginPath(),this.ctx.strokeStyle="#ffffff",this.ctx.moveTo(e+69*(this.lightInputIndex+1),i-.5),this.ctx.lineTo(e+69*(this.lightInputIndex+1),i+33+.5),this.ctx.stroke())):8===this.passrateMode&&(n=this.data[0].points[this.drawPointIndex],"edit"===this.mode?(this.drawInput({x:e,y:i,borderColor:1===n.val?"#4275e8":"#ffffff",bgColor:1===n.val?"#4275e8":"",val:"合格",valColor:"#ffffff"}),this.drawInput({x:e+69+10,y:i,borderColor:0===n.val?"#4275e8":"#ffffff",bgColor:0===n.val?"#4275e8":"",val:"不合格",valColor:"#ffffff"})):this.drawInput({x:e,y:i,borderColor:"#ffffff",bgColor:"",val:1===n.val?"合格":"不合格",valColor:"#ffffff"})))},drawInput:function(t){var e=t.x,i=t.y,a=t.w||69,n=t.h||33,s=t.borderColor,o=t.bgColor,r=t.label?t.label.substr(0,4):"",l=t.labelColor,c=h(t.val)?t.val.toString().substr(-(t.val.toString().indexOf(".")<0?7:8)):"",d=t.valColor,p=t.borderRadius||"a";this.ctx.strokeStyle=s,this.ctx.beginPath(),"a"===p||"l"===p?this.ctx.arc(e+2,i+2,2,Math.PI,1.5*Math.PI):this.ctx.moveTo(e,i),h(r)&&h(c)&&(this.ctx.lineTo(e+(a-8*r.length)/2-2,i),this.ctx.moveTo(e+(a+8*r.length)/2+2,i)),"a"===p||"r"===p?(this.ctx.lineTo(e+a-2,i),this.ctx.arc(e+a-2,i+2,2,1.5*Math.PI,0),this.ctx.lineTo(e+a,i+n-2),this.ctx.arc(e+a-2,i+n-2,2,0,.5*Math.PI)):(this.ctx.lineTo(e+a,i),this.ctx.lineTo(e+a,i+n)),"a"===p||"l"===p?(this.ctx.lineTo(e+2,i+n),this.ctx.arc(e+2,i+n-2,2,.5*Math.PI,Math.PI),this.ctx.lineTo(e,i+2)):(this.ctx.lineTo(e,i+n),this.ctx.lineTo(e,i-.5)),this.ctx.stroke(),h(o)&&(this.ctx.fillStyle=o,this.ctx.fill()),h(r)&&(this.ctx.textAlign="center",h(c)?(this.ctx.fillStyle=l||s,this.ctx.font='8px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',this.ctx.fillText(r,e+a/2,i+3)):(this.ctx.fillStyle=l||"#808080",this.ctx.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',this.ctx.fillText(r,e+a/2,i+n/2+6))),h(c)&&(this.ctx.textAlign="center",this.ctx.fillStyle=d,this.ctx.font='16px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',this.ctx.fillText(c,e+a/2,i+n/2+6))},drawKeyborad:function(){var t,e=this,i=this.getLightPoint(),a=240,n=180,s=this.getKeyboradPos(),o=s.x,r=s.y;if(i&&this.isKeyboardShow&&null!==this.lightInputIndex){for(t in this.ctx.shadowBlur=5,this.ctx.shadowColor="#999",this.ctx.fillStyle="#ffffff",this.ctx.beginPath(),this.ctx.arc(o+6,r+6,6,Math.PI,1.5*Math.PI),this.ctx.lineTo(a+o-6,r),this.ctx.arc(o+a-6,r+6,6,1.5*Math.PI,0),this.ctx.lineTo(o+a,r+n-6),this.ctx.arc(o+a-6,r+n-6,6,0,.5*Math.PI),this.ctx.lineTo(o+6,r+n),this.ctx.arc(o+6,r+n-6,6,.5*Math.PI,Math.PI),this.ctx.lineTo(o,r+6),this.ctx.closePath(),this.ctx.fill(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.keyboradActionData)t=parseInt(t),this.ctx.fillStyle="#f2f2f2",this.ctx.beginPath(),0===t?this.ctx.arc(o+t%4*60+6,r+45*Math.floor(t/4)+6,6,Math.PI,1.5*Math.PI):this.ctx.moveTo(o+t%4*60,r+45*Math.floor(t/4)),3===t?(this.ctx.lineTo(o+60*(t%4+1)-6,r+45*Math.floor(t/4)),this.ctx.arc(o+60*(t%4+1)-6,r+45*Math.floor(t/4)+6,6,1.5*Math.PI,0)):this.ctx.lineTo(o+60*(t%4+1),r+45*Math.floor(t/4)),15===t?(this.ctx.lineTo(o+60*(t%4+1),r+(Math.floor(t/4)+1)-6),this.ctx.arc(o+60*(t%4+1)-6,r+45*(Math.floor(t/4)+1)-6,6,0,.5*Math.PI)):this.ctx.lineTo(o+60*(t%4+1),r+45*(Math.floor(t/4)+1)),12===t?(this.ctx.lineTo(o+t%4*60+6,r+45*(Math.floor(t/4)+1)),this.ctx.arc(o+t%4*60+6,r+45*(Math.floor(t/4)+1)-6,6,.5*Math.PI,Math.PI)):this.ctx.lineTo(o+t%4*60,r+45*(Math.floor(t/4)+1)),this.ctx.closePath(),this.ctx.fill();this.ctx.strokeStyle="#d9d9d9",this.ctx.lineWidth=.5,this.ctx.beginPath(),this.ctx.moveTo(o,r+45.25),this.ctx.lineTo(o+a,r+45.25),this.ctx.moveTo(o,r+90.25),this.ctx.lineTo(o+a,r+90.25),this.ctx.moveTo(o,r+135.25),this.ctx.lineTo(o+a,r+135.25),this.ctx.moveTo(o+60.25,r),this.ctx.lineTo(o+60.25,r+n),this.ctx.moveTo(o+120.25,r),this.ctx.lineTo(o+120.25,r+n),this.ctx.moveTo(o+180.25,r),this.ctx.lineTo(o+180.25,r+n),this.ctx.closePath(),this.ctx.stroke(),this.ctx.textAlign="center",d.forEach((function(t,i){var a=Math.floor(i/4),n=i%4;3===i?(e.ctx.fillStyle="#999999",e.ctx.beginPath(),e.ctx.moveTo(o+60*n+18,r+45*a+22.5),e.ctx.lineTo(o+60*n+25,r+45*a+14.5),e.ctx.lineTo(o+60*n+40,r+45*a+14.5),e.ctx.arc(o+60*n+40,r+45*a+16.5,2,1.5*Math.PI,0),e.ctx.lineTo(o+60*n+42,r+45*a+28.5),e.ctx.arc(o+60*n+40,r+45*a+28.5,2,0,.5*Math.PI),e.ctx.lineTo(o+60*n+25,r+45*a+30.5),e.ctx.closePath(),e.ctx.fill(),e.ctx.beginPath(),e.ctx.strokeStyle="#ffffff",e.ctx.lineWidth=2,e.ctx.moveTo(o+60*n+28,r+45*a+18),e.ctx.lineTo(o+60*n+37,r+45*a+27),e.ctx.moveTo(o+60*n+37,r+45*a+18),e.ctx.lineTo(o+60*n+28,r+45*a+27),e.ctx.stroke()):(e.ctx.fillStyle="#111111",e.ctx.font=3===i||12===i||14===i||15===i?'14px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif':'18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',15===i&&(e.ctx.fillStyle="#4275e8"),(12===i&&!e.hasPrevInput||14===i&&!e.hasNextInput)&&(e.ctx.fillStyle="#b2b2b2"),e.ctx.fillText(t,o+60*n+30,r+45*a+29))}))}},getInputPopupSize:function(){var t,e;return 1===this.passrateMode?(t=80*this.comboLength,e=44):2===this.passrateMode?(t=218,e=110):3===this.passrateMode?(t=149,e=44):4===this.passrateMode||(5===this.passrateMode||6===this.passrateMode?(t=263,e=88):7===this.passrateMode?(t=218,e=44):8===this.passrateMode?"edit"===this.mode?(t=160,e=44):(t=80,e=44):12===this.passrateMode?(t=218,e=44):13===this.passrateMode&&(t=149,e=44)),{w:t,h:e}},getInputPopupPos:function(){var t=this.getLightPoint(),e=this.getInputPopupSize();return t?{x:t.x*this.scale/this.pixelRatio+this.x/this.pixelRatio-e.w/2,y:t.y*this.scale/this.pixelRatio+this.y/this.pixelRatio-e.h-this.pointRadius-10}:{x:null,y:null}},getKeyboradPos:function(){var t=this.getLightPoint();return t?{x:Math.round(t.x*this.scale/this.pixelRatio+this.x/this.pixelRatio-120),y:Math.round(t.y*this.scale/this.pixelRatio+this.y/this.pixelRatio+this.pointRadius+10)}:{x:null,y:null}},getAreaData:function(e){var i=[];return t.each(e,(function(a){if(!t.some(i,(function(t){return t.name===a.area}))){var n=t.filter(e,{area:a.area}).length;i.push({name:a.area,setVal:h(a.setVal)?a.setVal:"",pointNum:n})}})),i},getDrawPoints:function(e){if(t.isEmpty(e))return[];var i=[],a=[],n=t.clone(e);if(1===this.passrateMode?(i=n[0].points,t.each(n,(function(e){t.each(e.points,(function(t,e){i[e]&&(i[e].isQualified=!0)}))})),t.each(n,(function(e){t.each(e.points,(function(t,e){t.isExceed&&i[e]&&(i[e].isQualified=!1),t.isWarning&&i[e]&&(i[e].isWarning=!0)}))}))):2===this.passrateMode?(a=this.getAreaDataFromPoints(n[0].points),i=t.map(a,(function(e){var i=t.filter(n[0].points,{area:e.name}),a=t.some(i,(function(t){return t.isExceed})),s=t.some(i,(function(t){return t.isWarning}));return{x:i[0].x,y:i[0].y,area:e.name,isQualified:!a,isWarning:s,pointId:i[0].pointId}}))):3===this.passrateMode?i=n[0].points:4===this.passrateMode||(5===this.passrateMode||6===this.passrateMode?(a=this.getAreaDataFromPoints(n[0].points),i=t.map(a,(function(e){var i=t.filter(n[0].points,{area:e.name}),a=t.some(i,(function(t){return t.isExceed})),s=t.some(i,(function(t){return t.isWarning}));return{x:i[0].x,y:i[0].y,area:e.name,isQualified:!a,isWarning:s,pointId:i[0].pointId}}))):7===this.passrateMode?(a=this.getAreaDataFromPoints(n[0].points),i=t.map(a,(function(e){var i=t.filter(n[0].points,{area:e.name}),a=t.some(i,(function(t){return t.isExceed})),s=t.some(i,(function(t){return t.isWarning}));return{x:i[0].x,y:i[0].y,area:e.name,isQualified:!a,isWarning:s,pointId:i[0].pointId}}))):8===this.passrateMode?i=n[0].points:12===this.passrateMode||13===this.passrateMode?(a=this.getAreaDataFromPoints(n[0].points),i=t.map(a,(function(e){var i=t.filter(n[0].points,{area:e.name}),a=t.some(i,(function(t){return t.isExceed})),s=t.some(i,(function(t){return t.isWarning}));return{x:i[0].x,y:i[0].y,area:e.name,isQualified:!a,isWarning:s,pointId:i[0].pointId}}))):console.error("算法错误 --\x3e",this.passrateMode)),t.each(i,(function(t,e){t.isQualified?t.color="#0bc666":t.color="#ff4545",t.index=e})),!t.isEmpty(this.pointStatus)){var s={};t.each(this.pointStatus,(function(t){s[t.id]=t.status})),t.each(i,(function(t){var e=t.pointId?s[t.pointId]:"";e&&(t.color={"待整改":"#FF3C46","待复验":"#FF8E24","已通过":"#0BC666","非正常关闭":"#666666"}[e])}))}return i},addPoint:function(e){var i,a=this;1===this.passrateMode?(i={val:"",x:e.x,y:e.y,area:"测区1"},t.each(this.data,(function(e){e.points.push(t.clone(i))}))):2===this.passrateMode?t.each(this.data,(function(i){var n=a.getAreaData(i.points),s=t.map(n,(function(t){return/^测区\d+$/.test(t.name)?parseInt(t.name.substr(2)):0})),o=t.maxBy(s);o=o===-1/0?0:o;for(var r={val:"",x:e.x,y:e.y,area:"测区"+(o+1)},l=0;l<5;l++)i.points.push(t.clone(r))})):3===this.passrateMode?(i={val:"",x:e.x,y:e.y,area:"测区1",setVal:""},t.each(this.data,(function(t){t.points.push(i)}))):4===this.passrateMode||(5===this.passrateMode?t.each(this.data,(function(i){var n=a.getAreaData(i.points),s=t.map(n,(function(t){return/^测区\d+$/.test(t.name)?parseInt(t.name.substr(2)):0})),o=t.maxBy(s);o=o===-1/0?0:o;for(var r={val:"",x:e.x,y:e.y,area:"测区"+(o+1)},l=0;l<2;l++)r.label="高",i.points.push(t.clone(r));for(var c=0;c<2;c++)r.label="宽",i.points.push(t.clone(r))})):6===this.passrateMode?t.each(this.data,(function(i){var n=a.getAreaData(i.points),s=t.map(n,(function(t){return/^测区\d+$/.test(t.name)?parseInt(t.name.substr(2)):0})),o=t.maxBy(s);o=o===-1/0?0:o;for(var r={val:"",x:e.x,y:e.y,area:"测区"+(o+1)},l=0;l<2;l++)r.label="开间",i.points.push(t.clone(r));for(var c=0;c<2;c++)r.label="进深",i.points.push(t.clone(r))})):7===this.passrateMode?t.each(item.data,(function(i){var n=a.getAreaData(i.points),s=t.map(n,(function(t){return/^测区\d+$/.test(t.name)?parseInt(t.name.substr(2)):0})),o=t.maxBy(s);o=o===-1/0?0:o;for(var r={val:"",x:e.x,y:e.y,area:"测区"+(o+1)},l=0;l<3;l++)i.points.push(t.clone(r))})):8===this.passrateMode?(i={val:"",x:e.x,y:e.y,area:"测区1"},t.each(this.data,(function(e){e.points.push(t.clone(i))}))):12===this.passrateMode?t.each(this.data,(function(i){var n=a.getAreaData(i.points),s=t.map(n,(function(t){return/^测区\d+$/.test(t.name)?parseInt(t.name.substr(2)):0})),o=t.maxBy(s);o=o===-1/0?0:o;for(var r={val:"",x:e.x,y:e.y,area:"测区"+(o+1)},l=0;l<3;l++)i.points.push(t.clone(r))})):13===this.passrateMode?t.each(this.data,(function(i){var n=a.getAreaData(i.points),s=t.map(n,(function(t){return/^测区\d+$/.test(t.name)?parseInt(t.name.substr(2)):0})),o=t.maxBy(s);o=o===-1/0?0:o;for(var r={val:"",x:e.x,y:e.y,area:"测区"+(o+1)},l=0;l<2;l++)i.points.push(t.clone(r))})):console.error("算法不存在 --\x3e",this.passrateMode))},delPoint:function(e){1===this.passrateMode?t.each(this.data,(function(t){t.points.splice(e,1)})):2===this.passrateMode?t.each(this.data,(function(t){t.points.splice(5*e,5)})):3===this.passrateMode?t.each(this.data,(function(t){t.points.splice(e,1)})):4===this.passrateMode||(5===this.passrateMode?t.each(this.data,(function(i){var a={count:0},n=i.points,s={x:"",y:""};t.find(n,(function(t){var i=t.x+"-"+t.y;if(void 0===a[i]&&(a[i]=0,a.count++,a.count>e))return s.x=t.x,s.y=t.y,!0;a[i]++}));for(var o=n.length-1;o>-1;o--)n[o].x===s.x&&n[o].y===s.y&&n.splice(o,1)})):6===this.passrateMode?t.each(this.data,(function(t){t.points.splice(4*e,4)})):7===this.passrateMode?t.each(this.data,(function(t){t.points.splice(3*e,3)})):8===this.passrateMode?t.each(this.data,(function(t){t.points.splice(e,1)})):12===this.passrateMode?t.each(this.data,(function(t){t.points.splice(3*e,3)})):13===this.passrateMode?t.each(this.data,(function(t){t.points.splice(2*e,2)})):console.error("算法不存在"))}}}}).call(this,i("391c"))},4381:function(t,e,i){"use strict";i("1c2a")},"4bf2":function(t,e,i){"use strict";i("5945")},"4ce9":function(t,e,i){"use strict";var a=i("3f7a").a,n=(i("94f0"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",t._g({ref:"content",staticClass:"drawing-con",style:t.sizeStyle},t.$listeners),[t.isDownloading?[i("p",[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),i("p",{staticClass:"loading-text"},[t._v("正在下载...")])]:[t.error?i("p",{staticClass:"error-text"},[t._v(t._s(t.error))]):i("canvas",{ref:"drawing-canvas",style:t.sizeStyle})]],2)}),[],!1,null,"196e7a7d",null);e.a=s.exports},"4e83":function(t,e,i){"use strict";(function(t){i("e697");var a=i("4c09"),n=i("774b"),s=i("07d2"),o=i("a805"),r=i("e68e"),l=i("6948"),c=i("cd05"),d=i("3c64"),h=i("5a71"),p=i("da1c"),u=i("e2a7"),f=i("a37e"),m=i("7798"),g=i("0159"),v=i("6bf2"),b=i.n(v),x=i("bcc7"),y=i("a500"),w=i("a18c"),k=i("f7e2");e.a={name:"MeasureDetailTemplate1",components:{Scroller:n.a,Item:s.a,MeasureDetailPlaceCheckitem:o.a,ItemImgList:r.a,NumberInput:l.a,UserSelect:c.a,ItemTextarea:d.a,ProblemDetailHeader:p.a,SingleSelect:h.a},mixins:[k.a],props:{detail:{type:Object,default:function(){}}},data:function(){return{model:f.a}},computed:{masterCheckitem:function(){return this.$store.state.measure.detailMasterCheckitem},hasMasterCheckitem:function(){return this.masterCheckitem&&this.masterCheckitem.length}},methods:{formatDate:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"YYYY-MM-DD HH:mm";return b()(t).format(e)},pointNumChange:function(t){t.pointNum<t.realityVal.length&&t.realityVal.splice(t.pointNum,t.realityVal.length-1),f.a.pointsHandle(t),f.a.problemHandle(t),this.saveProblem()},addExceedVal:function(t){var e=this;t.realityVal.length>=t.pointNum?u.a.alert("爆点个数不能大于实测点数"):(t.realityVal.push({val:""}),this.$nextTick((function(){console.log("exceed-point-input =====",e.$refs["exceed-point-input"]);var t=e.$refs["exceed-point-input"],i=t&&t[t.length-1];i&&i.openKeyboard()})))},removeExceedVal:function(t){t.realityVal.pop(),f.a.pointsHandle(t),f.a.problemHandle(t),this.saveProblem()},updatedExceedVal:function(t){f.a.pointsHandle(t),f.a.problemHandle(t),this.saveProblem()},markExceedVal:function(e){var i=this;g.a.openPopup({mode:"edit",url:this.drawingUrl,points:e.realityVal||[],maxMarks:e.pointNum,callback:function(n){if(console.log("markExceedVal res =====",n),n){var s;t.each(n,(function(t){t.isExceed=!0,t.isQualified=!1}));var o=e.realityVal.length;(s=e.realityVal).splice.apply(s,[0,o].concat(Object(a.a)(n))),f.a.problemHandle(e),i.saveProblem()}}})},viewHuxing:function(){var e=[];this.drawingUrl?(t.each(this.detail.problemData,(function(i){e=t.clone(i.realityVal)})),g.a.openPopup({mode:"view",url:this.drawingUrl,points:e})):u.a.alert("PC端未设置户型图")},setNeedRepair:function(){var e=this,i=this.detail,a=this.model.place,n=this.masterCheckitem[0],s=Promise.resolve();if(i.needRepair=!i.needRepair,!t.isObject(i.repair.__ob__)){var o=t.clone(i.repair);delete i.repair,this.$set(this.detail,"repair",o)}(i.needRepair&&t.isEmpty(i.repair)||!i.repair.id)&&(s=x.a.getBidSectionCheckItemInfo(i.proj_id,a.section.id,n.id,"实测实量").then((function(t){var e=t.repair[0]||{};Object.assign(i.repair,e)})).then((function(){y.a.addTrack("实测实量-通知整改")}))),s.then((function(){e.$forceUpdate()})).then((function(){e.beforeSelectRepair()}))},isProblemExists:function(){var t=this.detail;return m.a.isProblemExists(t.id).then((function(t){if(!t)return u.a.alert("数据有更新"),w.a.go(-1),Promise.reject({mgs:"问题不存在",code:-1})}))},beforeSelectRepair:function(){var t=this.detail,e=Promise.resolve(!0);return"view"===t.mode&&(e=this.isProblemExists()),e},onSelectRepair:function(){var t=this;if("reedit"!==this.detail.mode&&"待整改"===this.detail.status)return m.a.changeRepair(this.detail).then((function(){return t.reloadDetail()})).then((function(){t.$forceUpdate()}))},changeMode:function(t){var e=this;this.isProblemExists().then((function(){u.a.confirm("今天24:00前可修改，是否现在修改？",{okText:"修改"}).then((function(i){i&&(e.detail.mode=t,e.detail.needRepair=!1,e.$refs.scroller.scrollTop=0)}))}))},checkSubmitData:function(){var e=this.detail;return t.some(e.problemData,(function(t){return""===t.pointNum||null===t.pointNum||void 0===t.pointNum}))?(u.a.alert("请填写实测点数"),!1):!e.needRepair&&"待整改"!==e.status||!t.isEmpty(e.repair)&&e.repair.id?!t.find(e.problemData,(function(e){return t.isEmpty(e.contractor)}))||(u.a.alert("请选择施工单位"),!1):(u.a.alert("请选择整改人"),!1)},setRepair:function(){var e=this,i=t.clone(this.detail);if(!t.isEmpty(i.repair)&&i.repair.id)return m.a.setRepair(i).then((function(){e.reloadDetail()}));u.a.alert("请选择整改人")},reloadDetail:function(){var t=this;Promise.resolve().then((function(){return t.$route.query.problemId?f.a.loadDetailById(t.$route.query.problemId):f.a.loadDetailByIdentity(f.a.tabsIdentity)}))}}}}).call(this,i("391c"))},5033:function(t,e,i){var a=i("5454");(t.exports=i("690e")(!1)).push([t.i,".zjapp .drawing-con[data-v-fba5990a]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-fba5990a]{display:block;height:100%;width:100%;background:url("+a(i("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-fba5990a]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-fba5990a],.zjapp .loading-text[data-v-fba5990a]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-fba5990a]{color:#ff3d3d}",""])},"515e":function(t,e,i){"use strict";var a=i("329b"),n=i("f1e4").a,s=(i("fe9e"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{class:{"content-not-empty":t.content.length},attrs:{mode:"dialog",title:"检查指引","on-close":t.closePopup}},[t.isLoading?t._e():i("div",{staticClass:"check-guide-detail-hd border-bottom"},[i("h2",{staticClass:"check-guide-detail-title pb10"},[t._v(t._s(t.title))])]),!t.isLoading&&t.content.length?i("div",{staticClass:"check-guide-detail-content"},t._l(t.content,(function(e,a){return i("p",{key:a},[e.isImg&&e.src?i("img",{class:{"img-not-ready":!e.ready,error:"rejected"===e.status},attrs:{src:t.getThumbnail(e)},on:{error:function(i){t.imgError(e,a)},click:function(i){t.imgClick(e)}}}):t._e(),e.isImg?t._e():i("span",[t._v("\n          "+t._s(e.val)+"\n        ")])])}))):t._e(),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.content.length,"empty-text":"PC端未设置检查指引"}})],1):t._e()],1)}),[],!1,null,"43042f0d",null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},5290:function(t,e,i){var a=i("32a1");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("1be8c876",a,!0,{sourceMap:!1,shadowMode:!1})},"574c":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .item-textarea{background-color:#fff;padding:5px 15px}.zjapp .item-textarea-content{position:relative}.zjapp .item-textarea .rule,.zjapp .item-textarea textarea{width:100%;min-height:40px;line-height:20px;font-size:16px;padding:0;border:none}.zjapp .item-textarea .rule{position:absolute;top:0;left:0;visibility:hidden;word-break:break-all}.zjapp .item-textarea .counter{text-align:right;margin:0 0 -5px 0;height:15px;line-height:15px;color:#b2b2b2;font-size:12px}",""])},5945:function(t,e,i){var a=i("e94b");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("4a616f84",a,!0,{sourceMap:!1,shadowMode:!1})},"5a71":function(t,e,i){"use strict";var a=i("29be").a,n=i("17cc"),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("item",{class:t.required,attrs:{label:t.title,text:t.value&&t.value.id?t.value.name:"view"===t.mode?"无":"",mode:t.mode,editabled:t.editabled,placeholder:t.required?t.placeholder||"请选择":"选填","form-check":t.formCheck},on:{click:t.openSelect}})}),[],!1,null,null,null);e.a=s.exports},"5afd":function(t,e,i){"use strict";i("88e9")},"5b85":function(t,e,i){var a=i("e2a8");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("45a0f20c",a,!0,{sourceMap:!1,shadowMode:!1})},"5c19":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .content-not-empty[data-v-43042f0d] .layout-content{display:auto;overflow:auto;padding-bottom:100px}.zjapp .check-guide-detail-hd[data-v-43042f0d]{margin-left:30px;padding:25px 30px 5px 0}.zjapp .check-guide-detail-title[data-v-43042f0d]{margin:0;line-height:20px;font-size:18px;color:#111;font-weight:700;word-break:break-all}.zjapp .check-guide-detail-info[data-v-43042f0d]{line-height:20px;font-size:14px;color:#8c8c8c}.zjapp .check-guide-detail-content[data-v-43042f0d]{padding:30px;line-height:30px;color:#333;font-size:16px}.zjapp .check-guide-detail-content p[data-v-43042f0d]{margin-bottom:30px;min-height:1em}.zjapp .check-guide-detail-content img[data-v-43042f0d]{max-width:100%}.zjapp .check-guide-detail-content .img-not-ready[data-v-43042f0d]{width:80px;height:auto}.zjapp .error[data-v-43042f0d]{max-width:50%}",""])},6272:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .number-input[data-v-74068386]{position:relative;display:inline-block;vertical-align:top;width:61px;height:30px;border:1px solid #e5e5e5;border-radius:3px;text-align:center;font-size:14px;color:#333}@media screen and (min-width:320px){.zjapp .number-input[data-v-74068386]{width:50px}}@media screen and (min-width:360px){.zjapp .number-input[data-v-74068386]{width:58px}}@media screen and (min-width:375px){.zjapp .number-input[data-v-74068386]{width:61px}}.zjapp .text[data-v-74068386]{position:relative;display:inline-block;vertical-align:top;width:100%;height:100%;line-height:28px;overflow:hidden}.zjapp .text.disabled[data-v-74068386]{background:#f5f5f5;color:#666}.zjapp .value[data-v-74068386]{position:absolute;top:50%;right:0;margin-top:-14px;min-width:100%;height:28px;color:inherit}.zjapp .placeholder[data-v-74068386],.zjapp .value[data-v-74068386]{line-height:28px;pointer-events:none}.zjapp .placeholder[data-v-74068386]{display:inline-block;vertical-align:top;width:100%;height:100%;color:#b2b2b2}.zjapp .icon-minus[data-v-74068386]{position:absolute;top:-9px;right:-9px;width:18px;height:18px;border-radius:9px;background-color:#ff4546}.zjapp .icon-minus[data-v-74068386]:before{content:"";position:absolute;left:4px;top:8px;width:10px;height:2px;background-color:#fff}.zjapp .icon-minus[data-v-74068386]:after{content:"";position:absolute;left:-5px;top:-5px;width:28px;height:28px;border-radius:9px}.zjapp .number-input-select-all .value-handle[data-v-74068386]{background-color:#cbdaf9}.zjapp .number-input.unqualified[data-v-74068386]{border:1px solid #ffe8e8;background-color:#fff3f3;color:#ff5050}.zjapp .number-input.qualified .text[data-v-74068386]{color:#333}.zjapp .number-input.number-input-focus[data-v-74068386]{border-color:#4275e8;box-shadow:0 0 8px 0 rgba(66,117,232,.37)}.zjapp .number-input.number-input-empty[data-v-74068386]{border-color:#ff3d3d;box-shadow:0 0 8px 0 rgba(255,59,48,.37)}',""])},"63dd":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .header-tabs[data-v-73f776ea]{font-size:0;white-space:nowrap;text-align:center}.zjapp .header-tab[data-v-73f776ea]{display:inline-block;vertical-align:top;padding:10px;height:44px;line-height:24px;font-size:18px;opacity:.65}.zjapp .header-tab[data-v-73f776ea]:first-child{padding-left:0}.zjapp .header-tab[data-v-73f776ea]:last-child{padding-right:0}.zjapp .header-tab.on[data-v-73f776ea]{opacity:1}",""])},6948:function(t,e,i){"use strict";i("2b45"),i("163d");var a=i("329b"),n=i("8c3d").a,s=(i("b55a"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-up"},on:{leave:t.startClose,afterLeave:t.onClose}},[t.show?i("div",{staticClass:"number-keyboard-con",class:{"ios-bezel-less":t.isIOSBezelLess},style:{"z-index":t.zIndex},on:{touchstart:t.keyTouchstart,touchend:t.keyTouchend}},["true-or-false"===t.type?[i("div",{staticClass:"keyboard-row"},[i("div",{staticClass:"row-span-3 keys-row"},[i("div",{staticClass:"keys col color-green",attrs:{direct:"setTure"}},[i("icon",{attrs:{name:"qualified"}}),t._v("\n            合格\n          ")],1),i("div",{staticClass:"keys col color-red",attrs:{direct:"setFalse"}},[i("icon",{attrs:{name:"unqualified"}}),t._v("\n            不合格\n          ")],1)]),i("div",{staticClass:"row-span-1"},[i("div",{staticClass:"keys-row"},[i("div",{staticClass:"keys keys-ok",attrs:{direct:"closeKeyboard"}},[i("icon",{attrs:{name:"keyboard-close"}})],1)]),i("div",{staticClass:"keys-row"},[i("div",{staticClass:"keys keys-delete",attrs:{direct:"delete"}},[i("icon",{attrs:{name:"keyboard-delete"}})],1)])])]),i("div",{staticClass:"keyboard-row"},[i("div",{staticClass:"keys keys-prev",class:{disabled:!t.hasPrev},attrs:{direct:"prev"}},[t._v("\n          上一项\n        ")]),i("div",{staticClass:"keys keys-next",class:{disabled:!t.hasNext},attrs:{direct:"next"}},[t._v("\n          下一项\n        ")])])]:[i("div",{staticClass:"keyboard-row"},[i("div",{staticClass:"keys",attrs:{direct:"1"}},[t._v("1")]),i("div",{staticClass:"keys",attrs:{direct:"2"}},[t._v("2")]),i("div",{staticClass:"keys",attrs:{direct:"3"}},[t._v("3")]),i("div",{staticClass:"keys keys-ok",attrs:{direct:"closeKeyboard"}},[i("icon",{attrs:{name:"keyboard-close"}})],1)]),i("div",{staticClass:"keyboard-row"},[i("div",{staticClass:"keys",attrs:{direct:"4"}},[t._v("4")]),i("div",{staticClass:"keys",attrs:{direct:"5"}},[t._v("5")]),i("div",{staticClass:"keys",attrs:{direct:"6"}},[t._v("6")]),i("div",{staticClass:"keys keys-delete",attrs:{direct:"delete"}},[i("icon",{attrs:{name:"keyboard-delete"}})],1)]),i("div",{staticClass:"keyboard-row"},[i("div",{staticClass:"keys",attrs:{direct:"7"}},[t._v("7")]),i("div",{staticClass:"keys",attrs:{direct:"8"}},[t._v("8")]),i("div",{staticClass:"keys",attrs:{direct:"9"}},[t._v("9")]),i("div",{staticClass:"keys keys-prev",class:{disabled:!t.hasPrev},attrs:{direct:"prev"}},[t._v("\n          上一项\n        ")])]),i("div",{staticClass:"keyboard-row"},[i("div",{staticClass:"keys",class:{disabled:t.isDisabledMinus},attrs:{direct:"-"}},[t._v("-")]),i("div",{staticClass:"keys",attrs:{direct:"0"}},[t._v("0")]),i("div",{staticClass:"keys",class:{disabled:t.isDisabledPoint},attrs:{direct:"."}},[t._v(".")]),i("div",{staticClass:"keys keys-next",class:{disabled:!t.hasNext},attrs:{direct:"next"}},[t._v("\n          下一项\n        ")])])]],2):t._e()])}),[],!1,null,"6337f428",null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));var l=r,c=i("6f9e"),d=i("4360"),h={name:"NumberInput",props:{value:{type:[String,Number]},type:{type:String,default:"all"},decimal:{type:Number,default:2},placeholder:{type:String,default:""},nextEvent:{type:Function},range:{type:Array,default:function(){return[]}},overflowAutoRecover:{type:Boolean,default:!1},required:{type:Boolean},emptyAutoRecover:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},isSetEmptyTip:{type:Boolean,default:!1}},data:function(){return{rawValue:"",isFocusing:!1,isSelectAll:!1,keyboardHeight:d.a.state.app.isIOSBezelLess?266:"true-or-false"===this.type?176:232}},computed:{min:function(){return isNaN(this.range[0])?-1/0:parseFloat(this.range[0])},max:function(){return isNaN(this.range[1])?1/0:parseFloat(this.range[1])}},created:function(){c.a.$on("numberInputBlur",this.setBlur),c.a.$on("numberKeyboardClose",this.setBlur)},beforeDestroy:function(){this.isFocusing&&l.closeKeyboard()},destroyed:function(){c.a.$off("numberInputBlur",this.setBlur),c.a.$off("numberKeyboardClose",this.setBlur)},methods:{hasVal:function(t){return null!=t&&""!==t},openKeyboard:function(){this.disabled||(this.isFocusing?this.isSelectAll=!1:(c.a.$emit("numberInputBlur"),this.setFocus(),l.openKeyboard({inputComponent:this})))},setFocus:function(){this.isFocusing=!0,"true-or-false"!==this.type&&(this.isSelectAll=!0),this.rawValue=this.value,l.$on("keyboardInput",this.input),l.$on("keyboardAssign",this.assign),l.$on("keyboardDelete",this.deleteValue),l.$on("keyboardClear",this.clear),this.$emit("focus")},setBlur:function(){if(this.isFocusing){var t=this.checkValue();this.isFocusing=!1,this.isSelectAll=!1,l.$off("keyboardInput",this.input),l.$off("keyboardAssign",this.assign),l.$off("keyboardDelete",this.deleteValue),l.$off("keyboardClear",this.clear),this.$emit("input",t),this.$emit("blur",t),this.$nextTick((function(){l.calcTab()}))}},input:function(t){var e=this.hasVal(this.value)?this.value.toString():"",i="";this.isSelectAll?(i=t,this.isSelectAll=!1):i=e+t,console.log("newValue =====",i),this.$emit("input",i),l.setKeysStatus(i,this.type)},assign:function(t){this.isSelectAll=!1,this.$emit("input",t),l.setKeysStatus(t,this.type)},deleteValue:function(){var t=this.hasVal(this.value)?this.value.toString():"",e="";this.hasVal(t)&&(e=this.isSelectAll?"":t.substr(0,t.length-1)),this.$emit("input",e),l.setKeysStatus(e,this.type)},clear:function(){this.$emit("input",""),l.setKeysStatus("",this.type)},checkValue:function(){var t=this.hasVal(this.value)?this.value.toString():"";"-"===t&&(t=""),"."===t.substr(-1)&&(t=t.substr(0,t.length-1));var e=t.indexOf(".");return e>0&&(t=parseFloat(t.substring(0,e+this.decimal+1))),t=parseFloat(t),isNaN(t)?this.required&&this.emptyAutoRecover?(t=this.rawValue,this.$emit("onEmpty")):t="":(t<this.min&&(t=this.overflowAutoRecover?this.rawValue:this.min,this.$emit("overflowRange")),t>this.max&&(t=this.overflowAutoRecover?this.rawValue:this.max,this.$emit("overflowRange"))),t}}},p=(i("6abe"),Object(s.a)(h,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"number-input component-number-input",class:{"number-input-focus":t.isFocusing,"number-input-empty":t.isSetEmptyTip&&!t.value&&!t.isFocusing,"number-input-select-all":t.isSelectAll,qualified:"true-or-false"===t.type&&1===t.value,unqualified:"true-or-false"===t.type&&0===t.value}},[i("div",{staticClass:"text",class:{disabled:t.disabled},on:{click:function(e){return e.stopPropagation(),t.openKeyboard(e)}}},[t.hasVal(t.value)?i("span",{staticClass:"value"},[i("span",{staticClass:"value-handle"},[t._v(t._s("true-or-false"===t.type?1===t.value?"合格":"不合格":t.value))])]):i("span",{staticClass:"placeholder"},[t._v("\n      "+t._s(t.placeholder)+"\n    ")])]),t._t("extend")],2)}),[],!1,null,"74068386",null));e.a=p.exports},"6a26":function(t,e,i){var a=i("7cbc");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("2a19b04e",a,!0,{sourceMap:!1,shadowMode:!1})},"6abe":function(t,e,i){"use strict";i("bebe")},"6db4":function(t,e,i){"use strict";var a=i("8fd9").a,n=(i("9a3c"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("scroller",{ref:"scroller"},[i("measure-detail-place-checkitem",{attrs:{detail:t.detail},on:{changeItems:t.changeItems,changePlace:t.changePlace}}),t.hasMasterCheckitem?["edit"===t.detail.mode||"reedit"===t.detail.mode||"redo"===t.detail.mode?i("div",{staticClass:"bg-white"},[i("item",{attrs:{border:"bottom"}},[9!==t.detail.problemData[0].passrate_mode?i("div",{staticClass:"item-font color-theme f14",on:{click:t.viewHuxing}},[t._v("\n          户型图\n          "),i("icon",{staticClass:"ml5",staticStyle:{"font-size":"12px"},attrs:{name:"arrow-right"}})],1):t._e(),9===t.detail.problemData[0].passrate_mode?i("div",{staticClass:"value-input"},[i("span",{staticClass:"value-input-label"},[t._v("强度设计值")]),i("number-input",{staticStyle:{width:"40px"},attrs:{decimal:2,range:[1,99.99]},model:{value:t.detail.problemData[0].intensitySetVal,callback:function(e){t.$set(t.detail.problemData[0],"intensitySetVal",e)},expression:"detail.problemData[0].intensitySetVal"}})],1):t._e(),i("div",{staticClass:"item-con value-input align-r"},[i("span",{staticClass:"value-input-label"},[t._v("测区数")]),i("number-input",{staticStyle:{width:"40px"},attrs:{type:"int positive",range:[1,99]},on:{blur:function(e){t.areaNumChange(t.detail)}},model:{value:t.detail.areaNum,callback:function(e){t.$set(t.detail,"areaNum",e)},expression:"detail.areaNum"}})],1)]),t._l(t.detail.areaData,(function(e,a){return i("div",{key:a,staticClass:"pt15 pl15 pr15"},[i("div",{staticClass:"area-name"},[i("div",{directives:[{name:"show",rawName:"v-show",value:!e.isEditing,expression:"!area.isEditing"}],staticClass:"area-name-text",on:{click:function(i){t.areaNameEdit(e,i)}}},[t._v("\n            "+t._s(e.name)+"\n          ")]),i("div",{directives:[{name:"show",rawName:"v-show",value:e.isEditing,expression:"area.isEditing"}],staticClass:"area-name-input"},[i("input",{directives:[{name:"model",rawName:"v-model",value:e.nameTemp,expression:"area.nameTemp"}],attrs:{type:"text",maxlength:"5"},domProps:{value:e.nameTemp},on:{blur:function(i){t.areaNameUpdate(e,t.detail)},input:function(i){i.target.composing||t.$set(e,"nameTemp",i.target.value)}}})])]),t._l(t.detail.problemData,(function(n,s){return i("div",{key:s},[i("div",{staticClass:"area-info"},[i("div",{staticClass:"checkitem-info"},[5!==n.passrate_mode?i("span",{staticClass:"checkitem-name"},[t._v(t._s(n.checkItem.name))]):t._e(),15===n.passrate_mode||16===n.passrate_mode?i("div",{staticClass:"checkitem-standard checkitem-standard_special",domProps:{innerHTML:t._s(n.standardRange)}}):17===n.passrate_mode||18===n.passrate_mode?i("div",{staticClass:"checkitem-standard checkitem-standard_special"},[t._v("\n                合格标准 "),i("span",{domProps:{innerHTML:t._s(n.standardRange)}})]):i("span",{staticClass:"checkitem-standard"},[t._v(t._s(n.standardRange))])]),t.contains([3,4,10,11,16,17,18],n.passrate_mode)?i("div",{staticClass:"value-input pl10"},[i("span",{staticClass:"value-input-label"},[t._v("设计值")]),i("number-input",{attrs:{decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.setValUpdate(n)},focus:function(e){t.autoInputSetVal(n,n.areaData[a])},input:function(e){t.saveInputSetVal(n,n.areaData[a])}},model:{value:n.areaData[a].setVal,callback:function(e){t.$set(n.areaData[a],"setVal",e)},expression:"problem.areaData[areaIndex].setVal"}})],1):t._e(),t.contains([1,2,3,4,8,10,11,12,16,18],n.passrate_mode)?i("div",{staticClass:"value-input pl10"},[i("span",{staticClass:"value-input-label"},[t._v("点数")]),i("number-input",{staticStyle:{width:"40px"},attrs:{type:"int positive",range:[0,99]},on:{blur:function(e){t.areaPointNumChange(t.detail,n,n.areaData[a])}},model:{value:n.areaData[a].pointNum,callback:function(e){t.$set(n.areaData[a],"pointNum",e)},expression:"problem.areaData[areaIndex].pointNum"}})],1):t._e(),t.contains([9],n.passrate_mode)?i("div",{staticClass:"value-input pl10"},[i("span",{staticClass:"value-input-label"},[t._v("碳化深度")]),i("div",{staticClass:"value-carbon",on:{click:function(e){t.carbonOpen(n,n.areaData[a])}}},[t._v("\n                "+t._s(n.areaData[a].carbon||0===n.areaData[a].carbon?n.areaData[a].carbon.toFixed(1):"")+"\n              ")])]):t._e()]),t.contains([1,2,3,4,7,8,10,11,12,13,16,18],n.passrate_mode)?i("div",{staticClass:"number-input-group"},t._l(t.pointFilter(n.realityVal,{area:e.name}),(function(e,s){return i("number-input",{key:s,class:{"color-red":e.isExceed},attrs:{type:8===n.passrate_mode?"true-or-false":"all",decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.realityValUpdate(n)},focus:function(e){t.autoInputSetVal(n,n.areaData[a])}},model:{value:e.val,callback:function(i){t.$set(e,"val",i)},expression:"point.val"}},[e.showMark?[e.hasMark?i("div",{staticClass:"huxing-view",attrs:{slot:"extend"},on:{click:function(i){t.markHuxing(t.detail,e)}},slot:"extend"},[t._v("\n                  图\n                ")]):i("div",{staticClass:"huxing-mark",attrs:{slot:"extend"},on:{click:function(i){i.stopPropagation(),t.markHuxing(t.detail,e)}},slot:"extend"},[i("i",{staticClass:"arrow"}),t._v("标点位\n                ")])]:t._e()],2)}))):t._e(),t.contains([5,6,14,15],n.passrate_mode)?i("div",{staticClass:"pt15 pb10"},t._l(n.measure_item,(function(s,o){return i("div",{key:o,staticClass:"item-input-group",class:{mt10:o}},[i("div",{staticClass:"label-input-group"},[t._v(t._s(s))]),t._l(t.pointFilter(n.realityVal,{area:e.name,label:s}),(function(e,s){return i("number-input",{key:s,class:{"color-red":e.isExceed,ml10:s},attrs:{decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.realityValUpdate(n)},focus:function(e){t.autoInputSetVal(n,n.areaData[a])}},model:{value:e.val,callback:function(i){t.$set(e,"val",i)},expression:"point.val"}},[e.showMark?[e.hasMark?i("div",{staticClass:"huxing-view",attrs:{slot:"extend"},on:{click:function(i){t.markHuxing(t.detail,e)}},slot:"extend"},[t._v("\n                    图\n                  ")]):i("div",{staticClass:"huxing-mark",attrs:{slot:"extend"},on:{click:function(i){i.stopPropagation(),t.markHuxing(t.detail,e)}},slot:"extend"},[i("i",{staticClass:"arrow"}),t._v("标点位\n                  ")])]:t._e()],2)})),i("div",{staticClass:"label-input-group label-input-group-flex"},[t._v("设计值")]),t._l(t.pointFilter(n.realityVal,{area:e.name,label:s}),(function(e,s){return[0===s?i("number-input",{key:o+"-"+s,attrs:{decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.setValUpdate(n)},focus:function(e){t.autoInputSetVal(n,n.areaData[a])}},model:{value:e.setVal,callback:function(i){t.$set(e,"setVal",i)},expression:"setValItem.setVal"}}):t._e()]}))],2)}))):t._e(),t.contains([17],n.passrate_mode)?i("div",{staticClass:"number-input-group passrate-slope"},[i("div",[i("span",{staticClass:"label-input-group"},[t._v("高度")]),t._l(t.pointFilter(n.realityVal,{area:e.name}).slice(0,2),(function(e,s){return i("number-input",{key:s,class:{"color-red":e.isExceed},attrs:{type:8===n.passrate_mode?"true-or-false":"all",decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.realityValUpdate(n)},focus:function(e){t.autoInputSetVal(n,n.areaData[a])}},model:{value:e.val,callback:function(i){t.$set(e,"val",i)},expression:"point.val"}},[e.showMark?[e.hasMark?i("div",{staticClass:"huxing-view",attrs:{slot:"extend"},on:{click:function(i){t.markHuxing(t.detail,e)}},slot:"extend"},[t._v("\n                    图\n                  ")]):i("div",{staticClass:"huxing-mark",attrs:{slot:"extend"},on:{click:function(i){i.stopPropagation(),t.markHuxing(t.detail,e)}},slot:"extend"},[i("i",{staticClass:"arrow"}),t._v("标点位\n                  ")])]:t._e()],2)}))],2),i("div",[i("span",{staticClass:"label-input-group"},[t._v("水平距离")]),t._l(t.pointFilter(n.realityVal,{area:e.name}).slice(2,3),(function(e,s){return i("number-input",{key:s,class:{"color-red":e.isExceed},attrs:{type:8===n.passrate_mode?"true-or-false":"all",decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.realityValUpdate(n)},focus:function(e){t.autoInputSetVal(n,n.areaData[a])}},model:{value:e.val,callback:function(i){t.$set(e,"val",i)},expression:"point.val"}},[e.showMark?[e.hasMark?i("div",{staticClass:"huxing-view",attrs:{slot:"extend"},on:{click:function(i){t.markHuxing(t.detail,e)}},slot:"extend"},[t._v("\n                    图\n                  ")]):i("div",{staticClass:"huxing-mark",attrs:{slot:"extend"},on:{click:function(i){i.stopPropagation(),t.markHuxing(t.detail,e)}},slot:"extend"},[i("i",{staticClass:"arrow"}),t._v("标点位\n                  ")])]:t._e()],2)}))],2)]):t._e(),t.contains([9],n.passrate_mode)?i("div",{staticClass:"number-input-group"},t._l(t.pointFilter(n.realityVal,{area:e.name}),(function(e,a){return i("number-input",{key:a,attrs:{decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange},on:{blur:function(e){t.realityValUpdate(n)}},model:{value:e.val,callback:function(i){t.$set(e,"val",i)},expression:"point.val"}})}))):t._e()])}))],2)}))],2):t._e(),"edit"===t.detail.mode||"redo"===t.detail.mode?i("div",{staticClass:"mt10"},[i("item",{staticClass:"p15"},[i("item-img-list",{attrs:{maxlength:50,"track-text":"实测实量"},on:{callback:t.saveProblem,remove:t.saveProblem},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1),i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},on:{blur:t.saveProblem},model:{value:t.detail.remark,callback:function(e){t.$set(t.detail,"remark",e)},expression:"detail.remark"}}),i("div",{staticClass:"mb10"},[i("p",{staticClass:"c-label"},[t._v("请选择施工单位")]),t._l(t.detail.problemData,(function(e){return i("single-select",{key:e.checkItem.id,attrs:{title:e.checkItem.name,"page-title":"选择施工单位",placeholder:"请选择施工单位",options:t.model.contractors},on:{onSelect:t.saveProblem},model:{value:e.contractor,callback:function(i){t.$set(e,"contractor",i)},expression:"problem.contractor"}})}))],2),i("user-select",{attrs:{title:"抄送人",multi:!0,options:t.model.ccOptions,required:!0,memory:!0},on:{onSelect:t.changeCC},model:{value:t.detail.cc,callback:function(e){t.$set(t.detail,"cc",e)},expression:"detail.cc"}})],1):t._e(),"view"===t.detail.mode?[i("problem-detail-header",{staticClass:"bg-white pr0",attrs:{status:t.detail.status}},[i("template",{slot:"operat"},[t.detail.allowReedit&&"view"===t.detail.mode?i("div",{staticClass:"btn-reedit",on:{click:function(e){t.changeMode("reedit")}}},[t._v("\n            修改\n            "),i("icon",{attrs:{name:"edit"}})],1):t._e(),9!==t.detail.problemData[0].passrate_mode?i("div",{staticClass:"btn-drawing",on:{click:function(e){t.viewHuxing(t.detail)}}},[t._v("\n            户型图\n            "),i("icon",{attrs:{name:"arrow-right"}})],1):t._e()])],2),i("div",{staticClass:"detail-list-hd border-bottom"},[t.detail.problemData.length>1?i("div",{staticClass:"list-hd-toggle",on:{click:function(e){t.toggleProblemDataAll(t.detail)}}},[t._v("\n          "+t._s(t.hasProblemDataClose?"全展开":"全收起")+"\n        ")]):t._e(),1===t.detail.problemData.length?i("div",{staticClass:"list-hd-title"},[t._v("\n          检查项\n        ")]):t._e(),i("div",{staticClass:"list-hd-num"},[t._v("计算点数")]),9!==t.detail.problemData[0].passrate_mode?i("div",{staticClass:"list-hd-passrate"},[t._v("\n          合格率\n        ")]):t._e(),9===t.detail.problemData[0].passrate_mode?i("div",{staticClass:"list-hd-passrate align-c ws-nowrap",staticStyle:{width:"72px"}},[t._v("\n          强度值\n        ")]):t._e(),9===t.detail.problemData[0].passrate_mode?i("div",{staticClass:"list-hd-passrate ws-nowrap",staticStyle:{width:"100px"}},[t._v("\n          强度百分比\n        ")]):t._e()]),i("div",{staticClass:"detail-list"},t._l(t.detail.problemData,(function(e,a){return i("div",{key:a,staticClass:"border-bottom"},[i("div",{staticClass:"detail-item-hd",on:{click:function(i){t.toggleProblemData(e)}}},[t.detail.problemData.length>1?i("i",{staticClass:"detail-item-arrow",class:{"item-arrow-right":!e.isOpen,"item-arrow-down":e.isOpen}}):t._e(),i("div",{staticClass:"detail-item-name",class:{pl15:1===t.detail.problemData.length}},[t._v("\n              "+t._s(e.checkItem.name)+"\n            ")]),i("div",{staticClass:"detail-item-num"},[t._v(t._s(e.pointNum))]),9===t.detail.problemData[0].passrate_mode?i("div",{staticClass:"detail-item-passrate align-c",staticStyle:{width:"72px"}},[t._v("\n              "+t._s(e.intensityVal)+"\n            ")]):t._e(),i("div",{staticClass:"detail-item-passrate",class:{"color-red":e.passrate<.9}},[t._v("\n              "+t._s(t._f("percent")(e.passrate,2))+"\n            ")])]),e.isOpen?i("div",{staticClass:"detail-item-bd"},[9===e.passrate_mode?i("div",{staticClass:"detail-line"},[i("div",{staticClass:"detail-line-label",class:{"detail-line-label-single":1===t.detail.problemData.length},staticStyle:{width:"115px"}},[t._v("\n                强度设计值\n              ")]),i("div",{staticClass:"detail-line-con"},[t._v(t._s(e.intensitySetVal))])]):i("div",{staticClass:"detail-line"},[i("div",{staticClass:"detail-line-label",class:{"detail-line-label-single":1===t.detail.problemData.length}},[t._v("\n                合格标准\n              ")]),15===e.passrate_mode||16===e.passrate_mode||17===e.passrate_mode||18===e.passrate_mode?i("div",{staticClass:"detail-line-con",domProps:{innerHTML:t._s(e.standardRange)}}):i("div",{staticClass:"detail-line-con"},[t._v(t._s(e.standardRange))])]),i("div",{staticClass:"detail-line"},[i("div",{staticClass:"detail-line-label",class:{"detail-line-label-single":1===t.detail.problemData.length}},[t._v("\n                实测值\n              ")]),5===e.passrate_mode||6===e.passrate_mode||14===e.passrate_mode||15===e.passrate_mode?i("div",{staticClass:"detail-line-con"},t._l(e.areaData,(function(a,n){return i("div",{key:n,style:{"margin-top":(n?8:0)+"px"}},[i("p",[i("span",{staticClass:"detail-line-area"},[t._v(t._s(a.name))])]),t._l(e.measure_item,(function(n,s){return[t.hasPoints(e.realityVal,{area:a.name,label:n}).length?i("div",{key:s,staticClass:"view-points-line",style:{"margin-top":"4px"}},[i("div",{staticClass:"view-points-left"},[i("span",[t._v(t._s(n)+":")]),t._l(t.pointFilter(e.realityVal,{area:a.name,label:n}),(function(e,a){return[a?[t._v(" , ")]:t._e(),i("span",{key:a,class:{"color-red":e.isExceed}},[t._v(t._s(e.val))])]}))],2),i("div",{staticClass:"view-points-right"},[t._v("\n                        设计值\n                        "+t._s(t.pointFilter(e.realityVal,{area:a.name,label:n})[0].setVal)+"\n                      ")])]):t._e()]}))],2)}))):17===e.passrate_mode?i("div",{staticClass:"detail-line-con"},t._l(t.getAreaData(e.realityVal),(function(a,n){return i("div",{key:n,style:{"margin-top":(n?8:0)+"px"}},[i("p",[i("span",{staticClass:"detail-line-area",style:{"margin-right":"10px"}},[t._v(t._s(a.name))]),i("span",{staticClass:"detail-line-setval"},[t._v("设计值\n                      "+t._s(t.pointFilter(e.realityVal,{area:a.name})[0].setVal))])]),i("div",{staticClass:"view-points-line",style:{"margin-top":"4px"}},[i("div",{staticClass:"view-points-left"},[i("span",{staticClass:"color-text f12",style:{"margin-right":"30px"}},[t._v("高度\n                      ")]),t._l(t.pointFilter(e.realityVal,{area:a.name}).slice(0,2),(function(e,a){return[a?[t._v(" , ")]:t._e(),i("span",{key:a,class:{"color-red":e.isExceed}},[t._v(t._s(e.val))])]}))],2)]),i("div",{staticClass:"view-points-line",style:{"margin-top":"4px"}},[i("div",{staticClass:"view-points-left"},[i("span",{staticClass:"color-text f12",style:{"margin-right":"10px"}},[t._v("水平距离")]),t._l(t.pointFilter(e.realityVal,{area:a.name}).slice(2,3),(function(e,a){return[a?[t._v(" , ")]:t._e(),i("span",{key:a,class:{"color-red":e.isExceed}},[t._v(t._s(e.val))])]}))],2)])])}))):i("div",{staticClass:"detail-line-con"},t._l(t.getAreaData(e.realityVal),(function(a,n){return i("div",{key:n,style:{"margin-top":(n?8:0)+"px"}},[i("p",[i("span",{staticClass:"detail-line-area"},[t._v(t._s(a.name))]),3===e.passrate_mode||4===e.passrate_mode||10===e.passrate_mode||11===e.passrate_mode||16===e.passrate_mode||18===e.passrate_mode?i("span",{staticClass:"detail-line-setval"},[t._v("设计值\n                      "+t._s(t.pointFilter(e.realityVal,{area:a.name})[0].setVal))]):t._e(),t.contains([9],e.passrate_mode)?i("span",{staticClass:"detail-line-setval"},[t._v("碳化深度\n                      "),t._v("\n                      "+t._s((t.pointFilter(e.realityVal,{area:a.name})[0].carbon||0).toFixed(1)))]):t._e()]),i("p",{staticStyle:{"margin-top":"4px"}},[t._l(t.pointFilter(e.realityVal,{area:a.name}),(function(a,n){return[n?[t._v(" , ")]:t._e(),i("span",{key:n,class:{"color-red":a.isExceed}},[t._v("\n                        "+t._s(8===e.passrate_mode?1===a.val?"合格":"不合格":a.val)+"\n                      ")])]})),t.pointFilter(e.realityVal,{area:a.name}).length?t._e():i("span",[t._v("无")])],2),t.contains([9],e.passrate_mode)?i("div",{staticClass:"detail-line-carbon-value"},[i("span",[t._v("平均值\n                      "+t._s(t.pointFilter(e.realityVal,{area:a.name})[0].avg))]),i("span",[t._v("强度值\n                      "+t._s(t.pointFilter(e.realityVal,{area:a.name})[0].fck))])]):t._e()])})))])]):t._e()])}))),i("div",{staticClass:"mt10"},[t.detail.remark||t.detail.img.length?i("item",{attrs:{label:"补充说明"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.detail.remark?i("div",{staticClass:"item-font"},[t._v(t._s(t.detail.remark))]):t._e(),i("item-img-list",{attrs:{editabled:!1},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1)]):t._e(),t.hasContractor?i("item",{attrs:{label:"施工单位"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},t._l(t.detail.problemData,(function(e){return i("p",{key:e.id},[t._v("\n              "+t._s(e.contractor?e.contractor.name:"")+"\n            ")])})))]):t._e(),i("user-select",{attrs:{title:"检查人",mode:"view",editabled:!1},model:{value:t.detail.regist,callback:function(e){t.$set(t.detail,"regist",e)},expression:"detail.regist"}}),i("item",{attrs:{label:"检查时间",text:t.formatDate(t.detail.regist_date)}}),(t.detail.repair_remark||t.detail.repair_image_file&&t.detail.repair_image_file.length)&&"待整改"!==t.detail.status?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.detail.repair_remark?i("div",{staticClass:"item-font"},[t._v(t._s(t.detail.repair_remark))]):t._e(),i("item-img-list",{attrs:{editabled:!1},model:{value:t.detail.repair_image_file,callback:function(e){t.$set(t.detail,"repair_image_file",e)},expression:"detail.repair_image_file"}})],1)]):t._e(),!t.detail.repair.id||"待整改"!==t.detail.status&&"已整改"!==t.detail.status?t._e():i("user-select",{attrs:{title:"整改人",mode:"view",options:t.model.repairOptions,date:"已整改"===t.detail.status?t.formatDate(t.detail.repair_date):"",editabled:(t.detail.isChecker||t.detail.isRepair)&&"待整改"===t.detail.status,"before-select":t.beforeSelectRepair},on:{onSelect:t.onSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}),t.detail.isRepair&&"待整改"===t.detail.status?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("item-img-list",{attrs:{maxlength:50,"track-text":"实测实量"},model:{value:t.detail.repair_image_file,callback:function(e){t.$set(t.detail,"repair_image_file",e)},expression:"detail.repair_image_file"}})],1)]):t._e(),t.detail.isRepair&&"待整改"===t.detail.status?i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:t.detail.repair_remark,callback:function(e){t.$set(t.detail,"repair_remark",e)},expression:"detail.repair_remark"}}):t._e(),i("user-select",{attrs:{title:"抄送人",mode:"view",multi:!0,options:t.model.ccOptions,editabled:"已整改"!==t.detail.status},on:{onSelect:t.changeCC},model:{value:t.detail.cc,callback:function(e){t.$set(t.detail,"cc",e)},expression:"detail.cc"}})],1)]:t._e(),"reedit"===t.detail.mode?[t.detail.remark||t.detail.img.length?i("item",{staticClass:"mt10",attrs:{label:"补充说明"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.detail.remark?i("div",{staticClass:"item-font"},[t._v(t._s(t.detail.remark))]):t._e(),i("item-img-list",{attrs:{editabled:!1,"track-text":"实测实量"},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1)]):t._e(),i("div",{staticClass:"mb10"},[i("p",{staticClass:"c-label"},[t._v("请选择施工单位")]),t._l(t.detail.problemData,(function(e){return i("single-select",{key:e.checkItem.id,attrs:{title:e.checkItem.name,"page-title":"选择施工单位",placeholder:"请选择施工单位",options:t.model.contractors,mode:"view"},model:{value:e.contractor,callback:function(i){t.$set(e,"contractor",i)},expression:"problem.contractor"}})}))],2)]:t._e(),"检查完毕"===t.detail.status&&"reedit"!==t.detail.mode&&"redo"!==t.detail.mode?[i("div",{staticClass:"need-repair",on:{click:t.setNeedRepair}},[i("icon",{attrs:{name:t.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),t._v("通知整改\n      ")],1),t.detail.needRepair?i("user-select",{attrs:{title:"整改人",options:t.model.repairOptions,memory:!0},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e(),t.detail.needRepair?i("app-button-group",{staticClass:"pt10"},[i("app-button",{attrs:{name:"通知整改"},on:{click:t.setRepair}})],1):t._e()]:t._e(),t.detail.id&&"检查中"===t.detail.status?i("app-button-group",[i("app-button",{attrs:{type:"text",name:"删除此草稿"},on:{click:t.delProblem}})],1):t._e(),"检查中"===t.detail.status||"view"!==t.detail.mode||t.allowMeasureReinspect||t.model.currentUserBatchId!==t.detail.batch_id?t._e():i("app-button-group",[i("app-button",{attrs:{type:"operate",name:"再测一次"},on:{click:t.setRedo}})],1)]:t._e(),i("loading-status",{attrs:{"is-loading":!1,"is-empty":!t.hasMasterCheckitem,"empty-text":"请选择检查项"}}),t.hasCarbonDialog?i("measure-carbon-dialog",{attrs:{value:t.carbonData,show:t.carbonShow},on:{close:t.carbonClose,select:t.carbonSelect}}):t._e()],2)}),[],!1,null,"ffcbe3f2",null);e.a=s.exports},7434:function(t,e,i){var a=i("0cb6");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("f6a1180a",a,!0,{sourceMap:!1,shadowMode:!1})},"76c6":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e"),i("cc57");var a,n=i("28f8"),s=i("774b"),o=i("07d2"),r=i("6948"),l=i("e223"),c=i("e89f"),d=i("e2a7"),h=i("4360");function p(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function u(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?p(Object(i),!0).forEach((function(e){Object(n.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):p(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"DrawingWithPoint",components:{Scroller:s.a,Item:o.a,NumberInput:r.a,Drawing:l.a},mixins:[c.a],data:function(){return{show:!1,isLoading:!0,points:[],maxMarks:1/0,layoutPointsData:[],checkitemData:[],areaData:[],mode:"view",scrollPaddingBottom:0,lightIndex:""}},computed:{isNumberInputOpen:function(){return h.a.state.global.isNumberInputOpen},drawingHeight:function(){return document.documentElement.clientWidth},valueDecimal:function(){return h.a.state.measure.valueDecimal},valueRange:function(){return h.a.state.measure.valueRange}},watch:{isNumberInputOpen:function(t){this.scrollPaddingBottom=t?232:0}},methods:{openPopup:function(e){var i=this;if(this.show=!0,this.mode=e.mode,this.url=e.url,this.points=t.map(e.points,(function(t,e){return u(u({},t),{},{index:e})})),this.maxMarks=isNaN(e.maxMarks)?1/0:e.maxMarks,a=e.callback,this.pointLight(),this.layoutPointsData=[],t.isEmpty(e.itemData)||1===e.itemData.length){var n={itemName:"",areas:[],passrateMode:e.itemData&&e.itemData[0]&&e.itemData[0].passrate_mode||""};if(t.isEmpty(e.areaData)){var s=t.clone(this.points);n.areas.push({areaName:"",points:s})}else t.each(e.areaData,(function(e){var a=t.filter(i.points,{area:e.name});n.areas.push({areaName:e.name,points:a})}));this.layoutPointsData.push(n)}else t.each(e.itemData,(function(a){var n=a.item_name?a.item_name:a.name,s={itemName:n,areas:[],passrateMode:a.passrate_mode||""};if(t.isEmpty(e.areaData)){var o=t.filter(i.points,{itemName:n});s.areas.push({areaName:"",points:o})}else t.each(e.areaData,(function(e){var a=t.filter(i.points,{itemName:n,area:e.name});s.areas.push({areaName:e.name,points:a})}));i.layoutPointsData.push(s)}));return this.$emit("open"),this},closePopup:function(){this.show=!1,this.$emit("close")},pointLight:function(e){this.lightIndex=e,this.points=t.map(this.points,(function(t,i){var a=u({},t);return e===i?a.color="#4275e8":a.isQualified?a.color="#14ff56":a.color="#ff4546",a}))},clickPointEle:function(t){this.pointLight(t.index)},removeExceedPoint:function(t){var e=this.points.indexOf(t);this.points.splice(e,1)},inputFocus:function(t){var e=this;this.$nextTick((function(){var i=e.$refs["exceed-point-input"][t];e.pointLight(t),e.$refs.scroller.scrollToEle(i)}))},inputBlur:function(){this.pointLight()},onclick:function(t){var e=this;if("view"===this.mode){if(t.clickPoint&&"points"===t.clickPoint.tag){var i=t.clickPoint.index;this.pointLight(i)}}else{if(this.points.length>=this.maxMarks)return void d.a.alert("爆点个数不能大于实测点数");this.points.push({x:t.x,y:t.y}),this.$nextTick((function(){var t=e.$refs["exceed-point-input"],i=t&&t[t.length-1];i&&i.openKeyboard()}))}},confirm:function(){var e=[];t.each(this.points,(function(t){""!==t.val&&null!==t.val&&void 0!==t.val&&(delete t.color,e.push(t))})),a&&a(e),this.closePopup()}}}}).call(this,i("391c"))},"7c79":function(t,e,i){"use strict";var a=i("316a").a,n=(i("339b"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{ref:"select-con",staticClass:"select-con",class:{"select-disabled":!t.editabled||t.isLoading},on:{click:t.openDialog}},[i("div",{staticClass:"select-hd"},[t._v(t._s(t.isLoading?"...":t.hdText))]),i("div",{staticClass:"select-bd"},[t._v(t._s(t.isLoading?"...":t.bdText))]),t.editabled?i("icon",{staticClass:"select-arrow",attrs:{name:t.isOpen?"arrow-up":"arrow-down"}}):t._e()],1)}),[],!1,null,"43c15cbc",null);e.a=s.exports},"7cbc":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .icon-plus[data-v-78eb219e]{position:relative;display:inline-block;width:30px;height:30px;border:1.5px solid #4275e8;border-radius:15px}.zjapp .icon-plus[data-v-78eb219e]:before{left:4px;top:12.75px;width:20px;height:1.5px}.zjapp .icon-plus[data-v-78eb219e]:after,.zjapp .icon-plus[data-v-78eb219e]:before{content:"";position:absolute;background-color:#4275e8}.zjapp .icon-plus[data-v-78eb219e]:after{left:12.75px;top:4px;width:1.5px;height:20px}.zjapp .btn-modify[data-v-78eb219e]{display:inline-block;vertical-align:top;height:25px;line-height:25px;padding:0 8px;border:1px solid #c8d2f6;background-color:#ebf1ff;color:#7a95d1;font-size:14px;white-space:nowrap;border-radius:2px}.zjapp .btn-modify .icon-arrow-right[data-v-78eb219e]{font-size:12px}.zjapp .need-repair[data-v-78eb219e]{height:34px;line-height:18px;padding:8px 0;font-size:16px;color:#333}.zjapp .need-repair .icon[data-v-78eb219e]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .need-repair-bottom[data-v-78eb219e]{height:46px;line-height:18px;padding:14px 15px;margin-top:10px;font-size:16px;color:#666}.zjapp .need-repair-bottom .icon[data-v-78eb219e]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .c-label[data-v-78eb219e]{color:#999;font-size:12px;line-height:17px;padding:14px 15px 8px;background-color:#f4f4f4}',""])},8004:function(t,e,i){"use strict";(function(t){var a=i("4c09"),n=i("86e8"),s=i("7c79"),o=i("a37e"),r=i("7798");e.a={name:"MeasureDetailPlaceCheckitem",components:{DropSelectPlace:n.a,DropSelectCheckitem:s.a},props:{detail:{type:Object,default:function(){}}},data:function(){return{model:o.a,checkitemSelectLoading:!1}},computed:{projId:function(){return o.a.place.project.id||""},batchId:function(){return this.detail&&this.detail.batch_id},place:function(){return this.$store.state.measure.detailPlace},checkitems:function(){return this.detail&&this.detail.checkItems||[]},masterCheckitem:function(){return this.$store.state.measure.detailMasterCheckitem},checkitemOptions:function(){return o.a.measureCheckItems},processMode:function(){var e=t.isEmpty(this.masterCheckitem)?"":this.masterCheckitem[1];return e&&e.process_mode?e.process_mode:""},mode:function(){return this.detail&&"检查中"===this.detail.status?"edit":"view"},multi:function(){return 2===this.$store.state.measure.entryRequirements&&(2===this.detail.entry_requirements||"检查中"!==this.detail.status)},editabled:function(){return this.detail&&this.model.currentUserBatchId===this.detail.batch_id&&!this.model.problemId&&!this.model.readonly&&"redo"!==this.detail.mode}},methods:{onChangePlace:function(t){var e=this,i=t.section?t.section.id:"",n=t.building?t.building.id:"",s=t.unit?t.unit.id:"",l=t.floor?t.floor.id:"",c=t.room?t.room.id:"",d=(o.a.firstCheckitem[1]||{}).id||"",h=i!==this.$store.state.measure.detailPlace.section.id,p=n!==this.$store.state.measure.detailPlace.building.id;this.$store.dispatch("measure/setIndexPlace",[t.section,t.building,t.unit]),this.$store.dispatch("measure/setDetailPlace",t),this.$emit("changePlace",t),Promise.resolve().then((function(){return d?r.a.getMeasureCheckitemRealProcessMode(n,d):""})).then((function(t){if(!t||c&&1!==t||!c&&1===t)return e.$store.dispatch("measure/setDetailMasterCheckitem",[]),e.detail.checkItems=[],e.checkitemSelectLoading=!0,Promise.resolve().then((function(){if(p)return r.a.getAllMeasureBuildingCheckItems(i,n).then((function(t){var e,i=o.a.measureCheckItems.length;(e=o.a.measureCheckItems).splice.apply(e,[0,i].concat(Object(a.a)(t)))}))})).then((function(){if(h)return r.a.getBatchByIdentity(e.projId,i,o.a.tabsIdentity).then((function(t){e.detail.batch_id=t.id}))})).then((function(){e.checkitemSelectLoading=!1,e.$nextTick((function(){e.$refs["drop-select-checkitem"].openDialog()}))}));o.a.init(c,n,s,l,d).catch((function(t){Popup.alert(t,2e3),e.$router.go(-1)}))}))},onChangeCheckitem:function(e){var i=t.map(e,(function(t){return t.id})),a="检查中"===this.detail.status&&2===this.detail.entry_requirements&&!t.isEmpty(t.intersection(t.map(this.detail.checkItems,"id"),i)),n=[],s=e[0];t.each(o.a.measureCheckItems,(function(e){t.each(e.children,(function(t){t.id===s.id&&(n.push(e),n.push(t))}))})),this.$store.dispatch("measure/setIndexCheckitem",n),this.$emit("changeItems",n,i),this.$route.params.problemId?o.a.loadDetailById(this.$route.params.problemId):o.a.loadDetailByIdentity(o.a.tabsIdentity,i,a)}}}}).call(this,i("391c"))},"801f":function(t,e,i){"use strict";(function(t){i("163d");var a=i("fdef"),n=i("3122"),o=i("4ad6"),r=i("3bd5"),l=i("1b7e");e.a={name:"MeasureDrawing3",components:{},props:{detail:{type:Object,default:function(){}},width:{type:Number,default:document.documentElement.clientWidth},height:{type:Number,default:document.documentElement.clientWidth}},data:function(){return{drawing:null,isDownloading:!1,error:"",img:null,src:"",folder:"house-image"}},watch:{detail:function(t){t&&this.$nextTick(this.getImage)}},mounted:function(){this.getImage()},beforeDestroy:function(){this.drawing&&this.drawing.destroy&&this.drawing.destroy()},methods:{getImage:function(){var e=this,i=this.detail.drawing_file&&this.detail.drawing_file[0]?this.detail.drawing_file[0].url:"";if(!this.isDownloading){if(console.log("getImage -----------",i),this.isDownloading=!0,i){var a=r.a.getUser().user_id,c=s.strRightBack(s.replaceAll(i,"\\?x-oss-process=image\\/resize,","@"),"/");if(!c)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var d=[o.a.appImagePath()+a+"/house-image/"+c,o.a.appImagePath()+a+"/drawing/"+c,o.a.appImagePath()+a+"/images/"+c,o.a.appDataPath()+a+"/house-image/"+c,o.a.appDataPath()+a+"/drawing/"+c,o.a.appDataPath()+a+"/images/"+c],h=Promise.resolve();return"dev"===APP_ENV?h=h.then((function(){return i})):t.each(d,(function(t){h=h.then((function(e){return e||o.a.isFileExists(t).then((function(e){if(e)return n.a._fixPath(t)}))}))})),h.then((function(t){if(console.log("获取图片 src =========",t),!t)return l.a.getHasNetwork().then((function(t){return t?n.a.download(i,!0,e.folder).then((function(t){e.src=t})):Promise.reject("当前无网络")}));e.src=t})).then((function(){console.log("this.src ======",e.src),e.src?(e.img=new Image,e.img.onload=function(){e.img.complete?(console.log("图片加载成功 ---------"),e.isDownloading=!1,e.$nextTick(e.init)):(e.error="加载图片失败",e.isDownloading=!1)},e.img.onerror=function(){e.error="加载图片失败",e.isDownloading=!1},e.img.src=e.src):(e.error="下载户型图失败",e.isDownloading=!1)})).catch((function(i){e.error=t.isString(i)?i:"下载户型图失败",e.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1}},init:function(){var t=this;this.isDownloading||(this.drawing&&this.drawing.reset(),this.drawing=a.a.init({canvas:this.$refs["drawing-canvas"],img:this.img,data:this.detail,height:this.height,onChange:function(){"edit"===t.detail.mode&&t.$emit("onChange")},onClickPoint:function(e){t.$emit("onClickPoint",e)}}))},update:function(t){this.drawing&&this.drawing.setDetailData(t)},inputBlur:function(){this.drawing&&this.drawing.inputBlur()}}}}).call(this,i("391c"))},"81f2":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .main[data-v-2cac8864]{position:fixed;width:100%;bottom:0}.zjapp .arrow[data-v-2cac8864]{position:absolute;top:-7px;right:18px;width:0;height:0;border-bottom:7px solid #fff;border-right:7px solid transparent;border-left:7px solid transparent}.zjapp .content[data-v-2cac8864]{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-2cac8864]{display:flex;flex-direction:column;background-color:#fff;overflow:auto}.zjapp .box-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1}.zjapp .detail-hd[data-v-2cac8864]{display:flex;padding:6px 15px}.zjapp .detail-arrow-right[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-right[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:12px;border:5px solid transparent;border-left:5px solid #c8c8c8}.zjapp .detail-arrow-down[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-down[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:15px;border:5px solid transparent;border-top:5px solid #c8c8c8}.zjapp .detail-title[data-v-2cac8864]{flex:1;line-height:34px;color:#111;font-size:16px}.zjapp .detail-bd[data-v-2cac8864]{padding:8px 15px 8px 35px;background-color:#fafafa}.zjapp .text-line[data-v-2cac8864]{font-size:14px;color:#666;line-height:30px;margin-bottom:30px}.zjapp .detail-hd-single[data-v-2cac8864]{padding:6px 0;margin:0 15px}.zjapp .detail-bd-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1;padding:8px 15px;background-color:#fff}',""])},"83d9":function(t,e,i){"use strict";i("af92")},"86e8":function(t,e,i){"use strict";var a=i("1985").a,n=(i("5afd"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{ref:"select-con",staticClass:"select-con",class:{"select-disabled":!t.editabled||t.isLoading},on:{click:t.openDialog}},[i("div",{staticClass:"select-hd"},[t._v(t._s(t.isLoading?"...":t.hdText))]),i("div",{staticClass:"select-bd"},[t._v(t._s(t.isLoading?"...":t.bdText))]),t.editabled?i("icon",{staticClass:"select-arrow",attrs:{name:t.isOpen?"arrow-up":"arrow-down"}}):t._e()],1)}),[],!1,null,"dbd87ef2",null);e.a=s.exports},"88e9":function(t,e,i){var a=i("d871");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("3530e114",a,!0,{sourceMap:!1,shadowMode:!1})},8968:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .value-input[data-v-ffcbe3f2]{font-size:0;line-height:0;white-space:nowrap}.zjapp .value-input-label[data-v-ffcbe3f2]{line-height:30px;font-size:14px;color:#999;margin-right:8px}.zjapp .area-name-text[data-v-ffcbe3f2]{display:inline-block;padding:4px 0;line-height:22px;font-size:16px;color:#4275e8;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .area-name-input[data-v-ffcbe3f2]{position:relative;display:inline-block;vertical-align:top;width:61px;height:34px;border:1px solid #4275e8;border-radius:3px;text-align:center;font-size:14px;color:#333;box-shadow:0 0 8px 0 rgba(66,117,232,.37)}.zjapp .area-name-input input[data-v-ffcbe3f2]{border:none;width:100%;height:100%;padding:5px;text-align:center;background-color:transparent}.zjapp .area-info[data-v-ffcbe3f2]{display:flex;font-size:14px}.zjapp .checkitem-info[data-v-ffcbe3f2]{flex:1;padding-top:7px;min-height:34px}.zjapp .checkitem-name[data-v-ffcbe3f2]{color:#333}.zjapp .checkitem-standard[data-v-ffcbe3f2]{color:#999}.zjapp .checkitem-standard_special[data-v-ffcbe3f2]{line-height:22px;display:block;margin-top:1px}.zjapp .huxing-view[data-v-ffcbe3f2]{position:absolute;top:-10px;right:-8px;width:20px;height:20px;line-height:20px;text-align:center;background-color:#4275e8;color:#fff;font-size:12px;border-radius:10px}.zjapp .huxing-mark[data-v-ffcbe3f2]{position:absolute;top:-20px;left:50%;width:44px;height:22px;line-height:22px;margin-left:-22px;background-color:#fdebbd;text-align:center;color:#111;font-size:10px;border-radius:2px}.zjapp .huxing-mark .arrow[data-v-ffcbe3f2]{position:absolute;left:19px;bottom:-6px;width:0;height:0;border:3px solid #fdebbd;border-color:#fdebbd transparent transparent}.zjapp .item-input-group[data-v-ffcbe3f2]{display:flex}.zjapp .label-input-group[data-v-ffcbe3f2]{height:30px;line-height:30px;padding-right:8px;color:#999;text-align:right;font-size:14px}.zjapp .label-input-group-flex[data-v-ffcbe3f2]{flex:1}.zjapp .view-points-line[data-v-ffcbe3f2]{display:flex}.zjapp .view-points-left[data-v-ffcbe3f2]{min-width:140px;padding-left:2.6em;text-indent:-2.6em}.zjapp .view-points-right[data-v-ffcbe3f2]{flex:1;padding-left:10px;color:#b3b3b3;white-space:nowrap}.zjapp .number-input-group[data-v-ffcbe3f2]{padding-top:15px;margin-left:-10px}.zjapp .number-input-group .number-input[data-v-ffcbe3f2]{margin:0 0 10px 10px}.zjapp .passrate-slope[data-v-ffcbe3f2]{display:flex;align-items:center;justify-content:space-between;width:100%;margin-left:inherit}.zjapp .btn-reedit[data-v-ffcbe3f2]{width:80px;padding:12px 0;line-height:22px;font-size:14px;text-align:center;color:#4275e8}.zjapp .btn-reedit .icon[data-v-ffcbe3f2]{margin-top:5px;font-size:12px;vertical-align:top}.zjapp .btn-drawing[data-v-ffcbe3f2]{width:100px;padding:12px 15px;line-height:22px;font-size:14px;text-align:right;color:#4275e8}.zjapp .btn-drawing .icon[data-v-ffcbe3f2]{font-size:13px}.zjapp .detail-list-hd[data-v-ffcbe3f2]{display:flex;height:30px;background-color:#fafafa}.zjapp .detail-list-hd .list-hd-toggle[data-v-ffcbe3f2]{flex:1;padding-left:15px;line-height:30px;color:#4275e8}.zjapp .detail-list-hd .list-hd-title[data-v-ffcbe3f2]{flex:1;padding-left:15px;line-height:30px;font-size:14px;color:#888}.zjapp .detail-list-hd .list-hd-num[data-v-ffcbe3f2]{width:80px;line-height:30px;font-size:14px;text-align:center;color:#888}.zjapp .detail-list-hd .list-hd-passrate[data-v-ffcbe3f2]{width:100px;padding:0 15px;line-height:30px;font-size:14px;text-align:right;color:#888}.zjapp .detail-list[data-v-ffcbe3f2]{background-color:#fff}.zjapp .detail-item-hd[data-v-ffcbe3f2]{display:flex;align-items:flex-start;min-height:46px}.zjapp .detail-item-arrow[data-v-ffcbe3f2]{border:5px solid #c8c8c8;width:0;height:0}.zjapp .detail-item-arrow.item-arrow-right[data-v-ffcbe3f2]{margin:18px 13px 0 17px;border-top-color:transparent;border-right-width:0;border-bottom-color:transparent}.zjapp .detail-item-arrow.item-arrow-down[data-v-ffcbe3f2]{margin:20px 10px 0 15px;border-left-color:transparent;border-right-color:transparent;border-bottom-width:0}.zjapp .detail-item-name[data-v-ffcbe3f2]{flex:1;padding:13px 0;line-height:20px;font-size:14px;color:#111}.zjapp .detail-item-num[data-v-ffcbe3f2]{width:80px;padding:13px 0;line-height:20px;font-size:14px;text-align:center;color:#888}.zjapp .detail-item-passrate[data-v-ffcbe3f2]{width:100px;padding:13px 15px;line-height:20px;font-size:14px;text-align:right;color:#888}.zjapp .detail-line[data-v-ffcbe3f2]{display:flex}.zjapp .detail-line-label[data-v-ffcbe3f2]{padding:8px 0 8px 35px;width:105px;line-height:20px;font-size:14px;color:#666}.zjapp .detail-line-label-single[data-v-ffcbe3f2]{padding:8px 0 8px 15px;width:85px;line-height:20px;font-size:14px;color:#666}.zjapp .detail-line-con[data-v-ffcbe3f2]{flex:1;padding:8px 15px 8px 0;line-height:20px;font-size:14px;color:#333}.zjapp .detail-line-area[data-v-ffcbe3f2]{background-color:#f0f0f0;color:#8c8c8c;padding:2px}.zjapp .detail-line-setval[data-v-ffcbe3f2]{margin-left:8px;color:#999}.zjapp .need-repair[data-v-ffcbe3f2]{height:46px;line-height:18px;padding:14px 15px;margin-top:10px;font-size:16px;color:#666}.zjapp .need-repair .icon[data-v-ffcbe3f2]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .c-label[data-v-ffcbe3f2]{color:#999;font-size:12px;line-height:17px;padding:14px 15px 8px;background-color:#f4f4f4}.zjapp .value-carbon[data-v-ffcbe3f2]{display:inline-block;height:28px;width:38px;border:1px solid #e5e5e5;vertical-align:top;border-radius:3px;text-align:center;font-size:14px;line-height:28px;color:#333}.zjapp .detail-line-carbon-value[data-v-ffcbe3f2]{display:flex;justify-content:space-between;margin:4px 0 10px 0;color:#999}",""])},"8bcc":function(t,e,i){var a=i("63dd");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("fc5468b8",a,!0,{sourceMap:!1,shadowMode:!1})},"8c3d":function(t,e,i){"use strict";(function(t){i("ed63"),i("163d"),i("2b45"),i("e204"),i("cc57");var a,n,s=i("07d2"),o=i("cf09"),r=i("6f9e"),l=i("4360"),c=[],d=[0,1,2,3,4,5,6,7,8,9,".","-"];function h(t){return null!=t&&""!==t}e.a={name:"NumberKeyboard",components:{Item:s.a},data:function(){return{show:!1,isClosing:!1,zIndex:0,willOpenParams:null,inputComponent:"",type:"",hasPrev:!1,hasNext:!1,isDisabledMinus:!1,isDisabledPoint:!1}},computed:{isIOSBezelLess:function(){return l.a.state.app.isIOSBezelLess}},watch:{isClosing:function(t){var e=this;this.$nextTick((function(){!t&&e.willOpenParams&&e.openKeyboard(e.willOpenParams)}))}},created:function(){r.a.$on("routerBeforeEach",this.closeKeyboard),r.a.$on("pageContentClick",this.closeKeyboard)},destroyed:function(){r.a.$off("routerBeforeEach",this.closeKeyboard),r.a.$off("pageContentClick",this.closeKeyboard)},methods:{openKeyboard:function(t){this.isClosing?this.willOpenParams=t:(this.willOpenParams=null,this.show=!0,this.inputComponent=t.inputComponent,this.zIndex=o.a?++o.a.zIndex:1,l.a.commit("global/SET_IS_NUMBER_INPUT_OPEN",!0),l.a.commit("global/SET_NUMBER_KEYBOARD_HEIGHT",l.a.state.app.isIOSBezelLess?266:"true-or-false"===this.inputComponent.type?176:232),this.calcTab(),this.type=this.inputComponent.type,this.setKeysStatus(this.inputComponent.value,this.inputComponent.type),r.a.$emit("numberKeyboardOpen",this.inputComponent))},closeKeyboard:function(){this.show=!1,r.a.$emit("numberKeyboardClose")},startClose:function(){this.isClosing=!0},onClose:function(){this.isClosing=!1,l.a.commit("global/SET_IS_NUMBER_INPUT_OPEN",!1),r.a.$emit("afterNumberKeyboardClose")},input:function(t){"-"===t&&this.isDisabledMinus||"."===t&&this.isDisabledPoint||this.$emit("keyboardInput",t)},delete:function(t){var e=this;this.$emit("keyboardDelete"),a=setTimeout((function(){e.$emit("keyboardClear")}),500)},calcTab:function(){var e=function t(e){return e&&e.$parent?"Scroller"===e.$parent.$options.name?e.$parent:t(e.$parent):null}(this.inputComponent),i=e&&e.$el.querySelectorAll(".component-number-input");if(c=[],i&&t.each(i,(function(t){c.push(t.__vue__)})),t.isEmpty(c))this.hasPrev=!1,this.hasNext=!1;else{var a=t.findIndex(c,this.inputComponent);this.hasPrev=a>0,this.hasNext=a<c.length-1}this.inputComponent&&this.inputComponent.nextEvent&&(this.hasNext=!0)},prev:function(){var e=t.findIndex(c,this.inputComponent),i=c[e-1];i&&(r.a.$emit("numberInputBlur"),i.setFocus(),this.openKeyboard({inputComponent:i}))},next:function(){var e=t.findIndex(c,this.inputComponent),i=c[e+1];i?(r.a.$emit("numberInputBlur"),i.setFocus(),this.openKeyboard({inputComponent:i})):this.inputComponent&&this.inputComponent.nextEvent&&this.inputComponent.nextEvent()},setTure:function(){this.$emit("keyboardAssign",1)},setFalse:function(){this.$emit("keyboardAssign",0)},setKeysStatus:function(t,e){t=h(t)?t.toString():"",h(t)||e.indexOf("positive")>=0?this.isDisabledMinus=!0:this.isDisabledMinus=!1,!/\d/.test(t)||t.indexOf(".")>=0||e.indexOf("int")>=0?this.isDisabledPoint=!0:this.isDisabledPoint=!1},setKeyActiving:function(t,e){t&&t.classList.contains("keys")&&!t.classList.contains("disabled")&&(e?t.classList.add("activing"):t.classList.remove("activing"))},keyTouchstart:function(t){var e=t&&t.target;if(e){+new Date,n=e,this.setKeyActiving(e,!0);var i=e.getAttribute("direct");"closeKeyboard"!==i&&this.clickHandler(i)}},keyTouchend:function(t){var e=t&&t.target;if(e){this.setKeyActiving(e,!1),this.setKeyActiving(n,!1);var i=e.getAttribute("direct");"delete"===i?clearTimeout(a):"closeKeyboard"===i&&this.clickHandler(i)}},clickHandler:function(t){t&&(isNaN(t)||(t=Number(t)),"function"==typeof this[t]?this[t]():d.includes(t)&&this.input(t))}}}}).call(this,i("391c"))},"8eeb":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .drop-down-group[data-v-17dcf4d4]{display:flex;flex-direction:row}.zjapp .drop-down-group .select-con[data-v-17dcf4d4]{flex:1;border:none;background-image:linear-gradient(0deg,#d7e0f7,#d7e0f7 50%,transparent 0);background-size:100% 1px;background-repeat:no-repeat;background-position:bottom}.zjapp .drop-down-group .select-con[data-v-17dcf4d4]:not(:last-child){border:none;background-image:linear-gradient(270deg,#d7e0f7,#d7e0f7 50%,transparent 0),linear-gradient(0deg,#d7e0f7,#d7e0f7 50%,transparent 0);background-size:1px 100%,100% 1px;background-repeat:no-repeat;background-position:100% 0,bottom}",""])},"8fd9":function(t,e,i){"use strict";(function(t){i("5ab2"),i("e10e"),i("6d57");var a=i("28f8"),n=(i("cc57"),i("ed63"),i("8cf2"),i("e697"),i("774b")),s=i("07d2"),o=i("a805"),r=i("6948"),l=i("e68e"),c=i("cd05"),d=i("3c64"),h=i("da1c"),p=i("e2a7"),u=i("a37e"),f=i("b6da"),m=i("7798"),g=i("0159"),v=i("6bf2"),b=i.n(v),x=i("5a71"),y=i("bcc7"),w=i("a500"),k=i("a18c"),_=i("f7e2"),C=i("94e5");function P(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}e.a={name:"MeasureDetailTemplate2",components:{Scroller:n.a,item:s.a,MeasureDetailPlaceCheckitem:o.a,NumberInput:r.a,ItemImgList:l.a,UserSelect:c.a,ItemTextarea:d.a,ProblemDetailHeader:h.a,SingleSelect:x.a,MeasureCarbonDialog:C.a},mixins:[_.a],props:{detail:{type:Object,default:function(){}}},data:function(){return console.log(this.detail,"detaildetail"),{model:u.a,carbonShow:!1,carbonData:0,carbonSelectData:{}}},computed:{hasProblemDataClose:function(){return t.some(this.detail.problemData,(function(t){return!t.isOpen}))},masterCheckitem:function(){return this.$store.state.measure.detailMasterCheckitem},hasMasterCheckitem:function(){return this.masterCheckitem&&this.masterCheckitem.length},hasCarbonDialog:function(){return this.detail.problemData.filter((function(t){return 9===t.passrate_mode})).length}},beforeMount:function(){},methods:{getAreaData:function(e){var i=[];return t.each(e,(function(e){t.find(i,{name:e.area})||i.push({name:e.area})})),i},formatDate:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"YYYY-MM-DD HH:mm";return b()(t).format(e)},contains:function(e,i){return t.includes(e,i)},pointFilter:function(e,i){return t.filter(e,i)},hasPoints:function(e,i){var a=this.model.hasVal,n=this.pointFilter(e,i);return t.filter(n,(function(t){return a(t.val)}))},areaNameEdit:function(t,e){this.$set(t,"isEditing",!0),this.$set(t,"nameTemp",t.name);var i=e.target.nextSibling.querySelector("input");return this.$forceUpdate(),setTimeout((function(){document.body.contains(i)&&i.focus()}),100),!1},areaNameUpdate:function(e,i){var a=!1;if(e&&i){var n=e.name.trim(),s=e.nameTemp.trim();if(s===n)return this.$set(e,"isEditing",!1),void this.$forceUpdate();var o=t.some(i.areaData,(function(t){return t.name===s}));""===s||null==s?(this.$set(e,"isEditing",!1),a=!0):o&&(p.a.alert(s+"已存在"),a=!0),a?e.name=n:(e.name=s,t.each(i.problemData,(function(e){var i=t.find(e.areaData,{name:n}),a=t.filter(e.realityVal,{area:n});i&&(i.name=s),t.each(a,(function(t){t.area=s}))})),this.$set(e,"isEditing",!1),this.saveProblem(i))}},areaNumChange:function(e){u.a.setAreaDataByNum(e),u.a.setDetailPointsByArea(e),t.each(e.problemData,(function(t){u.a.pointsHandle(t),u.a.problemHandle(t)})),this.saveProblem(e),this.$forceUpdate()},areaPointNumChange:function(e,i,a){var n=t.map(e.problemData,(function(e){return t.find(e.areaData,(function(t){return t.name===a.name}))}));return t.some(n,(function(t){return 0!==t.pointNum}))?12===i.passrate_mode&&(a.pointNum>6||a.pointNum<2)?p.a.alert("标高差算法每个测区实测值个数为 2~6"):16===i.passrate_mode&&(a.pointNum>99||1===a.pointNum)?(a.pointNum=t.filter(i.realityVal,{area:a.name}).length,p.a.alert("每个测区点数应该是 2~99 的整数")):(u.a.setProblemPointsByArea(i),u.a.pointsHandle(i),u.a.problemHandle(i),void this.saveProblem()):(a.pointNum=t.filter(i.realityVal,{area:a.name}).length,void p.a.alert("一个测区不能所有检查项的点数为0"))},realityValUpdate:function(t){this.update(t),this.saveProblem()},setValUpdate:function(t){this.update(t),this.saveProblem()},saveInputSetVal:function(e,i){t.includes([5,6,14],e.passrate_mode)?(u.a.prevSetVal[e.checkItem.id]={},t.each(e.measure_item,(function(a){var n=t.find(e.realityVal,{area:i.name,label:a}).setVal;u.a.prevSetVal[e.checkItem.id]["val-"+a]=n}))):u.a.prevSetVal[e.checkItem.id]={val:i.setVal}},autoInputSetVal:function(e,i){var a=this,n=u.a.prevSetVal[e.checkItem.id],s=t.includes([3,4,5,6,10,11,14,15,17,18],e.passrate_mode),o=t.some(e.realityVal,(function(t){return t.area===i.name&&!a.model.hasVal(t.setVal)}));s&&o&&n&&!t.isEmpty(n)&&(t.includes([5,6,14,15],e.passrate_mode)?t.each(e.measure_item,(function(s){var o=n["val-"+s],r=t.find(e.realityVal,{area:i.name,label:s});a.model.hasVal(o)&&(r.setVal=o)})):this.model.hasVal(n.val)&&(i.setVal=n.val))},update:function(t){u.a.setValSpread(t),u.a.pointsHandle(t),u.a.problemHandle(t),this.$forceUpdate()},changeMode:function(t){var e=this;this.isProblemExists().then((function(){p.a.confirm("今天24:00前可修改，是否现在修改？",{okText:"修改"}).then((function(i){i&&(e.detail.mode=t,e.detail.needRepair=!1,e.$refs.scroller.scrollTop=0)}))}))},markHuxing:function(e,i){var a=this,n=[];i&&""!==i.x&&void 0!==i.x&&null!==i.x&&(n=[i]),f.a.openPopup({mode:"mark",url:e.drawing_file[0]?e.drawing_file[0].url:"",points:n,onmark:function(n){i.x=n.x,i.y=n.y,t.each(e.problemData,(function(t){u.a.pointsHandle(t)})),a.saveProblem(e),a.$forceUpdate()}})},viewHuxing:function(){var e=this,i=[],n=[];if(t.isEmpty(this.detail.drawing_file))p.a.alert("PC端未设置户型图");else{t.each(this.detail.problemData,(function(a){i=i.concat(t.filter(t.clone(a.realityVal),(function(t){if(e.model.hasVal(t.x)&&e.model.hasVal(t.y))return e.detail.problemData.length>1&&(t.itemName=a.checkItem.item_name?a.checkItem.item_name:a.checkItem.name),!0})))})),t.isEmpty(this.detail.areaData)||t.each(this.detail.areaData,(function(e){var a=t.filter(t.clone(i),{area:e.name});n=n.concat(a)}));var s=[];t.each(this.detail.problemData,(function(t){var e=function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?P(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):P(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},t.checkItem);e.passrate_mode=t.passrate_mode,s.push(e)})),g.a.openPopup({mode:"view",url:this.detail.drawing_file[0]?this.detail.drawing_file[0].url:"",points:n,areaData:this.detail.areaData||[],itemData:s})}},toggleProblemData:function(t){this.detail.problemData.length>1&&this.$set(t,"isOpen",!t.isOpen)},toggleProblemDataAll:function(){var e=this,i=this.hasProblemDataClose;t.each(this.detail.problemData,(function(t){e.$set(t,"isOpen",!!i)}))},isProblemExists:function(){var t=this.detail;return m.a.isProblemExists(t.id).then((function(t){if(!t)return p.a.alert("数据有更新"),k.a.go(-1),Promise.reject({mgs:"问题不存在",code:-1})}))},beforeSelectRepair:function(){var t=this.detail,e=Promise.resolve(!0);return"view"===t.mode&&(e=this.isProblemExists()),e},onSelectRepair:function(){var t=this;if("reedit"!==this.detail.mode&&"待整改"===this.detail.status)return m.a.changeRepair(this.detail).then((function(){return t.reloadDetail()})).then((function(){t.$forceUpdate()}))},setNeedRepair:function(){var e=this,i=this.detail,a=this.model.place,n=this.masterCheckitem[0],s=Promise.resolve();if(i.needRepair=!i.needRepair,!t.isObject(i.repair.__ob__)){var o=t.clone(i.repair);delete i.repair,this.$set(this.detail,"repair",o)}(i.needRepair&&t.isEmpty(i.repair)||!i.repair.id)&&(s=y.a.getBidSectionCheckItemInfo(i.proj_id,a.section.id,n.id,"实测实量").then((function(t){var e=t.repair[0]||{};Object.assign(i.repair,e)})).then((function(){w.a.addTrack("实测实量-通知整改")}))),s.then((function(){e.$forceUpdate()})).then((function(){e.beforeSelectRepair()}))},checkSubmitData:function(){var e=this,i=this.detail,a=t.some(i.problemData,(function(a){var n,s=!1,o="";if(12!==a.passrate_mode&&5!==a.passrate_mode)s=t.some(a.realityVal,(function(t){return!t.isFict&&!e.model.hasVal(t.val)}));else if(12===a.passrate_mode){var r=t.groupBy(a.realityVal||[],"area");o=t.some(r,(function(i){return t.filter(i,(function(t){return e.model.hasVal(t.val)})).length<2}))?"每个测区至少填两个值":""}else if(5===a.passrate_mode){var l=e.model.completeInput(a.realityVal),c=l.hasEmptyArea;if(s=l.incompleted,n=l.emptySetVal,c)return p.a.alert("宽度、高度至少需完整录入其中一个"),!0;if(s||n)return p.a.alert("请录全所有实测值和设计值"),!0}var d=t.some(a.areaData,(function(e){var i=t.filter(a.realityVal,{area:e.name,isExceed:!0}),n=t.filter(a.realityVal,{area:e.name,isExceed:!0,hasMark:!0});return!!i.length&&!n.length}));n=t.includes([3,4,6,10,11,14,15,16,17,18],a.passrate_mode)&&t.some(a.realityVal,(function(t){return!e.model.hasVal(t.setVal)}));var h,u,f="";if(t.isEmpty(a.realityVal))return p.a.alert("每个检查项至少一个测点"),!0;if(s)return p.a.alert("请填写全部实测值"),!0;if(n)return p.a.alert("请填写全部设计值"),!0;if(o)return p.a.alert(a.checkItem.name+o),!0;if(!t.isEmpty(i.drawing_file)&&d&&!i.optionalJicha)return p.a.alert("每个测区每个检查项至少1个爆点标点位"),!0;if(9===a.passrate_mode){if(h=t.filter(a.intensityOutcome,{intensity:"low"}),u=t.filter(a.intensityOutcome,{intensity:"high"}),!e.model.hasVal(a.intensitySetVal))return p.a.alert("请输入强度设计值"),!0;if(h.length||u.length)return f=h.reduce((function(t,e){return t+"".concat(e.area,"的平均值小于").concat(e.referenceMin,"，")}),"")+u.reduce((function(t,e){return t+"".concat(e.area,"的平均值大于").concat(e.referenceMax,"，")}),""),f+="无法计算",p.a.alert(f),!0}})),n=t.find(i.problemData,(function(e){return t.isEmpty(e.contractor)}));return!a&&n?(p.a.alert("请选择施工单位"),!1):!a},setRepair:function(){var e=this,i=t.clone(this.detail);if(!t.isEmpty(i.repair)&&i.repair.id)return m.a.setRepair(i).then((function(){e.reloadDetail()})).finally((function(){e.$forceUpdate()}));p.a.alert("请选择整改人")},reloadDetail:function(){var t=this;Promise.resolve().then((function(){return t.$route.query.problemId?u.a.loadDetailById(t.$route.query.problemId):u.a.loadDetailByIdentity(u.a.tabsIdentity)}))},carbonOpen:function(t,e){this.carbonShow=!0,this.carbonData=e.carbon,this.carbonSelectData={id:t.id,areaName:e.name}},carbonSelect:function(e){var i=this,a=this.carbonSelectData,n=a.id,s=a.areaName;this.detail.problemData.forEach((function(a){a.id===n&&(a.realityVal.forEach((function(t){t.area===s&&(t.carbon=e)})),a.areaData.forEach((function(t){t.name===s&&(t.carbon=e)})),i.realityValUpdate(a),console.log("碳化深度：",e,t.cloneDeep(a)))}))},carbonClose:function(){this.carbonShow=!1}}}}).call(this,i("391c"))},9120:function(t,e,i){var a=i("2ddb");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("cb55f532",a,!0,{sourceMap:!1,shadowMode:!1})},"91c1":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e"),i("9a33");var a=i("28f8"),n=i("e68e"),s=i("6f9e"),o=i("bcc7"),r=i("e89f");function l(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function c(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?l(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"CheckGuideDetailDrop",components:{ItemImgList:n.a},mixins:[r.a],data:function(){return{show:!1,showList:!1,isLoading:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,module:"",itemIds:[],data:[],target:""}},watch:{show:function(t){var e=this;t&&this.$nextTick((function(){e.showList=!0}))}},created:function(){s.a.$on("routerBeforeEach",this.closePopup),s.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){s.a.$off("routerBeforeEach",this.closePopup),s.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(e){this.show=!0,this.$emit("open"),this.module=e.module,this.itemIds=e.itemIds,this.options=e.options;var i=document.querySelector(".layout-main .layout-header");if(this.contentTop=i.offsetHeight,e.el){var a=e.el.getBoundingClientRect();this.contentTop=a.bottom}this.target=e.el,this.listHeight=t.minBy([window.innerHeight-this.contentTop-50,510]),this.getData()},closePopup:function(){var t=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(e){t.$on("afterClosePopup",e)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(t){t&&t.target&&t.target!==this.target&&this.show&&this.closePopup()},getData:function(){var e=this;return this.options&&this.options.length?(this.data=t.map(this.options,(function(t){return c(c({},t),{},{isOpen:!1})})),Promise.resolve()):o.a.getMeasureCheckItem(this.itemIds).then((function(i){e.data=t.map(i,(function(e){var i=e.content?e.content.trim():"",a=i?i.split("\n"):[],n=e.content_image?JSON.parse(e.content_image):[],s=t.filter(a,(function(t){return!/<img([\s\S]*)>/gm.test(t)}));return t.each(n,(function(t){t.url=t.url.split("@")[0]})),{id:e.id,name:e.full_name,textArr:s,contentImage:n,isOpen:!1}}))})).catch((function(t){console.error(t)}))},toggleItem:function(t){this.data.length>1&&this.$set(t,"isOpen",!t.isOpen)}}}}).call(this,i("391c"))},9446:function(t,e,i){var a=i("2dd6");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("2192cd00",a,!0,{sourceMap:!1,shadowMode:!1})},"94e5":function(t,e,i){"use strict";i("163d");var a=i("f51f"),n=i("04f3"),s={name:"MeasureCarbonDialog",props:{value:{type:Number,default:0},show:{type:Boolean,default:!1}},data:function(){return{carbonShow:this.show,carbonList:a.a.carbonConfig.list,backButtonEvent:null}},watch:{show:function(t){this.carbonShow=t,this.init()}},activated:function(){this.carbonShow=this.show},methods:{init:function(){this.backButtonEvent||(this.backButtonEvent=Object(n.a)(this.close))},select:function(t){this.$emit("select",t),this.close()},close:function(){this.$emit("close"),this.carbonShow=!1,this.backButtonEvent&&(Object(n.c)(this.backButtonEvent),this.backButtonEvent=null)}}},o=(i("dc33"),i("17cc")),r=Object(o.a)(s,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("van-action-sheet",{staticClass:"measure-c-d",attrs:{title:"碳化深度(mm)选择","get-container":"body"},on:{close:t.close},model:{value:t.carbonShow,callback:function(e){t.carbonShow=e},expression:"carbonShow"}},[i("div",{staticClass:"mcd-content"},t._l(t.carbonList,(function(e,a){return i("div",{key:a,staticClass:"mcd-list",class:{active:e===t.value},on:{click:function(i){t.select(e)}}},[t._v("\n      "+t._s(e.toFixed(1))+"\n    ")])})))])}),[],!1,null,"d8f61210",null);e.a=r.exports},"94f0":function(t,e,i){"use strict";i("2c79")},9788:function(t,e,i){"use strict";i("9446")},"9a11":function(t,e,i){"use strict";(function(t){i("e204"),i("9dd9"),i("f548"),i("e697");var a,n,s=i("fd50"),o=i("07d2"),r=i("269c"),l=i("6f9e"),c=i("0c67"),d=i("6144"),h=i("e2a7"),p=i("e89f");e.a={name:"DropSelectCheckitemDialog",components:{Item:o.a,AppButton:r.a},mixins:[p.a],data:function(){return{show:!1,showList:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,mode:"",options:[],selectedSet:[],currentSet:[],openSet:{},passrateData:{},componentUid:"",multi:!1,target:""}},computed:{allowConfirm:function(){return!t.isEmpty(this.selectedSet)}},watch:{show:function(t){var e=this;t&&this.$nextTick((function(){e.showList=!0}))},showList:function(t){var e=this;t&&this.$nextTick((function(){setTimeout((function(){if(e.$refs["list-wrap"]){var t=e.$refs["list-wrap"].querySelector(".checkitem-selected");t&&t.scrollIntoViewIfNeeded(!0)}}),400)}))}},created:function(){l.a.$on("routerBeforeEach",this.closePopup),l.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){l.a.$off("routerBeforeEach",this.closePopup),l.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(e){var i=this;if(this.show)return e.componentUid===this.componentUid?void this.closePopup():void this.closePopup().then((function(){i.openPopup(e)}));this.componentUid=e.componentUid||"";var s=document.querySelector(".layout-main .layout-header");if(this.contentTop=s.offsetHeight,e.el){var o=e.el.getBoundingClientRect();this.contentTop=o.bottom}if(this.target=e.el,this.listHeight=t.minBy([window.innerHeight-this.contentTop-50,510]),this.options=e.options,this.processMode=e.processMode,this.mode=e.mode,this.multi=e.multi,a=e.place,n=e.callback,t.isEmpty(e.openStatus)){var r=d.a.getObject("measureReportRoomMemory")||{};this.openSet=r}else this.openSet=e.openStatus;var l=t.find(e.options,(function(i){return t.some(i.children,(function(i){return t.some(e.selected,{id:i.id})}))}));l&&this.$set(this.openSet,l.id,!0),this.getPassrateData(e.place,e.batchId,e.processMode),this.initSelectedSet(e.options,e.selected),this.show=!0,this.$emit("open")},closePopup:function(){var t=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(e){t.$on("afterClosePopup",e)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(t){t&&t.target&&t.target!==this.target&&this.show&&this.closePopup()},getPassrateData:function(e,i,a){var n=this,o=e.building?e.building.id:"",r=e.unit?e.unit.id:"",l=e.floor?e.floor.id:"",d=e.room?e.room.id:"";(1===a?c.a.getRoomAllProblems(i,d):2===a||5===a?c.a.getFloorAllProblems(i,o,r,l,a):d?c.a.getRoomAllProblems(i,d):l?c.a.getFloorAllProblems(i,o,r,l):s.a.when([])).then((function(e){var i={},a={};t.each(e,(function(t){"检查中"===t.status?i[t.item_id]="暂存":9===t.passrate_mode?i[t.item_id]=t.standard_intensity_value?(t.intensity_value/t.standard_intensity_value*100).toFixed(2)+"%":"":i[t.item_id]=t.measurement_points?((t.measurement_points-t.problem_points)/t.measurement_points*100).toFixed(2)+"%":"",t.parent_item_id&&(a[t.parent_item_id]||(a[t.parent_item_id]={pointNum:0,exceedNum:0}),a[t.parent_item_id].pointNum+=t.measurement_points||0,a[t.parent_item_id].exceedNum+=t.problem_points||0)})),t.each(a,(function(t,e){i[e]=t.pointNum?(100*(t.pointNum-t.exceedNum)/t.pointNum).toFixed(2)+"%":""})),n.passrateData=i}))},getItemInfo:function(t){var e=this.passrateData[t.id];return e||(t.process_mode===this.processMode?"":["","分户","不分单元整层","","","分单元整层"][t.process_mode])},getItemType:function(e){var i=t.some(this.currentSet,{id:e.id}),n=t.some(this.selectedSet,{id:e.id}),s="edit"===this.mode,o=!!this.passrateData[e.id],r=1===e.process_mode?"room":"floor",l=a&&a.room&&a.room.id?"room":"floor";return this.multi?!s&&i?"current":n?"selected":r===l&&(!o||o&&i)?"checkbox":!o||i||n?"blank":"arrow":i?"current":o?"arrow":"single"},initSelectedSet:function(){var e=this,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.selectedSet=[],this.currentSet=[],t.each(a,(function(a){var n;t.some(i,(function(e){return n=t.find(e.children||[],{id:a.id})}))&&(e.currentSet.push(t.clone(n)),"edit"===e.mode&&e.selectedSet.push(t.clone(n)))}))},showName:function(t){var e=t;return e=(e=e.replace(new RegExp("<","gm"),"&lt;")).replace(new RegExp(">","gm"),"&gt;")},toggleItem:function(t){var e=this.openSet[t.id];this.$set(this.openSet,t.id,!e),d.a.saveObject("measureReportRoomMemory",this.openSet)},clickItem:function(e){var i=this,n=this.getItemType(e),s=a.room&&a.room.id||"";if(s&&1!==e.process_mode||!s&&1===e.process_mode)h.a.alert(["","此项按户测量，与当前部位不符","此项按不分单元整层测量，与当前部位不符","","","此项按分单元整层测量，与当前部位不符"][e.process_mode]);else if(1===e.entry_requirements||8===e.passrate_mode||null!==e.standard_max&&""!==e.standard_max)if(this.multi){if("current"===n||"blank"===n)return;if("arrow"===n)return void this.select(e);var o=t.findIndex(this.selectedSet,{id:e.id});if(o>=0)this.selectedSet.splice(o,1);else{var r=!this.selectedSet.length||t.some(this.options,(function(a){var n=t.some(a.children,(function(t){return t.id===i.selectedSet[0].id})),s=t.some(a.children,(function(t){return t.id===e.id}));return n&&s})),l=t.isEmpty(this.selectedSet)||this.selectedSet[0].process_mode===e.process_mode,c=t.some(this.selectedSet,(function(t){return 9===t.passrate_mode}))||this.selectedSet.length&&9===e.passrate_mode;if(!r)return void h.a.alert("只能在相同的一级检查项下多选");if(!l)return void h.a.alert("只能在相同的部位划分检查项里多选");if(c)return void h.a.alert("混凝土强度不可多选检查项");this.selectedSet.push(e)}}else{if("current"===n)return;setTimeout((function(){i.select(e)}),100)}else h.a.alert("请先在PC端设置此检查项的合格标准值。")},select:function(e){t.isArray(e)||(e=[e]);var i=t.extend([],e);n&&n(i),this.closePopup()},confirm:function(){this.allowConfirm&&this.select(this.selectedSet)}}}}).call(this,i("391c"))},"9a3c":function(t,e,i){"use strict";i("ad134")},"9b25":function(t,e,i){"use strict";i("b09a")},"9c76":function(t,e,i){var a=i("9c7d");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("8dddf8da",a,!0,{sourceMap:!1,shadowMode:!1})},"9c7d":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .measure-c-d .van-action-sheet__header[data-v-d8f61210]{color:#333}.zjapp .measure-c-d .mcd-content[data-v-d8f61210]{padding:15px;display:flex;flex-wrap:wrap;justify-content:space-between}.zjapp .measure-c-d .mcd-list[data-v-d8f61210]{width:80px;height:30px;line-height:30px;font-size:14px;border:1px solid #e5e5e5;border-radius:3px;color:#333;margin:0 0 10px 0;text-align:center;float:left}.zjapp .measure-c-d .mcd-list.active[data-v-d8f61210]{color:#4275e8;border-color:#4275e8}",""])},a093:function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e"),i("f548");var a=i("28f8"),n=(i("9dd9"),i("cc57"),i("e204"),i("9eea")),s=i("3156b"),o=i("774b"),r=i("e89f"),l=i("6f9e");function c(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function d(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?c(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):c(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"AppSingleSelect",components:{appSearchBar:n.a,item:s.a,Scroller:o.a},mixins:[r.a],props:{},data:function(){return{activeTab:[],storageKey:encodeURI(this.title||"singleSelectMark"),storageVal:[],keyword:"",searchStatus:!1,checkedItem:{},show:!1,searchData:[],options:[],optionsLimit:20,pagingOptions:!1,searchBar:!0,category:[],ifToggle:!1,editorAddData:!1,lineLimit:1}},computed:{optionsShow:function(){return this.options&&this.options.length?this.grouping?this.getGroupData():this.options.slice(0,this.optionsLimit):[]}},watch:{keyword:function(t){var e=this;this.$nextTick((function(){e.filterList(t)}))}},methods:{openPopup:function(e){if(console.log(e),this.value=!0,this.show=!0,this.category=[],l.a.$on("closeDialog",this.closePopup),this.title=e.title,this.selected=e.selected,this.checkedItem=e.selected,this.options=e.options,this.onSelect=e.onSelect,this.searchBar=e.searchBar,this.grouping=e.grouping,this.rightBtn=e.rightBtn,this.rightBtnEvent=e.rightBtnEvent,this.ifToggle=e.ifToggle,this.lineLimit=e.lineLimit,this.editorAddData=e.editorAddData,e.grouping&&e.autoOpen){var i=t.uniqBy(t.map(this.options,e.grouping));this.activeTab=t.map(i,(function(t,e){return e}))}this.storageKey=encodeURI(this.title||"singleSelectMark"),this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},closeEvent:function(){l.a.$off("closeDialog",this.closePopup),this.value=!1,this.show=!1,this.keyword="",this.searchStatus=!1,this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].cancelSearch()},customAddSupplier:function(t){return this.options.findIndex((function(e){return e.name===t}))},selectItem:function(t){var e=this;this.ifToggle&&this.checkedItem.id===t.id?this.checkedItem={}:this.checkedItem=t,this.onSelect(this.checkedItem),this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].saveHistory(),window.setTimeout((function(){e.closeEvent()}),300)},onSearchTypeChange:function(t){this.searchStatus=t},filterList:function(t){var e,i,a=this,n=new RegExp("("+t+")","gmi");if(this.category=[],this.keyword=t,this.searchData=[],!t)return!1;this.options.map((function(t){return n.test(t.name)&&(i=d(d({},t),{},{rename:t.name.replace(n,"<label>$1</label>")}),a.grouping?-1===(e=a.category.indexOf(i[a.grouping]))?(a.category.push(i[a.grouping]),a.searchData.push({name:i[a.grouping],children:[i]})):a.searchData[e].children.push(i):a.searchData.push(i)),t}))},pageOptions:function(){this.optionsLimit=this.optionsLimit+20,this.pagingOptions=!1},getGroupData:function(){var t,e=this,i=[];return this.category=[],this.options.map((function(a){return-1===(t=e.category.indexOf(a[e.grouping]))?(e.category.push(a[e.grouping]),i.push({name:a[e.grouping],children:[a]})):i[t].children.push(a),a})),i}}}}).call(this,i("391c"))},a300:function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),n=i("e89f"),s=i("e2a7"),o=i("4360"),r=i("e223");function l(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}e.a={name:"DrawingDialog",store:o.a,components:{Drawing:r.a},mixins:[n.a],data:function(){return{show:!1,mode:"",url:"",points:[],folder:"",maxMarks:1/0,onmark:function(){}}},methods:{openPopup:function(t){return this.mode=t.mode,this.url=t.url,this.points=t.points,this.folder=t.folder,this.maxMarks=isNaN(t.maxMarks)?1/0:t.maxMarks,this.onmark=t.onmark,this.show=!0,this.$emit("open"),this},closePopup:function(){this.show=!1,this.$emit("close")},undo:function(){this.points.pop()},sure:function(){this.points.length?(this.closePopup(),this.onmark&&this.onmark(this.points)):s.a.alert("请先在户型图标记位置")},pointLight:function(e){this.points=t.map(this.points,(function(t,i){var n=function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?l(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},t);return e===i?n.color="#4275e8":n.found?n.color="#14ff56":n.color="#ff4546",n}))},onclick:function(t){var e=this;if("view"===this.mode){if(t.clickPoint&&"points"===t.clickPoint.tag){var i=t.clickPoint.index;this.pointLight(i)}}else if("mark-val-group"===this.mode){if(this.points.length>=maxMarks)return void s.a.alert("爆点个数不能大于实测点数");this.points.push({x:t.x,y:t.y})}else if("multiple-remark"===this.mode)this.points.push({x:t.x,y:t.y});else{var a={x:t.x,y:t.y};this.points=[a],setTimeout((function(){e.closePopup(),e.onmark&&e.onmark(a)}),200)}}}}}).call(this,i("391c"))},a43f:function(t,e,i){var a=i("5454");(t.exports=i("690e")(!1)).push([t.i,".zjapp .drawing-con[data-v-196e7a7d]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-196e7a7d]{background:url("+a(i("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-196e7a7d]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-196e7a7d],.zjapp .loading-text[data-v-196e7a7d]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-196e7a7d]{color:#ff3d3d}",""])},a492:function(t,e,i){"use strict";(function(t){i("6d57"),i("e697"),i("cc57");var a=i("4c09"),n=i("f369"),s=i("a646"),o=i("6db4"),r=i("00f6"),l=i("a37e"),c=i("6144"),d=i("bc69"),h=i("e2a7"),p=i("7798");e.a={name:"MeasureDetail",components:{CheckGuide:n.a,MeasureDetailTemplate1:s.a,MeasureDetailTemplate2:o.a,MeasureDetailTemplate3:r.a},data:function(){return{isLoading:!0,tabs:[],currentTab:"",buildingId:"",unit:"",floor:"",roomId:"",checkitemId:"",problemId:"",place:{},identity:"",processMode:"",masterCheckitem:[],model:l.a,checkItemGuideIds:[],repairData:{},supervisionData:{},constructData:{}}},computed:{projId:function(){return t.isEmpty(l.a.place)||t.isEmpty(l.a.place.project)?"":l.a.place.project.id},detail:function(){var t;return"repair"===this.currentTab?t=this.$store.state.measure.repairData:"supervision"===this.currentTab?t=this.$store.state.measure.supervisionData:"construct"===this.currentTab&&(t=this.$store.state.measure.constructData),t},drawingUrl:function(){return this.detail&&this.detail.drawing_file&&this.detail.drawing_file[0]&&this.detail.drawing_file[0].url||""}},activated:function(){this.$router.isBack?this.reloadDetail():(this.buildingId=this.$route.query.buildingId,this.unit=this.$route.query.unit,this.floor=this.$route.query.floor,this.roomId=this.$route.query.roomId,this.checkitemId=this.$route.query.checkitemId,this.problemId=this.$route.query.problemId,this.viewIdentity=this.$route.query.viewIdentity,this.readonly=this.$route.query.readonly,this.init())},methods:{init:function(){var e=this,i=this.roomId,n=this.buildingId,s=this.unit,o=this.floor,r=this.checkitemId,c=this.problemId,d=this.viewIdentity,h=this.readonly;return this.isLoading=!0,l.a.init(i,n,s,o,r,c,d,h).then((function(i){var n;console.log("detailData =====",i),e.repairData=i.repair,e.supervisionData=i.supervision,e.constructData=i.construct,e.masterCheckitem=l.a.firstCheckitem,e.tabs=l.a.tabs,e.currentTab=e.tabs[e.tabs.length-1].key;var s=t.map(e.detail?e.detail.checkItems:[],"id"),o=e.checkItemGuideIds.length;(n=e.checkItemGuideIds).splice.apply(n,[0,o].concat(Object(a.a)(s))),e.isLoading=!1})).catch((function(t){console.error(t)}))},changeTab:function(e){var i=this,a=t.isEmpty(this.masterCheckitem)?this.checkitemId:this.masterCheckitem[1].id;this.currentTab=e.key,l.a.tabsIdentity=e.identity,l.a.loadDetailByIdentity(e.identity,[a]).then((function(t){console.log("detailData =====",t),i.repairData=t.repair,i.supervisionData=t.supervision,i.constructData=t.construct}))},changeItems:function(t,e){var i,n;(i=this.masterCheckitem).splice.apply(i,[0,2].concat(Object(a.a)(t))),this.checkitemId=t[1].id;var s=this.checkItemGuideIds.length;(n=this.checkItemGuideIds).splice.apply(n,[0,s].concat(Object(a.a)(e)))},changePlace:function(t){if(t){l.a.place=t,l.a.project=t.project;var e=t.building&&t.building.name||"",i=t.unit&&t.unit.name||"",a=t.floor&&t.floor.name||"",n=e+i+(t.room&&t.room.name||""||a);l.a.placeFullname=n}},valueChange:function(t,e){},reloadDetail:function(){var t=this;if(this.isLoading=!0,this.$route.query.problemId)return l.a.loadDetailById(this.problemId).then((function(e){console.log("detailData =====",e),t.isLoading=!1}));var e=l.a.tabsIdentity;return l.a.loadDetailByIdentity(e).then((function(e){console.log("detailData =====",e),t.isLoading=!1}))},getBaseData:function(){var e=this;return p.a.getPlaceData(this.buildingId,this.unit,this.floor,this.roomId).then((function(t){e.place=t})).then((function(){return p.a.getMeasureUserIdentity().then((function(t){e.identity=t}))})).then((function(){return p.a.getIdentityAndTabs(e.place.section.id,e.identity).then((function(i){console.log("tabs =====",i),e.viewIdentity?e.currentTab=t.find(i,{identity:e.identity}):e.currentTab=i[i.length-1],e.batchId=e.currentTab.batch.id}))})).then((function(){return p.a.getMeasureCheckitemRealProcessMode(e.buildingId,e.checkitemId).then((function(t){e.processMode=t}))}))},getDetailData:function(){var t=this;return(this.problemId?p.a.getProblemById(this.problemId):this.checkitemId?this.getBaseData().then((function(){return t.getDetailDataByBatch(t.batchId,t.checkitemId)})):Promise.reject("参数错误")).then((function(t){console.log("detailData ======",t)})).catch((function(t){console.error(t)}))},getDetailDataByBatch:function(e,i,a){var n,s=this;return e?i?(i=t.isArray(i)?i:[i],1===this.processMode?n=p.a.getRoomProblem(this.place.room.id,i,e,a):2===this.processMode?n=p.a.getFloorProblem(this.place.building.id,"",this.place.floor.id,i,e,2,a):5===this.processMode&&(n=p.a.getFloorProblem(this.place.building.id,this.place.unit.id,this.place.floor.id,i,e,5,a)),n.then((function(e){return t.isEmpty(e)?s.identity!==s.currentTab.identity||s.readonly?{status:"",mode:"",problemData:[]}:p.a.createNewDetail(i,s.currentTab.batch,s.place):e})).then((function(t){return t=p.a.fillProblemData(t,i,s.place)}))):Promise.reject("缺少参数，检查项 id"):Promise.reject("缺少参数，批次 id")},saveProblem:function(){var t=this,e=this.detail;return"reedit"===e.mode||"redo"===e.mode?Promise.resolve():p.a.save(e).then((function(e){e&&t.$set(t.detail,"id",e)})).catch((function(t){h.a.alert(t)}))},saveProblemAndTip:function(){this.saveProblem().then((function(){h.a.alert("保存成功")}))},disabledSaveTip:function(){h.a.alert("“再测一遍”功能暂不支持暂存")},saveAreaHistory:function(){var e=c.a.getObject(d.a.MEASURE_V3_CHECK_ITEMS_INIT_DATA,c.a.level.user)||{};t.each(this.detail.problemData,(function(t){e[t.checkItem.id]={areaNum:t.areaNum,areaData:t.areaData,passrate_mode:t.passrate_mode,pointNum:t.pointNum}})),c.a.saveObject(d.a.MEASURE_V3_CHECK_ITEMS_INIT_DATA,e,c.a.level.user)},checkSubmitData:function(){var t;return 1===this.detail.entry_requirements?t=this.$refs["template-1"]:2===this.detail.entry_requirements?t=this.$refs["template-2"]:3===this.detail.entry_requirements&&(t=this.$refs["template-3"]),t&&t.checkSubmitData()},submitCheck:function(){var t=this;if(this.checkSubmitData(this.detail))return 3===this.detail.entry_requirements&&(this.detail.problemData||[]).forEach((function(t){l.a.pointsHandle(t),l.a.problemHandle(t)})),p.a.submit(this.detail).then((function(){2===t.detail.entry_requirements&&t.saveAreaHistory(),t.saveSectionContractor(),t.reloadDetail()}))},resubmitCheck:function(){var t=this;if(this.checkSubmitData(this.detail))return 3===this.detail.entry_requirements&&(this.detail.problemData||[]).forEach((function(t){l.a.pointsHandle(t),l.a.problemHandle(t)})),p.a.resubmitCheck(this.detail).then((function(){2===t.detail.entry_requirements&&t.saveAreaHistory(),t.saveSectionContractor(),t.reloadDetail()}))},submitRepair:function(){var t=this;return p.a.submitRepair(this.detail).then((function(){t.reloadDetail()}))},submitRedo:function(){var t=this;if(this.checkSubmitData(this.detail))return 3===this.detail.entry_requirements&&(this.detail.problemData||[]).forEach((function(t){l.a.pointsHandle(t),l.a.problemHandle(t)})),p.a.submitRedo(this.detail).then((function(){2===t.detail.entry_requirements&&t.saveAreaHistory(),t.saveSectionContractor(),t.reloadDetail()})).catch((function(t){console.error(t)}))},saveSectionContractor:function(){var e=this.detail.place.section.id,i=c.a.getUserObject(d.a.MEASURE_SECTION_CONTRACTOR)||{},a=this.detail.problemData&&this.detail.problemData[0]&&this.detail.problemData[0].contractor;t.isEmpty(a)||(i[e]=a.id,c.a.saveUserObject(d.a.MEASURE_SECTION_CONTRACTOR,i))}}}}).call(this,i("391c"))},a5c6:function(t,e,i){"use strict";var a=i("329b"),n=i("a093").a,s=(i("f3d7"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{title:t.title,mode:"dialog","on-close":t.closeEvent}},[t.rightBtn&&!t.editorAddData||t.rightBtn&&t.editorAddData&&(!t.selected.name||t.customAddSupplier(t.selected.name)>-1)?i("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:function(e){t.rightBtnEvent(t.category)}},slot:"header-bar-right"},[t._v("\n      "+t._s(t.rightBtn)+"\n    ")]):t._e(),i("scroller",{attrs:{"has-next":!t.searchStatus&&!t.grouping&&t.optionsLimit<t.options.length,"end-text":"","is-empty":0===t.optionsShow.length},on:{loadNext:t.pageOptions}},[t.searchBar?i("app-search-bar",{ref:"app-search-bar",attrs:{placeholder:"搜索","history-key":t.storageKey},on:{changeSearchStatus:t.onSearchTypeChange},model:{value:t.keyword,callback:function(e){t.keyword=e},expression:"keyword"}}):t._e(),t.searchStatus?[t.keyword?[t.grouping?i("van-collapse",{model:{value:t.activeTab,callback:function(e){t.activeTab=e},expression:"activeTab"}},t._l(t.searchData,(function(e,a){return i("van-collapse-item",{key:a,attrs:{title:e.name,name:a}},t._l(e.children,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit,"render-field":"rename"},on:{click:t.selectItem}})})))}))):t._e(),t.grouping&&!t.searchData.length?i("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容","show-style":"search"}}):t._e(),t.grouping?t._e():[t._l(t.searchData,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit,"render-field":"rename"},on:{click:t.selectItem}})})),t.searchData.length?t._e():i("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容","show-style":"search"}})]]:t._e()]:["-1"===t.selected.id&&t.customAddSupplier(t.selected.name)<0&&t.editorAddData?i("div",{staticClass:"supplier-editor",on:{click:t.closePopup}},[i("span",{staticClass:"title"},[t._v(t._s(t.selected.name))]),i("span",{staticClass:"icon"},[i("i",{staticClass:"iconfont icon-edit margin-r",on:{click:t.rightBtnEvent}}),i("i",{staticClass:"iconfont icon-qualified"})])]):t._e(),t.grouping?i("van-collapse",{model:{value:t.activeTab,callback:function(e){t.activeTab=e},expression:"activeTab"}},t._l(t.optionsShow,(function(e,a){return i("van-collapse-item",{key:a,attrs:{title:e.name,name:a}},t._l(e.children,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit},on:{click:t.selectItem}})})))}))):t._l(t.optionsShow,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit},on:{click:t.selectItem}})})),t.optionsShow.length?t._e():i("loading-status",{attrs:{"is-empty":!0,"empty-text":"暂无数据","show-style":"search"}})]],2)],1):t._e()],1)}),[],!1,null,"e465319c",null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},a646:function(t,e,i){"use strict";var a=i("4e83").a,n=(i("12f4"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("scroller",{ref:"scroller"},[i("measure-detail-place-checkitem",{attrs:{detail:t.detail},on:{changeItems:t.changeItems,changePlace:t.changePlace}}),t.hasMasterCheckitem?["edit"===t.detail.mode||"reedit"===t.detail.mode||"redo"===t.detail.mode?[t._l(t.detail.problemData,(function(e,a){return i("div",{key:a,staticClass:"pt10 bg-white"},[i("item",{attrs:{label:"实测点数",mode:"edit",border:"none"}},[i("template",{slot:"right"},[i("number-input",{attrs:{type:"int positive",range:[1,999]},on:{blur:function(i){t.pointNumChange(e)}},model:{value:e.pointNum,callback:function(i){t.$set(e,"pointNum",i)},expression:"problem.pointNum"}}),i("div",{staticClass:"item-text pl5"},[t._v("个")])],1)],2),i("item",{attrs:{label:"爆点数值",mode:"edit",border:"none"}},[t.drawingUrl?i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[e.realityVal.length?i("div",{staticClass:"item-font"},[t._l(e.realityVal,(function(e,i){return[i?[t._v(",")]:t._e(),t._v(t._s(e.val)+"\n              ")]}))],2):t._e(),i("div",{staticClass:"item-font color-blue",on:{click:function(i){t.markExceedVal(e)}}},[t._v("\n              在户型图标记\n            ")])]):i("div",{staticClass:"item-con",staticStyle:{"margin-right":"-10px"},attrs:{slot:"right"},slot:"right"},[t._l(e.realityVal,(function(a,n){return i("number-input",{key:n,ref:"exceed-point-input",refInFor:!0,staticClass:"mr10 mb10",attrs:{decimal:t.$store.state.measure.valueDecimal,range:t.$store.state.measure.valueRange,"next-event":function(){return t.addExceedVal(e)}},on:{blur:function(i){t.updatedExceedVal(e)}},model:{value:a.val,callback:function(e){t.$set(a,"val",e)},expression:"point.val"}},[n===e.realityVal.length-1?i("i",{staticClass:"icon-minus",attrs:{slot:"extend"},on:{click:function(i){i.stopPropagation(),t.removeExceedVal(e)}},slot:"extend"}):t._e()])})),e.realityVal.length<e.pointNum?i("i",{staticClass:"icon-plus",on:{click:function(i){i.stopPropagation(),t.addExceedVal(e)}}}):t._e()],2)])],1)})),t.inputComplete?i("item",[i("div",{staticClass:"item-font"},[t._v("合格率")]),i("div",{staticClass:"item-text color-theme pl5"},[t._l(t.detail.problemData,(function(e,i){return[i?[t._v(",")]:t._e(),t._v(t._s(t._f("percent")(e.passrate,2))+"\n          ")]}))],2),"edit"===t.detail.mode?i("div",{staticClass:"item-con align-r"},[i("div",{staticClass:"need-repair",on:{click:t.setNeedRepair}},[i("icon",{attrs:{name:t.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),t._v("通知整改\n          ")],1)]):t._e()]):t._e(),t.inputComplete&&t.detail.needRepair?i("user-select",{attrs:{title:"整改人",border:"top",options:t.model.repairOptions,memory:!0},on:{onSelect:t.onSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e()]:t._e(),"edit"===t.detail.mode||"redo"===t.detail.mode?[i("item",{staticClass:"p15 mt10"},[i("item-img-list",{attrs:{"track-text":"实测实量",maxlength:50},on:{callback:t.saveProblem},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1),i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},on:{blur:t.saveProblem},model:{value:t.detail.remark,callback:function(e){t.$set(t.detail,"remark",e)},expression:"detail.remark"}})]:t._e(),"edit"===t.detail.mode||"redo"===t.detail.mode||"reedit"===t.detail.mode?[i("p",{staticClass:"c-label mb10"},[t._v("请选择施工单位")]),t._l(t.detail.problemData,(function(e){return i("single-select",{key:e.checkItem.id,attrs:{title:e.checkItem.name,"page-title":"选择施工单位",placeholder:"请选择施工单位",options:t.model.contractors,mode:"edit"===t.detail.mode||"redo"===t.detail.mode?"edit":"view"},on:{onSelect:t.saveProblem},model:{value:e.contractor,callback:function(i){t.$set(e,"contractor",i)},expression:"problem.contractor"}})}))]:t._e(),"edit"===t.detail.mode||"redo"===t.detail.mode?i("user-select",{attrs:{title:"抄送人",multi:!0,options:t.model.ccOptions,required:!1,memory:!0},on:{onSelect:t.changeCC},model:{value:t.detail.cc,callback:function(e){t.$set(t.detail,"cc",e)},expression:"detail.cc"}}):t._e(),"view"===t.detail.mode?[i("problem-detail-header",{staticClass:"bg-white pr0",attrs:{status:t.detail.status}}),i("item",{attrs:{label:"标段",text:t.detail.place.section.name+"（"+t.detail.place.project.name+"）"}}),t._l(t.detail.problemData,(function(e,a){return i("div",{key:a},[i("item",{attrs:{label:"实测点",text:e.pointNum}}),i("item",{attrs:{label:"合格率"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[t._v("\n            "+t._s(t._f("percent")(e.passrate,2))+"\n            "),t.drawingUrl?i("span",{staticClass:"color-theme ml15",on:{click:t.viewHuxing}},[t._v("\n              "+t._s(e.roomtype_type||"户型图")+"\n            ")]):t._e()])]),e.realityVal.length?i("item",{attrs:{label:"爆点数值"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[t._l(e.realityVal,(function(e,i){return[i?[t._v(",")]:t._e(),t._v(t._s(e.val)+"\n            ")]}))],2)]):t._e()],1)})),t.detail.allowReedit&&"view"===t.detail.mode||t.drawingUrl&&t.detail.problemData.length>1?i("item",{staticClass:"pt0 pb0",attrs:{label:""}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[t.detail.allowReedit&&"view"===t.detail.mode?i("span",{staticClass:"btn-modify",on:{click:function(e){t.changeMode("reedit")}}},[t._v("\n            修改数值\n            "),i("icon",{attrs:{name:"arrow-right"}})],1):t._e(),t.drawingUrl&&t.detail.problemData.length>1?i("span",{staticClass:"btn-modify",on:{click:t.viewHuxing}},[t._v("\n            "+t._s(t.detail.roomtype_type)+"\n            "),i("icon",{attrs:{name:"arrow-right"}})],1):t._e()])]):t._e(),t.detail.remark||t.detail.img.length?i("item",{attrs:{label:"补充说明"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.detail.remark?i("div",{staticClass:"item-font"},[t._v("\n            "+t._s(t.detail.remark)+"\n          ")]):t._e(),i("item-img-list",{attrs:{editabled:!1},model:{value:t.detail.img,callback:function(e){t.$set(t.detail,"img",e)},expression:"detail.img"}})],1)]):t._e(),i("user-select",{attrs:{title:"检查人",mode:"view",date:t.formatDate(t.detail.regist_date),editabled:!1},model:{value:t.detail.regist,callback:function(e){t.$set(t.detail,"regist",e)},expression:"detail.regist"}}),(t.detail.repair_remark||t.detail.repair_image_file&&t.detail.repair_image_file.length)&&"待整改"!==t.detail.status?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[t.detail.repair_remark?i("div",{staticClass:"item-font"},[t._v(t._s(t.detail.repair_remark))]):t._e(),i("item-img-list",{attrs:{editabled:!1,"track-text":"实测实量"},model:{value:t.detail.repair_image_file,callback:function(e){t.$set(t.detail,"repair_image_file",e)},expression:"detail.repair_image_file"}})],1)]):t._e(),!t.detail.repair.id||"待整改"!==t.detail.status&&"已整改"!==t.detail.status?t._e():i("user-select",{attrs:{title:"整改人",mode:"view",options:t.model.repairOptions,date:"已整改"===t.detail.status?t.formatDate(t.detail.repair_date):"",editabled:(t.detail.isChecker||t.detail.isRepair)&&"待整改"===t.detail.status,"before-select":t.beforeSelectRepair},on:{onSelect:t.onSelectRepair},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}),t.detail.isRepair&&"待整改"===t.detail.status?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("item-img-list",{attrs:{maxlength:50,"track-text":"实测实量"},model:{value:t.detail.repair_image_file,callback:function(e){t.$set(t.detail,"repair_image_file",e)},expression:"detail.repair_image_file"}})],1)]):t._e(),t.detail.isRepair&&"待整改"===t.detail.status?i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:t.detail.repair_remark,callback:function(e){t.$set(t.detail,"repair_remark",e)},expression:"detail.repair_remark"}}):t._e(),t.hasContractor?i("item",{attrs:{label:"施工单位"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},t._l(t.detail.problemData,(function(e){return i("p",{key:e.id},[t._v("\n            "+t._s(e.contractor?e.contractor.name:"")+"\n          ")])})))]):t._e(),i("user-select",{attrs:{title:"抄送人",mode:"view",multi:!0,options:t.model.ccOptions,editabled:"已整改"!==t.detail.status},on:{onSelect:t.changeCC},model:{value:t.detail.cc,callback:function(e){t.$set(t.detail,"cc",e)},expression:"detail.cc"}})]:t._e(),"检查完毕"===t.detail.status&&"view"===t.detail.mode?[i("div",{staticClass:"need-repair-bottom",on:{click:t.setNeedRepair}},[i("icon",{attrs:{name:t.detail.needRepair?"checkbox-square-checked":"checkbox-square"}}),t._v("通知整改\n      ")],1),t.detail.needRepair?i("user-select",{attrs:{title:"整改人",options:t.model.repairOptions,memory:!0},model:{value:t.detail.repair,callback:function(e){t.$set(t.detail,"repair",e)},expression:"detail.repair"}}):t._e(),t.detail.needRepair?i("app-button-group",{staticClass:"pt10"},[i("app-button",{attrs:{name:"通知整改"},on:{click:t.setRepair}})],1):t._e()]:t._e(),t.detail.id&&"检查中"===t.detail.status?i("app-button-group",[i("app-button",{attrs:{type:"text",name:"删除此草稿"},on:{click:t.delProblem}})],1):t._e(),"检查中"===t.detail.status||"view"!==t.detail.mode||t.allowMeasureReinspect||t.model.currentUserBatchId!==t.detail.batch_id?t._e():i("app-button-group",[i("app-button",{attrs:{type:"operate",name:"再测一次"},on:{click:t.setRedo}})],1)]:t._e(),i("loading-status",{attrs:{"is-loading":!1,"is-empty":!t.hasMasterCheckitem,"empty-text":"请选择检查项"}})],2)}),[],!1,null,"78eb219e",null);e.a=s.exports},a805:function(t,e,i){"use strict";var a=i("8004").a,n=(i("4381"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"drop-down-group bg-sub-theme border-bottom"},[i("drop-select-place",{attrs:{value:t.place,editabled:t.editabled},on:{onSelect:t.onChangePlace}}),i("drop-select-checkitem",{ref:"drop-select-checkitem",attrs:{value:t.checkitems,"master-checkitem":t.masterCheckitem,options:t.checkitemOptions,place:t.place,"batch-id":t.batchId,"process-mode":t.processMode,mode:t.mode,multi:t.multi,editabled:t.editabled,"is-loading":t.checkitemSelectLoading},on:{onSelect:t.onChangeCheckitem}})],1)}),[],!1,null,"17dcf4d4",null);e.a=s.exports},a876:function(t,e,i){"use strict";i("8bcc")},ad134:function(t,e,i){var a=i("8968");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("9e97926a",a,!0,{sourceMap:!1,shadowMode:!1})},af92:function(t,e,i){var a=i("d0c4");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("495ea63a",a,!0,{sourceMap:!1,shadowMode:!1})},afd5:function(t,e,i){"use strict";var a=i("329b"),n=i("9a11").a,s=(i("83d9"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.show?i("div",{staticClass:"content",style:{top:t.contentTop+"px"},on:{click:function(e){return e.target!==e.currentTarget?null:t.closePopup(e)}}},[i("transition",{attrs:{name:"slide-down"},on:{enter:function(e){t.isOpening=!0},"after-enter":function(e){t.isOpening=!1},leave:function(e){t.isClosing=!0},"after-leave":t.afterClose}},[t.showList?i("div",{staticClass:"box",style:{height:t.listHeight+"px"}},[i("item",{staticClass:"item-hd"},[i("div",{staticClass:"item-text name-parent"}),i("div",{staticClass:"item-info"},[t._v("合格率")]),i("i",{staticClass:"icon-empty"})]),t.options.length?i("div",{ref:"list-wrap",staticClass:"list-wrap"},[t._l(t.options,(function(e,a){return[i("item",{key:a,attrs:{border:"bottom"},on:{click:function(i){t.toggleItem(e)}}},[i("i",{staticClass:"item-triangle",class:{"triangle-right":!t.openSet[e.id],"triangle-down":t.openSet[e.id]}}),i("div",{staticClass:"item-text name-parent"},[t._v(t._s(e.name))]),i("div",{staticClass:"item-info"},[t._v(t._s(t.passrateData[e.id]))]),i("i",{staticClass:"icon-empty"})]),e.children&&e.children.length&&t.openSet[e.id]?t._l(e.children,(function(e,n){return i("item",{key:"sub -"+a+"-"+n,class:{"checkitem-selected":"selected"===t.getItemType(e)||"current"===t.getItemType(e)},attrs:{border:"bottom"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text name-child"},[t._v(t._s(e.name))]),i("div",{staticClass:"item-info",class:{"color-orange":"暂存"===t.getItemInfo(e)}},[t._v("\n                "+t._s(t.getItemInfo(e))+"\n              ")]),i("div",{staticClass:"item-icon"},["blank"===t.getItemType(e)||"single"===t.getItemType(e)?i("icon",{attrs:{name:""}}):t._e(),"arrow"===t.getItemType(e)?i("icon",{attrs:{name:"arrow-right"}}):t._e(),"current"===t.getItemType(e)?i("icon",{attrs:{name:"qualified"}}):t._e(),"checkbox"===t.getItemType(e)?i("icon",{attrs:{name:"checkbox"}}):t._e(),"selected"===t.getItemType(e)?i("icon",{attrs:{name:"checkbox-checked"}}):t._e()],1)])})):t._e()]}))],2):t._e(),i("app-button",{directives:[{name:"show",rawName:"v-show",value:t.multi,expression:"multi"}],staticClass:"btn-confirm",class:{"btn-disabled":!t.allowConfirm},attrs:{name:"确定"},on:{click:t.confirm}}),t.options.length?t._e():i("loading-status",{attrs:{"is-empty":!0,type:"search","empty-text":"未搜索到相关内容"}})],1):t._e()])],1):t._e()}),[],!1,null,"4d9aa552",null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},b09a:function(t,e,i){var a=i("2939");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("65170d73",a,!0,{sourceMap:!1,shadowMode:!1})},b55a:function(t,e,i){"use strict";i("c001")},b6da:function(t,e,i){"use strict";var a=i("329b"),n=i("a300").a,s=i("17cc"),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"户型图","on-close":t.closePopup}},[i("drawing",{staticStyle:{flex:"1"},attrs:{url:t.url,points:t.points,folder:t.folder},on:{onclick:t.onclick}}),"multiple-remark"===t.mode?i("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[i("app-button",{staticStyle:{width:"50%"},attrs:{type:t.points.length?"warning":"normal",plain:""},on:{click:t.undo}},[t._v("\n        撤销\n      ")]),i("app-button",{on:{click:t.sure}},[t._v(" 确定 ")])],1):t._e()],1):t._e()],1)}),[],!1,null,null,null).exports,r=!1;r||(r=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(r.$el));e.a=r},bebe:function(t,e,i){var a=i("6272");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("53478790",a,!0,{sourceMap:!1,shadowMode:!1})},c001:function(t,e,i){var a=i("f53a");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("bd5eb062",a,!0,{sourceMap:!1,shadowMode:!1})},c070:function(t,e,i){var a=i("574c");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("35590dcb",a,!0,{sourceMap:!1,shadowMode:!1})},c36f:function(t,e,i){var a=i("5454");(t.exports=i("690e")(!1)).push([t.i,".zjapp .drawing-con[data-v-32c61736]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-32c61736]{background:url("+a(i("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-32c61736]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-32c61736],.zjapp .loading-text[data-v-32c61736]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-32c61736]{color:#ff3d3d}",""])},c40a:function(t,e,i){"use strict";(function(t){i("cc57"),i("6d57"),i("6f84"),i("163d");var a=i("a32d"),n=i.n(a),s=i("e900"),o=i("3122"),r=i("4ad6"),l=i("3bd5"),c=i("1b7e");function d(t){var e=t.changedTouches.length,i=t.touches.length;return 1===e||2===e||2===i}function h(t){return 1===t.touches.length}e.a={name:"Drawing",props:{url:{type:String},points:{type:Array,default:function(){return[]}},regions:{type:Array,default:function(){return[]}},pointColor:{type:String,default:"#ff4546"},pointRadius:{type:Number,default:7},scaleMax:{type:Number,default:4},clickDelay:{type:Number,default:500},folder:{type:String,default:"house-image"},onlineMode:{type:Boolean,default:!1},contentScroll:{type:Boolean,default:!0}},data:function(){return{isDownloading:!1,error:"",canvas:null,ctx:null,img:null,src:"",width:0,height:0,x:0,y:0,scale:1,defaultScale:1,pixelRatio:1,markPosition:null,markPositionImageData:[],markCoordinates:[],pinchRatio:0,scaleBetween:[],isPinch:!1,clickPoints:[],touchStart:{x:0,y:0,cx:0,cy:0,time:0}}},watch:{url:function(){this.getImage()},points:function(t){this.ctx&&this.draw()},regions:function(t){this.ctx&&this.draw()}},mounted:function(){this.getImage()},destroyed:function(){this.canvas&&(this.canvas.width=0,this.canvas.height=0)},methods:{getImage:function(){var e=this;if(this.isDownloading=!0,this.url){var i=l.a.getUser().user_id,a=n.a.replaceAll(this.url,"\\?x-oss-process=image\\/resize,","@"),s=n.a.strRightBack(a,"/");if(!s)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var d=[r.a.appImagePath()+i+"/"+this.folder+"/"+s,r.a.appImagePath()+i+"/house-image/"+s,r.a.appImagePath()+i+"/drawing/"+s,r.a.appImagePath()+i+"/location-image/"+s,r.a.appImagePath()+i+"/images/"+s,r.a.appDataPath()+i+"/"+this.folder+"/"+s,r.a.appDataPath()+i+"/house-image/"+s,r.a.appDataPath()+i+"/drawing/"+s,r.a.appDataPath()+i+"/location-image/"+s,r.a.appDataPath()+i+"/images/"+s],h=Promise.resolve();return"dev"===APP_ENV||this.onlineMode?h=h.then((function(){return e.url})):t.each(d,(function(t){h=h.then((function(e){return e||r.a.isFileExists(t).then((function(e){if(e)return o.a._fixPath(t)}))}))})),h.then((function(t){if(!t)return c.a.getHasNetwork().then((function(t){return t?o.a.download(e.url,!0,e.folder).then((function(t){e.src=t})):Promise.reject("当前无网络")}));e.src=t})).then((function(){e.src?(e.img=new Image,e.img.onload=function(){e.img.complete?(e.isDownloading=!1,e.$nextTick(e.init)):(e.error="加载图片失败",e.isDownloading=!1)},e.img.onerror=function(){e.error="加载图片失败",e.isDownloading=!1},e.img.src=e.src):(e.error="下载户型图失败",e.isDownloading=!1)})).catch((function(i){e.error=t.isString(i)?i:"下载户型图失败",e.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1},init:function(){if(this.$refs["drawing-canvas"]){var t=this.$refs.content;this.canvas=this.$refs["drawing-canvas"],this.ctx=this.canvas.getContext("2d"),this.width=t.offsetWidth,this.height=t.offsetHeight,this.pixelRatio=this.getPixelRatio(this.ctx),this.canvas.style.height=this.height+"px",this.canvas.style.width=this.width+"px",this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,!this.ctx.extended&&Object(s.a)(this.ctx),this.bindTouchEvent(),this.calc(),this.draw()}},getPixelRatio:function(t){var e=t.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/e},calc:function(t){var e=this.width/this.img.width,i=this.img.height*e,a=this.height||i;i>this.height&&(e*=a/i),this.scale=e*this.pixelRatio,this.defaultScale=this.scale,this.scaleBetween=[this.scale,this.scale*this.scaleMax]},winToCanvas:function(t,e){var i=this.canvas.getBoundingClientRect();return{x:t-i.left*(this.canvas.width/(i.width*this.pixelRatio)),y:e-i.top*(this.canvas.height/(i.height*this.pixelRatio))}},isBoundary:function(t){switch(t){case"t":if(0===this.y)return!0;break;case"r":if(this.x<=this.canvas.width-this.img.width*this.scale)return!0;break;case"b":if(this.y<=this.img.height*this.scaleBetween[0]-this.img.height*this.scale)return!0;break;case"l":if(0===this.x)return!0}return!1},bindTouchEvent:function(){this.canvas.addEventListener("touchstart",this.onTouchstart),this.canvas.addEventListener("touchmove",this.onTouchmove),this.canvas.addEventListener("touchend",this.touchMoveAndEndHandler)},unbindTouchEvent:function(){this.canvas.removeEventListener("touchstart",this.onTouchstart),this.canvas.removeEventListener("touchmove",this.onTouchmove),this.canvas.removeEventListener("touchend",this.touchMoveAndEndHandler)},onTouchstart:function(t){if(this.isPinch=!1,h(t)){var e=t.touches[0],i=this.winToCanvas(e.clientX,e.clientY);this.touchStart={x:i.x,y:i.y,cx:e.clientX,cy:e.clientY,time:Date.now()}}else if(d(t)){var a,n=t.touches[0],s=t.touches[1],o=this.winToCanvas(n.clientX,n.clientY),r=this.winToCanvas(s.clientX,s.clientY);a=Math.sqrt(Math.pow(r.x-o.x,2)+Math.pow(r.y-o.y,2)),this.pinchRatio=this.scale/a}},onTouchmove:function(t){if(!1===this.contentScroll&&(t.preventDefault(),t.stopPropagation()),h(t))this.touchStart.cy>t.pageY&&this.isBoundary("b")||this.touchStart.cy<t.pageY&&this.isBoundary("t")||this.touchStart.cx>t.pageX&&this.isBoundary("r")||this.touchStart.cx<t.pageX&&this.isBoundary("l")||t.stopPropagation(),this.touchMoveAndEndHandler(t);else if(d(t)){t.stopPropagation();var e,i,a,n,s,o=t.touches[0],r=t.touches[1],l=this.winToCanvas(o.clientX,o.clientY),c=this.winToCanvas(r.clientX,r.clientY);i=Math.sqrt(Math.pow(c.x-l.x,2)+Math.pow(c.y-l.y,2)),this.isPinch=!0,(e=this.pinchRatio*i)>this.scaleBetween[0]&&e<this.scaleBetween[1]&&(n={x:((a={x:(l.x+c.x)/2*this.pixelRatio,y:(l.y+c.y)/2*this.pixelRatio}).x-this.x)/(this.img.width*this.scale),y:(a.y-this.y)/(this.img.height*this.scale)},a.newX=this.x+this.img.width*e*n.x,a.newY=this.y+this.img.height*e*n.y,s={x:a.newX-a.x,y:a.newY-a.y},e<this.scale&&this.setRange(this.x-s.x,this.y-s.y,e),e>this.scale&&(this.x=this.x-s.x,this.y=this.y-s.y),e!==this.scale&&(this.scale=e,this.draw()))}},touchMoveAndEndHandler:function(t){var e,i,a=t.type,n={touchmove:t.touches[0],touchend:t.changedTouches[0]}[a],s=this.winToCanvas(n.clientX,n.clientY);e=(s.x-this.touchStart.x)*this.pixelRatio,i=(s.y-this.touchStart.y)*this.pixelRatio,"touchend"===a&&Date.now()-this.touchStart.time<this.clickDelay&&Math.abs(n.clientX-this.touchStart.cx)<6&&Math.abs(n.clientY-this.touchStart.cy)<6?this.clickHandler(t):"touchmove"!==a||this.isPinch||(this.touchStart.x=s.x,this.touchStart.y=s.y,this.setRange(this.x+e,this.y+i,this.scale),this.draw())},isCanClick:function(t){for(var e=!1,i=0;i<this.markPosition.length;i++)if(parseFloat(t.x)>parseFloat(this.markPosition[i].x)&&parseFloat(t.x)<parseFloat(this.markPosition[i].x)+parseFloat(this.markPosition[i].w)&&parseFloat(t.y)>parseFloat(this.markPosition[i].y)&&parseFloat(t.y)<parseFloat(this.markPosition[i].y)+parseFloat(this.markPosition[i].h)){e=!0;break}return e},clickHandler:function(t){var e=t.changedTouches[0];if(this.mark){var i=this.winToCanvas(e.clientX,e.clientY),a={x:(i.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),y:(i.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio)};if(i={x:a.x*this.img.width,y:a.y*this.img.height},this.isCanClick(i)){this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(i.x*this.scale/this.pixelRatio+this.x/this.pixelRatio,i.y*this.scale/this.pixelRatio+this.y/this.pixelRatio,this.scale===this.defaultScale?this.pointRadius:this.pointRadius*(1+(this.scale-this.defaultScale)/this.pixelRatio),0,2*Math.PI,!1),this.ctx.fill(),this.ctx.restore();var n={x:i.x,y:i.y};this.markCoordinates.push(n),this.points.push(n)}return!1}this.redraw(t,this.winToCanvas(e.clientX,e.clientY))},setRange:function(t,e,i){var a=this.img.width*i,n=this.img.height*i,s=this.canvas.width,o=this.canvas.height,r=this.img.height*this.scaleBetween[0];t=a<s?(s-a)/2:(t=t+a<s?s-a:t)>0?0:t,e=n<o?(o-n)/2:(e=e+n<r?r-n:e)>0?0:e,this.x=t,this.y=e},draw:function(){this.setRange(this.x,this.y,this.scale),this.drawImage(),this.drawPoints(),this.drawRegions()},redraw:function(t,e){this.clickPoints=[],this.drawImage(),this.drawPoints(e),this.drawRegions(e),this.clickCallback(t,this.clickPoints)},clickCallback:function(t,e){var i;e.some((function(t,e){return"points"===t.tag?(i=t,!0):(i=t,!1)}));var a=t.changedTouches[0],n=this.winToCanvas(a.clientX,a.clientY),s=(n.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),o=(n.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio);(n={x:parseFloat((s*this.img.width).toFixed(2)),y:parseFloat((o*this.img.height).toFixed(2))}).y>=0&&n.x>=0&&n.y<=this.img.height&&n.x<=this.img.width&&this.$emit("onclick",{type:i?"point":"",points:this.points,point:i,clickPoint:i,x:n.x,y:n.y,scale:this.scale/this.pixelRatio})},drawImage:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.img,0,0,this.img.width,this.img.height,this.x,this.y,this.img.width*this.scale,this.img.height*this.scale)},drawPoints:function(t){var e=this;this.points.forEach((function(i,a){e.drawPoint(i.x*e.scale/e.pixelRatio+e.x/e.pixelRatio,i.y*e.scale/e.pixelRatio+e.y/e.pixelRatio,e.pointRadius,a,t,i.color)}))},drawPoint:function(t,e,i,a,n,s){this.ctx.save(),this.ctx.beginPath(),this.ctx.shadowBlur=i/2,this.ctx.shadowColor="black",this.ctx.fillStyle=s||this.pointColor,this.ctx.arc(t,e,i,0,2*Math.PI,!1),this.ctx.fill(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.ctx.restore(),i*=2,this.ctx.save(),this.ctx.beginPath(),this.ctx.strokeStyle="transparent",this.ctx.fillStyle="transparent",this.ctx.rect(t-i,e-i,2*i,2*i),this.ctx.stroke(),this.ctx.restore(),n&&this.ctx.isPointInPath(n.x*this.pixelRatio,n.y*this.pixelRatio)&&this.clickPoints.push({tag:"points",pos:n,index:a})},drawRegions:function(t){var e=this;this.regions&&this.regions.length&&this.regions.forEach((function(i,a){var n,s,o,r;e.ctx.beginPath(),i.area.forEach((function(t,i){var a=t[0]*e.scale/e.pixelRatio+e.x/e.pixelRatio,l=t[1]*e.scale/e.pixelRatio+e.y/e.pixelRatio;i?e.ctx.lineTo(a,l):e.ctx.moveTo(a,l),n=void 0===n?a:n<a?n:a,s=void 0===s?a:s>a?s:a,o=void 0===o?l:o<l?o:l,r=void 0===r?l:r>l?r:l})),e.ctx.closePath(),e.ctx.fillStyle="rgba(255, 144, 0, 0.4)",e.ctx.fill(),e.ctx.lineWidth=3,e.ctx.strokeStyle="#feda8e",e.ctx.stroke(),e.ctx.lineWidth=2,e.ctx.strokeStyle="rgba(0, 0, 0, 0.8)",e.ctx.stroke(),t&&e.ctx.isPointInPath(t.x*e.pixelRatio,t.y*e.pixelRatio)&&e.clickPoints.push({tag:"region",pos:t,index:a,regionData:i}),e.ctx.font='18px bold -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',e.ctx.textAlign="center",e.ctx.lineWidth=4,e.ctx.strokeStyle="#ffffff",e.ctx.strokeText(i.name,(s+n)/2,(r+o)/2+10),e.ctx.fillStyle="#111111",e.ctx.fillText(i.name,(s+n)/2,(r+o)/2+10)}))}}}}).call(this,i("391c"))},d0c4:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .content[data-v-4d9aa552]{position:fixed;width:100%;bottom:0;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-4d9aa552]{display:flex;flex-direction:column;background-color:#fff}.zjapp .list-wrap[data-v-4d9aa552]{flex:1;background-color:#fff;height:465px;overflow:auto;scroll-behavior:smooth}.zjapp .item[data-v-4d9aa552]{padding:3px 15px 3px 28px;align-items:center}.zjapp .item-info[data-v-4d9aa552]{width:80px;text-align:center;font-size:10px;color:#999}.zjapp .item .item-icon[data-v-4d9aa552]{width:44px;height:34px;line-height:34px;text-align:right;font-size:14px}.zjapp .item .icon-arrow-right[data-v-4d9aa552]{color:#c8c8c8}.zjapp .item .icon-checkbox[data-v-4d9aa552],.zjapp .item .icon-checkbox-checked[data-v-4d9aa552]{vertical-align:top;margin-top:7.5px}.zjapp .item .icon-qualified[data-v-4d9aa552]{color:#4275e8}.zjapp .icon-empty[data-v-4d9aa552]{width:44px}.zjapp .item-hd[data-v-4d9aa552]{padding:8px 15px 0 15px}.zjapp .item-hd .item-info[data-v-4d9aa552]{width:48px;margin:0 16px;height:16px;line-height:16px;color:#999;border-radius:8px;background-image:#f4f4f4}.zjapp .name-parent[data-v-4d9aa552]{font-size:16px;font-weight:700;color:#111}.zjapp .name-child[data-v-4d9aa552]{font-size:14px;color:#333}.zjapp .item-triangle[data-v-4d9aa552]{position:absolute;width:0;height:0;border:5px solid #c8c8c8}.zjapp .triangle-right[data-v-4d9aa552]{border-color:transparent transparent transparent #c8c8c8;left:10px;top:15px}.zjapp .triangle-down[data-v-4d9aa552]{border-color:#c8c8c8 transparent transparent transparent;left:10px;top:17.5px}.zjapp .btn-confirm[data-v-4d9aa552]{background-color:#ebf1ff;background-image:none;color:#4275e8;border-radius:0}.zjapp .btn-confirm.btn-disabled[data-v-4d9aa552]{background-color:#f4f4f4;color:#b2b2b2}",""])},d0fb:function(t,e,i){"use strict";(function(t){var a=i("fd50"),n=i("bcc7"),s=i("515e"),o=i("e89f"),r=i("07d2"),l=i("7bac"),c=i("a7c3"),d=i("4360");e.a={name:"CheckGuideList",components:{Item:r.a},mixins:[o.a],store:d.a,props:{data:{type:String,default:""}},data:function(){return{show:!1,isLoading:!0,listData:[],module:"",itemId:"",batchId:"",sectionId:"",options:""}},computed:{moduleAttribute:function(){return this.$store.state.global.moduleAttribute}},mounted:function(){this.data=[]},methods:{openPopup:function(e){var i,n=this;for(var s in this.value=!0,this.show=!0,this.module=e.module,this.itemId=e.itemId,this.batchId=e.batchId,this.sectionId=e.sectionId,this.options=e.options,this.$emit("open"),e)this[s]=e[s];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module];var o=!1;t.isEmpty(this.itemId)?!t.isEmpty(this.checkType)&&t.isEmpty(this.sectionId)?i=this.initByType():t.isEmpty(this.batchId)?t.isEmpty(this.options)?t.isEmpty(this.sectionId)?i=a.a.when():(o=!0,i=this.initByBidsection()):i=this.initByOptions():i=this.initByBatch():i=this.initById(),this.isLoading=!0,i.then((function(e){var i=n.moduleAttribute[n.module]||{};!t.isEmpty(i)&&i.setUsualItems&&o?l.a.getUserKey(n.mmkvCode()).then((function(t){t=null===t?e:n.mergeArray(n.deepClone(e),t),n.listData=t||[],n.isLoading=!1})):(n.listData=e||[],n.isLoading=!1)}))},mmkvCode:function(){var t=this.moduleAttribute[this.module]||{};return c.a[t.mmkv_item]+"_"+this.sectionId},mergeArray:function(e,i){var a=this;return t.filter(e,(function(e){var n=i[e.id];return t.isEmpty(e.subitem)||(e.subitem=a.mergeArray(e.subitem,i)),!t.isEmpty(n)||"desc"===e.type}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},clickItem:function(t){t.subitem&&t.subitem.length?this.$set(t,"isOpen",!t.isOpen):"special-inspect"===this.module?s.a.openPopup({itemId:t.id,module:this.module}):s.a.openPopup({itemId:t.item_id,module:this.module})},initById:function(){var t=this;if("special-inspect"!==this.module)return n.a.getCheckItem(this.itemId,this.checkType).then((function(e){return e?t.sectionId?n.a.getBidSectionCheckItemListByCode(t.sectionId,e.code):n.a.getCheckItemTreeByCode(e.code):a.a.when()}))},initByType:function(){return n.a.getCheckItemGuidelineList(this.checkType)},initByBatch:function(){return a.a.when()},initByBidsection:function(){return n.a.getBidSectionCheckItemTreeByType(this.sectionId,this.checkType)},initByOptions:function(){return a.a.resolve(this.options)},deepClone:function(t){return JSON.parse(JSON.stringify(t))}}}}).call(this,i("391c"))},d871:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .select-con[data-v-dbd87ef2]{position:relative;padding:7px 40px 7px 15px;height:50px;overflow:hidden}.zjapp .select-con[data-v-dbd87ef2]:not(:first-child){border:none;background-image:linear-gradient(90deg,#d7e0f7,#d7e0f7 50%,transparent 0);background-size:1px 100%;background-repeat:no-repeat;background-position:0 0}.zjapp .select-con>*[data-v-dbd87ef2]{pointer-events:none}.zjapp .select-hd[data-v-dbd87ef2]{line-height:14px;font-size:10px}.zjapp .select-bd[data-v-dbd87ef2],.zjapp .select-hd[data-v-dbd87ef2]{color:#333;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.zjapp .select-bd[data-v-dbd87ef2]{margin-top:2px;line-height:20px;font-size:14px}.zjapp .select-arrow[data-v-dbd87ef2]{position:absolute;top:5px;right:0;width:40px;height:40px;line-height:40px;font-size:16px;color:#c8c8c8;text-align:center}.zjapp .select-disabled[data-v-dbd87ef2]{background-color:#f5f7fb}.zjapp .select-disabled .select-bd[data-v-dbd87ef2],.zjapp .select-disabled .select-hd[data-v-dbd87ef2]{color:#666}.zjapp .select-disabled .select-arrow[data-v-dbd87ef2]{display:none}",""])},da1c:function(t,e,i){"use strict";i("163d");var a=i("65a8"),n={name:"ProblemHeader",props:{status:{type:String,default:""},statusText:{type:String,default:""},level:{type:String,default:""},isTimeout:{type:Boolean,default:!1},sentBackTimes:{type:[Number,String],default:0}},data:function(){return{edOptions:{}}},created:function(){var t=this;a.a.getOptions("紧急程度").then((function(e){t.edOptions=e}))}},s=(i("1f63"),i("17cc")),o=Object(s.a)(n,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",t._g({staticClass:"problem-detail-header border-bottom"},t.$listeners),[i("div",{staticClass:"status",class:{"待整改":"status-red","不合格":"status-red","已退回":"status-red","待复验":"status-orange","已放水待验收":"status-orange","检查中":"status-orange","待验收":"status-orange","已通过":"status-green","已整改":"status-green","已提交":"status-green","合格":"status-green","检查完毕":"status-green","已验收":"status-green","已关闭":"status-black","进度正常":"status-green","进度滞后":"status-red","验收中":"status-orange","已抽验":"status-green"}[t.status]},[t._v(t._s(t.statusText||t.status))]),"紧急"===t.level||"特急"===t.level?i("span",{staticClass:"urgent"},[t._v(t._s(t.edOptions[t.level]))]):t._e(),t.isTimeout?i("span",{staticClass:"timeout"},[t._v("超时")]):t._e(),t.sentBackTimes>0?i("span",{staticClass:"return"},[t._v("退回"+t._s(t.sentBackTimes)+"次")]):t._e(),t._t("operat")],2)}),[],!1,null,"0901aadd",null);e.a=o.exports},dc33:function(t,e,i){"use strict";i("9c76")},dc98:function(t,e,i){"use strict";i("0732")},e223:function(t,e,i){"use strict";var a=i("c40a").a,n=(i("0aac"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",t._g({ref:"content",staticClass:"drawing-con"},t.$listeners),[t.isDownloading?[i("p",[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),i("p",{staticClass:"loading-text"},[t._v("正在下载...")])]:[t.error?t._e():i("canvas",{ref:"drawing-canvas"}),t.error?i("p",{staticClass:"error-text"},[t._v(t._s(t.error))]):t._e()]],2)}),[],!1,null,"fba5990a",null);e.a=s.exports},e2a8:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .status-total-bar[data-v-be07cd9c]{display:flex;flex-direction:row;text-align:center}.zjapp .total-item[data-v-be07cd9c]{flex:1;line-height:20px;padding:10px 5px 0;color:#111;font-size:12px}.zjapp .total-status[data-v-be07cd9c]{white-space:nowrap}.zjapp .total-status[data-v-be07cd9c]:before{content:"";width:10px;height:10px;display:inline-block;vertical-align:top;margin:5px 5px 0 0;background-color:#ddd;border-radius:50%}.zjapp .total-status-orange[data-v-be07cd9c]:before{background-color:#fc8b01}.zjapp .total-status-orange2[data-v-be07cd9c]:before{background-color:#ff8e24}.zjapp .total-status-white2[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #dcdcdc}.zjapp .total-status-red[data-v-be07cd9c]:before{background-color:#ff3d3d}.zjapp .total-status-green[data-v-be07cd9c]:before{background-color:#0bc666}.zjapp .total-status-white[data-v-be07cd9c]:before{background-color:#fff}.zjapp .total-status-white-border[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #dcdcdc}.zjapp .total-status-blue[data-v-be07cd9c]:before{background-color:#4174e9}.zjapp .total-status-purple-border[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #796bfb}.zjapp .total-status-green-border[data-v-be07cd9c]:before{background-color:#fff;border:1px solid #0bc666}.zjapp .status-total-bar.-abs-top-right[data-v-be07cd9c]{position:absolute;top:0;right:13px}.zjapp .status-total-bar.-abs-top-right .total-item[data-v-be07cd9c]{padding-left:3px;padding-right:3px}.zjapp .status-total-bar.-abs-top-right .total-status[data-v-be07cd9c]:before{margin-right:2px}',""])},e2dd:function(t,e,i){"use strict";(function(t){i("e697");var a=i("774b"),n=i("07d2"),s=i("a805"),o=i("da1c"),r=i("f546"),l=i("0771"),c=i("e68e"),d=i("3c64"),h=i("cd05"),p=i("4ce9"),u=i("e2a7"),f=i("a37e"),m=i("7798"),g=i("6bf2"),v=i.n(g),b=i("5a71"),x=i("bcc7"),y=i("a500"),w=i("a18c"),k=i("f7e2");e.a={name:"MeasureDetailTemplate3",components:{Scroller:a.a,item:n.a,MeasureDetailPlaceCheckitem:s.a,ProblemDetailHeader:o.a,StatusTotalBar:r.a,Drawing3:l.a,ItemImgList:c.a,ItemTextarea:d.a,UserSelect:h.a,SingleSelect:b.a,drawingMeasure:p.a},mixins:[k.a],props:{detail:{type:Object,default:function(){}}},data:function(){return{model:f.a}},computed:{masterCheckitem:function(){return this.$store.state.measure.detailMasterCheckitem},hasMasterCheckitem:function(){return this.masterCheckitem&&this.masterCheckitem.length},totalData:function(){var t=this.detail.pointsTotal||{};return[{status:"待整改",color:"red",total:t.repair},{status:"待复验",color:"orange",total:t.reinspect},{status:"已通过",color:"green",total:t.pass},{status:"非正常关闭",color:"gray",total:t.close}]},drawingData:function(){var e=[];return t.each(this.detail.problemData,(function(t){e.push({checkitem:t.checkItem,passrateMode:t.passrate_mode,points:t.realityVal})})),console.log("drawingData =========",e),e}},methods:{formatDate:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"YYYY-MM-DD HH:mm";return v()(t).format(e)},changeMode:function(e){var i=this;this.isProblemExists().then((function(){u.a.confirm("今天24:00前可修改，是否现在修改？",{okText:"修改"}).then((function(a){a&&(i.detail.mode=e,i.detail.needRepair=!1,window.setTimeout((function(){i.detail.id===i.$store.state.measure.repairData.id?i.$store.commit("measure/SET_REPAIR_DATA",t.clone(i.detail)):i.detail.id===i.$store.state.measure.supervisionData.id?i.$store.commit("measure/SET_SUPERVISION_DATA",t.clone(i.detail)):i.detail.id===i.$store.state.measure.constructData.id&&i.$store.commit("measure/SET_CONSTRUCT_DATA",t.clone(i.detail)),i.$refs.scroller.scrollTop=0}),30))}))}))},setNeedRepair:function(){var e=this,i=this.detail,a=this.model.place,n=this.masterCheckitem[0],s=Promise.resolve();this.$set(this.detail,"needRepair",!this.detail.needRepair),i.needRepair&&((i.needRepair&&t.isEmpty(i.repair)||!i.repair.id)&&(s=x.a.getBidSectionCheckItemInfo(i.proj_id,a.section.id,n.id,"实测实量").then((function(t){var i=t.repair[0]||{};e.$set(e.detail,"repair",i)})).then((function(){y.a.addTrack("实测实量-通知整改")}))),s.then((function(){e.beforeSelectRepair()})))},isProblemExists:function(){var t=this.detail;return m.a.isProblemExists(t.id).then((function(t){if(!t)return u.a.alert("数据有更新"),w.a.go(-1),Promise.reject({mgs:"问题不存在",code:-1})}))},beforeSelectRepair:function(e){var i=this,a=this.detail,n=Promise.resolve(!0);return e=e||this.detail.repair,"view"===a.mode&&(n=this.isProblemExists()),n.then((function(){if((a.isRepairMode||i.allowMeasureReinspect)&&t.some(a.reinspect,{id:e.id}))return u.a.alert("整改人与复验人不能相同"),Promise.reject("整改人与复验人不能相同")})).catch((function(t){$log.error(t)})),n},onSelectRepair:function(){var t=this,e=this.detail;if("reedit"!==e.mode&&"待整改"===e.status)return m.a.changeRepair(e).then((function(){return t.reloadDetail()})).then((function(){t.$forceUpdate()}))},beforeConfirmReinspect:function(e){if(!t.isEmpty(this.detail.repair)&&t.some(e,{id:this.detail.repair.id}))return u.a.alert("复验人与整改人不能相同"),!1},onSelectReinspect:function(){return m.a.changeReinspect(this.detail).then((function(){}))},onClickPoint:function(t){this.$router.push({name:"MeasurePointDetail",params:{id:t.pointId}})},checkSubmitData:function(){var e=this;this.$refs.drawing.inputBlur();var i=this,a=i.detail,n=i.model.hasVal,s=a.problemData.length>1,o=t.unzip(t.map(a.problemData,(function(e){return t.map(e.realityVal,(function(t){return t.val}))}))),r=t.some(a.problemData,(function(i){return!t.some(i.realityVal,(function(t){return e.model.hasVal(t.val)}))})),l=[],c=[],d=[],h=[],p=t.some(a.problemData,(function(t){return!t.realityVal||!t.realityVal.length})),f=!1,m=!1,g=!0;if(t.each(a.problemData,(function(e){if(!1===g)return!1;var i;if(5===e.passrate_mode){if(t.each(e.realityVal,(function(e,a,s){var o=t.find(s,(function(t){return e!==t&&t.area===e.area&&t.label===e.label}));!n(e.val)&&n(o.val)||n(e.val)&&!n(o.val)?(l.push(e),m=!0):(i=t.filter(s,(function(t){return t.area===e.area})),t.find(i,(function(t){return n(t.val)}))||(l.push(e),f=!0));!n(e.setVal)&&n(e.val)&&n(o.val)&&(c.push(e),m=!0),h[a]||(h[a]=[]),h[a].push(e)})),5===e.passrate_mode){if(f)return u.a.alert("宽度、高度至少需完整录入其中一个"),g=!1,!1;if(m)return u.a.alert("请录全实测值和设计值"),g=!1,!1}}else t.each(e.realityVal,(function(t,i){n(t.val)||l.push(t),3!==e.passrate_mode&&6!==e.passrate_mode&&14!==e.passrate_mode&&15!==e.passrate_mode&&16!==e.passrate_mode&&17!==e.passrate_mode||n(t.setVal)||c.push(t),h[i]||(h[i]=[]),h[i].push(t)}))})),!1===g)return g;if(t.each(h,(function(e){!t.some(e,(function(t){return i.model.hasVal(t.val)}))&&(d=d.concat(e))})),!s&&l.length)return t.each(l,(function(t){t.isWarning=!0})),i.$refs.drawing.update(a),u.a.alert("请填写所有的实测值"),!1;if(!s&&c.length)return t.each(c,(function(t){t.isWarning=!0})),i.$refs.drawing.update(a),u.a.alert("请填写所有的设计值"),!1;if(s&&r&&o.length)return u.a.alert("每个检查项至少录一个点"),!1;if(p)return u.a.alert("请点击户型图录入测量数据"),!1;s&&d.length&&(t.each(d,(function(t){t.isWarning=!0})),this.$refs.drawing.update(a));var v=t.isEmpty(a.repair)||!a.repair.id;if((a.needRepair||"待整改"===a.status)&&v)return u.a.alert("请选择整改人"),!1;if((a.needRepair||"待整改"===a.status&&a.isRepairMode)&&this.allowMeasureReinspect){if(t.isEmpty(a.reinspect))return u.a.alert("请选择复验人"),!1;if(t.some(a.reinspect,{id:a.repair.id}))return u.a.alert("整改人与复验人不能相同"),!1}return!t.find(a.problemData,(function(e){return t.isEmpty(e.contractor)}))||(u.a.alert("请选择施工单位"),!1)},setRepair:function(){var e=this,i=t.clone(this.detail);if(!t.isEmpty(i.repair)&&i.repair.id){if(this.allowMeasureReinspect){if(t.isEmpty(i.reinspect))return void u.a.alert("请选择复验人");if(t.some(i.reinspect,{id:i.repair.id}))return void u.a.alert("整改人与复验人不能相同")}return m.a.setRepair(i).then((function(){e.reloadDetail()}))}u.a.alert("请选择整改人")},reloadDetail:function(){var t=this;Promise.resolve().then((function(){return t.$route.query.problemId?f.a.loadDetailById(t.$route.query.problemId):f.a.loadDetailByIdentity(f.a.tabsIdentity)}))},onDrawingChange:function(t){console.log("onDrawingChange ---------",t)}}}}).call(this,i("391c"))},e3df:function(t,e,i){"use strict";i("f5e2")},e900:function(t,e,i){"use strict";i.d(e,"a",(function(){return a})),i.d(e,"b",(function(){return n}));i("f548");function a(t){var e,i,a,n=(i=(e=t).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1,(window.devicePixelRatio||1)/i);1!==n&&(!function(t,e){for(var i in t)t.hasOwnProperty(i)&&e(t[i],i)}({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(e,i){var a;t[i]=(a=t[i],function(){var t,i,s=Array.prototype.slice.call(arguments);if("all"===e)s=s.map((function(t){return t*n}));else if(Array.isArray(e))for(t=0,i=e.length;t<i;t++)s[e[t]]*=n;return a.apply(this,s)})})),t.stroke=(a=t.stroke,function(){this.lineWidth*=n,a.apply(this,arguments),this.lineWidth/=n}),t.fillText=function(t){return function(){var e=Array.prototype.slice.call(arguments);e[1]*=n,e[2]*=n,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e*n+i})),t.apply(this,e),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e/n+i}))}}(t.fillText),t.strokeText=function(t){return function(){var e=Array.prototype.slice.call(arguments);e[1]*=n,e[2]*=n,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e*n+i})),t.apply(this,e),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e/n+i}))}}(t.strokeText),t.extended=!0)}var n=function(t){var e,i;(e=t).getContext=(i=e.getContext,function(t){var e,n,s=i.call(this,t);return"2d"===t&&(e=s.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||s.mozBackingStorePixelRatio||s.msBackingStorePixelRatio||s.oBackingStorePixelRatio||s.backingStorePixelRatio||1,(n=(window.devicePixelRatio||1)/e)>1&&(this.style.height=this.height+"px",this.style.width=this.width+"px",this.width*=n,this.height*=n)),a(s),s})}},e94b:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .need-repair[data-v-5c6caac0]{height:46px;line-height:18px;padding:14px 15px;margin-top:10px;font-size:16px;color:#666}.zjapp .need-repair .icon[data-v-5c6caac0]{display:inline-block;vertical-align:top;margin-right:7px}.zjapp .c-label[data-v-5c6caac0]{color:#999;font-size:12px;line-height:17px;padding:14px 15px 8px;background-color:#f4f4f4}.zjapp .btn-reedit[data-v-5c6caac0]{width:80px;padding:12px 0;line-height:22px;font-size:14px;text-align:center;color:#4275e8}.zjapp .btn-reedit .icon[data-v-5c6caac0]{margin-top:5px;font-size:12px;vertical-align:top}.zjapp .item-text_special[data-v-5c6caac0]{line-height:23px;display:inherit}",""])},f1e4:function(t,e,i){"use strict";(function(t){i("5ab2"),i("e10e");var a=i("28f8"),n=(i("9e76"),i("6d57"),i("9a33"),i("f548"),i("cc57"),i("4ad6")),s=i("e89f"),o=i("bcc7"),r=i("3122"),l=i("6e1b"),c=i("c130"),d=i("0636");function h(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function p(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?h(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):h(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"CheckGuideDetail",components:{},mixins:[s.a],data:function(){return{show:!1,isLoading:!0,isImageDownloading:!1,title:"",content:[],module:"",itemId:""}},methods:{openPopup:function(e){var i=this;for(var a in this.value=!0,this.show=!0,this.module=e.module,this.itemId=e.itemId,this.$emit("open"),e)this[a]=e[a];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module],this.isLoading=!0,("special-inspect"===this.module?l.a.getSpecialInspectCheckItemDetail(this.itemId):"templet-plan"===this.module?c.a.getTempletDetail(this.itemId):"material"===this.module?d.a.getMaterialDetail(this.itemId):o.a.getCheckItem(this.itemId,this.checkType)).then((function(e){console.log("checkitemData",e),i.checkitemData=e,i.title=e.full_name||e.name,"special-inspect"!==i.module&&"inspect"!==i.module&&"fly-inspect"!==i.module&&"material"!==i.module||(e.content=e.guideline||e.content);var a=e.content?e.content.trim():"";if(a=(a=(a=(a=(a=a.replace(/<\/p><p>/gm,"\n")).replace(/<p>/gm,"")).replace(/<\/p>/gm,"")).replace(/<br>/gm,"")).replace(/<br \/>/gm,""),/(<img[^\>]*>)/gm.test(a)){var n=a.split(/(<img[^\>]*>)/gm);(n=n.filter((function(t){return!!t}))).forEach((function(t,e){t&&!/^\s*\n/.test(t)&&e&&!/\n\s*$/.test(n[e-1])&&(n[e]="\n"+t)})),a=n.join("")}var s=a?a.split("\n"):[];i.content=t.map(s,(function(t,e){var i;if(/<img([\s\S]*)>/gm.test(t)){var a=t.split(/\ssrc="([^"]*)"/gm)[1],n=a?a.match(/[\w|-]{36}/gm)[0]:(new Date).getTime()+"-"+e;i={isImg:!0,src:"",url:a,status:"pending",id:n,ready:!0}}else i={isImg:!1,val:t};return i})),i.downloadImage(),i.isLoading=!1})).catch((function(t){$log.log(t)}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},getThumbnail:function(t){return"pending"===t.status?r.a.IMAGE_LOADING:"rejected"===t.status?r.a.IMAGE_RELOAD:"dev"===APP_ENV?t.url:"fulfilled"===t.status?t.src:($log.log("检查指引-显示图片：",t),r.a.IMAGE_PLACEHOLD)},imgError:function(t,e){$log.error("检查指引-加载图片出现错误：",t);var i=p({},t);i.status="rejected",this.$set(this.content,e,i)},downloadImage:function(e){var i=this;e=e?[e]:this.imageList(),t.each(e,(function(e){var a=p({},e),n=t.map(i.content,(function(t){return t.id})).indexOf(e.id);r.a.isNeedDownload(e.url).then((function(t){t?r.a.download(e.url).then((function(t){a.status="fulfilled",a.src=r.a.fixUrl(t),i.$set(i.content,n,a)})).catch((function(t){$log.error("检查指引-下载图片：",t)})):(a.status="fulfilled",a.src=r.a.fixUrl(r.a.getPathFromUrl(e.url)),i.$set(i.content,n,a))}))}))},imageList:function(){return t.filter(this.content,(function(t){return t.isImg}))},imgClick:function(e){var i=this;if("pending"===e.status)return!1;if("rejected"===e.status)return this.downloadImage(e),$log.log("检查指引-点击重新加载-重新下载图片：",e),!1;var a=this.imageList(),s=t.map(a,(function(t){return t.id})).indexOf(e.id);a=t.map(a,(function(t){return i.getThumbnail(t)})),n.a.openImageBrowser(a,s)}}}}).call(this,i("391c"))},f369:function(t,e,i){"use strict";var a=i("fd50"),n=i("bcc7"),s=i("329b"),o=i("d0fb").a,r=(i("9b25"),i("17cc")),l=Object(r.a)(o,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"检查指引","on-close":t.closePopup}},[!t.isLoading&&t.listData.length?i("div",{staticClass:"page-scroll"},t._l(t.listData,(function(e,a){return i("div",{key:a},[i("item",{attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text fw-b color-blue one-line"},[t._v(t._s(e.item_name))])]),e.isOpen?t._l(e.subitem,(function(e,a){return i("div",{key:a,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[t._v(t._s(e.item_name))])]),e.isOpen?t._l(e.subitem,(function(e,a){return i("div",{key:a,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[t._v(t._s(e.item_name))])]),e.isOpen?t._l(e.subitem,(function(e,a){return i("div",{key:a,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[t._v(t._s(e.item_name))])])],1)})):t._e()],2)})):t._e()],2)})):t._e()],2)}))):t._e(),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.listData.length,"empty-text":"没有检查项"}})],1):t._e()],1)}),[],!1,null,"74102c05",null).exports,c=!1;c||(c=new(s.default.extend(l))({el:document.createElement("div")}),document.body.appendChild(c.$el));var d=c,h=i("515e"),p=i("91c1").a,u=(i("dc98"),Object(r.a)(p,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.show?i("div",{staticClass:"main",style:{top:t.contentTop+"px"}},[i("i",{staticClass:"arrow"}),i("div",{staticClass:"content",on:{click:function(e){return e.target!==e.currentTarget?null:t.closePopup(e)}}},[i("transition",{attrs:{name:"slide-down"},on:{enter:function(e){t.isOpening=!0},"after-enter":function(e){t.isOpening=!1},leave:function(e){t.isClosing=!0},"after-leave":t.afterClose}},[t.showList?i("div",{staticClass:"box",style:{height:t.listHeight+"px"}},t._l(t.data,(function(e,a){return i("div",{key:a,class:{"border-bottom":t.data.length>1,"box-single":1===t.data.length}},[i("div",{staticClass:"detail-hd",class:{"border-bottom":t.data.length<=1,"detail-hd-single":t.data.length<=1},on:{click:function(i){t.toggleItem(e)}}},[t.data.length>1?i("i",{class:{"detail-arrow-right":!e.isOpen,"detail-arrow-down":e.isOpen}}):t._e(),i("div",{staticClass:"detail-title"},[t._v(t._s(e.name))])]),t.data.length<=1||e.isOpen?i("div",{staticClass:"detail-bd",class:{"detail-bd-single":t.data.length<=1}},[t._l(e.textArr,(function(e,a){return i("p",{key:a,staticClass:"text-line"},[t._v("\n              "+t._s(e)+"\n            ")])})),i("item-img-list",{attrs:{editabled:!1},model:{value:e.contentImage,callback:function(i){t.$set(e,"contentImage",i)},expression:"item.contentImage"}}),i("loading-status",{attrs:{"is-empty":!e.textArr.length&&!e.contentImage.length,"empty-text":"PC端未设置检查指引"}})],2):t._e()])}))):t._e()])],1)]):t._e()}),[],!1,null,"2cac8864",null).exports),f=!1;f||(f=new(s.default.extend(u))({el:document.createElement("div")}),document.body.appendChild(f.$el));var m=f,g={name:"CheckGuide",components:{},props:{module:{type:String,default:""},mode:{type:String,default:"page"},itemId:{type:String,default:""},itemIds:{type:Array,default:function(){return[]}},batchId:{type:String,default:""},sectionId:{type:String,default:""},options:{type:Array,default:function(){return[]}},optionsPromise:{type:Function,default:function(){}},beforeOpen:{type:Function,default:function(){}}},data:function(){return{isLoading:!1}},methods:{openCheckGuide:function(){var t=this,e=this.beforeOpen&&this.beforeOpen();e instanceof Promise||(e=Promise.resolve(e)),e.then((function(e){!1!==e&&("drop"===t.mode?m.openPopup({itemIds:t.itemIds,el:t.$refs["check-guide-btn"],options:t.options}):("templet-plan"===t.module?a.a.when(!1):t.itemId&&t.sectionId?n.a.hasChildSectionCheckItem(t.itemId,t.sectionId):t.itemId?n.a.hasChildCheckItem(t.itemId):a.a.when(!0)).then((function(e){e?d.openPopup({module:t.module,itemId:t.itemId,batchId:t.batchId,sectionId:t.sectionId,options:t.options}):h.a.openPopup({itemId:t.itemId,module:t.module})})))}))}}},v=Object(r.a)(g,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{ref:"check-guide-btn",staticClass:"header-btn",on:{click:function(e){t.openCheckGuide()}}},[i("icon",{attrs:{name:"nav-info"}})],1)}),[],!1,null,null,null);e.a=v.exports},f3d7:function(t,e,i){"use strict";i("9120")},f53a:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .number-keyboard-con[data-v-6337f428]{position:absolute;left:0;bottom:0;width:100%;padding:4px 0;background-color:#fafafa;box-shadow:0 -4px 8px 0 rgba(0,0,0,.08);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.zjapp .ios-bezel-less[data-v-6337f428]{padding-bottom:34px}.zjapp .keyboard-row[data-v-6337f428],.zjapp .keys-row[data-v-6337f428]{display:flex}.zjapp .row-span-1[data-v-6337f428]{flex:1}.zjapp .row-span-2[data-v-6337f428]{flex:2}.zjapp .row-span-3[data-v-6337f428]{flex:3}.zjapp .keys[data-v-6337f428]{flex:1;height:48px;line-height:48px;text-align:center;font-size:18px;margin:4px;border:1px solid rgba(5,5,5,.07);border-radius:8px;background-color:#fff;padding:0}.zjapp .keys-next[data-v-6337f428],.zjapp .keys-prev[data-v-6337f428]{font-size:14px;color:#4275e8}.zjapp .keys-ok[data-v-6337f428]{font-size:14px;color:#999}.zjapp .keys-delete[data-v-6337f428]{color:#999}.zjapp .icon[data-v-6337f428]{pointer-events:none}.zjapp .icon-keyboard-close[data-v-6337f428]{font-size:20px;color:#999}.zjapp .icon-keyboard-delete[data-v-6337f428]{vertical-align:top;margin-top:13px;font-size:14px;color:#333}.zjapp .activing[data-v-6337f428]{background-color:#ececec}.zjapp .disabled[data-v-6337f428]{color:#999}.zjapp .col[data-v-6337f428]{display:flex;flex-direction:column;justify-content:center;align-items:center;height:104px;line-height:36px}",""])},f546:function(t,e,i){"use strict";var a={name:"StatusTotalBar",props:{data:{type:Array,default:function(){return[]}},status:{type:String,default:"default"}},data:function(){return{}}},n=(i("f6de"),i("17cc")),s=Object(n.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"status-total-bar"},t._l(t.data,(function(e,a){return i("div",{key:a,staticClass:"total-item"},["default"===t.status?[i("p",[i("span",{staticClass:"total-status",class:"total-status-"+e.color},[t._v("\n          "+t._s(e.status)+"\n        ")])]),i("p",[t._v("\n        "+t._s(e.total)+"\n      ")])]:t._e(),"laser-scanning"===t.status?[i("p",[i("span",{staticClass:"total-status",class:"total-status-"+e.color},[t._v("\n          "+t._s(e.status)+"\n        ")]),t._v("\n        ("+t._s(e.total)+")\n      ")])]:t._e()],2)})))}),[],!1,null,"be07cd9c",null);e.a=s.exports},f5e2:function(t,e,i){var a=i("c36f");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("22118b9b",a,!0,{sourceMap:!1,shadowMode:!1})},f669:function(t,e,i){"use strict";i("141b")},f6de:function(t,e,i){"use strict";i("5b85")},f7e2:function(t,e,i){"use strict";(function(t){i("e697");var a=i("4c09"),n=i("e2a7"),s=i("7798"),o=i("6144"),r=i("bc69");e.a={name:"MeasureDetailTemplateMixin",data:function(){return{isSaving:!1,hasPoint:!1,hasExceed:!1}},computed:{allowMeasureReinspect:function(){return this.$store.state.measure.allowMeasureReinspect},drawingUrl:function(){return this.detail&&this.detail.drawing_file&&this.detail.drawing_file[0]&&this.detail.drawing_file[0].url||""},inputComplete:function(){var e=this;return!t.some(this.detail.problemData||[],(function(i){return t.some(i.realityVal,(function(t){return!t.isFict&&!e.hasVal(t.val)}))}))},hasContractor:function(){return this.detail&&this.detail.problemData&&t.some(this.detail.problemData||[],(function(e){return!t.isEmpty(e.contractor)}))}},watch:{hasExceed:function(t){t||3===this.detail.entry_requirements&&(this.detail.needRepair=!1)},"detail.problemData":{handler:function(e){var i=this;t.isEmpty(e)&&(this.hasPoint=!1,this.hasExceed=!1),this.hasPoint=t.some(e,(function(e){return t.some(e.realityVal,(function(t){return!t.isFict&&i.hasVal(t.val)}))})),this.hasExceed=t.some(e,(function(e){return t.some(e.realityVal,(function(t){return!t.isFict&&t.isExceed}))}))},deep:!0,immediate:!0}},methods:{hasVal:function(t){return""!==t&&null!=t},changeItems:function(t,e){this.$emit("changeItems",t,e)},changePlace:function(t){this.$emit("changePlace",t)},saveProblem:function(){var e=this,i=this.detail;return"reedit"===i.mode||"redo"===i.mode?Promise.resolve():(t.each(i.problemData,(function(t){t.realityVal=Object(a.a)(t.realityVal)})),s.a.save(i).then((function(t){t&&e.$set(e.detail,"id",t)})).catch((function(t){n.a.alert(t)})))},saveProblemAndTip:function(){this.saveProblem().then((function(){n.a.alert("保存成功")}))},delProblem:function(){var t=this;return s.a.deleteDraftProblem(this.detail).then((function(){t.$router.go(-1)})).catch((function(t){t&&n.a.alert(t,200)}))},changeCC:function(){var t=this,e=this.detail;"edit"===e.mode?this.saveProblem(e):"view"===e.mode&&s.a.changeCC(e,!0).then((function(){t.$forceUpdate()}))},setRedo:function(){var e=(o.a.getUserObject(r.a.MEASURE_SECTION_CONTRACTOR)||{})[this.model.place.section.id],i=e&&t.find(this.model.contractors,{id:e});this.detail.mode="redo",this.detail.img=[],this.detail.remark="",this.detail.cc=[],t.each(this.detail.problemData,(function(e){2===e.entry_requirements?e.realityVal=t.map(e.realityVal,(function(t){var e={val:"",setVal:"",area:t.area};return t.label&&(e.label=t.label),e})):(e.realityVal=[],e.pointNum="",e.passrate=0),e.contractor=i||{}})),this.detail.id===this.$store.state.measure.repairData.id?this.$store.commit("measure/SET_REPAIR_DATA",t.clone(this.detail)):this.detail.id===this.$store.state.measure.supervisionData.id?this.$store.commit("measure/SET_SUPERVISION_DATA",t.clone(this.detail)):this.detail.id===this.$store.state.measure.constructData.id&&this.$store.commit("measure/SET_CONSTRUCT_DATA",t.clone(this.detail)),this.$refs.scroller.scrollTop=0}}}}).call(this,i("391c"))},fdef:function(t,e,i){"use strict";(function(t){i("f548"),i("e697"),i("2b45"),i("cc57"),i("6f84"),i("6d57");var a,n=i("a37e"),s=i("a1c4"),o=i("7fb2"),r=i("17fb"),l={};function c(){var e,i,a,c,d,h,p,u,f,m,g,v,b,x,y,w,k,_,C,P=0,I=0,S=1,D=[],M={},R={x:null,y:null},j=0,T=0,$=0,z=null,O=null,E=!1,B=!1,V=0,N=!1,A=["1","2","3","删除","4","5","6","-","7","8","9",".","上一项","0","下一项","关闭"],L=null,H=null,F={},U=this,q={data:[],width:document.documentElement.clientWidth,height:0,src:"",clickCallback:function(){},pointRadius:8,pointRatio:2,clickDelay:500};function K(t,i){var a=e.getBoundingClientRect();return{x:t-a.left*(e.width/(a.width*c)),y:i-a.top*(e.height/(a.height*c))}}function W(){i.clearRect(0,0,e.width,e.height),i.drawImage(a,0,0,a.width,a.height,P,I,a.width*S,a.height*S),q.points.forEach((function(t,e){!function(t,e,a,n,s,o,r){i.save(),null!==L&&L===n&&(i.beginPath(),i.fillStyle="rgba(66, 117, 232, "+(.6*(1-j)+.1)+")",i.arc(t,e,a*(1+j),0,2*Math.PI,!1),i.fill()),r.isWarning&&L!==n&&(i.beginPath(),i.fillStyle="rgba(252, 139, 1, "+(.6*(1-$)+.1)+")",i.arc(t,e,a*(1+$),0,2*Math.PI,!1),i.fill()),i.beginPath(),r.isWarning&&L!==n?i.fillStyle="#ff7439":o&&(i.fillStyle=o),i.arc(t,e,a,0,2*Math.PI,!1),i.globalAlpha=.6,i.fill(),i.globalAlpha=1,o&&(i.strokeStyle=o),i.lineWidth=1,i.stroke()}(t.x*S/c+P/c,t.y*S/c+I/c,q.pointRadius,e,0,L===e?"#4275e8":t.color||(t.isQualified?"#0bc666":"#ff3c46"),t),t.index=e})),function(){var t=Y(),e=X(),a=e.w,n=e.h,s=G(),o=s.x,r=s.y;if(!t||!E)return;i.fillStyle="rgba(0,0,0,0.8)",i.beginPath(),i.arc(o+5,r+5,5,Math.PI,1.5*Math.PI),i.lineTo(a+o-5,r),i.arc(o+a-5,r+5,5,1.5*Math.PI,0),i.lineTo(o+a,r+n-5),i.arc(o+a-5,r+n-5,5,0,.5*Math.PI),i.lineTo(o+a/2+5,r+n),i.lineTo(o+a/2,r+n+5),i.lineTo(o+a/2-5,r+n),i.lineTo(o+5,r+n),i.arc(o+5,r+n-5,5,.5*Math.PI,Math.PI),i.lineTo(o,r+5),i.closePath(),i.fill(),O&&(i.lineCap="round",i.lineJoin="round",i.beginPath(),i.arc(o-26,r+n/2,16,0,2*Math.PI),i.closePath(),i.fill(),i.beginPath(),i.strokeStyle="#ff3d3d",i.lineWidth=2,i.moveTo(o-34,r+n/2),i.lineTo(o-18,r+n/2),i.stroke(),i.beginPath(),i.arc(o+a+26,r+n/2,16,0,2*Math.PI),i.closePath(),i.fill(),i.beginPath(),i.strokeStyle="#0bc666",i.lineWidth=2,i.moveTo(o+a+18,r+n/2-1),i.lineTo(o+a+24,r+n/2+5),i.lineTo(o+a+35,r+n/2-6),i.stroke(),i.lineCap="butt",i.lineJoin="miter");!function(t,e){C._drawInputs(t,e,L,H)}(o,r)}(),function(){var t,e=Y(),a=240,n=180,s=J(),o=s.x,r=s.y;if(e&&B&&null!==H){for(t in i.shadowBlur=5,i.shadowColor="#999",i.fillStyle="#ffffff",i.beginPath(),i.arc(o+6,r+6,6,Math.PI,1.5*Math.PI),i.lineTo(a+o-6,r),i.arc(o+a-6,r+6,6,1.5*Math.PI,0),i.lineTo(o+a,r+n-6),i.arc(o+a-6,r+n-6,6,0,.5*Math.PI),i.lineTo(o+6,r+n),i.arc(o+6,r+n-6,6,.5*Math.PI,Math.PI),i.lineTo(o,r+6),i.closePath(),i.fill(),i.shadowBlur=0,i.shadowColor="transparent",F)t=parseInt(t),i.fillStyle="#f2f2f2",i.beginPath(),0===t?i.arc(o+t%4*60+6,r+45*Math.floor(t/4)+6,6,Math.PI,1.5*Math.PI):i.moveTo(o+t%4*60,r+45*Math.floor(t/4)),3===t?(i.lineTo(o+60*(t%4+1)-6,r+45*Math.floor(t/4)),i.arc(o+60*(t%4+1)-6,r+45*Math.floor(t/4)+6,6,1.5*Math.PI,0)):i.lineTo(o+60*(t%4+1),r+45*Math.floor(t/4)),15===t?(i.lineTo(o+60*(t%4+1),r+(Math.floor(t/4)+1)-6),i.arc(o+60*(t%4+1)-6,r+45*(Math.floor(t/4)+1)-6,6,0,.5*Math.PI)):i.lineTo(o+60*(t%4+1),r+45*(Math.floor(t/4)+1)),12===t?(i.lineTo(o+t%4*60+6,r+45*(Math.floor(t/4)+1)),i.arc(o+t%4*60+6,r+45*(Math.floor(t/4)+1)-6,6,.5*Math.PI,Math.PI)):i.lineTo(o+t%4*60,r+45*(Math.floor(t/4)+1)),i.closePath(),i.fill();i.strokeStyle="#d9d9d9",i.lineWidth=.5,i.beginPath(),i.moveTo(o,r+45.25),i.lineTo(o+a,r+45.25),i.moveTo(o,r+90.25),i.lineTo(o+a,r+90.25),i.moveTo(o,r+135.25),i.lineTo(o+a,r+135.25),i.moveTo(o+60.25,r),i.lineTo(o+60.25,r+n),i.moveTo(o+120.25,r),i.lineTo(o+120.25,r+n),i.moveTo(o+180.25,r),i.lineTo(o+180.25,r+n),i.closePath(),i.stroke(),i.textAlign="center",A.forEach((function(t,e){var a=Math.floor(e/4),n=e%4;3===e?(i.fillStyle="#999999",i.beginPath(),i.moveTo(o+60*n+18,r+45*a+22.5),i.lineTo(o+60*n+25,r+45*a+14.5),i.lineTo(o+60*n+40,r+45*a+14.5),i.arc(o+60*n+40,r+45*a+16.5,2,1.5*Math.PI,0),i.lineTo(o+60*n+42,r+45*a+28.5),i.arc(o+60*n+40,r+45*a+28.5,2,0,.5*Math.PI),i.lineTo(o+60*n+25,r+45*a+30.5),i.closePath(),i.fill(),i.beginPath(),i.strokeStyle="#ffffff",i.lineWidth=2,i.moveTo(o+60*n+28,r+45*a+18),i.lineTo(o+60*n+37,r+45*a+27),i.moveTo(o+60*n+37,r+45*a+18),i.lineTo(o+60*n+28,r+45*a+27),i.stroke()):(i.fillStyle="#111111",i.font=3===e||12===e||14===e||15===e?'14px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif':'18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',15===e&&(i.fillStyle="#4275e8"),(12===e&&!y||14===e&&!w)&&(i.fillStyle="#b2b2b2"),i.fillText(t,o+60*n+30,r+45*a+29))}))}}(),null!==L&&T<2&&(clearTimeout(v),v=setTimeout((function(){(j+=.07)>=1&&(j=0,T+=1),j=T>=2?0:parseFloat(j.toFixed(2)),W()}),40)),b&&(clearTimeout(x),x=setTimeout((function(){($+=.07)>=1&&($=0),$=parseFloat($.toFixed(2)),W()}),40))}function Y(){return(null===L?null:q.points[L])||null}function X(){return C._getInputPopupSize(_)}function G(){var t=Y(),e=X();return t?{x:t.x*S/c+P/c-e.w/2,y:t.y*S/c+I/c-e.h-q.pointRadius-10}:{x:null,y:null}}function J(){var t=Y();return t?{x:Math.round(t.x*S/c+P/c-120),y:Math.round(t.y*S/c+I/c+q.pointRadius+10)}:{x:null,y:null}}function Q(t){var e=t.changedTouches.length,i=t.touches.length;return 1===e||2===e||2===i}function Z(t){return 1===t.touches.length}function tt(t){switch(t){case"t":if(I>=h[1])return!0;break;case"r":if(P<=d[0])return!0;break;case"b":if(I<=h[0])return!0;break;case"l":if(P>=d[1])return!0}return!1}function et(t){if(U.drawMode,u=!1,Z(t))nt(t);else if(Q(t)){var e,i=t.touches[0],a=t.touches[1],n=K(i.clientX,i.clientY),s=K(a.clientX,a.clientY);e=Math.sqrt(Math.pow(s.x-n.x,2)+Math.pow(s.y-n.y,2)),p=S/e}}function it(t){if("img"!==U.drawMode){var i,a,n,s,o,r=t.touches[0];if(Z(t)){if(f||nt(t),n=r,s=(a=f).cx-n.pageX,o=a.cy-n.pageY,("b"===(i=Math.abs(s)>Math.abs(o)?s>0?"r":s<0?"l":"":o>0?"b":o<0?"t":"")&&tt("b")||"t"===i&&tt("t")||"r"===i&&tt("r")||"l"===i&&tt("l"))&&!q.hasBouncing)return;t.preventDefault(),t.stopPropagation(),(Math.abs(r.clientX-f.cx)>3||Math.abs(r.clientY-f.cy)>3)&&function(t){var i=t.touches[0],a=K(i.clientX,i.clientY),n=(a.x-f.x)*c,s=(a.y-f.y)*c,o={x:P<d[0]?P-d[0]:P>d[1]?P-d[1]:0,y:I<h[0]?I-h[0]:I>h[1]?I-h[1]:0},r=P+n,l=I+s;u||(f.x=a.x,f.y=a.y,r<=d[0]||r>=d[1]?!1===q.hasBouncing?P=r<=d[0]?d[0]:d[1]:P+=n*Math.abs(e.width/2-o.x)/e.width/2:P+=n,l<=h[0]||l>=h[1]?!1===q.hasBouncing?I=l<=h[0]?h[0]:h[1]:I+=s*Math.abs(e.height/2-o.y)/e.height/2:I+=s,W())}(t)}else Q(t)&&function(t){var e,i,a,n,s,o=t.touches[0],r=t.touches[1],l=K(o.clientX,o.clientY),d=K(r.clientX,r.clientY),h=Math.sqrt(Math.pow(d.x-l.x,2)+Math.pow(d.y-l.y,2));u=!0,a=function(t){return(t=t||S)<D[0]?t-D[0]:t>D[1]?t-D[1]:0}(e=p*h),n=D[0]/2,s=(Math.abs(a)>n?1:Math.abs(a)/n)/2,e-=q.hasBouncing?a?a*s:0:a,M=i={x:(l.x+d.x)/2*c,y:(l.y+d.y)/2*c},P=i.x-e/S*(i.x-P),I=i.y-e/S*(i.y-I),e!==S&&(S=e,ut(),W())}(t)}}function at(e){!function(e){var i=e.changedTouches[0];f&&Date.now()-f.time<q.clickDelay&&Math.abs(i.clientX-f.cx)<6&&Math.abs(i.clientY-f.cy)<6&&function(e){var i,s,o,r,d,h=e.changedTouches[0],p=K(h.clientX,h.clientY),u={x:((p.x-P/c)/S*c).toFixed(1),y:((p.y-I/c)/S*c).toFixed(1)},f=pt(u),m=E?X():null,g=E?G():null,v=E?{x:p.x-g.x,y:p.y-g.y}:null,b={w:240,h:180},x=B?J():null,k=B?{x:p.x-x.x,y:p.y-x.y}:null;m&&v.x>5&&v.x<m.w-5&&v.y>0&&v.y<m.h?r="input":v&&v.x>-52&&v.x<0&&v.y>(m.h-32-10)/2&&v.y<(m.h+32+10)/2?r="remove":v&&v.x>m.w&&v.x<m.w+20+32&&v.y>(m.h-32-10)/2&&v.y<(m.h+32+10)/2?r="save":k&&k.x>0&&k.x<b.w&&k.y>0&&k.y<b.h?r="keyborad":t.isEmpty(f)?u.x>=0&&u.x<=a.width&&u.y>=0&&u.y<=a.height&&(r="img"):r="point";"img"!==U.drawMode&&(O?("input"===r&&gt(i=C._clickHandler_getInputIndex(L,v))&&rt(i),"remove"===r&&(lt(H,!0),q.data=n.a.delPoint(q.data,L),ot()),"save"===r&&(lt(H),ot()),"keyborad"===r&&(function(e){var i=H;if(!gt(L)||!gt(H))return;var a=ct(L,H),n=A[e];a&&a.points&&(t.each(a.points,(function(t){isNaN(n)?"删除"===n?a.isSetVal?t.setVal=t.setVal.toString().substr(0,t.setVal.toString().length-1):t.val=t.val.toString().substr(0,t.val.toString().length-1):"-"===n?a.isSetVal?gt(t.setVal)||(t.setVal="-"):gt(t.val)||(t.val="-"):"."===n?a.isSetVal?gt(t.setVal)&&parseFloat(t.setVal)===parseInt(t.setVal)&&(t.setVal=t.setVal+n):gt(t.val)&&parseFloat(t.val)===parseInt(t.val)&&(t.val=t.val+n):"上一项"===n?(console.log(y,"hasPrevInput"),console.log(i-1,"curIndex - 1curIndex - 1curIndex - 1"),y&&(lt(H),rt(i-1))):"下一项"===n?w&&(lt(H),rt(i+1)):"关闭"===n&&(lt(H),B=!1,H=null):a.isSetVal?t.setVal=(gt(t.setVal)?t.setVal:"")+n:t.val=t.val+n})),a.isSetVal&&a.points&&a.points.length&&C.saveInputSetVal(L,l))}(s=Math.floor(k.x/60)+4*Math.floor(k.y/45)),function(t){F[t]&&clearTimeout(F[t]);F[t]=setTimeout((function(){delete F[t],W()}),300),W()}(s)),"point"===r&&(lt(H),o=dt(L),!t.some(o,(function(t){return gt(t.val)||gt(t.setVal)}))&&gt(L)&&(q.data=n.a.delPoint(q.data,L),q.points=vt(q.data),f=pt(u)),st(f.index)),"img"===r&&(lt(H),o=dt(L),!t.some(o,(function(t){return gt(t.val)||gt(t.setVal)}))&&gt(L)&&(q.data=n.a.delPoint(q.data,L)),q.data=n.a.addPoint(q.data,{x:u.x,y:u.y}),q.points=vt(q.data),st(q.points.length-1,!0))):("point"===r&&((f=pt(u)).pointId?q.onClickPoint&&q.onClickPoint(f):st(f.index)),"img"===r&&ot()));d={type:t.isEmpty(f)?"":"point",pos:p,x:u.x,y:u.y,point:f,btn:""},q.clickCallback&&q.clickCallback(d),W()}(e);mt(e)}(e)}function nt(t){var e=t.touches[0],i=K(e.clientX,e.clientY);f={x:i.x,y:i.y,cx:e.clientX,cy:e.clientY,time:Date.now()}}function st(e,i){var a,n,s,o,r,l,d=N?42:0;T=0,l=L=e,r=C.getMarkPoints(l),t.each(r,(function(t){delete t.isWarning})),b=t.some(q.points,{isWarning:!0}),s=G(),o=X(),s.x-d<0?a=(s.x-d)*c:s.x+o.w+d>q.width&&(a=(s.x+o.w+d-q.width)*c),s.y<0&&(n=s.y*c),V=C.getInputLength(q.data.problemData),E=!0,ht(P-(a||0),I-(n||0)),O&&i&&8!==k&&rt(H||0),ut()}function ot(){L=null,E=!1,B=!1,"view"!==q.data.mode&&t.each(q.data.problemData,(function(t){n.a.problemHandle(t)})),q.points=vt(q.data),q.onChange&&q.onChange()}function rt(t){var e,i,a=J(),n=240,s=180;a.x<0?e=a.x*c:a.x+n>q.width&&(e=(a.x+n-q.width)*c),a.y+s>q.height&&(i=(a.y+s-q.height)*c),H=t,y=t>0,w=t<V-1,O&&8!==k&&(B=!0,ht(P-(e||0),I-(i||0))),C.autoInputSetVal(L,l),ut()}function lt(e,i){var a=ct(L,e=void 0===e?H:e),s=[-9999999.99999,9999999.99999];C.inputBlur(),a&&a.points&&t.each(a.points,(function(t){if(a.isSetVal){if(t.setVal=isNaN(t.setVal)?"":gt(t.setVal)?Object(r.a)(t.setVal):"",""===t.setVal)return;t.setVal<s[0]?t.setVal=s[0]:t.setVal>s[1]&&(t.setVal=s[1])}else{if(t.val=isNaN(t.val)?"":gt(t.val)?Object(r.a)(t.val):"",""===t.val)return;t.val<s[0]?t.val=s[0]:t.val>s[1]&&(t.val=s[1])}})),t.each(q.data.problemData,(function(t){n.a.pointsHandle(t),n.a.problemHandle(t)})),H=null,B=!1,!i&&q.onChange&&q.onChange()}function ct(t,e){return C.getTargetPoint(t,e)}function dt(t){return C.getTargetPoints(t)}function ht(t,e){null===R.x&&null===R.y?R={x:t,y:e}:(R.x===t&&R.y===e||(R.x<t?R.x=t<=P?R.x:t:R.x=t>=P?R.x:t,R.y<e?R.y=e<=I?R.y:e:R.y=e>=I?R.y:e),t=R.x,e=R.y),t===P&&e===I||(m=!0,clearTimeout(g),g=setTimeout((function(){var i=!1;Math.abs(t-P)<1?P=t:(P+=.5*(t-P),i=!0),Math.abs(e-I)<1?I=e:(I+=.5*(e-I),i=!0),i?(ht(t,e),W()):(m=!1,R={x:null,y:null})}),20))}function pt(t){var e={},i=q.pointRadius*q.pointRatio+1;return q.points.forEach((function(a){var n=Math.sqrt(Math.pow(Math.abs(t.x-a.x),2)+Math.pow(Math.abs(t.y-a.y),2)),s=n*S/c;s<=q.pointRadius*q.pointRatio&&s<i&&(e=a,i=n)})),e}function ut(){var t=ft(S);d=t.x,h=t.y}function ft(t){var e,i,n,s,o,r,l,d,h,p,u=G(),f=X(),m=J(),g=240,v=180,b=N?42:0;return t=t||S,i=(e=q.width*c-a.width*t)>0?e/=2:0,s=(n=q.height*c-a.height*t)>0?n/=2:0,E&&(s+=o=(o=I-u.y*c)>0&&o>s?o-s:0),(E||B)&&(h=E?(u.x+f.w+b)*c:0,p=B?(m.x+g)*c:0,e+=r=(r=P+a.width*S-Math.max(h,p))<0&&r<-i?r+i:0),B&&(n+=l=(l=I+a.height*S-(m.y+v)*c)<0&&l<-s?l+s:0),(E||B)&&(h=E?(u.x-b)*c:1/0,p=B?m.x*c:1/0,i+=d=(d=P-Math.min(h,p))>0&&d>i?d-i:0),{x:[e,i],y:[n,s]}}function mt(t,e){if(!(t&&"touchend"===t.type&&0!==t.touches.length||m)){var i=e||(S<D[0]?D[0]:S>D[1]?D[1]:S),n=ft(i),s=n.x,o=n.y;(P<s[0]||P>s[1]||I<o[0]||I>o[1]||S<D[0]||S>D[1])&&setTimeout((function(){var t=M.x?M.x-i*(M.x-P)/S:P,n=M.y?M.y-i*(M.y-I)/S:I,r=!1;t=t<s[0]?s[0]:t>s[1]?s[1]:t,n=n<o[0]?o[0]:n>o[1]?o[1]:n,Math.abs(t-P)<1?P=t:(P+=.5*(t-P),r=!0),Math.abs(n-I)<1?I=n:(I+=.5*(n-I),r=!0),Math.abs(i-S)*a.width*a.height<5?S=i:(S+=.5*(i-S),r=!0),r&&(mt("",e),W())}),20)}}function gt(t){return""!==t&&null!=t}function vt(e){var i,a={};return i=s.a.getDrawPoints(e),t.isEmpty(e.pointStatus)||(t.each(e.pointStatus,(function(t){a[t.id]=t.status})),t.each(i,(function(t){var e=t.pointId?a[t.pointId]:"";e&&(t.color={"待整改":"#FF3C46","待复验":"#FF8E24","已通过":"#0BC666","非正常关闭":"#666666"}[e])}))),i}function bt(e,a){q.data=e,q.points=vt(q.data),z=q.data.mode,O="edit"===z||"reedit"===z||"redo"===z,E=!1,B=!1,V=0,k=q.data.problemData[0].passrate_mode,_=q.data.problemData.length,N=O,L=null,H=null,b=t.some(q.points,{isWarning:!0});var n=Object(o.b)(k);C=new n(i,{_defaults:q,isEditMode:O,hasOperaBtn:N,passrateMode:k}),!1!==a&&W()}this.init=function(t){for(var n in t)t.hasOwnProperty(n)&&(q[n]=t[n]);var s,o,r;if(U.drawMode=t.drawMode||"edit",e=q.canvas)return e.className=e.className+" canvas-diagram",e.width=q.width,e.height=q.height,(i=e.getContext("2d")).strokeStyle="transparent",i.fillStyle="transparent",o=(s=i).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||s.mozBackingStorePixelRatio||s.msBackingStorePixelRatio||s.oBackingStorePixelRatio||s.backingStorePixelRatio||1,(c=(window.devicePixelRatio||1)/o)>1&&(e.style.height=e.height+"px",e.style.width=e.width+"px",e.width*=c,e.height*=c),!i.extended&&function(t){var e=function(t){var e=t.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/e}(t);if(1===e)return;(function(t,e){for(var i in t)t.hasOwnProperty(i)&&e(t[i],i)})({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(i,a){var n;t[a]=(n=t[a],function(){var t,a,s=Array.prototype.slice.call(arguments);if("all"===i)s=s.map((function(t){return t*e}));else if(Array.isArray(i))for(t=0,a=i.length;t<a;t++)s[i[t]]*=e;return n.apply(this,s)})})),t.stroke=(i=t.stroke,function(){this.lineWidth*=e,i.apply(this,arguments),this.lineWidth/=e}),t.fillText=function(t){return function(){var i=Array.prototype.slice.call(arguments);i[1]*=e,i[2]*=e,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,a){return i*e+a})),t.apply(this,i),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,a){return i/e+a}))}}(t.fillText),t.strokeText=function(t){return function(){var i=Array.prototype.slice.call(arguments);i[1]*=e,i[2]*=e,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,a){return i*e+a})),t.apply(this,i),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,i,a){return i/e+a}))}}(t.strokeText),t.extended=!0;var i}(i),i.clearRect(0,0,e.width,e.height),i.fillStyle="#999",i.font='18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',i.fillText("加载中...",(q.width-70)/2,(q.height+18)/2),bt(q.data,!1),e.addEventListener("touchstart",et),e.addEventListener("touchmove",it),e.addEventListener("touchend",at),a=q.img,q.width/a.width<q.height/a.height?(r=q.width/a.width,P=0,I=(q.height-a.height*r)/2*c):(r=q.height/a.height,P=(q.width-a.width*r)/2*c,I=0),D=[S=r*c,S<.25?2:8*S],d=[P,P],h=[I,I],W(),this},this.reset=function(){return P=0,I=0,S=D[0],e&&(e.removeEventListener("touchstart",et),e.removeEventListener("touchmove",it),e.removeEventListener("touchend",at)),this},this.destroy=function(){q=null,e.width=0,e.height=0,e=null,i=null},this.showLoading=function(){i.clearRect(0,0,e.width,e.height),i.fillStyle="#999",i.font='18px -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',i.fillText("加载中...",(q.width-70)/2,(q.height+18)/2)},this.setPointData=function(t){return q.points=t,W(),this},this.setDetailData=bt,this.getDetailData=function(){var e=H;return gt(e)&&(lt(e),rt(e)),t.each(q.data.problemData,(function(t){n.a.pointsHandle(t),n.a.problemHandle(t)})),W(),q.data},this.startWarning=function(){b=!0},this.endWarning=function(){b=!1},this.setMode=function(t){U.drawMode=t,"img"===t&&mt("",D[0]),q.onSetMode&&q.onSetMode(t)},this.inputBlur=lt,this.pointBlur=ot}a={init:function(t){var e=new c;return e.init(t),e}},e.a=a}).call(this,i("391c"))},fe89:function(t,e,i){"use strict";i("5290")},fe9e:function(t,e,i){"use strict";i("3cd8")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTMudnVlP2Q2ZmYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0zLnZ1ZT85NTk0Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwtdGVtcGxhdGUtMy52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RyYXdpbmctd2l0aC1wb2ludC52dWU/MDgxNCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZHJhd2luZy13aXRoLXBvaW50LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZHJhd2luZy13aXRoLXBvaW50LnZ1ZT85YWNkIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLXdpdGgtcG9pbnQuanMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtY2hlY2tpdGVtL2luZGV4LnZ1ZT81M2U5Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLnZ1ZT8yZjM3Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLTMudnVlP2VkOWEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RyYXdpbmctMy52dWU/MmZhNCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZHJhd2luZy0zLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvZHJhd2luZy9pbmRleC52dWU/YWUyYiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9wcm9ibGVtLWRldGFpbC1oZWFkZXIvaW5kZXgudnVlPzViOWQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LXBsYWNlL2RpYWxvZy52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZT84MTcwIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LXBsYWNlL2RpYWxvZy52dWU/OWRiOCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9kaWFsb2cudnVlPzFlNWMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LXBsYWNlL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLnZ1ZT9hYmJhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwudnVlPzQ1MTQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC1wbGFjZS1jaGVja2l0ZW0udnVlPzEwMmIiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvcHJvYmxlbS1kZXRhaWwtaGVhZGVyL2luZGV4LnZ1ZT83NzBiIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kcmF3aW5nL2luZGV4LnZ1ZT9kYzUxIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2xpc3QudnVlPzVlYmMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/ZjE1OSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcmF3aW5nLW1lYXN1cmUvaW5kZXgudnVlP2I2ZjAiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3NpbmdsZS1zZWxlY3QvaXRlbS52dWU/YzU1YiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2luZ2xlLXNlbGVjdC9kaWFsb2cudnVlPzJiMTciLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtcGxhY2UvZGlhbG9nLnZ1ZT82NzRmIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LXBsYWNlL2RpYWxvZy52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtcGxhY2UvZGlhbG9nLnZ1ZT9mYzA3Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LXBsYWNlL2RpYWxvZy5qcyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2luZ2xlLXNlbGVjdC9pdGVtLnZ1ZT8zZDJjIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2l0ZW0udnVlP2YyZWIiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2l0ZW0udnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2l0ZW0udnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1jaGVja2l0ZW0vaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLXdpdGgtcG9pbnQudnVlP2I1MmUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtY2hlY2tpdGVtL2luZGV4LnZ1ZT9mMDNhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LWNoZWNraXRlbS9pbmRleC52dWU/MWYxYSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/M2ExNyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/ZThjOSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy9jb21wb25lbnRzL2l0ZW0tdGV4dGFyZWEvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9pdGVtLXRleHRhcmVhL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwudnVlP2Q4MDAiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L2RyYXdpbmctbWVhc3VyZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC1wbGFjZS1jaGVja2l0ZW0udnVlPzdjNmEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0zLnZ1ZT8xZDg2Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2RyYXdpbmctbWVhc3VyZS9pbmRleC52dWU/MGVhMiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcmF3aW5nLW1lYXN1cmUvaW5kZXgudnVlP2I5MzkiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJhd2luZy1tZWFzdXJlL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvZHJhd2luZy9pbmRleC52dWU/NGQ2NyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwudnVlP2ViZDgiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9kZXRhaWwudnVlPzhkZjIiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLXdpdGgtcG9pbnQudnVlPzQxMmEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2l0ZW0tdGV4dGFyZWEvaW5kZXgudnVlPzRlMWQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0zLnZ1ZT82ZDdhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2luZGV4LnZ1ZT9iODZmIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2luZGV4LnZ1ZT84MjMxIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9pbmRleC52dWU/OTgzNSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9zdGF0dXMtdG90YWwtYmFyL2luZGV4LnZ1ZT85YjFhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC52dWU/ZTQ4YSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvbnVtYmVyLWlucHV0L2luZGV4LnZ1ZT9mZGU2Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwudnVlPzBmMGYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL251bWJlci1pbnB1dC9pbmRleC52dWU/MmM2NyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvbnVtYmVyLWlucHV0L2tleWJvYXJkLnZ1ZT9jOWIyIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9udW1iZXItaW5wdXQva2V5Ym9hcmQudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9udW1iZXItaW5wdXQva2V5Ym9hcmQudnVlPzc2MWEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL251bWJlci1pbnB1dC9rZXlib2FyZC5qcyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvbnVtYmVyLWlucHV0L2luZGV4LnZ1ZT8yOGRlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL2NvbXBvbmVudHMvbnVtYmVyLWlucHV0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvbnVtYmVyLWlucHV0L2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTEudnVlPzM1YTciLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL251bWJlci1pbnB1dC9pbmRleC52dWU/MzYyNiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTIudnVlP2E0NDQiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0yLnZ1ZT9kZGI5Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwtdGVtcGxhdGUtMi52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvcHJvYmxlbS1kZXRhaWwtaGVhZGVyL2luZGV4LnZ1ZT84YTk1Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3ZpZXdzL21lYXN1cmUvZHJhd2luZy13aXRoLXBvaW50LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1jaGVja2l0ZW0vaW5kZXgudnVlPzM0ZjIiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtY2hlY2tpdGVtL2luZGV4LnZ1ZT9mYjNiIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LWNoZWNraXRlbS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZT8yOTIzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLTMudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLnZ1ZT85YzBjIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LWNoZWNraXRlbS9kaWFsb2dfMS52dWU/MjA5NSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9pbmRleC52dWU/ZDcwYyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9pbmRleC52dWU/N2M1OSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtcGxhY2UvaW5kZXgudnVlPzg0OTEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0yLnZ1ZT9lNTQzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwudnVlPzRmOTIiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvY29tcG9uZW50cy9udW1iZXItaW5wdXQva2V5Ym9hcmQudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwtcGxhY2UtY2hlY2tpdGVtLnZ1ZT8wZGY4Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTIudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2RpYWxvZy52dWU/NDBjOSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2l0ZW0udnVlP2FhMGUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvbWVhc3VyZS1jYXJib24tZGlhbG9nL2luZGV4LnZ1ZT9kY2Y4Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L21lYXN1cmUtY2FyYm9uLWRpYWxvZy9pbmRleC52dWU/NzFhZCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy93aWRnZXQvbWVhc3VyZS1jYXJib24tZGlhbG9nL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9tZWFzdXJlLWNhcmJvbi1kaWFsb2cvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2RyYXdpbmctbWVhc3VyZS9pbmRleC52dWU/OWYxYiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2luZ2xlLXNlbGVjdC9pdGVtLnZ1ZT9lYTVhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1jaGVja2l0ZW0vZGlhbG9nXzEudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwtdGVtcGxhdGUtMi52dWU/NDk4NSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZT9lMmU1Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L21lYXN1cmUtY2FyYm9uLWRpYWxvZy9pbmRleC52dWU/ZjZlNiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9tZWFzdXJlLWNhcmJvbi1kaWFsb2cvaW5kZXgudnVlPzYzMDgiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2RpYWxvZy52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvY29tcG9uZW50cy9kcmF3aW5nL2RpYWxvZy52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJhd2luZy1tZWFzdXJlL2luZGV4LnZ1ZT82N2FiIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2luZ2xlLXNlbGVjdC9kaWFsb2cudnVlPzRmY2EiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3NpbmdsZS1zZWxlY3QvZGlhbG9nLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2luZ2xlLXNlbGVjdC9kaWFsb2cudnVlPzc4OTUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3NpbmdsZS1zZWxlY3QvZGlhbG9nLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kZXRhaWwtdGVtcGxhdGUtMS52dWU/ZDk5MCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTEudnVlPzUyYzkiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWU/YmRhMyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWU/YTU5ZiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RldGFpbC52dWU/MjFkMiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTIudnVlP2NmOGEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtY2hlY2tpdGVtL2RpYWxvZ18xLnZ1ZT9hMjMzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LWNoZWNraXRlbS9kaWFsb2dfMS52dWU/MWNjMCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1jaGVja2l0ZW0vZGlhbG9nXzEudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2Ryb3Atc2VsZWN0LWNoZWNraXRlbS9kaWFsb2dfMS52dWU/MmY3MyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1jaGVja2l0ZW0vZGlhbG9nLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2xpc3QudnVlP2UxNzYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL251bWJlci1pbnB1dC9rZXlib2FyZC52dWU/N2VkYyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvZHJhd2luZy9kaWFsb2cudnVlPzkzNmMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2RyYXdpbmcvZGlhbG9nLnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvZHJhd2luZy9kaWFsb2cudnVlP2E2NTkiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2RyYXdpbmcvZGlhbG9nLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9udW1iZXItaW5wdXQvaW5kZXgudnVlPzg5NzYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL251bWJlci1pbnB1dC9rZXlib2FyZC52dWU/ODMyZiIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvaXRlbS10ZXh0YXJlYS9pbmRleC52dWU/YWE1MCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZHJhd2luZy0zLnZ1ZT83NDYxIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL2NvbXBvbmVudHMvZHJhd2luZy9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvZHJvcC1zZWxlY3QtY2hlY2tpdGVtL2RpYWxvZ18xLnZ1ZT8zMjZhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9pbmRleC52dWU/MjE4ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9wcm9ibGVtLWRldGFpbC1oZWFkZXIvaW5kZXgudnVlPzJhYmMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvcHJvYmxlbS1kZXRhaWwtaGVhZGVyL2luZGV4LnZ1ZT80YzMwIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3dpZGdldC9wcm9ibGVtLWRldGFpbC1oZWFkZXIvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L3Byb2JsZW0tZGV0YWlsLWhlYWRlci9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvbWVhc3VyZS1jYXJib24tZGlhbG9nL2luZGV4LnZ1ZT8yMWQwIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLnZ1ZT8zMzQxIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kcmF3aW5nL2luZGV4LnZ1ZT85MGIwIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kcmF3aW5nL2luZGV4LnZ1ZT80YzdkIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kcmF3aW5nL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9zdGF0dXMtdG90YWwtYmFyL2luZGV4LnZ1ZT8wOGFiIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTMudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLTMudnVlP2ExNzkiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9saWIvaHV4aW5nL2hpZHBpLWNhbnZhcy5qcyIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLTMudnVlPzA1M2UiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvaW5kZXgudnVlP2E3NTciLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvbGlzdC52dWU/MDI2MSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LnZ1ZT9hODhkIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2xpc3QuanMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AudnVlPzcwN2QiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLnZ1ZT9kODM4Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC1kcm9wLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2luZGV4LnZ1ZT9hODBlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL3dpZGdldC9jaGVjay1ndWlkZS9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zaW5nbGUtc2VsZWN0L2RpYWxvZy52dWU/ZjlmNCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvbnVtYmVyLWlucHV0L2tleWJvYXJkLnZ1ZT9hMWViIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvd2lkZ2V0L3N0YXR1cy10b3RhbC1iYXIvaW5kZXgudnVlP2EzOGUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvc3RhdHVzLXRvdGFsLWJhci9pbmRleC52dWU/OWEwYSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy93aWRnZXQvc3RhdHVzLXRvdGFsLWJhci9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvc3RhdHVzLXRvdGFsLWJhci9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9tZWFzdXJlL2RyYXdpbmctMy52dWU/ODY1MCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9kaWFsb2cudnVlP2QxMTciLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvc3RhdHVzLXRvdGFsLWJhci9pbmRleC52dWU/OTdkZCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL21lYXN1cmUvZGV0YWlsLXRlbXBsYXRlLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvc2VydmljZS9tZWFzdXJlL2RyYXdpbmctMy1zZXJ2aWNlLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvbWVhc3VyZS9kcmF3aW5nLXdpdGgtcG9pbnQudnVlPzdmMDgiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLnZ1ZT8zM2E3Il0sIm5hbWVzIjpbImNvbXBvbmVudCIsIl92bSIsInRoaXMiLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsInJlZiIsImF0dHJzIiwiZGV0YWlsIiwib24iLCJjaGFuZ2VJdGVtcyIsImNoYW5nZVBsYWNlIiwiaGFzTWFzdGVyQ2hlY2tpdGVtIiwiZHJhd2luZ1VybCIsIm1vZGUiLCJpc1JlcGFpck1vZGUiLCJfZSIsInN0YXRpY0NsYXNzIiwic3RhdHVzIiwiYWxsb3dSZWVkaXQiLCJzbG90IiwiJGV2ZW50IiwiY2hhbmdlTW9kZSIsIl92IiwidG90YWxEYXRhIiwic2F2ZVByb2JsZW0iLCJvbkNsaWNrUG9pbnQiLCJzdGF0aWNTdHlsZSIsIm1vZGVsIiwidmFsdWUiLCJjYWxsYmFjayIsIiQkdiIsIiRzZXQiLCJleHByZXNzaW9uIiwiX2wiLCJwcm9ibGVtIiwia2V5IiwiY2hlY2tJdGVtIiwiaWQiLCJuYW1lIiwiY29udHJhY3RvcnMiLCJwcm9ibGVtRGF0YSIsInJlYWxpdHlWYWwiLCJpbmRleCIsIl9zIiwiX2YiLCJwYXNzcmF0ZSIsInBhc3NyYXRlX21vZGUiLCJkb21Qcm9wcyIsInN0YW5kYXJkUmFuZ2UiLCJoYXNQb2ludCIsImhhc0V4Y2VlZCIsInNldE5lZWRSZXBhaXIiLCJuZWVkUmVwYWlyIiwicmVwYWlyT3B0aW9ucyIsImJlZm9yZVNlbGVjdFJlcGFpciIsIm9uU2VsZWN0UmVwYWlyIiwiYWxsb3dNZWFzdXJlUmVpbnNwZWN0IiwicmVpbnNwZWN0T3B0aW9ucyIsImJlZm9yZUNvbmZpcm1SZWluc3BlY3QiLCJwb2ludE51bSIsImltZyIsImNvbnRyYWN0b3IiLCJmb3JtYXREYXRlIiwicmVnaXN0X2RhdGUiLCJyZXBhaXIiLCJyZXBhaXJfZGF0ZSIsImlzQ2hlY2tlciIsImlzUmVwYWlyIiwiaXNSZWluc3BlY3QiLCJyZWluc3BlY3QiLCJvblNlbGVjdFJlaW5zcGVjdCIsInJlcGFpcl9pbWFnZV9maWxlIiwibGVuZ3RoIiwicmVwYWlyX3JlbWFyayIsInNldFJlcGFpciIsImN1cnJlbnRVc2VyQmF0Y2hJZCIsImJhdGNoX2lkIiwic2V0UmVkbyIsImNsb3NlUG9wdXAiLCJjb25maXJtIiwic3R5bGUiLCJoZWlnaHQiLCJkcmF3aW5nSGVpZ2h0IiwidXJsIiwicG9pbnRzIiwib25jbGljayIsInN0b3BQcm9wYWdhdGlvbiIsInBvaW50IiwicG9pbnRJbmRleCIsInJlZkluRm9yIiwidmFsdWVEZWNpbWFsIiwidmFsdWVSYW5nZSIsImlucHV0Rm9jdXMiLCJpbnB1dEJsdXIiLCJyZW1vdmVFeGNlZWRQb2ludCIsIml0ZW0iLCJpdGVtSW5kZXgiLCJpdGVtTmFtZSIsImFyZWEiLCJhcmVhSW5kZXgiLCJhcmVhTmFtZSIsImNsYXNzIiwiaXNFeGNlZWQiLCJsaWdodEluZGV4IiwiY2xpY2tQb2ludEVsZSIsInBhc3NyYXRlTW9kZSIsInZhbCIsInNjcm9sbFBhZGRpbmdCb3R0b20iLCJpbnN0YW5jZSIsIlZ1ZSIsImV4dGVuZCIsImRpYWxvZyIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYm9keSIsImFwcGVuZENoaWxkIiwiJGVsIiwiY29udGVudCIsIm1vZHVsZSIsImkiLCJsb2NhbHMiLCJleHBvcnRzIiwiYWRkIiwiZGVmYXVsdCIsIl9nIiwid2lkdGgiLCIkbGlzdGVuZXJzIiwiZXJyb3IiLCJwdXNoIiwiY29tcG9uZW50cyIsIm1peGlucyIsImRhdGEiLCJzaG93Iiwic2hvd0xpc3QiLCJpc09wZW5pbmciLCJpc0Nsb3NpbmciLCJjb250ZW50VG9wIiwibGlzdEhlaWdodCIsInNlbGVjdEl0ZW1zIiwibGF5b3V0TWFwIiwibG9hZGluZ1NldCIsIm9wdGlvbnNTZXQiLCJzZWxlY3RlZFNldCIsImNvbXBvbmVudFVpZCIsImJhY2tCdXR0b25FdmVudCIsInRhcmdldCIsImNvbXB1dGVkIiwiaXNPcHRpb25zRW1wdHkiLCJhbGxvd0NvbmZpcm0iLCJfIiwiaXNFbXB0eSIsImZsb29yIiwid2F0Y2giLCJ2IiwiJG5leHRUaWNrIiwiZWFjaCIsInNldFRpbWVvdXQiLCJzZWxlY3RlZERvbSIsInNjcm9sbEludG9WaWV3SWZOZWVkZWQiLCJjcmVhdGVkIiwiZGVzdHJveWVkIiwibWV0aG9kcyIsIm9wZW5Qb3B1cCIsInBhcmFtcyIsInRoZW4iLCIkaGVhZCIsIm9mZnNldEhlaWdodCIsImJvdW5kaW5nIiwiYm90dG9tIiwibWluQnkiLCJ3aW5kb3ciLCJpbm5lckhlaWdodCIsIl9zZWxlY3RlZCIsImNsb25lIiwic2VsZWN0ZWQiLCJfY2FsbGJhY2siLCJwcm9qSWQiLCJsZXZlbCIsImZsZXgiLCJfaXRlbUZsZXgiLCJiZ0NvbG9yIiwiX2JnQ29sb3JTZXQiLCJlbXB0eVRleHQiLCJfZW1wdHlUZXh0IiwiaW5pdCIsIiRlbWl0IiwiUHJvbWlzZSIsImFmdGVyQ2xvc2UiLCJvbkNsaWNrT3RoZXIiLCJlIiwiZ2V0TmV4dEl0ZW1PcHRpb25zIiwic2VjdGlvbiIsImdldFNlY3Rpb25PcHRpb25zIiwiZ2V0QnVpbGRpbmdVbml0T3B0aW9ucyIsImdldEZsb29yT3B0aW9ucyIsInJvb20iLCJnZXRSb29tT3B0aW9ucyIsIm5leHRHZXR0ZXIiLCJyZXNvbHZlIiwic2VjdGlvbklkIiwiYnVpbGRpbmdJZCIsInVuaXQiLCJzZXRJdGVtIiwic2V0U2VjdGlvbiIsInNldEJ1aWxkaW5nQW5kVW5pdCIsInNldEZsb29yIiwic2V0Um9vbSIsIm1hcCIsIml0ZW1LZXkiLCJjbGVhck5leHRBbmRBbGwiLCJjbGVhckl0ZW1EYXRhIiwiaXRlbVNlbGVjdGVkIiwiYnVpbGRpbmciLCJpbml0UHJvbWlzZSIsImlzSXRlbU9wdGlvbnNFbXB0eSIsInByZXZJdGVtS2V5Iiwic2hvd05hbWUiLCJyZXMiLCJyZXBsYWNlIiwiUmVnRXhwIiwic2VsZWN0IiwiaXNMYXN0IiwicHJvcHMiLCJ0eXBlIiwiT2JqZWN0IiwiQXJyYXkiLCJpc0xvYWRpbmciLCJCb29sZWFuIiwiZWRpdGFibGVkIiwic2hvd1VuaXQiLCJpc09wZW4iLCJoZFRleHQiLCJiZFRleHQiLCJyZXN1bHQiLCJvcGVuRGlhbG9nIiwiJHN0b3JlIiwic3RhdGUiLCJnbG9iYWwiLCJjdXJyZW50UHJvamVjdCIsIiRyZWZzIiwiX3VpZCIsInRhYnMiLCJyZWFkb25seSIsInRhYiIsImN1cnJlbnRUYWIiLCJjaGFuZ2VUYWIiLCJwbGFjZUZ1bGxuYW1lIiwiY2hlY2tJdGVtR3VpZGVJZHMiLCJlbnRyeV9yZXF1aXJlbWVudHMiLCJzYXZlUHJvYmxlbUFuZFRpcCIsImRpc2FibGVkU2F2ZVRpcCIsInN1Ym1pdENoZWNrIiwic3VibWl0UmVkbyIsInJlc3VibWl0Q2hlY2siLCJzdWJtaXRSZXBhaXIiLCJ0aXRsZSIsIlN0cmluZyIsInBhZ2VUaXRsZSIsInBsYWNlaG9sZGVyIiwib3B0aW9ucyIsIm9wdGlvbnNEaXNhYmxlZCIsInJlcXVpcmVkIiwibWVtb3J5IiwiYXV0b1NlbGVjdCIsImJlZm9yZU9wZW4iLCJGdW5jdGlvbiIsInNlYXJjaEJhciIsImdyb3VwaW5nIiwiYXV0b09wZW4iLCJyaWdodEJ0biIsInJpZ2h0QnRuRXZlbnQiLCJpZlRvZ2dsZSIsImZvcm1DaGVjayIsImVkaXRvckFkZERhdGEiLCJsaW5lTGltaXQiLCJOdW1iZXIiLCJtZW1vcnlLZXkiLCIkcm91dGUiLCJlbmNvZGVVUkkiLCJzZXRTZWxlY3RlZCIsIm1vdW50ZWQiLCJvcGVuU2VsZWN0IiwiYmVmb3JlT3BlblJlc3VsdCIsImlzRnVuY3Rpb24iLCJfZGlzYWJsZWRPYmoiLCJvblNlbGVjdCIsImlzQXJyYXkiLCJzb21lIiwicHJldiIsInRvcCIsImN1cnJlbnRUYXJnZXQiLCJtYXBLZXkiLCJfb2JqIiwibmFtZVNob3ciLCJub3RlIiwiY2hlY2tlZCIsInJlbmRlckZpZWxkIiwic2VsZWN0SXRlbSIsImRpc2FibGVkIiwibWFzdGVyQ2hlY2tpdGVtIiwicGxhY2UiLCJiYXRjaElkIiwicHJvY2Vzc01vZGUiLCJtdWx0aSIsIm9wZW5TdGF0dXMiLCJtYXhsZW5ndGgiLCJib3JkZXJCb3R0b20iLCJ0ZXh0YXJlYUhlaWdodCIsImlzTG9jayIsImJsdXJUaW1lIiwibGFzdExlbmd0aCIsIm9uZm9jdXMiLCJ0aW1lIiwiY29yZG92YSIsInBsdWdpbnMiLCJLZXlib2FyZCIsImlucHV0IiwiYmx1ciIsImNsb3NlIiwib25ibHVyIiwiRGF0ZSIsImdldFRpbWUiLCJzZXRTdGF0dXMiLCJjb25zb2xlIiwibG9nIiwiYm9vbCIsIm9uaW5wdXQiLCJzdWJzdHJpbmciLCJJbmZpbml0eSIsImhhc1ZhbCIsImlzTmFOIiwicG9pbnRTdGF0dXMiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImZvbGRlciIsInBvaW50UmFkaXVzIiwicG9pbnRSYXRpbyIsImNsaWNrRGVsYXkiLCJoYXNCb3VuY2luZyIsImlucHV0UmFuZ2UiLCJkcmF3aW5nIiwiaXNEb3dubG9hZGluZyIsImNhbnZhcyIsImN0eCIsInNyYyIsIngiLCJ5Iiwic2NhbGUiLCJkZWZhdWx0U2NhbGUiLCJwaXhlbFJhdGlvIiwibWFya1Bvc2l0aW9uIiwibWFya1Bvc2l0aW9uSW1hZ2VEYXRhIiwibWFya0Nvb3JkaW5hdGVzIiwicGluY2hSYXRpbyIsInhSYW5nZSIsInlSYW5nZSIsInNjYWxlTWluIiwic2NhbGVNYXgiLCJpc1BpbmNoIiwiY2xpY2tQb2ludHMiLCJ0b3VjaFN0YXJ0IiwiaXNNb3ZpbmciLCJtb3ZlVGltZXIiLCJtb3ZlRGVzdCIsInBpbmNoQ2VudGVyIiwibGlnaHRSaXBwbGUiLCJsaWdodFJpcHBsZVRpbWVyIiwibGlnaHRSaXBwbGVUaW1lcyIsImxpZ2h0UmlwcGxlVGltZXNNYXgiLCJoYXNXYXJuaW5nIiwid2FybmluZ1JpcHBsZSIsIndhcm5pbmdSaXBwbGVUaW1lciIsImRyYXdQb2ludEluZGV4IiwibGlnaHRJbnB1dEluZGV4Iiwia2V5Ym9yYWRBY3Rpb25EYXRhIiwiaXNJbnB1dFNob3ciLCJpc0tleWJvYXJkU2hvdyIsImlucHV0TGVuZ3RoIiwiaGFzT3BlcmFCdG4iLCJoYXNQcmV2SW5wdXQiLCJoYXNOZXh0SW5wdXQiLCJzaXplU3R5bGUiLCJjb21ib0xlbmd0aCIsImRyYXdpbmdQb2ludHMiLCJnZXREcmF3UG9pbnRzIiwibWVhc3VyZUl0ZW0iLCJnZXRJbWFnZSIsImhhbmRsZXIiLCJkcmF3IiwiZGVlcCIsImJlZm9yZURlc3Ryb3kiLCJkZXN0cm95IiwiZmlsZW5hbWUiLCJBUFBfRU5WIiwicHJvbWlzZSIsInBhdGhzIiwiZXhpc3RzIiwiZ2V0Q29udGV4dCIsIm9mZnNldFdpZHRoIiwiZ2V0UGl4ZWxSYXRpbyIsImV4dGVuZGVkIiwiYmluZFRvdWNoRXZlbnQiLCJjYWxjIiwiYmFja2luZ1N0b3JlIiwiZGV2aWNlUGl4ZWxSYXRpbyIsIndpblRvQ2FudmFzIiwicG9zIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibGVmdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJvblRvdWNoc3RhcnQiLCJvblRvdWNobW92ZSIsIm9uVG91Y2hlbmQiLCJ1bmJpbmRUb3VjaEV2ZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzUGluY2hpbmciLCJjaGFuZ2VkIiwiY2hhbmdlZFRvdWNoZXMiLCJ0b3VjaGluZyIsImlzRHJhZ2dpbmciLCJ0b3VjaGVzIiwidG91Y2hTdGFydEhhbmRsZXIiLCJ0b3VjaDEiLCJkaXN0YW5jZSIsIk1hdGgiLCJzcXJ0IiwicG93IiwicG9pbnQyIiwicG9pbnQxIiwiZHJhZ2dpbmdEaXJlY3Rpb24iLCJ0b3VjaCIsImdldERyYWdnaW5nRGlyZWN0aW9uIiwicHJldmVudERlZmF1bHQiLCJ0b3VjaE1vdmVIYW5kbGVyIiwidG91Y2hQaW5jaEhhbmRsZXIiLCJ0b3VjaEVuZEhhbmRsZXIiLCJjeCIsImNsaWVudFgiLCJjeSIsImNsaWVudFkiLCJub3ciLCJleHBlY3RYIiwib2Zmc2V0WCIsImV4cGVjdFkiLCJvZmZzZXRZIiwic2NhbGVPdmVyZmxvdyIsImdldFNjYWxlT3ZlcmZsb3ciLCJzY2FsZU92ZXJmbG93TWF4Iiwib3ZlcmZsb3dSYXRpbyIsImNlbnRlciIsInNldE1vdmVSYW5nZSIsImNsaWNrSGFuZGxlciIsInN0cmFpZ2h0ZW4iLCJwb2ludHNBcnIiLCJjbGlja1R5cGUiLCJjb29yZGluYXRlIiwiY2xpY2tQb2ludCIsImdldENsaWNrUG9pbnQiLCJpbnB1dFBvcHVwU2l6ZSIsImdldElucHV0UG9wdXBTaXplIiwia2V5Ym9yYWRTaXplIiwiY2xpY2tJbnB1dEluZGV4IiwiaW5wdXRQb3B1cERpZmYiLCJkZWxQb2ludCIsInBvaW50Qmx1ciIsImNsaWNrS2V5Ym9yYWRJbmRleCIsInNldFBvaW50VmFsIiwic2V0S2V5Ym9yYWRBY3Rpb24iLCJnZXRUYXJnZXRQb2ludHMiLCJzZXRWYWwiLCJwb2ludEZvY3VzIiwiYWRkUG9pbnQiLCJwb2ludElkIiwiYnRuIiwieERyaWZ0Iiwic3RhcnQiLCJlbmQiLCJwYWdlWCIsImFicyIsInlEcmlmdCIsImlzQm91bmRhcnkiLCJkaXIiLCJtb3ZlWCIsIm1vdmVZIiwiaW5wdXRQb3B1cFBvcyIsIm1hcmtQb2ludHMiLCJpbnB1dFBvcHVwV2lkdGhQbHVzIiwiZ2V0TWFya1BvaW50cyIsImlzV2FybmluZyIsImdldElucHV0UG9wdXBQb3MiLCJtb3ZlVG8iLCJvcGVuS2V5Ym9hcmQiLCJrZXlib3JhZFBvcyIsImdldEtleWJvcmFkUG9zIiwiYXV0b0lucHV0U2V0VmFsIiwidGFyZ2V0UG9pbnQiLCJnZXRUYXJnZXRQb2ludCIsImlzU2V0VmFsIiwiaW5wdXRNaW4iLCJpbnB1dE1heCIsIm5vQ2hhbmdlIiwiY3VySW5kZXgiLCJidG5UZXh0Iiwia2V5Ym9hcmRUZXh0Iiwia2V5Ym9yYWRJbmRleCIsInRvU3RyaW5nIiwic3Vic3RyIiwicGFyc2VGbG9hdCIsInBhcnNlSW50Iiwic2F2ZUlucHV0U2V0VmFsIiwiY2xlYXJUaW1lb3V0IiwiaW5jbHVkZXMiLCJwcmV2U2V0VmFsIiwiY2hlY2tpdGVtX2lkIiwiZmluZCIsImxhYmVsIiwiaXRlbVNldFZhbCIsImNoZWNraXRlbSIsInBTZXRWYWwiLCJuZWVkU2V0VmFsIiwiaGFzRW1wdHlTZXRWYWwiLCJwb2ludEFyZWEiLCJsaWdodFBvaW50cyIsInBJbmRleCIsImZpbHRlciIsImxhYmVsQXJyIiwiaXNTZXRWYWxJbnB1dCIsImlJbmRleCIsImhhc0NoYW5nZSIsImZvckVhY2giLCJyZWFsRGlzdGFuY2UiLCJuZWFyZXN0IiwibW92ZVJhbmdlIiwiZ2V0TW92ZVJhbmdlIiwieE1pbiIsInhNYXgiLCJ5TWluIiwieU1heCIsIm92ZXJmbG93VCIsIm92ZXJmbG93UiIsIm92ZXJmbG93QiIsIm92ZXJmbG93TCIsImlucHV0T3ZlcmZsb3dBbW91bnQiLCJrZXlib2FyZE92ZXJmbG93QW1vdW50IiwibWluIiwiZ2V0TW92ZU92ZXJmbG93IiwiY2xlYXJSZWN0IiwiZHJhd0ltYWdlIiwiZHJhd1BvaW50cyIsImRyYXdJbnB1dFBvcHVwIiwiZHJhd0tleWJvcmFkIiwiZHJhd1BvaW50Iiwic2F2ZSIsImJlZ2luUGF0aCIsImZpbGxTdHlsZSIsImFyYyIsInIiLCJQSSIsImZpbGwiLCJjb2xvciIsImdsb2JhbEFscGhhIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJzdHJva2UiLCJnZXRMaWdodFBvaW50IiwibGlnaHRQb2ludCIsInBTaXplIiwicHciLCJ3IiwibGluZVRvIiwicGgiLCJjbG9zZVBhdGgiLCJsaW5lQ2FwIiwibGluZUpvaW4iLCJkcmF3SW5wdXRzIiwicG9pbnREYXRhIiwiY3VyUG9pbnQiLCJwb2ludExhYmxlR3JvdXAiLCJsaWdodElucHV0Um93IiwibGlnaHRJbnB1dENvbCIsInRleHRBbGlnbiIsImZvbnQiLCJib3JkZXJDb2xvciIsInZhbENvbG9yIiwicm93IiwiY29sIiwiYm9yZGVyUmFkaXVzIiwiZHJhd0lucHV0IiwiYm9yZGVyTGlnaHRDb2xvciIsImdyb3VwQnkiLCJsYWJlbFRleHQiLCJsYWJlbEluZGV4Iiwic2V0dGluZyIsImJyIiwiaCIsImxhYmVsQ29sb3IiLCJmaWxsVGV4dCIsImtpIiwic2hhZG93Qmx1ciIsInNoYWRvd0NvbG9yIiwicm91bmQiLCJnZXRBcmVhRGF0YSIsImFyZWFEYXRhIiwibGVuIiwiZHJhd2luZ0RhdGEiLCJpc1F1YWxpZmllZCIsImdldEFyZWFEYXRhRnJvbVBvaW50cyIsImFyZWFQb2ludHMiLCJwb2ludFN0YXR1c09iaiIsIuW+heaVtOaUuSIsIuW+heWkjemqjCIsIuW3sumAmui/hyIsIumdnuato+W4uOWFs+mXrSIsIm5ld1BvaW50IiwiYWxsSW5kZXgiLCJ0ZXN0IiwibWF4SW5kZXgiLCJtYXhCeSIsImdpIiwic3BsaWNlIiwibyIsImNvdW50IiwiU2Nyb2xsZXIiLCJJdGVtIiwiTWVhc3VyZURldGFpbFBsYWNlQ2hlY2tpdGVtIiwiSXRlbUltZ0xpc3QiLCJOdW1iZXJJbnB1dCIsIlVzZXJTZWxlY3QiLCJJdGVtVGV4dGFyZWEiLCJQcm9ibGVtRGV0YWlsSGVhZGVyIiwiU2luZ2xlU2VsZWN0IiwibWVhc3VyZSIsImRldGFpbE1hc3RlckNoZWNraXRlbSIsInBvaW50TnVtQ2hhbmdlIiwiYWRkRXhjZWVkVmFsIiwibGFzdElucHV0IiwicmVtb3ZlRXhjZWVkVmFsIiwicG9wIiwidXBkYXRlZEV4Y2VlZFZhbCIsIm1hcmtFeGNlZWRWYWwiLCJtYXhNYXJrcyIsInZpZXdIdXhpbmciLCJ2aWV3UG9pbnRzIiwiaXNPYmplY3QiLCJfX29iX18iLCJpc1Byb2JsZW1FeGlzdHMiLCJyZWplY3QiLCJpc09rIiwiY2hlY2tTdWJtaXREYXRhIiwicmVsb2FkRGV0YWlsIiwiZXNjYXBlIiwiaXNJbWciLCJyZWFkeSIsImdldFRodW1ibmFpbCIsImltZ0Vycm9yIiwiaW1nQ2xpY2siLCJzdGFydENsb3NlIiwib25DbG9zZSIsImlzSU9TQmV6ZWxMZXNzIiwiekluZGV4Iiwia2V5VG91Y2hzdGFydCIsImtleVRvdWNoZW5kIiwiaGFzUHJldiIsImhhc05leHQiLCJpc0Rpc2FibGVkTWludXMiLCJpc0Rpc2FibGVkUG9pbnQiLCJrZXlib2FyZCIsImRlY2ltYWwiLCJuZXh0RXZlbnQiLCJyYW5nZSIsIm92ZXJmbG93QXV0b1JlY292ZXIiLCJlbXB0eUF1dG9SZWNvdmVyIiwiaXNTZXRFbXB0eVRpcCIsInJhd1ZhbHVlIiwiaXNGb2N1c2luZyIsImlzU2VsZWN0QWxsIiwia2V5Ym9hcmRIZWlnaHQiLCJzdG9yZSIsIm1heCIsInNldEZvY3VzIiwiaW5wdXRDb21wb25lbnQiLCJzZXRCbHVyIiwibmV3VmFsdWUiLCJhc3NpZ24iLCJkZWxldGVWYWx1ZSIsImNsZWFyIiwiY2hlY2tWYWx1ZSIsInF1YWxpZmllZCIsInVucXVhbGlmaWVkIiwiX3QiLCJhcmVhTnVtQ2hhbmdlIiwiZGlyZWN0aXZlcyIsInJhd05hbWUiLCJpc0VkaXRpbmciLCJhcmVhTmFtZUVkaXQiLCJhcmVhTmFtZVVwZGF0ZSIsImNvbXBvc2luZyIsInByb2JsZW1JbmRleCIsImNvbnRhaW5zIiwic2V0VmFsVXBkYXRlIiwiYXJlYVBvaW50TnVtQ2hhbmdlIiwiY2FyYm9uT3BlbiIsImNhcmJvbiIsInRvRml4ZWQiLCJwb2ludEZpbHRlciIsInJlYWxpdHlWYWxVcGRhdGUiLCJtYXJrSHV4aW5nIiwibXQxMCIsIm1sMTAiLCJzZXRWYWxJdGVtIiwic2V0VmFsSW5kZXgiLCJzbGljZSIsImNjT3B0aW9ucyIsImNoYW5nZUNDIiwidG9nZ2xlUHJvYmxlbURhdGFBbGwiLCJoYXNQcm9ibGVtRGF0YUNsb3NlIiwidG9nZ2xlUHJvYmxlbURhdGEiLCJwbDE1IiwiaW50ZW5zaXR5VmFsIiwiaW50ZW5zaXR5U2V0VmFsIiwiaGFzUG9pbnRzIiwiYXZnIiwiZmNrIiwicmVtYXJrIiwiZGVsUHJvYmxlbSIsImNhcmJvbkRhdGEiLCJjYXJib25TaG93IiwiY2FyYm9uQ2xvc2UiLCJjYXJib25TZWxlY3QiLCJsYXlvdXRQb2ludHNEYXRhIiwiY2hlY2tpdGVtRGF0YSIsImlzTnVtYmVySW5wdXRPcGVuIiwicG9pbnRMaWdodCIsIml0ZW1EYXRhIiwiYXJlYXMiLCJwIiwidGFnIiwidW5kZWZpbmVkIiwiRHJvcFNlbGVjdFBsYWNlIiwiRHJvcFNlbGVjdENoZWNraXRlbSIsImNoZWNraXRlbVNlbGVjdExvYWRpbmciLCJkZXRhaWxQbGFjZSIsImNoZWNraXRlbXMiLCJjaGVja2l0ZW1PcHRpb25zIiwicHJvY2Vzc19tb2RlIiwib25DaGFuZ2VQbGFjZSIsImRpc3BhdGNoIiwib25DaGFuZ2VDaGVja2l0ZW0iLCJpdGVtMSIsImNoaWxkcmVuIiwiaXRlbTIiLCJmaXJzdENoZWNraXRlbSIsImlkcyIsInByb2JsZW1JZCIsInJlc2V0Iiwib25DaGFuZ2UiLCJ1cGRhdGUiLCJzZXREZXRhaWxEYXRhIiwid2lsbE9wZW5QYXJhbXMiLCJjYWxjVGFiIiwic2V0S2V5c1N0YXR1cyIsImNsb3NlS2V5Ym9hcmQiLCJkZWxldGUiLCJkZWxldGVUb3VjaFRpbWVyIiwiZ2V0U2Nyb2xsQ29tcCIsIiRwYXJlbnQiLCIkb3B0aW9ucyIsImNvbXBvbmVudFNldCIsImRvbVNldCIsImRvbSIsIl9fdnVlX18iLCJjdXJyZW50SW5kZXgiLCJwcmV2SW5wdXQiLCJuZXh0IiwibmV4dElucHV0Iiwic2V0VHVyZSIsInNldEZhbHNlIiwiaW5kZXhPZiIsInNldEtleUFjdGl2aW5nIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwidG91Y2hzdGFydEVsIiwiZGlyZWN0IiwiTWVhc3VyZUNhcmJvbkRpYWxvZyIsImNhcmJvblNlbGVjdERhdGEiLCJoYXNDYXJib25EaWFsb2ciLCJiZWZvcmVNb3VudCIsInNldCIsIm1hdGNoIiwiZmlsdGVyZWRQb2ludHMiLCIkZm9yY2VVcGRhdGUiLCJmb2N1cyIsIm5ld05hbWUiLCJvbGROYW1lIiwiaGFzRXJyIiwidGFyZ2V0QXJlYSIsInRhcmdldFBvaW50cyIsInNpYmxpbmdBcmVhIiwicGEiLCJzYSIsIm1lYXN1cmVfaXRlbSIsImZpcnN0UG9pbnQiLCJkcmF3aW5nX2ZpbGUiLCJvbm1hcmsiLCJjb25jYXQiLCJoYXNFbXB0eVBvaW50IiwiaXNGaWN0IiwiaGlnaERpZmZFcnIiLCJjaGVja2VkUmVzdWx0IiwiaW5jb21wbGV0ZWQiLCJlbXB0eVNldFZhbCIsImhhc0VtcHR5QXJlYSIsImhhc01hcmsiLCJleGNlZWRQb2ludHMiLCJleGNlZWRNYXJrUG9pbnRzIiwiaGFzTG9zdFBvaW50Iiwib3B0aW9uYWxKaWNoYSIsImF2ZXJhZ2VMb3dJdGVtIiwiaW50ZW5zaXR5T3V0Y29tZSIsImF2ZXJhZ2VIaWdoSXRlbSIsImF2ZXJhZ2VPdmVyZmxvd1RpcHMiLCJjb25zdHJhY3RvclJlcXVpcmVkIiwiY2xvbmVEZWVwIiwiaXRlbUlkcyIsImdldERhdGEiLCJ0b2dnbGVJdGVtIiwiY2FyYm9uTGlzdCIsImFjdGl2YXRlZCIsImFjdGl2ZSIsImN1cnJlbnRTZXQiLCJvcGVuU2V0IiwicGFzc3JhdGVEYXRhIiwiX3BsYWNlIiwic2VsZWN0ZWRQYXJlbnQiLCJnZXRQYXNzcmF0ZURhdGEiLCJpbml0U2VsZWN0ZWRTZXQiLCJpdGVtcyIsIml0ZW1faWQiLCJzdGFuZGFyZF9pbnRlbnNpdHlfdmFsdWUiLCJtZWFzdXJlbWVudF9wb2ludHMiLCJwYXJlbnRfaXRlbV9pZCIsInBhcmVudHNEYXRhIiwiZXhjZWVkTnVtIiwicHJvYmxlbV9wb2ludHMiLCJudW0iLCJnZXRJdGVtSW5mbyIsImluZm8iLCJnZXRJdGVtVHlwZSIsImlzRWRpdE1vZGUiLCJpc0N1cnJlbnQiLCJvcHRpb25JdGVtIiwiY2xpY2tJdGVtIiwiaXRlbVR5cGUiLCJpc1NhbWVQYXJlbnQiLCJpc1Byb2Nlc3NNb2RlU2FtZSIsImhhc1Bhc3NyYXRlTW9kZTkiLCJhcHBTZWFyY2hCYXIiLCJhY3RpdmVUYWIiLCJzdG9yYWdlS2V5Iiwic3RvcmFnZVZhbCIsImtleXdvcmQiLCJzZWFyY2hTdGF0dXMiLCJjaGVja2VkSXRlbSIsInNlYXJjaERhdGEiLCJvcHRpb25zTGltaXQiLCJwYWdpbmdPcHRpb25zIiwiY2F0ZWdvcnkiLCJvcHRpb25zU2hvdyIsImdldEdyb3VwRGF0YSIsImNsb3NlRXZlbnQiLCJjYW5jZWxTZWFyY2giLCJjdXN0b21BZGRTdXBwbGllciIsImZpbmRJbmRleCIsInNhdmVIaXN0b3J5Iiwib25TZWFyY2hUeXBlQ2hhbmdlIiwiZmlsdGVyTGlzdCIsIl9yZWciLCJfaXRlbSIsInJlbmFtZSIsInBhZ2VPcHRpb25zIiwiYXJyIiwidW5kbyIsInN1cmUiLCJmb3VuZCIsIkNoZWNrR3VpZGUiLCJNZWFzdXJlRGV0YWlsVGVtcGxhdGUxIiwiTWVhc3VyZURldGFpbFRlbXBsYXRlMiIsIk1lYXN1cmVEZXRhaWxUZW1wbGF0ZTMiLCJyb29tSWQiLCJjaGVja2l0ZW1JZCIsImlkZW50aXR5IiwicmVwYWlyRGF0YSIsInN1cGVydmlzaW9uRGF0YSIsImNvbnN0cnVjdERhdGEiLCIkcm91dGVyIiwiaXNCYWNrIiwicXVlcnkiLCJ2aWV3SWRlbnRpdHkiLCJkZXRhaWxEYXRhIiwidmFsdWVDaGFuZ2UiLCJnZXRCYXNlRGF0YSIsImdldERldGFpbERhdGEiLCJnZXREZXRhaWxEYXRhQnlCYXRjaCIsImNoZWNraXRlbUlkcyIsInByb2JsZW1Qcm9taXNlIiwic2F2ZUFyZWFIaXN0b3J5IiwibWVhc3VyZUl0ZW1zT2JqZWN0IiwiYXJlYU51bSIsInRlbXBsYXRlIiwic2F2ZVNlY3Rpb25Db250cmFjdG9yIiwic2VjdGlvbkNvbnRyYWN0b3JzIiwiayIsImlucHV0Q29tcGxldGUiLCJwcm9qZWN0Iiwicm9vbXR5cGVfdHlwZSIsInN1Yml0ZW0iLCJzdWJpbmRleCIsIl9pc1BpbmNoaW5nIiwiX2lzRHJhZ2dpbmciLCJyZWdpb25zIiwicG9pbnRDb2xvciIsIm9ubGluZU1vZGUiLCJjb250ZW50U2Nyb2xsIiwic2NhbGVCZXR3ZWVuIiwiY3R4SGVpZ2h0IiwidG91Y2hNb3ZlQW5kRW5kSGFuZGxlciIsInJhdGUiLCJuZXdYIiwibmV3WSIsIm9mZnNldCIsInNldFJhbmdlIiwidG91Y2htb3ZlIiwidG91Y2hlbmQiLCJpc0NhbkNsaWNrIiwiZmxhZyIsIm1hcmsiLCJyZXN0b3JlIiwibmV3TWFya1BvaW50IiwicmVkcmF3IiwiaW1nVyIsImNhbnNXIiwiaW1nSCIsImNhbnNIIiwiZHJhd1JlZ2lvbnMiLCJjbGlja0NhbGxiYWNrIiwicmVjdCIsImlzUG9pbnRJblBhdGgiLCJwaSIsInJlZ2lvbkRhdGEiLCJsaXN0RGF0YSIsIml0ZW1JZCIsIm1vZHVsZUF0dHJpYnV0ZSIsImNoZWNrVHlwZSIsImNoZWNrIiwicHJvY2VzcyIsImluaXRCeVR5cGUiLCJpc0luaXRCeUJpZHNlY3Rpb24iLCJpbml0QnlCaWRzZWN0aW9uIiwiaW5pdEJ5T3B0aW9ucyIsImluaXRCeUJhdGNoIiwiaW5pdEJ5SWQiLCJtZGEiLCJzZXRVc3VhbEl0ZW1zIiwibW1rdkNvZGUiLCJtZXJnZUFycmF5Iiwib2xkRGF0YSIsIm5ld1JlcyIsImRlZXBDbG9uZSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInN0YXR1c1RleHQiLCJpc1RpbWVvdXQiLCJzZW50QmFja1RpbWVzIiwiZWRPcHRpb25zIiwiU3RhdHVzVG90YWxCYXIiLCJEcmF3aW5nMyIsImRyYXdpbmdNZWFzdXJlIiwiYXJlYUdyb3VwUG9pbnRzIiwiYnJvUG9pbnQiLCJ2YWxFbXB0eVBvaW50cyIsImluY29tcGxldGVkR3JvdXAiLCJzZXRWYWxFbXB0eVBvaW50cyIsImFsbFByb2JsZW1Qb2ludHMiLCJfdGhpcyIsImludmFsaWRQb2ludHMiLCJpc0NvbWJvQ2hlY2siLCJoYXNFbXB0eVByb2JsZW0iLCJwb2ludHNWYWxBcnIiLCJoYXNFbXB0eVJlYWxpdHlWYWwiLCJub1JlcGFpciIsIm9uRHJhd2luZ0NoYW5nZSIsIkV4dGVuZENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCIsInByb3RvdHlwZSIsImNvbnRleHQiLCJfc3VwZXIiLCJiYWNraW5nU3RvcmVQaXhlbFJhdGlvIiwiQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEIiwid2Via2l0QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsIm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW8iLCJtc0JhY2tpbmdTdG9yZVBpeGVsUmF0aW8iLCJvQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsIm9iaiIsImZ1bmMiLCJoYXNPd25Qcm9wZXJ0eSIsImZpbGxSZWN0Iiwic3Ryb2tlUmVjdCIsImFyY1RvIiwiYmV6aWVyQ3VydmVUbyIsImlzUG9pbnRpblBhdGgiLCJpc1BvaW50aW5TdHJva2UiLCJxdWFkcmF0aWNDdXJ2ZVRvIiwidHJhbnNsYXRlIiwiY3JlYXRlUmFkaWFsR3JhZGllbnQiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsImFyZ3MiLCJjYWxsIiwiYXJndW1lbnRzIiwiYSIsImFwcGx5IiwibSIsInUiLCJzdHJva2VUZXh0IiwiRXh0ZW5kSFRNTENhbnZhc0VsZW1lbnQiLCJyYXRpbyIsImlzSW1hZ2VEb3dubG9hZGluZyIsIiRsb2ciLCJkb3dubG9hZEltYWdlIiwiaW1hZ2VMaXN0IiwiaXNOZWVkIiwiaXRlbV9uYW1lIiwia2V5MiIsInN1Yml0ZW1BIiwia2V5MyIsInN1Yml0ZW1CIiwia2V5NCIsInRleHQiLCJ0ZXh0SW5kZXgiLCJ0ZXh0QXJyIiwiY29udGVudEltYWdlIiwib3B0aW9uc1Byb21pc2UiLCJvcGVuQ2hlY2tHdWlkZSIsImhhc0NoaWxkIiwidG90YWwiLCJpc1NhdmluZyIsImhhc0NvbnRyYWN0b3IiLCJpbW1lZGlhdGUiLCJNZWFzdXJlU2VydmljZSIsImRldGFpbElkIiwiY2F0Y2giLCJQb3B1cCIsImFsZXJ0IiwiZGVsZXRlRHJhZnRQcm9ibGVtIiwiZ28iLCJjb250cmFjdG9ySWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRVc2VyT2JqZWN0IiwibG9jYWxTdG9yYWdlS2V5cyIsIk1FQVNVUkVfU0VDVElPTl9DT05UUkFDVE9SIiwiZGVmYWx1dENvbnRyYWN0b3IiLCJjYyIsImNvbW1pdCIsInNjcm9sbFRvcCIsIk1lYXN1cmVEcmF3IiwiX2NhbnZhcyIsIl9jdHgiLCJfaW1nIiwiX3BpeGVsUmF0aW8iLCJfeFJhbmdlIiwiX3lSYW5nZSIsIl9waW5jaFJhdGlvIiwiX2lzUGluY2giLCJfdG91Y2hTdGFydCIsImRyYXdTZXJ2ZXIiLCJfeCIsIl95IiwiX3NjYWxlIiwiX3NjYWxlQmV0d2VlbiIsInByb2JsZW1Nb2RlIiwidGhhdCIsIl9kZWZhdWx0cyIsIl9kcmF3IiwiX2RyYXdQb2ludCIsIl9nZXRMaWdodFBvaW50IiwiX2dldElucHV0UG9wdXBTaXplIiwiX2dldElucHV0UG9wdXBQb3MiLCJfZHJhd0lucHV0cyIsIl9kcmF3SW5wdXRQb3B1cCIsIl9nZXRLZXlib3JhZFBvcyIsIl9kcmF3S2V5Ym9yYWQiLCJfaXNCb3VuZGFyeSIsImRyYXdNb2RlIiwiX3RvdWNoU3RhcnRIYW5kbGVyIiwidG91Y2gyIiwicGFnZVkiLCJvdmVyZmxvd1NpemUiLCJfdG91Y2hNb3ZlSGFuZGxlciIsIl90b3VjaFBpbmNoSGFuZGxlciIsImtleWJvcmFkRGlmZiIsIl9jbGlja0hhbmRsZXJfZ2V0SW5wdXRJbmRleCIsIk1lYXN1cmVEZXRhaWxNb2RlbCIsIl9jbGlja0hhbmRsZXIiLCJfdG91Y2hFbmRIYW5kbGVyIiwiZ2V0SW5wdXRMZW5ndGgiLCJfbW92ZVRvIiwicHJvYmxlbUhhbmRsZSIsImZvcm1hdEZsb2F0VmFsRGlzcGxheSIsInBvaW50c0hhbmRsZSIsInRhcmdldFNjYWxlIiwibWVhc3VyZVBvaW50c0hhbmRsZSIsIkRyYXdTZXJ2ZXIiLCJnZXREcmF3U2VydmVyIiwiY2xhc3NOYW1lIiwic2hvd0xvYWRpbmciLCJzZXRQb2ludERhdGEiLCJpbnB1dEluZGV4Iiwic3RhcnRXYXJuaW5nIiwiZW5kV2FybmluZyIsInNldE1vZGUiLCJvblNldE1vZGUiXSwibWFwcGluZ3MiOiJ3TkFBQSxJQ0E4YyxFLFVBQUcsRSx3QkNRN2NBLEVBQVksWUFDZCxHRlRXLFdBQWEsSUFBSUMsRUFBSUMsS0FBU0MsRUFBR0YsRUFBSUcsZUFBbUJDLEVBQUdKLEVBQUlLLE1BQU1ELElBQUlGLEVBQUcsT0FBT0UsRUFBRyxXQUFXLENBQUNFLElBQUksWUFBWSxDQUFDRixFQUFHLGlDQUFpQyxDQUFDRyxNQUFNLENBQUMsT0FBU1AsRUFBSVEsUUFBUUMsR0FBRyxDQUFDLFlBQWNULEVBQUlVLFlBQVksWUFBY1YsRUFBSVcsZUFBZ0JYLEVBQUlZLG9CQUFzQlosRUFBSWEsV0FBWSxDQUFzQixTQUFwQmIsRUFBSVEsT0FBT00sTUFBb0JkLEVBQUlRLE9BQU9PLGFBQW9YZixFQUFJZ0IsS0FBMVdaLEVBQUcsd0JBQXdCLENBQUNhLFlBQVksV0FBV1YsTUFBTSxDQUFDLE9BQVNQLEVBQUlRLE9BQU9VLFNBQVMsQ0FBRWxCLEVBQUlRLE9BQU9XLGFBQW1DLFNBQXBCbkIsRUFBSVEsT0FBT00sS0FBaUJWLEVBQUcsV0FBVyxDQUFDZ0IsS0FBSyxVQUFVLENBQUNoQixFQUFHLE1BQU0sQ0FBQ2EsWUFBWSxhQUFhUixHQUFHLENB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R25Dd2hDLElBRU9ELEVBQVVyN0IsTUFJbkJwSSxLQUFLNmxDLGFBQWUsV0FDbEIzdUIsR0FBYSxHQUlmbFgsS0FBSzhsQyxXQUFhLFdBQ2hCNXVCLEdBQWEsR0FRZmxYLEtBQUsrbEMsUUFBVSxTQUFTbGxDLEdBQ3RCMmlDLEVBQUtZLFNBQVd2akMsRUFFSCxRQUFUQSxHQUNGd2IsR0FBVyxHQUFJaW5CLEVBQWMsSUFHL0JHLEVBQVV1QyxXQUFhdkMsRUFBVXVDLFVBQVVubEMsSUFHN0NiLEtBQUs2RixVQUFZQSxHQUNqQjdGLEtBQUtpZCxVQUFZQSxHQUduQjdjLEVBQVEsQ0FDTnFMLEtBQU0sU0FBUyt6QixHQUNiLElBQUlubkIsRUFBTyxJQUFJbXFCLEVBSWYsT0FGQW5xQixFQUFLNU0sS0FBSyt6QixHQUVIbm5CLElBc0hJalksUSx3REMxMEZmLFcsa0NDQUEiLCJmaWxlIjoianMvY2h1bmstMTYzYjdmNzEuanM/djE2MDg3MTQ0NTExOTUiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc2Nyb2xsZXInLHtyZWY6XCJzY3JvbGxlclwifSxbX2MoJ21lYXN1cmUtZGV0YWlsLXBsYWNlLWNoZWNraXRlbScse2F0dHJzOntcImRldGFpbFwiOl92bS5kZXRhaWx9LG9uOntcImNoYW5nZUl0ZW1zXCI6X3ZtLmNoYW5nZUl0ZW1zLFwiY2hhbmdlUGxhY2VcIjpfdm0uY2hhbmdlUGxhY2V9fSksKF92bS5oYXNNYXN0ZXJDaGVja2l0ZW0gJiYgX3ZtLmRyYXdpbmdVcmwpP1soX3ZtLmRldGFpbC5tb2RlICE9PSAnZWRpdCcgJiYgIV92bS5kZXRhaWwuaXNSZXBhaXJNb2RlKT9fYygncHJvYmxlbS1kZXRhaWwtaGVhZGVyJyx7c3RhdGljQ2xhc3M6XCJiZy13aGl0ZVwiLGF0dHJzOntcInN0YXR1c1wiOl92bS5kZXRhaWwuc3RhdHVzfX0sWyhfdm0uZGV0YWlsLmFsbG93UmVlZGl0ICYmIF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKT9fYygndGVtcGxhdGUnLHtzbG90Olwib3BlcmF0XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJidG4tcmVlZGl0XCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jaGFuZ2VNb2RlKCdyZWVkaXQnKX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgIOS/ruaUuVxcbiAgICAgICAgICBcIiksX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJlZGl0XCJ9fSldLDEpXSk6X3ZtLl9lKCldLDIpOl92bS5fZSgpLChfdm0uZGV0YWlsLmlzUmVwYWlyTW9kZSk/X2MoJ3N0YXR1cy10b3RhbC1iYXInLHthdHRyczp7XCJkYXRhXCI6X3ZtLnRvdGFsRGF0YX19KTpfdm0uX2UoKSxfYygnZHJhd2luZy0zJyx7cmVmOlwiZHJhd2luZ1wiLGF0dHJzOntcImRldGFpbFwiOl92bS5kZXRhaWx9LG9uOntcIm9uQ2hhbmdlXCI6X3ZtLnNhdmVQcm9ibGVtLFwib25DbGlja1BvaW50XCI6X3ZtLm9uQ2xpY2tQb2ludH19KSwoX3ZtLmRldGFpbC5pc1JlcGFpck1vZGUpP19jKCdpdGVtJyx7YXR0cnM6e1wiYm9yZGVyXCI6XCJ0b3BcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgY29sb3ItZ3JheSBhbGlnbi1jXCJ9LFtfdm0uX3YoXCLngrnlh7vlm77nurjkuK3ngrnkvY3mn6XnnIvor6bmg4VcIildKV0pOl92bS5fZSgpLChfdm0uZGV0YWlsLm1vZGUgPT09ICdlZGl0JyB8fCBfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWRvJyk/W19jKCdkaXYnLHtzdGF0aWNTdHlsZTp7XCJwYWRkaW5nXCI6XCIxMHB4IDBcIn19LFtfYygnaXRlbScse3N0YXRpY0NsYXNzOlwicHQxNSBwYjE1XCJ9LFtfYygnaXRlbS1pbWctbGlzdCcse2F0dHJzOntcIm1heGxlbmd0aFwiOjUwLFwidHJhY2stdGV4dFwiOiflrp7mtYvlrp7ph48nfSxvbjp7XCJjYWxsYmFja1wiOl92bS5zYXZlUHJvYmxlbX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLmltZyksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwiaW1nXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwuaW1nXCJ9fSldLDEpXSwxKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJtYjEwXCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOlwiYy1sYWJlbFwifSxbX3ZtLl92KFwi6K+36YCJ5oup5pa95bel5Y2V5L2NXCIpXSksX3ZtLl9sKChfdm0uZGV0YWlsLnByb2JsZW1EYXRhKSxmdW5jdGlvbihwcm9ibGVtKXtyZXR1cm4gX2MoJ3NpbmdsZS1zZWxlY3QnLHtrZXk6cHJvYmxlbS5jaGVja0l0ZW0uaWQsYXR0cnM6e1widGl0bGVcIjpwcm9ibGVtLmNoZWNrSXRlbS5uYW1lLFwicGFnZS10aXRsZVwiOlwi6YCJ5oup5pa95bel5Y2V5L2NXCIsXCJwbGFjZWhvbGRlclwiOlwi6K+36YCJ5oup5pa95bel5Y2V5L2NXCIsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLmNvbnRyYWN0b3JzfSxvbjp7XCJvblNlbGVjdFwiOl92bS5zYXZlUHJvYmxlbX0sbW9kZWw6e3ZhbHVlOihwcm9ibGVtLmNvbnRyYWN0b3IpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChwcm9ibGVtLCBcImNvbnRyYWN0b3JcIiwgJCR2KX0sZXhwcmVzc2lvbjpcInByb2JsZW0uY29udHJhY3RvclwifX0pfSldLDIpLChfdm0uZGV0YWlsLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwubGVuZ3RoKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLlkIjmoLznjodcIixcIm1vZGVcIjpcImVkaXRcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgY29sb3ItdGhlbWUgYWxpZ24tclwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbX3ZtLl9sKChfdm0uZGV0YWlsLnByb2JsZW1EYXRhKSxmdW5jdGlvbihwcm9ibGVtLGluZGV4KXtyZXR1cm4gWyhpbmRleCk/W192bS5fdihcIjsgXCIpXTpfdm0uX2UoKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICBcIitfdm0uX3MoX3ZtLl9mKFwicGVyY2VudFwiKShwcm9ibGVtLnBhc3NyYXRlLDIpKStcIlxcbiAgICAgICAgICBcIildfSldLDIpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucGFzc3JhdGVfbW9kZSAhPT0gOCk/X2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5ZCI5qC85qCH5YeGXCIsXCJtb2RlXCI6XCJlZGl0XCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IGNvbG9yLWdyYXkgYWxpZ24tclwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxfdm0uX2woKF92bS5kZXRhaWwucHJvYmxlbURhdGEpLGZ1bmN0aW9uKHByb2JsZW0saW5kZXgpe3JldHVybiBfYygncCcse2tleTppbmRleH0sWyhwcm9ibGVtLnBhc3NyYXRlX21vZGUgIT09IDUpP19jKCdzcGFuJyx7c3RhdGljU3R5bGU6e1wiZGlzcGxheVwiOlwiaW5saW5lLWJsb2NrXCJ9fSxbX3ZtLl92KF92bS5fcyhwcm9ibGVtLmNoZWNrSXRlbS5uYW1lKSldKTpfdm0uX2UoKSwoXG4gICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNSB8fFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNiB8fFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxN1xuICAgICAgICAgICAgICApP19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHRfc3BlY2lhbFwiLGRvbVByb3BzOntcImlubmVySFRNTFwiOl92bS5fcyhwcm9ibGVtLnN0YW5kYXJkUmFuZ2UpfX0pOl9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJtbDVcIixzdGF0aWNTdHlsZTp7XCJ3aGl0ZS1zcGFjZVwiOlwibm93cmFwXCJ9fSxbX3ZtLl92KF92bS5fcyhwcm9ibGVtLnN0YW5kYXJkUmFuZ2UpKV0pLChwcm9ibGVtLmlzSkljaGVNb2RlKT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiY29sb3ItZ3JheVwifSxbX3ZtLl92KFwi5p6B5beu566X5rOVXCIpXSk6X3ZtLl9lKCldKX0pKV0pOl92bS5fZSgpLChfdm0uaGFzUG9pbnQgJiYgX3ZtLmhhc0V4Y2VlZCAmJiBfdm0uZGV0YWlsLm1vZGUgIT09ICdyZWRvJyk/W19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm5lZWQtcmVwYWlyXCIsb246e1wiY2xpY2tcIjpfdm0uc2V0TmVlZFJlcGFpcn19LFtfYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpfdm0uZGV0YWlsLm5lZWRSZXBhaXIgPyAnY2hlY2tib3gtc3F1YXJlLWNoZWNrZWQnIDogJ2NoZWNrYm94LXNxdWFyZSd9fSksX3ZtLl92KFwi6YCa55+l5pW05pS5XFxuICAgICAgICBcIildLDEpLChfdm0uZGV0YWlsLm5lZWRSZXBhaXIpP19jKCd1c2VyLXNlbGVjdCcse2F0dHJzOntcInRpdGxlXCI6XCLmlbTmlLnkurpcIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwucmVwYWlyT3B0aW9ucyxcIm1lbW9yeVwiOnRydWUsXCJiZWZvcmUtc2VsZWN0XCI6X3ZtLmJlZm9yZVNlbGVjdFJlcGFpcn0sb246e1wib25TZWxlY3RcIjpfdm0ub25TZWxlY3RSZXBhaXJ9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5yZXBhaXIpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcInJlcGFpclwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpclwifX0pOl92bS5fZSgpLChfdm0uZGV0YWlsLm5lZWRSZXBhaXIgJiYgX3ZtLmFsbG93TWVhc3VyZVJlaW5zcGVjdCk/X2MoJ3VzZXItc2VsZWN0Jyx7YXR0cnM6e1widGl0bGVcIjpcIuWkjemqjOS6ulwiLFwibXVsdGlcIjp0cnVlLFwib3B0aW9uc1wiOl92bS5tb2RlbC5yZWluc3BlY3RPcHRpb25zLFwibWVtb3J5XCI6dHJ1ZSxcImJlZm9yZS1jb25maXJtXCI6X3ZtLmJlZm9yZUNvbmZpcm1SZWluc3BlY3R9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5yZWluc3BlY3QpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcInJlaW5zcGVjdFwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlaW5zcGVjdFwifX0pOl92bS5fZSgpXTpfdm0uX2UoKV06X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnIHx8IF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCcpP1tfYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLlkIjmoLznjodcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgYWxpZ24tciBjb2xvci10aGVtZVwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbX3ZtLl9sKChfdm0uZGV0YWlsLnByb2JsZW1EYXRhKSxmdW5jdGlvbihwcm9ibGVtLGluZGV4KXtyZXR1cm4gWyhpbmRleCk/W192bS5fdihcIjsgXCIpXTpfdm0uX2UoKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICBcIitfdm0uX3MoX3ZtLl9mKFwicGVyY2VudFwiKShwcm9ibGVtLnBhc3NyYXRlLDIpKStcIlxcbiAgICAgICAgICBcIildfSldLDIpXSksX2MoJ2l0ZW0nLHtzdGF0aWNDbGFzczpcIm10MTBcIixhdHRyczp7XCJsYWJlbFwiOlwi54K55pWwXCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0XCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LFtfdm0uX2woKF92bS5kZXRhaWwucHJvYmxlbURhdGEpLGZ1bmN0aW9uKHByb2JsZW0saW5kZXgpe3JldHVybiBbKGluZGV4KT9bX3ZtLl92KFwiOyBcIildOl92bS5fZSgpLF92bS5fdihcIlxcbiAgICAgICAgICAgIFwiK192bS5fcyhwcm9ibGVtLnBvaW50TnVtKStcIlxcbiAgICAgICAgICBcIildfSldLDIpXSksKF92bS5kZXRhaWwucGFzc3JhdGVfbW9kZSAhPT0gOCk/X2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5ZCI5qC85qCH5YeGXCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0XCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LF92bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSxpbmRleCl7cmV0dXJuIF9jKCdwJyx7a2V5OmluZGV4fSxbKHByb2JsZW0ucGFzc3JhdGVfbW9kZSAhPT0gNSk/X2MoJ3NwYW4nLFtfdm0uX3YoX3ZtLl9zKHByb2JsZW0uY2hlY2tJdGVtLm5hbWUpKV0pOl92bS5fZSgpLChcbiAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE1IHx8XG4gICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE2IHx8XG4gICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE3XG4gICAgICAgICAgICAgICk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dF9zcGVjaWFsXCIsZG9tUHJvcHM6e1wiaW5uZXJIVE1MXCI6X3ZtLl9zKHByb2JsZW0uc3RhbmRhcmRSYW5nZSl9fSk6X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcIm1sNVwiLHN0YXRpY1N0eWxlOntcIndoaXRlLXNwYWNlXCI6XCJub3dyYXBcIn19LFtfdm0uX3YoX3ZtLl9zKHByb2JsZW0uc3RhbmRhcmRSYW5nZSkpXSksKHByb2JsZW0uaXNKSWNoZU1vZGUpP19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJjb2xvci1ncmF5XCJ9LFtfdm0uX3YoXCLmnoHlt67nrpfms5VcIildKTpfdm0uX2UoKV0pfSkpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1iMTBcIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJjLWxhYmVsXCJ9LFtfdm0uX3YoXCLor7fpgInmi6nmlr3lt6XljZXkvY1cIildKSxfdm0uX2woKF92bS5kZXRhaWwucHJvYmxlbURhdGEpLGZ1bmN0aW9uKHByb2JsZW0pe3JldHVybiBfYygnc2luZ2xlLXNlbGVjdCcse2tleTpwcm9ibGVtLmNoZWNrSXRlbS5pZCxhdHRyczp7XCJ0aXRsZVwiOnByb2JsZW0uY2hlY2tJdGVtLm5hbWUsXCJwYWdlLXRpdGxlXCI6XCLpgInmi6nmlr3lt6XljZXkvY1cIixcInBsYWNlaG9sZGVyXCI6XCLor7fpgInmi6nmlr3lt6XljZXkvY1cIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwuY29udHJhY3RvcnMsXCJtb2RlXCI6XCJ2aWV3XCJ9LG1vZGVsOnt2YWx1ZToocHJvYmxlbS5jb250cmFjdG9yKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQocHJvYmxlbSwgXCJjb250cmFjdG9yXCIsICQkdil9LGV4cHJlc3Npb246XCJwcm9ibGVtLmNvbnRyYWN0b3JcIn19KX0pXSwyKTpfdm0uX2UoKV06X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKT9bKF92bS5kZXRhaWwuaW1nLmxlbmd0aCk/X2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi55u45YWz54Wn54mHXCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1jb25cIixhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sW19jKCdpdGVtLWltZy1saXN0Jyx7YXR0cnM6e1wiZWRpdGFibGVkXCI6ZmFsc2V9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5pbWcpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcImltZ1wiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLmltZ1wifX0pXSwxKV0pOl92bS5fZSgpLChfdm0uaGFzQ29udHJhY3Rvcik/X2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5pa95bel5Y2V5L2NXCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0XCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LF92bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSl7cmV0dXJuIF9jKCdwJyx7a2V5OnByb2JsZW0uaWR9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICBcIitfdm0uX3MocHJvYmxlbS5jb250cmFjdG9yID8gcHJvYmxlbS5jb250cmFjdG9yLm5hbWUgOiAnJykrXCJcXG4gICAgICAgICAgXCIpXSl9KSldKTpfdm0uX2UoKSxfYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5qOA5p+l5Lq6XCIsXCJtb2RlXCI6XCJ2aWV3XCIsXCJlZGl0YWJsZWRcIjpmYWxzZX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlZ2lzdCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVnaXN0XCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVnaXN0XCJ9fSksX2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5qOA5p+l5pe26Ze0XCIsXCJ0ZXh0XCI6X3ZtLmZvcm1hdERhdGUoX3ZtLmRldGFpbC5yZWdpc3RfZGF0ZSl9fSksKF92bS5kZXRhaWwuaXNSZXBhaXJNb2RlKT9bKF92bS5kZXRhaWwucmVwYWlyLmlkKT9fYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5pW05pS55Lq6XCIsXCJtb2RlXCI6XCJ2aWV3XCIsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLnJlcGFpck9wdGlvbnMsXCJkYXRlXCI6X3ZtLmRldGFpbC5zdGF0dXMgPT09ICflt7LmlbTmlLknID8gX3ZtLmZvcm1hdERhdGUoX3ZtLmRldGFpbC5yZXBhaXJfZGF0ZSkgOiAnJyxcImVkaXRhYmxlZFwiOihfdm0uZGV0YWlsLmlzQ2hlY2tlciB8fCBfdm0uZGV0YWlsLmlzUmVwYWlyIHx8IF92bS5kZXRhaWwuaXNSZWluc3BlY3QpICYmXG4gICAgICAgICAgICAgIF92bS5kZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5JyxcImJlZm9yZS1zZWxlY3RcIjpfdm0uYmVmb3JlU2VsZWN0UmVwYWlyfSxvbjp7XCJvblNlbGVjdFwiOl92bS5vblNlbGVjdFJlcGFpcn0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyXCJ9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucmVpbnNwZWN0Lmxlbmd0aCk/X2MoJ3VzZXItc2VsZWN0Jyx7YXR0cnM6e1widGl0bGVcIjpcIuWkjemqjOS6ulwiLFwibW9kZVwiOlwidmlld1wiLFwibXVsdGlcIjp0cnVlLFwib3B0aW9uc1wiOl92bS5tb2RlbC5yZWluc3BlY3RPcHRpb25zLFwiZWRpdGFibGVkXCI6KF92bS5kZXRhaWwuaXNDaGVja2VyIHx8IF92bS5kZXRhaWwuaXNSZWluc3BlY3QpICYmXG4gICAgICAgICAgICAgIChfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScgfHwgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXlpI3pqownKSxcImJlZm9yZS1jb25maXJtXCI6X3ZtLmJlZm9yZUNvbmZpcm1SZWluc3BlY3R9LG9uOntcIm9uU2VsZWN0XCI6X3ZtLm9uU2VsZWN0UmVpbnNwZWN0fSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVpbnNwZWN0KSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZWluc3BlY3RcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5yZWluc3BlY3RcIn19KTpfdm0uX2UoKV06WyhcbiAgICAgICAgICAgICgoX3ZtLmRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZSAmJiBfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlLmxlbmd0aCA+IDApIHx8XG4gICAgICAgICAgICAgIF92bS5kZXRhaWwucmVwYWlyX3JlbWFyaykgJiZcbiAgICAgICAgICAgICAgX3ZtLmRldGFpbC5zdGF0dXMgIT09ICflvoXmlbTmlLknXG4gICAgICAgICAgKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLmlbTmlLnnhafniYdcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbKF92bS5kZXRhaWwucmVwYWlyX3JlbWFyayk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1mb250XCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5kZXRhaWwucmVwYWlyX3JlbWFyaykpXSk6X3ZtLl9lKCksX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJlZGl0YWJsZWRcIjpmYWxzZX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJfaW1hZ2VfZmlsZVwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlXCJ9fSldLDEpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucmVwYWlyLmlkICYmIF92bS5kZXRhaWwuc3RhdHVzICE9PSAn5qOA5p+l5a6M5q+VJyk/X2MoJ3VzZXItc2VsZWN0Jyx7YXR0cnM6e1widGl0bGVcIjpcIuaVtOaUueS6ulwiLFwibW9kZVwiOlwidmlld1wiLFwib3B0aW9uc1wiOl92bS5tb2RlbC5yZXBhaXJPcHRpb25zLFwiZGF0ZVwiOl92bS5kZXRhaWwuc3RhdHVzID09PSAn5bey5pW05pS5JyA/IF92bS5mb3JtYXREYXRlKF92bS5kZXRhaWwucmVwYWlyX2RhdGUpIDogJycsXCJlZGl0YWJsZWRcIjooX3ZtLmRldGFpbC5pc0NoZWNrZXIgfHwgX3ZtLmRldGFpbC5pc1JlcGFpcikgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknfSxvbjp7XCJvblNlbGVjdFwiOl92bS5vblNlbGVjdFJlcGFpcn0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyXCJ9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwuaXNSZXBhaXIgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLmlbTmlLnnhafniYdcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJtYXhsZW5ndGhcIjo1MCxcInRyYWNrLXRleHRcIjon5a6e5rWL5a6e6YePJ30sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJfaW1hZ2VfZmlsZVwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlXCJ9fSldLDEpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwuaXNSZXBhaXIgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknKT9fYygnaXRlbS10ZXh0YXJlYScse3N0YXRpY0NsYXNzOlwiYm9yZGVyLXRiXCIsYXR0cnM6e1wicGxhY2Vob2xkZXJcIjpcIuihpeWFheivtOaYjlwifSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVwYWlyX3JlbWFyayksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyX3JlbWFya1wiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpcl9yZW1hcmtcIn19KTpfdm0uX2UoKSwoXG4gICAgICAgICAgICBfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+ajgOafpeWujOavlScgJiZcbiAgICAgICAgICAgICAgX3ZtLmhhc1BvaW50ICYmXG4gICAgICAgICAgICAgIF92bS5oYXNFeGNlZWQgJiZcbiAgICAgICAgICAgICAgX3ZtLmRldGFpbC5tb2RlID09PSAndmlldycgJiZcbiAgICAgICAgICAgICAgIShfdm0uYWxsb3dNZWFzdXJlUmVpbnNwZWN0ICYmICFfdm0uZGV0YWlsLmlzQ2hlY2tlcilcbiAgICAgICAgICApP1tfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJuZWVkLXJlcGFpclwiLG9uOntcImNsaWNrXCI6X3ZtLnNldE5lZWRSZXBhaXJ9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6X3ZtLmRldGFpbC5uZWVkUmVwYWlyID8gJ2NoZWNrYm94LXNxdWFyZS1jaGVja2VkJyA6ICdjaGVja2JveC1zcXVhcmUnfX0pLF92bS5fdihcIumAmuefpeaVtOaUuVxcbiAgICAgICAgICBcIildLDEpLChfdm0uZGV0YWlsLm5lZWRSZXBhaXIpP19jKCd1c2VyLXNlbGVjdCcse2F0dHJzOntcInRpdGxlXCI6XCLmlbTmlLnkurpcIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwucmVwYWlyT3B0aW9ucyxcIm1lbW9yeVwiOnRydWUsXCJiZWZvcmUtc2VsZWN0XCI6X3ZtLmJlZm9yZVNlbGVjdFJlcGFpcn0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyXCJ9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwubmVlZFJlcGFpciAmJiBfdm0uYWxsb3dNZWFzdXJlUmVpbnNwZWN0KT9fYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5aSN6aqM5Lq6XCIsXCJtdWx0aVwiOnRydWUsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLnJlaW5zcGVjdE9wdGlvbnMsXCJtZW1vcnlcIjp0cnVlLFwiYmVmb3JlLWNvbmZpcm1cIjpfdm0uYmVmb3JlQ29uZmlybVJlaW5zcGVjdH0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlaW5zcGVjdCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVpbnNwZWN0XCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVpbnNwZWN0XCJ9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwubmVlZFJlcGFpcik/X2MoJ2FwcC1idXR0b24tZ3JvdXAnLHtzdGF0aWNDbGFzczpcInB0MTBcIn0sW19jKCdhcHAtYnV0dG9uJyx7YXR0cnM6e1wibmFtZVwiOlwi6YCa55+l5pW05pS5XCJ9LG9uOntcImNsaWNrXCI6X3ZtLnNldFJlcGFpcn19KV0sMSk6X3ZtLl9lKCldOl92bS5fZSgpXV06X3ZtLl9lKCksKFxuICAgICAgICBfdm0uZGV0YWlsLnN0YXR1cyAhPT0gJ+ajgOafpeS4rScgJiZcbiAgICAgICAgICBfdm0uZGV0YWlsLm1vZGUgPT09ICd2aWV3JyAmJlxuICAgICAgICAgICFfdm0uYWxsb3dNZWFzdXJlUmVpbnNwZWN0ICYmXG4gICAgICAgICAgX3ZtLm1vZGVsLmN1cnJlbnRVc2VyQmF0Y2hJZCA9PT0gX3ZtLmRldGFpbC5iYXRjaF9pZFxuICAgICAgKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcsW19jKCdhcHAtYnV0dG9uJyx7YXR0cnM6e1widHlwZVwiOlwib3BlcmF0ZVwiLFwibmFtZVwiOlwi5YaN5rWL5LiA5qyhXCJ9LG9uOntcImNsaWNrXCI6X3ZtLnNldFJlZG99fSldLDEpOl92bS5fZSgpXTpfdm0uX2UoKSxfYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1sb2FkaW5nXCI6ZmFsc2UsXCJpcy1lbXB0eVwiOiFfdm0uaGFzTWFzdGVyQ2hlY2tpdGVtIHx8ICFfdm0uZHJhd2luZ1VybCxcImVtcHR5LXRleHRcIjohX3ZtLmhhc01hc3RlckNoZWNraXRlbSA/ICfor7fpgInmi6nmo4Dmn6XpobknIDogJ+ayoeacieaIt+Wei+Wbvid9fSldLDIpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtdGVtcGxhdGUtMy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC10ZW1wbGF0ZS0zLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZGV0YWlsLXRlbXBsYXRlLTMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVjNmNhYWMwJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RldGFpbC10ZW1wbGF0ZS0zLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGV0YWlsLXRlbXBsYXRlLTMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2RldGFpbC10ZW1wbGF0ZS0zLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTVjNmNhYWMwJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjVjNmNhYWMwXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZHJhd2luZy13aXRoLXBvaW50LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZHJhd2luZy13aXRoLXBvaW50LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZHJhd2luZy13aXRoLXBvaW50LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MWNlN2ZlYyZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9kcmF3aW5nLXdpdGgtcG9pbnQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9kcmF3aW5nLXdpdGgtcG9pbnQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2RyYXdpbmctd2l0aC1wb2ludC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03MWNlN2ZlYyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI3MWNlN2ZlY1wiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd0cmFuc2l0aW9uJyx7YXR0cnM6e1wibmFtZVwiOlwic2xpZGUtcmlnaHRcIn19LFsoX3ZtLnNob3cpP19jKCdwYWdlLWNvbnRlbnQnLHthdHRyczp7XCJtb2RlXCI6XCJkaWFsb2dcIixcInRpdGxlXCI6XCLmiLflnovlm75cIixcIm9uLWNsb3NlXCI6X3ZtLmNsb3NlUG9wdXB9fSxbKF92bS5tb2RlID09PSAnZWRpdCcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImhlYWRlci1idG5cIixhdHRyczp7XCJzbG90XCI6XCJoZWFkZXItYmFyLXJpZ2h0XCJ9LG9uOntcImNsaWNrXCI6X3ZtLmNvbmZpcm19LHNsb3Q6XCJoZWFkZXItYmFyLXJpZ2h0XCJ9LFtfdm0uX3YoXCJcXG4gICAgICDnoa7lrppcXG4gICAgXCIpXSk6X3ZtLl9lKCksX2MoJ3Njcm9sbGVyJyx7cmVmOlwic2Nyb2xsZXJcIn0sWyhfdm0ubW9kZSA9PT0gJ2VkaXQnKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwMTUgYm9yZGVyLWJvdHRvbSBjb2xvci1ncmF5XCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgIOeCueWHu+aIt+Wei+Wbvuagh+iusOeIhueCueS9jee9ru+8jOW5tui+k+WFpeeIhueCueaVsOWAvFxcbiAgICAgIFwiKV0pOl92bS5fZSgpLF9jKCdkcmF3aW5nJyx7cmVmOlwiZHJhd2luZ1wiLHN0eWxlOih7IGhlaWdodDogX3ZtLmRyYXdpbmdIZWlnaHQgKyAncHgnIH0pLGF0dHJzOntcInVybFwiOl92bS51cmwsXCJwb2ludHNcIjpfdm0ucG9pbnRzfSxvbjp7XCJvbmNsaWNrXCI6X3ZtLm9uY2xpY2ssXCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO319fSksKF92bS5tb2RlID09PSAnZWRpdCcgJiYgX3ZtLnBvaW50cy5sZW5ndGgpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBvaW50LWlucHV0LWxpc3QgYm9yZGVyLXRiXCJ9LF92bS5fbCgoX3ZtLnBvaW50cyksZnVuY3Rpb24ocG9pbnQscG9pbnRJbmRleCl7cmV0dXJuIF9jKCdudW1iZXItaW5wdXQnLHtrZXk6cG9pbnRJbmRleCxyZWY6XCJleGNlZWQtcG9pbnQtaW5wdXRcIixyZWZJbkZvcjp0cnVlLHN0YXRpY0NsYXNzOlwibXIxMCBtYjEwXCIsYXR0cnM6e1wiZGVjaW1hbFwiOl92bS52YWx1ZURlY2ltYWwsXCJyYW5nZVwiOl92bS52YWx1ZVJhbmdlfSxvbjp7XCJmb2N1c1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmlucHV0Rm9jdXMocG9pbnRJbmRleCl9LFwiYmx1clwiOl92bS5pbnB1dEJsdXJ9LG1vZGVsOnt2YWx1ZToocG9pbnQudmFsKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQocG9pbnQsIFwidmFsXCIsICQkdil9LGV4cHJlc3Npb246XCJwb2ludC52YWxcIn19LFtfYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbi1taW51c1wiLGF0dHJzOntcInNsb3RcIjpcImV4dGVuZFwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO192bS5yZW1vdmVFeGNlZWRQb2ludChwb2ludCl9fSxzbG90OlwiZXh0ZW5kXCJ9KV0pfSkpOl92bS5fZSgpLChfdm0ubW9kZSA9PT0gJ3ZpZXcnKT9bX3ZtLl9sKChfdm0ubGF5b3V0UG9pbnRzRGF0YSksZnVuY3Rpb24oaXRlbSxpdGVtSW5kZXgpe3JldHVybiBbKGl0ZW0uaXRlbU5hbWUpP19jKCdpdGVtJyx7a2V5Oml0ZW1JbmRleCxhdHRyczp7XCJib3JkZXJcIjpcInRvcFwiLFwibGFiZWxcIjppdGVtLml0ZW1OYW1lfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tY29uXCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LFtfdm0uX2woKGl0ZW0uYXJlYXMpLGZ1bmN0aW9uKGFyZWEsYXJlYUluZGV4KXtyZXR1cm4gWyhhcmVhLnBvaW50cyAmJiBhcmVhLnBvaW50cy5sZW5ndGgpP1soYXJlYS5hcmVhTmFtZSk/X2MoJ3AnLHtrZXk6J25hbWUnICsgYXJlYUluZGV4LHN0YXRpY0NsYXNzOlwibWIxMFwifSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImFyZWEtbmFtZVwifSxbX3ZtLl92KF92bS5fcyhhcmVhLmFyZWFOYW1lKSldKV0pOl92bS5fZSgpLF9jKCdkaXYnLHtrZXk6J3BvaW50cycgKyBhcmVhSW5kZXh9LF92bS5fbCgoYXJlYS5wb2ludHMpLGZ1bmN0aW9uKHBvaW50LHBvaW50SW5kZXgpe3JldHVybiBfYygnc3Bhbicse2tleTpwb2ludEluZGV4LHN0YXRpY0NsYXNzOlwicG9pbnQtZWxlIG1yMTAgbWIxMFwiLGNsYXNzOntcbiAgICAgICAgICAgICAgICAgICAgICAgICdwb2ludC1leGNlZWQnOiBwb2ludC5pc0V4Y2VlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICdwb2ludC1jdXInOiBwb2ludC5pbmRleCA9PT0gX3ZtLmxpZ2h0SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNsaWNrUG9pbnRFbGUocG9pbnQpfX19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgICAgXCIrX3ZtLl9zKGl0ZW0ucGFzc3JhdGVNb2RlID09PSA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gcG9pbnQudmFsID09PSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAn5ZCI5qC8J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ+S4jeWQiOagvCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBwb2ludC52YWwpK1wiXFxuICAgICAgICAgICAgICAgICAgICBcIildKX0pKV06X3ZtLl9lKCldfSldLDIpXSk6W192bS5fbCgoaXRlbS5hcmVhcyksZnVuY3Rpb24oYXJlYSxhcmVhSW5kZXgpe3JldHVybiBbKGFyZWEucG9pbnRzICYmIGFyZWEucG9pbnRzLmxlbmd0aCk/X2MoJ2l0ZW0nLHtrZXk6YXJlYUluZGV4LHN0YXRpY0NsYXNzOlwicHQxNVwiLGF0dHJzOntcImJvcmRlclwiOlwidG9wXCJ9fSxbKGFyZWEuYXJlYU5hbWUpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tbGFiZWxcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgIFwiK192bS5fcyhhcmVhLmFyZWFOYW1lKStcIlxcbiAgICAgICAgICAgICAgICBcIildKTpfdm0uX2UoKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwifSxfdm0uX2woKGFyZWEucG9pbnRzKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gX2MoJ3NwYW4nLHtrZXk6cG9pbnRJbmRleCxzdGF0aWNDbGFzczpcInBvaW50LWVsZSBtcjEwIG1iMTBcIixjbGFzczp7XG4gICAgICAgICAgICAgICAgICAgICAgJ3BvaW50LWV4Y2VlZCc6IHBvaW50LmlzRXhjZWVkLFxuICAgICAgICAgICAgICAgICAgICAgICdwb2ludC1jdXInOiBwb2ludC5pbmRleCA9PT0gX3ZtLmxpZ2h0SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIH0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jbGlja1BvaW50RWxlKHBvaW50KX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgICAgICBcIitfdm0uX3MoaXRlbS5wYXNzcmF0ZU1vZGUgPT09IDggPyAocG9pbnQudmFsID09PSAxID8gJ+WQiOagvCcgOiAn5LiN5ZCI5qC8JykgOiBwb2ludC52YWwpK1wiXFxuICAgICAgICAgICAgICAgICAgXCIpXSl9KSldKTpfdm0uX2UoKV19KV1dfSldOl92bS5fZSgpLChfdm0uc2Nyb2xsUGFkZGluZ0JvdHRvbSk/X2MoJ2Rpdicse3N0eWxlOih7ICdwYWRkaW5nLWJvdHRvbSc6IF92bS5zY3JvbGxQYWRkaW5nQm90dG9tICsgJ3B4JyB9KX0pOl92bS5fZSgpXSwyKV0sMSk6X3ZtLl9lKCldLDEpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XG5pbXBvcnQgZGlhbG9nIGZyb20gJy4vZHJhd2luZy13aXRoLXBvaW50LnZ1ZSc7XG5cbmxldCBpbnN0YW5jZSA9IGZhbHNlO1xuXG5pZiAoIWluc3RhbmNlKSB7XG4gIGxldCBEaWFsb2dDb21wb25lbnQgPSBWdWUuZXh0ZW5kKGRpYWxvZyk7XG4gIGluc3RhbmNlID0gbmV3IERpYWxvZ0NvbXBvbmVudCh7XG4gICAgZWw6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICB9KTtcblxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGluc3RhbmNlLiRlbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NDNjMTVjYmMmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCJiY2E0ZDFjY1wiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC1kcm9wLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTJjYWM4ODY0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiMWI1YjA3ZGVcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyxfdm0uX2coe3N0YXRpY0NsYXNzOlwiZHJhd2luZy1jb25cIixzdHlsZTooeyB3aWR0aDogX3ZtLndpZHRoICsgJ3B4JywgaGVpZ2h0OiBfdm0uaGVpZ2h0ICsgJ3B4JyB9KX0sX3ZtLiRsaXN0ZW5lcnMpLFsoX3ZtLmlzRG93bmxvYWRpbmcpP1tfYygncCcsW19jKCdzdmcnLHtzdGF0aWNDbGFzczpcInN2Zy1sb2FkaW5nXCIsYXR0cnM6e1widmlld0JveFwiOlwiMCAwIDgwIDgwXCJ9fSxbX2MoJ2NpcmNsZScse2F0dHJzOntcImN4XCI6XCI0MFwiLFwiY3lcIjpcIjQwXCIsXCJyXCI6XCIzNlwifX0pXSldKSxfYygncCcse3N0YXRpY0NsYXNzOlwibG9hZGluZy10ZXh0XCJ9LFtfdm0uX3YoXCLmraPlnKjkuIvovb0uLi5cIildKV06WyghX3ZtLmVycm9yKT9fYygnY2FudmFzJyx7cmVmOlwiZHJhd2luZy1jYW52YXNcIixzdHlsZTooeyB3aWR0aDogX3ZtLndpZHRoICsgJ3B4JywgaGVpZ2h0OiBfdm0uaGVpZ2h0ICsgJ3B4JyB9KX0pOl92bS5fZSgpLChfdm0uZXJyb3IpP19jKCdwJyx7c3RhdGljQ2xhc3M6XCJlcnJvci10ZXh0XCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5lcnJvcikpXSk6X3ZtLl9lKCldXSwyKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZHJhd2luZy0zLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZHJhd2luZy0zLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZHJhd2luZy0zLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zMmM2MTczNiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9kcmF3aW5nLTMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9kcmF3aW5nLTMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2RyYXdpbmctMy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0zMmM2MTczNiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIzMmM2MTczNlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZmJhNTk5MGEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLnByb2JsZW0tZGV0YWlsLWhlYWRlcltkYXRhLXYtMDkwMWFhZGRde2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtoZWlnaHQ6NDBweDtwYWRkaW5nOjAgMTVweDtsaW5lLWhlaWdodDo0MHB4O2JhY2tncm91bmQtY29sb3I6I2YyZjJmMn0uemphcHAgLnByb2JsZW0tZGV0YWlsLWhlYWRlciAuc3RhdHVzW2RhdGEtdi0wOTAxYWFkZF17ZmxleDoxO2hlaWdodDoxNnB4O2xpbmUtaGVpZ2h0OjE2cHg7Ym9yZGVyLWxlZnQ6NXB4IHNvbGlkICNkZGQ7cGFkZGluZy1sZWZ0OjVweDtjb2xvcjojMTExO2ZvbnQtc2l6ZToxNnB4fS56amFwcCAucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC5zdGF0dXMtcmVkW2RhdGEtdi0wOTAxYWFkZF17Ym9yZGVyLWNvbG9yOiNmZjNkM2R9LnpqYXBwIC5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1ibHVlW2RhdGEtdi0wOTAxYWFkZF17Ym9yZGVyLWNvbG9yOiM0Mjc1ZTh9LnpqYXBwIC5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1ncmVlbltkYXRhLXYtMDkwMWFhZGRde2JvcmRlci1jb2xvcjojMGJjNjY2fS56amFwcCAucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC5zdGF0dXMtb3JhbmdlW2RhdGEtdi0wOTAxYWFkZF17Ym9yZGVyLWNvbG9yOiNmYzhiMDF9LnpqYXBwIC5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1ibGFja1tkYXRhLXYtMDkwMWFhZGRde2JvcmRlci1jb2xvcjojMzMzfS56amFwcCAucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC5zdGF0dXMtZ3JheVtkYXRhLXYtMDkwMWFhZGRde2JvcmRlci1jb2xvcjojOTk5fS56amFwcCAucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC5yZXR1cm5bZGF0YS12LTA5MDFhYWRkXSwuemphcHAgLnByb2JsZW0tZGV0YWlsLWhlYWRlciAudGltZW91dFtkYXRhLXYtMDkwMWFhZGRdLC56amFwcCAucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC51cmdlbnRbZGF0YS12LTA5MDFhYWRkXXtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6MCA1cHg7bWFyZ2luLWxlZnQ6NnB4O2hlaWdodDoxNnB4O2xpbmUtaGVpZ2h0OjE2cHg7Y29sb3I6I2ZmZjtmb250LXNpemU6MTJweDtib3JkZXItcmFkaXVzOjJweDstd2Via2l0LWJvcmRlci1yYWRpdXM6MnB4fS56amFwcCAucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC51cmdlbnRbZGF0YS12LTA5MDFhYWRkXXtiYWNrZ3JvdW5kLWNvbG9yOiNmZjNkM2R9LnpqYXBwIC5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnRpbWVvdXRbZGF0YS12LTA5MDFhYWRkXXtiYWNrZ3JvdW5kLWNvbG9yOiM5NTRjZmV9LnpqYXBwIC5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnJldHVybltkYXRhLXYtMDkwMWFhZGRde2JhY2tncm91bmQtY29sb3I6I2ZjOGIwMX0uemphcHAgLnByb2JsZW0tZGV0YWlsLWhlYWRlciAub3BlcmF0W2RhdGEtdi0wOTAxYWFkZF17aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6NDBweDt3aGl0ZS1zcGFjZTpub3dyYXA7Zm9udC1zaXplOjE2cHg7Y29sb3I6IzZiN2JhOX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgdi1pZj1cInNob3dcIiBjbGFzcz1cImNvbnRlbnRcIiA6c3R5bGU9XCJ7IHRvcDogY29udGVudFRvcCArICdweCcgfVwiIEBjbGljay5zZWxmPVwiY2xvc2VQb3B1cFwiPlxuICAgIDx0cmFuc2l0aW9uXG4gICAgICBuYW1lPVwic2xpZGUtZG93blwiXG4gICAgICBAZW50ZXI9XCJpc09wZW5pbmcgPSB0cnVlXCJcbiAgICAgIEBhZnRlci1lbnRlcj1cImlzT3BlbmluZyA9IGZhbHNlXCJcbiAgICAgIEBsZWF2ZT1cImlzQ2xvc2luZyA9IHRydWVcIlxuICAgICAgQGFmdGVyLWxlYXZlPVwiYWZ0ZXJDbG9zZVwiXG4gICAgPlxuICAgICAgPGRpdiB2LWlmPVwic2hvd0xpc3RcIiBjbGFzcz1cImJveFwiIDpzdHlsZT1cInsgaGVpZ2h0OiBsaXN0SGVpZ2h0ICsgJ3B4JyB9XCI+XG4gICAgICAgIDxkaXYgdi1pZj1cIiFpc09wdGlvbnNFbXB0eVwiIHJlZj1cImxpc3Qtd2FycFwiIGNsYXNzPVwibGlzdC13cmFwXCI+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgdi1mb3I9XCIobWFwLCBtYXBLZXkpIGluIGxheW91dE1hcFwiXG4gICAgICAgICAgICA6a2V5PVwiJ21hcCcgKyBtYXBLZXlcIlxuICAgICAgICAgICAgY2xhc3M9XCJsaXN0XCJcbiAgICAgICAgICAgIDpjbGFzcz1cInsgW21hcC5iZ0NvbG9yXTogdHJ1ZSB9XCJcbiAgICAgICAgICAgIDpzdHlsZT1cInsgZmxleDogbWFwLmZsZXggfVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiB2LWlmPVwibG9hZGluZ1NldFttYXAua2V5XVwiIGNsYXNzPVwibG9hZGluZy10aXBzXCI+XG4gICAgICAgICAgICAgIC4uLlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgdi1mb3I9XCIoaXRlbSwga2V5KSBpbiBvcHRpb25zU2V0W21hcC5rZXldXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwia2V5XCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cIml0ZW0tZHJvcGRvd25cIlxuICAgICAgICAgICAgICAgIDpjbGFzcz1cInsgc2VsZWN0ZWQ6IHNlbGVjdGVkU2V0W21hcC5rZXldICYmIHNlbGVjdGVkU2V0W21hcC5rZXldLmlkID09PSBpdGVtLmlkIH1cIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cInNlbGVjdChpdGVtLCBtYXAua2V5KVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0XCI+XG4gICAgICAgICAgICAgICAgICA8cCB2LWh0bWw9XCJzaG93TmFtZShpdGVtLm5hbWVTaG93IHx8IGl0ZW0ubmFtZSlcIj48L3A+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInNlbGVjdC1ub3RlXCI+e3sgaXRlbS5ub3RlIH19PC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2l0ZW0+XG5cbiAgICAgICAgICAgICAgPGRpdiB2LWlmPVwiIW9wdGlvbnNTZXRbbWFwLmtleV0gfHwgIW9wdGlvbnNTZXRbbWFwLmtleV0ubGVuZ3RoXCIgY2xhc3M9XCJlbXB0eS10aXBzXCI+XG4gICAgICAgICAgICAgICAge3sgaXNJdGVtT3B0aW9uc0VtcHR5KG1hcC5rZXkpID8gbWFwLmVtcHR5VGV4dCA6ICfor7fpgInmi6knIH19XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGFwcC1idXR0b25cbiAgICAgICAgICBjbGFzcz1cImJ0bi1jb25maXJtXCJcbiAgICAgICAgICA6Y2xhc3M9XCJ7ICdidG4tZGlzYWJsZWQnOiAhYWxsb3dDb25maXJtIH1cIlxuICAgICAgICAgIEBjbGljaz1cImNvbmZpcm1cIlxuICAgICAgICAgIG5hbWU9XCLnoa7lrppcIlxuICAgICAgICAvPlxuXG4gICAgICAgIDxsb2FkaW5nLXN0YXR1cyA6aXMtZW1wdHk9XCJpc09wdGlvbnNFbXB0eVwiIGVtcHR5LXRleHQ9XCLmsqHmnInmlbDmja5cIiAvPlxuICAgICAgPC9kaXY+XG4gICAgPC90cmFuc2l0aW9uPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5cbmltcG9ydCBJdGVtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtJztcbmltcG9ydCBBcHBCdXR0b24gZnJvbSAnQHNyYy9jb21wb25lbnRzL2FwcC1idXR0b24vaW5kZXgudnVlJztcbmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnQGNvbW1vbi9ldmVudC1idXMnO1xuaW1wb3J0IFBvcHVwTWl4aW4gZnJvbSAnQHNyYy91dGlscy9wb3B1cC1taXhpbic7XG5cbmltcG9ydCBDb21tb25CYXNlZGF0YVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9jb21tb24tYmFzZWRhdGEtc2VydmljZSc7XG4vLyBpbXBvcnQgc3RvcmUgZnJvbSAnQHN0b3JlJztcblxuLy8gbGV0IF9vcHRpb25zID0gW107XG5sZXQgX3NlbGVjdGVkID0gW107XG4vLyBvcHRpb25zIOagvOW8j+i9rOaNou+8jFt7bmFtZTogJ+agh+autSd9LHtrZXk6ICdidWlsZGluZ3MnLCBuYW1lOiAn5qW85qCLJ30sIHtrZXk6ICd1bml0cycsIG5hbWU6ICfljZXlhYMnfV1cbi8vIOm7mOiupOeahCBrZXkg5pivIGNoaWxkcmVk77yM5aaC5p6c5qC85byP6KaB6Ieq5a6a5LmJ77yM5bCx5Y+v5Lul55So5Yiw6L+Z5Liq5Y+C5pWwXG4vLyBsZXQgX29wdGlvbnNNYXAgPSBbXTtcbmxldCBfaXRlbUZsZXggPSBbMywgMywgMiwgMl07XG5sZXQgX2VtcHR5VGV4dCA9IFsn5peg5qCH5q61JywgJ+aXoOalvOagiycsICfml6DmpbzlsYInLCAn5peg5oi/6Ze0J107XG5sZXQgX2JnQ29sb3JTZXQgPSBbJycsICdsaXN0IGJnLWdyYXk2JywgJ2xpc3QgYmctZ3JheTUnLCAnbGlzdCBiZy1ncmF5NCddO1xubGV0IF9jYWxsYmFjaztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnRHJvcERvd25TZWxlY3REaWFsb2cnLFxuICBjb21wb25lbnRzOiB7IEl0ZW0sIEFwcEJ1dHRvbiB9LFxuICBtaXhpbnM6IFtQb3B1cE1peGluXSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2hvdzogZmFsc2UsXG4gICAgICBzaG93TGlzdDogZmFsc2UsXG4gICAgICBpc09wZW5pbmc6IGZhbHNlLFxuICAgICAgaXNDbG9zaW5nOiBmYWxzZSxcblxuICAgICAgLy8g5LiL5ouJ5qGG6Led56a76aG26YOo55qE6Led56a7XG4gICAgICBjb250ZW50VG9wOiA2NCxcbiAgICAgIC8vIOWIl+ihqOmrmOW6plxuICAgICAgbGlzdEhlaWdodDogNTEwLFxuXG4gICAgICAvLyDpgInmi6npoblcbiAgICAgIHNlbGVjdEl0ZW1zOiBbXSxcbiAgICAgIC8vIOeUqOadpeaYvuekuuW4g+WxgOeahOaVsOaNrlxuICAgICAgbGF5b3V0TWFwOiBbXSxcblxuICAgICAgbG9hZGluZ1NldDoge30sXG4gICAgICBvcHRpb25zU2V0OiB7fSxcbiAgICAgIHNlbGVjdGVkU2V0OiB7fSxcblxuICAgICAgLy8g55So5LqO6K6w5b2V5b2T5YmN5by556qX5piv5ZOq5Liq57uE5Lu25omT5byA55qE77yM5Lya5o6l5Y+X5Lyg6L+H5p2l55qEIF91aWRcbiAgICAgIGNvbXBvbmVudFVpZDogJycsXG5cbiAgICAgIGJhY2tCdXR0b25FdmVudDogbnVsbCxcbiAgICAgIHRhcmdldDogJycsXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBpc09wdGlvbnNFbXB0eSgpIHtcbiAgICAgIGxldCBmaXJzdEl0ZW1LZXkgPSB0aGlzLnNlbGVjdEl0ZW1zWzBdO1xuXG4gICAgICBpZiAoXG4gICAgICAgIGZpcnN0SXRlbUtleSAmJlxuICAgICAgICAhdGhpcy5sb2FkaW5nU2V0W2ZpcnN0SXRlbUtleV0gJiZcbiAgICAgICAgXy5pc0VtcHR5KHRoaXMub3B0aW9uc1NldFtmaXJzdEl0ZW1LZXldKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBhbGxvd0NvbmZpcm0oKSB7XG4gICAgICByZXR1cm4gIV8uaXNFbXB0eSh0aGlzLnNlbGVjdGVkU2V0KSAmJiAhXy5pc0VtcHR5KHRoaXMuc2VsZWN0ZWRTZXQuZmxvb3IpO1xuICAgIH0sXG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgc2hvdyh2KSB7XG4gICAgICBpZiAodikge1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zaG93TGlzdCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2VsZWN0ZWRTZXQodikge1xuICAgICAgaWYgKHYpIHtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLiRyZWZzWydsaXN0LXdhcnAnXSkge1xuICAgICAgICAgICAgXy5lYWNoKHRoaXMuJHJlZnNbJ2xpc3Qtd2FycCddLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWxlY3RlZCcpIHx8IFtdLCBzZWxlY3RlZERvbSA9PiB7XG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkRG9tLnNjcm9sbEludG9WaWV3SWZOZWVkZWQodHJ1ZSk7XG4gICAgICAgICAgICAgIH0sIDQwMCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgRXZlbnRCdXMuJG9uKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICBFdmVudEJ1cy4kb24oJ3BhZ2VDb250ZW50Q2xpY2snLCB0aGlzLm9uQ2xpY2tPdGhlcik7XG4gIH0sXG4gIGRlc3Ryb3llZCgpIHtcbiAgICBFdmVudEJ1cy4kb2ZmKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICBFdmVudEJ1cy4kb2ZmKCdwYWdlQ29udGVudENsaWNrJywgdGhpcy5vbkNsaWNrT3RoZXIpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLyog5omT5byA5by556qX77yMcGFyYW1z5YaF5a6577yaXG4gICAgICogb3B0aW9uczogQXJyYXkg5aSH6YCJ6aG5XG4gICAgICogc2VsZWN0ZWQ6IEFycmF5IOW3sumAiemhuVxuICAgICAqIGVsOiBEb20g55uu5qCH5YWD57Sg77yM55So5LqO6K6h566X5by556qX6Led56a76aG26YOo55qE6auY5bqmXG4gICAgICogaGFzQmdDb2xvcjogQm9vbGVhbiDlsYLnuqfliJfooajmmK/lkKbmnInog4zmma/oibJcbiAgICAgKiBlbXB0eVRleHQ6IEFycmF5IOWQhOWxgue6p+eahOS4uuepuuaPkOekuuivrVxuICAgICAqL1xuICAgIG9wZW5Qb3B1cChwYXJhbXMpIHtcbiAgICAgIC8vIOWmguaenOaYr+aJk+W8gOeahO+8jOWImeWFs+mXrVxuICAgICAgaWYgKHRoaXMuc2hvdykge1xuICAgICAgICBpZiAocGFyYW1zLmNvbXBvbmVudFVpZCA9PT0gdGhpcy5jb21wb25lbnRVaWQpIHtcbiAgICAgICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8g5YWI5YWz6Zet5b2T5YmN5by556qX77yM5YaN5omT5byAXG4gICAgICAgICAgdGhpcy5jbG9zZVBvcHVwKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9wZW5Qb3B1cChwYXJhbXMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmNvbXBvbmVudFVpZCA9IHBhcmFtcy5jb21wb25lbnRVaWQgfHwgJyc7XG5cbiAgICAgIC8vIOiuoeeul+mhtumDqOi3neemu1xuICAgICAgY29uc3QgJGhlYWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGF5b3V0LW1haW4gLmxheW91dC1oZWFkZXInKTtcbiAgICAgIHRoaXMuY29udGVudFRvcCA9ICRoZWFkLm9mZnNldEhlaWdodDtcblxuICAgICAgLy8g6K6h566X6aG26YOo6Led56a7XG4gICAgICBpZiAocGFyYW1zLmVsKSB7XG4gICAgICAgIGxldCBib3VuZGluZyA9IHBhcmFtcy5lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgdGhpcy5jb250ZW50VG9wID0gYm91bmRpbmcuYm90dG9tO1xuICAgICAgfVxuICAgICAgdGhpcy50YXJnZXQgPSBwYXJhbXMuZWw7XG5cbiAgICAgIC8vIOiuoeeul+a7muWKqOWMuuWfn+mrmOW6plxuICAgICAgdGhpcy5saXN0SGVpZ2h0ID0gXy5taW5CeShbd2luZG93LmlubmVySGVpZ2h0IC0gdGhpcy5jb250ZW50VG9wIC0gNTAsIDUxMF0pO1xuXG4gICAgICAvLyBfb3B0aW9ucyA9IHBhcmFtcy5vcHRpb25zO1xuICAgICAgX3NlbGVjdGVkID0gXy5jbG9uZShwYXJhbXMuc2VsZWN0ZWQpO1xuICAgICAgX2NhbGxiYWNrID0gcGFyYW1zLmNhbGxiYWNrO1xuXG4gICAgICB0aGlzLnByb2pJZCA9IHBhcmFtcy5wcm9qSWQ7XG4gICAgICB0aGlzLnNlbGVjdEl0ZW1zID0gcGFyYW1zLnNlbGVjdEl0ZW1zO1xuICAgICAgdGhpcy5sYXlvdXRNYXAgPSBbXTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RJdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLmxheW91dE1hcC5wdXNoKHtcbiAgICAgICAgICBsZXZlbDogaSxcbiAgICAgICAgICBrZXk6IHRoaXMuc2VsZWN0SXRlbXNbaV0sXG4gICAgICAgICAgZmxleDogX2l0ZW1GbGV4W2ldLFxuICAgICAgICAgIGJnQ29sb3I6IF9iZ0NvbG9yU2V0W2ldLFxuICAgICAgICAgIGVtcHR5VGV4dDogX2VtcHR5VGV4dFtpXSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0aGlzLmluaXQoKTtcblxuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuJGVtaXQoJ29wZW4nKTtcbiAgICB9LFxuICAgIC8vIOWFs+mXreW8ueeql1xuICAgIGNsb3NlUG9wdXAoKSB7XG4gICAgICBpZiAodGhpcy5pc09wZW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNob3dMaXN0ID0gZmFsc2U7XG4gICAgICB0aGlzLiRlbWl0KCdjbG9zZScpO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHRoaXMuJG9uKCdhZnRlckNsb3NlUG9wdXAnLCByZXNvbHZlKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgYWZ0ZXJDbG9zZSgpIHtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuXG4gICAgICB0aGlzLmlzQ2xvc2luZyA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnYWZ0ZXJDbG9zZVBvcHVwJyk7XG4gICAgfSxcbiAgICAvLyDngrnlh7vlhbbku5blnLDmlrnvvIzlhbPpl63lvLnnqpdcbiAgICBvbkNsaWNrT3RoZXIoZSkge1xuICAgICAgaWYgKCFlIHx8ICFlLnRhcmdldCB8fCBlLnRhcmdldCA9PT0gdGhpcy50YXJnZXQgfHwgIXRoaXMuc2hvdykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcbiAgICB9LFxuXG4gICAgLy8g6I635Y+W5LiL5LiA57qn55qEIG9wdGlvbnMg77yMaXRlbSDkuLrpgInmi6npobnnmoQga2V577yM5LiN5Lyg5YC85YiZ5Y+W56ys5LiA57qnXG4gICAgZ2V0TmV4dEl0ZW1PcHRpb25zKGl0ZW0pIHtcbiAgICAgIGxldCBtYXAgPSB7XG4gICAgICAgIHNlY3Rpb246IHRoaXMuZ2V0U2VjdGlvbk9wdGlvbnMsXG4gICAgICAgICdidWlsZGluZy11bml0JzogdGhpcy5nZXRCdWlsZGluZ1VuaXRPcHRpb25zLFxuICAgICAgICBmbG9vcjogdGhpcy5nZXRGbG9vck9wdGlvbnMsXG4gICAgICAgIHJvb206IHRoaXMuZ2V0Um9vbU9wdGlvbnMsXG4gICAgICB9O1xuICAgICAgbGV0IGl0ZW1JbmRleCA9IHRoaXMuc2VsZWN0SXRlbXMuaW5kZXhPZihpdGVtKTtcbiAgICAgIGxldCBuZXh0SXRlbSA9IHRoaXMuc2VsZWN0SXRlbXNbaXRlbUluZGV4ICsgMV07XG4gICAgICBsZXQgbmV4dEdldHRlciA9IG1hcFtuZXh0SXRlbV07XG5cbiAgICAgIGlmIChuZXh0R2V0dGVyKSB7XG4gICAgICAgIHJldHVybiBuZXh0R2V0dGVyKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluagh+auteWIl+ihqFxuICAgIGdldFNlY3Rpb25PcHRpb25zKCkge1xuICAgICAgdGhpcy4kc2V0KHRoaXMubG9hZGluZ1NldCwgJ3NlY3Rpb24nLCB0cnVlKTtcbiAgICAgIHJldHVybiBDb21tb25CYXNlZGF0YVNlcnZpY2UuZ2V0UHJvamVjdFNlY3Rpb25zKHRoaXMucHJvaklkKS50aGVuKHJlcyA9PiB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLm9wdGlvbnNTZXQsICdzZWN0aW9uJywgcmVzKTtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMubG9hZGluZ1NldCwgJ3NlY3Rpb24nLCBmYWxzZSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6I635Y+W5qW85qCL5Y2V5YWD5YiX6KGoXG4gICAgZ2V0QnVpbGRpbmdVbml0T3B0aW9ucygpIHtcbiAgICAgIGxldCBzZWN0aW9uID0gdGhpcy5zZWxlY3RlZFNldFsnc2VjdGlvbiddO1xuICAgICAgbGV0IHNlY3Rpb25JZCA9IHNlY3Rpb24gJiYgc2VjdGlvbi5pZCA/IHNlY3Rpb24uaWQgOiAnJztcblxuICAgICAgaWYgKCFzZWN0aW9uSWQpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLiRzZXQodGhpcy5sb2FkaW5nU2V0LCAnYnVpbGRpbmctdW5pdCcsIHRydWUpO1xuICAgICAgcmV0dXJuIENvbW1vbkJhc2VkYXRhU2VydmljZS5nZXRTZWN0aW9uQnVpbGRpbmdBbmRVbml0KHNlY3Rpb25JZCkudGhlbihyZXMgPT4ge1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5vcHRpb25zU2V0LCAnYnVpbGRpbmctdW5pdCcsIHJlcyk7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLmxvYWRpbmdTZXQsICdidWlsZGluZy11bml0JywgZmFsc2UpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOiOt+WPlualvOWxguWIl+ihqFxuICAgIGdldEZsb29yT3B0aW9ucygpIHtcbiAgICAgIGxldCBidWlsZGluZyA9IHRoaXMuc2VsZWN0ZWRTZXRbJ2J1aWxkaW5nJ107XG4gICAgICBsZXQgYnVpbGRpbmdJZCA9IGJ1aWxkaW5nICYmIGJ1aWxkaW5nLmlkID8gYnVpbGRpbmcuaWQgOiAnJztcblxuICAgICAgaWYgKCFidWlsZGluZ0lkKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kc2V0KHRoaXMubG9hZGluZ1NldCwgJ2Zsb29yJywgdHJ1ZSk7XG4gICAgICByZXR1cm4gQ29tbW9uQmFzZWRhdGFTZXJ2aWNlLmdldEJ1aWxkaW5nRmxvb3JzKGJ1aWxkaW5nSWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMub3B0aW9uc1NldCwgJ2Zsb29yJywgcmVzKTtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMubG9hZGluZ1NldCwgJ2Zsb29yJywgZmFsc2UpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluaIv+mXtOWIl+ihqFxuICAgIGdldFJvb21PcHRpb25zKCkge1xuICAgICAgbGV0IGJ1aWxkaW5nID0gdGhpcy5zZWxlY3RlZFNldFsnYnVpbGRpbmcnXTtcbiAgICAgIGxldCBidWlsZGluZ0lkID0gYnVpbGRpbmcgJiYgYnVpbGRpbmcuaWQgPyBidWlsZGluZy5pZCA6ICcnO1xuICAgICAgbGV0IHVuaXQgPSB0aGlzLnNlbGVjdGVkU2V0Wyd1bml0J107XG4gICAgICBsZXQgZmxvb3IgPSB0aGlzLnNlbGVjdGVkU2V0WydmbG9vciddO1xuICAgICAgdW5pdCA9IHVuaXQgJiYgdW5pdC5pZCA/IHVuaXQuaWQgOiAnJztcbiAgICAgIGZsb29yID0gZmxvb3IgJiYgZmxvb3IuaWQgPyBmbG9vci5pZCA6ICcnO1xuXG4gICAgICBpZiAoIWJ1aWxkaW5nSWQgfHwgIWZsb29yKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kc2V0KHRoaXMubG9hZGluZ1NldCwgJ3Jvb20nLCB0cnVlKTtcbiAgICAgIHJldHVybiBDb21tb25CYXNlZGF0YVNlcnZpY2UuZ2V0QnVpbGRpbmdSb29tcyhidWlsZGluZ0lkLCB1bml0LCBmbG9vcikudGhlbihyZXMgPT4ge1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5vcHRpb25zU2V0LCAncm9vbScsIHJlcyk7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLmxvYWRpbmdTZXQsICdyb29tJywgZmFsc2UpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOiuvue9rumAieaLqemhueeahOmAieS4reWAvFxuICAgIHNldEl0ZW0oZGF0YSwgaXRlbUtleSkge1xuICAgICAgbGV0IG1hcCA9IHtcbiAgICAgICAgc2VjdGlvbjogdGhpcy5zZXRTZWN0aW9uLFxuICAgICAgICAnYnVpbGRpbmctdW5pdCc6IHRoaXMuc2V0QnVpbGRpbmdBbmRVbml0LFxuICAgICAgICBmbG9vcjogdGhpcy5zZXRGbG9vcixcbiAgICAgICAgcm9vbTogdGhpcy5zZXRSb29tLFxuICAgICAgfTtcblxuICAgICAgaWYgKG1hcFtpdGVtS2V5XSkge1xuICAgICAgICByZXR1cm4gbWFwW2l0ZW1LZXldKGRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDorr7nva7lvZPliY3moIfmrrVcbiAgICBzZXRTZWN0aW9uKGRhdGEpIHtcbiAgICAgIHRoaXMuJHNldCh0aGlzLnNlbGVjdGVkU2V0LCAnc2VjdGlvbicsIGRhdGEpO1xuICAgICAgdGhpcy5jbGVhck5leHRBbmRBbGwoJ3NlY3Rpb24nKTtcbiAgICAgIHJldHVybiB0aGlzLmdldE5leHRJdGVtT3B0aW9ucygnc2VjdGlvbicpO1xuICAgIH0sXG5cbiAgICAvLyDorr7nva7lvZPliY3mpbzmoIvljZXlhYNcbiAgICBzZXRCdWlsZGluZ0FuZFVuaXQoZGF0YSkge1xuICAgICAgdGhpcy4kc2V0KFxuICAgICAgICB0aGlzLnNlbGVjdGVkU2V0LFxuICAgICAgICAnYnVpbGRpbmcnLFxuICAgICAgICBkYXRhID8geyBpZDogZGF0YS5idWlsZGluZ19pZCwgbmFtZTogZGF0YS5idWlsZGluZ19uYW1lIH0gOiBudWxsXG4gICAgICApO1xuXG4gICAgICB0aGlzLiRzZXQodGhpcy5zZWxlY3RlZFNldCwgJ3VuaXQnLCBkYXRhID8geyBpZDogZGF0YS51bml0X2lkLCBuYW1lOiBkYXRhLnVuaXRfbmFtZSB9IDogbnVsbCk7XG4gICAgICB0aGlzLiRzZXQodGhpcy5zZWxlY3RlZFNldCwgJ2J1aWxkaW5nLXVuaXQnLCBkYXRhID8geyBpZDogZGF0YS5pZCwgbmFtZTogZGF0YS5uYW1lIH0gOiBudWxsKTtcbiAgICAgIHRoaXMuY2xlYXJOZXh0QW5kQWxsKCdidWlsZGluZy11bml0Jyk7XG5cbiAgICAgIHJldHVybiB0aGlzLmdldE5leHRJdGVtT3B0aW9ucygnYnVpbGRpbmctdW5pdCcpO1xuICAgIH0sXG5cbiAgICAvLyDorr7nva7mpbzlsYJcbiAgICBzZXRGbG9vcihkYXRhKSB7XG4gICAgICB0aGlzLiRzZXQodGhpcy5zZWxlY3RlZFNldCwgJ2Zsb29yJywgZGF0YSk7XG4gICAgICB0aGlzLmNsZWFyTmV4dEFuZEFsbCgnZmxvb3InKTtcbiAgICAgIHJldHVybiB0aGlzLmdldE5leHRJdGVtT3B0aW9ucygnZmxvb3InKTtcbiAgICB9LFxuXG4gICAgLy8g6K6+572u5oi/6Ze0XG4gICAgc2V0Um9vbShkYXRhKSB7XG4gICAgICB0aGlzLiRzZXQodGhpcy5zZWxlY3RlZFNldCwgJ3Jvb20nLCBkYXRhKTtcbiAgICAgIHRoaXMuY2xlYXJOZXh0QW5kQWxsKCdyb29tJyk7XG4gICAgICByZXR1cm4gdGhpcy5nZXROZXh0SXRlbU9wdGlvbnMoJ3Jvb20nKTtcbiAgICB9LFxuXG4gICAgLy8g5riF6Zmk6YCJ6aG577yI5qCH5q6144CB5qW85qCL562J77yJ55qE5bey6YCJ5ZKM5aSH6YCJXG4gICAgY2xlYXJJdGVtRGF0YShpdGVtS2V5KSB7XG4gICAgICBpZiAoaXRlbUtleSA9PT0gJ2J1aWxkaW5nLXVuaXQnKSB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnNlbGVjdGVkU2V0LCAnYnVpbGRpbmcnLCBudWxsKTtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMuc2VsZWN0ZWRTZXQsICd1bml0JywgbnVsbCk7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnNlbGVjdGVkU2V0LCAnYnVpbGRpbmctdW5pdCcsIG51bGwpO1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5vcHRpb25zU2V0LCAnaXRlbUtleScsIFtdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnNlbGVjdGVkU2V0LCBpdGVtS2V5LCBudWxsKTtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMub3B0aW9uc1NldCwgaXRlbUtleSwgW10pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDmuIXpmaTlkI7pnaLnmoTlt7LpgInlkozlpIfpgIlcbiAgICBjbGVhck5leHRBbmRBbGwoaXRlbUtleSkge1xuICAgICAgbGV0IGl0ZW1JbmRleCA9IHRoaXMuc2VsZWN0SXRlbXMuaW5kZXhPZihpdGVtS2V5KTtcbiAgICAgIGxldCBuZXh0SW5kZXggPSBpdGVtSW5kZXggKyAxO1xuXG4gICAgICBmb3IgKGxldCBpID0gbmV4dEluZGV4OyBpIDwgdGhpcy5zZWxlY3RJdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLmNsZWFySXRlbURhdGEodGhpcy5zZWxlY3RJdGVtc1tpXSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOWIneWni+WMllxuICAgIGluaXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXROZXh0SXRlbU9wdGlvbnMoKS50aGVuKCgpID0+IHtcbiAgICAgICAgbGV0IGluaXRQcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG5cbiAgICAgICAgaWYgKF9zZWxlY3RlZFsncHJvamVjdCddKSB7XG4gICAgICAgICAgdGhpcy4kc2V0KHRoaXMuc2VsZWN0ZWRTZXQsICdwcm9qZWN0JywgX3NlbGVjdGVkWydwcm9qZWN0J10pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5b6q546v5bey6YCJ5LitKF9zZWxlY3RlZCnvvIzliJ3lp4vljJbmlbDmja5cbiAgICAgICAgXy5lYWNoKHRoaXMuc2VsZWN0SXRlbXMsIGl0ZW0gPT4ge1xuICAgICAgICAgIGxldCBpdGVtU2VsZWN0ZWQ7XG4gICAgICAgICAgaWYgKGl0ZW0gPT09ICdidWlsZGluZy11bml0Jykge1xuICAgICAgICAgICAgbGV0IGJ1aWxkaW5nID0gX3NlbGVjdGVkWydidWlsZGluZyddO1xuICAgICAgICAgICAgbGV0IHVuaXQgPSBfc2VsZWN0ZWRbJ3VuaXQnXTtcbiAgICAgICAgICAgIGl0ZW1TZWxlY3RlZCA9IGJ1aWxkaW5nXG4gICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgaWQ6IGJ1aWxkaW5nLmlkICsgKHVuaXQuaWQgPyAnfCcgKyB1bml0LmlkIDogJycpLFxuICAgICAgICAgICAgICAgICAgbmFtZTogYnVpbGRpbmcubmFtZSArICh1bml0Lm5hbWUgPyAnLScgKyB1bml0Lm5hbWUgOiAnJyksXG4gICAgICAgICAgICAgICAgICBidWlsZGluZ19pZDogYnVpbGRpbmcuaWQsXG4gICAgICAgICAgICAgICAgICBidWlsZGluZ19uYW1lOiBidWlsZGluZy5uYW1lLFxuICAgICAgICAgICAgICAgICAgdW5pdF9pZDogdW5pdC5pZCxcbiAgICAgICAgICAgICAgICAgIHVuaXRfbmFtZTogdW5pdC5uYW1lLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpdGVtU2VsZWN0ZWQgPSBfc2VsZWN0ZWRbaXRlbV07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGl0ZW1TZWxlY3RlZCkge1xuICAgICAgICAgICAgaW5pdFByb21pc2UudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLnNldEl0ZW0oaXRlbVNlbGVjdGVkLCBpdGVtKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGluaXRQcm9taXNlO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOWIpOaWremAieaLqemhueeahCBvcHRpb25zIOaYr+WQpuS4uuepulxuICAgIC8vIOS4iuS4gOe6p+W3sumAieaXtuaJjeS8muWKoOi9veacrOe6p+eahCBvcHRpb25zIO+8jOaJgOS7peimgeWIpOaWreS4iuS4gOe6p+aYr+WQpumAieaLqVxuICAgIGlzSXRlbU9wdGlvbnNFbXB0eShpdGVtS2V5KSB7XG4gICAgICBsZXQgcHJldkl0ZW1JbmRleCA9IHRoaXMuc2VsZWN0SXRlbXMuaW5kZXhPZihpdGVtS2V5KSAtIDE7XG4gICAgICBsZXQgcHJldkl0ZW1LZXkgPSB0aGlzLnNlbGVjdEl0ZW1zW3ByZXZJdGVtSW5kZXhdO1xuXG4gICAgICBpZiAoIV8uaXNFbXB0eSh0aGlzLnNlbGVjdGVkU2V0W3ByZXZJdGVtS2V5XSkgJiYgXy5pc0VtcHR5KHRoaXMub3B0aW9uc1NldFtpdGVtS2V5XSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOWboOS4uuaYr+mAgueUqCB2LWh0bWwg57uR5a6a5pWw5o2u77yM5omA5Lul6KaB6L2s5LmJXG4gICAgc2hvd05hbWUobmFtZSkge1xuICAgICAgbGV0IHJlcyA9IG5hbWU7XG5cbiAgICAgIHJlcyA9IHJlcy5yZXBsYWNlKG5ldyBSZWdFeHAoJzwnLCAnZ20nKSwgJyZsdDsnKTtcbiAgICAgIHJlcyA9IHJlcy5yZXBsYWNlKG5ldyBSZWdFeHAoJz4nLCAnZ20nKSwgJyZndDsnKTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfSxcblxuICAgIC8vIOmAieaLqeS6i+S7tlxuICAgIHNlbGVjdChpdGVtLCBpdGVtS2V5KSB7XG4gICAgICBsZXQgaXNMYXN0ID0gaXRlbUtleSA9PT0gXy5sYXN0KHRoaXMuc2VsZWN0SXRlbXMpO1xuICAgICAgdGhpcy5zZXRJdGVtKGl0ZW0sIGl0ZW1LZXkpO1xuXG4gICAgICBpZiAoaXNMYXN0KSB7XG4gICAgICAgIC8vIOaJp+ihjOWbnuiwg++8jOW5tuS4lOWFs+mXreW8ueeql1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLmNvbmZpcm0oKTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgY29uZmlybSgpIHtcbiAgICAgIGlmICghdGhpcy5hbGxvd0NvbmZpcm0pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IHJlcyA9IF8uZXh0ZW5kKHt9LCB0aGlzLnNlbGVjdGVkU2V0KTtcbiAgICAgIF9jYWxsYmFjayAmJiBfY2FsbGJhY2socmVzKTtcbiAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5jb250ZW50IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbiAgYm90dG9tOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG4ubGlzdC13cmFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXg6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBoZWlnaHQ6IDQ2NXB4O1xufVxuLmxpc3Qge1xuICBmbGV4OiAxO1xuICBvdmVyZmxvdzogYXV0bztcbiAgcGFkZGluZzogMCAxMHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuLmxpc3Qtc2luZ2xlIHtcbiAgZmxleDogMTtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGhlaWdodDogMTAwJTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG4uaXRlbS1kcm9wZG93biB7XG4gIHBhZGRpbmc6IDZweCAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5pdGVtLWRyb3Bkb3duIC9kZWVwLyAuaXRlbS10ZXh0IHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLml0ZW0tZHJvcGRvd24uc2VsZWN0ZWQge1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiA1cHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkdGhlbWVDb2xvcjtcbn1cbi5pdGVtLWRyb3Bkb3duLnNlbGVjdGVkIC9kZWVwLyAuaXRlbS10ZXh0IHtcbiAgY29sb3I6ICR0aGVtZUNvbG9yO1xufVxuXG4ubG9hZGluZy10aXBzIHtcbiAgcGFkZGluZzogMTNweCAwO1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgY29sb3I6ICRjb2xvckdyYXkzO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uZW1wdHktdGlwcyB7XG4gIHBhZGRpbmc6IDEzcHggMDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAkY29sb3JHcmF5MztcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLnNlbGVjdC1ub3RlIHtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICRjb2xvckdyYXkyO1xufVxuXG4uYnRuLWNvbmZpcm0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc3ViVGhlbWVDb2xvcjtcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgY29sb3I6ICR0aGVtZUNvbG9yO1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuLmJ0bi1jb25maXJtLmJ0bi1kaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4gIGNvbG9yOiAkY29sb3JHcmF5Mztcbn1cbjwvc3R5bGU+XG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTc4ZWIyMTllJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RpYWxvZy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xZGI0ODlhZSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjY0MzI4YTljXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLmNvbnRlbnRbZGF0YS12LTFkYjQ4OWFlXXtwb3NpdGlvbjpmaXhlZDt3aWR0aDoxMDAlO2JvdHRvbTowO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNCk7b3ZlcmZsb3c6aGlkZGVufS56amFwcCAuYm94W2RhdGEtdi0xZGI0ODlhZV17ZmxleC1kaXJlY3Rpb246Y29sdW1ufS56amFwcCAuYm94W2RhdGEtdi0xZGI0ODlhZV0sLnpqYXBwIC5saXN0LXdyYXBbZGF0YS12LTFkYjQ4OWFlXXtkaXNwbGF5OmZsZXg7YmFja2dyb3VuZC1jb2xvcjojZmZmfS56amFwcCAubGlzdC13cmFwW2RhdGEtdi0xZGI0ODlhZV17ZmxleC1kaXJlY3Rpb246cm93O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7ZmxleDoxO2hlaWdodDo0NjVweH0uemphcHAgLmxpc3RbZGF0YS12LTFkYjQ4OWFlXXtwYWRkaW5nOjAgMTBweH0uemphcHAgLmxpc3RbZGF0YS12LTFkYjQ4OWFlXSwuemphcHAgLmxpc3Qtc2luZ2xlW2RhdGEtdi0xZGI0ODlhZV17ZmxleDoxO292ZXJmbG93OmF1dG87aGVpZ2h0OjEwMCU7c2Nyb2xsLWJlaGF2aW9yOnNtb290aH0uemphcHAgLml0ZW0tZHJvcGRvd25bZGF0YS12LTFkYjQ4OWFlXXtwYWRkaW5nOjZweCAwO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LnpqYXBwIC5pdGVtLWRyb3Bkb3duW2RhdGEtdi0xZGI0ODlhZV0gLml0ZW0tdGV4dHtmb250LXNpemU6MTRweH0uemphcHAgLml0ZW0tZHJvcGRvd24uc2VsZWN0ZWRbZGF0YS12LTFkYjQ4OWFlXXtjb2xvcjojNDI3NWU4O3BhZGRpbmctYm90dG9tOjVweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjNDI3NWU4fS56amFwcCAuaXRlbS1kcm9wZG93bi5zZWxlY3RlZFtkYXRhLXYtMWRiNDg5YWVdIC5pdGVtLXRleHR7Y29sb3I6IzQyNzVlOH0uemphcHAgLmVtcHR5LXRpcHNbZGF0YS12LTFkYjQ4OWFlXSwuemphcHAgLmxvYWRpbmctdGlwc1tkYXRhLXYtMWRiNDg5YWVde3BhZGRpbmc6MTNweCAwO2xpbmUtaGVpZ2h0OjIwcHg7Y29sb3I6I2IyYjJiMjtmb250LXNpemU6MTRweH0uemphcHAgLnNlbGVjdC1ub3RlW2RhdGEtdi0xZGI0ODlhZV17bGluZS1oZWlnaHQ6MTZweDtmb250LXNpemU6MTJweDtjb2xvcjojOGM4YzhjfS56amFwcCAuYnRuLWNvbmZpcm1bZGF0YS12LTFkYjQ4OWFlXXtiYWNrZ3JvdW5kLWNvbG9yOiNlYmYxZmY7YmFja2dyb3VuZC1pbWFnZTpub25lO2NvbG9yOiM0Mjc1ZTg7Ym9yZGVyLXJhZGl1czowfS56amFwcCAuYnRuLWNvbmZpcm0uYnRuLWRpc2FibGVkW2RhdGEtdi0xZGI0ODlhZV17YmFja2dyb3VuZC1jb2xvcjojZjRmNGY0O2NvbG9yOiNiMmIyYjJ9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiPHRlbXBsYXRlPlxuICA8ZGl2XG4gICAgcmVmPVwic2VsZWN0LWNvblwiXG4gICAgY2xhc3M9XCJzZWxlY3QtY29uXCJcbiAgICA6Y2xhc3M9XCJ7ICdzZWxlY3QtZGlzYWJsZWQnOiAhZWRpdGFibGVkIHx8IGlzTG9hZGluZyB9XCJcbiAgICBAY2xpY2s9XCJvcGVuRGlhbG9nXCJcbiAgPlxuICAgIDxkaXYgY2xhc3M9XCJzZWxlY3QtaGRcIj57eyBpc0xvYWRpbmcgPyAnLi4uJyA6IGhkVGV4dCB9fTwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzZWxlY3QtYmRcIj57eyBpc0xvYWRpbmcgPyAnLi4uJyA6IGJkVGV4dCB9fTwvZGl2PlxuXG4gICAgPGljb24gdi1pZj1cImVkaXRhYmxlZFwiIDpuYW1lPVwiaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJ1wiIGNsYXNzPVwic2VsZWN0LWFycm93XCIgLz5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5pbXBvcnQgZHJvcFNlbGVjdERpYWxvZyBmcm9tICcuL2RpYWxvZy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0Ryb3BEb3duU2VsZWN0JyxcbiAgcHJvcHM6IHtcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge30sXG4gICAgfSxcbiAgICAvLyDpgInmi6npobnvvIzpu5jorqTvvJpbJ+agh+autScsICfmpbzmoIst5Y2V5YWDJywgJ+alvOWxgicsICfmiL/pl7QnXVxuICAgIHNlbGVjdEl0ZW1zOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6ICgpID0+IFsnc2VjdGlvbicsICdidWlsZGluZy11bml0JywgJ2Zsb29yJywgJ3Jvb20nXSxcbiAgICB9LFxuICAgIGlzTG9hZGluZzoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG4gICAgZWRpdGFibGVkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICAgIC8vIOaYr+WQpuaYvuekuuWNleWFg1xuICAgIHNob3dVbml0OiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc09wZW46IGZhbHNlLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgaGRUZXh0KCkge1xuICAgICAgLy8g6aaW6KGM5paH5a2XXG4gICAgICBpZiAoXy5pc0VtcHR5KHRoaXMudmFsdWUpIHx8IF8uaXNFbXB0eSh0aGlzLnZhbHVlLnNlY3Rpb24pKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkaXRhYmxlZCA/ICfor7fpgInmi6knIDogJ+aXoCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZS5zZWN0aW9uLm5hbWU7XG4gICAgICB9XG4gICAgfSxcbiAgICBiZFRleHQoKSB7XG4gICAgICAvLyDnrKzkuozooYzmloflrZdcbiAgICAgIGxldCByZXN1bHQgPSAnJztcbiAgICAgIGlmIChfLmlzRW1wdHkodGhpcy52YWx1ZSkgfHwgXy5pc0VtcHR5KHRoaXMudmFsdWUuYnVpbGRpbmcpKSB7XG4gICAgICAgIHJlc3VsdCA9IHRoaXMuZWRpdGFibGVkID8gJ+ivt+mAieaLqScgOiAn5pegJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdCArIHRoaXMudmFsdWUuYnVpbGRpbmcubmFtZSB8fCAnJztcbiAgICAgICAgaWYgKCFfLmlzRW1wdHkodGhpcy52YWx1ZS51bml0KSAmJiB0aGlzLnNob3dVbml0KSB7XG4gICAgICAgICAgcmVzdWx0ID0gcmVzdWx0ICsgdGhpcy52YWx1ZS51bml0Lm5hbWUgfHwgJyc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5pc0VtcHR5KHRoaXMudmFsdWUucm9vbSkgfHwgXy5pc0VtcHR5KHRoaXMudmFsdWUucm9vbS5pZCkpIHtcbiAgICAgICAgICBpZiAoIV8uaXNFbXB0eSh0aGlzLnZhbHVlLmZsb29yKSkge1xuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0ICsgdGhpcy52YWx1ZS5mbG9vci5uYW1lIHx8ICcnO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHQgKyB0aGlzLnZhbHVlLnJvb20ubmFtZSB8fCAnJztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgZHJvcFNlbGVjdERpYWxvZy4kb24oJ2FmdGVyQ2xvc2VQb3B1cCcsICgpID0+IHtcbiAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgfSk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICAvKiDmiZPlvIDkuIvmi4nlvLnnqpdcbiAgICAgKiDlvLnnqpfosIPnlKjnmoTmmK/lkIzkuIDkuKrnu4Tku7bvvIzlpoLmnpzlkIzkuIDkuKrpobXpnaLmnInlpJrkuKrmraTnu4Tku7bvvIzlnKjmiZPlvIDkuIDkuKrlvLnnqpfkuYvliY3vvIzopoHlhbPpl63lhbblroPlvLnnqpdcbiAgICAgKi9cbiAgICBvcGVuRGlhbG9nKCkge1xuICAgICAgaWYgKCF0aGlzLmVkaXRhYmxlZCB8fCB0aGlzLmlzTG9hZGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBsZXQgcHJvaklkID0gdGhpcy52YWx1ZSAmJiB0aGlzLnZhbHVlLnByb2plY3QgJiYgdGhpcy52YWx1ZS5wcm9qZWN0LmlkO1xuXG4gICAgICBpZiAoIXByb2pJZCkge1xuICAgICAgICBwcm9qSWQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5nbG9iYWwuY3VycmVudFByb2plY3QuaWQ7XG4gICAgICB9XG5cbiAgICAgIGRyb3BTZWxlY3REaWFsb2cub3BlblBvcHVwKHtcbiAgICAgICAgcHJvaklkOiBwcm9qSWQsXG4gICAgICAgIHNlbGVjdGVkOiB0aGlzLnZhbHVlLFxuICAgICAgICBzZWxlY3RJdGVtczogdGhpcy5zZWxlY3RJdGVtcyxcbiAgICAgICAgZWw6IHRoaXMuJHJlZnNbJ3NlbGVjdC1jb24nXSxcbiAgICAgICAgY29tcG9uZW50VWlkOiB0aGlzLl91aWQsXG4gICAgICAgIGNhbGxiYWNrOiByZXMgPT4ge1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgcmVzKTtcbiAgICAgICAgICB0aGlzLiRlbWl0KCdvblNlbGVjdCcsIHJlcyk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uc2VsZWN0LWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogN3B4IDQwcHggN3B4IDE1cHg7XG4gIGhlaWdodDogNTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5zZWxlY3QtY29uOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgQGluY2x1ZGUgZ3JhZGllbnRCb3JkZXJMKDIsICNkN2UwZjcpO1xufVxuLnNlbGVjdC1jb24gPiAqIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4uc2VsZWN0LWhkIHtcbiAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgY29sb3I6ICRjb2xvckJsYWNrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5zZWxlY3QtYmQge1xuICBtYXJnaW4tdG9wOiAycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAkY29sb3JCbGFjaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4uc2VsZWN0LWFycm93IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDVweDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAkY29sb3JHcmF5NztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2VsZWN0LWRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYjtcbn1cbi5zZWxlY3QtZGlzYWJsZWQgLnNlbGVjdC1oZCB7XG4gIGNvbG9yOiAkY29sb3JHcmF5MTtcbn1cbi5zZWxlY3QtZGlzYWJsZWQgLnNlbGVjdC1iZCB7XG4gIGNvbG9yOiAkY29sb3JHcmF5MTtcbn1cbi5zZWxlY3QtZGlzYWJsZWQgLnNlbGVjdC1hcnJvdyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG48L3N0eWxlPlxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3BhZ2UtY29udGVudCcse2F0dHJzOntcInRpdGxlXCI6XCLlrp7mtYvlrp7ph49cIixcInNob3ctZ28tcm9vdFwiOnRydWV9fSxbX2MoJ3RlbXBsYXRlJyx7c2xvdDpcImhlYWRlci1iYXItY2VudGVyXCJ9LFsoX3ZtLnRhYnMubGVuZ3RoID4gMSAmJiAhX3ZtLnJlYWRvbmx5KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJoZWFkZXItdGFic1wifSxfdm0uX2woKF92bS50YWJzKSxmdW5jdGlvbih0YWIsaW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5OmluZGV4LHN0YXRpY0NsYXNzOlwiaGVhZGVyLXRhYlwiLGNsYXNzOnsgb246IHRhYi5rZXkgPT09IF92bS5jdXJyZW50VGFiIH0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jaGFuZ2VUYWIodGFiKX19fSxbX3ZtLl92KFwiXFxuICAgICAgICBcIitfdm0uX3ModGFiLm5hbWUpK1wiXFxuICAgICAgXCIpXSl9KSk6X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyLWJhci10aXRsZVwifSxbX3ZtLl92KFwiXFxuICAgICAgXCIrX3ZtLl9zKF92bS5tb2RlbC5wbGFjZUZ1bGxuYW1lKStcIlxcbiAgICBcIildKV0pLCghX3ZtLmlzTG9hZGluZyk/X2MoJ2NoZWNrLWd1aWRlJyx7YXR0cnM6e1wic2xvdFwiOlwiaGVhZGVyLWJhci1yaWdodFwiLFwibW9kdWxlXCI6XCJtZWFzdXJlXCIsXCJpdGVtLWlkc1wiOl92bS5jaGVja0l0ZW1HdWlkZUlkcyxcIm1vZGVcIjpcImRyb3BcIn0sc2xvdDpcImhlYWRlci1iYXItcmlnaHRcIn0pOl92bS5fZSgpLCghX3ZtLmlzTG9hZGluZyk/Wyhfdm0uZGV0YWlsICYmIF92bS5kZXRhaWwucHJvYmxlbURhdGEgJiYgX3ZtLmRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGgpP1soX3ZtLmRldGFpbC5lbnRyeV9yZXF1aXJlbWVudHMgPT09IDEpP19jKCdtZWFzdXJlLWRldGFpbC10ZW1wbGF0ZS0xJyx7cmVmOlwidGVtcGxhdGUtMVwiLGF0dHJzOntcImRldGFpbFwiOl92bS5kZXRhaWx9LG9uOntcImNoYW5nZUl0ZW1zXCI6X3ZtLmNoYW5nZUl0ZW1zLFwiY2hhbmdlUGxhY2VcIjpfdm0uY2hhbmdlUGxhY2V9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwuZW50cnlfcmVxdWlyZW1lbnRzID09PSAyKT9fYygnbWVhc3VyZS1kZXRhaWwtdGVtcGxhdGUtMicse3JlZjpcInRlbXBsYXRlLTJcIixhdHRyczp7XCJkZXRhaWxcIjpfdm0uZGV0YWlsfSxvbjp7XCJjaGFuZ2VJdGVtc1wiOl92bS5jaGFuZ2VJdGVtcyxcImNoYW5nZVBsYWNlXCI6X3ZtLmNoYW5nZVBsYWNlfX0pOl92bS5fZSgpLChfdm0uZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMyk/X2MoJ21lYXN1cmUtZGV0YWlsLXRlbXBsYXRlLTMnLHtyZWY6XCJ0ZW1wbGF0ZS0zXCIsYXR0cnM6e1wiZGV0YWlsXCI6X3ZtLmRldGFpbH0sb246e1wiY2hhbmdlSXRlbXNcIjpfdm0uY2hhbmdlSXRlbXMsXCJjaGFuZ2VQbGFjZVwiOl92bS5jaGFuZ2VQbGFjZX19KTpfdm0uX2UoKV06X3ZtLl9lKCksX2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtZW1wdHlcIjohX3ZtLmRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGgsXCJlbXB0eS10ZXh0XCI6XCLmmoLml6Dlrp7mtYvorrDlvZVcIn19KV06X3ZtLl9lKCksX2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtbG9hZGluZ1wiOl92bS5pc0xvYWRpbmd9fSksKCFfdm0uaXNMb2FkaW5nICYmICEoX3ZtLmRldGFpbC5lbnRyeV9yZXF1aXJlbWVudHMgPT09IDMgJiYgIV92bS5kcmF3aW5nVXJsKSk/WyhcbiAgICAgICAgX3ZtLmRldGFpbC5tb2RlID09PSAnZWRpdCcgfHxcbiAgICAgICAgICBfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWVkaXQnIHx8XG4gICAgICAgICAgX3ZtLmRldGFpbC5tb2RlID09PSAncmVkbycgfHxcbiAgICAgICAgICAoX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknICYmIF92bS5kZXRhaWwuaXNSZXBhaXIgJiYgIV92bS5kZXRhaWwuaXNSZXBhaXJNb2RlKVxuICAgICAgKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcse2F0dHJzOntcImZpeGVkLWJvdHRvbVwiOlwiXCIsXCJzZWFtbGVzc1wiOl92bS5kZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZG8nfX0sWyhfdm0uZGV0YWlsLm1vZGUgPT09ICdlZGl0JyB8fCBfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWRvJyk/X2MoJ2FwcC1idXR0b24nLHtzdGF0aWNTdHlsZTp7XCJ3aWR0aFwiOlwiNTAlXCJ9LGF0dHJzOntcIm5hbWVcIjpcIuaaguWtmFwiLFwicGxhaW5cIjpcIlwiLFwiZGlzYWJsZWRcIjpfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWRvJ30sb246e1wiY2xpY2tcIjpfdm0uc2F2ZVByb2JsZW1BbmRUaXAsXCJkaXNhYmxlZENsaWNrXCI6X3ZtLmRpc2FibGVkU2F2ZVRpcH19KTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5tb2RlID09PSAnZWRpdCcpP19jKCdhcHAtYnV0dG9uJyx7YXR0cnM6e1wibmFtZVwiOlwi5o+Q5Lqk5qOA5p+l6K6w5b2VXCJ9LG9uOntcImNsaWNrXCI6X3ZtLnN1Ym1pdENoZWNrfX0pOl92bS5fZSgpLChfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWRvJyk/X2MoJ2FwcC1idXR0b24nLHthdHRyczp7XCJuYW1lXCI6XCLmj5DkuqRcIn0sb246e1wiY2xpY2tcIjpfdm0uc3VibWl0UmVkb319KTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5tb2RlID09PSAncmVlZGl0Jyk/X2MoJ2FwcC1idXR0b24nLHthdHRyczp7XCJuYW1lXCI6XCLmj5DkuqTmo4Dmn6XorrDlvZVcIn0sb246e1wiY2xpY2tcIjpfdm0ucmVzdWJtaXRDaGVja319KTpfdm0uX2UoKSwoXG4gICAgICAgICAgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknICYmXG4gICAgICAgICAgICBfdm0uZGV0YWlsLmlzUmVwYWlyICYmXG4gICAgICAgICAgICBfdm0uZGV0YWlsLm1vZGUgPT09ICd2aWV3JyAmJlxuICAgICAgICAgICAgIV92bS5kZXRhaWwuaXNSZXBhaXJNb2RlXG4gICAgICAgICk/X2MoJ2FwcC1idXR0b24nLHthdHRyczp7XCJuYW1lXCI6XCLlrozmiJDmlbTmlLlcIn0sb246e1wiY2xpY2tcIjpfdm0uc3VibWl0UmVwYWlyfX0pOl92bS5fZSgpXSwxKTpfdm0uX2UoKV06X3ZtLl9lKCldLDIpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTczZjc3NmVhJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2RldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTczZjc3NmVhJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjczZjc3NmVhXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xN2RjZjRkNCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjAyNWEwOTNmXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0wOTAxYWFkZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1mYmE1OTkwYSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjlkYjE5ODMyXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLnBhZ2Utc2Nyb2xsW2RhdGEtdi03NDEwMmMwNV17ZmxleDoxO292ZXJmbG93OmF1dG87cGFkZGluZy1ib3R0b206MTAwcHg7dHJhbnNmb3JtOnRyYW5zbGF0ZVooMCl9LnpqYXBwIC5zdWJsaXN0W2RhdGEtdi03NDEwMmMwNV17cGFkZGluZy1sZWZ0OjI1cHg7cGFkZGluZy10b3A6MXB4O2JhY2tncm91bmQtY29sb3I6I2ZmZn0uemphcHAgLnN1Ymxpc3Q+LnN1Ymxpc3RbZGF0YS12LTc0MTAyYzA1XXtwYWRkaW5nLWxlZnQ6MTBweDtwYWRkaW5nLXRvcDowfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPGl0ZW1cbiAgICA6Y2xhc3M9XCJyZXF1aXJlZFwiXG4gICAgOmxhYmVsPVwidGl0bGVcIlxuICAgIDp0ZXh0PVwidmFsdWUgJiYgdmFsdWUuaWQgPyB2YWx1ZS5uYW1lIDogbW9kZSA9PT0gJ3ZpZXcnID8gJ+aXoCcgOiAnJ1wiXG4gICAgOm1vZGU9XCJtb2RlXCJcbiAgICA6ZWRpdGFibGVkPVwiZWRpdGFibGVkXCJcbiAgICA6cGxhY2Vob2xkZXI9XCJyZXF1aXJlZCA/IHBsYWNlaG9sZGVyIHx8ICfor7fpgInmi6knIDogJ+mAieWhqydcIlxuICAgIDpmb3JtLWNoZWNrPVwiZm9ybUNoZWNrXCJcbiAgICBAY2xpY2s9XCJvcGVuU2VsZWN0XCJcbiAgLz5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5cbmltcG9ydCBJdGVtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgZGlhbG9nIGZyb20gJ0Bjb21wb25lbnRzL3NpbmdsZS1zZWxlY3QvZGlhbG9nLmpzJztcbmltcG9ydCBsb2NhbFN0b3JhZ2UgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbG9jYWxTdG9yYWdlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnU2luZ2xlU2VsZWN0JyxcbiAgY29tcG9uZW50czogeyBJdGVtIH0sXG4gIHByb3BzOiB7XG4gICAgdGl0bGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgLyogdGl0bGUg5L2c5Li657uE5Lu255qEIGxhYmVs77yM5bm25LiU5L2c5Li65by55Ye66YCJ5oup6aG16Z2i55qE5qCH6aKY44CCXG4gICAg5pyJ5pe25YCZIGxhYmVsIOWSjOmAieaLqemhtemdoueahOagh+mimOWPr+S7peaYr+S4jeS4gOagt+eahO+8jFxuICAgIOaJgOS7pemcgOimgeWPpuWkluS4gOS4quWtl+autSAqL1xuICAgIHBhZ2VUaXRsZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICBwbGFjZWhvbGRlcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9LFxuICAgIH0sXG4gICAgb3B0aW9uczoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICAvLyDkuI3og73li77pgInnmoTpgInpoblcbiAgICBvcHRpb25zRGlzYWJsZWQ6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9LFxuICAgIH0sXG4gICAgcmVxdWlyZWQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlLFxuICAgIH0sXG4gICAgLy8g5qih5byP77yMdmlldyjmn6XnnIspIHwgZWRpdCjnvJbovpEpXG4gICAgbW9kZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2VkaXQnLFxuICAgIH0sXG4gICAgLy8g5piv5ZCm5YWB6K6457yW6L6RXG4gICAgZWRpdGFibGVkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICAgIC8vIOaYr+WQpuiusOS9j+S4iuS4gOasoVxuICAgIG1lbW9yeToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG4gICAgLy8g5Yid5aeL5YyW55qE5pe25YCZ77yM5piv5ZCm6Ieq5Yqo6Kem5Y+RIG9uU2VsZWN0IOS6i+S7tlxuICAgIGF1dG9TZWxlY3Q6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICAgIGJlZm9yZU9wZW46IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogKCkgPT4ge30sXG4gICAgfSxcbiAgICAvLyDmnInmsqHmnInmkJzntKIsIOm7mOiupOaYr+acieaQnOe0olxuICAgIHNlYXJjaEJhcjoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgfSxcbiAgICAvLyDmmK/lkKbliIbnu4TvvIzkvKDpgJLpnIDopoHmoLnmja7lk6rkuKrlrZfmrrXlkI3liIbnu4RcbiAgICBncm91cGluZzoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICAvLyDlvIDlkK/liIbnu4TlkI7vvIzmmK/lkKbpu5jorqTlsZXlvIDkuIDnuqdcbiAgICBhdXRvT3Blbjoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG4gICAgLy8g5Y+z5LiK6KeS5oyJ6ZKuXG4gICAgcmlnaHRCdG46IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgcmlnaHRCdG5FdmVudDoge1xuICAgICAgdHlwZTogRnVuY3Rpb24sXG4gICAgICBkZWZhdWx0OiAoKSA9PiAwLFxuICAgIH0sXG4gICAgLy8g5piv5ZCm6YeN5aSN54K55Ye76YCJ5Lit5ZCO5qC55o2uaWTnm7jlkIzmkqTplIDpgInkuK0odG9nZ2xlKVxuICAgIGlmVG9nZ2xlOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcblxuICAgIC8vIOihqOWNleaPkOekuuaXtu+8jOS8muWwhuivt+mAieaLqeWPmOe6ou+8jOS9nOS4uuihqOagvOaPkOekulxuICAgIGZvcm1DaGVjazoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG4gICAgZWRpdG9yQWRkRGF0YToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG5cbiAgICAvLyDooYzmlbDpmZDliLbvvIzpu5jorqTmmK/vvJox77yM5peg6ZmQ5Yi25aGr77yadW5saW1pdGVkXG4gICAgbGluZUxpbWl0OiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogMSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBtZW1vcnlLZXk6IHRoaXMuJHJvdXRlLm5hbWUgKyBlbmNvZGVVUkkodGhpcy50aXRsZSksXG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBvcHRpb25zKCkge1xuICAgICAgdGhpcy5zZXRTZWxlY3RlZCgpO1xuICAgIH0sXG4gIH0sXG4gIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5zZXRTZWxlY3RlZCgpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLy8g5omT5byA6YCJ5Lq65YiX6KGoXG4gICAgb3BlblNlbGVjdCgpIHtcbiAgICAgIGlmICghdGhpcy5lZGl0YWJsZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IGJlZm9yZU9wZW5SZXN1bHQgPSB0aGlzLmJlZm9yZU9wZW4oKTtcblxuICAgICAgLy8g5qCh6aqM5piv5ZCm5YWB6K645omT5byAXG4gICAgICBpZiAoYmVmb3JlT3BlblJlc3VsdCAmJiBiZWZvcmVPcGVuUmVzdWx0LnRoZW4gJiYgXy5pc0Z1bmN0aW9uKGJlZm9yZU9wZW5SZXN1bHQudGhlbikpIHtcbiAgICAgICAgYmVmb3JlT3BlblJlc3VsdC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgaWYgKHJlc3VsdCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHRoaXMub3BlblBvcHVwKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChiZWZvcmVPcGVuUmVzdWx0ICE9PSBmYWxzZSkge1xuICAgICAgICAgIHRoaXMub3BlblBvcHVwKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgb3BlblBvcHVwKCkge1xuICAgICAgLy8g6K6+572u5LiN6IO95Yu+6YCJ55qEXG4gICAgICBpZiAodGhpcy5vcHRpb25zRGlzYWJsZWQgJiYgdGhpcy5vcHRpb25zRGlzYWJsZWQubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IF9kaXNhYmxlZE9iaiA9IHt9O1xuICAgICAgICBfLmVhY2godGhpcy5vcHRpb25zRGlzYWJsZWQsIGl0ZW0gPT4ge1xuICAgICAgICAgIGlmIChpdGVtLmlkKSB7XG4gICAgICAgICAgICBfZGlzYWJsZWRPYmpbaXRlbS5pZF0gPSBpdGVtO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy5lYWNoKHRoaXMub3B0aW9ucywgKGl0ZW0sIGtleSkgPT4ge1xuICAgICAgICAgIC8vIOWmguaenOW9k+WJjWl0ZW3lrZjlnKjvvIxfZGlzYWJsZWRPYmrkuK3vvIzorr7nva5kaXNhYmxlZFxuICAgICAgICAgIGlmIChfZGlzYWJsZWRPYmpbaXRlbS5pZF0pIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9uc1trZXldLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zW2tleV0uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBkaWFsb2cub3BlblBvcHVwKHtcbiAgICAgICAgdGl0bGU6IHRoaXMucGFnZVRpdGxlIHx8ICfpgInmi6knICsgdGhpcy50aXRsZSxcbiAgICAgICAgc2VsZWN0ZWQ6IHRoaXMudmFsdWUsXG4gICAgICAgIG9wdGlvbnM6IHRoaXMub3B0aW9ucyxcbiAgICAgICAgcmVxdWlyZWQ6IHRoaXMucmVxdWlyZWQsXG4gICAgICAgIHNlYXJjaEJhcjogdGhpcy5zZWFyY2hCYXIsXG4gICAgICAgIGdyb3VwaW5nOiB0aGlzLmdyb3VwaW5nLFxuICAgICAgICBhdXRvT3BlbjogdGhpcy5hdXRvT3BlbixcbiAgICAgICAgcmlnaHRCdG46IHRoaXMucmlnaHRCdG4sXG4gICAgICAgIGlmVG9nZ2xlOiB0aGlzLmlmVG9nZ2xlLFxuICAgICAgICBsaW5lTGltaXQ6IHRoaXMubGluZUxpbWl0LCAvLyDooYzmlbDpmZDliLZcbiAgICAgICAgZWRpdG9yQWRkRGF0YTogdGhpcy5lZGl0b3JBZGREYXRhLFxuICAgICAgICBvblNlbGVjdDogcmVzID0+IHtcbiAgICAgICAgICBsZXQgb2xkVmFsdWUgPSBfLmNsb25lRGVlcCh0aGlzLnZhbHVlKTtcblxuICAgICAgICAgIGlmIChfLmlzQXJyYXkocmVzKSkge1xuICAgICAgICAgICAgcmVzID0gXy5tYXAocmVzLCBpdGVtID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uaXRlbSB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcyA9IHsgLi4ucmVzIH07XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgcmVzLCBvbGRWYWx1ZSk7XG4gICAgICAgICAgdGhpcy4kZW1pdCgnb25TZWxlY3QnLCByZXMsIG9sZFZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmlnaHRCdG5FdmVudDogcmVzID0+IHtcbiAgICAgICAgICBsZXQgb2xkVmFsdWUgPSBfLmNsb25lRGVlcCh0aGlzLnZhbHVlKTtcbiAgICAgICAgICB0aGlzLiRlbWl0KCdyaWdodEJ0bkV2ZW50JywgcmVzLCBvbGRWYWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgY2xvc2VQb3B1cCgpIHtcbiAgICAgIGRpYWxvZy5jbG9zZVBvcHVwKCk7XG4gICAgfSxcblxuICAgIG9uU2VsZWN0KHNlbGVjdGVkKSB7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2F2ZU9iamVjdCh0aGlzLm1lbW9yeUtleSwgc2VsZWN0ZWQsIGxvY2FsU3RvcmFnZS5sZXZlbC51c2VyKTtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0Jywgc2VsZWN0ZWRbMF0pO1xuICAgICAgdGhpcy4kZW1pdCgnb25TZWxlY3QnLCBzZWxlY3RlZFswXSk7XG4gICAgfSxcblxuICAgIHNldFNlbGVjdGVkKCkge1xuICAgICAgbGV0IGlzRXhpc3Q7XG4gICAgICBsZXQgcHJldiA9IGxvY2FsU3RvcmFnZS5nZXRPYmplY3QodGhpcy5tZW1vcnlLZXksIGxvY2FsU3RvcmFnZS5sZXZlbC51c2VyKTtcblxuICAgICAgaWYgKHRoaXMuZWRpdGFibGVkID09PSBmYWxzZSB8fCBfLmlzRW1wdHkodGhpcy5vcHRpb25zKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghXy5pc0VtcHR5KHRoaXMudmFsdWUpKSB7XG4gICAgICAgIHRoaXMuYXV0b1NlbGVjdCAmJiB0aGlzLiRlbWl0KCdvblNlbGVjdCcsIHRoaXMudmFsdWUpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm1lbW9yeSAmJiAhXy5pc0VtcHR5KHByZXYpKSB7XG4gICAgICAgIC8vIOS4iuasoeeahOmAieaLqeaYr+WQpuWcqOWIl+ihqOS4rVxuICAgICAgICAvLyDlpoLmnpzmsqHmnInlgLzvvIzliJnlj5bkuIrmrKHnmoTpgInmi6lcbiAgICAgICAgaXNFeGlzdCA9IF8uc29tZSh0aGlzLm9wdGlvbnMsIHsgaWQ6IHByZXYuaWQgfSk7XG5cbiAgICAgICAgaWYgKGlzRXhpc3QpIHtcbiAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHByZXYpO1xuICAgICAgICAgIHRoaXMuYXV0b1NlbGVjdCAmJiB0aGlzLiRlbWl0KCdvblNlbGVjdCcsIHByZXYpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MTk2ZTdhN2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI3NzBiNDE1M1wiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5zaW5nbGUtaXRlbVtkYXRhLXYtNjkyMGRkZTdde21pbi1oZWlnaHQ6NDRweH0uemphcHAgLnNpbmdsZS1pdGVtPmRpdltkYXRhLXYtNjkyMGRkZTdde2Rpc3BsYXk6ZmxleH0uemphcHAgLnNpbmdsZS1pdGVtPmRpdj5zcGFuW2RhdGEtdi02OTIwZGRlN117ZmxleDoxO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO2Rpc3BsYXk6LXdlYmtpdC1ib3g7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsfS56amFwcCAuc2luZ2xlLWl0ZW0+ZGl2PnNwYW5bZGF0YS12LTY5MjBkZGU3XSBsYWJlbHtjb2xvcjojNDE3NGU5fS56amFwcCAuc2luZ2xlLWl0ZW0gaVtkYXRhLXYtNjkyMGRkZTdde2xpbmUtaGVpZ2h0OjI0cHg7Zm9udC1zaXplOjI0cHg7Y29sb3I6IzQyNzVlOH0uemphcHAgLnNpbmdsZS1pdGVtIC5kaXNhYmxlZC1pdGVtW2RhdGEtdi02OTIwZGRlN117Y29sb3I6I2FhYX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAuc3VwcGxpZXItZWRpdG9yW2RhdGEtdi1lNDY1MzE5Y117bWFyZ2luLWJvdHRvbToxMHB4O3BhZGRpbmc6OHB4O2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXI7aGVpZ2h0OjUycHg7Y29sb3I6IzQyNzVlODtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LnpqYXBwIC5zdXBwbGllci1lZGl0b3IgLmljb25bZGF0YS12LWU0NjUzMTljXXtib3JkZXItbGVmdDoxcHggc29saWQgI2M4YzhjODtwYWRkaW5nLWxlZnQ6MTJweH0uemphcHAgLnN1cHBsaWVyLWVkaXRvciAuaWNvbi1lZGl0W2RhdGEtdi1lNDY1MzE5Y117Y29sb3I6I2M4YzhjODtmb250LXNpemU6MThweH0uemphcHAgLnN1cHBsaWVyLWVkaXRvciAuaWNvbi1xdWFsaWZpZWRbZGF0YS12LWU0NjUzMTljXXtjb2xvcjojNDI3NWU4fS56amFwcCAuc3VwcGxpZXItZWRpdG9yIC5tYXJnaW4tcltkYXRhLXYtZTQ2NTMxOWNde21hcmdpbi1yaWdodDoxMHB4fS56amFwcCAubGlzdC10aXRsZVtkYXRhLXYtZTQ2NTMxOWNde3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDowO2NvbG9yOiM4ODg7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MzBweDttaW4taGVpZ2h0OjQwcHg7bWFyZ2luLWJvdHRvbTowO21hcmdpbi10b3A6MDtwYWRkaW5nOjhweCAxNnB4IDJweH0uemphcHAgLnNlYXJjaC1pdGVtPmRpdltkYXRhLXYtZTQ2NTMxOWNde3BhZGRpbmctcmlnaHQ6MzVweH0uemphcHAgLnNlYXJjaC1pdGVtIGlbZGF0YS12LWU0NjUzMTljXXtwb3NpdGlvbjphYnNvbHV0ZTtjb2xvcjojY2NjO2ZvbnQtc2l6ZToyNnB4O3JpZ2h0OjA7dG9wOjUwJTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKX0uemphcHAgLnZhbi1wb3B1cC0tcmlnaHRbZGF0YS12LWU0NjUzMTljXXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlfVtkYXRhLXYtZTQ2NTMxOWNdIC52YW4tY2VsbF9fdGl0bGV7Y29sb3I6IzQxNzRlOTtmb250LXdlaWdodDo3MDB9W2RhdGEtdi1lNDY1MzE5Y10gLnZhbi1jb2xsYXBzZS1pdGVtX19jb250ZW50e3RyYW5zZm9ybTp0cmFuc2xhdGVaKDApO3BhZGRpbmc6MCAwIDAgMjVweH1bZGF0YS12LWU0NjUzMTljXSAudmFuLWNvbGxhcHNlLWl0ZW1fX2NvbnRlbnQgLnZhbi1jZWxse3BhZGRpbmctbGVmdDowfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RpYWxvZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RpYWxvZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2RpYWxvZy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWRiNDg5YWUmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZGlhbG9nLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGlhbG9nLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MWRiNDg5YWUmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMWRiNDg5YWVcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiAoX3ZtLnNob3cpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImNvbnRlbnRcIixzdHlsZTooeyB0b3A6IF92bS5jb250ZW50VG9wICsgJ3B4JyB9KSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldCAhPT0gJGV2ZW50LmN1cnJlbnRUYXJnZXQpeyByZXR1cm4gbnVsbDsgfXJldHVybiBfdm0uY2xvc2VQb3B1cCgkZXZlbnQpfX19LFtfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNsaWRlLWRvd25cIn0sb246e1wiZW50ZXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pc09wZW5pbmcgPSB0cnVlfSxcImFmdGVyLWVudGVyXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uaXNPcGVuaW5nID0gZmFsc2V9LFwibGVhdmVcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pc0Nsb3NpbmcgPSB0cnVlfSxcImFmdGVyLWxlYXZlXCI6X3ZtLmFmdGVyQ2xvc2V9fSxbKF92bS5zaG93TGlzdCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYm94XCIsc3R5bGU6KHsgaGVpZ2h0OiBfdm0ubGlzdEhlaWdodCArICdweCcgfSl9LFsoIV92bS5pc09wdGlvbnNFbXB0eSk/X2MoJ2Rpdicse3JlZjpcImxpc3Qtd2FycFwiLHN0YXRpY0NsYXNzOlwibGlzdC13cmFwXCJ9LF92bS5fbCgoX3ZtLmxheW91dE1hcCksZnVuY3Rpb24obWFwLG1hcEtleSl7XG52YXIgX29iajtcbnJldHVybiBfYygnZGl2Jyx7a2V5OidtYXAnICsgbWFwS2V5LHN0YXRpY0NsYXNzOlwibGlzdFwiLGNsYXNzOiggX29iaiA9IHt9LCBfb2JqW21hcC5iZ0NvbG9yXSA9IHRydWUsIF9vYmogKSxzdHlsZTooeyBmbGV4OiBtYXAuZmxleCB9KX0sWyhfdm0ubG9hZGluZ1NldFttYXAua2V5XSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibG9hZGluZy10aXBzXCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAuLi5cXG4gICAgICAgICAgXCIpXSk6W192bS5fbCgoX3ZtLm9wdGlvbnNTZXRbbWFwLmtleV0pLGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX2MoJ2l0ZW0nLHtrZXk6a2V5LHN0YXRpY0NsYXNzOlwiaXRlbS1kcm9wZG93blwiLGNsYXNzOnsgc2VsZWN0ZWQ6IF92bS5zZWxlY3RlZFNldFttYXAua2V5XSAmJiBfdm0uc2VsZWN0ZWRTZXRbbWFwLmtleV0uaWQgPT09IGl0ZW0uaWQgfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNlbGVjdChpdGVtLCBtYXAua2V5KX19fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0XCJ9LFtfYygncCcse2RvbVByb3BzOntcImlubmVySFRNTFwiOl92bS5fcyhfdm0uc2hvd05hbWUoaXRlbS5uYW1lU2hvdyB8fCBpdGVtLm5hbWUpKX19KSxfYygncCcse3N0YXRpY0NsYXNzOlwic2VsZWN0LW5vdGVcIn0sW192bS5fdihfdm0uX3MoaXRlbS5ub3RlKSldKV0pXSl9KSwoIV92bS5vcHRpb25zU2V0W21hcC5rZXldIHx8ICFfdm0ub3B0aW9uc1NldFttYXAua2V5XS5sZW5ndGgpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImVtcHR5LXRpcHNcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgXCIrX3ZtLl9zKF92bS5pc0l0ZW1PcHRpb25zRW1wdHkobWFwLmtleSkgPyBtYXAuZW1wdHlUZXh0IDogJ+ivt+mAieaLqScpK1wiXFxuICAgICAgICAgICAgXCIpXSk6X3ZtLl9lKCldXSwyKX0pKTpfdm0uX2UoKSxfYygnYXBwLWJ1dHRvbicse3N0YXRpY0NsYXNzOlwiYnRuLWNvbmZpcm1cIixjbGFzczp7ICdidG4tZGlzYWJsZWQnOiAhX3ZtLmFsbG93Q29uZmlybSB9LGF0dHJzOntcIm5hbWVcIjpcIuehruWumlwifSxvbjp7XCJjbGlja1wiOl92bS5jb25maXJtfX0pLF9jKCdsb2FkaW5nLXN0YXR1cycse2F0dHJzOntcImlzLWVtcHR5XCI6X3ZtLmlzT3B0aW9uc0VtcHR5LFwiZW1wdHktdGV4dFwiOlwi5rKh5pyJ5pWw5o2uXCJ9fSldLDEpOl92bS5fZSgpXSldLDEpOl92bS5fZSgpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XG5pbXBvcnQgZGlhbG9nIGZyb20gJy4vZGlhbG9nLnZ1ZSc7XG5cbmxldCBpbnN0YW5jZSA9IGZhbHNlO1xuXG5pZiAoIWluc3RhbmNlKSB7XG4gIGxldCBEaWFsb2dDb21wb25lbnQgPSBWdWUuZXh0ZW5kKGRpYWxvZyk7XG4gIGluc3RhbmNlID0gbmV3IERpYWxvZ0NvbXBvbmVudCh7XG4gICAgZWw6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICB9KTtcblxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGluc3RhbmNlLiRlbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3Zhbi1jZWxsJyx7c3RhdGljQ2xhc3M6XCJzaW5nbGUtaXRlbVwiLGF0dHJzOntcImNsaWNrYWJsZVwiOnRydWV9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2VsZWN0SXRlbShfdm0uaXRlbSl9fX0sW19jKCdzcGFuJyx7Y2xhc3M6e1xuICAgICAgJ2Rpc2FibGVkLWl0ZW0nOiBfdm0uaXRlbS5kaXNhYmxlZCxcbiAgICB9LHN0eWxlOih7ICctd2Via2l0LWxpbmUtY2xhbXAnOiBfdm0ubGluZUxpbWl0ID09PSAndW5saW1pdGVkJyA/ICdpbml0aWFsJyA6IF92bS5saW5lTGltaXQgfSksZG9tUHJvcHM6e1wiaW5uZXJIVE1MXCI6X3ZtLl9zKF92bS5pdGVtW192bS5yZW5kZXJGaWVsZF0pfX0pLChfdm0uY2hlY2tlZCk/X2MoJ3Zhbi1pY29uJyx7YXR0cnM6e1wibmFtZVwiOlwic3VjY2Vzc1wifX0pOl92bS5fZSgpXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2l0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPHRlbXBsYXRlPlxuICA8dmFuLWNlbGwgY2xhc3M9XCJzaW5nbGUtaXRlbVwiIDpjbGlja2FibGU9XCJ0cnVlXCIgQGNsaWNrPVwic2VsZWN0SXRlbShpdGVtKVwiPlxuICAgIDxzcGFuXG4gICAgICA6Y2xhc3M9XCJ7XG4gICAgICAgICdkaXNhYmxlZC1pdGVtJzogaXRlbS5kaXNhYmxlZCxcbiAgICAgIH1cIlxuICAgICAgOnN0eWxlPVwieyAnLXdlYmtpdC1saW5lLWNsYW1wJzogbGluZUxpbWl0ID09PSAndW5saW1pdGVkJyA/ICdpbml0aWFsJyA6IGxpbmVMaW1pdCB9XCJcbiAgICAgIHYtaHRtbD1cIml0ZW1bcmVuZGVyRmllbGRdXCJcbiAgICAvPlxuICAgIDx2YW4taWNvbiB2LWlmPVwiY2hlY2tlZFwiIG5hbWU9XCJzdWNjZXNzXCIgLz5cbiAgPC92YW4tY2VsbD5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdTaW5nbGVTZWxlY3RJdGVtJyxcbiAgcHJvcHM6IHtcbiAgICBpdGVtOiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiB7IGlkOiAnJywgbmFtZTogJycgfTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICBjaGVja2VkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICAvLyDmmL7npLrnmoTlrZfmrrVcbiAgICByZW5kZXJGaWVsZDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ25hbWUnLFxuICAgIH0sXG5cbiAgICAvLyDooYzmlbDpmZDliLbvvIzpu5jorqTmmK/vvJox77yM5peg6ZmQ5Yi25aGr77yadW5saW1pdGVkXG4gICAgbGluZUxpbWl0OiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogMSxcbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgc2VsZWN0SXRlbSh2KSB7XG4gICAgICBpZiAoIXYuZGlzYWJsZWQpIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnY2xpY2snLCB2KTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uc2luZ2xlLWl0ZW0ge1xuICBtaW4taGVpZ2h0OiA0NHB4O1xuICA+IGRpdiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICA+IHNwYW4ge1xuICAgICAgZmxleDogMTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgICAgLy8gLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgIC8vIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIC8vIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAvLyBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgLy8gdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAvZGVlcC8gbGFiZWwge1xuICAgICAgICBjb2xvcjogIzQxNzRlOTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaSB7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGNvbG9yOiAkdGhlbWVDb2xvcjtcbiAgfVxuICAuZGlzYWJsZWQtaXRlbSB7XG4gICAgY29sb3I6ICNhYWE7XG4gIH1cbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2l0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY5MjBkZGU3JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2l0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9pdGVtLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pdGVtLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY5MjBkZGU3Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjY5MjBkZGU3XCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiPHRlbXBsYXRlPlxuICA8ZGl2XG4gICAgcmVmPVwic2VsZWN0LWNvblwiXG4gICAgY2xhc3M9XCJzZWxlY3QtY29uXCJcbiAgICA6Y2xhc3M9XCJ7ICdzZWxlY3QtZGlzYWJsZWQnOiAhZWRpdGFibGVkIHx8IGlzTG9hZGluZyB9XCJcbiAgICBAY2xpY2s9XCJvcGVuRGlhbG9nXCJcbiAgPlxuICAgIDxkaXYgY2xhc3M9XCJzZWxlY3QtaGRcIj57eyBpc0xvYWRpbmcgPyAnLi4uJyA6IGhkVGV4dCB9fTwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzZWxlY3QtYmRcIj57eyBpc0xvYWRpbmcgPyAnLi4uJyA6IGJkVGV4dCB9fTwvZGl2PlxuXG4gICAgPGljb24gdi1pZj1cImVkaXRhYmxlZFwiIDpuYW1lPVwiaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJ1wiIGNsYXNzPVwic2VsZWN0LWFycm93XCIgLz5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5pbXBvcnQgZHJvcERvd25TZWxlY3REaWFsb2cgZnJvbSAnLi9kaWFsb2cuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdEcm9wRG93blNlbGVjdCcsXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gW10sXG4gICAgfSxcbiAgICBtYXN0ZXJDaGVja2l0ZW06IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gW10sXG4gICAgfSxcbiAgICBvcHRpb25zOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLFxuICAgIH0sXG4gICAgaXNMb2FkaW5nOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICBlZGl0YWJsZWQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlLFxuICAgIH0sXG4gICAgcGxhY2U6IHtcbiAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9LFxuICAgIH0sXG4gICAgYmF0Y2hJZDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICBwcm9jZXNzTW9kZToge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgbW9kZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2VkaXQnLFxuICAgIH0sXG4gICAgbXVsdGk6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICAgIG9wZW5TdGF0dXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gW10sXG4gICAgfSxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNPcGVuOiBmYWxzZSxcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGhkVGV4dCgpIHtcbiAgICAgIC8vIOmmluihjOaWh+Wtl1xuICAgICAgaWYgKF8uaXNFbXB0eSh0aGlzLm1hc3RlckNoZWNraXRlbSkgfHwgXy5pc0VtcHR5KHRoaXMubWFzdGVyQ2hlY2tpdGVtWzBdKSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lZGl0YWJsZWQgPyAn6K+36YCJ5oupJyA6ICfml6AnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFzdGVyQ2hlY2tpdGVtWzBdLm5hbWU7XG4gICAgICB9XG4gICAgfSxcbiAgICBiZFRleHQoKSB7XG4gICAgICAvLyDnrKzkuozooYzmloflrZdcbiAgICAgIGxldCByZXN1bHQgPSAnJztcblxuICAgICAgaWYgKF8uaXNFbXB0eSh0aGlzLm1hc3RlckNoZWNraXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdGFibGVkID8gJ+ivt+mAieaLqScgOiAn5pegJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChfLmlzRW1wdHkodGhpcy52YWx1ZSkpIHtcbiAgICAgICAgICByZXN1bHQgPSB0aGlzLmVkaXRhYmxlZCA/ICfor7fpgInmi6knIDogJ+aXoCc7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy52YWx1ZS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICByZXN1bHQgPSB0aGlzLnZhbHVlWzBdLm5hbWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0ID0gdGhpcy52YWx1ZS5sZW5ndGggKyAn6aG5JztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgZHJvcERvd25TZWxlY3REaWFsb2cuJG9uKCdhZnRlckNsb3NlUG9wdXAnLCAoKSA9PiB7XG4gICAgICB0aGlzLmlzT3BlbiA9IGZhbHNlO1xuICAgIH0pO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLyog5omT5byA5LiL5ouJ5by556qXXG4gICAgICog5by556qX6LCD55So55qE5piv5ZCM5LiA5Liq57uE5Lu277yM5aaC5p6c5ZCM5LiA5Liq6aG16Z2i5pyJ5aSa5Liq5q2k57uE5Lu277yM5Zyo5omT5byA5LiA5Liq5by556qX5LmL5YmN77yM6KaB5YWz6Zet5YW25a6D5by556qXXG4gICAgICovXG4gICAgb3BlbkRpYWxvZygpIHtcbiAgICAgIGlmICghdGhpcy5lZGl0YWJsZWQgfHwgdGhpcy5pc0xvYWRpbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZHJvcERvd25TZWxlY3REaWFsb2cub3BlblBvcHVwKHtcbiAgICAgICAgb3B0aW9uczogdGhpcy5vcHRpb25zLFxuICAgICAgICBzZWxlY3RlZDogdGhpcy52YWx1ZSxcbiAgICAgICAgcGxhY2U6IHRoaXMucGxhY2UsXG4gICAgICAgIGJhdGNoSWQ6IHRoaXMuYmF0Y2hJZCxcbiAgICAgICAgcHJvY2Vzc01vZGU6IHRoaXMucHJvY2Vzc01vZGUsXG4gICAgICAgIG1vZGU6IHRoaXMubW9kZSxcbiAgICAgICAgbXVsdGk6IHRoaXMubXVsdGksXG4gICAgICAgIG9wZW5TdGF0dXM6IHRoaXMub3BlblN0YXR1cyxcbiAgICAgICAgZWw6IHRoaXMuJHJlZnNbJ3NlbGVjdC1jb24nXSxcbiAgICAgICAgY29tcG9uZW50VWlkOiB0aGlzLl91aWQsXG4gICAgICAgIGNhbGxiYWNrOiByZXMgPT4ge1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgcmVzKTtcbiAgICAgICAgICB0aGlzLiRlbWl0KCdvblNlbGVjdCcsIHJlcyk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uc2VsZWN0LWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogN3B4IDQwcHggN3B4IDE1cHg7XG4gIGhlaWdodDogNTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5zZWxlY3QtY29uID4gKiB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuLnNlbGVjdC1oZCB7XG4gIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICBmb250LXNpemU6IDEwcHg7XG4gIGNvbG9yOiAkY29sb3JCbGFjaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4uc2VsZWN0LWJkIHtcbiAgbWFyZ2luLXRvcDogMnB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogJGNvbG9yQmxhY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuLnNlbGVjdC1hcnJvdyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1cHg7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogNDBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogJGNvbG9yR3JheTc7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnNlbGVjdC1kaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmI7XG59XG4uc2VsZWN0LWRpc2FibGVkIC5zZWxlY3QtaGQge1xuICBjb2xvcjogJGNvbG9yR3JheTE7XG59XG4uc2VsZWN0LWRpc2FibGVkIC5zZWxlY3QtYmQge1xuICBjb2xvcjogJGNvbG9yR3JheTE7XG59XG4uc2VsZWN0LWRpc2FibGVkIC5zZWxlY3QtYXJyb3cge1xuICBkaXNwbGF5OiBub25lO1xufVxuPC9zdHlsZT5cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5kcmF3aW5nW2RhdGEtdi03MWNlN2ZlY117ZGlzcGxheTpibG9ja30uemphcHAgLnBvaW50LWlucHV0LWxpc3RbZGF0YS12LTcxY2U3ZmVjXXtwYWRkaW5nOjE1cHggMCA1cHggMTVweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LnpqYXBwIC5hcmVhLW5hbWVbZGF0YS12LTcxY2U3ZmVjXXtiYWNrZ3JvdW5kLWNvbG9yOiNmMGYwZjA7Y29sb3I6IzhjOGM4YztwYWRkaW5nOjJweH0uemphcHAgLnBvaW50LWVsZVtkYXRhLXYtNzFjZTdmZWNde2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjU2cHg7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MjhweDtib3JkZXI6MXB4IHNvbGlkICNkY2RjZGM7Ym9yZGVyLXJhZGl1czozcHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47Y29sb3I6IzMzMzt0ZXh0LWFsaWduOmNlbnRlcn0uemphcHAgLnBvaW50LWV4Y2VlZFtkYXRhLXYtNzFjZTdmZWNde2NvbG9yOiNmZjQ2NDR9LnpqYXBwIC5wb2ludC1jdXJbZGF0YS12LTcxY2U3ZmVjXXtiYWNrZ3JvdW5kLWNvbG9yOiM0Mjc1ZTg7Ym9yZGVyLWNvbG9yOiM0Mjc1ZTg7Y29sb3I6I2ZmZn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTQzYzE1Y2JjJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5zZWxlY3QtY29uW2RhdGEtdi00M2MxNWNiY117cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzo3cHggNDBweCA3cHggMTVweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpoaWRkZW59LnpqYXBwIC5zZWxlY3QtY29uPipbZGF0YS12LTQzYzE1Y2JjXXtwb2ludGVyLWV2ZW50czpub25lfS56amFwcCAuc2VsZWN0LWhkW2RhdGEtdi00M2MxNWNiY117bGluZS1oZWlnaHQ6MTRweDtmb250LXNpemU6MTBweH0uemphcHAgLnNlbGVjdC1iZFtkYXRhLXYtNDNjMTVjYmNdLC56amFwcCAuc2VsZWN0LWhkW2RhdGEtdi00M2MxNWNiY117Y29sb3I6IzMzMztvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXB9LnpqYXBwIC5zZWxlY3QtYmRbZGF0YS12LTQzYzE1Y2JjXXttYXJnaW4tdG9wOjJweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4fS56amFwcCAuc2VsZWN0LWFycm93W2RhdGEtdi00M2MxNWNiY117cG9zaXRpb246YWJzb2x1dGU7dG9wOjVweDtyaWdodDowO3dpZHRoOjQwcHg7aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6NDBweDtmb250LXNpemU6MTZweDtjb2xvcjojYzhjOGM4O3RleHQtYWxpZ246Y2VudGVyfS56amFwcCAuc2VsZWN0LWRpc2FibGVkW2RhdGEtdi00M2MxNWNiY117YmFja2dyb3VuZC1jb2xvcjojZjVmN2ZifS56amFwcCAuc2VsZWN0LWRpc2FibGVkIC5zZWxlY3QtYmRbZGF0YS12LTQzYzE1Y2JjXSwuemphcHAgLnNlbGVjdC1kaXNhYmxlZCAuc2VsZWN0LWhkW2RhdGEtdi00M2MxNWNiY117Y29sb3I6IzY2Nn0uemphcHAgLnNlbGVjdC1kaXNhYmxlZCAuc2VsZWN0LWFycm93W2RhdGEtdi00M2MxNWNiY117ZGlzcGxheTpub25lfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dGFyZWFcIixjbGFzczp7J2JvcmRlci1ib3R0b20nOiBfdm0uYm9yZGVyQm90dG9tfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dGFyZWEtY29udGVudFwifSxbX2MoJ3RleHRhcmVhJyx7cmVmOlwiaW5wdXRcIixzdHlsZTooeyBoZWlnaHQ6IF92bS50ZXh0YXJlYUhlaWdodCArICdweCcgfSksYXR0cnM6e1wicGxhY2Vob2xkZXJcIjpfdm0ucGxhY2Vob2xkZXJ9LGRvbVByb3BzOntcInZhbHVlXCI6X3ZtLnZhbHVlfSxvbjp7XCJmb2N1c1wiOl92bS5vbmZvY3VzLFwiYmx1clwiOl92bS5vbmJsdXIsXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2V0U3RhdHVzKHRydWUpfSxcImNvbXBvc2l0aW9uZW5kXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2V0U3RhdHVzKGZhbHNlKX0sXCJpbnB1dFwiOl92bS5vbmlucHV0fX0pLF9jKCdkaXYnLHtyZWY6XCJydWxlXCIsc3RhdGljQ2xhc3M6XCJydWxlXCJ9LFtfdm0uX3YoXCJcXG4gICAgICBcIitfdm0uX3MoX3ZtLnZhbHVlKStcIlxcbiAgICBcIildKSwoX3ZtLm1heGxlbmd0aCAhPT0gSW5maW5pdHkpP19jKCdwJyx7c3RhdGljQ2xhc3M6XCJjb3VudGVyXCJ9LFtfdm0uX3YoXCJcXG4gICAgICBcIitfdm0uX3MoX3ZtLmxhc3RMZW5ndGgpK1wiXFxuICAgIFwiKV0pOl92bS5fZSgpXSldKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJpdGVtLXRleHRhcmVhXCIgOmNsYXNzPVwieydib3JkZXItYm90dG9tJzogYm9yZGVyQm90dG9tfVwiPlxuICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHRhcmVhLWNvbnRlbnRcIj5cbiAgICAgIDx0ZXh0YXJlYVxuICAgICAgICByZWY9XCJpbnB1dFwiXG4gICAgICAgIDp2YWx1ZT1cInZhbHVlXCJcbiAgICAgICAgOnBsYWNlaG9sZGVyPVwicGxhY2Vob2xkZXJcIlxuICAgICAgICA6c3R5bGU9XCJ7IGhlaWdodDogdGV4dGFyZWFIZWlnaHQgKyAncHgnIH1cIlxuICAgICAgICBAZm9jdXM9XCJvbmZvY3VzXCJcbiAgICAgICAgQGJsdXI9XCJvbmJsdXJcIlxuICAgICAgICBAY29tcG9zaXRpb25zdGFydD1cInNldFN0YXR1cyh0cnVlKVwiXG4gICAgICAgIEBjb21wb3NpdGlvbmVuZD1cInNldFN0YXR1cyhmYWxzZSlcIlxuICAgICAgICBAaW5wdXQ9XCJvbmlucHV0XCJcbiAgICAgID48L3RleHRhcmVhPlxuXG4gICAgICA8ZGl2IHJlZj1cInJ1bGVcIiBjbGFzcz1cInJ1bGVcIj5cbiAgICAgICAge3sgdmFsdWUgfX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8cCB2LWlmPVwibWF4bGVuZ3RoICE9PSBJbmZpbml0eVwiIGNsYXNzPVwiY291bnRlclwiPlxuICAgICAgICB7eyBsYXN0TGVuZ3RoIH19XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0l0ZW1UZXh0YXJlYScsXG4gIGNvbXBvbmVudHM6IHt9LFxuICBwcm9wczoge1xuICAgIHZhbHVlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIHBsYWNlaG9sZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIG1heGxlbmd0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMjAwLFxuICAgIH0sXG4gICAgYm9yZGVyQm90dG9tOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXh0YXJlYUhlaWdodDogNDAsXG4gICAgICBpc0xvY2s6IGZhbHNlLFxuICAgICAgYmx1clRpbWU6IG51bGwsXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBsYXN0TGVuZ3RoKCkge1xuICAgICAgbGV0IHZhbHVlTGVuZ3RoID0gKHRoaXMudmFsdWUgJiYgdGhpcy52YWx1ZS5sZW5ndGgpIHx8IDA7XG4gICAgICBjb25zdCBsZW5ndGggPSB0aGlzLm1heGxlbmd0aCAtIHZhbHVlTGVuZ3RoO1xuICAgICAgcmV0dXJuIGxlbmd0aCA+IDAgPyBsZW5ndGggOiAwO1xuICAgIH0sXG4gIH0sXG4gIG1vdW50ZWQoKSB7XG4gICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgdGhpcy50ZXh0YXJlYUhlaWdodCA9ICh0aGlzLiRyZWZzLnJ1bGUgJiYgdGhpcy4kcmVmcy5ydWxlLm9mZnNldEhlaWdodCkgfHwgNDA7XG4gICAgfSk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbmZvY3VzKCkge1xuICAgICAgLy8gaW9zIOS4reaWh+i+k+WFpeazle+8jOi+k+WFpei/mOayoeWujOaIkOeahOaXtuWAme+8iOi+k+WFpeahhui/mOaYr+iLseaWh++8ie+8jOi+k+WFpeahhuWkseWOu+eEpueCueWQjuS8muWGjeasoeiOt+WPlueEpueCuVxuICAgICAgbGV0IHRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgIGlmICh0aGlzLmJsdXJUaW1lICYmIHRpbWUgLSB0aGlzLmJsdXJUaW1lIDwgMzAwKSB7XG4gICAgICAgIGlmICh3aW5kb3cuY29yZG92YSAmJiB3aW5kb3cuY29yZG92YS5wbHVnaW5zICYmIHdpbmRvdy5jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQpIHtcbiAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmJsdXIoKTtcbiAgICAgICAgICB3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuYmx1clRpbWUgPSBudWxsO1xuXG4gICAgICB0aGlzLiRlbWl0KCdmb2N1cycpO1xuICAgIH0sXG4gICAgb25ibHVyKCkge1xuICAgICAgdGhpcy5ibHVyVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gICAgICB0aGlzLiRlbWl0KCdibHVyJyk7XG4gICAgfSxcbiAgICBzZXRTdGF0dXMoYm9vbCkge1xuICAgICAgY29uc29sZS5sb2coYm9vbCk7XG4gICAgICB0aGlzLmlzTG9jayA9IGJvb2w7XG4gICAgfSxcbiAgICBvbmlucHV0KGUpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuaXNMb2NrKSB7XG4gICAgICAgICAgbGV0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA+IHRoaXMubWF4bGVuZ3RoKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnN1YnN0cmluZygwLCB0aGlzLm1heGxlbmd0aCk7XG4gICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIOiuoeeul+aWh+acrOWfn+mrmOW6plxuICAgICAgICAgIHRoaXMuJHJlZnMucnVsZS5pbm5lclRleHQgPSB2YWx1ZTtcbiAgICAgICAgICB0aGlzLnRleHRhcmVhSGVpZ2h0ID0gdGhpcy4kcmVmcy5ydWxlICYmIHRoaXMuJHJlZnMucnVsZS5vZmZzZXRIZWlnaHQgKyAyMDtcblxuICAgICAgICAgIC8vIOmAmuefpeWPjOWQkee7keWumlxuICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpO1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSwgMCk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+XG4uaXRlbS10ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA1cHggMTVweDtcbn1cbi5pdGVtLXRleHRhcmVhLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uaXRlbS10ZXh0YXJlYSB0ZXh0YXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7XG59XG4uaXRlbS10ZXh0YXJlYSAucnVsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICAvLyB6LWluZGV4OiAtMTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG4uaXRlbS10ZXh0YXJlYSAuY291bnRlciB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW46IDAgMCAtNXB4IDA7XG4gIGhlaWdodDogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDE1cHg7XG4gIGNvbG9yOiAkY29sb3JHcmF5MztcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuPC9zdHlsZT5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNiYWFlNzcwJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00MzA0MmYwZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjY3YzE2MjAwXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiPHRlbXBsYXRlPlxuICA8ZGl2IHYtb249XCIkbGlzdGVuZXJzXCIgY2xhc3M9XCJkcmF3aW5nLWNvblwiIHJlZj1cImNvbnRlbnRcIiA6c3R5bGU9XCJzaXplU3R5bGVcIj5cbiAgICA8dGVtcGxhdGUgdi1pZj1cImlzRG93bmxvYWRpbmdcIj5cbiAgICAgIDxwPlxuICAgICAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgODAgODBcIiBjbGFzcz1cInN2Zy1sb2FkaW5nXCI+XG4gICAgICAgICAgPGNpcmNsZSBjeD1cIjQwXCIgY3k9XCI0MFwiIHI9XCIzNlwiPjwvY2lyY2xlPlxuICAgICAgICA8L3N2Zz5cbiAgICAgIDwvcD5cbiAgICAgIDxwIGNsYXNzPVwibG9hZGluZy10ZXh0XCI+5q2j5Zyo5LiL6L29Li4uPC9wPlxuICAgIDwvdGVtcGxhdGU+XG5cbiAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgICAgPHAgdi1pZj1cImVycm9yXCIgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3sgZXJyb3IgfX08L3A+XG4gICAgICA8Y2FudmFzIHYtZWxzZSByZWY9XCJkcmF3aW5nLWNhbnZhc1wiIDpzdHlsZT1cInNpemVTdHlsZVwiIC8+XG4gICAgPC90ZW1wbGF0ZT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuLy8gaW1wb3J0IERyYXdpbmczU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvbWVhc3VyZS9kcmF3aW5nLTMtaXRlbS1tb2RlbC5qcyc7XG5pbXBvcnQgSW1hZ2VTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vaW1hZ2Utc2VydmljZSc7XG5pbXBvcnQgcGx1Z2luQXBpIGZyb20gJ0BzcmMvYXBpL3BsdWdpbkFwaSc7XG5pbXBvcnQgY29udGV4dCBmcm9tICdAc3JjL2ZyYW1ld29yay9jb250ZXh0JztcbmltcG9ydCBuZXR3b3JrIGZyb20gJ0BzcmMvZnJhbWV3b3JrL25ldHdvcmsnO1xuaW1wb3J0IHsgRXh0ZW5kQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEIH0gZnJvbSAnQHNyYy9saWIvaHV4aW5nL2hpZHBpLWNhbnZhcyc7XG5cbi8vIOWumuS5ieminOiJslxubGV0IGV4Y2VlZENvbG9yID0gJyNmZjNjNDYnO1xubGV0IHF1YWxpZmllZENvbG9yID0gJyMwYmM2NjYnO1xubGV0IGxpZ2h0Q29sb3IgPSAnIzQyNzVlOCc7XG5cbi8qIOS4iuS4gOasoei+k+WFpeeahOiuvuiuoeWAvFxuICog5qC85byP77yaIHvmo4Dmn6XpoblJRDogeyd2YWwnOiAnJyAsICd2YWwt6auYJzogJyd9IH1cbiAqIOS4gOiIrOaooeW8j+eUqCB2YWwg5L2c5Li6IGtlee+8jOmrmOWuve+8jOW8gOmXtOi/m+a3seS8muaOpeS4gOS4qiAnLemrmCdcbiAqL1xubGV0IHByZXZTZXRWYWwgPSB7fTtcblxuY29uc3Qga2V5Ym9hcmRUZXh0ID0gW1xuICAnMScsXG4gICcyJyxcbiAgJzMnLFxuICAn5Yig6ZmkJyxcbiAgJzQnLFxuICAnNScsXG4gICc2JyxcbiAgJy0nLFxuICAnNycsXG4gICc4JyxcbiAgJzknLFxuICAnLicsXG4gICfkuIrkuIDpobknLFxuICAnMCcsXG4gICfkuIvkuIDpobknLFxuICAn5YWz6ZetJyxcbl07XG5cbmZ1bmN0aW9uIGhhc1ZhbCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gJycgJiYgdmFsICE9PSB1bmRlZmluZWQgJiYgdmFsICE9PSBudWxsICYmICFOdW1iZXIuaXNOYU4odmFsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnTWVhc3VyZURyYXdpbmczJyxcbiAgY29tcG9uZW50czoge30sXG4gIHByb3BzOiB7XG4gICAgdXJsOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgfSxcbiAgICAvKiDlm77nurjnlKjliLDnmoTmlbDmja5cbiAgICAgKiBbe1xuICAgICAgICAgIGNoZWNraXRlbToge30sXG4gICAgICAgICAgcGFzc3JhdGVNb2RlOiAxLFxuICAgICAgICAgIHBvaW50czogW10sXG4gICAgICAgIH0sXG4gICAgICAgIHsuLi59LCAuLi5dXG4gICAgICovXG4gICAgZGF0YToge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgfSxcbiAgICBwb2ludFN0YXR1czoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgfSxcbiAgICAvKiDlrp7mtYvngrnvvIzkvJrmnInlpJrkuKrmo4Dmn6XpobnnmoTlrp7mtYvngrlcbiAgICAgKiBbW+ajgOafpemhuUHnmoTlrp7mtYvngrkuLi5dLCBb5qOA5p+l6aG5QueahOWunua1i+eCuS4uLl0sIC4uLl1cbiAgICAgKi9cbiAgICBwb2ludHM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgIH0sXG4gICAgLy8g5bGV56S65pa55byP77yMZWRpdDog57yW6L6R5qih5byP77yMdmlldzog5p+l55yL5qih5byPXG4gICAgbW9kZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2VkaXQnLFxuICAgIH0sXG4gICAgd2lkdGg6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICB9LFxuICAgIGhlaWdodDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLFxuICAgIH0sXG4gICAgZm9sZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnaG91c2UtaW1hZ2UnLFxuICAgIH0sXG5cbiAgICAvLyDmoIforrDngrnljYrlvoRcbiAgICBwb2ludFJhZGl1czoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogOCxcbiAgICB9LFxuICAgIC8vIOWunumZheS4iueCueWPr+eCueWHu+eahOiMg+WbtOaYr+eUu+WHuueahOeCueeahOWHoOWAjVxuICAgIHBvaW50UmF0aW86IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDIsXG4gICAgfSxcbiAgICBjbGlja0RlbGF5OiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiA1MDAsXG4gICAgfSxcbiAgICBoYXNCb3VuY2luZzoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgfSxcblxuICAgIGlucHV0UmFuZ2U6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gWy05OTk5OTk5Ljk5OTk5LCA5OTk5OTk5Ljk5OTk5XSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBkcmF3aW5nOiBudWxsLFxuICAgICAgaXNEb3dubG9hZGluZzogZmFsc2UsXG4gICAgICBlcnJvcjogJycsXG5cbiAgICAgIC8vIOeUu+W4g1xuICAgICAgY2FudmFzOiBudWxsLFxuICAgICAgLy8g55S75biDMkTlrp7kvotcbiAgICAgIGN0eDogbnVsbCxcbiAgICAgIGltZzogbnVsbCxcbiAgICAgIHNyYzogJycsXG5cbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgc2NhbGU6IDEsXG4gICAgICBkZWZhdWx0U2NhbGU6IDEsXG4gICAgICBwaXhlbFJhdGlvOiAxLFxuICAgICAgbWFya1Bvc2l0aW9uOiBudWxsLFxuICAgICAgbWFya1Bvc2l0aW9uSW1hZ2VEYXRhOiBbXSxcbiAgICAgIG1hcmtDb29yZGluYXRlczogW10sXG5cbiAgICAgIHBpbmNoUmF0aW86IDAsXG4gICAgICB4UmFuZ2U6IG51bGwsXG4gICAgICB5UmFuZ2U6IG51bGwsXG4gICAgICBzY2FsZU1pbjogMSxcbiAgICAgIHNjYWxlTWF4OiAxLFxuICAgICAgaXNQaW5jaDogZmFsc2UsXG4gICAgICBjbGlja1BvaW50czogW10sXG4gICAgICB0b3VjaFN0YXJ0OiB7IHg6IDAsIHk6IDAsIGN4OiAwLCBjeTogMCwgdGltZTogMCB9LFxuXG4gICAgICBpc01vdmluZzogZmFsc2UsXG4gICAgICBtb3ZlVGltZXI6IG51bGwsXG4gICAgICBtb3ZlRGVzdDogeyB4OiBudWxsLCB5OiBudWxsIH0sXG4gICAgICBwaW5jaENlbnRlcjoge30sXG5cbiAgICAgIC8vIOmrmOS6rumXqueDgeaViOaenFxuICAgICAgbGlnaHRSaXBwbGU6IDAsXG4gICAgICBsaWdodFJpcHBsZVRpbWVyOiBudWxsLFxuICAgICAgbGlnaHRSaXBwbGVUaW1lczogMCwgLy8g5rOi57q56Zeq54OB55qE5qyh5pWwXG4gICAgICBsaWdodFJpcHBsZVRpbWVzTWF4OiAyLCAvLyDmnIDlpKfpl6rng4HmrKHmlbDorr7lrprkuLoy5qyhXG5cbiAgICAgIC8vIOitpuWRiumXqueDgeaViOaenFxuICAgICAgaGFzV2FybmluZzogZmFsc2UsXG4gICAgICB3YXJuaW5nUmlwcGxlOiAwLFxuICAgICAgd2FybmluZ1JpcHBsZVRpbWVyOiBudWxsLFxuXG4gICAgICBkcmF3UG9pbnRJbmRleDogbnVsbCwgLy8g5b2T5YmN5qCH6K6w55qEIGluZGV4XG4gICAgICBsaWdodElucHV0SW5kZXg6IG51bGwsIC8vIOmrmOS6rueahOi+k+WFpeahhiBpbmRleFxuXG4gICAgICBrZXlib3JhZEFjdGlvbkRhdGE6IHt9LCAvLyDplK7nm5jngrnlh7vnirbmgIFcblxuICAgICAgaXNJbnB1dFNob3c6IGZhbHNlLFxuICAgICAgaXNLZXlib2FyZFNob3c6IGZhbHNlLFxuICAgICAgaW5wdXRMZW5ndGg6IDAsIC8vIOi+k+WFpeahhueahOaVsOmHj1xuICAgICAgaGFzT3BlcmFCdG46IGZhbHNlLFxuICAgICAgaGFzUHJldklucHV0OiBmYWxzZSxcbiAgICAgIGhhc05leHRJbnB1dDogZmFsc2UsXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBzaXplU3R5bGUoKSB7XG4gICAgICByZXR1cm4geyB3aWR0aDogYCR7dGhpcy53aWR0aH1weGAsIGhlaWdodDogYCR7dGhpcy5oZWlnaHR9cHhgIH07XG4gICAgfSxcblxuICAgIHBhc3NyYXRlTW9kZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLmRhdGEgJiYgdGhpcy5kYXRhWzBdICYmIHRoaXMuZGF0YVswXS5wYXNzcmF0ZU1vZGU7XG4gICAgfSxcblxuICAgIGNvbWJvTGVuZ3RoKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGF0YSAmJiB0aGlzLmRhdGEubGVuZ3RoO1xuICAgIH0sXG5cbiAgICBkcmF3aW5nUG9pbnRzKCkge1xuICAgICAgY29uc29sZS5sb2coJ3RoaXMuZ2V0RHJhd1BvaW50cyh0aGlzLmRhdGEpID09PT09PT09JywgdGhpcy5nZXREcmF3UG9pbnRzKHRoaXMuZGF0YSkpO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0RHJhd1BvaW50cyh0aGlzLmRhdGEpO1xuICAgIH0sXG4gICAgbWVhc3VyZUl0ZW0oKSB7XG4gICAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgICBpZiAocGFzc3JhdGVNb2RlID09PSA1KSB7XG4gICAgICAgIHJlc3VsdCA9IFsn6auYJywgJ+WuvSddO1xuICAgICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDUpIHtcbiAgICAgICAgcmVzdWx0ID0gWyflvIDpl7QnLCAn6L+b5rexJ107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBbXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICB9LFxuICB3YXRjaDoge1xuICAgIHVybCh2KSB7XG4gICAgICBpZiAodikge1xuICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLmdldEltYWdlKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgZGF0YToge1xuICAgICAgaGFuZGxlcih2KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdkYXRhIGNjY2NjY2NjY2MgLS0tLS0tLS0tLScsIHYsIHRoaXMpO1xuICAgICAgICB0aGlzLmRyYXcoKTtcbiAgICAgIH0sXG4gICAgICBkZWVwOiB0cnVlLFxuICAgIH0sXG4gIH0sXG4gIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5nZXRJbWFnZSgpO1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIHRoaXMuZHJhd2luZy5kZXN0cm95KCk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBnZXRJbWFnZSgpIHtcbiAgICAgIGlmICh0aGlzLmlzRG93bmxvYWRpbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc29sZS5sb2coJ2dldEltYWdlIC0tLS0tLS0tLS0tJywgdGhpcy51cmwpO1xuICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIGlmICh0aGlzLnVybCkge1xuICAgICAgICBsZXQgdXNlcklkID0gY29udGV4dC5nZXRVc2VyKCkudXNlcl9pZDtcbiAgICAgICAgbGV0IHVybCA9IHMucmVwbGFjZUFsbCh0aGlzLnVybCwgJ1xcXFw/eC1vc3MtcHJvY2Vzcz1pbWFnZVxcXFwvcmVzaXplLCcsICdAJyk7XG4gICAgICAgIGxldCBmaWxlbmFtZSA9IHMuc3RyUmlnaHRCYWNrKHVybCwgJy8nKTtcbiAgICAgICAgaWYgKCFmaWxlbmFtZSkge1xuICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5oi35Z6L5Zu+5Zyw5Z2A6ZSZ6K+vJztcbiAgICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5lcnJvciA9ICcnO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHBhdGhzID0gW1xuICAgICAgICAgIHBsdWdpbkFwaS5hcHBJbWFnZVBhdGgoKSArIHVzZXJJZCArICcvaG91c2UtaW1hZ2UvJyArIGZpbGVuYW1lLFxuICAgICAgICAgIHBsdWdpbkFwaS5hcHBJbWFnZVBhdGgoKSArIHVzZXJJZCArICcvZHJhd2luZy8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcEltYWdlUGF0aCgpICsgdXNlcklkICsgJy9pbWFnZXMvJyArIGZpbGVuYW1lLFxuICAgICAgICAgIHBsdWdpbkFwaS5hcHBEYXRhUGF0aCgpICsgdXNlcklkICsgJy9ob3VzZS1pbWFnZS8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcERhdGFQYXRoKCkgKyB1c2VySWQgKyAnL2RyYXdpbmcvJyArIGZpbGVuYW1lLFxuICAgICAgICAgIHBsdWdpbkFwaS5hcHBEYXRhUGF0aCgpICsgdXNlcklkICsgJy9pbWFnZXMvJyArIGZpbGVuYW1lLFxuICAgICAgICBdO1xuICAgICAgICBsZXQgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuXG4gICAgICAgIGlmIChBUFBfRU5WID09PSAnZGV2Jykge1xuICAgICAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudXJsO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF8uZWFjaChwYXRocywgcGF0aCA9PiB7XG4gICAgICAgICAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHBsdWdpbkFwaS5pc0ZpbGVFeGlzdHMocGF0aCkudGhlbihleGlzdHMgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChleGlzdHMpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBJbWFnZVNlcnZpY2UuX2ZpeFBhdGgocGF0aCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHByb21pc2VcbiAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ+iOt+WPluWbvueJhyBzcmMgPT09PT09PT09JywgcmVzKTtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgLy8g5a2Y5Zyo5pys5Zyw5paH5Lu277yM55u05o6l6L+U5ZueXG4gICAgICAgICAgICAgIHRoaXMuc3JjID0gcmVzO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8g5LiN5a2Y5Zyo5pys5Zyw5paH5Lu277yM5LiL6L29XG4gICAgICAgICAgICAgIHJldHVybiBuZXR3b3JrLmdldEhhc05ldHdvcmsoKS50aGVuKGhhc05ldHdvcmsgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChoYXNOZXR3b3JrKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gSW1hZ2VTZXJ2aWNlLmRvd25sb2FkKHRoaXMudXJsLCB0cnVlLCB0aGlzLmZvbGRlcikudGhlbihwYXRoID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zcmMgPSBwYXRoO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgn5b2T5YmN5peg572R57ucJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGlzLnNyYyA9PT09PT0nLCB0aGlzLnNyYyk7XG4gICAgICAgICAgICBpZiAodGhpcy5zcmMpIHtcbiAgICAgICAgICAgICAgdGhpcy5pbWcgPSBuZXcgSW1hZ2UoKTtcblxuICAgICAgICAgICAgICB0aGlzLmltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaW1nLmNvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5Zu+54mH5Yqg6L295oiQ5YqfIC0tLS0tLS0tLScpO1xuICAgICAgICAgICAgICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLmluaXQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnMTExMTEnKTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5Yqg6L295Zu+54mH5aSx6LSlJztcbiAgICAgICAgICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICB0aGlzLmltZy5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCcyMjIyMicpO1xuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5Yqg6L295Zu+54mH5aSx6LSlJztcbiAgICAgICAgICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSB0aGlzLnNyYztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5LiL6L295oi35Z6L5Zu+5aSx6LSlJztcbiAgICAgICAgICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgICAgdGhpcy5lcnJvciA9IF8uaXNTdHJpbmcoZXJyb3IpID8gZXJyb3IgOiAn5LiL6L295oi35Z6L5Zu+5aSx6LSlJztcbiAgICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lcnJvciA9ICfmiLflnovlm77lnLDlnYDplJnor68nO1xuICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaW5pdCgpIHtcbiAgICAgIGlmICh0aGlzLmlzRG93bmxvYWRpbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gb25DaGFuZ2VcbiAgICAgIC8vIG9uQ2xpY2tQb2ludFxuXG4gICAgICBpZiAoIXRoaXMuJHJlZnNbJ2RyYXdpbmctY2FudmFzJ10pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IGNvbnRlbnQgPSB0aGlzLiRyZWZzWydjb250ZW50J107XG5cbiAgICAgIHRoaXMuY2FudmFzID0gdGhpcy4kcmVmc1snZHJhd2luZy1jYW52YXMnXTtcbiAgICAgIHRoaXMuY3R4ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgIHRoaXMud2lkdGggPSBjb250ZW50Lm9mZnNldFdpZHRoO1xuICAgICAgdGhpcy5oZWlnaHQgPSBjb250ZW50Lm9mZnNldEhlaWdodDtcbiAgICAgIHRoaXMucGl4ZWxSYXRpbyA9IHRoaXMuZ2V0UGl4ZWxSYXRpbyh0aGlzLmN0eCk7XG5cbiAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmhlaWdodCA9IHRoaXMuaGVpZ2h0ICsgJ3B4JztcbiAgICAgIHRoaXMuY2FudmFzLnN0eWxlLndpZHRoID0gdGhpcy53aWR0aCArICdweCc7XG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHRoaXMud2lkdGggKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmhlaWdodCAqIHRoaXMucGl4ZWxSYXRpbztcbiAgICAgICF0aGlzLmN0eC5leHRlbmRlZCAmJiBFeHRlbmRDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQodGhpcy5jdHgpO1xuXG4gICAgICAvLyDnu5Hlrprkuovku7ZcbiAgICAgIHRoaXMuYmluZFRvdWNoRXZlbnQoKTtcblxuICAgICAgdGhpcy5jYWxjKCk7XG4gICAgICB0aGlzLmRyYXcoKTtcbiAgICB9LFxuXG4gICAgZ2V0UGl4ZWxSYXRpbyhjb250ZXh0KSB7XG4gICAgICB2YXIgYmFja2luZ1N0b3JlID1cbiAgICAgICAgY29udGV4dC5iYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIGNvbnRleHQubW96QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICBjb250ZXh0Lm1zQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIGNvbnRleHQuYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICAxO1xuXG4gICAgICByZXR1cm4gKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIC8gYmFja2luZ1N0b3JlO1xuICAgIH0sXG5cbiAgICB3aW5Ub0NhbnZhcyh4LCB5KSB7XG4gICAgICB2YXIgcG9zID0gdGhpcy5jYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IHggLSBwb3MubGVmdCAqICh0aGlzLmNhbnZhcy53aWR0aCAvIChwb3Mud2lkdGggKiB0aGlzLnBpeGVsUmF0aW8pKSxcbiAgICAgICAgeTogeSAtIHBvcy50b3AgKiAodGhpcy5jYW52YXMuaGVpZ2h0IC8gKHBvcy5oZWlnaHQgKiB0aGlzLnBpeGVsUmF0aW8pKSxcbiAgICAgIH07XG4gICAgfSxcblxuICAgIGJpbmRUb3VjaEV2ZW50KCkge1xuICAgICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaHN0YXJ0KTtcbiAgICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaG1vdmUpO1xuICAgICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLm9uVG91Y2hlbmQpO1xuICAgIH0sXG5cbiAgICB1bmJpbmRUb3VjaEV2ZW50KCkge1xuICAgICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaHN0YXJ0KTtcbiAgICAgIHRoaXMuY2FudmFzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaG1vdmUpO1xuICAgICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLm9uVG91Y2hlbmQpO1xuICAgIH0sXG5cbiAgICAvLyDmmK/lkKblnKjnvKnmlL5cbiAgICBpc1BpbmNoaW5nKGUpIHtcbiAgICAgIHZhciBjaGFuZ2VkID0gZS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGgsXG4gICAgICAgIHRvdWNoaW5nID0gZS50b3VjaGVzLmxlbmd0aDtcblxuICAgICAgcmV0dXJuIGNoYW5nZWQgPT09IDEgfHwgY2hhbmdlZCA9PT0gMiB8fCB0b3VjaGluZyA9PT0gMjtcbiAgICB9LFxuXG4gICAgLy8g5piv5ZCm5Zyo5ouW5YqoXG4gICAgaXNEcmFnZ2luZyhlKSB7XG4gICAgICByZXR1cm4gZS50b3VjaGVzLmxlbmd0aCA9PT0gMTtcbiAgICB9LFxuXG4gICAgb25Ub3VjaHN0YXJ0KGUpIHtcbiAgICAgIHRoaXMuaXNQaW5jaCA9IGZhbHNlO1xuXG4gICAgICBpZiAodGhpcy5pc0RyYWdnaW5nKGUpKSB7XG4gICAgICAgIHRoaXMudG91Y2hTdGFydEhhbmRsZXIoZSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNQaW5jaGluZyhlKSkge1xuICAgICAgICB2YXIgdG91Y2gxID0gZS50b3VjaGVzWzBdLFxuICAgICAgICAgIHRvdWNoMiA9IGUudG91Y2hlc1sxXSxcbiAgICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgICBwb2ludDEgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoMS5jbGllbnRYLCB0b3VjaDEuY2xpZW50WSksXG4gICAgICAgICAgcG9pbnQyID0gdGhpcy53aW5Ub0NhbnZhcyh0b3VjaDIuY2xpZW50WCwgdG91Y2gyLmNsaWVudFkpO1xuXG4gICAgICAgIC8vIHRoaXMuaXNQaW5jaCA9IHRydWU7XG4gICAgICAgIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHBvaW50Mi54IC0gcG9pbnQxLngsIDIpICsgTWF0aC5wb3cocG9pbnQyLnkgLSBwb2ludDEueSwgMikpO1xuXG4gICAgICAgIHRoaXMucGluY2hSYXRpbyA9IHRoaXMuc2NhbGUgLyBkaXN0YW5jZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgb25Ub3VjaG1vdmUoZSkge1xuICAgICAgaWYgKHRoaXMubW9kZSA9PT0gJ2ltZycpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF07XG5cbiAgICAgIC8vIOaYr+WQpuaLluaLveWIsOS6hui+ueeVjFxuICAgICAgdmFyIGlzQm91bmRhcnk7XG4gICAgICB2YXIgZHJhZ2dpbmdEaXJlY3Rpb247XG5cbiAgICAgIGlmICh0aGlzLmlzRHJhZ2dpbmcoZSkpIHtcbiAgICAgICAgaWYgKCF0aGlzLnRvdWNoU3RhcnQpIHtcbiAgICAgICAgICB0aGlzLnRvdWNoU3RhcnRIYW5kbGVyKGUpO1xuICAgICAgICB9XG4gICAgICAgIGRyYWdnaW5nRGlyZWN0aW9uID0gdGhpcy5nZXREcmFnZ2luZ0RpcmVjdGlvbih0aGlzLnRvdWNoU3RhcnQsIHRvdWNoKTtcblxuICAgICAgICBpc0JvdW5kYXJ5ID1cbiAgICAgICAgICAoZHJhZ2dpbmdEaXJlY3Rpb24gPT09ICdiJyAmJiB0aGlzLmlzQm91bmRhcnkoJ2InKSkgfHxcbiAgICAgICAgICAoZHJhZ2dpbmdEaXJlY3Rpb24gPT09ICd0JyAmJiB0aGlzLmlzQm91bmRhcnkoJ3QnKSkgfHxcbiAgICAgICAgICAoZHJhZ2dpbmdEaXJlY3Rpb24gPT09ICdyJyAmJiB0aGlzLmlzQm91bmRhcnkoJ3InKSkgfHxcbiAgICAgICAgICAoZHJhZ2dpbmdEaXJlY3Rpb24gPT09ICdsJyAmJiB0aGlzLmlzQm91bmRhcnkoJ2wnKSk7XG5cbiAgICAgICAgaWYgKCFpc0JvdW5kYXJ5IHx8IHRoaXMuaGFzQm91bmNpbmcpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyDmi5bmi71cbiAgICAgICAgaWYgKFxuICAgICAgICAgIE1hdGguYWJzKHRvdWNoLmNsaWVudFggLSB0aGlzLnRvdWNoU3RhcnQuY3gpID4gMyB8fFxuICAgICAgICAgIE1hdGguYWJzKHRvdWNoLmNsaWVudFkgLSB0aGlzLnRvdWNoU3RhcnQuY3kpID4gM1xuICAgICAgICApIHtcbiAgICAgICAgICB0aGlzLnRvdWNoTW92ZUhhbmRsZXIoZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5pc1BpbmNoaW5nKGUpKSB7XG4gICAgICAgIC8vIOe8qeaUvlxuICAgICAgICB0aGlzLnRvdWNoUGluY2hIYW5kbGVyKGUpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBvblRvdWNoZW5kKGUpIHtcbiAgICAgIHRoaXMudG91Y2hFbmRIYW5kbGVyKGUpO1xuICAgIH0sXG5cbiAgICB0b3VjaFN0YXJ0SGFuZGxlcihlKSB7XG4gICAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF0sXG4gICAgICAgIHBvcyA9IHRoaXMud2luVG9DYW52YXModG91Y2guY2xpZW50WCwgdG91Y2guY2xpZW50WSk7XG5cbiAgICAgIHRoaXMudG91Y2hTdGFydCA9IHtcbiAgICAgICAgeDogcG9zLngsXG4gICAgICAgIHk6IHBvcy55LFxuICAgICAgICBjeDogdG91Y2guY2xpZW50WCxcbiAgICAgICAgY3k6IHRvdWNoLmNsaWVudFksXG4gICAgICAgIHRpbWU6IERhdGUubm93KCksXG4gICAgICB9O1xuICAgIH0sXG5cbiAgICAvLyDmi5bmi71cbiAgICB0b3VjaE1vdmVIYW5kbGVyKGUpIHtcbiAgICAgIHZhciB0b3VjaCA9IGUudG91Y2hlc1swXSxcbiAgICAgICAgcG9zID0gdGhpcy53aW5Ub0NhbnZhcyh0b3VjaC5jbGllbnRYLCB0b3VjaC5jbGllbnRZKSxcbiAgICAgICAgb2Zmc2V0WCA9IChwb3MueCAtIHRoaXMudG91Y2hTdGFydC54KSAqIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgb2Zmc2V0WSA9IChwb3MueSAtIHRoaXMudG91Y2hTdGFydC55KSAqIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgb3ZlcmZsb3dTaXplID0gdGhpcy5nZXRNb3ZlT3ZlcmZsb3coKSxcbiAgICAgICAgZXhwZWN0WCA9IHRoaXMueCArIG9mZnNldFgsXG4gICAgICAgIGV4cGVjdFkgPSB0aGlzLnkgKyBvZmZzZXRZO1xuXG4gICAgICBpZiAoIXRoaXMuaXNQaW5jaCkge1xuICAgICAgICB0aGlzLnRvdWNoU3RhcnQueCA9IHBvcy54O1xuICAgICAgICB0aGlzLnRvdWNoU3RhcnQueSA9IHBvcy55O1xuXG4gICAgICAgIC8vIOawtOW5s+aWueWQkei2heWHuuaLluaLveiMg+WbtFxuICAgICAgICBpZiAoZXhwZWN0WCA8PSB0aGlzLnhSYW5nZVswXSB8fCBleHBlY3RYID49IHRoaXMueFJhbmdlWzFdKSB7XG4gICAgICAgICAgaWYgKHRoaXMuaGFzQm91bmNpbmcgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBpZiAoZXhwZWN0WCA8PSB0aGlzLnhSYW5nZVswXSkge1xuICAgICAgICAgICAgICB0aGlzLnggPSB0aGlzLnhSYW5nZVswXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMueCA9IHRoaXMueFJhbmdlWzFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyDlpoLmnpzmnInlvLnmgKfmlYjmnpzvvIzliJnmt7vliqDkuIDkuKrigJzpmLvlipvigJ1cbiAgICAgICAgICAgIHRoaXMueCArPVxuICAgICAgICAgICAgICAob2Zmc2V0WCAqIE1hdGguYWJzKHRoaXMuY2FudmFzLndpZHRoIC8gMiAtIG92ZXJmbG93U2l6ZS54KSkgLyB0aGlzLmNhbnZhcy53aWR0aCAvIDI7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMueCArPSBvZmZzZXRYO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5Z6C55u05pa55ZCR6LaF5Ye65ouW5ou96IyD5Zu0XG4gICAgICAgIGlmIChleHBlY3RZIDw9IHRoaXMueVJhbmdlWzBdIHx8IGV4cGVjdFkgPj0gdGhpcy55UmFuZ2VbMV0pIHtcbiAgICAgICAgICBpZiAodGhpcy5oYXNCb3VuY2luZyA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGlmIChleHBlY3RZIDw9IHRoaXMueVJhbmdlWzBdKSB7XG4gICAgICAgICAgICAgIHRoaXMueSA9IHRoaXMueVJhbmdlWzBdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy55ID0gdGhpcy55UmFuZ2VbMV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOWmguaenOacieW8ueaAp+aViOaenO+8jOWImea3u+WKoOS4gOS4quKAnOmYu+WKm+KAnVxuICAgICAgICAgICAgdGhpcy55ICs9XG4gICAgICAgICAgICAgIChvZmZzZXRZICogTWF0aC5hYnModGhpcy5jYW52YXMuaGVpZ2h0IC8gMiAtIG92ZXJmbG93U2l6ZS55KSkgL1xuICAgICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgL1xuICAgICAgICAgICAgICAyO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnkgKz0gb2Zmc2V0WTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZHJhdygpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDnvKnmlL5cbiAgICB0b3VjaFBpbmNoSGFuZGxlcihlKSB7XG4gICAgICAvL1xuICAgICAgdmFyIHRvdWNoMSA9IGUudG91Y2hlc1swXSxcbiAgICAgICAgdG91Y2gyID0gZS50b3VjaGVzWzFdLFxuICAgICAgICBwb2ludDEgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoMS5jbGllbnRYLCB0b3VjaDEuY2xpZW50WSksXG4gICAgICAgIHBvaW50MiA9IHRoaXMud2luVG9DYW52YXModG91Y2gyLmNsaWVudFgsIHRvdWNoMi5jbGllbnRZKSxcbiAgICAgICAgc2NhbGUsXG4gICAgICAgIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHBvaW50Mi54IC0gcG9pbnQxLngsIDIpICsgTWF0aC5wb3cocG9pbnQyLnkgLSBwb2ludDEueSwgMikpLFxuICAgICAgICBjZW50ZXI7XG5cbiAgICAgIHZhciBzY2FsZU92ZXJmbG93LCAvLyDnvKnmlL7nmoTotoXlh7rph4/vvIzlpoLmnpzkuLogMCDvvIzor7TmmI7nvKnmlL7msqHmnInotoXlh7ogdGhpcy5zY2FsZU1pbiDlkowgdGhpcy5zY2FsZU1heFxuICAgICAgICBzY2FsZU92ZXJmbG93TWF4LCAvLyDnvKnmlL7lhYHorrjnmoTmnIDlpKfotoXlh7rph49cbiAgICAgICAgb3ZlcmZsb3dSYXRpbzsgLy8g5b2T57yp5pS+6LaF5Ye6IHRoaXMuc2NhbGVNaW4gfiB0aGlzLnNjYWxlTWF4IOaXtu+8jOe7mee8qeaUvuS4gOS4qua2iOWHj+mHj++8jOS7pei+vuWIsOW8ueaAp+aViOaenFxuXG4gICAgICB0aGlzLmlzUGluY2ggPSB0cnVlOyAvLyDpmLLmraLnvKnmlL7lkI7mlL7lvIDmiYvmjIfvvIzkuIDmoLnmiYvmjIflhYjmlL7lvIDvvIznhLblkI7op6blj5Hmi5bliqggLS0+IOWPkeeUn+WBj+enu1xuXG4gICAgICBzY2FsZSA9IHRoaXMucGluY2hSYXRpbyAqIGRpc3RhbmNlO1xuXG4gICAgICBzY2FsZU92ZXJmbG93ID0gdGhpcy5nZXRTY2FsZU92ZXJmbG93KHNjYWxlKTtcbiAgICAgIHNjYWxlT3ZlcmZsb3dNYXggPSB0aGlzLnNjYWxlTWluIC8gMjtcbiAgICAgIG92ZXJmbG93UmF0aW8gPVxuICAgICAgICAoTWF0aC5hYnMoc2NhbGVPdmVyZmxvdykgPiBzY2FsZU92ZXJmbG93TWF4XG4gICAgICAgICAgPyAxXG4gICAgICAgICAgOiBNYXRoLmFicyhzY2FsZU92ZXJmbG93KSAvIHNjYWxlT3ZlcmZsb3dNYXgpIC8gMjtcblxuICAgICAgc2NhbGUgPVxuICAgICAgICBzY2FsZSAtXG4gICAgICAgICh0aGlzLmhhc0JvdW5jaW5nID8gKHNjYWxlT3ZlcmZsb3cgPyBzY2FsZU92ZXJmbG93ICogb3ZlcmZsb3dSYXRpbyA6IDApIDogc2NhbGVPdmVyZmxvdyk7XG5cbiAgICAgIC8vIDLmiYvmjIfnvKnmlL7nmoTkuK3lv4PngrlcbiAgICAgIHRoaXMucGluY2hDZW50ZXIgPSBjZW50ZXIgPSB7XG4gICAgICAgIHg6ICgocG9pbnQxLnggKyBwb2ludDIueCkgLyAyKSAqIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgeTogKChwb2ludDEueSArIHBvaW50Mi55KSAvIDIpICogdGhpcy5waXhlbFJhdGlvLFxuICAgICAgfTtcblxuICAgICAgLy8g5Zu65a6a5Lit5b+D54K5XG4gICAgICB0aGlzLnggPSBjZW50ZXIueCAtIChzY2FsZSAvIHRoaXMuc2NhbGUpICogKGNlbnRlci54IC0gdGhpcy54KTtcbiAgICAgIHRoaXMueSA9IGNlbnRlci55IC0gKHNjYWxlIC8gdGhpcy5zY2FsZSkgKiAoY2VudGVyLnkgLSB0aGlzLnkpO1xuXG4gICAgICAvLyDmnIDlkI7ph43nu5hcbiAgICAgIGlmIChzY2FsZSAhPT0gdGhpcy5zY2FsZSkge1xuICAgICAgICB0aGlzLnNjYWxlID0gc2NhbGU7IC8vIOmHjeaWsOiuvue9ruavlOS+i1xuICAgICAgICB0aGlzLnNldE1vdmVSYW5nZSgpOyAvLyDorr7nva7mi5bmi73nmoTojIPlm7RcbiAgICAgICAgdGhpcy5kcmF3KCk7IC8vIOmHjee7mFxuICAgICAgfVxuICAgIH0sXG5cbiAgICB0b3VjaEVuZEhhbmRsZXIoZSkge1xuICAgICAgdmFyIHRvdWNoID0gZS5jaGFuZ2VkVG91Y2hlc1swXTtcblxuICAgICAgaWYgKFxuICAgICAgICB0aGlzLnRvdWNoU3RhcnQgJiZcbiAgICAgICAgRGF0ZS5ub3coKSAtIHRoaXMudG91Y2hTdGFydC50aW1lIDwgdGhpcy5jbGlja0RlbGF5ICYmXG4gICAgICAgIE1hdGguYWJzKHRvdWNoLmNsaWVudFggLSB0aGlzLnRvdWNoU3RhcnQuY3gpIDwgNiAmJlxuICAgICAgICBNYXRoLmFicyh0b3VjaC5jbGllbnRZIC0gdGhpcy50b3VjaFN0YXJ0LmN5KSA8IDZcbiAgICAgICkge1xuICAgICAgICAvLyDngrnlh7tcbiAgICAgICAgdGhpcy5jbGlja0hhbmRsZXIoZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIOWbnuS9jVxuICAgICAgdGhpcy5zdHJhaWdodGVuKGUpO1xuICAgIH0sXG5cbiAgICAvLyDngrnlh7vkuovku7blpITnkIZcbiAgICAvLyDov5Tlm57nmoTlnZDmoIfmmK/nm7jlr7nkuo7lm77niYflt6bkuIrop5LnmoTlnZDmoIdcbiAgICBjbGlja0hhbmRsZXIoZSkge1xuICAgICAgdmFyIHRvdWNoID0gZS5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgICAgIHZhciBwb3MgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpO1xuXG4gICAgICAvLyDovazmjaLnnJ/mraPnmoTlnZDmoIfvvIzopoHorqHnrpfigJzlgY/np7vph4/vvIznvKnmlL7mr5Tlkozlg4/ntKDmr5TigJ1cbiAgICAgIHZhciBjb29yZGluYXRlID0ge1xuICAgICAgICB4OiAoKChwb3MueCAtIHRoaXMueCAvIHRoaXMucGl4ZWxSYXRpbykgLyB0aGlzLnNjYWxlKSAqIHRoaXMucGl4ZWxSYXRpbykudG9GaXhlZCgxKSxcbiAgICAgICAgeTogKCgocG9zLnkgLSB0aGlzLnkgLyB0aGlzLnBpeGVsUmF0aW8pIC8gdGhpcy5zY2FsZSkgKiB0aGlzLnBpeGVsUmF0aW8pLnRvRml4ZWQoMSksXG4gICAgICB9O1xuXG4gICAgICB2YXIgY2xpY2tQb2ludCA9IHRoaXMuZ2V0Q2xpY2tQb2ludChjb29yZGluYXRlKTtcblxuICAgICAgLy8g6L6T5YWl5qGG5by556qX55qE5Y+C5pWwXG4gICAgICB2YXIgaW5wdXRQb3B1cFNpemUgPSB0aGlzLmlzSW5wdXRTaG93ID8gdGhpcy5nZXRJbnB1dFBvcHVwU2l6ZSgpIDogbnVsbCxcbiAgICAgICAgaW5wdXRQb3B1cFBvcyA9IHRoaXMuaXNJbnB1dFNob3cgPyB0aGlzLmdldElucHV0UG9wdXBQb3MoKSA6IG51bGwsIC8vIOi+k+WFpeahhuW8ueeql+eahOS9jee9rlxuICAgICAgICBpbnB1dFBvcHVwRGlmZiA9IHRoaXMuaXNJbnB1dFNob3dcbiAgICAgICAgICA/IHsgeDogcG9zLnggLSBpbnB1dFBvcHVwUG9zLngsIHk6IHBvcy55IC0gaW5wdXRQb3B1cFBvcy55IH1cbiAgICAgICAgICA6IG51bGwsIC8vIOeCueWHu+eahOW8ueeql+S9jee9rlxuICAgICAgICBjbGlja0lucHV0SW5kZXg7IC8vIOeCueWHu+eahOi+k+WFpeahhiBpbmRleFxuXG4gICAgICAvLyDplK7nm5jnmoTlj4LmlbBcbiAgICAgIHZhciBrZXlib3JhZFNpemUgPSB7IHc6IDI0MCwgaDogMTgwIH0sXG4gICAgICAgIGtleWJvcmFkUG9zID0gdGhpcy5pc0tleWJvYXJkU2hvdyA/IHRoaXMuZ2V0S2V5Ym9yYWRQb3MoKSA6IG51bGwsIC8vIOmUruebmOeahOS9jee9rlxuICAgICAgICBrZXlib3JhZERpZmYgPSB0aGlzLmlzS2V5Ym9hcmRTaG93XG4gICAgICAgICAgPyB7IHg6IHBvcy54IC0ga2V5Ym9yYWRQb3MueCwgeTogcG9zLnkgLSBrZXlib3JhZFBvcy55IH1cbiAgICAgICAgICA6IG51bGwsIC8vIOeCueWHu+eahOWdkOagh+ebuOWvueS6jumUruebmOeahOS9jee9rlxuICAgICAgICBjbGlja0tleWJvcmFkSW5kZXg7IC8vIOeCueWHu+eahOmUruebmOaMiemSruW6j+WPt1xuXG4gICAgICB2YXIgYnRuUiA9IDMyOyAvLyDmjInpkq7nm7TlvoRcblxuICAgICAgdmFyIHBvaW50c0FyciwgaXNQb2ludEVtcHR5O1xuXG4gICAgICB2YXIgY2xpY2tUeXBlO1xuXG4gICAgICAvLyDliKTmlq3ngrnlh7vnmoTlhoXlrrnvvIznp7vpmaTlkozkv53lrZjmjInpkq7nmoTng63ljLrmr5Tlrp7pmYXnmoTmjInpkq7lpKcxMOWDj+e0oFxuICAgICAgaWYgKFxuICAgICAgICBpbnB1dFBvcHVwU2l6ZSAmJlxuICAgICAgICBpbnB1dFBvcHVwRGlmZi54ID4gNSAmJlxuICAgICAgICBpbnB1dFBvcHVwRGlmZi54IDwgaW5wdXRQb3B1cFNpemUudyAtIDUgJiZcbiAgICAgICAgaW5wdXRQb3B1cERpZmYueSA+IDAgJiZcbiAgICAgICAgaW5wdXRQb3B1cERpZmYueSA8IGlucHV0UG9wdXBTaXplLmhcbiAgICAgICkge1xuICAgICAgICBjbGlja1R5cGUgPSAnaW5wdXQnO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgaW5wdXRQb3B1cERpZmYgJiZcbiAgICAgICAgaW5wdXRQb3B1cERpZmYueCA+IC1idG5SIC0gMjAgJiZcbiAgICAgICAgaW5wdXRQb3B1cERpZmYueCA8IDAgJiZcbiAgICAgICAgaW5wdXRQb3B1cERpZmYueSA+IChpbnB1dFBvcHVwU2l6ZS5oIC0gYnRuUiAtIDEwKSAvIDIgJiZcbiAgICAgICAgaW5wdXRQb3B1cERpZmYueSA8IChpbnB1dFBvcHVwU2l6ZS5oICsgYnRuUiArIDEwKSAvIDJcbiAgICAgICkge1xuICAgICAgICBjbGlja1R5cGUgPSAncmVtb3ZlJztcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIGlucHV0UG9wdXBEaWZmICYmXG4gICAgICAgIGlucHV0UG9wdXBEaWZmLnggPiBpbnB1dFBvcHVwU2l6ZS53ICYmXG4gICAgICAgIGlucHV0UG9wdXBEaWZmLnggPCBpbnB1dFBvcHVwU2l6ZS53ICsgMjAgKyBidG5SICYmXG4gICAgICAgIGlucHV0UG9wdXBEaWZmLnkgPiAoaW5wdXRQb3B1cFNpemUuaCAtIGJ0blIgLSAxMCkgLyAyICYmXG4gICAgICAgIGlucHV0UG9wdXBEaWZmLnkgPCAoaW5wdXRQb3B1cFNpemUuaCArIGJ0blIgKyAxMCkgLyAyXG4gICAgICApIHtcbiAgICAgICAgY2xpY2tUeXBlID0gJ3NhdmUnO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAga2V5Ym9yYWREaWZmICYmXG4gICAgICAgIGtleWJvcmFkRGlmZi54ID4gMCAmJlxuICAgICAgICBrZXlib3JhZERpZmYueCA8IGtleWJvcmFkU2l6ZS53ICYmXG4gICAgICAgIGtleWJvcmFkRGlmZi55ID4gMCAmJlxuICAgICAgICBrZXlib3JhZERpZmYueSA8IGtleWJvcmFkU2l6ZS5oXG4gICAgICApIHtcbiAgICAgICAgY2xpY2tUeXBlID0gJ2tleWJvcmFkJztcbiAgICAgIH0gZWxzZSBpZiAoY2xpY2tQb2ludCkge1xuICAgICAgICBjbGlja1R5cGUgPSAncG9pbnQnO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgY29vcmRpbmF0ZS54ID49IDAgJiZcbiAgICAgICAgY29vcmRpbmF0ZS54IDw9IHRoaXMuaW1nLndpZHRoICYmXG4gICAgICAgIGNvb3JkaW5hdGUueSA+PSAwICYmXG4gICAgICAgIGNvb3JkaW5hdGUueSA8PSB0aGlzLmltZy5oZWlnaHRcbiAgICAgICkge1xuICAgICAgICBjbGlja1R5cGUgPSAnaW1nJztcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ2NsaWNrVHlwZSA9PT09PT0nLCBjbGlja1R5cGUpO1xuICAgICAgLypcbiAgICAgICAqIOeCueWHu+S6i+S7tuinhOWIme+8mlxuICAgICAgICog57yW6L6R5qih5byP77yaXG4gICAgICAgKiAxLiDplK7nm5jmiZPlvIDnmoTml7blgJnvvIzngrnlh7vigJzplK7nm5jigJ3vvIzigJzovpPlhaXmoYbigJ3lkozigJzmk43kvZzmjInpkq7igJ3vvIjnp7vpmaTlkozkv53lrZjvvIzkuIvlkIzvvInmiY3mnInlj43lupRcbiAgICAgICAqIDIuIOmUruebmOWFs+mXreeahOaXtuWAme+8mlxuICAgICAgICogICDngrnlh7vigJzovpPlhaXmoYbigJ3lj6/ku6XogZrnhKbor6XovpPlhaXmoYbvvIzlubbmiZPlvIDplK7nm5hcbiAgICAgICAqICAg54K55Ye74oCc5pON5L2c5oyJ6ZKu4oCd77yM5omn6KGM5pON5L2c77yI56e76Zmk5oiW5L+d5a2Y77yJ77yM5ZCO6K+l54K55aSx5Y6754Sm54K5XG4gICAgICAgKiAgIOeCueWHu+KAnOagh+iusOeCueKAneWImeivpeeCueiOt+WPlueEpueCue+8jOeCueWHu+KAnOepuueZveKAneWImeaWsOW7uueCueOAguWOn+acieeahOmrmOS6rueCueWkseWOu+eEpueCue+8jOWmguaenOaYr+epuueCue+8iOS4gOS4quWAvOmDveayoei+k+WFpe+8ie+8jOWImeenu+mZpOivpeeCuVxuICAgICAgICpcbiAgICAgICAqIOafpeeci+aooeW8j++8mlxuICAgICAgICogMS4g54K55Ye74oCc5qCH6K6w54K54oCd55qE5pe25YCZ77yM6auY5Lqu6K+l54K577yM5by55Ye65pWw5YC85by556qXXG4gICAgICAgKiAyLiDngrnlh7vigJznqbrnmb3igJ3vvIzlvZPliY3igJzpq5jkuq7ngrnigJ3np7vpmaTpq5jkuq7nirbmgIFcbiAgICAgICAqL1xuXG4gICAgICBpZiAodGhpcy5tb2RlID09PSAnZWRpdCcpIHtcbiAgICAgICAgLy8g57yW6L6R5qih5byPXG5cbiAgICAgICAgLy8g5Yik5pat54K55Ye755qE5piv5ZCm5piv5by556qXXG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdpbnB1dCcpIHtcbiAgICAgICAgICBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgICAgICAgIGNsaWNrSW5wdXRJbmRleCA9IE1hdGguZmxvb3IoKGlucHV0UG9wdXBEaWZmLnggLSA1KSAvIDgwKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAyKSB7XG4gICAgICAgICAgICAvLyDmnoHlt67nrpfms5VcbiAgICAgICAgICAgIGNsaWNrSW5wdXRJbmRleCA9XG4gICAgICAgICAgICAgIChNYXRoLmZsb29yKGlucHV0UG9wdXBEaWZmLnggLyA2OSkgKyBNYXRoLmZsb29yKGlucHV0UG9wdXBEaWZmLnkgLyAzMykgKiAzKSAlIDJcbiAgICAgICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICAgICAgOiAoTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi54IC8gNjkpICsgTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi55IC8gMzMpICogMykgLyAyO1xuICAgICAgICAgICAgY2xpY2tJbnB1dEluZGV4ID0gY2xpY2tJbnB1dEluZGV4IDwgMCB8fCBjbGlja0lucHV0SW5kZXggPiA0ID8gJycgOiBjbGlja0lucHV0SW5kZXg7XG4gICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgICAgICAgY2xpY2tJbnB1dEluZGV4ID0gTWF0aC5mbG9vcigoaW5wdXRQb3B1cERpZmYueCAtIDUpIC8gNjkpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDMpIHtcbiAgICAgICAgICAgIC8vIOaaguS4jeaUr+aMgeaegeW3rivorr7orqHlgLxcbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA1IHx8IHRoaXMucGFzc3JhdGVNb2RlID09PSA2KSB7XG4gICAgICAgICAgICAvLyDpq5jlrr3vvIzlvIDpl7Tov5vmt7FcbiAgICAgICAgICAgIGlmIChpbnB1dFBvcHVwRGlmZi54ID4gNTApIHtcbiAgICAgICAgICAgICAgY2xpY2tJbnB1dEluZGV4ID1cbiAgICAgICAgICAgICAgICBNYXRoLmZsb29yKChpbnB1dFBvcHVwRGlmZi54IC0gNTApIC8gNjkpICsgTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi55IC8gNDQpICogMztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA3KSB7XG4gICAgICAgICAgICAvLyDmlrnmraPmgKdcbiAgICAgICAgICAgIGNsaWNrSW5wdXRJbmRleCA9IE1hdGguZmxvb3IoKGlucHV0UG9wdXBEaWZmLnggLSA1KSAvIDY5KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICAgICAgICAvLyDop4LmhJ9cbiAgICAgICAgICAgIGNsaWNrSW5wdXRJbmRleCA9IE1hdGguZmxvb3IoKGlucHV0UG9wdXBEaWZmLnggLSA1KSAvIDc1KSA/IDAgOiAxO1xuICAgICAgICAgICAgdGhpcy5kYXRhWzBdLnBvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XS52YWwgPSBjbGlja0lucHV0SW5kZXg7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLmlucHV0Qmx1cih0aGlzLmxpZ2h0SW5wdXRJbmRleCk7XG4gICAgICAgICAgICAgIHRoaXMucG9pbnRCbHVyKCk7XG5cbiAgICAgICAgICAgICAgdGhpcy5kcmF3KCk7XG4gICAgICAgICAgICB9LCAyMDApO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEyIHx8IHRoaXMucGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgICAgICAgY2xpY2tJbnB1dEluZGV4ID0gTWF0aC5mbG9vcigoaW5wdXRQb3B1cERpZmYueCAtIDUpIC8gNjkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChoYXNWYWwoY2xpY2tJbnB1dEluZGV4KSkge1xuICAgICAgICAgICAgdGhpcy5pbnB1dEZvY3VzKGNsaWNrSW5wdXRJbmRleCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8g54K55Ye756e76Zmk5oyJ6ZKuXG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdyZW1vdmUnKSB7XG4gICAgICAgICAgdGhpcy5pbnB1dEJsdXIodGhpcy5saWdodElucHV0SW5kZXgsIHRydWUpO1xuICAgICAgICAgIHRoaXMuZGVsUG9pbnQodGhpcy5kcmF3UG9pbnRJbmRleCk7XG4gICAgICAgICAgdGhpcy5wb2ludEJsdXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOeCueWHu+S/neWtmOaMiemSrlxuICAgICAgICBpZiAoY2xpY2tUeXBlID09PSAnc2F2ZScpIHtcbiAgICAgICAgICB0aGlzLmlucHV0Qmx1cih0aGlzLmxpZ2h0SW5wdXRJbmRleCk7XG4gICAgICAgICAgdGhpcy5wb2ludEJsdXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOWIpOaWreeCueWHu+eahOaYr+WQpuaYr+mUruebmFxuICAgICAgICBpZiAoY2xpY2tUeXBlID09PSAna2V5Ym9yYWQnKSB7XG4gICAgICAgICAgY2xpY2tLZXlib3JhZEluZGV4ID1cbiAgICAgICAgICAgIE1hdGguZmxvb3Ioa2V5Ym9yYWREaWZmLnggLyA2MCkgKyBNYXRoLmZsb29yKGtleWJvcmFkRGlmZi55IC8gNDUpICogNDtcbiAgICAgICAgICB0aGlzLnNldFBvaW50VmFsKGNsaWNrS2V5Ym9yYWRJbmRleCk7XG4gICAgICAgICAgdGhpcy5zZXRLZXlib3JhZEFjdGlvbihjbGlja0tleWJvcmFkSW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g54K55Ye75qCH6K6w54K5XG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdwb2ludCcpIHtcbiAgICAgICAgICB0aGlzLmlucHV0Qmx1cih0aGlzLmxpZ2h0SW5wdXRJbmRleCk7XG5cbiAgICAgICAgICAvLyDlpoLmnpzlvZPliY3pq5jkuq7ngrnmsqHmnInovpPlhaXku7vkvZXlgLzvvIzliJnliKDpmaTor6XngrlcbiAgICAgICAgICBwb2ludHNBcnIgPSB0aGlzLmdldFRhcmdldFBvaW50cyh0aGlzLmRyYXdQb2ludEluZGV4KTtcbiAgICAgICAgICBpc1BvaW50RW1wdHkgPSAhXy5zb21lKHBvaW50c0FyciwgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGhhc1ZhbChwb2ludC52YWwpIHx8IGhhc1ZhbChwb2ludC5zZXRWYWwpO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYgKGlzUG9pbnRFbXB0eSAmJiBoYXNWYWwodGhpcy5kcmF3UG9pbnRJbmRleCkpIHtcbiAgICAgICAgICAgIHRoaXMuZGVsUG9pbnQodGhpcy5kcmF3UG9pbnRJbmRleCk7XG4gICAgICAgICAgICBjbGlja1BvaW50ID0gdGhpcy5nZXRDbGlja1BvaW50KGNvb3JkaW5hdGUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOWmguaenOeCueWHu+eahOaYr+S4quagh+iusOeCue+8jOiBmueEplxuICAgICAgICAgIHRoaXMucG9pbnRGb2N1cyhjbGlja1BvaW50LmluZGV4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOeCueWHu+eahOaYr+epuueZveWcsOaWue+8jOa3u+WKoOagh+iusOeCue+8jOW5tuiBmueEplxuICAgICAgICBpZiAoY2xpY2tUeXBlID09PSAnaW1nJykge1xuICAgICAgICAgIHRoaXMuaW5wdXRCbHVyKHRoaXMubGlnaHRJbnB1dEluZGV4KTtcblxuICAgICAgICAgIC8vIOWmguaenOW9k+WJjemrmOS6rueCueayoeaciei+k+WFpeS7u+S9leWAvO+8jOWImeWIoOmZpOivpeeCuVxuICAgICAgICAgIHBvaW50c0FyciA9IHRoaXMuZ2V0VGFyZ2V0UG9pbnRzKHRoaXMuZHJhd1BvaW50SW5kZXgpO1xuICAgICAgICAgIGlzUG9pbnRFbXB0eSA9ICFfLnNvbWUocG9pbnRzQXJyLCBwb2ludCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaGFzVmFsKHBvaW50LnZhbCkgfHwgaGFzVmFsKHBvaW50LnNldFZhbCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoaXNQb2ludEVtcHR5ICYmIGhhc1ZhbCh0aGlzLmRyYXdQb2ludEluZGV4KSkge1xuICAgICAgICAgICAgdGhpcy5kZWxQb2ludCh0aGlzLmRyYXdQb2ludEluZGV4KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmFkZFBvaW50KHtcbiAgICAgICAgICAgIHg6IGNvb3JkaW5hdGUueCxcbiAgICAgICAgICAgIHk6IGNvb3JkaW5hdGUueSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHRoaXMucG9pbnRGb2N1cyh0aGlzLmRyYXdpbmdQb2ludHMubGVuZ3RoIC0gMSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOafpeeci+aooeW8j1xuXG4gICAgICAgIC8vIOWmguaenOeCueWHu+eahOaYr+S4quagh+iusOeCue+8jOiBmueEplxuICAgICAgICBpZiAoY2xpY2tUeXBlID09PSAncG9pbnQnKSB7XG4gICAgICAgICAgY2xpY2tQb2ludCA9IHRoaXMuZ2V0Q2xpY2tQb2ludChjb29yZGluYXRlKTtcblxuICAgICAgICAgIGlmIChjbGlja1BvaW50LnBvaW50SWQpIHtcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ29uQ2xpY2tQb2ludCcsIGNsaWNrUG9pbnQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnBvaW50Rm9jdXMoY2xpY2tQb2ludC5pbmRleCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8g54K55Ye756m655m977yM5Y675o6J5b2T5YmN6auY5LquXG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdpbWcnKSB7XG4gICAgICAgICAgdGhpcy5wb2ludEJsdXIoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyDngrnlh7vnmoTlm57osIPlh73mlbDvvIzmsqHmnInlrp7pmYXkvZznlKjvvIzmmoLnlZlcbiAgICAgIGxldCByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6IGNsaWNrUG9pbnQgPyAncG9pbnQnIDogJycsXG4gICAgICAgIHBvczogcG9zLFxuICAgICAgICB4OiBjb29yZGluYXRlLngsXG4gICAgICAgIHk6IGNvb3JkaW5hdGUueSxcbiAgICAgICAgcG9pbnQ6IGNsaWNrUG9pbnQsXG4gICAgICAgIGJ0bjogJycsXG4gICAgICB9O1xuXG4gICAgICB0aGlzLiRlbWl0KCdvbkNsaWNrJywgcmVzdWx0KTtcbiAgICAgIHRoaXMuZHJhdygpO1xuICAgIH0sXG5cbiAgICAvLyDojrflj5bmi5bmi73nmoTmlrnlkJFcbiAgICBnZXREcmFnZ2luZ0RpcmVjdGlvbihzdGFydCwgZW5kKSB7XG4gICAgICB2YXIgeERyaWZ0ID0gc3RhcnQuY3ggLSBlbmQucGFnZVgsXG4gICAgICAgIHlEcmlmdCA9IHN0YXJ0LmN5IC0gZW5kLnBhZ2VZO1xuXG4gICAgICBpZiAoTWF0aC5hYnMoeERyaWZ0KSA+IE1hdGguYWJzKHlEcmlmdCkpIHtcbiAgICAgICAgLy8g5qiq5ZCR55qE5L2N56e75aSnXG4gICAgICAgIGlmICh4RHJpZnQgPiAwKSB7XG4gICAgICAgICAgcmV0dXJuICdyJztcbiAgICAgICAgfSBlbHNlIGlmICh4RHJpZnQgPCAwKSB7XG4gICAgICAgICAgcmV0dXJuICdsJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOe6teWQkeeahOS9jeenu+Wkp1xuICAgICAgICBpZiAoeURyaWZ0ID4gMCkge1xuICAgICAgICAgIHJldHVybiAnYic7XG4gICAgICAgIH0gZWxzZSBpZiAoeURyaWZ0IDwgMCkge1xuICAgICAgICAgIHJldHVybiAndCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOWIpOaWreaLluaLveeahOaXtuWAmeaYr+WQpuWIsOi+vui+ueeVjO+8jOaWueWQke+8miB0ICwgciAsIGIgLCBsXG4gICAgaXNCb3VuZGFyeShkaXIpIHtcbiAgICAgIHN3aXRjaCAoZGlyKSB7XG4gICAgICAgIGNhc2UgJ3QnOlxuICAgICAgICAgIGlmICh0aGlzLnkgPj0gdGhpcy55UmFuZ2VbMV0pIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncic6XG4gICAgICAgICAgaWYgKHRoaXMueCA8PSB0aGlzLnhSYW5nZVswXSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdiJzpcbiAgICAgICAgICBpZiAodGhpcy55IDw9IHRoaXMueVJhbmdlWzBdKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2wnOlxuICAgICAgICAgIGlmICh0aGlzLnggPj0gdGhpcy54UmFuZ2VbMV0pIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgLy8g5qCH54K56I635Y+W54Sm54K5XG4gICAgcG9pbnRGb2N1cyhpbmRleCwgb3BlbktleWJvYXJkKSB7XG4gICAgICB2YXIgbW92ZVgsIG1vdmVZO1xuXG4gICAgICB2YXIgaW5wdXRQb3B1cFBvcywgaW5wdXRQb3B1cFNpemU7XG5cbiAgICAgIHZhciBpbnB1dFBvcHVwV2lkdGhQbHVzID0gdGhpcy5oYXNPcGVyYUJ0biA/IDQyIDogMDtcblxuICAgICAgdmFyIG1hcmtQb2ludHM7XG5cbiAgICAgIC8vIOiuvue9rumrmOS6rueCuVxuICAgICAgdGhpcy5kcmF3UG9pbnRJbmRleCA9IGluZGV4O1xuICAgICAgdGhpcy5saWdodFJpcHBsZVRpbWVzID0gMDtcblxuICAgICAgbWFya1BvaW50cyA9IHRoaXMuZ2V0TWFya1BvaW50cyh0aGlzLmRyYXdQb2ludEluZGV4KTtcblxuICAgICAgLy8g56e76ZmkIHdhcm5pbmcg5pWI5p6cXG4gICAgICBfLmVhY2gobWFya1BvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICBkZWxldGUgcG9pbnQuaXNXYXJuaW5nO1xuICAgICAgfSk7XG4gICAgICAvLyDph43mlrDorqHnrpfmmK/lkKbmnInorabnpLrngrlcbiAgICAgIHRoaXMuaGFzV2FybmluZyA9IF8uc29tZSh0aGlzLmRyYXdpbmdQb2ludHMsIHsgaXNXYXJuaW5nOiB0cnVlIH0pO1xuXG4gICAgICBpbnB1dFBvcHVwUG9zID0gdGhpcy5nZXRJbnB1dFBvcHVwUG9zKCk7XG4gICAgICBpbnB1dFBvcHVwU2l6ZSA9IHRoaXMuZ2V0SW5wdXRQb3B1cFNpemUoKTtcblxuICAgICAgaWYgKGlucHV0UG9wdXBQb3MueCAtIGlucHV0UG9wdXBXaWR0aFBsdXMgPCAwKSB7XG4gICAgICAgIG1vdmVYID0gKGlucHV0UG9wdXBQb3MueCAtIGlucHV0UG9wdXBXaWR0aFBsdXMpICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgfSBlbHNlIGlmIChpbnB1dFBvcHVwUG9zLnggKyBpbnB1dFBvcHVwU2l6ZS53ICsgaW5wdXRQb3B1cFdpZHRoUGx1cyA+IHRoaXMud2lkdGgpIHtcbiAgICAgICAgbW92ZVggPVxuICAgICAgICAgIChpbnB1dFBvcHVwUG9zLnggKyBpbnB1dFBvcHVwU2l6ZS53ICsgaW5wdXRQb3B1cFdpZHRoUGx1cyAtIHRoaXMud2lkdGgpICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5wdXRQb3B1cFBvcy55IDwgMCkge1xuICAgICAgICBtb3ZlWSA9IGlucHV0UG9wdXBQb3MueSAqIHRoaXMucGl4ZWxSYXRpbztcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxKSB7XG4gICAgICAgIHRoaXMuaW5wdXRMZW5ndGggPSB0aGlzLmRhdGEubGVuZ3RoO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgICB0aGlzLmlucHV0TGVuZ3RoID0gNTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDMpIHtcbiAgICAgICAgdGhpcy5pbnB1dExlbmd0aCA9IDI7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA0KSB7XG4gICAgICAgIHRoaXMuaW5wdXRMZW5ndGggPSAwO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNSkge1xuICAgICAgICB0aGlzLmlucHV0TGVuZ3RoID0gNjtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDYpIHtcbiAgICAgICAgdGhpcy5pbnB1dExlbmd0aCA9IDY7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA3KSB7XG4gICAgICAgIHRoaXMuaW5wdXRMZW5ndGggPSAzO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTIpIHtcbiAgICAgICAgdGhpcy5pbnB1dExlbmd0aCA9IDM7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgICB0aGlzLmlucHV0TGVuZ3RoID0gMjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pc0lucHV0U2hvdyA9IHRydWU7XG4gICAgICB0aGlzLm1vdmVUbyh0aGlzLnggLSAobW92ZVggfHwgMCksIHRoaXMueSAtIChtb3ZlWSB8fCAwKSk7XG5cbiAgICAgIGlmICh0aGlzLm1vZGUgPT09ICdlZGl0JyAmJiBvcGVuS2V5Ym9hcmQgJiYgdGhpcy5wYXNzcmF0ZU1vZGUgIT09IDgpIHtcbiAgICAgICAgdGhpcy5pbnB1dEZvY3VzKHRoaXMubGlnaHRJbnB1dEluZGV4IHx8IDApO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldE1vdmVSYW5nZSgpO1xuICAgIH0sXG5cbiAgICAvLyDmoIfngrnlpLHljrvnhKbngrlcbiAgICBwb2ludEJsdXIoKSB7XG4gICAgICB0aGlzLmRyYXdQb2ludEluZGV4ID0gbnVsbDtcblxuICAgICAgdGhpcy5pc0lucHV0U2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy5pc0tleWJvYXJkU2hvdyA9IGZhbHNlO1xuXG4gICAgICAvLyDorqHnrpflsZ7mgKdcbiAgICAgIGlmICh0aGlzLm1vZGUgPT09ICdlZGl0Jykge1xuICAgICAgICB0aGlzLiRlbWl0KCdvbkNoYW5nZScsIHRoaXMuZGF0YSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOi+k+WFpeahhuiOt+WPlueEpueCuVxuICAgIGlucHV0Rm9jdXMoaW5kZXgpIHtcbiAgICAgIHZhciBtb3ZlWCwgbW92ZVk7XG5cbiAgICAgIHZhciBrZXlib3JhZFBvcyA9IHRoaXMuZ2V0S2V5Ym9yYWRQb3MoKSxcbiAgICAgICAga2V5Ym9yYWRTaXplID0geyB3OiAyNDAsIGg6IDE4MCB9O1xuXG4gICAgICBpZiAoa2V5Ym9yYWRQb3MueCA8IDApIHtcbiAgICAgICAgbW92ZVggPSBrZXlib3JhZFBvcy54ICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgfSBlbHNlIGlmIChrZXlib3JhZFBvcy54ICsga2V5Ym9yYWRTaXplLncgPiB0aGlzLndpZHRoKSB7XG4gICAgICAgIG1vdmVYID0gKGtleWJvcmFkUG9zLnggKyBrZXlib3JhZFNpemUudyAtIHRoaXMud2lkdGgpICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgfVxuXG4gICAgICBpZiAoa2V5Ym9yYWRQb3MueSArIGtleWJvcmFkU2l6ZS5oID4gdGhpcy5oZWlnaHQpIHtcbiAgICAgICAgbW92ZVkgPSAoa2V5Ym9yYWRQb3MueSArIGtleWJvcmFkU2l6ZS5oIC0gdGhpcy5oZWlnaHQpICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmxpZ2h0SW5wdXRJbmRleCA9IGluZGV4O1xuXG4gICAgICB0aGlzLmhhc1ByZXZJbnB1dCA9IGluZGV4ID4gMDtcbiAgICAgIHRoaXMuaGFzTmV4dElucHV0ID0gaW5kZXggPCB0aGlzLmlucHV0TGVuZ3RoIC0gMTtcblxuICAgICAgaWYgKHRoaXMubW9kZSA9PT0gJ2VkaXQnICYmIHRoaXMucGFzc3JhdGVNb2RlICE9PSA4KSB7XG4gICAgICAgIHRoaXMuaXNLZXlib2FyZFNob3cgPSB0cnVlO1xuICAgICAgICB0aGlzLm1vdmVUbyh0aGlzLnggLSAobW92ZVggfHwgMCksIHRoaXMueSAtIChtb3ZlWSB8fCAwKSk7XG4gICAgICB9XG5cbiAgICAgIC8vIOiHquWKqOihpeWFqOiuvuiuoeWAvFxuICAgICAgdGhpcy5hdXRvSW5wdXRTZXRWYWwoKTtcblxuICAgICAgdGhpcy5zZXRNb3ZlUmFuZ2UoKTtcbiAgICB9LFxuXG4gICAgLy8g6L6T5YWl5qGG5aSx5Y6754Sm54K5XG4gICAgaW5wdXRCbHVyKGluZGV4LCBub0NoYW5nZSkge1xuICAgICAgdmFyIHRhcmdldFBvaW50ID0gdGhpcy5nZXRUYXJnZXRQb2ludCh0aGlzLmRyYXdQb2ludEluZGV4LCBpbmRleCk7XG5cbiAgICAgIGxldCBpbnB1dE1pbiA9IGhhc1ZhbCh0aGlzLmlucHV0UmFuZ2VbMF0pID8gdGhpcy5pbnB1dFJhbmdlWzBdIDogLUluZmluaXR5O1xuICAgICAgbGV0IGlucHV0TWF4ID0gaGFzVmFsKHRoaXMuaW5wdXRSYW5nZVsxXSkgPyB0aGlzLmlucHV0UmFuZ2VbMV0gOiBJbmZpbml0eTtcblxuICAgICAgLy8g6aqM6K+B6L6T5YWl6IyD5Zu0XG4gICAgICBpZiAodGFyZ2V0UG9pbnQgJiYgdGFyZ2V0UG9pbnQucG9pbnRzKSB7XG4gICAgICAgIF8uZWFjaCh0YXJnZXRQb2ludC5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IGlzTmFOKHBvaW50LnNldFZhbClcbiAgICAgICAgICAgICAgPyAnJ1xuICAgICAgICAgICAgICA6IGhhc1ZhbChwb2ludC5zZXRWYWwpXG4gICAgICAgICAgICAgID8gTWF0aC5mbG9vcihwYXJzZUZsb2F0KHBvaW50LnNldFZhbCkgKiAxMDAwMDApIC8gMTAwMDAwXG4gICAgICAgICAgICAgIDogJyc7XG5cbiAgICAgICAgICAgIGlmIChwb2ludC5zZXRWYWwgPT09ICcnKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHBvaW50LnNldFZhbCA8IGlucHV0TWluKSB7XG4gICAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IGlucHV0TWluO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwb2ludC5zZXRWYWwgPiBpbnB1dE1heCkge1xuICAgICAgICAgICAgICBwb2ludC5zZXRWYWwgPSBpbnB1dE1heDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcG9pbnQudmFsID0gaXNOYU4ocG9pbnQudmFsKVxuICAgICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICAgIDogaGFzVmFsKHBvaW50LnZhbClcbiAgICAgICAgICAgICAgPyBNYXRoLmZsb29yKHBhcnNlRmxvYXQocG9pbnQudmFsKSAqIDEwMDAwMCkgLyAxMDAwMDBcbiAgICAgICAgICAgICAgOiAnJztcblxuICAgICAgICAgICAgaWYgKHBvaW50LnZhbCA9PT0gJycpIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocG9pbnQudmFsIDwgaW5wdXRNaW4pIHtcbiAgICAgICAgICAgICAgcG9pbnQudmFsID0gaW5wdXRNaW47XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBvaW50LnZhbCA+IGlucHV0TWF4KSB7XG4gICAgICAgICAgICAgIHBvaW50LnZhbCA9IGlucHV0TWF4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMubGlnaHRJbnB1dEluZGV4ID0gbnVsbDtcbiAgICAgIHRoaXMuaXNLZXlib2FyZFNob3cgPSBmYWxzZTtcblxuICAgICAgIW5vQ2hhbmdlICYmIHRoaXMuJGVtaXQoJ29uQ2hhbmdlJywgdGhpcy5kYXRhKTtcbiAgICB9LFxuXG4gICAgLy8g5qC55o2u54K55Ye755qE6ZSu55uY5oyJ6ZKu77yM5p2l5aSE55CG5qCH6K6w54K5XG4gICAgc2V0UG9pbnRWYWwoa2V5Ym9yYWRJbmRleCkge1xuICAgICAgdmFyIGN1ckluZGV4ID0gdGhpcy5saWdodElucHV0SW5kZXg7XG5cbiAgICAgIGlmICghaGFzVmFsKHRoaXMuZHJhd1BvaW50SW5kZXgpIHx8ICFoYXNWYWwodGhpcy5saWdodElucHV0SW5kZXgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHRhcmdldFBvaW50ID0gdGhpcy5nZXRUYXJnZXRQb2ludCh0aGlzLmRyYXdQb2ludEluZGV4LCB0aGlzLmxpZ2h0SW5wdXRJbmRleCk7XG5cbiAgICAgIHZhciBidG5UZXh0ID0ga2V5Ym9hcmRUZXh0W2tleWJvcmFkSW5kZXhdO1xuXG4gICAgICBpZiAodGFyZ2V0UG9pbnQgJiYgdGFyZ2V0UG9pbnQucG9pbnRzKSB7XG4gICAgICAgIF8uZWFjaCh0YXJnZXRQb2ludC5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICBpZiAoaXNOYU4oYnRuVGV4dCkpIHtcbiAgICAgICAgICAgIGlmIChidG5UZXh0ID09PSAn5Yig6ZmkJykge1xuICAgICAgICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICAgICAgICAvLyBwb2ludC5zZXRWYWwgPSAnJztcbiAgICAgICAgICAgICAgICBwb2ludC5zZXRWYWwgPSBwb2ludC5zZXRWYWxcbiAgICAgICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgICAuc3Vic3RyKDAsIHBvaW50LnNldFZhbC50b1N0cmluZygpLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHBvaW50LnZhbCA9ICcnO1xuICAgICAgICAgICAgICAgIHBvaW50LnZhbCA9IHBvaW50LnZhbC50b1N0cmluZygpLnN1YnN0cigwLCBwb2ludC52YWwudG9TdHJpbmcoKS5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChidG5UZXh0ID09PSAnLScpIHtcbiAgICAgICAgICAgICAgaWYgKHRhcmdldFBvaW50LmlzU2V0VmFsKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFoYXNWYWwocG9pbnQuc2V0VmFsKSkge1xuICAgICAgICAgICAgICAgICAgcG9pbnQuc2V0VmFsID0gJy0nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoIWhhc1ZhbChwb2ludC52YWwpKSB7XG4gICAgICAgICAgICAgICAgICBwb2ludC52YWwgPSAnLSc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJ0blRleHQgPT09ICcuJykge1xuICAgICAgICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICAgICAgICBpZiAoaGFzVmFsKHBvaW50LnNldFZhbCkgJiYgcGFyc2VGbG9hdChwb2ludC5zZXRWYWwpID09PSBwYXJzZUludChwb2ludC5zZXRWYWwpKSB7XG4gICAgICAgICAgICAgICAgICBwb2ludC5zZXRWYWwgPSBwb2ludC5zZXRWYWwgKyBidG5UZXh0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoaGFzVmFsKHBvaW50LnZhbCkgJiYgcGFyc2VGbG9hdChwb2ludC52YWwpID09PSBwYXJzZUludChwb2ludC52YWwpKSB7XG4gICAgICAgICAgICAgICAgICBwb2ludC52YWwgPSBwb2ludC52YWwgKyBidG5UZXh0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChidG5UZXh0ID09PSAn5LiK5LiA6aG5Jykge1xuICAgICAgICAgICAgICBpZiAodGhpcy5oYXNQcmV2SW5wdXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlucHV0Qmx1cih0aGlzLmxpZ2h0SW5wdXRJbmRleCk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dEZvY3VzKGN1ckluZGV4IC0gMSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYnRuVGV4dCA9PT0gJ+S4i+S4gOmhuScpIHtcbiAgICAgICAgICAgICAgaWYgKHRoaXMuaGFzTmV4dElucHV0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dEJsdXIodGhpcy5saWdodElucHV0SW5kZXgpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRGb2N1cyhjdXJJbmRleCArIDEpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJ0blRleHQgPT09ICflhbPpl60nKSB7XG4gICAgICAgICAgICAgIHRoaXMuaW5wdXRCbHVyKHRoaXMubGlnaHRJbnB1dEluZGV4KTtcblxuICAgICAgICAgICAgICB0aGlzLmlzS2V5Ym9hcmRTaG93ID0gZmFsc2U7XG4gICAgICAgICAgICAgIHRoaXMubGlnaHRJbnB1dEluZGV4ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHRhcmdldFBvaW50LmlzU2V0VmFsKSB7XG4gICAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IChoYXNWYWwocG9pbnQuc2V0VmFsKSA/IHBvaW50LnNldFZhbCA6ICcnKSArIGJ0blRleHQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwb2ludC52YWwgPSBwb2ludC52YWwgKyBidG5UZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8g5aaC5p6c6L6T5YWl55qE5LqL6K6+6K6h5YC877yM5YiZ6KaB6K6w5L2P6L6T5YWl55qE57uT5p6cXG4gICAgICAgIGlmICh0YXJnZXRQb2ludC5pc1NldFZhbCAmJiB0YXJnZXRQb2ludC5wb2ludHMgJiYgdGFyZ2V0UG9pbnQucG9pbnRzLmxlbmd0aCkge1xuICAgICAgICAgIHRoaXMuc2F2ZUlucHV0U2V0VmFsKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g6ZSu55uY5oyJ6ZKu5pi+56S654K55Ye754q25oCBXG4gICAgc2V0S2V5Ym9yYWRBY3Rpb24oa2V5Ym9yYWRJbmRleCkge1xuICAgICAgaWYgKHRoaXMua2V5Ym9yYWRBY3Rpb25EYXRhW2tleWJvcmFkSW5kZXhdKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLmtleWJvcmFkQWN0aW9uRGF0YVtrZXlib3JhZEluZGV4XSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMua2V5Ym9yYWRBY3Rpb25EYXRhW2tleWJvcmFkSW5kZXhdID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmtleWJvcmFkQWN0aW9uRGF0YVtrZXlib3JhZEluZGV4XTtcbiAgICAgICAgdGhpcy5kcmF3KCk7XG4gICAgICB9LCAzMDApO1xuXG4gICAgICB0aGlzLmRyYXcoKTtcbiAgICB9LFxuXG4gICAgLy8g5L+d5a2Y6L6T5YWl55qE6K6+6K6h5YC8XG4gICAgc2F2ZUlucHV0U2V0VmFsKCkge1xuICAgICAgdmFyIHBvaW50cyA9IHRoaXMuZ2V0VGFyZ2V0UG9pbnRzKHRoaXMuZHJhd1BvaW50SW5kZXgpLFxuICAgICAgICBjaGVja2l0ZW1faWQgPSB0aGlzLmRhdGFbMF0uY2hlY2tpdGVtLmlkO1xuXG4gICAgICBpZiAoXy5pbmNsdWRlcyhbMywgNF0sIHRoaXMucGFzc3JhdGVNb2RlKSkge1xuICAgICAgICAvLyDmoIflh4Yr6K6+6K6h5YC877yM5p6B5beuK+iuvuiuoeWAvFxuICAgICAgICBwcmV2U2V0VmFsW2NoZWNraXRlbV9pZF0gPSB7XG4gICAgICAgICAgdmFsOiBwb2ludHNbMF0uc2V0VmFsLFxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChfLmluY2x1ZGVzKFs1LCA2XSwgdGhpcy5wYXNzcmF0ZU1vZGUpKSB7XG4gICAgICAgIC8vIOmrmOWuve+8jOW8gOmXtOi/m+a3sVxuICAgICAgICBwcmV2U2V0VmFsW2NoZWNraXRlbV9pZF0gPSB7fTtcblxuICAgICAgICBfLmVhY2godGhpcy5tZWFzdXJlSXRlbSwgbGFiZWwgPT4ge1xuICAgICAgICAgIHZhciBmaXJzdFBvaW50ID0gXy5maW5kKHBvaW50cywgeyBsYWJlbDogbGFiZWwgfSksXG4gICAgICAgICAgICBpdGVtU2V0VmFsID0gZmlyc3RQb2ludC5zZXRWYWw7XG5cbiAgICAgICAgICBwcmV2U2V0VmFsW2NoZWNraXRlbV9pZF1bJ3ZhbC0nICsgbGFiZWxdID0gaXRlbVNldFZhbDtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOi+k+WFpeahhuiOt+WPlueEpueCue+8jOWIpOaWreaYr+WQpumcgOimgeiHquWKqOWhq+WGmeW9k+WJjea1i+WMuueahOiuvuiuoeWAvOS4uuKAnOS4iuS4gOasoei+k+WFpeeahOKAneiuvuiuoeWAvFxuICAgIGF1dG9JbnB1dFNldFZhbCgpIHtcbiAgICAgIHZhciBjaGVja2l0ZW1faWQgPSB0aGlzLmRhdGFbMF0uY2hlY2tpdGVtLmlkLFxuICAgICAgICBwb2ludHMgPSB0aGlzLmdldFRhcmdldFBvaW50cyh0aGlzLmRyYXdQb2ludEluZGV4KTtcblxuICAgICAgLy8g5LiK5LiA5qyh6L6T5YWl55qE6K6+6K6h5YC8XG4gICAgICB2YXIgcFNldFZhbCA9IHByZXZTZXRWYWxbY2hlY2tpdGVtX2lkXSxcbiAgICAgICAgbmVlZFNldFZhbCA9IF8uaW5jbHVkZXMoWzMsIDQsIDUsIDZdLCB0aGlzLnBhc3NyYXRlTW9kZSksXG4gICAgICAgIC8vIOafpeaJvuaYr+WQpuacieS4uuepuueahOiuvuiuoeWAvFxuICAgICAgICBoYXNFbXB0eVNldFZhbCA9IF8uc29tZShwb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gIWhhc1ZhbChwb2ludC5zZXRWYWwpO1xuICAgICAgICB9KTtcblxuICAgICAgaWYgKG5lZWRTZXRWYWwgJiYgaGFzRW1wdHlTZXRWYWwgJiYgcFNldFZhbCAmJiAhXy5pc0VtcHR5KHBTZXRWYWwpKSB7XG4gICAgICAgIGlmIChfLmluY2x1ZGVzKFszLCA0XSwgdGhpcy5wYXNzcmF0ZU1vZGUpKSB7XG4gICAgICAgICAgLy8g5pmu6YCa5qih5byP77yI5qCH5YeGK+iuvuiuoeWAvO+8jOaegeW3rivorr7orqHlgLzvvIlcbiAgICAgICAgICBpZiAoaGFzVmFsKHBTZXRWYWwudmFsKSkge1xuICAgICAgICAgICAgXy5lYWNoKHBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgICAgICBwb2ludC5zZXRWYWwgPSBwU2V0VmFsLnZhbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDpq5jlrr0g5ZKMIOW8gOmXtOi/m+a3sSDmqKHlvI/vvIzpnIDopoHliIbliKvlj5borr7orqHlgLxcbiAgICAgICAgICBfLmVhY2gocG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgICB2YXIgaXRlbVNldFZhbCA9IHBTZXRWYWxbJ3ZhbCcgKyAnLScgKyBwb2ludC5sYWJlbF07XG5cbiAgICAgICAgICAgIGlmIChoYXNWYWwoaXRlbVNldFZhbCkpIHtcbiAgICAgICAgICAgICAgcG9pbnQuc2V0VmFsID0gaXRlbVNldFZhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiDojrflj5blvZPliY3moIforrDngrnlr7nlupTnmoTmiYDmnInmmK/mtYvngrkgKi9cbiAgICBnZXRNYXJrUG9pbnRzKHBJbmRleCkge1xuICAgICAgdmFyIGxpZ2h0UG9pbnRzID0gW107IC8vIOW9k+WJjeaTjeS9nOeahOeCuVxuICAgICAgdmFyIHBvaW50QXJlYTtcblxuICAgICAgaWYgKCFoYXNWYWwocEluZGV4KSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcG9pbnRBcmVhID0gdGhpcy5kcmF3aW5nUG9pbnRzW3BJbmRleF0uYXJlYTtcblxuICAgICAgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxKSB7XG4gICAgICAgIF8uZWFjaCh0aGlzLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIGxpZ2h0UG9pbnRzLnB1c2goaXRlbS5wb2ludHNbcEluZGV4XSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgICAvLyDmnoHlt65cbiAgICAgICAgbGlnaHRQb2ludHMgPSBfLmZpbHRlcih0aGlzLmRhdGFbMF0ucG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50QXJlYTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAzKSB7XG4gICAgICAgIC8vIOagh+WHhivorr7orqHlgLxcbiAgICAgICAgbGlnaHRQb2ludHMgPSB0aGlzLmRhdGFbMF0ucG9pbnRzW3BJbmRleF07XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA0KSB7XG4gICAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDUgfHwgdGhpcy5wYXNzcmF0ZU1vZGUgPT09IDYpIHtcbiAgICAgICAgLy8g6auY5a6977yM5byA6Ze06L+b5rexXG4gICAgICAgIGxpZ2h0UG9pbnRzID0gXy5maWx0ZXIodGhpcy5kYXRhWzBdLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNykge1xuICAgICAgICBsaWdodFBvaW50cyA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDgpIHtcbiAgICAgICAgbGlnaHRQb2ludHMgPSB0aGlzLmRhdGFbMF0ucG9pbnRzW3BJbmRleF07XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxMiB8fCB0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTMpIHtcbiAgICAgICAgbGlnaHRQb2ludHMgPSBfLmZpbHRlcih0aGlzLmRhdGFbMF0ucG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50QXJlYTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChsaWdodFBvaW50cyAmJiAhXy5pc0FycmF5KGxpZ2h0UG9pbnRzKSkge1xuICAgICAgICBsaWdodFBvaW50cyA9IFtsaWdodFBvaW50c107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsaWdodFBvaW50cztcbiAgICB9LFxuXG4gICAgLypcbiAgICAgKiDojrflj5blvZPliY3mk43kvZznmoTlrp7mtYvngrlcbiAgICAgKiBwSW5kZXg6IOmrmOS6ruagh+iusOeCueeahCBpbmRleFxuICAgICAqIGlJbmRleDog6auY5Lqu6L6T5YWl5qGG55qEIGluZGV4XG4gICAgICovXG4gICAgZ2V0VGFyZ2V0UG9pbnQocEluZGV4LCBpSW5kZXgpIHtcbiAgICAgIHZhciBwb2ludHNBcnI7XG4gICAgICB2YXIgbGlnaHRQb2ludHM7IC8vIOW9k+WJjeaTjeS9nOeahOeCuVxuICAgICAgdmFyIHBvaW50QXJlYTtcbiAgICAgIHZhciBpc1NldFZhbElucHV0ID0gZmFsc2U7XG4gICAgICB2YXIgbGFiZWxBcnI7XG5cbiAgICAgIGlmICghaGFzVmFsKHBJbmRleCkgfHwgIWhhc1ZhbChpSW5kZXgpKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgICAgbGlnaHRQb2ludHMgPSB0aGlzLmRhdGFbaUluZGV4XS5wb2ludHNbcEluZGV4XTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDIpIHtcbiAgICAgICAgLy8g5p6B5beuXG4gICAgICAgIHBvaW50QXJlYSA9IHRoaXMuZHJhd2luZ1BvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgICB9KTtcbiAgICAgICAgbGlnaHRQb2ludHMgPSBwb2ludHNBcnJbaUluZGV4XTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDMpIHtcbiAgICAgICAgLy8g5qCH5YeGK+iuvuiuoeWAvFxuICAgICAgICBsaWdodFBvaW50cyA9IHRoaXMuZGF0YVswXS5wb2ludHNbcEluZGV4XTtcbiAgICAgICAgaWYgKGlJbmRleCA9PT0gMSkge1xuICAgICAgICAgIGlzU2V0VmFsSW5wdXQgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlzU2V0VmFsSW5wdXQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNCkge1xuICAgICAgICAvLyDmnoHlt64r6K6+6K6h5YC8XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA1IHx8IHRoaXMucGFzc3JhdGVNb2RlID09PSA2KSB7XG4gICAgICAgIC8vIGlJbmRleFxuICAgICAgICBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDUpIHtcbiAgICAgICAgICBsYWJlbEFyciA9IFsn6auYJywgJ+WuvSddO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA2KSB7XG4gICAgICAgICAgbGFiZWxBcnIgPSBbJ+W8gOmXtCcsICfov5vmt7EnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBvaW50QXJlYSA9IHRoaXMuZHJhd2luZ1BvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgICB9KTtcblxuICAgICAgICBsaWdodFBvaW50cyA9IF8uZmlsdGVyKHBvaW50c0FyciwgKHBvaW50LCBpbmRleCkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBwb2ludC5sYWJlbCA9PT0gKE1hdGguZmxvb3IoaUluZGV4IC8gMykgPT09IDAgPyBsYWJlbEFyclswXSA6IGxhYmVsQXJyWzFdKSAmJlxuICAgICAgICAgICAgKGlJbmRleCA9PT0gMiB8fCBpSW5kZXggPT09IDUgfHwgKGlJbmRleCAlIDMpICUgMiA9PT0gaW5kZXggJSAyKVxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChpSW5kZXggPT09IDIgfHwgaUluZGV4ID09PSA1KSB7XG4gICAgICAgICAgaXNTZXRWYWxJbnB1dCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgICAgcG9pbnRBcmVhID0gdGhpcy5kcmF3aW5nUG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgICAgcG9pbnRzQXJyID0gXy5maWx0ZXIodGhpcy5kYXRhWzBdLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxpZ2h0UG9pbnRzID0gcG9pbnRzQXJyW2lJbmRleF07XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICAgIGxpZ2h0UG9pbnRzID0gdGhpcy5kYXRhWzBdLnBvaW50c1twSW5kZXhdO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTIgfHwgdGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEzKSB7XG4gICAgICAgIHBvaW50QXJlYSA9IHRoaXMuZHJhd2luZ1BvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgICB9KTtcblxuICAgICAgICBsaWdodFBvaW50cyA9IHBvaW50c0FycltpSW5kZXhdO1xuICAgICAgfVxuXG4gICAgICBpZiAobGlnaHRQb2ludHMgJiYgIV8uaXNBcnJheShsaWdodFBvaW50cykpIHtcbiAgICAgICAgbGlnaHRQb2ludHMgPSBbbGlnaHRQb2ludHNdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb2ludHM6IGxpZ2h0UG9pbnRzLFxuICAgICAgICBpc1NldFZhbDogaXNTZXRWYWxJbnB1dCxcbiAgICAgIH07XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluW9k+WJjeaTjeS9nOeahOS4gOe7hOeCuVxuICAgIGdldFRhcmdldFBvaW50cyhwSW5kZXgpIHtcbiAgICAgIHZhciBwb2ludEFyZWE7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG5cbiAgICAgIHBJbmRleCA9IGhhc1ZhbChwSW5kZXgpID8gcEluZGV4IDogdGhpcy5kcmF3UG9pbnRJbmRleDtcblxuICAgICAgaWYgKCFoYXNWYWwocEluZGV4KSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgICAgXy5lYWNoKHRoaXMuZGF0YSwgaXRlbSA9PiB7XG4gICAgICAgICAgXy5lYWNoKGl0ZW0ucG9pbnRzLCAocG9pbnQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAocEluZGV4ID09PSBpbmRleCkge1xuICAgICAgICAgICAgICByZXN1bHQucHVzaChwb2ludCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgICAvLyDmnoHlt65cbiAgICAgICAgcG9pbnRBcmVhID0gdGhpcy5kcmF3aW5nUG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgICAgcmVzdWx0ID0gXy5maWx0ZXIodGhpcy5kYXRhWzBdLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICAgIHJlc3VsdCA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIChwb2ludCwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gcEluZGV4ID09PSBpbmRleDtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA0KSB7XG4gICAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDUgfHwgdGhpcy5wYXNzcmF0ZU1vZGUgPT09IDYpIHtcbiAgICAgICAgLy8g6auY5a6977yM5byA6Ze06L+b5rexXG4gICAgICAgIHBvaW50QXJlYSA9IHRoaXMuZHJhd2luZ1BvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICAgIHJlc3VsdCA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgICAgcG9pbnRBcmVhID0gdGhpcy5kcmF3aW5nUG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgICAgcmVzdWx0ID0gXy5maWx0ZXIodGhpcy5kYXRhWzBdLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gOCkge1xuICAgICAgICByZXN1bHQgPSBfLmZpbHRlcih0aGlzLmRhdGFbMF0ucG9pbnRzLCAocG9pbnQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHBJbmRleCA9PT0gaW5kZXg7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTIgfHwgdGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEzKSB7XG4gICAgICAgIHBvaW50QXJlYSA9IHRoaXMuZHJhd2luZ1BvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICAgIHJlc3VsdCA9IF8uZmlsdGVyKHRoaXMuZGF0YVswXS5wb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuXG4gICAgLy8g56e75Yqo6KeG5Zu+XG4gICAgbW92ZVRvKHgsIHkpIHtcbiAgICAgIGlmICh0aGlzLm1vdmVEZXN0LnggPT09IG51bGwgJiYgdGhpcy5tb3ZlRGVzdC55ID09PSBudWxsKSB7XG4gICAgICAgIHRoaXMubW92ZURlc3QgPSB7IHg6IHgsIHk6IHkgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8qXG4gICAgICAgICAqIHRoaXMubW92ZURlc3Qg5pyJ5YC86K+05piO5pyJ5LiA5LiqIG1vdmUg5Lu75Yqh5q2j5Zyo6L+b6KGM77yM5aaC5p6c5ZKM5paw55qE5paw55qE5Lu75Yqh5LiN5ZCM77yIeCx55LiN562J77yJ5YiZ6ZyA6KaB5ZCI5bm25Lu75Yqh77yM5ZCI5bm26KeE5YiZ77yaXG4gICAgICAgICAqIOWmguaenOawtOW5s+enu+WKqOaWueWQkeebuOWQjO+8iOW3puaIluWPs++8ie+8jOWImeWPluenu+WKqOi3neemu+Wkp+eahOeCuVxuICAgICAgICAgKiDmlrnlkJHkuI3lkIzvvIzliJnlj5bmlrDnmoTku7vliqFcbiAgICAgICAgICog5Z6C55u05pa55ZCR5ZCM55CGXG4gICAgICAgICAqL1xuXG4gICAgICAgIGlmICh0aGlzLm1vdmVEZXN0LnggIT09IHggfHwgdGhpcy5tb3ZlRGVzdC55ICE9PSB5KSB7XG4gICAgICAgICAgaWYgKHRoaXMubW92ZURlc3QueCA8IHgpIHtcbiAgICAgICAgICAgIHRoaXMubW92ZURlc3QueCA9IHggPD0gdGhpcy54ID8gdGhpcy5tb3ZlRGVzdC54IDogeDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3ZlRGVzdC54ID0geCA+PSB0aGlzLnggPyB0aGlzLm1vdmVEZXN0LnggOiB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0aGlzLm1vdmVEZXN0LnkgPCB5KSB7XG4gICAgICAgICAgICB0aGlzLm1vdmVEZXN0LnkgPSB5IDw9IHRoaXMueSA/IHRoaXMubW92ZURlc3QueSA6IHk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubW92ZURlc3QueSA9IHkgPj0gdGhpcy55ID8gdGhpcy5tb3ZlRGVzdC55IDogeTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB4ID0gdGhpcy5tb3ZlRGVzdC54O1xuICAgICAgICB5ID0gdGhpcy5tb3ZlRGVzdC55O1xuICAgICAgfVxuXG4gICAgICBpZiAoeCAhPT0gdGhpcy54IHx8IHkgIT09IHRoaXMueSkge1xuICAgICAgICB0aGlzLmlzTW92aW5nID0gdHJ1ZTtcblxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5tb3ZlVGltZXIpO1xuXG4gICAgICAgIHRoaXMubW92ZVRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgLy8g55uu5qCH5YC8XG4gICAgICAgICAgdmFyIGRpc2NvdW50ID0gMC41LFxuICAgICAgICAgICAgaGFzQ2hhbmdlID0gZmFsc2U7XG5cbiAgICAgICAgICBpZiAoTWF0aC5hYnMoeCAtIHRoaXMueCkgPCAxKSB7XG4gICAgICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnggKz0gKHggLSB0aGlzLngpICogZGlzY291bnQ7XG4gICAgICAgICAgICBoYXNDaGFuZ2UgPSB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChNYXRoLmFicyh5IC0gdGhpcy55KSA8IDEpIHtcbiAgICAgICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMueSArPSAoeSAtIHRoaXMueSkgKiBkaXNjb3VudDtcbiAgICAgICAgICAgIGhhc0NoYW5nZSA9IHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGhhc0NoYW5nZSkge1xuICAgICAgICAgICAgdGhpcy5tb3ZlVG8oeCwgeSk7XG4gICAgICAgICAgICB0aGlzLmRyYXcoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5pc01vdmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5tb3ZlRGVzdCA9IHsgeDogbnVsbCwgeTogbnVsbCB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMjApO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDojrflj5bngrnlh7vnmoTmoIfngrlcbiAgICBnZXRDbGlja1BvaW50KGNvb3JkaW5hdGUpIHtcbiAgICAgIHZhciByZXN1bHQsXG4gICAgICAgIG5lYXJlc3QgPSB0aGlzLnBvaW50UmFkaXVzICogdGhpcy5wb2ludFJhdGlvICsgMTtcblxuICAgICAgdGhpcy5kcmF3aW5nUG9pbnRzLmZvckVhY2godiA9PiB7XG4gICAgICAgIHZhciBkaXN0YW5jZSA9IE1hdGguc3FydChcbiAgICAgICAgICBNYXRoLnBvdyhNYXRoLmFicyhjb29yZGluYXRlLnggLSB2LngpLCAyKSArIE1hdGgucG93KE1hdGguYWJzKGNvb3JkaW5hdGUueSAtIHYueSksIDIpXG4gICAgICAgICk7XG4gICAgICAgIHZhciByZWFsRGlzdGFuY2UgPSAoZGlzdGFuY2UgKiB0aGlzLnNjYWxlKSAvIHRoaXMucGl4ZWxSYXRpbztcbiAgICAgICAgdmFyIGlzSW5SYW5nZSA9IHJlYWxEaXN0YW5jZSA8PSB0aGlzLnBvaW50UmFkaXVzICogdGhpcy5wb2ludFJhdGlvO1xuXG4gICAgICAgIGlmIChpc0luUmFuZ2UgJiYgcmVhbERpc3RhbmNlIDwgbmVhcmVzdCkge1xuICAgICAgICAgIHJlc3VsdCA9IHY7XG4gICAgICAgICAgbmVhcmVzdCA9IGRpc3RhbmNlO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuXG4gICAgLy8g6K6h566XIHRoaXMueFJhbmdlIOWSjCB0aGlzLnlSYW5nZVxuICAgIHNldE1vdmVSYW5nZSgpIHtcbiAgICAgIHZhciBtb3ZlUmFuZ2UgPSB0aGlzLmdldE1vdmVSYW5nZSh0aGlzLnNjYWxlKTtcblxuICAgICAgdGhpcy54UmFuZ2UgPSBtb3ZlUmFuZ2UueDtcbiAgICAgIHRoaXMueVJhbmdlID0gbW92ZVJhbmdlLnk7XG4gICAgfSxcblxuICAgIGdldE1vdmVSYW5nZShzY2FsZSkge1xuICAgICAgdmFyIHhNaW4sIHhNYXgsIHlNaW4sIHlNYXg7XG5cbiAgICAgIC8vIOa6ouWHuuWBj+enu+mHj1xuICAgICAgdmFyIG92ZXJmbG93VCwgb3ZlcmZsb3dSLCBvdmVyZmxvd0IsIG92ZXJmbG93TDtcblxuICAgICAgdmFyIGlucHV0UG9wdXBQb3MgPSB0aGlzLmdldElucHV0UG9wdXBQb3MoKSxcbiAgICAgICAgaW5wdXRQb3B1cFNpemUgPSB0aGlzLmdldElucHV0UG9wdXBTaXplKCksXG4gICAgICAgIGtleWJvcmFkUG9zID0gdGhpcy5nZXRLZXlib3JhZFBvcygpLFxuICAgICAgICBrZXlib3JhZFNpemUgPSB7IHc6IDI0MCwgaDogMTgwIH07XG5cbiAgICAgIHZhciBpbnB1dFBvcHVwV2lkdGhQbHVzID0gdGhpcy5oYXNPcGVyYUJ0biA/IDQyIDogMDtcblxuICAgICAgdmFyIGlucHV0T3ZlcmZsb3dBbW91bnQsIGtleWJvYXJkT3ZlcmZsb3dBbW91bnQ7XG5cbiAgICAgIHNjYWxlID0gc2NhbGUgfHwgdGhpcy5zY2FsZTtcblxuICAgICAgeE1pbiA9IHRoaXMud2lkdGggKiB0aGlzLnBpeGVsUmF0aW8gLSB0aGlzLmltZy53aWR0aCAqIHNjYWxlO1xuICAgICAgeU1pbiA9IHRoaXMuaGVpZ2h0ICogdGhpcy5waXhlbFJhdGlvIC0gdGhpcy5pbWcuaGVpZ2h0ICogc2NhbGU7XG5cbiAgICAgIGlmICh4TWluID4gMCkge1xuICAgICAgICB4TWluID0geE1pbiAvIDI7XG4gICAgICAgIHhNYXggPSB4TWluO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeE1heCA9IDA7XG4gICAgICB9XG5cbiAgICAgIGlmICh5TWluID4gMCkge1xuICAgICAgICB5TWluID0geU1pbiAvIDI7XG4gICAgICAgIHlNYXggPSB5TWluO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeU1heCA9IDA7XG4gICAgICB9XG5cbiAgICAgIC8vIOmhtumDqOa6ouWHuumHj1xuICAgICAgaWYgKHRoaXMuaXNJbnB1dFNob3cpIHtcbiAgICAgICAgb3ZlcmZsb3dUID0gdGhpcy55IC0gaW5wdXRQb3B1cFBvcy55ICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgICBvdmVyZmxvd1QgPSBvdmVyZmxvd1QgPiAwID8gKG92ZXJmbG93VCA+IHlNYXggPyBvdmVyZmxvd1QgLSB5TWF4IDogMCkgOiAwO1xuICAgICAgICB5TWF4ID0geU1heCArIG92ZXJmbG93VDtcbiAgICAgIH1cblxuICAgICAgLy8g5Y+z5L6n5rqi5Ye66YePXG4gICAgICBpZiAodGhpcy5pc0lucHV0U2hvdyB8fCB0aGlzLmlzS2V5Ym9hcmRTaG93KSB7XG4gICAgICAgIGlucHV0T3ZlcmZsb3dBbW91bnQgPSB0aGlzLmlzSW5wdXRTaG93XG4gICAgICAgICAgPyAoaW5wdXRQb3B1cFBvcy54ICsgaW5wdXRQb3B1cFNpemUudyArIGlucHV0UG9wdXBXaWR0aFBsdXMpICogdGhpcy5waXhlbFJhdGlvXG4gICAgICAgICAgOiAwO1xuICAgICAgICBrZXlib2FyZE92ZXJmbG93QW1vdW50ID0gdGhpcy5pc0tleWJvYXJkU2hvd1xuICAgICAgICAgID8gKGtleWJvcmFkUG9zLnggKyBrZXlib3JhZFNpemUudykgKiB0aGlzLnBpeGVsUmF0aW9cbiAgICAgICAgICA6IDA7XG5cbiAgICAgICAgb3ZlcmZsb3dSID1cbiAgICAgICAgICB0aGlzLnggK1xuICAgICAgICAgIHRoaXMuaW1nLndpZHRoICogdGhpcy5zY2FsZSAtXG4gICAgICAgICAgTWF0aC5tYXgoaW5wdXRPdmVyZmxvd0Ftb3VudCwga2V5Ym9hcmRPdmVyZmxvd0Ftb3VudCk7XG4gICAgICAgIG92ZXJmbG93UiA9IG92ZXJmbG93UiA8IDAgPyAob3ZlcmZsb3dSIDwgLXhNYXggPyBvdmVyZmxvd1IgKyB4TWF4IDogMCkgOiAwO1xuICAgICAgICB4TWluID0geE1pbiArIG92ZXJmbG93UjtcbiAgICAgIH1cblxuICAgICAgLy8g5bqV6YOo5rqi5Ye66YePXG4gICAgICBpZiAodGhpcy5pc0tleWJvYXJkU2hvdykge1xuICAgICAgICBvdmVyZmxvd0IgPVxuICAgICAgICAgIHRoaXMueSArXG4gICAgICAgICAgdGhpcy5pbWcuaGVpZ2h0ICogdGhpcy5zY2FsZSAtXG4gICAgICAgICAgKGtleWJvcmFkUG9zLnkgKyBrZXlib3JhZFNpemUuaCkgKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICAgIG92ZXJmbG93QiA9IG92ZXJmbG93QiA8IDAgPyAob3ZlcmZsb3dCIDwgLXlNYXggPyBvdmVyZmxvd0IgKyB5TWF4IDogMCkgOiAwO1xuICAgICAgICB5TWluID0geU1pbiArIG92ZXJmbG93QjtcbiAgICAgIH1cblxuICAgICAgLy8g5bem5L6n5rqi5Ye66YePXG4gICAgICBpZiAodGhpcy5pc0lucHV0U2hvdyB8fCB0aGlzLmlzS2V5Ym9hcmRTaG93KSB7XG4gICAgICAgIGlucHV0T3ZlcmZsb3dBbW91bnQgPSB0aGlzLmlzSW5wdXRTaG93XG4gICAgICAgICAgPyAoaW5wdXRQb3B1cFBvcy54IC0gaW5wdXRQb3B1cFdpZHRoUGx1cykgKiB0aGlzLnBpeGVsUmF0aW9cbiAgICAgICAgICA6IEluZmluaXR5O1xuICAgICAgICBrZXlib2FyZE92ZXJmbG93QW1vdW50ID0gdGhpcy5pc0tleWJvYXJkU2hvdyA/IGtleWJvcmFkUG9zLnggKiB0aGlzLnBpeGVsUmF0aW8gOiBJbmZpbml0eTtcblxuICAgICAgICBvdmVyZmxvd0wgPSB0aGlzLnggLSBNYXRoLm1pbihpbnB1dE92ZXJmbG93QW1vdW50LCBrZXlib2FyZE92ZXJmbG93QW1vdW50KTtcbiAgICAgICAgb3ZlcmZsb3dMID0gb3ZlcmZsb3dMID4gMCA/IChvdmVyZmxvd0wgPiB4TWF4ID8gb3ZlcmZsb3dMIC0geE1heCA6IDApIDogMDtcbiAgICAgICAgeE1heCA9IHhNYXggKyBvdmVyZmxvd0w7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IFt4TWluLCB4TWF4XSxcbiAgICAgICAgeTogW3lNaW4sIHlNYXhdLFxuICAgICAgfTtcbiAgICB9LFxuXG4gICAgLy8g6Ieq5Yqo5Zue5L2N44CC5Yik5pat5Zu+54mH55qE5L2N572u5ZKM57yp5pS+77yM5aaC5p6c6LaF5Ye66IyD5Zu077yIdGhpcy5zY2FsZU1pbiB+IHRoaXMuc2NhbGVNYXgsIHRoaXMueFJhbmdlLCB0aGlzLnlSYW5nZe+8ie+8jOWImeenu+WKqOWIsOWFgeiuuOeahOiMg+WbtOWGhVxuICAgIHN0cmFpZ2h0ZW4oZSwgdGFyZ2V0U2NhbGUpIHtcbiAgICAgIC8vIOe8qeaUvueahOaXtuWAme+8jOWIpOaWreS4pOS4quaJi+aMh+mDveemu+W8gOinpuaRuOWxj+aJjeaJp+ihjOS6i+S7tlxuICAgICAgaWYgKGUgJiYgZS50eXBlID09PSAndG91Y2hlbmQnICYmIGUudG91Y2hlcy5sZW5ndGggIT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuaXNNb3ZpbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyDnm67moIflgLxcbiAgICAgIHZhciBzY2FsZSA9XG4gICAgICAgICAgdGFyZ2V0U2NhbGUgfHxcbiAgICAgICAgICAodGhpcy5zY2FsZSA8IHRoaXMuc2NhbGVNaW5cbiAgICAgICAgICAgID8gdGhpcy5zY2FsZU1pblxuICAgICAgICAgICAgOiB0aGlzLnNjYWxlID4gdGhpcy5zY2FsZU1heFxuICAgICAgICAgICAgPyB0aGlzLnNjYWxlTWF4XG4gICAgICAgICAgICA6IHRoaXMuc2NhbGUpLFxuICAgICAgICBtb3ZlUmFuZ2UgPSB0aGlzLmdldE1vdmVSYW5nZShzY2FsZSksXG4gICAgICAgIHhSYW5nZSA9IG1vdmVSYW5nZS54LFxuICAgICAgICB5UmFuZ2UgPSBtb3ZlUmFuZ2UueTtcblxuICAgICAgaWYgKFxuICAgICAgICB0aGlzLnggPCB4UmFuZ2VbMF0gfHxcbiAgICAgICAgdGhpcy54ID4geFJhbmdlWzFdIHx8XG4gICAgICAgIHRoaXMueSA8IHlSYW5nZVswXSB8fFxuICAgICAgICB0aGlzLnkgPiB5UmFuZ2VbMV0gfHxcbiAgICAgICAgdGhpcy5zY2FsZSA8IHRoaXMuc2NhbGVNaW4gfHxcbiAgICAgICAgdGhpcy5zY2FsZSA+IHRoaXMuc2NhbGVNYXhcbiAgICAgICkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAvLyDkv53mjIHkuK3lv4PngrlcbiAgICAgICAgICAvLyDlrozlhajlm57kvY3lkI7nmoQgeCDlnZDmoIdcbiAgICAgICAgICB2YXIgeCA9IHRoaXMucGluY2hDZW50ZXIueFxuICAgICAgICAgICAgICA/IHRoaXMucGluY2hDZW50ZXIueCAtIChzY2FsZSAqICh0aGlzLnBpbmNoQ2VudGVyLnggLSB0aGlzLngpKSAvIHRoaXMuc2NhbGVcbiAgICAgICAgICAgICAgOiB0aGlzLngsXG4gICAgICAgICAgICAvLyDlrozlhajlm57kvY3lkI7nmoQgeSDlnZDmoIdcbiAgICAgICAgICAgIHkgPSB0aGlzLnBpbmNoQ2VudGVyLnlcbiAgICAgICAgICAgICAgPyB0aGlzLnBpbmNoQ2VudGVyLnkgLSAoc2NhbGUgKiAodGhpcy5waW5jaENlbnRlci55IC0gdGhpcy55KSkgLyB0aGlzLnNjYWxlXG4gICAgICAgICAgICAgIDogdGhpcy55LFxuICAgICAgICAgICAgZGlzY291bnQgPSAwLjUsXG4gICAgICAgICAgICBoYXNDaGFuZ2UgPSBmYWxzZTtcblxuICAgICAgICAgIHggPSB4IDwgeFJhbmdlWzBdID8geFJhbmdlWzBdIDogeCA+IHhSYW5nZVsxXSA/IHhSYW5nZVsxXSA6IHg7XG4gICAgICAgICAgeSA9IHkgPCB5UmFuZ2VbMF0gPyB5UmFuZ2VbMF0gOiB5ID4geVJhbmdlWzFdID8geVJhbmdlWzFdIDogeTtcblxuICAgICAgICAgIGlmIChNYXRoLmFicyh4IC0gdGhpcy54KSA8IDEpIHtcbiAgICAgICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMueCArPSAoeCAtIHRoaXMueCkgKiBkaXNjb3VudDtcbiAgICAgICAgICAgIGhhc0NoYW5nZSA9IHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKE1hdGguYWJzKHkgLSB0aGlzLnkpIDwgMSkge1xuICAgICAgICAgICAgdGhpcy55ID0geTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy55ICs9ICh5IC0gdGhpcy55KSAqIGRpc2NvdW50O1xuICAgICAgICAgICAgaGFzQ2hhbmdlID0gdHJ1ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoTWF0aC5hYnMoc2NhbGUgLSB0aGlzLnNjYWxlKSAqIHRoaXMuaW1nLndpZHRoICogdGhpcy5pbWcuaGVpZ2h0IDwgNSkge1xuICAgICAgICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNjYWxlICs9IChzY2FsZSAtIHRoaXMuc2NhbGUpICogZGlzY291bnQ7XG4gICAgICAgICAgICBoYXNDaGFuZ2UgPSB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChoYXNDaGFuZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyYWlnaHRlbignJywgdGFyZ2V0U2NhbGUpO1xuICAgICAgICAgICAgdGhpcy5kcmF3KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAyMCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluaLluaLveeahOi2heWHuumHj1xuICAgIGdldE1vdmVPdmVyZmxvdygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6XG4gICAgICAgICAgdGhpcy54IDwgdGhpcy54UmFuZ2VbMF1cbiAgICAgICAgICAgID8gdGhpcy54IC0gdGhpcy54UmFuZ2VbMF1cbiAgICAgICAgICAgIDogdGhpcy54ID4gdGhpcy54UmFuZ2VbMV1cbiAgICAgICAgICAgID8gdGhpcy54IC0gdGhpcy54UmFuZ2VbMV1cbiAgICAgICAgICAgIDogMCxcbiAgICAgICAgeTpcbiAgICAgICAgICB0aGlzLnkgPCB0aGlzLnlSYW5nZVswXVxuICAgICAgICAgICAgPyB0aGlzLnkgLSB0aGlzLnlSYW5nZVswXVxuICAgICAgICAgICAgOiB0aGlzLnkgPiB0aGlzLnlSYW5nZVsxXVxuICAgICAgICAgICAgPyB0aGlzLnkgLSB0aGlzLnlSYW5nZVsxXVxuICAgICAgICAgICAgOiAwLFxuICAgICAgfTtcbiAgICB9LFxuXG4gICAgLyog6I635Y+W57yp5pS+55qE6LaF5Ye66YePXG4gICAgICog57yp5pS+5q+U5L6L5b+F6ZyA5ZyoIHRoaXMuc2NhbGVNaW4gfiBzY2FsZU1heCDkuYvpl7TvvIxcbiAgICAgKiDlpoLmnpzmr5TkvovlsI/kuo4gdGhpcy5zY2FsZU1pbiDvvIzliJnor6Xlh73mlbDov5Tlm57otJ/mlbDvvIxcbiAgICAgKiDlpoLmnpzmr5TkvovlpKfkuo4gdGhpcy5zY2FsZU1heCDvvIzliJnor6Xlh73mlbDov5Tlm57mraPmlbDvvIxcbiAgICAgKiDlnKjljLrpl7TkuK3vvIzov5Tlm54gMFxuICAgICAqL1xuICAgIGdldFNjYWxlT3ZlcmZsb3coc2NhbGUpIHtcbiAgICAgIHNjYWxlID0gc2NhbGUgfHwgdGhpcy5zY2FsZTtcblxuICAgICAgcmV0dXJuIHNjYWxlIDwgdGhpcy5zY2FsZU1pblxuICAgICAgICA/IHNjYWxlIC0gdGhpcy5zY2FsZU1pblxuICAgICAgICA6IHNjYWxlID4gdGhpcy5zY2FsZU1heFxuICAgICAgICA/IHNjYWxlIC0gdGhpcy5zY2FsZU1heFxuICAgICAgICA6IDA7XG4gICAgfSxcblxuICAgIC8vIOiuoeeul+W5tuiuvue9rmNhbnZhc+eahOWuvemrmOWSjOWbvueJh+e8qeaUvueahOavlOS+i1xuICAgIC8vIOiuoeeul+WbvueJh+eahOe8qeaUvuavlOS+i+WSjOWFgeiuuOe8qeaUvueahOavlOS+i+WMuumXtFxuICAgIGNhbGMoKSB7XG4gICAgICBsZXQgc2NhbGU7XG4gICAgICBsZXQgc2NhbGVNYXg7XG5cbiAgICAgIGlmICh0aGlzLndpZHRoIC8gdGhpcy5pbWcud2lkdGggPCB0aGlzLmhlaWdodCAvIHRoaXMuaW1nLmhlaWdodCkge1xuICAgICAgICAvL1xuICAgICAgICBzY2FsZSA9IHRoaXMud2lkdGggLyB0aGlzLmltZy53aWR0aDtcbiAgICAgICAgdGhpcy54ID0gMDtcbiAgICAgICAgdGhpcy55ID0gKCh0aGlzLmhlaWdodCAtIHRoaXMuaW1nLmhlaWdodCAqIHNjYWxlKSAvIDIpICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2NhbGUgPSB0aGlzLmhlaWdodCAvIHRoaXMuaW1nLmhlaWdodDtcbiAgICAgICAgdGhpcy54ID0gKCh0aGlzLndpZHRoIC0gdGhpcy5pbWcud2lkdGggKiBzY2FsZSkgLyAyKSAqIHRoaXMucGl4ZWxSYXRpbztcbiAgICAgICAgdGhpcy55ID0gMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgc2NhbGVNYXggPSB0aGlzLnNjYWxlIDwgMC4yNSA/IDIgOiB0aGlzLnNjYWxlICogODtcblxuICAgICAgdGhpcy5zY2FsZU1pbiA9IHRoaXMuc2NhbGU7XG4gICAgICB0aGlzLnNjYWxlTWF4ID0gc2NhbGVNYXg7XG5cbiAgICAgIHRoaXMueFJhbmdlID0gW3RoaXMueCwgdGhpcy54XTtcbiAgICAgIHRoaXMueVJhbmdlID0gW3RoaXMueSwgdGhpcy55XTtcbiAgICB9LFxuXG4gICAgLy8g57uY5Yi2XG4gICAgZHJhdygpIHtcbiAgICAgIGlmKCF0aGlzLmN0eCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyDmuIXnqbrnlLvluINcbiAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KTtcblxuICAgICAgdGhpcy5kcmF3SW1hZ2UoKTtcbiAgICAgIHRoaXMuZHJhd1BvaW50cygpO1xuXG4gICAgICB0aGlzLmRyYXdJbnB1dFBvcHVwKCk7XG4gICAgICB0aGlzLmRyYXdLZXlib3JhZCgpO1xuXG4gICAgICAvLyDpq5jkuq7ngrnnmoTms6LnurnmlYjmnpxcbiAgICAgIGlmICh0aGlzLmRyYXdQb2ludEluZGV4ICE9PSBudWxsICYmIHRoaXMubGlnaHRSaXBwbGVUaW1lcyA8IHRoaXMubGlnaHRSaXBwbGVUaW1lc01heCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5saWdodFJpcHBsZVRpbWVyKTtcblxuICAgICAgICB0aGlzLmxpZ2h0UmlwcGxlVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLmxpZ2h0UmlwcGxlID0gdGhpcy5saWdodFJpcHBsZSArIDAuMDc7XG4gICAgICAgICAgaWYgKHRoaXMubGlnaHRSaXBwbGUgPj0gMSkge1xuICAgICAgICAgICAgdGhpcy5saWdodFJpcHBsZSA9IDA7XG4gICAgICAgICAgICB0aGlzLmxpZ2h0UmlwcGxlVGltZXMgPSB0aGlzLmxpZ2h0UmlwcGxlVGltZXMgKyAxO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0aGlzLmxpZ2h0UmlwcGxlVGltZXMgPj0gdGhpcy5saWdodFJpcHBsZVRpbWVzTWF4KSB7XG4gICAgICAgICAgICB0aGlzLmxpZ2h0UmlwcGxlID0gMDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5saWdodFJpcHBsZSA9IHBhcnNlRmxvYXQodGhpcy5saWdodFJpcHBsZS50b0ZpeGVkKDIpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmRyYXcoKTtcbiAgICAgICAgfSwgNDApO1xuICAgICAgfVxuXG4gICAgICAvLyDmqZnoibLorablkYrmlYjmnpwgd2FybmluZ1JpcHBsZVxuICAgICAgaWYgKHRoaXMuaGFzV2FybmluZykge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy53YXJuaW5nUmlwcGxlVGltZXIpO1xuXG4gICAgICAgIHRoaXMud2FybmluZ1JpcHBsZVRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy53YXJuaW5nUmlwcGxlID0gdGhpcy53YXJuaW5nUmlwcGxlICsgMC4wNztcbiAgICAgICAgICBpZiAodGhpcy53YXJuaW5nUmlwcGxlID49IDEpIHtcbiAgICAgICAgICAgIHRoaXMud2FybmluZ1JpcHBsZSA9IDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy53YXJuaW5nUmlwcGxlID0gcGFyc2VGbG9hdCh0aGlzLndhcm5pbmdSaXBwbGUudG9GaXhlZCgyKSk7XG5cbiAgICAgICAgICB0aGlzLmRyYXcoKTtcbiAgICAgICAgfSwgNDApO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDnu5jliLblm77niYdcbiAgICBkcmF3SW1hZ2UoKSB7XG4gICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UoXG4gICAgICAgIHRoaXMuaW1nLFxuICAgICAgICAwLFxuICAgICAgICAwLFxuICAgICAgICB0aGlzLmltZy53aWR0aCxcbiAgICAgICAgdGhpcy5pbWcuaGVpZ2h0LFxuICAgICAgICB0aGlzLngsXG4gICAgICAgIHRoaXMueSxcbiAgICAgICAgdGhpcy5pbWcud2lkdGggKiB0aGlzLnNjYWxlLFxuICAgICAgICB0aGlzLmltZy5oZWlnaHQgKiB0aGlzLnNjYWxlXG4gICAgICApO1xuICAgIH0sXG5cbiAgICBkcmF3UG9pbnRzKHBvcykge1xuICAgICAgdGhpcy5kcmF3aW5nUG9pbnRzLmZvckVhY2goKHYsIGkpID0+IHtcbiAgICAgICAgdGhpcy5kcmF3UG9pbnQoXG4gICAgICAgICAgKHYueCAqIHRoaXMuc2NhbGUpIC8gdGhpcy5waXhlbFJhdGlvICsgdGhpcy54IC8gdGhpcy5waXhlbFJhdGlvLFxuICAgICAgICAgICh2LnkgKiB0aGlzLnNjYWxlKSAvIHRoaXMucGl4ZWxSYXRpbyArIHRoaXMueSAvIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgICB0aGlzLnBvaW50UmFkaXVzLFxuICAgICAgICAgIGksXG4gICAgICAgICAgcG9zLFxuICAgICAgICAgIHRoaXMuZHJhd1BvaW50SW5kZXggPT09IGlcbiAgICAgICAgICAgID8gbGlnaHRDb2xvclxuICAgICAgICAgICAgOiB2LmNvbG9yIHx8ICh2LmlzUXVhbGlmaWVkID8gcXVhbGlmaWVkQ29sb3IgOiBleGNlZWRDb2xvciksXG4gICAgICAgICAgdlxuICAgICAgICApO1xuXG4gICAgICAgIHYuaW5kZXggPSBpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOe7mOWItuWNleS4queCuVxuICAgIGRyYXdQb2ludCh4LCB5LCByLCBpLCBwb3MsIGNvbG9yLCBwb2ludCkge1xuICAgICAgdGhpcy5jdHguc2F2ZSgpO1xuXG4gICAgICAvLyDpq5jkuq7pl6rng4HmlYjmnpxcbiAgICAgIGlmICh0aGlzLmRyYXdQb2ludEluZGV4ICE9PSBudWxsICYmIHRoaXMuZHJhd1BvaW50SW5kZXggPT09IGkpIHtcbiAgICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDY2LCAxMTcsIDIzMiwgJyArICgwLjYgKiAoMSAtIHRoaXMubGlnaHRSaXBwbGUpICsgMC4xKSArICcpJztcbiAgICAgICAgdGhpcy5jdHguYXJjKHgsIHksIHIgKiAoMSArIHRoaXMubGlnaHRSaXBwbGUpLCAwLCBNYXRoLlBJICogMiwgZmFsc2UpO1xuICAgICAgICB0aGlzLmN0eC5maWxsKCk7XG4gICAgICB9XG5cbiAgICAgIC8vIOapmeiJsuaPkOekuumXqueDgeaViOaenFxuICAgICAgaWYgKHBvaW50LmlzV2FybmluZyAmJiB0aGlzLmRyYXdQb2ludEluZGV4ICE9PSBpKSB7XG4gICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAncmdiYSgyNTIsIDEzOSwgMSwgJyArICgwLjYgKiAoMSAtIHRoaXMud2FybmluZ1JpcHBsZSkgKyAwLjEpICsgJyknO1xuICAgICAgICB0aGlzLmN0eC5hcmMoeCwgeSwgciAqICgxICsgdGhpcy53YXJuaW5nUmlwcGxlKSwgMCwgTWF0aC5QSSAqIDIsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5jdHguZmlsbCgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcblxuICAgICAgaWYgKHBvaW50LmlzV2FybmluZyAmJiB0aGlzLmRyYXdQb2ludEluZGV4ICE9PSBpKSB7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjZmY3NDM5JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbG9yICYmICh0aGlzLmN0eC5maWxsU3R5bGUgPSBjb2xvcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY3R4LmFyYyh4LCB5LCByLCAwLCBNYXRoLlBJICogMiwgZmFsc2UpO1xuICAgICAgLy8gdGhpcy5jdHguZmlsbCgpO1xuXG4gICAgICB0aGlzLmN0eC5nbG9iYWxBbHBoYSA9IDAuNjtcbiAgICAgIHRoaXMuY3R4LmZpbGwoKTtcblxuICAgICAgdGhpcy5jdHguZ2xvYmFsQWxwaGEgPSAxO1xuICAgICAgY29sb3IgJiYgKHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gY29sb3IpO1xuICAgICAgdGhpcy5jdHgubGluZVdpZHRoID0gMTtcbiAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xuICAgIH0sXG5cbiAgICAvLyDojrflj5bpq5jkuq7ngrlcbiAgICBnZXRMaWdodFBvaW50KCkge1xuICAgICAgdmFyIHJlc3VsdDtcblxuICAgICAgaWYgKHRoaXMuZHJhd1BvaW50SW5kZXggPT09IG51bGwpIHtcbiAgICAgICAgcmVzdWx0ID0gbnVsbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IHRoaXMuZHJhd2luZ1BvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdCB8fCBudWxsO1xuICAgIH0sXG5cbiAgICAvLyDnu5jliLbovpPlhaXmoYZcbiAgICBkcmF3SW5wdXRQb3B1cCgpIHtcbiAgICAgIHZhciBsaWdodFBvaW50ID0gdGhpcy5nZXRMaWdodFBvaW50KCk7XG5cbiAgICAgIC8vIOi+k+WFpeahhuW8ueeql+WwuuWvuFxuICAgICAgdmFyIHBTaXplID0gdGhpcy5nZXRJbnB1dFBvcHVwU2l6ZSgpO1xuICAgICAgdmFyIHB3ID0gcFNpemUudyxcbiAgICAgICAgcGggPSBwU2l6ZS5oLFxuICAgICAgICBwciA9IDU7XG5cbiAgICAgIC8vIOW8ueeql+i1t+Wni+S9jee9ru+8iOW3puS4iuinku+8iVxuICAgICAgdmFyIGlucHV0UG9wdXBQb3MgPSB0aGlzLmdldElucHV0UG9wdXBQb3MoKTtcbiAgICAgIHZhciB4ID0gaW5wdXRQb3B1cFBvcy54LFxuICAgICAgICB5ID0gaW5wdXRQb3B1cFBvcy55O1xuXG4gICAgICBpZiAoIWxpZ2h0UG9pbnQgfHwgIXRoaXMuaXNJbnB1dFNob3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyDnu5jliLbog4zmma9cbiAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDAsMCwwLDAuOCknO1xuICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG5cbiAgICAgIHRoaXMuY3R4LmFyYyh4ICsgcHIsIHkgKyBwciwgcHIsIE1hdGguUEksIE1hdGguUEkgKiAxLjUpO1xuICAgICAgdGhpcy5jdHgubGluZVRvKHB3ICsgeCAtIHByLCB5KTtcbiAgICAgIHRoaXMuY3R4LmFyYyh4ICsgcHcgLSBwciwgeSArIHByLCBwciwgTWF0aC5QSSAqIDEuNSwgMCk7XG4gICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHB3LCB5ICsgcGggLSBwcik7XG4gICAgICB0aGlzLmN0eC5hcmMoeCArIHB3IC0gcHIsIHkgKyBwaCAtIHByLCBwciwgMCwgTWF0aC5QSSAqIDAuNSk7XG4gICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHB3IC8gMiArIDUsIHkgKyBwaCk7XG4gICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHB3IC8gMiwgeSArIHBoICsgNSk7XG4gICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHB3IC8gMiAtIDUsIHkgKyBwaCk7XG4gICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHByLCB5ICsgcGgpO1xuICAgICAgdGhpcy5jdHguYXJjKHggKyBwciwgeSArIHBoIC0gcHIsIHByLCBNYXRoLlBJICogMC41LCBNYXRoLlBJKTtcbiAgICAgIHRoaXMuY3R4LmxpbmVUbyh4LCB5ICsgcHIpO1xuXG4gICAgICB0aGlzLmN0eC5jbG9zZVBhdGgoKTtcbiAgICAgIHRoaXMuY3R4LmZpbGwoKTtcblxuICAgICAgaWYgKHRoaXMubW9kZSA9PT0gJ2VkaXQnKSB7XG4gICAgICAgIC8vIOe7mOWItuKAnOWIoOmZpOKAneWSjOKAnOS/neWtmOKAneaMiemSrlxuICAgICAgICB0aGlzLmN0eC5saW5lQ2FwID0gJ3JvdW5kJztcbiAgICAgICAgdGhpcy5jdHgubGluZUpvaW4gPSAncm91bmQnO1xuXG4gICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICB0aGlzLmN0eC5hcmMoeCAtIDI2LCB5ICsgcGggLyAyLCAxNiwgMCwgTWF0aC5QSSAqIDIpO1xuICAgICAgICB0aGlzLmN0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgdGhpcy5jdHguZmlsbCgpO1xuICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSAnI2ZmM2QzZCc7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVXaWR0aCA9IDI7XG4gICAgICAgIHRoaXMuY3R4Lm1vdmVUbyh4IC0gMzQsIHkgKyBwaCAvIDIpO1xuICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCAtIDE4LCB5ICsgcGggLyAyKTtcbiAgICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG5cbiAgICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgIHRoaXMuY3R4LmFyYyh4ICsgcHcgKyAyNiwgeSArIHBoIC8gMiwgMTYsIDAsIE1hdGguUEkgKiAyKTtcbiAgICAgICAgdGhpcy5jdHguY2xvc2VQYXRoKCk7XG4gICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcbiAgICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gJyMwYmM2NjYnO1xuICAgICAgICB0aGlzLmN0eC5saW5lV2lkdGggPSAyO1xuICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCArIHB3ICsgMTgsIHkgKyBwaCAvIDIgLSAxKTtcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyBwdyArIDI0LCB5ICsgcGggLyAyICsgNSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgcHcgKyAzNSwgeSArIHBoIC8gMiAtIDYpO1xuICAgICAgICB0aGlzLmN0eC5zdHJva2UoKTtcblxuICAgICAgICB0aGlzLmN0eC5saW5lQ2FwID0gJ2J1dHQnO1xuICAgICAgICB0aGlzLmN0eC5saW5lSm9pbiA9ICdtaXRlcic7XG4gICAgICB9XG4gICAgICAvLyDnu5jliLbovpPlhaXmoYZcbiAgICAgIHRoaXMuZHJhd0lucHV0cyh4LCB5KTtcbiAgICB9LFxuXG4gICAgLy8g57uY5Yi26L6T5YWl5qGGXG4gICAgLy8geCx5IOaYr+W8ueeql+eahOW3puS4iuinkuWdkOagh++8jOW8ueeql+eahOi+uei3neaYryA1XG4gICAgZHJhd0lucHV0cyh4LCB5KSB7XG4gICAgICAvLyDovpPlhaXmoYblsLrlr7hcbiAgICAgIHZhciBpdyA9IDY5LFxuICAgICAgICBpaCA9IDMzO1xuXG4gICAgICB2YXIgYm9yZGVyQ29sb3IgPSAnI2I1YjViNScsXG4gICAgICAgIGJvcmRlckxpZ2h0Q29sb3IgPSB0aGlzLm1vZGUgPT09ICdlZGl0JyA/ICcjZmZmZmZmJyA6IGJvcmRlckNvbG9yO1xuXG4gICAgICB2YXIgcG9pbnREYXRhO1xuICAgICAgLy8g6L6T5YWl5qGG55qE5qCH6K6w54K5XG4gICAgICB2YXIgcG9pbnRzQXJyID0gW107XG4gICAgICB2YXIgY3VyUG9pbnQ7XG4gICAgICB2YXIgcG9pbnRMYWJsZUdyb3VwO1xuXG4gICAgICB2YXIgbGlnaHRJbnB1dFJvdywgbGlnaHRJbnB1dENvbDtcblxuICAgICAgeCA9IHggKyA1ICsgMC41O1xuICAgICAgeSA9IHkgKyA1ICsgMC41O1xuXG4gICAgICB0aGlzLmN0eC5saW5lV2lkdGggPSAxO1xuICAgICAgdGhpcy5jdHgudGV4dEFsaWduID0gJ2NlbnRlcic7XG4gICAgICB0aGlzLmN0eC5mb250ID0gJzE2cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG5cbiAgICAgIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMSkge1xuICAgICAgICAvLyDmoIflh4ZcbiAgICAgICAgXy5lYWNoKHRoaXMuZGF0YSwgKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgdGhpcy5kcmF3SW5wdXQoe1xuICAgICAgICAgICAgeDogeCArIChpdyArIDEwKSAqIGluZGV4LFxuICAgICAgICAgICAgeTogeSxcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiB0aGlzLmxpZ2h0SW5wdXRJbmRleCA9PT0gaW5kZXggPyBib3JkZXJMaWdodENvbG9yIDogYm9yZGVyQ29sb3IsXG4gICAgICAgICAgICBsYWJlbDogdGhpcy5kYXRhLmxlbmd0aCA+IDEgPyBpdGVtLmNoZWNraXRlbS5uYW1lIDogJ+Wunua1i+WAvCcsXG4gICAgICAgICAgICB2YWw6IGhhc1ZhbChpdGVtLnBvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XS52YWwpXG4gICAgICAgICAgICAgID8gaXRlbS5wb2ludHNbdGhpcy5kcmF3UG9pbnRJbmRleF0udmFsXG4gICAgICAgICAgICAgIDogdGhpcy5tb2RlID09PSAnZWRpdCdcbiAgICAgICAgICAgICAgPyAnJ1xuICAgICAgICAgICAgICA6ICfmnKrloasnLFxuICAgICAgICAgICAgdmFsQ29sb3I6IGhhc1ZhbChpdGVtLnBvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XS52YWwpXG4gICAgICAgICAgICAgID8gaXRlbS5wb2ludHNbdGhpcy5kcmF3UG9pbnRJbmRleF0uaXNFeGNlZWRcbiAgICAgICAgICAgICAgICA/ICcjZmY0NTQ1J1xuICAgICAgICAgICAgICAgIDogJyNmZmZmZmYnXG4gICAgICAgICAgICAgIDogYm9yZGVyQ29sb3IsXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICAvLyDnu5jliLblhbPogZTmo4Dmn6XpobnnmoTov57mjqXnur9cbiAgICAgICAgICBpZiAoaW5kZXgpIHtcbiAgICAgICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSBib3JkZXJDb2xvcjtcbiAgICAgICAgICAgIHRoaXMuY3R4Lm1vdmVUbyh4ICsgKGl3ICsgMTApICogaW5kZXggLSA5LjUsIHkgKyBpaCAvIDIpO1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyAoaXcgKyAxMCkgKiBpbmRleCAtIDAuNSwgeSArIGloIC8gMik7XG4gICAgICAgICAgICB0aGlzLmN0eC5zdHJva2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgICAvLyDmnoHlt67nrpfms5VcbiAgICAgICAgcG9pbnREYXRhID0gdGhpcy5kcmF3aW5nUG9pbnRzW3RoaXMuZHJhd1BvaW50SW5kZXhdO1xuICAgICAgICBwb2ludHNBcnIgPSBfLmZpbHRlcih0aGlzLmRhdGFbMF0ucG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50RGF0YS5hcmVhO1xuICAgICAgICB9KTtcblxuICAgICAgICBfLmVhY2gocG9pbnRzQXJyLCAocG9pbnQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgdmFyIHJvdyA9IE1hdGguZmxvb3IoKGluZGV4ICogMikgLyAzKSxcbiAgICAgICAgICAgIGNvbCA9IChpbmRleCAqIDIpICUgMztcbiAgICAgICAgICB0aGlzLmRyYXdJbnB1dCh7XG4gICAgICAgICAgICB4OiB4ICsgY29sICogaXcsXG4gICAgICAgICAgICB5OiB5ICsgcm93ICogaWgsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogdGhpcy5saWdodElucHV0SW5kZXggPT09IGluZGV4ID8gYm9yZGVyTGlnaHRDb2xvciA6IGJvcmRlckNvbG9yLFxuICAgICAgICAgICAgbGFiZWw6ICflrp7mtYvlgLwnLFxuICAgICAgICAgICAgdmFsOiBwb2ludC52YWwsXG4gICAgICAgICAgICB2YWxDb2xvcjogcG9pbnQuaXNFeGNlZWQgPyAnI2ZmNDU0NScgOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICduJyxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAzKSB7XG4gICAgICAgIC8vIOagh+WHhivorr7orqHlgLxcbiAgICAgICAgLy8g5a6e5rWL5YC8XG4gICAgICAgIHRoaXMuZHJhd0lucHV0KHtcbiAgICAgICAgICB4OiB4LFxuICAgICAgICAgIHk6IHksXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IHRoaXMubGlnaHRJbnB1dEluZGV4ID09PSAwID8gYm9yZGVyTGlnaHRDb2xvciA6IGJvcmRlckNvbG9yLFxuICAgICAgICAgIGxhYmVsOiAn5a6e5rWL5YC8JyxcbiAgICAgICAgICB2YWw6IHRoaXMuZGF0YVswXS5wb2ludHNbdGhpcy5kcmF3UG9pbnRJbmRleF0udmFsLFxuICAgICAgICAgIHZhbENvbG9yOiB0aGlzLmRhdGFbMF0ucG9pbnRzW3RoaXMuZHJhd1BvaW50SW5kZXhdLmlzRXhjZWVkID8gJyNmZjQ1NDUnIDogJyNmZmZmZmYnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogJ2wnLFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyDorr7orqHlgLxcbiAgICAgICAgdGhpcy5kcmF3SW5wdXQoe1xuICAgICAgICAgIHg6IHggKyBpdyxcbiAgICAgICAgICB5OiB5LFxuICAgICAgICAgIGJvcmRlckNvbG9yOiB0aGlzLmxpZ2h0SW5wdXRJbmRleCA9PT0gMSA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICBsYWJlbDogJ+iuvuiuoeWAvCcsXG4gICAgICAgICAgdmFsOiB0aGlzLmRhdGFbMF0ucG9pbnRzW3RoaXMuZHJhd1BvaW50SW5kZXhdLnNldFZhbCxcbiAgICAgICAgICB2YWxDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogJ3InLFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyDph43lj6DnmoTovrnmoYZcbiAgICAgICAgaWYgKHRoaXMubGlnaHRJbnB1dEluZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICAgICAgdGhpcy5jdHgubW92ZVRvKHggKyBpdywgeSAtIDAuNSk7XG4gICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyBpdywgeSArIGloICsgMC41KTtcbiAgICAgICAgICB0aGlzLmN0eC5zdHJva2UoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNCkge1xuICAgICAgICAvLyDmnoHlt64r6K6+6K6h5YC877yM5pqC5LiN5pSv5oyBXG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA1IHx8IHRoaXMucGFzc3JhdGVNb2RlID09PSA2KSB7XG4gICAgICAgIC8vIOmrmOWuve+8jOW8gOmXtOi/m+a3sVxuICAgICAgICB4ID0geCArIDQ1O1xuXG4gICAgICAgIHBvaW50RGF0YSA9IHRoaXMuZHJhd2luZ1BvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XTtcbiAgICAgICAgcG9pbnRzQXJyID0gXy5maWx0ZXIodGhpcy5kYXRhWzBdLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludERhdGEuYXJlYTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcG9pbnRMYWJsZUdyb3VwID0gXy5ncm91cEJ5KHBvaW50c0FyciwgJ2xhYmVsJyk7XG5cbiAgICAgICAgXy5lYWNoKHBvaW50TGFibGVHcm91cCwgKHBvaW50cywgbGFiZWwpID0+IHtcbiAgICAgICAgICB2YXIgbGFiZWxUZXh0ID0gbGFiZWw7XG4gICAgICAgICAgdmFyIGxhYmVsSW5kZXggPSBsYWJlbCA9PT0gJ+mrmCcgfHwgbGFiZWwgPT09ICflvIDpl7QnID8gMCA6IDE7XG5cbiAgICAgICAgICBpZiAobGFiZWwgPT09ICfpq5gnKSB7XG4gICAgICAgICAgICBsYWJlbFRleHQgPSAn6auY5bqmJztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAobGFiZWwgPT09ICflrr0nKSB7XG4gICAgICAgICAgICBsYWJlbFRleHQgPSAn5a695bqmJztcbiAgICAgICAgICB9XG4gICAgICAgICAgLy9cbiAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICAgICAgdGhpcy5jdHguZm9udCA9ICcxNnB4IC1hcHBsZS1zeXN0ZW0sIFwiSGVsdmV0aWNhIE5ldWVcIiwgUm9ib3RvLCBcIlNlZ29lIFVJXCIsIHNhbnMtc2VyaWYnO1xuICAgICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KGxhYmVsVGV4dCwgeCAtIDI1LCB5ICsgNDQgKiBsYWJlbEluZGV4ICsgaWggLyAyICsgNik7XG5cbiAgICAgICAgICAvLyDnu5jliLbovpPlhaXmoYZcbiAgICAgICAgICBfLmVhY2gocG9pbnRzLCAocG9pbnQsIHBJbmRleCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5kcmF3SW5wdXQoe1xuICAgICAgICAgICAgICB4OiB4ICsgcEluZGV4ICogaXcsXG4gICAgICAgICAgICAgIHk6IHkgKyA0NCAqIGxhYmVsSW5kZXgsXG4gICAgICAgICAgICAgIGJvcmRlckNvbG9yOlxuICAgICAgICAgICAgICAgIHRoaXMubGlnaHRJbnB1dEluZGV4ID09PSBsYWJlbEluZGV4ICogMyArIHBJbmRleCA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICAgICAgbGFiZWw6ICflrp7mtYvlgLwnLFxuICAgICAgICAgICAgICB2YWw6IHBvaW50LnZhbCxcbiAgICAgICAgICAgICAgdmFsQ29sb3I6IHBvaW50LmlzRXhjZWVkID8gJyNmZjQ1NDUnIDogJyNmZmZmZmYnLFxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IHBJbmRleCA9PT0gMCA/ICdsJyA6ICduJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdGhpcy5kcmF3SW5wdXQoe1xuICAgICAgICAgICAgeDogeCArIDIgKiBpdyxcbiAgICAgICAgICAgIHk6IHkgKyA0NCAqIGxhYmVsSW5kZXgsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjpcbiAgICAgICAgICAgICAgdGhpcy5saWdodElucHV0SW5kZXggPT09IGxhYmVsSW5kZXggKiAzICsgMiA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICAgIGxhYmVsOiAn6K6+6K6h5YC8JyxcbiAgICAgICAgICAgIHZhbDogcG9pbnRzWzBdLnNldFZhbCxcbiAgICAgICAgICAgIHZhbENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICdyJyxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHRoaXMubGlnaHRJbnB1dEluZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgbGlnaHRJbnB1dFJvdyA9IE1hdGguZmxvb3IodGhpcy5saWdodElucHV0SW5kZXggLyAzKTtcbiAgICAgICAgICBsaWdodElucHV0Q29sID0gdGhpcy5saWdodElucHV0SW5kZXggJSAzO1xuXG4gICAgICAgICAgLy8g6YeN5Y+g55qE6L655qGGXG4gICAgICAgICAgaWYgKGxpZ2h0SW5wdXRDb2wgIT09IDIpIHtcbiAgICAgICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCArIChsaWdodElucHV0Q29sICsgMSkgKiBpdywgeSArIDQ0ICogbGlnaHRJbnB1dFJvdyAtIDAuNSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArIChsaWdodElucHV0Q29sICsgMSkgKiBpdywgeSArIDQ0ICogbGlnaHRJbnB1dFJvdyArIGloICsgMC41KTtcbiAgICAgICAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNyB8fCB0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTIgfHwgdGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEzKSB7XG4gICAgICAgIHBvaW50RGF0YSA9IHRoaXMuZHJhd2luZ1BvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XTtcbiAgICAgICAgcG9pbnRzQXJyID0gXy5maWx0ZXIodGhpcy5kYXRhWzBdLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludERhdGEuYXJlYTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy5lYWNoKHBvaW50c0FyciwgKHBvaW50LCBpbmRleCkgPT4ge1xuICAgICAgICAgIHRoaXMuZHJhd0lucHV0KHtcbiAgICAgICAgICAgIHg6IHggKyBpbmRleCAqIGl3LFxuICAgICAgICAgICAgeTogeSxcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiB0aGlzLmxpZ2h0SW5wdXRJbmRleCA9PT0gaW5kZXggPyBib3JkZXJMaWdodENvbG9yIDogYm9yZGVyQ29sb3IsXG4gICAgICAgICAgICBsYWJlbDogJ+Wunua1i+WAvCcsXG4gICAgICAgICAgICB2YWw6IHBvaW50LnZhbCxcbiAgICAgICAgICAgIHZhbENvbG9yOiBwb2ludC5pc0V4Y2VlZCA/ICcjZmY0NTQ1JyA6ICcjZmZmZmZmJyxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogaW5kZXggPT09IDAgPyAnbCcgOiBpbmRleCA9PT0gMiA/ICdyJyA6ICduJyxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHRoaXMubGlnaHRJbnB1dEluZGV4ID09PSAwIHx8IHRoaXMubGlnaHRJbnB1dEluZGV4ID09PSAxKSB7XG4gICAgICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICAgICAgdGhpcy5jdHgubW92ZVRvKHggKyAodGhpcy5saWdodElucHV0SW5kZXggKyAxKSAqIGl3LCB5IC0gMC41KTtcbiAgICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArICh0aGlzLmxpZ2h0SW5wdXRJbmRleCArIDEpICogaXcsIHkgKyBpaCArIDAuNSk7XG4gICAgICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDgpIHtcbiAgICAgICAgLy8g6KeC5oSfXG4gICAgICAgIGN1clBvaW50ID0gdGhpcy5kYXRhWzBdLnBvaW50c1t0aGlzLmRyYXdQb2ludEluZGV4XTtcblxuICAgICAgICBpZiAodGhpcy5tb2RlID09PSAnZWRpdCcpIHtcbiAgICAgICAgICAvLyDnvJbovpHmqKHlvI/vvIzpnIDopoHnu5jliLbkuKTkuKrmjInpkq5cbiAgICAgICAgICAvLyDlkIjmoLxcbiAgICAgICAgICB0aGlzLmRyYXdJbnB1dCh7XG4gICAgICAgICAgICB4OiB4LFxuICAgICAgICAgICAgeTogeSxcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBjdXJQb2ludC52YWwgPT09IDEgPyAnIzQyNzVlOCcgOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICBiZ0NvbG9yOiBjdXJQb2ludC52YWwgPT09IDEgPyAnIzQyNzVlOCcgOiAnJyxcbiAgICAgICAgICAgIHZhbDogJ+WQiOagvCcsXG4gICAgICAgICAgICB2YWxDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgLy8g5LiN5ZCI5qC8XG4gICAgICAgICAgdGhpcy5kcmF3SW5wdXQoe1xuICAgICAgICAgICAgeDogeCArIGl3ICsgMTAsXG4gICAgICAgICAgICB5OiB5LFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IGN1clBvaW50LnZhbCA9PT0gMCA/ICcjNDI3NWU4JyA6ICcjZmZmZmZmJyxcbiAgICAgICAgICAgIGJnQ29sb3I6IGN1clBvaW50LnZhbCA9PT0gMCA/ICcjNDI3NWU4JyA6ICcnLFxuICAgICAgICAgICAgdmFsOiAn5LiN5ZCI5qC8JyxcbiAgICAgICAgICAgIHZhbENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8g5p+l55yL5qih5byP77yM5Y+q55So57uY5Yi257uT5p6cXG4gICAgICAgICAgdGhpcy5kcmF3SW5wdXQoe1xuICAgICAgICAgICAgeDogeCxcbiAgICAgICAgICAgIHk6IHksXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgICAgYmdDb2xvcjogJycsXG4gICAgICAgICAgICB2YWw6IGN1clBvaW50LnZhbCA9PT0gMSA/ICflkIjmoLwnIDogJ+S4jeWQiOagvCcsXG4gICAgICAgICAgICB2YWxDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qXG4gICAgICog57uY5Yi25LiA5Liq6L6T5YWl5qGGXG4gICAgICogeCwgeTog6LW35aeL5Z2Q5qCH77yM5bem5LiK6KeSXG4gICAgICogdywgaDog6L6T5YWl5qGG55qE5a696auYXG4gICAgICogYm9yZGVyQ29sb3I6IOi+ueahhuminOiJslxuICAgICAqIGJnQ29sb3I6IOiDjOaZr+minOiJslxuICAgICAqIGxhYmVsOiDovpPlhaXmoYbnmoTmj5DnpLrmloflrZdcbiAgICAgKiBsYWJlbENvbG9yOiDmj5DnpLrmloflrZfpopzoibJcbiAgICAgKiB2YWw6IOWunua1i+WAvO+8jOi+k+WFpeahhuacgOWkmuaYvuekujjkvY3vvIzlsI/mlbDlj6/ku6XmmL7npLo45L2N77yM5pW05pWwN+S9jVxuICAgICAqIHZhbENvbG9yOiDlrp7mtYvlgLzpopzoibJcbiAgICAgKiByOiDovpPlhaXmoYblnIbop5LljYrlvoRcbiAgICAgKiBicjogYm9yZGVyLXJhZGl1cyDlnIbop5LvvIzpu5jorqTlhajpg6jlnIbop5IgYSDvvIxuOiDkuI3nlKjlnIbop5LvvIxsOuW3pui+ueWchuinku+8jHI65Y+z6L655ZyG6KeSXG4gICAgICovXG4gICAgZHJhd0lucHV0KHNldHRpbmcpIHtcbiAgICAgIHZhciB4ID0gc2V0dGluZy54LFxuICAgICAgICB5ID0gc2V0dGluZy55LFxuICAgICAgICB3ID0gc2V0dGluZy53IHx8IDY5LFxuICAgICAgICBoID0gc2V0dGluZy5oIHx8IDMzLFxuICAgICAgICBib3JkZXJDb2xvciA9IHNldHRpbmcuYm9yZGVyQ29sb3IsXG4gICAgICAgIGJnQ29sb3IgPSBzZXR0aW5nLmJnQ29sb3IsXG4gICAgICAgIGxhYmVsID0gc2V0dGluZy5sYWJlbCA/IHNldHRpbmcubGFiZWwuc3Vic3RyKDAsIDQpIDogJycsXG4gICAgICAgIGxhYmVsQ29sb3IgPSBzZXR0aW5nLmxhYmVsQ29sb3IsXG4gICAgICAgIHZhbCA9IGhhc1ZhbChzZXR0aW5nLnZhbClcbiAgICAgICAgICA/IHNldHRpbmcudmFsLnRvU3RyaW5nKCkuc3Vic3RyKC0oc2V0dGluZy52YWwudG9TdHJpbmcoKS5pbmRleE9mKCcuJykgPCAwID8gNyA6IDgpKVxuICAgICAgICAgIDogJycsXG4gICAgICAgIHZhbENvbG9yID0gc2V0dGluZy52YWxDb2xvcixcbiAgICAgICAgYnIgPSBzZXR0aW5nLmJvcmRlclJhZGl1cyB8fCAnYScsXG4gICAgICAgIHIgPSAyO1xuXG4gICAgICB0aGlzLmN0eC5zdHJva2VTdHlsZSA9IGJvcmRlckNvbG9yO1xuICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XG4gICAgICBpZiAoYnIgPT09ICdhJyB8fCBiciA9PT0gJ2wnKSB7XG4gICAgICAgIHRoaXMuY3R4LmFyYyh4ICsgciwgeSArIHIsIHIsIE1hdGguUEksIE1hdGguUEkgKiAxLjUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jdHgubW92ZVRvKHgsIHkpO1xuICAgICAgfVxuXG4gICAgICAvLyBsYWJlbCDlsI/mloflrZfmj5DnpLrnmoTml7blgJnopoHlgZrovrnmoYblpITnkIZcbiAgICAgIGlmIChoYXNWYWwobGFiZWwpICYmIGhhc1ZhbCh2YWwpKSB7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgKHcgLSBsYWJlbC5sZW5ndGggKiA4KSAvIDIgLSAyLCB5KTtcbiAgICAgICAgdGhpcy5jdHgubW92ZVRvKHggKyAodyArIGxhYmVsLmxlbmd0aCAqIDgpIC8gMiArIDIsIHkpO1xuICAgICAgfVxuXG4gICAgICBpZiAoYnIgPT09ICdhJyB8fCBiciA9PT0gJ3InKSB7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgdyAtIHIsIHkpO1xuICAgICAgICB0aGlzLmN0eC5hcmMoeCArIHcgLSByLCB5ICsgciwgciwgTWF0aC5QSSAqIDEuNSwgMCk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgdywgeSArIGggLSByKTtcbiAgICAgICAgdGhpcy5jdHguYXJjKHggKyB3IC0gciwgeSArIGggLSByLCByLCAwLCBNYXRoLlBJICogMC41KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgdywgeSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgdywgeSArIGgpO1xuICAgICAgfVxuICAgICAgaWYgKGJyID09PSAnYScgfHwgYnIgPT09ICdsJykge1xuICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHIsIHkgKyBoKTtcbiAgICAgICAgdGhpcy5jdHguYXJjKHggKyByLCB5ICsgaCAtIHIsIHIsIE1hdGguUEkgKiAwLjUsIE1hdGguUEkpO1xuICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCwgeSArIHIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHgsIHkgKyBoKTtcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHgsIHkgLSAwLjUpO1xuICAgICAgfVxuICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG5cbiAgICAgIGlmIChoYXNWYWwoYmdDb2xvcikpIHtcbiAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gYmdDb2xvcjtcbiAgICAgICAgdGhpcy5jdHguZmlsbCgpO1xuICAgICAgfVxuXG4gICAgICAvLyBsYWJlbFxuICAgICAgaWYgKGhhc1ZhbChsYWJlbCkpIHtcbiAgICAgICAgdGhpcy5jdHgudGV4dEFsaWduID0gJ2NlbnRlcic7XG5cbiAgICAgICAgaWYgKGhhc1ZhbCh2YWwpKSB7XG4gICAgICAgICAgLy8g5bCP5paH5a2X5o+Q56S6XG4gICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gbGFiZWxDb2xvciB8fCBib3JkZXJDb2xvcjtcbiAgICAgICAgICB0aGlzLmN0eC5mb250ID0gJzhweCAtYXBwbGUtc3lzdGVtLCBcIkhlbHZldGljYSBOZXVlXCIsIFJvYm90bywgXCJTZWdvZSBVSVwiLCBzYW5zLXNlcmlmJztcbiAgICAgICAgICB0aGlzLmN0eC5maWxsVGV4dChsYWJlbCwgeCArIHcgLyAyLCB5ICsgMyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8g5omT5paH5a2X5o+Q56S6XG4gICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gbGFiZWxDb2xvciB8fCAnIzgwODA4MCc7XG4gICAgICAgICAgdGhpcy5jdHguZm9udCA9ICcxNnB4IC1hcHBsZS1zeXN0ZW0sIFwiSGVsdmV0aWNhIE5ldWVcIiwgUm9ib3RvLCBcIlNlZ29lIFVJXCIsIHNhbnMtc2VyaWYnO1xuICAgICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KGxhYmVsLCB4ICsgdyAvIDIsIHkgKyBoIC8gMiArIDYpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIHZhbFxuICAgICAgaWYgKGhhc1ZhbCh2YWwpKSB7XG4gICAgICAgIHRoaXMuY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSB2YWxDb2xvcjtcbiAgICAgICAgdGhpcy5jdHguZm9udCA9ICcxNnB4IC1hcHBsZS1zeXN0ZW0sIFwiSGVsdmV0aWNhIE5ldWVcIiwgUm9ib3RvLCBcIlNlZ29lIFVJXCIsIHNhbnMtc2VyaWYnO1xuICAgICAgICB0aGlzLmN0eC5maWxsVGV4dCh2YWwsIHggKyB3IC8gMiwgeSArIGggLyAyICsgNik7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOe7mOWItumUruebmFxuICAgIGRyYXdLZXlib3JhZCgpIHtcbiAgICAgIHZhciBsaWdodFBvaW50ID0gdGhpcy5nZXRMaWdodFBvaW50KCk7XG5cbiAgICAgIC8vIOmUruebmOWwuuWvuFxuICAgICAgdmFyIHcgPSAyNDAsXG4gICAgICAgIGggPSAxODA7XG4gICAgICAvLyDlnIbop5LljYrlvoRcbiAgICAgIHZhciByID0gNjtcblxuICAgICAgLy8g6ZSu55uY6LW35aeL5L2N572uXG4gICAgICB2YXIga2V5Ym9yYWRQb3MgPSB0aGlzLmdldEtleWJvcmFkUG9zKCk7XG4gICAgICB2YXIgeCA9IGtleWJvcmFkUG9zLngsXG4gICAgICAgIHkgPSBrZXlib3JhZFBvcy55O1xuXG4gICAgICB2YXIga2k7XG5cbiAgICAgIGlmIChsaWdodFBvaW50ICYmIHRoaXMuaXNLZXlib2FyZFNob3cgJiYgdGhpcy5saWdodElucHV0SW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgLy8g57uY5Yi26IOM5pmvXG4gICAgICAgIHRoaXMuY3R4LnNoYWRvd0JsdXIgPSA1O1xuICAgICAgICB0aGlzLmN0eC5zaGFkb3dDb2xvciA9ICcjOTk5JztcblxuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICAgIHRoaXMuY3R4LmFyYyh4ICsgciwgeSArIHIsIHIsIE1hdGguUEksIE1hdGguUEkgKiAxLjUpO1xuICAgICAgICB0aGlzLmN0eC5saW5lVG8odyArIHggLSByLCB5KTtcbiAgICAgICAgdGhpcy5jdHguYXJjKHggKyB3IC0gciwgeSArIHIsIHIsIE1hdGguUEkgKiAxLjUsIDApO1xuICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArIHcsIHkgKyBoIC0gcik7XG4gICAgICAgIHRoaXMuY3R4LmFyYyh4ICsgdyAtIHIsIHkgKyBoIC0gciwgciwgMCwgTWF0aC5QSSAqIDAuNSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgciwgeSArIGgpO1xuICAgICAgICB0aGlzLmN0eC5hcmMoeCArIHIsIHkgKyBoIC0gciwgciwgTWF0aC5QSSAqIDAuNSwgTWF0aC5QSSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4LCB5ICsgcik7XG5cbiAgICAgICAgdGhpcy5jdHguY2xvc2VQYXRoKCk7XG4gICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcblxuICAgICAgICB0aGlzLmN0eC5zaGFkb3dCbHVyID0gMDtcbiAgICAgICAgdGhpcy5jdHguc2hhZG93Q29sb3IgPSAndHJhbnNwYXJlbnQnO1xuXG4gICAgICAgIC8vIOe7mOWItumrmOS6rlxuICAgICAgICBmb3IgKGtpIGluIHRoaXMua2V5Ym9yYWRBY3Rpb25EYXRhKSB7XG4gICAgICAgICAga2kgPSBwYXJzZUludChraSk7XG5cbiAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI2YyZjJmMic7IC8vIOeCueWHu+eKtuaAgeS4reeahOaMiemUruiDjOaZr+iJslxuICAgICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICAgICAgLy8g5bem5LiK5ZyG6KeSXG4gICAgICAgICAgaWYgKGtpID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5hcmMoXG4gICAgICAgICAgICAgIHggKyAoa2kgJSA0KSAqIDYwICsgcixcbiAgICAgICAgICAgICAgeSArIE1hdGguZmxvb3Ioa2kgLyA0KSAqIDQ1ICsgcixcbiAgICAgICAgICAgICAgcixcbiAgICAgICAgICAgICAgTWF0aC5QSSxcbiAgICAgICAgICAgICAgTWF0aC5QSSAqIDEuNVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jdHgubW92ZVRvKHggKyAoa2kgJSA0KSAqIDYwLCB5ICsgTWF0aC5mbG9vcihraSAvIDQpICogNDUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOWPs+S4iuWchuinklxuICAgICAgICAgIGlmIChraSA9PT0gMykge1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyAoKGtpICUgNCkgKyAxKSAqIDYwIC0gciwgeSArIE1hdGguZmxvb3Ioa2kgLyA0KSAqIDQ1KTtcbiAgICAgICAgICAgIHRoaXMuY3R4LmFyYyhcbiAgICAgICAgICAgICAgeCArICgoa2kgJSA0KSArIDEpICogNjAgLSByLFxuICAgICAgICAgICAgICB5ICsgTWF0aC5mbG9vcihraSAvIDQpICogNDUgKyByLFxuICAgICAgICAgICAgICByLFxuICAgICAgICAgICAgICBNYXRoLlBJICogMS41LFxuICAgICAgICAgICAgICAwXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArICgoa2kgJSA0KSArIDEpICogNjAsIHkgKyBNYXRoLmZsb29yKGtpIC8gNCkgKiA0NSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8g5Y+z5LiL5ZyG6KeSXG4gICAgICAgICAgaWYgKGtpID09PSAxNSkge1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyAoKGtpICUgNCkgKyAxKSAqIDYwLCB5ICsgKE1hdGguZmxvb3Ioa2kgLyA0KSArIDEpIC0gcik7XG4gICAgICAgICAgICB0aGlzLmN0eC5hcmMoXG4gICAgICAgICAgICAgIHggKyAoKGtpICUgNCkgKyAxKSAqIDYwIC0gcixcbiAgICAgICAgICAgICAgeSArIChNYXRoLmZsb29yKGtpIC8gNCkgKyAxKSAqIDQ1IC0gcixcbiAgICAgICAgICAgICAgcixcbiAgICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICAgTWF0aC5QSSAqIDAuNVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyAoKGtpICUgNCkgKyAxKSAqIDYwLCB5ICsgKE1hdGguZmxvb3Ioa2kgLyA0KSArIDEpICogNDUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOW3puS4i+WchuinklxuICAgICAgICAgIGlmIChraSA9PT0gMTIpIHtcbiAgICAgICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgKGtpICUgNCkgKiA2MCArIHIsIHkgKyAoTWF0aC5mbG9vcihraSAvIDQpICsgMSkgKiA0NSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5hcmMoXG4gICAgICAgICAgICAgIHggKyAoa2kgJSA0KSAqIDYwICsgcixcbiAgICAgICAgICAgICAgeSArIChNYXRoLmZsb29yKGtpIC8gNCkgKyAxKSAqIDQ1IC0gcixcbiAgICAgICAgICAgICAgcixcbiAgICAgICAgICAgICAgTWF0aC5QSSAqIDAuNSxcbiAgICAgICAgICAgICAgTWF0aC5QSVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyAoa2kgJSA0KSAqIDYwLCB5ICsgKE1hdGguZmxvb3Ioa2kgLyA0KSArIDEpICogNDUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOe7mOWItuagvOWtkFxuICAgICAgICB0aGlzLmN0eC5zdHJva2VTdHlsZSA9ICcjZDlkOWQ5JztcbiAgICAgICAgdGhpcy5jdHgubGluZVdpZHRoID0gMC41O1xuXG4gICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCwgeSArIDQ1LjI1KTtcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyB3LCB5ICsgNDUuMjUpO1xuICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCwgeSArIDkwLjI1KTtcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyB3LCB5ICsgOTAuMjUpO1xuICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCwgeSArIDEzNS4yNSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgdywgeSArIDEzNS4yNSk7XG5cbiAgICAgICAgdGhpcy5jdHgubW92ZVRvKHggKyA2MC4yNSwgeSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgNjAuMjUsIHkgKyBoKTtcbiAgICAgICAgdGhpcy5jdHgubW92ZVRvKHggKyAxMjAuMjUsIHkpO1xuICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArIDEyMC4yNSwgeSArIGgpO1xuICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCArIDE4MC4yNSwgeSk7XG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgMTgwLjI1LCB5ICsgaCk7XG4gICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICB0aGlzLmN0eC5zdHJva2UoKTtcblxuICAgICAgICAvLyB0aGlzLmN0eC50cmFuc2xhdGUoMCwgMCk7XG5cbiAgICAgICAgLy8g57uY5Yi25paH5a2XXG4gICAgICAgIHRoaXMuY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xuXG4gICAgICAgIGtleWJvYXJkVGV4dC5mb3JFYWNoKCh0ZXh0LCBpbmRleCkgPT4ge1xuICAgICAgICAgIHZhciByb3cgPSBNYXRoLmZsb29yKGluZGV4IC8gNCksXG4gICAgICAgICAgICBjb2wgPSBpbmRleCAlIDQ7XG5cbiAgICAgICAgICBpZiAoaW5kZXggPT09IDMpIHtcbiAgICAgICAgICAgIC8vIOWIoOmZpOaMiemSru+8jOS9v+eUqOWbvuagh1xuXG4gICAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnIzk5OTk5OSc7XG5cbiAgICAgICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCArIGNvbCAqIDYwICsgMTgsIHkgKyByb3cgKiA0NSArIDIyLjUpO1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyBjb2wgKiA2MCArIDI1LCB5ICsgcm93ICogNDUgKyAxNC41KTtcbiAgICAgICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgY29sICogNjAgKyA0MCwgeSArIHJvdyAqIDQ1ICsgMTQuNSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5hcmMoeCArIGNvbCAqIDYwICsgNDAsIHkgKyByb3cgKiA0NSArIDE2LjUsIDIsIE1hdGguUEkgKiAxLjUsIDApO1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyBjb2wgKiA2MCArIDQyLCB5ICsgcm93ICogNDUgKyAyOC41KTtcbiAgICAgICAgICAgIHRoaXMuY3R4LmFyYyh4ICsgY29sICogNjAgKyA0MCwgeSArIHJvdyAqIDQ1ICsgMjguNSwgMiwgMCwgTWF0aC5QSSAqIDAuNSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCArIGNvbCAqIDYwICsgMjUsIHkgKyByb3cgKiA0NSArIDMwLjUpO1xuXG4gICAgICAgICAgICB0aGlzLmN0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcblxuICAgICAgICAgICAgLy8g57uY5Yi25Y+J5Y+J5Zu+5qCHXG4gICAgICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gJyNmZmZmZmYnO1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVdpZHRoID0gMjtcbiAgICAgICAgICAgIHRoaXMuY3R4Lm1vdmVUbyh4ICsgY29sICogNjAgKyAyOCwgeSArIHJvdyAqIDQ1ICsgMTgpO1xuICAgICAgICAgICAgdGhpcy5jdHgubGluZVRvKHggKyBjb2wgKiA2MCArIDM3LCB5ICsgcm93ICogNDUgKyAyNyk7XG4gICAgICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCArIGNvbCAqIDYwICsgMzcsIHkgKyByb3cgKiA0NSArIDE4KTtcbiAgICAgICAgICAgIHRoaXMuY3R4LmxpbmVUbyh4ICsgY29sICogNjAgKyAyOCwgeSArIHJvdyAqIDQ1ICsgMjcpO1xuICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOWFtuS7luaMiemSrlxuICAgICAgICAgICAgLy8g5Lit5paH5a2X5Y+35bCP5LiA5LqbXG4gICAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnIzExMTExMSc7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDMgfHwgaW5kZXggPT09IDEyIHx8IGluZGV4ID09PSAxNCB8fCBpbmRleCA9PT0gMTUpIHtcbiAgICAgICAgICAgICAgdGhpcy5jdHguZm9udCA9XG4gICAgICAgICAgICAgICAgJzE0cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLmN0eC5mb250ID1cbiAgICAgICAgICAgICAgICAnMThweCAtYXBwbGUtc3lzdGVtLCBcIkhlbHZldGljYSBOZXVlXCIsIFJvYm90bywgXCJTZWdvZSBVSVwiLCBzYW5zLXNlcmlmJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g5YWz6ZetXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDE1KSB7XG4gICAgICAgICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjNDI3NWU4JztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g5LiK5LiA6aG5IOWSjCDkuIvkuIDpoblcbiAgICAgICAgICAgIGlmICgoaW5kZXggPT09IDEyICYmICF0aGlzLmhhc1ByZXZJbnB1dCkgfHwgKGluZGV4ID09PSAxNCAmJiAhdGhpcy5oYXNOZXh0SW5wdXQpKSB7XG4gICAgICAgICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjYjJiMmIyJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5jdHguZmlsbFRleHQodGV4dCwgeCArIGNvbCAqIDYwICsgMzAsIHkgKyByb3cgKiA0NSArIDI5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBnZXRJbnB1dFBvcHVwU2l6ZSgpIHtcbiAgICAgIGxldCBwdywgcGg7XG4gICAgICBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgICAgLy8g5qCH5YeG566X5rOVXG4gICAgICAgIHB3ID0gODAgKiB0aGlzLmNvbWJvTGVuZ3RoO1xuICAgICAgICBwaCA9IDQ0O1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgICAvLyDmnoHlt67nrpfms5VcbiAgICAgICAgcHcgPSAyMTg7XG4gICAgICAgIHBoID0gMTEwO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICAgIHB3ID0gMTQ5O1xuICAgICAgICBwaCA9IDQ0O1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNCkge1xuICAgICAgICAvLyDmnoHlt64r6K6+6K6h5YC8XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA1KSB7XG4gICAgICAgIC8vIOmrmOWuveeul+azlVxuICAgICAgICBwdyA9IDI2MztcbiAgICAgICAgcGggPSA4ODtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDYpIHtcbiAgICAgICAgLy8g5byA6Ze06L+b5rexXG4gICAgICAgIHB3ID0gMjYzO1xuICAgICAgICBwaCA9IDg4O1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNykge1xuICAgICAgICAvLyDmlrnmraPmgKfnrpfms5VcbiAgICAgICAgcHcgPSAyMTg7XG4gICAgICAgIHBoID0gNDQ7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICAgIC8vIOinguaEn+eul+azlVxuICAgICAgICBpZiAodGhpcy5tb2RlID09PSAnZWRpdCcpIHtcbiAgICAgICAgICBwdyA9IDE2MDtcbiAgICAgICAgICBwaCA9IDQ0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHB3ID0gODA7XG4gICAgICAgICAgcGggPSA0NDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTIpIHtcbiAgICAgICAgLy8g5pa55q2j5oCn566X5rOVXG4gICAgICAgIHB3ID0gMjE4O1xuICAgICAgICBwaCA9IDQ0O1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMTMpIHtcbiAgICAgICAgLy8g6Zeo5qGG566X5rOVXG4gICAgICAgIHB3ID0gMTQ5O1xuICAgICAgICBwaCA9IDQ0O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB3OiBwdyxcbiAgICAgICAgaDogcGgsXG4gICAgICB9O1xuICAgIH0sXG5cbiAgICBnZXRJbnB1dFBvcHVwUG9zKCkge1xuICAgICAgbGV0IGxpZ2h0UG9pbnQgPSB0aGlzLmdldExpZ2h0UG9pbnQoKTtcbiAgICAgIGxldCBwU2l6ZSA9IHRoaXMuZ2V0SW5wdXRQb3B1cFNpemUoKTtcblxuICAgICAgaWYgKGxpZ2h0UG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB4OiAobGlnaHRQb2ludC54ICogdGhpcy5zY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8gKyB0aGlzLnggLyB0aGlzLnBpeGVsUmF0aW8gLSBwU2l6ZS53IC8gMixcbiAgICAgICAgICB5OlxuICAgICAgICAgICAgKGxpZ2h0UG9pbnQueSAqIHRoaXMuc2NhbGUpIC8gdGhpcy5waXhlbFJhdGlvICtcbiAgICAgICAgICAgIHRoaXMueSAvIHRoaXMucGl4ZWxSYXRpbyAtXG4gICAgICAgICAgICBwU2l6ZS5oIC1cbiAgICAgICAgICAgIHRoaXMucG9pbnRSYWRpdXMgLVxuICAgICAgICAgICAgMTAsXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyB4OiBudWxsLCB5OiBudWxsIH07XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOiOt+WPlumUruebmOeahOS9jee9ru+8jOi/lOWbnuW3puS4iuinkueahOWdkOagh++8jOmUruebmOWwuuWvuOWbuuWumu+8mjI0MCAqIDE4MFxuICAgIC8vIOi/memHjOS4jeWIpOaWremUruebmOaYr+WQpuaJk+W8gOeKtuaAgVxuICAgIGdldEtleWJvcmFkUG9zKCkge1xuICAgICAgdmFyIGxpZ2h0UG9pbnQgPSB0aGlzLmdldExpZ2h0UG9pbnQoKTtcblxuICAgICAgaWYgKGxpZ2h0UG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB4OiBNYXRoLnJvdW5kKFxuICAgICAgICAgICAgKGxpZ2h0UG9pbnQueCAqIHRoaXMuc2NhbGUpIC8gdGhpcy5waXhlbFJhdGlvICsgdGhpcy54IC8gdGhpcy5waXhlbFJhdGlvIC0gMjQwIC8gMlxuICAgICAgICAgICksXG4gICAgICAgICAgeTogTWF0aC5yb3VuZChcbiAgICAgICAgICAgIChsaWdodFBvaW50LnkgKiB0aGlzLnNjYWxlKSAvIHRoaXMucGl4ZWxSYXRpbyArXG4gICAgICAgICAgICAgIHRoaXMueSAvIHRoaXMucGl4ZWxSYXRpbyArXG4gICAgICAgICAgICAgIHRoaXMucG9pbnRSYWRpdXMgK1xuICAgICAgICAgICAgICAxMFxuICAgICAgICAgICksXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyB4OiBudWxsLCB5OiBudWxsIH07XG4gICAgICB9XG4gICAgfSxcblxuICAgIGdldEFyZWFEYXRhKHBvaW50cykge1xuICAgICAgdmFyIGFyZWFEYXRhID0gW107XG5cbiAgICAgIF8uZWFjaChwb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgdmFyIGlzRXhpc3QgPSBfLnNvbWUoYXJlYURhdGEsIGFyZWEgPT4ge1xuICAgICAgICAgIHJldHVybiBhcmVhLm5hbWUgPT09IHBvaW50LmFyZWE7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIWlzRXhpc3QpIHtcbiAgICAgICAgICB2YXIgbGVuID0gXy5maWx0ZXIocG9pbnRzLCB7IGFyZWE6IHBvaW50LmFyZWEgfSkubGVuZ3RoO1xuICAgICAgICAgIGFyZWFEYXRhLnB1c2goe1xuICAgICAgICAgICAgbmFtZTogcG9pbnQuYXJlYSxcbiAgICAgICAgICAgIHNldFZhbDogaGFzVmFsKHBvaW50LnNldFZhbCkgPyBwb2ludC5zZXRWYWwgOiAnJyxcbiAgICAgICAgICAgIHBvaW50TnVtOiBsZW4sXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gYXJlYURhdGE7XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluagh+iusOeCuVxuICAgIGdldERyYXdQb2ludHMoZGF0YSkge1xuICAgICAgaWYgKF8uaXNFbXB0eShkYXRhKSkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG5cbiAgICAgIGxldCBwb2ludHMgPSBbXTtcbiAgICAgIGxldCBwb2ludENvbG9yUXVhbGlmaWVkID0gJyMwYmM2NjYnO1xuICAgICAgbGV0IHBvaW50Q29sb3JFeGNlZWQgPSAnI2ZmNDU0NSc7XG4gICAgICBsZXQgcG9pbnRDb2xvckxpZ2h0ID0gJyM0Mjc1ZTgnO1xuICAgICAgbGV0IGFyZWFEYXRhID0gW107XG4gICAgICBsZXQgZHJhd2luZ0RhdGEgPSBfLmNsb25lKGRhdGEpO1xuXG4gICAgICBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgICAgLy8g5qCH5YeG5qih5byPXG4gICAgICAgIHBvaW50cyA9IGRyYXdpbmdEYXRhWzBdLnBvaW50cztcblxuICAgICAgICAvLyDlhbPogZTmo4Dmn6XpobnmqKHlvI/vvIzlpoLmnpzmnInkuIDkuKrmo4Dmn6XpobnnmoTlgLzmmK/niIbngrnvvIzliJnnrpfkvZzniIbngrlcbiAgICAgICAgXy5lYWNoKGRyYXdpbmdEYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBfLmVhY2goaXRlbS5wb2ludHMsIChwb2ludCwgcEluZGV4KSA9PiB7XG4gICAgICAgICAgICBwb2ludHNbcEluZGV4XSAmJiAocG9pbnRzW3BJbmRleF0uaXNRdWFsaWZpZWQgPSB0cnVlKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy5lYWNoKGRyYXdpbmdEYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBfLmVhY2goaXRlbS5wb2ludHMsIChwb2ludCwgcEluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAocG9pbnQuaXNFeGNlZWQgJiYgcG9pbnRzW3BJbmRleF0pIHtcbiAgICAgICAgICAgICAgcG9pbnRzW3BJbmRleF0uaXNRdWFsaWZpZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHBvaW50LmlzV2FybmluZyAmJiBwb2ludHNbcEluZGV4XSkge1xuICAgICAgICAgICAgICBwb2ludHNbcEluZGV4XS5pc1dhcm5pbmcgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDIpIHtcbiAgICAgICAgLy8g5p6B5beu5qih5byPXG4gICAgICAgIGFyZWFEYXRhID0gdGhpcy5nZXRBcmVhRGF0YUZyb21Qb2ludHMoZHJhd2luZ0RhdGFbMF0ucG9pbnRzKTtcblxuICAgICAgICBwb2ludHMgPSBfLm1hcChhcmVhRGF0YSwgYXJlYSA9PiB7XG4gICAgICAgICAgdmFyIGFyZWFQb2ludHMgPSBfLmZpbHRlcihkcmF3aW5nRGF0YVswXS5wb2ludHMsIHtcbiAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIgaGFzRXhjZWVkID0gXy5zb21lKGFyZWFQb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBwb2ludC5pc0V4Y2VlZDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIgaGFzV2FybmluZyA9IF8uc29tZShhcmVhUG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcG9pbnQuaXNXYXJuaW5nO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHg6IGFyZWFQb2ludHNbMF0ueCxcbiAgICAgICAgICAgIHk6IGFyZWFQb2ludHNbMF0ueSxcbiAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgIGlzUXVhbGlmaWVkOiAhaGFzRXhjZWVkLFxuICAgICAgICAgICAgaXNXYXJuaW5nOiBoYXNXYXJuaW5nLFxuICAgICAgICAgICAgcG9pbnRJZDogYXJlYVBvaW50c1swXS5wb2ludElkLFxuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICAgIHBvaW50cyA9IGRyYXdpbmdEYXRhWzBdLnBvaW50cztcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgICAgLy8g5p6B5beuK+iuvuiuoeWAvFxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNSB8fCB0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNikge1xuICAgICAgICAvLyDpq5jlrr0gfCDlvIDpl7Tov5vmt7FcbiAgICAgICAgYXJlYURhdGEgPSB0aGlzLmdldEFyZWFEYXRhRnJvbVBvaW50cyhkcmF3aW5nRGF0YVswXS5wb2ludHMpO1xuXG4gICAgICAgIHBvaW50cyA9IF8ubWFwKGFyZWFEYXRhLCBhcmVhID0+IHtcbiAgICAgICAgICB2YXIgYXJlYVBvaW50cyA9IF8uZmlsdGVyKGRyYXdpbmdEYXRhWzBdLnBvaW50cywge1xuICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBoYXNFeGNlZWQgPSBfLnNvbWUoYXJlYVBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHBvaW50LmlzRXhjZWVkO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBoYXNXYXJuaW5nID0gXy5zb21lKGFyZWFQb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBwb2ludC5pc1dhcm5pbmc7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgeDogYXJlYVBvaW50c1swXS54LFxuICAgICAgICAgICAgeTogYXJlYVBvaW50c1swXS55LFxuICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgICAgaXNRdWFsaWZpZWQ6ICFoYXNFeGNlZWQsXG4gICAgICAgICAgICBpc1dhcm5pbmc6IGhhc1dhcm5pbmcsXG4gICAgICAgICAgICBwb2ludElkOiBhcmVhUG9pbnRzWzBdLnBvaW50SWQsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA3KSB7XG4gICAgICAgIC8vIOaWueato+aAp1xuICAgICAgICBhcmVhRGF0YSA9IHRoaXMuZ2V0QXJlYURhdGFGcm9tUG9pbnRzKGRyYXdpbmdEYXRhWzBdLnBvaW50cyk7XG5cbiAgICAgICAgcG9pbnRzID0gXy5tYXAoYXJlYURhdGEsIGFyZWEgPT4ge1xuICAgICAgICAgIHZhciBhcmVhUG9pbnRzID0gXy5maWx0ZXIoZHJhd2luZ0RhdGFbMF0ucG9pbnRzLCB7XG4gICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdmFyIGhhc0V4Y2VlZCA9IF8uc29tZShhcmVhUG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcG9pbnQuaXNFeGNlZWQ7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdmFyIGhhc1dhcm5pbmcgPSBfLnNvbWUoYXJlYVBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHBvaW50LmlzV2FybmluZztcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB4OiBhcmVhUG9pbnRzWzBdLngsXG4gICAgICAgICAgICB5OiBhcmVhUG9pbnRzWzBdLnksXG4gICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICBpc1F1YWxpZmllZDogIWhhc0V4Y2VlZCxcbiAgICAgICAgICAgIGlzV2FybmluZzogaGFzV2FybmluZyxcbiAgICAgICAgICAgIHBvaW50SWQ6IGFyZWFQb2ludHNbMF0ucG9pbnRJZCxcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDgpIHtcbiAgICAgICAgLy8g6KeC5oSf566X5rOVXG4gICAgICAgIHBvaW50cyA9IGRyYXdpbmdEYXRhWzBdLnBvaW50cztcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEyIHx8IHRoaXMucGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgICAvLyDpq5jlt67jgIHpl6jmoYblnoLnm7TluqZcbiAgICAgICAgYXJlYURhdGEgPSB0aGlzLmdldEFyZWFEYXRhRnJvbVBvaW50cyhkcmF3aW5nRGF0YVswXS5wb2ludHMpO1xuXG4gICAgICAgIHBvaW50cyA9IF8ubWFwKGFyZWFEYXRhLCBhcmVhID0+IHtcbiAgICAgICAgICB2YXIgYXJlYVBvaW50cyA9IF8uZmlsdGVyKGRyYXdpbmdEYXRhWzBdLnBvaW50cywge1xuICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBoYXNFeGNlZWQgPSBfLnNvbWUoYXJlYVBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHBvaW50LmlzRXhjZWVkO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBoYXNXYXJuaW5nID0gXy5zb21lKGFyZWFQb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBwb2ludC5pc1dhcm5pbmc7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgeDogYXJlYVBvaW50c1swXS54LFxuICAgICAgICAgICAgeTogYXJlYVBvaW50c1swXS55LFxuICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgICAgaXNRdWFsaWZpZWQ6ICFoYXNFeGNlZWQsXG4gICAgICAgICAgICBpc1dhcm5pbmc6IGhhc1dhcm5pbmcsXG4gICAgICAgICAgICBwb2ludElkOiBhcmVhUG9pbnRzWzBdLnBvaW50SWQsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKCfnrpfms5XplJnor68gLS0+JywgdGhpcy5wYXNzcmF0ZU1vZGUpO1xuICAgICAgfVxuXG4gICAgICAvLyDorr7nva7moIforrDngrnnmoTpopzoibJcbiAgICAgIF8uZWFjaChwb2ludHMsIChwb2ludCwgaW5kZXgpID0+IHtcbiAgICAgICAgbGV0IGN1ckluZGV4O1xuICAgICAgICBpZiAoY3VySW5kZXggIT09IHVuZGVmaW5lZCAmJiBpbmRleCA9PT0gY3VySW5kZXgpIHtcbiAgICAgICAgICBwb2ludC5jb2xvciA9IHBvaW50Q29sb3JMaWdodDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAocG9pbnQuaXNRdWFsaWZpZWQpIHtcbiAgICAgICAgICAgIHBvaW50LmNvbG9yID0gcG9pbnRDb2xvclF1YWxpZmllZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcG9pbnQuY29sb3IgPSBwb2ludENvbG9yRXhjZWVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHBvaW50LmluZGV4ID0gaW5kZXg7XG4gICAgICB9KTtcblxuICAgICAgLy8g5qCH6K6w54K554q25oCB6aKc6ImyXG4gICAgICBpZiAoIV8uaXNFbXB0eSh0aGlzLnBvaW50U3RhdHVzKSkge1xuICAgICAgICBsZXQgcG9pbnRTdGF0dXNPYmogPSB7fTtcbiAgICAgICAgXy5lYWNoKHRoaXMucG9pbnRTdGF0dXMsIHYgPT4ge1xuICAgICAgICAgIHBvaW50U3RhdHVzT2JqW3YuaWRdID0gdi5zdGF0dXM7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF8uZWFjaChwb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICB2YXIgc3RhdHVzID0gcG9pbnQucG9pbnRJZCA/IHBvaW50U3RhdHVzT2JqW3BvaW50LnBvaW50SWRdIDogJyc7XG5cbiAgICAgICAgICBpZiAoc3RhdHVzKSB7XG4gICAgICAgICAgICBwb2ludC5jb2xvciA9IHtcbiAgICAgICAgICAgICAg5b6F5pW05pS5OiAnI0ZGM0M0NicsXG4gICAgICAgICAgICAgIOW+heWkjemqjDogJyNGRjhFMjQnLFxuICAgICAgICAgICAgICDlt7LpgJrov4c6ICcjMEJDNjY2JyxcbiAgICAgICAgICAgICAg6Z2e5q2j5bi45YWz6ZetOiAnIzY2NjY2NicsXG4gICAgICAgICAgICB9W3N0YXR1c107XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHBvaW50cztcbiAgICB9LFxuXG4gICAgLy8g5YWI5qCH54K55qih5byP77yM5re75Yqg54K5XG4gICAgYWRkUG9pbnQocG9pbnQpIHtcbiAgICAgIHZhciBuZXdQb2ludDtcblxuICAgICAgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxKSB7XG4gICAgICAgIC8vIOagh+WHhuaooeW8j1xuICAgICAgICBuZXdQb2ludCA9IHtcbiAgICAgICAgICB2YWw6ICcnLFxuICAgICAgICAgIHg6IHBvaW50LngsXG4gICAgICAgICAgeTogcG9pbnQueSxcbiAgICAgICAgICBhcmVhOiAn5rWL5Yy6MScsXG4gICAgICAgIH07XG4gICAgICAgIF8uZWFjaCh0aGlzLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIGl0ZW0ucG9pbnRzLnB1c2goXy5jbG9uZShuZXdQb2ludCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDIpIHtcbiAgICAgICAgLy8g5p6B5beu5qih5byPLCDkuIDnu4Q15Liq54K5XG4gICAgICAgIF8uZWFjaCh0aGlzLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIHZhciBhcmVhRGF0YSA9IHRoaXMuZ2V0QXJlYURhdGEoaXRlbS5wb2ludHMpO1xuXG4gICAgICAgICAgdmFyIGFsbEluZGV4ID0gXy5tYXAoYXJlYURhdGEsIGFyZWEgPT4ge1xuICAgICAgICAgICAgaWYgKC9e5rWL5Yy6XFxkKyQvLnRlc3QoYXJlYS5uYW1lKSkge1xuICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoYXJlYS5uYW1lLnN1YnN0cigyKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIgbWF4SW5kZXggPSBfLm1heEJ5KGFsbEluZGV4KTtcblxuICAgICAgICAgIG1heEluZGV4ID0gbWF4SW5kZXggPT09IC1JbmZpbml0eSA/IDAgOiBtYXhJbmRleDtcblxuICAgICAgICAgIHZhciBuZXdQb2ludCA9IHtcbiAgICAgICAgICAgIHZhbDogJycsXG4gICAgICAgICAgICB4OiBwb2ludC54LFxuICAgICAgICAgICAgeTogcG9pbnQueSxcbiAgICAgICAgICAgIGFyZWE6ICfmtYvljLonICsgKG1heEluZGV4ICsgMSksXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgaSsrKSB7XG4gICAgICAgICAgICBpdGVtLnBvaW50cy5wdXNoKF8uY2xvbmUobmV3UG9pbnQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICAgIG5ld1BvaW50ID0ge1xuICAgICAgICAgIHZhbDogJycsXG4gICAgICAgICAgeDogcG9pbnQueCxcbiAgICAgICAgICB5OiBwb2ludC55LFxuICAgICAgICAgIGFyZWE6ICfmtYvljLoxJyxcbiAgICAgICAgICBzZXRWYWw6ICcnLFxuICAgICAgICB9O1xuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5wdXNoKG5ld1BvaW50KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA0KSB7XG4gICAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDUpIHtcbiAgICAgICAgLy8g6auY5a69XG4gICAgICAgIF8uZWFjaCh0aGlzLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIHZhciBhcmVhRGF0YSA9IHRoaXMuZ2V0QXJlYURhdGEoaXRlbS5wb2ludHMpO1xuXG4gICAgICAgICAgdmFyIGFsbEluZGV4ID0gXy5tYXAoYXJlYURhdGEsIGFyZWEgPT4ge1xuICAgICAgICAgICAgaWYgKC9e5rWL5Yy6XFxkKyQvLnRlc3QoYXJlYS5uYW1lKSkge1xuICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoYXJlYS5uYW1lLnN1YnN0cigyKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIgbWF4SW5kZXggPSBfLm1heEJ5KGFsbEluZGV4KTtcblxuICAgICAgICAgIG1heEluZGV4ID0gbWF4SW5kZXggPT09IC1JbmZpbml0eSA/IDAgOiBtYXhJbmRleDtcblxuICAgICAgICAgIHZhciBuZXdQb2ludCA9IHtcbiAgICAgICAgICAgIHZhbDogJycsXG4gICAgICAgICAgICB4OiBwb2ludC54LFxuICAgICAgICAgICAgeTogcG9pbnQueSxcbiAgICAgICAgICAgIGFyZWE6ICfmtYvljLonICsgKG1heEluZGV4ICsgMSksXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGZvciAodmFyIGdpID0gMDsgZ2kgPCAyOyBnaSsrKSB7XG4gICAgICAgICAgICBuZXdQb2ludC5sYWJlbCA9ICfpq5gnO1xuICAgICAgICAgICAgaXRlbS5wb2ludHMucHVzaChfLmNsb25lKG5ld1BvaW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAodmFyIGtpID0gMDsga2kgPCAyOyBraSsrKSB7XG4gICAgICAgICAgICBuZXdQb2ludC5sYWJlbCA9ICflrr0nO1xuICAgICAgICAgICAgaXRlbS5wb2ludHMucHVzaChfLmNsb25lKG5ld1BvaW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDYpIHtcbiAgICAgICAgLy8g5byA6Ze06L+b5rexXG4gICAgICAgIF8uZWFjaCh0aGlzLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIHZhciBhcmVhRGF0YSA9IHRoaXMuZ2V0QXJlYURhdGEoaXRlbS5wb2ludHMpO1xuXG4gICAgICAgICAgdmFyIGFsbEluZGV4ID0gXy5tYXAoYXJlYURhdGEsIGFyZWEgPT4ge1xuICAgICAgICAgICAgaWYgKC9e5rWL5Yy6XFxkKyQvLnRlc3QoYXJlYS5uYW1lKSkge1xuICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoYXJlYS5uYW1lLnN1YnN0cigyKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIgbWF4SW5kZXggPSBfLm1heEJ5KGFsbEluZGV4KTtcblxuICAgICAgICAgIG1heEluZGV4ID0gbWF4SW5kZXggPT09IC1JbmZpbml0eSA/IDAgOiBtYXhJbmRleDtcblxuICAgICAgICAgIHZhciBuZXdQb2ludCA9IHtcbiAgICAgICAgICAgIHZhbDogJycsXG4gICAgICAgICAgICB4OiBwb2ludC54LFxuICAgICAgICAgICAgeTogcG9pbnQueSxcbiAgICAgICAgICAgIGFyZWE6ICfmtYvljLonICsgKG1heEluZGV4ICsgMSksXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGZvciAodmFyIGdpID0gMDsgZ2kgPCAyOyBnaSsrKSB7XG4gICAgICAgICAgICBuZXdQb2ludC5sYWJlbCA9ICflvIDpl7QnO1xuICAgICAgICAgICAgaXRlbS5wb2ludHMucHVzaChfLmNsb25lKG5ld1BvaW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAodmFyIGtpID0gMDsga2kgPCAyOyBraSsrKSB7XG4gICAgICAgICAgICBuZXdQb2ludC5sYWJlbCA9ICfov5vmt7EnO1xuICAgICAgICAgICAgaXRlbS5wb2ludHMucHVzaChfLmNsb25lKG5ld1BvaW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgICAgLy8g5pa55q2j5oCnXG4gICAgICAgIF8uZWFjaChpdGVtLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIHZhciBhcmVhRGF0YSA9IHRoaXMuZ2V0QXJlYURhdGEoaXRlbS5wb2ludHMpO1xuXG4gICAgICAgICAgdmFyIGFsbEluZGV4ID0gXy5tYXAoYXJlYURhdGEsIGFyZWEgPT4ge1xuICAgICAgICAgICAgaWYgKC9e5rWL5Yy6XFxkKyQvLnRlc3QoYXJlYS5uYW1lKSkge1xuICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoYXJlYS5uYW1lLnN1YnN0cigyKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIgbWF4SW5kZXggPSBfLm1heEJ5KGFsbEluZGV4KTtcblxuICAgICAgICAgIG1heEluZGV4ID0gbWF4SW5kZXggPT09IC1JbmZpbml0eSA/IDAgOiBtYXhJbmRleDtcblxuICAgICAgICAgIHZhciBuZXdQb2ludCA9IHtcbiAgICAgICAgICAgIHZhbDogJycsXG4gICAgICAgICAgICB4OiBwb2ludC54LFxuICAgICAgICAgICAgeTogcG9pbnQueSxcbiAgICAgICAgICAgIGFyZWE6ICfmtYvljLonICsgKG1heEluZGV4ICsgMSksXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgICAgICAgICBpdGVtLnBvaW50cy5wdXNoKF8uY2xvbmUobmV3UG9pbnQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gOCkge1xuICAgICAgICAvLyDop4LmhJ/nrpfms5VcbiAgICAgICAgbmV3UG9pbnQgPSB7XG4gICAgICAgICAgdmFsOiAnJyxcbiAgICAgICAgICB4OiBwb2ludC54LFxuICAgICAgICAgIHk6IHBvaW50LnksXG4gICAgICAgICAgYXJlYTogJ+a1i+WMujEnLFxuICAgICAgICB9O1xuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5wdXNoKF8uY2xvbmUobmV3UG9pbnQpKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxMikge1xuICAgICAgICAvLyDpq5jlt65cbiAgICAgICAgXy5lYWNoKHRoaXMuZGF0YSwgaXRlbSA9PiB7XG4gICAgICAgICAgdmFyIGFyZWFEYXRhID0gdGhpcy5nZXRBcmVhRGF0YShpdGVtLnBvaW50cyk7XG5cbiAgICAgICAgICB2YXIgYWxsSW5kZXggPSBfLm1hcChhcmVhRGF0YSwgYXJlYSA9PiB7XG4gICAgICAgICAgICBpZiAoL17mtYvljLpcXGQrJC8udGVzdChhcmVhLm5hbWUpKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChhcmVhLm5hbWUuc3Vic3RyKDIpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBtYXhJbmRleCA9IF8ubWF4QnkoYWxsSW5kZXgpO1xuXG4gICAgICAgICAgbWF4SW5kZXggPSBtYXhJbmRleCA9PT0gLUluZmluaXR5ID8gMCA6IG1heEluZGV4O1xuXG4gICAgICAgICAgdmFyIG5ld1BvaW50ID0ge1xuICAgICAgICAgICAgdmFsOiAnJyxcbiAgICAgICAgICAgIHg6IHBvaW50LngsXG4gICAgICAgICAgICB5OiBwb2ludC55LFxuICAgICAgICAgICAgYXJlYTogJ+a1i+WMuicgKyAobWF4SW5kZXggKyAxKSxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAzOyBpKyspIHtcbiAgICAgICAgICAgIGl0ZW0ucG9pbnRzLnB1c2goXy5jbG9uZShuZXdQb2ludCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgICAvLyDpl6jmoYblnoLnm7TluqZcbiAgICAgICAgXy5lYWNoKHRoaXMuZGF0YSwgaXRlbSA9PiB7XG4gICAgICAgICAgdmFyIGFyZWFEYXRhID0gdGhpcy5nZXRBcmVhRGF0YShpdGVtLnBvaW50cyk7XG5cbiAgICAgICAgICB2YXIgYWxsSW5kZXggPSBfLm1hcChhcmVhRGF0YSwgYXJlYSA9PiB7XG4gICAgICAgICAgICBpZiAoL17mtYvljLpcXGQrJC8udGVzdChhcmVhLm5hbWUpKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChhcmVhLm5hbWUuc3Vic3RyKDIpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBtYXhJbmRleCA9IF8ubWF4QnkoYWxsSW5kZXgpO1xuXG4gICAgICAgICAgbWF4SW5kZXggPSBtYXhJbmRleCA9PT0gLUluZmluaXR5ID8gMCA6IG1heEluZGV4O1xuXG4gICAgICAgICAgdmFyIG5ld1BvaW50ID0ge1xuICAgICAgICAgICAgdmFsOiAnJyxcbiAgICAgICAgICAgIHg6IHBvaW50LngsXG4gICAgICAgICAgICB5OiBwb2ludC55LFxuICAgICAgICAgICAgYXJlYTogJ+a1i+WMuicgKyAobWF4SW5kZXggKyAxKSxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyOyBpKyspIHtcbiAgICAgICAgICAgIGl0ZW0ucG9pbnRzLnB1c2goXy5jbG9uZShuZXdQb2ludCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKCfnrpfms5XkuI3lrZjlnKggLS0+JywgdGhpcy5wYXNzcmF0ZU1vZGUpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDlhYjmoIfngrnmqKHlvI/vvIznp7vpmaTngrlcbiAgICBkZWxQb2ludChpbmRleCkge1xuICAgICAgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxKSB7XG4gICAgICAgIC8vIOagh+WHhuaooeW8j1xuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDIpIHtcbiAgICAgICAgLy8g5p6B5beu5qih5byPXG4gICAgICAgIF8uZWFjaCh0aGlzLmRhdGEsIGl0ZW0gPT4ge1xuICAgICAgICAgIGl0ZW0ucG9pbnRzLnNwbGljZShpbmRleCAqIDUsIDUpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDMpIHtcbiAgICAgICAgLy8g5qCH5YeGK+iuvuiuoeWAvFxuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgICAgLy8g5p6B5beuK+iuvuiuoeWAvFxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBhc3NyYXRlTW9kZSA9PT0gNSkge1xuICAgICAgICAvLyDpq5jlrr1cbiAgICAgICAgXy5lYWNoKHRoaXMuZGF0YSwgaXRlbSA9PiB7XG4gICAgICAgICAgdmFyIG8gPSB7XG4gICAgICAgICAgICAgIGNvdW50OiAwLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBvaW50cyA9IGl0ZW0ucG9pbnRzLFxuICAgICAgICAgICAgdGFyZ2V0UG9pbnQgPSB7XG4gICAgICAgICAgICAgIHg6ICcnLFxuICAgICAgICAgICAgICB5OiAnJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgLy8g5qC55o2u5Z2Q5qCHICh4LCB5KSDmiormlbDmja7lvZLnsbvjgILkuIDkuKrlnZDmoIflr7nlupTlpJrkuKrlgLzvvIzliKDpmaTnrKxu5Liq54K577yM6KaB5oqK5YW25a+55bqU55qE5YC86YO95Yig6ZmkXG4gICAgICAgICAgXy5maW5kKHBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgICAgdmFyIGtleSA9IHBvaW50LnggKyAnLScgKyBwb2ludC55O1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvW2tleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgIG9ba2V5XSA9IDA7XG4gICAgICAgICAgICAgIG8uY291bnQrKztcbiAgICAgICAgICAgICAgLy8g5b2T5Yqo5oCB57uf6K6h5Z2Q5qCH5pWw5aSn5LqOIGluZGV4IOaXtu+8jOivpeWdkOagh+WNs+aYr+imgeWIoOmZpOeahOWdkOagh+eCuVxuICAgICAgICAgICAgICBpZiAoby5jb3VudCA+IGluZGV4KSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0UG9pbnQueCA9IHBvaW50Lng7XG4gICAgICAgICAgICAgICAgdGFyZ2V0UG9pbnQueSA9IHBvaW50Lnk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9ba2V5XSsrO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIC8vIOW+queOr+WIoOmZpOWdkOagh+WvueW6lOeahOWAvFxuICAgICAgICAgIGZvciAodmFyIGkgPSBwb2ludHMubGVuZ3RoIC0gMTsgaSA+IC0xOyBpLS0pIHtcbiAgICAgICAgICAgIGlmIChwb2ludHNbaV0ueCA9PT0gdGFyZ2V0UG9pbnQueCAmJiBwb2ludHNbaV0ueSA9PT0gdGFyZ2V0UG9pbnQueSkge1xuICAgICAgICAgICAgICBwb2ludHMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA2KSB7XG4gICAgICAgIC8vIOW8gOmXtOi/m+a3sVxuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5zcGxpY2UoaW5kZXggKiA0LCA0KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA3KSB7XG4gICAgICAgIC8vIOaWueato+aAp1xuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5zcGxpY2UoaW5kZXggKiAzLCAzKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICAgIC8vIOinguaEn+eul+azlVxuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYXNzcmF0ZU1vZGUgPT09IDEyKSB7XG4gICAgICAgIC8vIOmrmOW3rlxuICAgICAgICBfLmVhY2godGhpcy5kYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLnBvaW50cy5zcGxpY2UoaW5kZXggKiAzLCAzKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgICAvLyDpq5jlt65cbiAgICAgICAgXy5lYWNoKHRoaXMuZGF0YSwgaXRlbSA9PiB7XG4gICAgICAgICAgaXRlbS5wb2ludHMuc3BsaWNlKGluZGV4ICogMiwgMik7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign566X5rOV5LiN5a2Y5ZyoJyk7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLmRyYXdpbmctY29uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4uZHJhd2luZy1jb24gY2FudmFzIHtcbiAgYmFja2dyb3VuZDogdXJsKH5Ac3JjL2Fzc2V0cy9pbWcvZGlhZ3JhbS1iZy5wbmcpIHdoaXRlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDRweCA0cHg7XG59XG4ubG9hZGluZy10ZXh0IHtcbiAgcGFkZGluZzogMCAxNXB4O1xuICBtYXJnaW4tdG9wOiAxNXB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgY29sb3I6ICNhYWE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuLmVycm9yLXRleHQge1xuICBwYWRkaW5nOiAwIDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBjb2xvcjogI2ZmM2QzZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE2cHg7XG59XG48L3N0eWxlPlxuIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtcGxhY2UtY2hlY2tpdGVtLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTE3ZGNmNGQ0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLXRlbXBsYXRlLTMudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NWM2Y2FhYzAmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2RpdicsX3ZtLl9nKHtyZWY6XCJjb250ZW50XCIsc3RhdGljQ2xhc3M6XCJkcmF3aW5nLWNvblwiLHN0eWxlOihfdm0uc2l6ZVN0eWxlKX0sX3ZtLiRsaXN0ZW5lcnMpLFsoX3ZtLmlzRG93bmxvYWRpbmcpP1tfYygncCcsW19jKCdzdmcnLHtzdGF0aWNDbGFzczpcInN2Zy1sb2FkaW5nXCIsYXR0cnM6e1widmlld0JveFwiOlwiMCAwIDgwIDgwXCJ9fSxbX2MoJ2NpcmNsZScse2F0dHJzOntcImN4XCI6XCI0MFwiLFwiY3lcIjpcIjQwXCIsXCJyXCI6XCIzNlwifX0pXSldKSxfYygncCcse3N0YXRpY0NsYXNzOlwibG9hZGluZy10ZXh0XCJ9LFtfdm0uX3YoXCLmraPlnKjkuIvovb0uLi5cIildKV06Wyhfdm0uZXJyb3IpP19jKCdwJyx7c3RhdGljQ2xhc3M6XCJlcnJvci10ZXh0XCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5lcnJvcikpXSk6X2MoJ2NhbnZhcycse3JlZjpcImRyYXdpbmctY2FudmFzXCIsc3R5bGU6KF92bS5zaXplU3R5bGUpfSldXSwyKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xOTZlN2E3ZCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xOTZlN2E3ZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIxOTZlN2E3ZFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIjx0ZW1wbGF0ZT5cbiAgPHNjcm9sbGVyIHJlZj1cInNjcm9sbGVyXCI+XG4gICAgPG1lYXN1cmUtZGV0YWlsLXBsYWNlLWNoZWNraXRlbVxuICAgICAgOmRldGFpbD1cImRldGFpbFwiXG4gICAgICBAY2hhbmdlSXRlbXM9XCJjaGFuZ2VJdGVtc1wiXG4gICAgICBAY2hhbmdlUGxhY2U9XCJjaGFuZ2VQbGFjZVwiXG4gICAgLz5cblxuICAgIDx0ZW1wbGF0ZSB2LWlmPVwiaGFzTWFzdGVyQ2hlY2tpdGVtXCI+XG4gICAgICA8IS0tIOe8lui+keaooeW8jyAtLT5cbiAgICAgIDwhLS0ge3tkZXRhaWwubW9kZX19IC0tPlxuICAgICAgPHRlbXBsYXRlIHYtaWY9XCJkZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IGRldGFpbC5tb2RlID09PSAncmVlZGl0JyB8fCBkZXRhaWwubW9kZSA9PT0gJ3JlZG8nXCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICB2LWZvcj1cIihwcm9ibGVtLCBwcm9ibGVtSW5kZXgpIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiXG4gICAgICAgICAgOmtleT1cInByb2JsZW1JbmRleFwiXG4gICAgICAgICAgY2xhc3M9XCJwdDEwIGJnLXdoaXRlXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxpdGVtIGxhYmVsPVwi5a6e5rWL54K55pWwXCIgbW9kZT1cImVkaXRcIiBib3JkZXI9XCJub25lXCI+XG4gICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD1cInJpZ2h0XCI+XG4gICAgICAgICAgICAgIDxudW1iZXItaW5wdXRcbiAgICAgICAgICAgICAgICB2LW1vZGVsPVwicHJvYmxlbS5wb2ludE51bVwiXG4gICAgICAgICAgICAgICAgdHlwZT1cImludCBwb3NpdGl2ZVwiXG4gICAgICAgICAgICAgICAgOnJhbmdlPVwiWzEsIDk5OV1cIlxuICAgICAgICAgICAgICAgIEBibHVyPVwicG9pbnROdW1DaGFuZ2UocHJvYmxlbSlcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0IHBsNVwiPuS4qjwvZGl2PlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L2l0ZW0+XG5cbiAgICAgICAgICA8aXRlbSBsYWJlbD1cIueIhueCueaVsOWAvFwiIG1vZGU9XCJlZGl0XCIgYm9yZGVyPVwibm9uZVwiPlxuICAgICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tY29uXCIgc3R5bGU9XCJtYXJnaW4tcmlnaHQ6IC0xMHB4XCIgdi1pZj1cIiFkcmF3aW5nVXJsXCI+XG4gICAgICAgICAgICAgIDxudW1iZXItaW5wdXRcbiAgICAgICAgICAgICAgICB2LWZvcj1cIihwb2ludCwgcG9pbnRJbmRleCkgaW4gcHJvYmxlbS5yZWFsaXR5VmFsXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwicG9pbnRJbmRleFwiXG4gICAgICAgICAgICAgICAgcmVmPVwiZXhjZWVkLXBvaW50LWlucHV0XCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cIm1yMTAgbWIxMFwiXG4gICAgICAgICAgICAgICAgdi1tb2RlbD1cInBvaW50LnZhbFwiXG4gICAgICAgICAgICAgICAgOmRlY2ltYWw9XCIkc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWxcIlxuICAgICAgICAgICAgICAgIDpyYW5nZT1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2VcIlxuICAgICAgICAgICAgICAgIDpuZXh0LWV2ZW50PVwiKCkgPT4gYWRkRXhjZWVkVmFsKHByb2JsZW0pXCJcbiAgICAgICAgICAgICAgICBAYmx1cj1cInVwZGF0ZWRFeGNlZWRWYWwocHJvYmxlbSlcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGlcbiAgICAgICAgICAgICAgICAgIHNsb3Q9XCJleHRlbmRcIlxuICAgICAgICAgICAgICAgICAgdi1pZj1cInBvaW50SW5kZXggPT09IHByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGggLSAxXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaWNvbi1taW51c1wiXG4gICAgICAgICAgICAgICAgICBAY2xpY2suc3RvcD1cInJlbW92ZUV4Y2VlZFZhbChwcm9ibGVtKVwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9udW1iZXItaW5wdXQ+XG4gICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgdi1pZj1cInByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGggPCBwcm9ibGVtLnBvaW50TnVtXCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImljb24tcGx1c1wiXG4gICAgICAgICAgICAgICAgQGNsaWNrLnN0b3A9XCJhZGRFeGNlZWRWYWwocHJvYmxlbSlcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IHNsb3Q9XCJyaWdodFwiIGNsYXNzPVwiaXRlbS1jb25cIiB2LWVsc2U+XG4gICAgICAgICAgICAgIDxkaXYgdi1pZj1cInByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGhcIiBjbGFzcz1cIml0ZW0tZm9udFwiPlxuICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWZvcj1cIihwb2ludCwgcG9pbnRJbmRleCkgaW4gcHJvYmxlbS5yZWFsaXR5VmFsXCI+XG4gICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInBvaW50SW5kZXhcIj4sPC90ZW1wbGF0ZT57eyBwb2ludC52YWwgfX1cbiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tZm9udCBjb2xvci1ibHVlXCIgQGNsaWNrPVwibWFya0V4Y2VlZFZhbChwcm9ibGVtKVwiPlxuICAgICAgICAgICAgICAgIOWcqOaIt+Wei+Wbvuagh+iusFxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvaXRlbT5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPCEtLSDlkIjmoLznjofvvIzpgJrnn6XmlbTmlLkgLS0+XG4gICAgICAgIDxpdGVtIHYtaWY9XCJpbnB1dENvbXBsZXRlXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tZm9udFwiPuWQiOagvOeOhzwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHQgY29sb3ItdGhlbWUgcGw1XCI+XG4gICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9XCIocHJvYmxlbSwgcHJvYmxlbUluZGV4KSBpbiBkZXRhaWwucHJvYmxlbURhdGFcIj5cbiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJwcm9ibGVtSW5kZXhcIj4sPC90ZW1wbGF0ZT57eyBwcm9ibGVtLnBhc3NyYXRlIHwgcGVyY2VudCgyKSB9fVxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IHYtaWY9XCJkZXRhaWwubW9kZSA9PT0gJ2VkaXQnXCIgY2xhc3M9XCJpdGVtLWNvbiBhbGlnbi1yXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmVlZC1yZXBhaXJcIiBAY2xpY2s9XCJzZXROZWVkUmVwYWlyXCI+XG4gICAgICAgICAgICAgIDxpY29uXG4gICAgICAgICAgICAgICAgOm5hbWU9XCJkZXRhaWwubmVlZFJlcGFpciA/ICdjaGVja2JveC1zcXVhcmUtY2hlY2tlZCcgOiAnY2hlY2tib3gtc3F1YXJlJ1wiXG4gICAgICAgICAgICAgIC8+6YCa55+l5pW05pS5XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgIHYtaWY9XCJpbnB1dENvbXBsZXRlICYmIGRldGFpbC5uZWVkUmVwYWlyXCJcbiAgICAgICAgICB0aXRsZT1cIuaVtOaUueS6ulwiXG4gICAgICAgICAgYm9yZGVyPVwidG9wXCJcbiAgICAgICAgICB2LW1vZGVsPVwiZGV0YWlsLnJlcGFpclwiXG4gICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5yZXBhaXJPcHRpb25zXCJcbiAgICAgICAgICA6bWVtb3J5PVwidHJ1ZVwiXG4gICAgICAgICAgQG9uU2VsZWN0PVwib25TZWxlY3RSZXBhaXJcIlxuICAgICAgICAvPlxuICAgICAgPC90ZW1wbGF0ZT5cblxuICAgICAgPHRlbXBsYXRlIHYtaWY9XCJkZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IGRldGFpbC5tb2RlID09PSAncmVkbydcIj5cbiAgICAgICAgPGl0ZW0gY2xhc3M9XCJwMTUgbXQxMFwiPlxuICAgICAgICAgIDxpdGVtLWltZy1saXN0XG4gICAgICAgICAgICB2LW1vZGVsPVwiZGV0YWlsLmltZ1wiXG4gICAgICAgICAgICA6dHJhY2stdGV4dD1cIiflrp7mtYvlrp7ph48nXCJcbiAgICAgICAgICAgIDptYXhsZW5ndGg9XCI1MFwiXG4gICAgICAgICAgICBAY2FsbGJhY2s9XCJzYXZlUHJvYmxlbVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxpdGVtLXRleHRhcmVhXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZW1hcmtcIlxuICAgICAgICAgIGNsYXNzPVwiYm9yZGVyLXRiXCJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIuihpeWFheivtOaYjlwiXG4gICAgICAgICAgQGJsdXI9XCJzYXZlUHJvYmxlbVwiXG4gICAgICAgIC8+XG4gICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5tb2RlID09PSAnZWRpdCcgfHwgZGV0YWlsLm1vZGUgPT09ICdyZWRvJyB8fCBkZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCdcIj5cbiAgICAgICAgPHAgY2xhc3M9XCJjLWxhYmVsIG1iMTBcIj7or7fpgInmi6nmlr3lt6XljZXkvY08L3A+XG4gICAgICAgIDxzaW5nbGUtc2VsZWN0XG4gICAgICAgICAgdi1mb3I9XCJwcm9ibGVtIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiXG4gICAgICAgICAgOmtleT1cInByb2JsZW0uY2hlY2tJdGVtLmlkXCJcbiAgICAgICAgICA6dGl0bGU9XCJwcm9ibGVtLmNoZWNrSXRlbS5uYW1lXCJcbiAgICAgICAgICBwYWdlLXRpdGxlPVwi6YCJ5oup5pa95bel5Y2V5L2NXCJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIuivt+mAieaLqeaWveW3peWNleS9jVwiXG4gICAgICAgICAgdi1tb2RlbD1cInByb2JsZW0uY29udHJhY3RvclwiXG4gICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5jb250cmFjdG9yc1wiXG4gICAgICAgICAgOm1vZGU9XCJkZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IGRldGFpbC5tb2RlID09PSAncmVkbycgPyAnZWRpdCcgOiAndmlldydcIlxuICAgICAgICAgIEBvblNlbGVjdD1cInNhdmVQcm9ibGVtXCJcbiAgICAgICAgLz5cbiAgICAgIDwvdGVtcGxhdGU+XG5cbiAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICB2LWlmPVwiZGV0YWlsLm1vZGUgPT09ICdlZGl0JyB8fCBkZXRhaWwubW9kZSA9PT0gJ3JlZG8nXCJcbiAgICAgICAgdi1tb2RlbD1cImRldGFpbC5jY1wiXG4gICAgICAgIHRpdGxlPVwi5oqE6YCB5Lq6XCJcbiAgICAgICAgOm11bHRpPVwidHJ1ZVwiXG4gICAgICAgIDpvcHRpb25zPVwibW9kZWwuY2NPcHRpb25zXCJcbiAgICAgICAgOnJlcXVpcmVkPVwiZmFsc2VcIlxuICAgICAgICA6bWVtb3J5PVwidHJ1ZVwiXG4gICAgICAgIEBvblNlbGVjdD1cImNoYW5nZUNDXCJcbiAgICAgIC8+XG5cbiAgICAgIDwhLS0g57yW6L6R5qih5byPIGVuZCAtLT5cblxuICAgICAgPCEtLSDmn6XnnIvmqKHlvI8gLS0+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5tb2RlID09PSAndmlldydcIj5cbiAgICAgICAgPHByb2JsZW0tZGV0YWlsLWhlYWRlciA6c3RhdHVzPVwiZGV0YWlsLnN0YXR1c1wiIGNsYXNzPVwiYmctd2hpdGUgcHIwXCIgLz5cblxuICAgICAgICA8aXRlbVxuICAgICAgICAgIGxhYmVsPVwi5qCH5q61XCJcbiAgICAgICAgICA6dGV4dD1cImRldGFpbC5wbGFjZS5zZWN0aW9uLm5hbWUgKyAn77yIJyArIGRldGFpbC5wbGFjZS5wcm9qZWN0Lm5hbWUgKyAn77yJJ1wiXG4gICAgICAgIC8+XG5cbiAgICAgICAgPGRpdiB2LWZvcj1cIihwcm9ibGVtLCBwcm9ibGVtSW5kZXgpIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiIDprZXk9XCJwcm9ibGVtSW5kZXhcIj5cbiAgICAgICAgICA8aXRlbSBsYWJlbD1cIuWunua1i+eCuVwiIDp0ZXh0PVwicHJvYmxlbS5wb2ludE51bVwiIC8+XG5cbiAgICAgICAgICA8aXRlbSBsYWJlbD1cIuWQiOagvOeOh1wiPlxuICAgICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tdGV4dFwiPlxuICAgICAgICAgICAgICB7eyBwcm9ibGVtLnBhc3NyYXRlIHwgcGVyY2VudCgyKSB9fVxuICAgICAgICAgICAgICA8c3BhbiB2LWlmPVwiZHJhd2luZ1VybFwiIGNsYXNzPVwiY29sb3ItdGhlbWUgbWwxNVwiIEBjbGljaz1cInZpZXdIdXhpbmdcIj5cbiAgICAgICAgICAgICAgICB7eyBwcm9ibGVtLnJvb210eXBlX3R5cGUgfHwgJ+aIt+Wei+WbvicgfX1cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgICAgPGl0ZW0gdi1pZj1cInByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGhcIiBsYWJlbD1cIueIhueCueaVsOWAvFwiPlxuICAgICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tdGV4dFwiPlxuICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIHByb2JsZW0ucmVhbGl0eVZhbFwiPlxuICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwicG9pbnRJbmRleFwiPiw8L3RlbXBsYXRlPnt7IHBvaW50LnZhbCB9fVxuICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9pdGVtPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8IS0tIOS/ruaUueaVsOWAvCAtLT5cbiAgICAgICAgPGl0ZW1cbiAgICAgICAgICB2LWlmPVwiXG4gICAgICAgICAgICAoZGV0YWlsLmFsbG93UmVlZGl0ICYmIGRldGFpbC5tb2RlID09PSAndmlldycpIHx8XG4gICAgICAgICAgICAgIChkcmF3aW5nVXJsICYmIGRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGggPiAxKVxuICAgICAgICAgIFwiXG4gICAgICAgICAgbGFiZWw9XCJcIlxuICAgICAgICAgIGNsYXNzPVwicHQwIHBiMFwiXG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2IHNsb3Q9XCJyaWdodFwiIGNsYXNzPVwiaXRlbS10ZXh0XCI+XG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICB2LWlmPVwiZGV0YWlsLmFsbG93UmVlZGl0ICYmIGRldGFpbC5tb2RlID09PSAndmlldydcIlxuICAgICAgICAgICAgICBjbGFzcz1cImJ0bi1tb2RpZnlcIlxuICAgICAgICAgICAgICBAY2xpY2s9XCJjaGFuZ2VNb2RlKCdyZWVkaXQnKVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIOS/ruaUueaVsOWAvFxuICAgICAgICAgICAgICA8aWNvbiBuYW1lPVwiYXJyb3ctcmlnaHRcIiAvPlxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgdi1pZj1cImRyYXdpbmdVcmwgJiYgZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA+IDFcIlxuICAgICAgICAgICAgICBjbGFzcz1cImJ0bi1tb2RpZnlcIlxuICAgICAgICAgICAgICBAY2xpY2s9XCJ2aWV3SHV4aW5nXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3sgZGV0YWlsLnJvb210eXBlX3R5cGUgfX1cbiAgICAgICAgICAgICAgPGljb24gbmFtZT1cImFycm93LXJpZ2h0XCIgLz5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxpdGVtIHYtaWY9XCJkZXRhaWwucmVtYXJrIHx8IGRldGFpbC5pbWcubGVuZ3RoXCIgbGFiZWw9XCLooaXlhYXor7TmmI5cIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1jb25cIiBzbG90PVwicmlnaHRcIj5cbiAgICAgICAgICAgIDxkaXYgdi1pZj1cImRldGFpbC5yZW1hcmtcIiBjbGFzcz1cIml0ZW0tZm9udFwiPlxuICAgICAgICAgICAgICB7eyBkZXRhaWwucmVtYXJrIH19XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxpdGVtLWltZy1saXN0IHYtbW9kZWw9XCJkZXRhaWwuaW1nXCIgOmVkaXRhYmxlZD1cImZhbHNlXCIgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgIHRpdGxlPVwi5qOA5p+l5Lq6XCJcbiAgICAgICAgICBtb2RlPVwidmlld1wiXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZWdpc3RcIlxuICAgICAgICAgIDpkYXRlPVwiZm9ybWF0RGF0ZShkZXRhaWwucmVnaXN0X2RhdGUpXCJcbiAgICAgICAgICA6ZWRpdGFibGVkPVwiZmFsc2VcIlxuICAgICAgICAvPlxuXG4gICAgICAgIDwhLS0g5pW05pS55L+h5oGvIC0tPlxuICAgICAgICA8aXRlbVxuICAgICAgICAgIHYtaWY9XCJcbiAgICAgICAgICAgIChkZXRhaWwucmVwYWlyX3JlbWFyayB8fFxuICAgICAgICAgICAgICAoZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlICYmIGRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZS5sZW5ndGgpKSAmJlxuICAgICAgICAgICAgICBkZXRhaWwuc3RhdHVzICE9PSAn5b6F5pW05pS5J1xuICAgICAgICAgIFwiXG4gICAgICAgICAgbGFiZWw9XCLmlbTmlLnnhafniYdcIlxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tY29uXCIgc2xvdD1cInJpZ2h0XCI+XG4gICAgICAgICAgICA8ZGl2IHYtaWY9XCJkZXRhaWwucmVwYWlyX3JlbWFya1wiIGNsYXNzPVwiaXRlbS1mb250XCI+e3sgZGV0YWlsLnJlcGFpcl9yZW1hcmsgfX08L2Rpdj5cbiAgICAgICAgICAgIDxpdGVtLWltZy1saXN0XG4gICAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyX2ltYWdlX2ZpbGVcIlxuICAgICAgICAgICAgICA6ZWRpdGFibGVkPVwiZmFsc2VcIlxuICAgICAgICAgICAgICA6dHJhY2stdGV4dD1cIiflrp7mtYvlrp7ph48nXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cbiAgICAgICAgPCEtLSDmlbTmlLnkv6Hmga8gZW5kIC0tPlxuXG4gICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgIHYtaWY9XCJkZXRhaWwucmVwYWlyLmlkICYmIChkZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5JyB8fCBkZXRhaWwuc3RhdHVzID09PSAn5bey5pW05pS5JylcIlxuICAgICAgICAgIHRpdGxlPVwi5pW05pS55Lq6XCJcbiAgICAgICAgICBtb2RlPVwidmlld1wiXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJcIlxuICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwucmVwYWlyT3B0aW9uc1wiXG4gICAgICAgICAgOmRhdGU9XCJkZXRhaWwuc3RhdHVzID09PSAn5bey5pW05pS5JyA/IGZvcm1hdERhdGUoZGV0YWlsLnJlcGFpcl9kYXRlKSA6ICcnXCJcbiAgICAgICAgICA6ZWRpdGFibGVkPVwiKGRldGFpbC5pc0NoZWNrZXIgfHwgZGV0YWlsLmlzUmVwYWlyKSAmJiBkZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5J1wiXG4gICAgICAgICAgQG9uU2VsZWN0PVwib25TZWxlY3RSZXBhaXJcIlxuICAgICAgICAgIDpiZWZvcmUtc2VsZWN0PVwiYmVmb3JlU2VsZWN0UmVwYWlyXCJcbiAgICAgICAgLz5cblxuICAgICAgICA8aXRlbSB2LWlmPVwiZGV0YWlsLmlzUmVwYWlyICYmIGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknXCIgbGFiZWw9XCLmlbTmlLnnhafniYdcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1jb25cIiBzbG90PVwicmlnaHRcIj5cbiAgICAgICAgICAgIDxpdGVtLWltZy1saXN0XG4gICAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyX2ltYWdlX2ZpbGVcIlxuICAgICAgICAgICAgICA6bWF4bGVuZ3RoPVwiNTBcIlxuICAgICAgICAgICAgICA6dHJhY2stdGV4dD1cIiflrp7mtYvlrp7ph48nXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cblxuICAgICAgICA8aXRlbS10ZXh0YXJlYVxuICAgICAgICAgIHYtaWY9XCJkZXRhaWwuaXNSZXBhaXIgJiYgZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuSdcIlxuICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyX3JlbWFya1wiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCLooaXlhYXor7TmmI5cIlxuICAgICAgICAgIGNsYXNzPVwiYm9yZGVyLXRiXCJcbiAgICAgICAgLz5cblxuICAgICAgICA8aXRlbSB2LWlmPVwiaGFzQ29udHJhY3RvclwiIGxhYmVsPVwi5pa95bel5Y2V5L2NXCI+XG4gICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tdGV4dFwiPlxuICAgICAgICAgICAgPHAgdi1mb3I9XCJwcm9ibGVtIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiIDprZXk9XCJwcm9ibGVtLmlkXCI+XG4gICAgICAgICAgICAgIHt7IHByb2JsZW0uY29udHJhY3RvciA/IHByb2JsZW0uY29udHJhY3Rvci5uYW1lIDogJycgfX1cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgIHRpdGxlPVwi5oqE6YCB5Lq6XCJcbiAgICAgICAgICBtb2RlPVwidmlld1wiXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5jY1wiXG4gICAgICAgICAgOm11bHRpPVwidHJ1ZVwiXG4gICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5jY09wdGlvbnNcIlxuICAgICAgICAgIDplZGl0YWJsZWQ9XCJkZXRhaWwuc3RhdHVzICE9PSAn5bey5pW05pS5J1wiXG4gICAgICAgICAgQG9uU2VsZWN0PVwiY2hhbmdlQ0NcIlxuICAgICAgICAvPlxuICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDwhLS0g5p+l55yL5qih5byPIGVuZCAtLT5cblxuICAgICAgPCEtLSDmo4Dmn6Xlrozmr5XvvIzmnInniIbngrnvvIzlj6/ku6XpgJrnn6XmlbTmlLkgLS0+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5zdGF0dXMgPT09ICfmo4Dmn6Xlrozmr5UnICYmIGRldGFpbC5tb2RlID09PSAndmlldydcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm5lZWQtcmVwYWlyLWJvdHRvbVwiIEBjbGljaz1cInNldE5lZWRSZXBhaXJcIj5cbiAgICAgICAgICA8aWNvbiA6bmFtZT1cImRldGFpbC5uZWVkUmVwYWlyID8gJ2NoZWNrYm94LXNxdWFyZS1jaGVja2VkJyA6ICdjaGVja2JveC1zcXVhcmUnXCIgLz7pgJrnn6XmlbTmlLlcbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHVzZXItc2VsZWN0XG4gICAgICAgICAgdi1pZj1cImRldGFpbC5uZWVkUmVwYWlyXCJcbiAgICAgICAgICB0aXRsZT1cIuaVtOaUueS6ulwiXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJcIlxuICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwucmVwYWlyT3B0aW9uc1wiXG4gICAgICAgICAgOm1lbW9yeT1cInRydWVcIlxuICAgICAgICAvPlxuXG4gICAgICAgIDxhcHAtYnV0dG9uLWdyb3VwIHYtaWY9XCJkZXRhaWwubmVlZFJlcGFpclwiIGNsYXNzPVwicHQxMFwiPlxuICAgICAgICAgIDxhcHAtYnV0dG9uIEBjbGljaz1cInNldFJlcGFpclwiIG5hbWU9XCLpgJrnn6XmlbTmlLlcIiAvPlxuICAgICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgICAgPCEtLSDpgJrnn6XmlbTmlLkgZW5kIC0tPlxuXG4gICAgICA8IS0tIOWIoOmZpOiNieeovyAtLT5cbiAgICAgIDxhcHAtYnV0dG9uLWdyb3VwIHYtaWY9XCJkZXRhaWwuaWQgJiYgZGV0YWlsLnN0YXR1cyA9PT0gJ+ajgOafpeS4rSdcIj5cbiAgICAgICAgPGFwcC1idXR0b24gdHlwZT1cInRleHRcIiBAY2xpY2s9XCJkZWxQcm9ibGVtXCIgbmFtZT1cIuWIoOmZpOatpOiNieeov1wiIC8+XG4gICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgICA8IS0tIOWIoOmZpOiNieeovyBlbmQgLS0+XG5cbiAgICAgIDxhcHAtYnV0dG9uLWdyb3VwXG4gICAgICAgIHYtaWY9XCJcbiAgICAgICAgICBkZXRhaWwuc3RhdHVzICE9PSAn5qOA5p+l5LitJyAmJlxuICAgICAgICAgICAgZGV0YWlsLm1vZGUgPT09ICd2aWV3JyAmJlxuICAgICAgICAgICAgIWFsbG93TWVhc3VyZVJlaW5zcGVjdCAmJlxuICAgICAgICAgICAgbW9kZWwuY3VycmVudFVzZXJCYXRjaElkID09PSBkZXRhaWwuYmF0Y2hfaWRcbiAgICAgICAgXCJcbiAgICAgID5cbiAgICAgICAgPGFwcC1idXR0b24gdHlwZT1cIm9wZXJhdGVcIiBAY2xpY2s9XCJzZXRSZWRvXCIgbmFtZT1cIuWGjea1i+S4gOasoVwiIC8+XG4gICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgPC90ZW1wbGF0ZT5cblxuICAgIDxsb2FkaW5nLXN0YXR1cyA6aXMtbG9hZGluZz1cImZhbHNlXCIgOmlzLWVtcHR5PVwiIWhhc01hc3RlckNoZWNraXRlbVwiIGVtcHR5LXRleHQ9XCLor7fpgInmi6nmo4Dmn6XpoblcIiAvPlxuICA8L3Njcm9sbGVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBTY3JvbGxlciBmcm9tICdAY29tcG9uZW50cy9zY3JvbGxlcic7XG5pbXBvcnQgSXRlbSBmcm9tICdAY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgTWVhc3VyZURldGFpbFBsYWNlQ2hlY2tpdGVtIGZyb20gJy4vZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWUnO1xuaW1wb3J0IEl0ZW1JbWdMaXN0IGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtLWltZy1saXN0JztcbmltcG9ydCBOdW1iZXJJbnB1dCBmcm9tICdAY29tcG9uZW50cy9udW1iZXItaW5wdXQvaW5kZXgudnVlJztcbmltcG9ydCBVc2VyU2VsZWN0IGZyb20gJ0Bjb21wb25lbnRzL3VzZXItc2VsZWN0JztcbmltcG9ydCBJdGVtVGV4dGFyZWEgZnJvbSAnQGNvbXBvbmVudHMvaXRlbS10ZXh0YXJlYSc7XG5pbXBvcnQgU2luZ2xlU2VsZWN0IGZyb20gJ0Bjb21wb25lbnRzL3NpbmdsZS1zZWxlY3QnO1xuaW1wb3J0IFByb2JsZW1EZXRhaWxIZWFkZXIgZnJvbSAnQHNyYy93aWRnZXQvcHJvYmxlbS1kZXRhaWwtaGVhZGVyJztcblxuaW1wb3J0IFBvcHVwIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAnO1xuaW1wb3J0IE1lYXN1cmVEZXRhaWxNb2RlbCBmcm9tICdAc3JjL21vZGFsL21lYXN1cmUvZGV0YWlsLW1vZGVsLmpzJztcbmltcG9ydCBNZWFzdXJlU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvbWVhc3VyZS9jb21tb24tc2VydmljZSc7XG5pbXBvcnQgRHJhd2luZ1dpdGhQb2ludCBmcm9tICcuL2RyYXdpbmctd2l0aC1wb2ludC5qcyc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgQ29tbW9uQ2hlY2tJdGVtU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2NoZWNrLWl0ZW0tc2VydmljZSc7XG5pbXBvcnQgVGFsa2luZ0RhdGFTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vdGFsa2luZy1kYXRhLXNlcnZpY2UnO1xuaW1wb3J0IHJvdXRlciBmcm9tICdAcm91dGVyJztcbmltcG9ydCBkZXRhaWxUZW1wbGF0ZU1peGluIGZyb20gJy4vZGV0YWlsLXRlbXBsYXRlLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnTWVhc3VyZURldGFpbFRlbXBsYXRlMScsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBTY3JvbGxlcixcbiAgICBJdGVtLFxuICAgIE1lYXN1cmVEZXRhaWxQbGFjZUNoZWNraXRlbSxcbiAgICBJdGVtSW1nTGlzdCxcbiAgICBOdW1iZXJJbnB1dCxcbiAgICBVc2VyU2VsZWN0LFxuICAgIEl0ZW1UZXh0YXJlYSxcbiAgICBQcm9ibGVtRGV0YWlsSGVhZGVyLFxuICAgIFNpbmdsZVNlbGVjdCxcbiAgfSxcbiAgbWl4aW5zOiBbZGV0YWlsVGVtcGxhdGVNaXhpbl0sXG4gIHByb3BzOiB7XG4gICAgZGV0YWlsOiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7fSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBtb2RlbDogTWVhc3VyZURldGFpbE1vZGVsLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgbWFzdGVyQ2hlY2tpdGVtKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuZGV0YWlsTWFzdGVyQ2hlY2tpdGVtO1xuICAgIH0sXG4gICAgaGFzTWFzdGVyQ2hlY2tpdGVtKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWFzdGVyQ2hlY2tpdGVtICYmIHRoaXMubWFzdGVyQ2hlY2tpdGVtLmxlbmd0aDtcbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZm9ybWF0RGF0ZShkYXRlLCB0ZW1wID0gJ1lZWVktTU0tREQgSEg6bW0nKSB7XG4gICAgICByZXR1cm4gbW9tZW50KGRhdGUpLmZvcm1hdCh0ZW1wKTtcbiAgICB9LFxuXG4gICAgcG9pbnROdW1DaGFuZ2UocHJvYmxlbSkge1xuICAgICAgaWYgKHByb2JsZW0ucG9pbnROdW0gPCBwcm9ibGVtLnJlYWxpdHlWYWwubGVuZ3RoKSB7XG4gICAgICAgIHByb2JsZW0ucmVhbGl0eVZhbC5zcGxpY2UocHJvYmxlbS5wb2ludE51bSwgcHJvYmxlbS5yZWFsaXR5VmFsLmxlbmd0aCAtIDEpO1xuICAgICAgfVxuICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnBvaW50c0hhbmRsZShwcm9ibGVtKTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wcm9ibGVtSGFuZGxlKHByb2JsZW0pO1xuXG4gICAgICB0aGlzLnNhdmVQcm9ibGVtKCk7XG4gICAgfSxcblxuICAgIC8vIOa3u+WKoOeIhueCuVxuICAgIGFkZEV4Y2VlZFZhbChwcm9ibGVtKSB7XG4gICAgICBpZiAocHJvYmxlbS5yZWFsaXR5VmFsLmxlbmd0aCA+PSBwcm9ibGVtLnBvaW50TnVtKSB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCfniIbngrnkuKrmlbDkuI3og73lpKfkuo7lrp7mtYvngrnmlbAnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBwcm9ibGVtLnJlYWxpdHlWYWwucHVzaCh7IHZhbDogJycgfSk7XG5cbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2V4Y2VlZC1wb2ludC1pbnB1dCA9PT09PScsIHRoaXMuJHJlZnNbJ2V4Y2VlZC1wb2ludC1pbnB1dCddKTtcblxuICAgICAgICBsZXQgYWxsSW5wdXQgPSB0aGlzLiRyZWZzWydleGNlZWQtcG9pbnQtaW5wdXQnXTtcbiAgICAgICAgbGV0IGxhc3RJbnB1dCA9IGFsbElucHV0ICYmIGFsbElucHV0W2FsbElucHV0Lmxlbmd0aCAtIDFdO1xuXG4gICAgICAgIGlmIChsYXN0SW5wdXQpIHtcbiAgICAgICAgICBsYXN0SW5wdXQub3BlbktleWJvYXJkKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgLy8g56e76Zmk54iG54K5XG4gICAgcmVtb3ZlRXhjZWVkVmFsKHByb2JsZW0pIHtcbiAgICAgIHByb2JsZW0ucmVhbGl0eVZhbC5wb3AoKTtcblxuICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnBvaW50c0hhbmRsZShwcm9ibGVtKTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wcm9ibGVtSGFuZGxlKHByb2JsZW0pO1xuXG4gICAgICB0aGlzLnNhdmVQcm9ibGVtKCk7XG4gICAgfSxcbiAgICAvLyDmm7TmlrDniIbngrlcbiAgICB1cGRhdGVkRXhjZWVkVmFsKHByb2JsZW0pIHtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wb2ludHNIYW5kbGUocHJvYmxlbSk7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcblxuICAgICAgdGhpcy5zYXZlUHJvYmxlbSgpO1xuICAgIH0sXG5cbiAgICAvLyDmoIforrDmiLflnovlm75cbiAgICBtYXJrRXhjZWVkVmFsKHByb2JsZW0pIHtcbiAgICAgIERyYXdpbmdXaXRoUG9pbnQub3BlblBvcHVwKHtcbiAgICAgICAgbW9kZTogJ2VkaXQnLFxuICAgICAgICB1cmw6IHRoaXMuZHJhd2luZ1VybCxcbiAgICAgICAgcG9pbnRzOiBwcm9ibGVtLnJlYWxpdHlWYWwgfHwgW10sXG4gICAgICAgIG1heE1hcmtzOiBwcm9ibGVtLnBvaW50TnVtLFxuICAgICAgICBjYWxsYmFjazogcmVzID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnbWFya0V4Y2VlZFZhbCByZXMgPT09PT0nLCByZXMpO1xuXG4gICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgXy5lYWNoKHJlcywgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgICAgICAgcG9pbnQuaXNFeGNlZWQgPSB0cnVlO1xuICAgICAgICAgICAgICBwb2ludC5pc1F1YWxpZmllZCA9IGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxldCBsZW5ndGggPSBwcm9ibGVtLnJlYWxpdHlWYWwubGVuZ3RoO1xuICAgICAgICAgICAgcHJvYmxlbS5yZWFsaXR5VmFsLnNwbGljZSgwLCBsZW5ndGgsIC4uLnJlcyk7XG5cbiAgICAgICAgICAgIC8vIE1lYXN1cmVEZXRhaWxNb2RlbC5wb2ludHNIYW5kbGUocHJvYmxlbSk7XG4gICAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcblxuICAgICAgICAgICAgdGhpcy5zYXZlUHJvYmxlbSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdmlld0h1eGluZygpIHtcbiAgICAgIGxldCB2aWV3UG9pbnRzID0gW107XG5cbiAgICAgIGlmICghdGhpcy5kcmF3aW5nVXJsKSB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCdQQ+err+acquiuvue9ruaIt+Wei+WbvicpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF8uZWFjaCh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIHZpZXdQb2ludHMgPSBfLmNsb25lKHByb2JsZW0ucmVhbGl0eVZhbCk7XG4gICAgICB9KTtcblxuICAgICAgRHJhd2luZ1dpdGhQb2ludC5vcGVuUG9wdXAoe1xuICAgICAgICBtb2RlOiAndmlldycsXG4gICAgICAgIHVybDogdGhpcy5kcmF3aW5nVXJsLFxuICAgICAgICBwb2ludHM6IHZpZXdQb2ludHMsXG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6K6+572u6YCa55+l5pW05pS5XG4gICAgc2V0TmVlZFJlcGFpcigpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbCxcbiAgICAgICAgcGxhY2UgPSB0aGlzLm1vZGVsLnBsYWNlLFxuICAgICAgICBpdGVtID0gdGhpcy5tYXN0ZXJDaGVja2l0ZW1bMF0sXG4gICAgICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIGRldGFpbC5uZWVkUmVwYWlyID0gIWRldGFpbC5uZWVkUmVwYWlyO1xuXG4gICAgICAvLyDliKTmlq3lsZ7mgKfmmK/lkKbooqvop4Llr5/jgILpnZ7luLjns5/ns5XnmoTlgZrms5XvvIzlupTor6XkuovlhYjmiorlk43lupTlvI/mlbDmja7mj5Dlj5blh7rmnaVcbiAgICAgIGlmICghXy5pc09iamVjdChkZXRhaWwucmVwYWlyLl9fb2JfXykpIHtcbiAgICAgICAgbGV0IHJlcGFpciA9IF8uY2xvbmUoZGV0YWlsLnJlcGFpcik7XG4gICAgICAgIGRlbGV0ZSBkZXRhaWwucmVwYWlyO1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5kZXRhaWwsICdyZXBhaXInLCByZXBhaXIpO1xuICAgICAgfVxuICAgICAgaWYgKChkZXRhaWwubmVlZFJlcGFpciAmJiBfLmlzRW1wdHkoZGV0YWlsLnJlcGFpcikpIHx8ICFkZXRhaWwucmVwYWlyLmlkKSB7XG4gICAgICAgIHByb21pc2UgPSBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldEJpZFNlY3Rpb25DaGVja0l0ZW1JbmZvKFxuICAgICAgICAgIGRldGFpbC5wcm9qX2lkLFxuICAgICAgICAgIHBsYWNlLnNlY3Rpb24uaWQsXG4gICAgICAgICAgaXRlbS5pZCxcbiAgICAgICAgICAn5a6e5rWL5a6e6YePJ1xuICAgICAgICApXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgbGV0IHJlcGFpciA9IGl0ZW0ucmVwYWlyWzBdIHx8IHt9O1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihkZXRhaWwucmVwYWlyLCByZXBhaXIpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgVGFsa2luZ0RhdGFTZXJ2aWNlLmFkZFRyYWNrKCflrp7mtYvlrp7ph48t6YCa55+l5pW05pS5Jyk7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBwcm9taXNlXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAvLyDop6PlhrPku6Plip7ov5vmnaXkuI3liLfmlrBcbiAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgdGhpcy5iZWZvcmVTZWxlY3RSZXBhaXIoKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGlzUHJvYmxlbUV4aXN0cygpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbDtcbiAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5pc1Byb2JsZW1FeGlzdHMoZGV0YWlsLmlkKS50aGVuKGV4aXN0cyA9PiB7XG4gICAgICAgIGlmICghZXhpc3RzKSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoJ+aVsOaNruacieabtOaWsCcpO1xuICAgICAgICAgIHJvdXRlci5nbygtMSk7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHsgbWdzOiAn6Zeu6aKY5LiN5a2Y5ZyoJywgY29kZTogLTEgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgYmVmb3JlU2VsZWN0UmVwYWlyKCkge1xuICAgICAgbGV0IGRldGFpbCA9IHRoaXMuZGV0YWlsLFxuICAgICAgICBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgICAgaWYgKGRldGFpbC5tb2RlID09PSAndmlldycpIHtcbiAgICAgICAgcHJvbWlzZSA9IHRoaXMuaXNQcm9ibGVtRXhpc3RzKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9LFxuICAgIG9uU2VsZWN0UmVwYWlyKCkge1xuICAgICAgaWYgKHRoaXMuZGV0YWlsLm1vZGUgIT09ICdyZWVkaXQnICYmIHRoaXMuZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScpIHtcbiAgICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmNoYW5nZVJlcGFpcih0aGlzLmRldGFpbClcbiAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZWxvYWREZXRhaWwoKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNoYW5nZU1vZGUobW9kZSkge1xuICAgICAgdGhpcy5pc1Byb2JsZW1FeGlzdHMoKS50aGVuKCgpID0+IHtcbiAgICAgICAgUG9wdXAuY29uZmlybSgn5LuK5aSpMjQ6MDDliY3lj6/kv67mlLnvvIzmmK/lkKbnjrDlnKjkv67mlLnvvJ8nLCB7IG9rVGV4dDogJ+S/ruaUuScgfSkudGhlbihpc09rID0+IHtcbiAgICAgICAgICBpZiAoaXNPaykge1xuICAgICAgICAgICAgdGhpcy5kZXRhaWwubW9kZSA9IG1vZGU7XG4gICAgICAgICAgICB0aGlzLmRldGFpbC5uZWVkUmVwYWlyID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLiRyZWZzWydzY3JvbGxlciddLnNjcm9sbFRvcCA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBjaGVja1N1Ym1pdERhdGEoKSB7XG4gICAgICBsZXQgZGV0YWlsID0gdGhpcy5kZXRhaWw7XG4gICAgICBsZXQgaGFzRW1wdHlQb2ludE51bSA9IF8uc29tZShkZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIHByb2JsZW0ucG9pbnROdW0gPT09ICcnIHx8IHByb2JsZW0ucG9pbnROdW0gPT09IG51bGwgfHwgcHJvYmxlbS5wb2ludE51bSA9PT0gdW5kZWZpbmVkXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGhhc0VtcHR5UG9pbnROdW0pIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+Whq+WGmeWunua1i+eCueaVsCcpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIOajgOafpeaVtOaUueS6uuaYr+WQpumAieaLqVxuICAgICAgaWYgKFxuICAgICAgICAoZGV0YWlsLm5lZWRSZXBhaXIgfHwgZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScpICYmXG4gICAgICAgIChfLmlzRW1wdHkoZGV0YWlsLnJlcGFpcikgfHwgIWRldGFpbC5yZXBhaXIuaWQpXG4gICAgICApIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+mAieaLqeaVtOaUueS6uicpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGxldCBjb25zdHJhY3RvclJlcXVpcmVkID0gXy5maW5kKGRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIHJldHVybiBfLmlzRW1wdHkocHJvYmxlbS5jb250cmFjdG9yKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoY29uc3RyYWN0b3JSZXF1aXJlZCkge1xuICAgICAgICBQb3B1cC5hbGVydCgn6K+36YCJ5oup5pa95bel5Y2V5L2NJyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG5cbiAgICAvLyDpgJrnn6XmlbTmlLlcbiAgICBzZXRSZXBhaXIoKSB7XG4gICAgICBsZXQgZGV0YWlsID0gXy5jbG9uZSh0aGlzLmRldGFpbCk7XG5cbiAgICAgIGlmIChfLmlzRW1wdHkoZGV0YWlsLnJlcGFpcikgfHwgIWRldGFpbC5yZXBhaXIuaWQpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+mAieaLqeaVtOaUueS6uicpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5zZXRSZXBhaXIoZGV0YWlsKS50aGVuKCgpID0+IHtcbiAgICAgICAgdGhpcy5yZWxvYWREZXRhaWwoKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDph43mlrDliqDovb3pl67popjor6bmg4VcbiAgICByZWxvYWREZXRhaWwoKSB7XG4gICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LnByb2JsZW1JZCkge1xuICAgICAgICAgIHJldHVybiBNZWFzdXJlRGV0YWlsTW9kZWwubG9hZERldGFpbEJ5SWQodGhpcy4kcm91dGUucXVlcnkucHJvYmxlbUlkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gTWVhc3VyZURldGFpbE1vZGVsLmxvYWREZXRhaWxCeUlkZW50aXR5KE1lYXN1cmVEZXRhaWxNb2RlbC50YWJzSWRlbnRpdHkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uaWNvbi1wbHVzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGJvcmRlcjogMS41cHggc29saWQgJHRoZW1lQ29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG4uaWNvbi1wbHVzOjpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA0cHg7XG4gIHRvcDogMTIuNzVweDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMS41cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICR0aGVtZUNvbG9yO1xufVxuLmljb24tcGx1czo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxMi43NXB4O1xuICB0b3A6IDRweDtcbiAgd2lkdGg6IDEuNXB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICR0aGVtZUNvbG9yO1xufVxuXG4uYnRuLW1vZGlmeSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgaGVpZ2h0OiAyNXB4O1xuICBsaW5lLWhlaWdodDogMjVweDtcbiAgcGFkZGluZzogMCA4cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjOGQyZjY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYmYxZmY7XG4gIGNvbG9yOiAjN2E5NWQxO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cbi5idG4tbW9kaWZ5IC5pY29uLWFycm93LXJpZ2h0IHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4ubmVlZC1yZXBhaXIge1xuICBoZWlnaHQ6IDM0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBwYWRkaW5nOiA4cHggMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogIzMzMztcbn1cbi5uZWVkLXJlcGFpciAuaWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgbWFyZ2luLXJpZ2h0OiA3cHg7XG59XG4ubmVlZC1yZXBhaXItYm90dG9tIHtcbiAgaGVpZ2h0OiA0NnB4O1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgcGFkZGluZzogMTRweCAxNXB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjNjY2O1xufVxuLm5lZWQtcmVwYWlyLWJvdHRvbSAuaWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgbWFyZ2luLXJpZ2h0OiA3cHg7XG59XG4uYy1sYWJlbCB7XG4gIGNvbG9yOiAjOTk5O1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAxN3B4O1xuICBwYWRkaW5nOiAxNHB4IDE1cHggOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xufVxuPC9zdHlsZT5cbiIsInZhciBlc2NhcGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL3VybC9lc2NhcGUuanNcIik7XG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAuZHJhd2luZy1jb25bZGF0YS12LWZiYTU5OTBhXXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2hlaWdodDoxMDAlO2ZvbnQtc2l6ZTowO2xpbmUtaGVpZ2h0OjB9LnpqYXBwIC5kcmF3aW5nLWNvbiBjYW52YXNbZGF0YS12LWZiYTU5OTBhXXtkaXNwbGF5OmJsb2NrO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7YmFja2dyb3VuZDp1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIkBzcmMvYXNzZXRzL2ltZy9kaWFncmFtLWJnLnBuZ1wiKSkgKyBcIikgI2ZmZjtiYWNrZ3JvdW5kLXNpemU6NHB4IDRweH0uemphcHAgLmxvYWRpbmctdGV4dFtkYXRhLXYtZmJhNTk5MGFde21hcmdpbi10b3A6MTVweDtjb2xvcjojYWFhfS56amFwcCAuZXJyb3ItdGV4dFtkYXRhLXYtZmJhNTk5MGFdLC56amFwcCAubG9hZGluZy10ZXh0W2RhdGEtdi1mYmE1OTkwYV17cGFkZGluZzowIDE1cHg7bGluZS1oZWlnaHQ6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTZweH0uemphcHAgLmVycm9yLXRleHRbZGF0YS12LWZiYTU5OTBhXXtjb2xvcjojZmYzZDNkfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2RldGFpbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDMwNDJmMGQmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NDMwNDJmMGQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNDMwNDJmMGRcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNsaWRlLXJpZ2h0XCJ9fSxbKF92bS5zaG93KT9fYygncGFnZS1jb250ZW50Jyx7Y2xhc3M6eyAnY29udGVudC1ub3QtZW1wdHknOiBfdm0uY29udGVudC5sZW5ndGggfSxhdHRyczp7XCJtb2RlXCI6XCJkaWFsb2dcIixcInRpdGxlXCI6XCLmo4Dmn6XmjIflvJVcIixcIm9uLWNsb3NlXCI6X3ZtLmNsb3NlUG9wdXB9fSxbKCFfdm0uaXNMb2FkaW5nKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjaGVjay1ndWlkZS1kZXRhaWwtaGQgYm9yZGVyLWJvdHRvbVwifSxbX2MoJ2gyJyx7c3RhdGljQ2xhc3M6XCJjaGVjay1ndWlkZS1kZXRhaWwtdGl0bGUgcGIxMFwifSxbX3ZtLl92KF92bS5fcyhfdm0udGl0bGUpKV0pXSk6X3ZtLl9lKCksKCFfdm0uaXNMb2FkaW5nICYmIF92bS5jb250ZW50Lmxlbmd0aCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY2hlY2stZ3VpZGUtZGV0YWlsLWNvbnRlbnRcIn0sX3ZtLl9sKChfdm0uY29udGVudCksZnVuY3Rpb24oaXRlbSxrZXkpe3JldHVybiBfYygncCcse2tleTprZXl9LFsoaXRlbS5pc0ltZyAmJiBpdGVtLnNyYyk/X2MoJ2ltZycse2NsYXNzOnsgJ2ltZy1ub3QtcmVhZHknOiAhaXRlbS5yZWFkeSwgZXJyb3I6IGl0ZW0uc3RhdHVzID09PSAncmVqZWN0ZWQnIH0sYXR0cnM6e1wic3JjXCI6X3ZtLmdldFRodW1ibmFpbChpdGVtKX0sb246e1wiZXJyb3JcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pbWdFcnJvcihpdGVtLCBrZXkpfSxcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uaW1nQ2xpY2soaXRlbSl9fX0pOl92bS5fZSgpLCghaXRlbS5pc0ltZyk/X2MoJ3NwYW4nLFtfdm0uX3YoXCJcXG4gICAgICAgICAgXCIrX3ZtLl9zKGl0ZW0udmFsKStcIlxcbiAgICAgICAgXCIpXSk6X3ZtLl9lKCldKX0pKTpfdm0uX2UoKSxfYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1sb2FkaW5nXCI6X3ZtLmlzTG9hZGluZyxcImlzLWVtcHR5XCI6IV92bS5jb250ZW50Lmxlbmd0aCxcImVtcHR5LXRleHRcIjpcIlBD56uv5pyq6K6+572u5qOA5p+l5oyH5byVXCJ9fSldLDEpOl92bS5fZSgpXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnO1xuaW1wb3J0IGRpYWxvZyBmcm9tICcuL2RldGFpbC52dWUnO1xuXG5sZXQgaW5zdGFuY2UgPSBmYWxzZTtcblxuaWYgKCFpbnN0YW5jZSkge1xuICBsZXQgRGlhbG9nQ29tcG9uZW50ID0gVnVlLmV4dGVuZChkaWFsb2cpO1xuICBpbnN0YW5jZSA9IG5ldyBEaWFsb2dDb21wb25lbnQoe1xuICAgIGVsOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgfSk7XG5cbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnN0YW5jZS4kZWwpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnN0YW5jZTtcbiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RyYXdpbmctd2l0aC1wb2ludC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03MWNlN2ZlYyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjFiZThjODc2XCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLml0ZW0tdGV4dGFyZWF7YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6NXB4IDE1cHh9LnpqYXBwIC5pdGVtLXRleHRhcmVhLWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmV9LnpqYXBwIC5pdGVtLXRleHRhcmVhIC5ydWxlLC56amFwcCAuaXRlbS10ZXh0YXJlYSB0ZXh0YXJlYXt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6NDBweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNnB4O3BhZGRpbmc6MDtib3JkZXI6bm9uZX0uemphcHAgLml0ZW0tdGV4dGFyZWEgLnJ1bGV7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3Zpc2liaWxpdHk6aGlkZGVuO3dvcmQtYnJlYWs6YnJlYWstYWxsfS56amFwcCAuaXRlbS10ZXh0YXJlYSAuY291bnRlcnt0ZXh0LWFsaWduOnJpZ2h0O21hcmdpbjowIDAgLTVweCAwO2hlaWdodDoxNXB4O2xpbmUtaGVpZ2h0OjE1cHg7Y29sb3I6I2IyYjJiMjtmb250LXNpemU6MTJweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtdGVtcGxhdGUtMy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD01YzZjYWFjMCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjRhNjE2Zjg0XCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2l0ZW0nLHtjbGFzczpfdm0ucmVxdWlyZWQsYXR0cnM6e1wibGFiZWxcIjpfdm0udGl0bGUsXCJ0ZXh0XCI6X3ZtLnZhbHVlICYmIF92bS52YWx1ZS5pZCA/IF92bS52YWx1ZS5uYW1lIDogX3ZtLm1vZGUgPT09ICd2aWV3JyA/ICfml6AnIDogJycsXCJtb2RlXCI6X3ZtLm1vZGUsXCJlZGl0YWJsZWRcIjpfdm0uZWRpdGFibGVkLFwicGxhY2Vob2xkZXJcIjpfdm0ucmVxdWlyZWQgPyBfdm0ucGxhY2Vob2xkZXIgfHwgJ+ivt+mAieaLqScgOiAn6YCJ5aGrJyxcImZvcm0tY2hlY2tcIjpfdm0uZm9ybUNoZWNrfSxvbjp7XCJjbGlja1wiOl92bS5vcGVuU2VsZWN0fX0pfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAyZDBiZThlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1kYmQ4N2VmMiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1iZTA3Y2Q5YyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjQ1YTBmMjBjXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLmNvbnRlbnQtbm90LWVtcHR5W2RhdGEtdi00MzA0MmYwZF0gLmxheW91dC1jb250ZW50e2Rpc3BsYXk6YXV0bztvdmVyZmxvdzphdXRvO3BhZGRpbmctYm90dG9tOjEwMHB4fS56amFwcCAuY2hlY2stZ3VpZGUtZGV0YWlsLWhkW2RhdGEtdi00MzA0MmYwZF17bWFyZ2luLWxlZnQ6MzBweDtwYWRkaW5nOjI1cHggMzBweCA1cHggMH0uemphcHAgLmNoZWNrLWd1aWRlLWRldGFpbC10aXRsZVtkYXRhLXYtNDMwNDJmMGRde21hcmdpbjowO2xpbmUtaGVpZ2h0OjIwcHg7Zm9udC1zaXplOjE4cHg7Y29sb3I6IzExMTtmb250LXdlaWdodDo3MDA7d29yZC1icmVhazpicmVhay1hbGx9LnpqYXBwIC5jaGVjay1ndWlkZS1kZXRhaWwtaW5mb1tkYXRhLXYtNDMwNDJmMGRde2xpbmUtaGVpZ2h0OjIwcHg7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzhjOGM4Y30uemphcHAgLmNoZWNrLWd1aWRlLWRldGFpbC1jb250ZW50W2RhdGEtdi00MzA0MmYwZF17cGFkZGluZzozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Y29sb3I6IzMzMztmb250LXNpemU6MTZweH0uemphcHAgLmNoZWNrLWd1aWRlLWRldGFpbC1jb250ZW50IHBbZGF0YS12LTQzMDQyZjBkXXttYXJnaW4tYm90dG9tOjMwcHg7bWluLWhlaWdodDoxZW19LnpqYXBwIC5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudCBpbWdbZGF0YS12LTQzMDQyZjBkXXttYXgtd2lkdGg6MTAwJX0uemphcHAgLmNoZWNrLWd1aWRlLWRldGFpbC1jb250ZW50IC5pbWctbm90LXJlYWR5W2RhdGEtdi00MzA0MmYwZF17d2lkdGg6ODBweDtoZWlnaHQ6YXV0b30uemphcHAgLmVycm9yW2RhdGEtdi00MzA0MmYwZF17bWF4LXdpZHRoOjUwJX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAubnVtYmVyLWlucHV0W2RhdGEtdi03NDA2ODM4Nl17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjYxcHg7aGVpZ2h0OjMwcHg7Ym9yZGVyOjFweCBzb2xpZCAjZTVlNWU1O2JvcmRlci1yYWRpdXM6M3B4O3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMzMzN9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDozMjBweCl7LnpqYXBwIC5udW1iZXItaW5wdXRbZGF0YS12LTc0MDY4Mzg2XXt3aWR0aDo1MHB4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjM2MHB4KXsuemphcHAgLm51bWJlci1pbnB1dFtkYXRhLXYtNzQwNjgzODZde3dpZHRoOjU4cHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6Mzc1cHgpey56amFwcCAubnVtYmVyLWlucHV0W2RhdGEtdi03NDA2ODM4Nl17d2lkdGg6NjFweH19LnpqYXBwIC50ZXh0W2RhdGEtdi03NDA2ODM4Nl17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGluZS1oZWlnaHQ6MjhweDtvdmVyZmxvdzpoaWRkZW59LnpqYXBwIC50ZXh0LmRpc2FibGVkW2RhdGEtdi03NDA2ODM4Nl17YmFja2dyb3VuZDojZjVmNWY1O2NvbG9yOiM2NjZ9LnpqYXBwIC52YWx1ZVtkYXRhLXYtNzQwNjgzODZde3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7cmlnaHQ6MDttYXJnaW4tdG9wOi0xNHB4O21pbi13aWR0aDoxMDAlO2hlaWdodDoyOHB4O2NvbG9yOmluaGVyaXR9LnpqYXBwIC5wbGFjZWhvbGRlcltkYXRhLXYtNzQwNjgzODZdLC56amFwcCAudmFsdWVbZGF0YS12LTc0MDY4Mzg2XXtsaW5lLWhlaWdodDoyOHB4O3BvaW50ZXItZXZlbnRzOm5vbmV9LnpqYXBwIC5wbGFjZWhvbGRlcltkYXRhLXYtNzQwNjgzODZde2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2NvbG9yOiNiMmIyYjJ9LnpqYXBwIC5pY29uLW1pbnVzW2RhdGEtdi03NDA2ODM4Nl17cG9zaXRpb246YWJzb2x1dGU7dG9wOi05cHg7cmlnaHQ6LTlweDt3aWR0aDoxOHB4O2hlaWdodDoxOHB4O2JvcmRlci1yYWRpdXM6OXB4O2JhY2tncm91bmQtY29sb3I6I2ZmNDU0Nn0uemphcHAgLmljb24tbWludXNbZGF0YS12LTc0MDY4Mzg2XTpiZWZvcmV7Y29udGVudDpcXFwiXFxcIjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjRweDt0b3A6OHB4O3dpZHRoOjEwcHg7aGVpZ2h0OjJweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LnpqYXBwIC5pY29uLW1pbnVzW2RhdGEtdi03NDA2ODM4Nl06YWZ0ZXJ7Y29udGVudDpcXFwiXFxcIjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi01cHg7dG9wOi01cHg7d2lkdGg6MjhweDtoZWlnaHQ6MjhweDtib3JkZXItcmFkaXVzOjlweH0uemphcHAgLm51bWJlci1pbnB1dC1zZWxlY3QtYWxsIC52YWx1ZS1oYW5kbGVbZGF0YS12LTc0MDY4Mzg2XXtiYWNrZ3JvdW5kLWNvbG9yOiNjYmRhZjl9LnpqYXBwIC5udW1iZXItaW5wdXQudW5xdWFsaWZpZWRbZGF0YS12LTc0MDY4Mzg2XXtib3JkZXI6MXB4IHNvbGlkICNmZmU4ZTg7YmFja2dyb3VuZC1jb2xvcjojZmZmM2YzO2NvbG9yOiNmZjUwNTB9LnpqYXBwIC5udW1iZXItaW5wdXQucXVhbGlmaWVkIC50ZXh0W2RhdGEtdi03NDA2ODM4Nl17Y29sb3I6IzMzM30uemphcHAgLm51bWJlci1pbnB1dC5udW1iZXItaW5wdXQtZm9jdXNbZGF0YS12LTc0MDY4Mzg2XXtib3JkZXItY29sb3I6IzQyNzVlODtib3gtc2hhZG93OjAgMCA4cHggMCByZ2JhKDY2LDExNywyMzIsLjM3KX0uemphcHAgLm51bWJlci1pbnB1dC5udW1iZXItaW5wdXQtZW1wdHlbZGF0YS12LTc0MDY4Mzg2XXtib3JkZXItY29sb3I6I2ZmM2QzZDtib3gtc2hhZG93OjAgMCA4cHggMCByZ2JhKDI1NSw1OSw0OCwuMzcpfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5oZWFkZXItdGFic1tkYXRhLXYtNzNmNzc2ZWFde2ZvbnQtc2l6ZTowO3doaXRlLXNwYWNlOm5vd3JhcDt0ZXh0LWFsaWduOmNlbnRlcn0uemphcHAgLmhlYWRlci10YWJbZGF0YS12LTczZjc3NmVhXXtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjp0b3A7cGFkZGluZzoxMHB4O2hlaWdodDo0NHB4O2xpbmUtaGVpZ2h0OjI0cHg7Zm9udC1zaXplOjE4cHg7b3BhY2l0eTouNjV9LnpqYXBwIC5oZWFkZXItdGFiW2RhdGEtdi03M2Y3NzZlYV06Zmlyc3QtY2hpbGR7cGFkZGluZy1sZWZ0OjB9LnpqYXBwIC5oZWFkZXItdGFiW2RhdGEtdi03M2Y3NzZlYV06bGFzdC1jaGlsZHtwYWRkaW5nLXJpZ2h0OjB9LnpqYXBwIC5oZWFkZXItdGFiLm9uW2RhdGEtdi03M2Y3NzZlYV17b3BhY2l0eToxfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm51bWJlci1pbnB1dCBjb21wb25lbnQtbnVtYmVyLWlucHV0XCIsY2xhc3M6e1xuICAgICdudW1iZXItaW5wdXQtZm9jdXMnOiBfdm0uaXNGb2N1c2luZyxcbiAgICAnbnVtYmVyLWlucHV0LWVtcHR5JzogX3ZtLmlzU2V0RW1wdHlUaXAgJiYgIV92bS52YWx1ZSAmJiAhX3ZtLmlzRm9jdXNpbmcsXG4gICAgJ251bWJlci1pbnB1dC1zZWxlY3QtYWxsJzogX3ZtLmlzU2VsZWN0QWxsLFxuICAgIHF1YWxpZmllZDogX3ZtLnR5cGUgPT09ICd0cnVlLW9yLWZhbHNlJyAmJiBfdm0udmFsdWUgPT09IDEsXG4gICAgdW5xdWFsaWZpZWQ6IF92bS50eXBlID09PSAndHJ1ZS1vci1mYWxzZScgJiYgX3ZtLnZhbHVlID09PSAwLFxuICB9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGV4dFwiLGNsYXNzOnsgZGlzYWJsZWQ6IF92bS5kaXNhYmxlZCB9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5vcGVuS2V5Ym9hcmQoJGV2ZW50KX19fSxbKF92bS5oYXNWYWwoX3ZtLnZhbHVlKSk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInZhbHVlXCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidmFsdWUtaGFuZGxlXCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS50eXBlID09PSAndHJ1ZS1vci1mYWxzZScgPyAoX3ZtLnZhbHVlID09PSAxID8gJ+WQiOagvCcgOiAn5LiN5ZCI5qC8JykgOiBfdm0udmFsdWUpKV0pXSk6X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInBsYWNlaG9sZGVyXCJ9LFtfdm0uX3YoXCJcXG4gICAgICBcIitfdm0uX3MoX3ZtLnBsYWNlaG9sZGVyKStcIlxcbiAgICBcIildKV0pLF92bS5fdChcImV4dGVuZFwiKV0sMil9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2tleWJvYXJkLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4va2V5Ym9hcmQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9rZXlib2FyZC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjMzN2Y0Mjgmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4va2V5Ym9hcmQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9rZXlib2FyZC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4va2V5Ym9hcmQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NjMzN2Y0MjgmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNjMzN2Y0MjhcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNsaWRlLXVwXCJ9LG9uOntcImxlYXZlXCI6X3ZtLnN0YXJ0Q2xvc2UsXCJhZnRlckxlYXZlXCI6X3ZtLm9uQ2xvc2V9fSxbKF92bS5zaG93KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJudW1iZXIta2V5Ym9hcmQtY29uXCIsY2xhc3M6eyAnaW9zLWJlemVsLWxlc3MnOiBfdm0uaXNJT1NCZXplbExlc3MgfSxzdHlsZTooeyAnei1pbmRleCc6IF92bS56SW5kZXggfSksb246e1widG91Y2hzdGFydFwiOl92bS5rZXlUb3VjaHN0YXJ0LFwidG91Y2hlbmRcIjpfdm0ua2V5VG91Y2hlbmR9fSxbKF92bS50eXBlID09PSAndHJ1ZS1vci1mYWxzZScpP1tfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlib2FyZC1yb3dcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInJvdy1zcGFuLTMga2V5cy1yb3dcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXMgY29sIGNvbG9yLWdyZWVuXCIsYXR0cnM6e1wiZGlyZWN0XCI6XCJzZXRUdXJlXCJ9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJxdWFsaWZpZWRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICDlkIjmoLxcXG4gICAgICAgICAgXCIpXSwxKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlzIGNvbCBjb2xvci1yZWRcIixhdHRyczp7XCJkaXJlY3RcIjpcInNldEZhbHNlXCJ9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJ1bnF1YWxpZmllZFwifX0pLF92bS5fdihcIlxcbiAgICAgICAgICAgIOS4jeWQiOagvFxcbiAgICAgICAgICBcIildLDEpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicm93LXNwYW4tMVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5cy1yb3dcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXMga2V5cy1va1wiLGF0dHJzOntcImRpcmVjdFwiOlwiY2xvc2VLZXlib2FyZFwifX0sW19jKCdpY29uJyx7YXR0cnM6e1wibmFtZVwiOlwia2V5Ym9hcmQtY2xvc2VcIn19KV0sMSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlzLXJvd1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5cyBrZXlzLWRlbGV0ZVwiLGF0dHJzOntcImRpcmVjdFwiOlwiZGVsZXRlXCJ9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJrZXlib2FyZC1kZWxldGVcIn19KV0sMSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5Ym9hcmQtcm93XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlzIGtleXMtcHJldlwiLGNsYXNzOnsgZGlzYWJsZWQ6ICFfdm0uaGFzUHJldiB9LGF0dHJzOntcImRpcmVjdFwiOlwicHJldlwifX0sW192bS5fdihcIlxcbiAgICAgICAgICDkuIrkuIDpoblcXG4gICAgICAgIFwiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXMga2V5cy1uZXh0XCIsY2xhc3M6eyBkaXNhYmxlZDogIV92bS5oYXNOZXh0IH0sYXR0cnM6e1wiZGlyZWN0XCI6XCJuZXh0XCJ9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgIOS4i+S4gOmhuVxcbiAgICAgICAgXCIpXSldKV06W19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleWJvYXJkLXJvd1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5c1wiLGF0dHJzOntcImRpcmVjdFwiOlwiMVwifX0sW192bS5fdihcIjFcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlzXCIsYXR0cnM6e1wiZGlyZWN0XCI6XCIyXCJ9fSxbX3ZtLl92KFwiMlwiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXNcIixhdHRyczp7XCJkaXJlY3RcIjpcIjNcIn19LFtfdm0uX3YoXCIzXCIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5cyBrZXlzLW9rXCIsYXR0cnM6e1wiZGlyZWN0XCI6XCJjbG9zZUtleWJvYXJkXCJ9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJrZXlib2FyZC1jbG9zZVwifX0pXSwxKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleWJvYXJkLXJvd1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5c1wiLGF0dHJzOntcImRpcmVjdFwiOlwiNFwifX0sW192bS5fdihcIjRcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlzXCIsYXR0cnM6e1wiZGlyZWN0XCI6XCI1XCJ9fSxbX3ZtLl92KFwiNVwiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXNcIixhdHRyczp7XCJkaXJlY3RcIjpcIjZcIn19LFtfdm0uX3YoXCI2XCIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5cyBrZXlzLWRlbGV0ZVwiLGF0dHJzOntcImRpcmVjdFwiOlwiZGVsZXRlXCJ9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJrZXlib2FyZC1kZWxldGVcIn19KV0sMSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlib2FyZC1yb3dcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXNcIixhdHRyczp7XCJkaXJlY3RcIjpcIjdcIn19LFtfdm0uX3YoXCI3XCIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5c1wiLGF0dHJzOntcImRpcmVjdFwiOlwiOFwifX0sW192bS5fdihcIjhcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlzXCIsYXR0cnM6e1wiZGlyZWN0XCI6XCI5XCJ9fSxbX3ZtLl92KFwiOVwiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXMga2V5cy1wcmV2XCIsY2xhc3M6eyBkaXNhYmxlZDogIV92bS5oYXNQcmV2IH0sYXR0cnM6e1wiZGlyZWN0XCI6XCJwcmV2XCJ9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgIOS4iuS4gOmhuVxcbiAgICAgICAgXCIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJrZXlib2FyZC1yb3dcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXNcIixjbGFzczp7IGRpc2FibGVkOiBfdm0uaXNEaXNhYmxlZE1pbnVzIH0sYXR0cnM6e1wiZGlyZWN0XCI6XCItXCJ9fSxbX3ZtLl92KFwiLVwiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImtleXNcIixhdHRyczp7XCJkaXJlY3RcIjpcIjBcIn19LFtfdm0uX3YoXCIwXCIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5c1wiLGNsYXNzOnsgZGlzYWJsZWQ6IF92bS5pc0Rpc2FibGVkUG9pbnQgfSxhdHRyczp7XCJkaXJlY3RcIjpcIi5cIn19LFtfdm0uX3YoXCIuXCIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwia2V5cyBrZXlzLW5leHRcIixjbGFzczp7IGRpc2FibGVkOiAhX3ZtLmhhc05leHQgfSxhdHRyczp7XCJkaXJlY3RcIjpcIm5leHRcIn19LFtfdm0uX3YoXCJcXG4gICAgICAgICAg5LiL5LiA6aG5XFxuICAgICAgICBcIildKV0pXV0sMik6X3ZtLl9lKCldKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnO1xuaW1wb3J0IGtleWJvYXJkIGZyb20gJy4va2V5Ym9hcmQudnVlJztcblxubGV0IGluc3RhbmNlID0gZmFsc2U7XG5cbmlmICghaW5zdGFuY2UpIHtcbiAgbGV0IEtleWJvYXJkQ29tcG9uZW50ID0gVnVlLmV4dGVuZChrZXlib2FyZCk7XG4gIGluc3RhbmNlID0gbmV3IEtleWJvYXJkQ29tcG9uZW50KHtcbiAgICBlbDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXG4gIH0pO1xuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5zdGFuY2UuJGVsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdlxuICAgIGNsYXNzPVwibnVtYmVyLWlucHV0IGNvbXBvbmVudC1udW1iZXItaW5wdXRcIlxuICAgIDpjbGFzcz1cIntcbiAgICAgICdudW1iZXItaW5wdXQtZm9jdXMnOiBpc0ZvY3VzaW5nLFxuICAgICAgJ251bWJlci1pbnB1dC1lbXB0eSc6IGlzU2V0RW1wdHlUaXAgJiYgIXZhbHVlICYmICFpc0ZvY3VzaW5nLFxuICAgICAgJ251bWJlci1pbnB1dC1zZWxlY3QtYWxsJzogaXNTZWxlY3RBbGwsXG4gICAgICBxdWFsaWZpZWQ6IHR5cGUgPT09ICd0cnVlLW9yLWZhbHNlJyAmJiB2YWx1ZSA9PT0gMSxcbiAgICAgIHVucXVhbGlmaWVkOiB0eXBlID09PSAndHJ1ZS1vci1mYWxzZScgJiYgdmFsdWUgPT09IDAsXG4gICAgfVwiXG4gID5cbiAgICA8ZGl2IGNsYXNzPVwidGV4dFwiIEBjbGljay5zdG9wPVwib3BlbktleWJvYXJkXCIgOmNsYXNzPVwieyBkaXNhYmxlZDogZGlzYWJsZWQgfVwiPlxuICAgICAgPHNwYW4gdi1pZj1cImhhc1ZhbCh2YWx1ZSlcIiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWUtaGFuZGxlXCI+e3tcbiAgICAgICAgICB0eXBlID09PSAndHJ1ZS1vci1mYWxzZScgPyAodmFsdWUgPT09IDEgPyAn5ZCI5qC8JyA6ICfkuI3lkIjmoLwnKSA6IHZhbHVlXG4gICAgICAgIH19PC9zcGFuPlxuICAgICAgPC9zcGFuPlxuICAgICAgPHNwYW4gdi1lbHNlIGNsYXNzPVwicGxhY2Vob2xkZXJcIj5cbiAgICAgICAge3sgcGxhY2Vob2xkZXIgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxzbG90IG5hbWU9XCJleHRlbmRcIiAvPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgTnVtYmVyS2V5Ym9hcmQgZnJvbSAnQGNvbXBvbmVudHMvbnVtYmVyLWlucHV0L2tleWJvYXJkLmpzJztcbmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnQGNvbW1vbi9ldmVudC1idXMnO1xuaW1wb3J0IHN0b3JlIGZyb20gJ0BzdG9yZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ051bWJlcklucHV0JyxcbiAgcHJvcHM6IHtcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSxcbiAgICB9LFxuICAgIC8qIOWFgeiuuOi+k+WFpeeahOaVsOWtl+exu+Wei1xuICAgICAqIGFsbDog5omA5pyJ5pWw5a2XXG4gICAgICogaW50OiDmlbTmlbBcbiAgICAgKiBwb3NpdGl2ZTog5q2j5pWwXG4gICAgICogbmVnYXRpdmU6IOi0n+aVsFxuICAgICAqIHRydWUtb3ItZmFsc2U6IOWIpOaWreexu+mUruebmFxuICAgICAqL1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdhbGwnLFxuICAgIH0sXG4gICAgLy8g5bCP5pWw55qE5L2N5pWwXG4gICAgZGVjaW1hbDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMixcbiAgICB9LFxuICAgIHBsYWNlaG9sZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIG5leHRFdmVudDoge1xuICAgICAgdHlwZTogRnVuY3Rpb24sXG4gICAgfSxcblxuICAgIC8vIOi+k+WFpeiMg+WbtFxuICAgIHJhbmdlOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLFxuICAgIH0sXG4gICAgLy8g5b2T6L6T5YWl5YC85rqi5Ye66IyD5Zu05pe277yM6Ieq5Yqo5oGi5aSN5Y6f5aeL5YC8XG4gICAgb3ZlcmZsb3dBdXRvUmVjb3Zlcjoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG5cbiAgICAvLyDmmK/lkKblv4XloatcbiAgICByZXF1aXJlZDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICB9LFxuICAgIC8vIOW/heWhq+aXtu+8jOWmguaenOW9leWFpeS4uuepuu+8jOWImeaBouWkjeWOn+Wni+WAvFxuICAgIGVtcHR5QXV0b1JlY292ZXI6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlLFxuICAgIH0sXG5cbiAgICAvLyDnpoHnlKjov5vlhaXvvIzkuI3lj6/kv67mlLnvvIzpu5jorqTkuI3lvIDlkK9cbiAgICBkaXNhYmxlZDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG5cbiAgICAvLyDngrnlh7vmj5DkuqTml7bmoKHpqozkuLrnqbrml7bog4zmma/popzoibLmoIfnuqJcbiAgICBpc1NldEVtcHR5VGlwOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmF3VmFsdWU6ICcnLFxuICAgICAgaXNGb2N1c2luZzogZmFsc2UsXG4gICAgICAvLyDlhoXlrrnmmK/lkKblhajpgInvvIzovpPlhaXmoYbojrflj5bnhKbngrnnmoTml7blgJnvvIzkvJrlhajpgIlcbiAgICAgIGlzU2VsZWN0QWxsOiBmYWxzZSxcbiAgICAgIGtleWJvYXJkSGVpZ2h0OiBzdG9yZS5zdGF0ZS5hcHAuaXNJT1NCZXplbExlc3NcbiAgICAgICAgPyAyNjZcbiAgICAgICAgOiB0aGlzLnR5cGUgPT09ICd0cnVlLW9yLWZhbHNlJ1xuICAgICAgICA/IDE3NlxuICAgICAgICA6IDIzMixcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIG1pbigpIHtcbiAgICAgIGlmIChpc05hTih0aGlzLnJhbmdlWzBdKSkge1xuICAgICAgICByZXR1cm4gLUluZmluaXR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodGhpcy5yYW5nZVswXSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBtYXgoKSB7XG4gICAgICBpZiAoaXNOYU4odGhpcy5yYW5nZVsxXSkpIHtcbiAgICAgICAgcmV0dXJuIEluZmluaXR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodGhpcy5yYW5nZVsxXSk7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlZCgpIHtcbiAgICBFdmVudEJ1cy4kb24oJ251bWJlcklucHV0Qmx1cicsIHRoaXMuc2V0Qmx1cik7XG4gICAgRXZlbnRCdXMuJG9uKCdudW1iZXJLZXlib2FyZENsb3NlJywgdGhpcy5zZXRCbHVyKTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5pc0ZvY3VzaW5nKSB7XG4gICAgICBOdW1iZXJLZXlib2FyZC5jbG9zZUtleWJvYXJkKCk7XG4gICAgfVxuICB9LFxuICBkZXN0cm95ZWQoKSB7XG4gICAgRXZlbnRCdXMuJG9mZignbnVtYmVySW5wdXRCbHVyJywgdGhpcy5zZXRCbHVyKTtcbiAgICBFdmVudEJ1cy4kb2ZmKCdudW1iZXJLZXlib2FyZENsb3NlJywgdGhpcy5zZXRCbHVyKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGhhc1ZhbCh2KSB7XG4gICAgICByZXR1cm4gdiAhPT0gdW5kZWZpbmVkICYmIHYgIT09IG51bGwgJiYgdiAhPT0gJyc7XG4gICAgfSxcbiAgICBvcGVuS2V5Ym9hcmQoKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCkgcmV0dXJuOyAvLyDlpoLmnpzkuLp0cnVl77yM5YiZ6KGo56S65LiN5Y+v57yW6L6RXG5cbiAgICAgIGlmICh0aGlzLmlzRm9jdXNpbmcpIHtcbiAgICAgICAgLy8g54K55Ye755qE5piv5b2T5YmN54Sm54K56L6T5YWl5qGGXG4gICAgICAgIHRoaXMuaXNTZWxlY3RBbGwgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIEV2ZW50QnVzLiRlbWl0KCdudW1iZXJJbnB1dEJsdXInKTtcbiAgICAgICAgdGhpcy5zZXRGb2N1cygpO1xuXG4gICAgICAgIE51bWJlcktleWJvYXJkLm9wZW5LZXlib2FyZCh7XG4gICAgICAgICAgaW5wdXRDb21wb25lbnQ6IHRoaXMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBzZXRGb2N1cygpIHtcbiAgICAgIHRoaXMuaXNGb2N1c2luZyA9IHRydWU7XG4gICAgICBpZiAodGhpcy50eXBlICE9PSAndHJ1ZS1vci1mYWxzZScpIHtcbiAgICAgICAgdGhpcy5pc1NlbGVjdEFsbCA9IHRydWU7XG4gICAgICB9XG4gICAgICB0aGlzLnJhd1ZhbHVlID0gdGhpcy52YWx1ZTtcbiAgICAgIE51bWJlcktleWJvYXJkLiRvbigna2V5Ym9hcmRJbnB1dCcsIHRoaXMuaW5wdXQpO1xuICAgICAgTnVtYmVyS2V5Ym9hcmQuJG9uKCdrZXlib2FyZEFzc2lnbicsIHRoaXMuYXNzaWduKTtcbiAgICAgIE51bWJlcktleWJvYXJkLiRvbigna2V5Ym9hcmREZWxldGUnLCB0aGlzLmRlbGV0ZVZhbHVlKTtcbiAgICAgIE51bWJlcktleWJvYXJkLiRvbigna2V5Ym9hcmRDbGVhcicsIHRoaXMuY2xlYXIpO1xuXG4gICAgICB0aGlzLiRlbWl0KCdmb2N1cycpO1xuICAgIH0sXG4gICAgc2V0Qmx1cigpIHtcbiAgICAgIGlmICghdGhpcy5pc0ZvY3VzaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGxldCB2YWx1ZSA9IHRoaXMuY2hlY2tWYWx1ZSgpO1xuXG4gICAgICB0aGlzLmlzRm9jdXNpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuaXNTZWxlY3RBbGwgPSBmYWxzZTtcbiAgICAgIE51bWJlcktleWJvYXJkLiRvZmYoJ2tleWJvYXJkSW5wdXQnLCB0aGlzLmlucHV0KTtcbiAgICAgIE51bWJlcktleWJvYXJkLiRvZmYoJ2tleWJvYXJkQXNzaWduJywgdGhpcy5hc3NpZ24pO1xuICAgICAgTnVtYmVyS2V5Ym9hcmQuJG9mZigna2V5Ym9hcmREZWxldGUnLCB0aGlzLmRlbGV0ZVZhbHVlKTtcbiAgICAgIE51bWJlcktleWJvYXJkLiRvZmYoJ2tleWJvYXJkQ2xlYXInLCB0aGlzLmNsZWFyKTtcblxuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWx1ZSk7XG4gICAgICB0aGlzLiRlbWl0KCdibHVyJywgdmFsdWUpO1xuXG4gICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgIE51bWJlcktleWJvYXJkLmNhbGNUYWIoKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDovpPlhaVcbiAgICBpbnB1dCh2YWwpIHtcbiAgICAgIGxldCB2YWx1ZSA9IHRoaXMuaGFzVmFsKHRoaXMudmFsdWUpID8gdGhpcy52YWx1ZS50b1N0cmluZygpIDogJyc7XG4gICAgICBsZXQgbmV3VmFsdWUgPSAnJztcblxuICAgICAgaWYgKHRoaXMuaXNTZWxlY3RBbGwpIHtcbiAgICAgICAgbmV3VmFsdWUgPSB2YWw7XG4gICAgICAgIHRoaXMuaXNTZWxlY3RBbGwgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5ld1ZhbHVlID0gdmFsdWUgKyB2YWw7XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZygnbmV3VmFsdWUgPT09PT0nLCBuZXdWYWx1ZSk7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIG5ld1ZhbHVlKTtcbiAgICAgIE51bWJlcktleWJvYXJkLnNldEtleXNTdGF0dXMobmV3VmFsdWUsIHRoaXMudHlwZSk7XG4gICAgfSxcbiAgICAvLyDotYvlgLxcbiAgICBhc3NpZ24odmFsKSB7XG4gICAgICB0aGlzLmlzU2VsZWN0QWxsID0gZmFsc2U7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbCk7XG4gICAgICBOdW1iZXJLZXlib2FyZC5zZXRLZXlzU3RhdHVzKHZhbCwgdGhpcy50eXBlKTtcbiAgICB9LFxuICAgIC8vIOWIoOmZpFxuICAgIGRlbGV0ZVZhbHVlKCkge1xuICAgICAgbGV0IHZhbHVlID0gdGhpcy5oYXNWYWwodGhpcy52YWx1ZSkgPyB0aGlzLnZhbHVlLnRvU3RyaW5nKCkgOiAnJztcbiAgICAgIGxldCBuZXdWYWx1ZSA9ICcnO1xuICAgICAgaWYgKHRoaXMuaGFzVmFsKHZhbHVlKSkge1xuICAgICAgICBpZiAodGhpcy5pc1NlbGVjdEFsbCkge1xuICAgICAgICAgIG5ld1ZhbHVlID0gJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV3VmFsdWUgPSB2YWx1ZS5zdWJzdHIoMCwgdmFsdWUubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBuZXdWYWx1ZSk7XG4gICAgICBOdW1iZXJLZXlib2FyZC5zZXRLZXlzU3RhdHVzKG5ld1ZhbHVlLCB0aGlzLnR5cGUpO1xuICAgIH0sXG4gICAgLy8g5riF56m6XG4gICAgY2xlYXIoKSB7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsICcnKTtcbiAgICAgIE51bWJlcktleWJvYXJkLnNldEtleXNTdGF0dXMoJycsIHRoaXMudHlwZSk7XG4gICAgfSxcblxuICAgIC8vIOajgOafpei+k+WFpeWAvOeahOiMg+WbtChyYW5nZSnvvIzlsI/mlbDkvY3mlbAoZGVjaW1hbCnmmK/lkKblkIjmoLxcbiAgICBjaGVja1ZhbHVlKCkge1xuICAgICAgbGV0IHJlc3VsdCA9IHRoaXMuaGFzVmFsKHRoaXMudmFsdWUpID8gdGhpcy52YWx1ZS50b1N0cmluZygpIDogJyc7XG5cbiAgICAgIGlmIChyZXN1bHQgPT09ICctJykge1xuICAgICAgICByZXN1bHQgPSAnJztcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQuc3Vic3RyKC0xKSA9PT0gJy4nKSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5zdWJzdHIoMCwgcmVzdWx0Lmxlbmd0aCAtIDEpO1xuICAgICAgfVxuXG4gICAgICBsZXQgcG9pbnRJbmRleCA9IHJlc3VsdC5pbmRleE9mKCcuJyk7XG4gICAgICBpZiAocG9pbnRJbmRleCA+IDApIHtcbiAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdChyZXN1bHQuc3Vic3RyaW5nKDAsIHBvaW50SW5kZXggKyB0aGlzLmRlY2ltYWwgKyAxKSk7XG4gICAgICB9XG5cbiAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQocmVzdWx0KTtcblxuICAgICAgaWYgKGlzTmFOKHJlc3VsdCkpIHtcbiAgICAgICAgaWYgKHRoaXMucmVxdWlyZWQgJiYgdGhpcy5lbXB0eUF1dG9SZWNvdmVyKSB7XG4gICAgICAgICAgcmVzdWx0ID0gdGhpcy5yYXdWYWx1ZTtcbiAgICAgICAgICB0aGlzLiRlbWl0KCdvbkVtcHR5Jyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0ID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChyZXN1bHQgPCB0aGlzLm1pbikge1xuICAgICAgICAgIHJlc3VsdCA9IHRoaXMub3ZlcmZsb3dBdXRvUmVjb3ZlciA/IHRoaXMucmF3VmFsdWUgOiB0aGlzLm1pbjtcbiAgICAgICAgICB0aGlzLiRlbWl0KCdvdmVyZmxvd1JhbmdlJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdCA+IHRoaXMubWF4KSB7XG4gICAgICAgICAgcmVzdWx0ID0gdGhpcy5vdmVyZmxvd0F1dG9SZWNvdmVyID8gdGhpcy5yYXdWYWx1ZSA6IHRoaXMubWF4O1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ292ZXJmbG93UmFuZ2UnKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5udW1iZXItaW5wdXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgd2lkdGg6IDYxcHg7XG4gIGhlaWdodDogMzBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2U1ZTVlNTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICRjb2xvckJsYWNrO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMjBweCkge1xuICAubnVtYmVyLWlucHV0IHtcbiAgICB3aWR0aDogNTBweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzNjBweCkge1xuICAubnVtYmVyLWlucHV0IHtcbiAgICB3aWR0aDogNThweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzNzVweCkge1xuICAubnVtYmVyLWlucHV0IHtcbiAgICB3aWR0aDogNjFweDtcbiAgfVxufVxuXG4udGV4dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAmLmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICAgIGNvbG9yOiAjNjY2O1xuICB9XG59XG4udmFsdWUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICByaWdodDogMDtcbiAgbWFyZ2luLXRvcDogLTE0cHg7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyOHB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuLnBsYWNlaG9sZGVyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICNiMmIyYjI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uaWNvbi1taW51cyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtOXB4O1xuICByaWdodDogLTlweDtcbiAgd2lkdGg6IDE4cHg7XG4gIGhlaWdodDogMThweDtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY0NTQ2O1xufVxuLmljb24tbWludXM6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDRweDtcbiAgdG9wOiA4cHg7XG4gIHdpZHRoOiAxMHB4O1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG4uaWNvbi1taW51czo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtNXB4O1xuICB0b3A6IC01cHg7XG4gIHdpZHRoOiAyOHB4O1xuICBoZWlnaHQ6IDI4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDlweDtcbn1cblxuLm51bWJlci1pbnB1dC1zZWxlY3QtYWxsIC52YWx1ZS1oYW5kbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2JkYWY5O1xufVxuXG4ubnVtYmVyLWlucHV0LnVucXVhbGlmaWVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZThlODtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjNmMztcbiAgY29sb3I6ICNmZjUwNTA7XG59XG4ubnVtYmVyLWlucHV0LnF1YWxpZmllZCAudGV4dCB7XG4gIGNvbG9yOiAkY29sb3JCbGFjaztcbn1cblxuLm51bWJlci1pbnB1dC5udW1iZXItaW5wdXQtZm9jdXMge1xuICBib3JkZXItY29sb3I6ICR0aGVtZUNvbG9yO1xuICBib3gtc2hhZG93OiAwIDAgOHB4IDAgcmdiYSg2NiwgMTE3LCAyMzIsIDAuMzcpO1xufVxuXG4ubnVtYmVyLWlucHV0Lm51bWJlci1pbnB1dC1lbXB0eSB7XG4gIGJvcmRlci1jb2xvcjogJC0taW5wdXQtd2FybmluZy1ib3JkZXItY29sb3I7XG4gIGJveC1zaGFkb3c6IDAgMCA4cHggMCAkLS1pbnB1dC13YXJuaW5nLXNoYWRvdy1lbXB0eS1jb2xvcjtcbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03NDA2ODM4NiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03NDA2ODM4NiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI3NDA2ODM4NlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTc4ZWIyMTllJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiMmExOWIwNGVcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTc0MDY4Mzg2Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdzY3JvbGxlcicse3JlZjpcInNjcm9sbGVyXCJ9LFtfYygnbWVhc3VyZS1kZXRhaWwtcGxhY2UtY2hlY2tpdGVtJyx7YXR0cnM6e1wiZGV0YWlsXCI6X3ZtLmRldGFpbH0sb246e1wiY2hhbmdlSXRlbXNcIjpfdm0uY2hhbmdlSXRlbXMsXCJjaGFuZ2VQbGFjZVwiOl92bS5jaGFuZ2VQbGFjZX19KSwoX3ZtLmhhc01hc3RlckNoZWNraXRlbSk/Wyhfdm0uZGV0YWlsLm1vZGUgPT09ICdlZGl0JyB8fCBfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWVkaXQnIHx8IF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZG8nKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJiZy13aGl0ZVwifSxbX2MoJ2l0ZW0nLHthdHRyczp7XCJib3JkZXJcIjpcImJvdHRvbVwifX0sWyhfdm0uZGV0YWlsLnByb2JsZW1EYXRhWzBdLnBhc3NyYXRlX21vZGUgIT09IDkpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tZm9udCBjb2xvci10aGVtZSBmMTRcIixvbjp7XCJjbGlja1wiOl92bS52aWV3SHV4aW5nfX0sW192bS5fdihcIlxcbiAgICAgICAgICDmiLflnovlm75cXG4gICAgICAgICAgXCIpLF9jKCdpY29uJyx7c3RhdGljQ2xhc3M6XCJtbDVcIixzdGF0aWNTdHlsZTp7XCJmb250LXNpemVcIjpcIjEycHhcIn0sYXR0cnM6e1wibmFtZVwiOlwiYXJyb3ctcmlnaHRcIn19KV0sMSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucHJvYmxlbURhdGFbMF0ucGFzc3JhdGVfbW9kZSA9PT0gOSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidmFsdWUtaW5wdXRcIn0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJ2YWx1ZS1pbnB1dC1sYWJlbFwifSxbX3ZtLl92KFwi5by65bqm6K6+6K6h5YC8XCIpXSksX2MoJ251bWJlci1pbnB1dCcse3N0YXRpY1N0eWxlOntcIndpZHRoXCI6XCI0MHB4XCJ9LGF0dHJzOntcImRlY2ltYWxcIjoyLFwicmFuZ2VcIjpbMSwgOTkuOTldfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucHJvYmxlbURhdGFbMF0uaW50ZW5zaXR5U2V0VmFsKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YVswXSwgXCJpbnRlbnNpdHlTZXRWYWxcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5wcm9ibGVtRGF0YVswXS5pbnRlbnNpdHlTZXRWYWxcIn19KV0sMSk6X3ZtLl9lKCksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1jb24gdmFsdWUtaW5wdXQgYWxpZ24tclwifSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInZhbHVlLWlucHV0LWxhYmVsXCJ9LFtfdm0uX3YoXCLmtYvljLrmlbBcIildKSxfYygnbnVtYmVyLWlucHV0Jyx7c3RhdGljU3R5bGU6e1wid2lkdGhcIjpcIjQwcHhcIn0sYXR0cnM6e1widHlwZVwiOlwiaW50IHBvc2l0aXZlXCIsXCJyYW5nZVwiOlsxLCA5OV19LG9uOntcImJsdXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5hcmVhTnVtQ2hhbmdlKF92bS5kZXRhaWwpfX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLmFyZWFOdW0pLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcImFyZWFOdW1cIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5hcmVhTnVtXCJ9fSldLDEpXSksX3ZtLl9sKChfdm0uZGV0YWlsLmFyZWFEYXRhKSxmdW5jdGlvbihhcmVhLGFyZWFJbmRleCl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6YXJlYUluZGV4LHN0YXRpY0NsYXNzOlwicHQxNSBwbDE1IHByMTVcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImFyZWEtbmFtZVwifSxbX2MoJ2Rpdicse2RpcmVjdGl2ZXM6W3tuYW1lOlwic2hvd1wiLHJhd05hbWU6XCJ2LXNob3dcIix2YWx1ZTooIWFyZWEuaXNFZGl0aW5nKSxleHByZXNzaW9uOlwiIWFyZWEuaXNFZGl0aW5nXCJ9XSxzdGF0aWNDbGFzczpcImFyZWEtbmFtZS10ZXh0XCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5hcmVhTmFtZUVkaXQoYXJlYSwgJGV2ZW50KX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgXCIrX3ZtLl9zKGFyZWEubmFtZSkrXCJcXG4gICAgICAgICAgXCIpXSksX2MoJ2Rpdicse2RpcmVjdGl2ZXM6W3tuYW1lOlwic2hvd1wiLHJhd05hbWU6XCJ2LXNob3dcIix2YWx1ZTooYXJlYS5pc0VkaXRpbmcpLGV4cHJlc3Npb246XCJhcmVhLmlzRWRpdGluZ1wifV0sc3RhdGljQ2xhc3M6XCJhcmVhLW5hbWUtaW5wdXRcIn0sW19jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihhcmVhLm5hbWVUZW1wKSxleHByZXNzaW9uOlwiYXJlYS5uYW1lVGVtcFwifV0sYXR0cnM6e1widHlwZVwiOlwidGV4dFwiLFwibWF4bGVuZ3RoXCI6XCI1XCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGFyZWEubmFtZVRlbXApfSxvbjp7XCJibHVyXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uYXJlYU5hbWVVcGRhdGUoYXJlYSwgX3ZtLmRldGFpbCl9LFwiaW5wdXRcIjpmdW5jdGlvbigkZXZlbnQpe2lmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXsgcmV0dXJuOyB9X3ZtLiRzZXQoYXJlYSwgXCJuYW1lVGVtcFwiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSldKV0pLF92bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSxwcm9ibGVtSW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5OnByb2JsZW1JbmRleH0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImFyZWEtaW5mb1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY2hlY2tpdGVtLWluZm9cIn0sWyhwcm9ibGVtLnBhc3NyYXRlX21vZGUgIT09IDUpP19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJjaGVja2l0ZW0tbmFtZVwifSxbX3ZtLl92KF92bS5fcyhwcm9ibGVtLmNoZWNrSXRlbS5uYW1lKSldKTpfdm0uX2UoKSwocHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNSB8fCBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE2KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjaGVja2l0ZW0tc3RhbmRhcmQgY2hlY2tpdGVtLXN0YW5kYXJkX3NwZWNpYWxcIixkb21Qcm9wczp7XCJpbm5lckhUTUxcIjpfdm0uX3MocHJvYmxlbS5zdGFuZGFyZFJhbmdlKX19KToocHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNyB8fCBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE4KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjaGVja2l0ZW0tc3RhbmRhcmQgY2hlY2tpdGVtLXN0YW5kYXJkX3NwZWNpYWxcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICDlkIjmoLzmoIflh4YgXCIpLF9jKCdzcGFuJyx7ZG9tUHJvcHM6e1wiaW5uZXJIVE1MXCI6X3ZtLl9zKHByb2JsZW0uc3RhbmRhcmRSYW5nZSl9fSldKTpfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiY2hlY2tpdGVtLXN0YW5kYXJkXCJ9LFtfdm0uX3YoX3ZtLl9zKHByb2JsZW0uc3RhbmRhcmRSYW5nZSkpXSldKSwoX3ZtLmNvbnRhaW5zKFszLCA0LCAxMCwgMTEsIDE2LCAxNywgMThdLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ2YWx1ZS1pbnB1dCBwbDEwXCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidmFsdWUtaW5wdXQtbGFiZWxcIn0sW192bS5fdihcIuiuvuiuoeWAvFwiKV0pLF9jKCdudW1iZXItaW5wdXQnLHthdHRyczp7XCJkZWNpbWFsXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlRGVjaW1hbCxcInJhbmdlXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2V9LG9uOntcImJsdXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5zZXRWYWxVcGRhdGUocHJvYmxlbSl9LFwiZm9jdXNcIjpmdW5jdGlvbigkZXZlbnQpe192bS5hdXRvSW5wdXRTZXRWYWwocHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKX0sXCJpbnB1dFwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNhdmVJbnB1dFNldFZhbChwcm9ibGVtLCBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0pfX0sbW9kZWw6e3ZhbHVlOihwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0uc2V0VmFsKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQocHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdLCBcInNldFZhbFwiLCAkJHYpfSxleHByZXNzaW9uOlwicHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdLnNldFZhbFwifX0pXSwxKTpfdm0uX2UoKSwoX3ZtLmNvbnRhaW5zKFsxLCAyLCAzLCA0LCA4LCAxMCwgMTEsIDEyLCAxNiwgMThdLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ2YWx1ZS1pbnB1dCBwbDEwXCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidmFsdWUtaW5wdXQtbGFiZWxcIn0sW192bS5fdihcIueCueaVsFwiKV0pLF9jKCdudW1iZXItaW5wdXQnLHtzdGF0aWNTdHlsZTp7XCJ3aWR0aFwiOlwiNDBweFwifSxhdHRyczp7XCJ0eXBlXCI6XCJpbnQgcG9zaXRpdmVcIixcInJhbmdlXCI6WzAsIDk5XX0sb246e1wiYmx1clwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmFyZWFQb2ludE51bUNoYW5nZShfdm0uZGV0YWlsLCBwcm9ibGVtLCBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0pfX0sbW9kZWw6e3ZhbHVlOihwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0ucG9pbnROdW0pLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0sIFwicG9pbnROdW1cIiwgJCR2KX0sZXhwcmVzc2lvbjpcInByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XS5wb2ludE51bVwifX0pXSwxKTpfdm0uX2UoKSwoX3ZtLmNvbnRhaW5zKFs5XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidmFsdWUtaW5wdXQgcGwxMFwifSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInZhbHVlLWlucHV0LWxhYmVsXCJ9LFtfdm0uX3YoXCLnorPljJbmt7HluqZcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ2YWx1ZS1jYXJib25cIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNhcmJvbk9wZW4ocHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgIFwiK192bS5fcyhwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0uY2FyYm9uIHx8IHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XS5jYXJib24gPT09IDBcbiAgICAgICAgICAgICAgICAgICAgPyBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0uY2FyYm9uLnRvRml4ZWQoMSlcbiAgICAgICAgICAgICAgICAgICAgOiAnJykrXCJcXG4gICAgICAgICAgICAgIFwiKV0pXSk6X3ZtLl9lKCldKSwoX3ZtLmNvbnRhaW5zKFsxLCAyLCAzLCA0LCA3LCA4LCAxMCwgMTEsIDEyLCAxMywgMTYsIDE4XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibnVtYmVyLWlucHV0LWdyb3VwXCJ9LF92bS5fbCgoX3ZtLnBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwgeyBhcmVhOiBhcmVhLm5hbWUgfSkpLGZ1bmN0aW9uKHBvaW50LHBvaW50SW5kZXgpe3JldHVybiBfYygnbnVtYmVyLWlucHV0Jyx7a2V5OnBvaW50SW5kZXgsY2xhc3M6eyAnY29sb3ItcmVkJzogcG9pbnQuaXNFeGNlZWQgfSxhdHRyczp7XCJ0eXBlXCI6cHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA4ID8gJ3RydWUtb3ItZmFsc2UnIDogJ2FsbCcsXCJkZWNpbWFsXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlRGVjaW1hbCxcInJhbmdlXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2V9LG9uOntcImJsdXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5yZWFsaXR5VmFsVXBkYXRlKHByb2JsZW0pfSxcImZvY3VzXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uYXV0b0lucHV0U2V0VmFsKHByb2JsZW0sIHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XSl9fSxtb2RlbDp7dmFsdWU6KHBvaW50LnZhbCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KHBvaW50LCBcInZhbFwiLCAkJHYpfSxleHByZXNzaW9uOlwicG9pbnQudmFsXCJ9fSxbKHBvaW50LnNob3dNYXJrKT9bKHBvaW50Lmhhc01hcmspP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImh1eGluZy12aWV3XCIsYXR0cnM6e1wic2xvdFwiOlwiZXh0ZW5kXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ubWFya0h1eGluZyhfdm0uZGV0YWlsLCBwb2ludCl9fSxzbG90OlwiZXh0ZW5kXCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICDlm75cXG4gICAgICAgICAgICAgICAgXCIpXSk6X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaHV4aW5nLW1hcmtcIixhdHRyczp7XCJzbG90XCI6XCJleHRlbmRcIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtfdm0ubWFya0h1eGluZyhfdm0uZGV0YWlsLCBwb2ludCl9fSxzbG90OlwiZXh0ZW5kXCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOlwiYXJyb3dcIn0pLF92bS5fdihcIuagh+eCueS9jVxcbiAgICAgICAgICAgICAgICBcIildKV06X3ZtLl9lKCldLDIpfSkpOl92bS5fZSgpLChfdm0uY29udGFpbnMoWzUsIDYsIDE0LCAxNV0sIHByb2JsZW0ucGFzc3JhdGVfbW9kZSkpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInB0MTUgcGIxMFwifSxfdm0uX2woKHByb2JsZW0ubWVhc3VyZV9pdGVtKSxmdW5jdGlvbihsYWJlbCxsYWJlbEluZGV4KXtyZXR1cm4gX2MoJ2Rpdicse2tleTpsYWJlbEluZGV4LHN0YXRpY0NsYXNzOlwiaXRlbS1pbnB1dC1ncm91cFwiLGNsYXNzOnsgbXQxMDogbGFiZWxJbmRleCB9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibGFiZWwtaW5wdXQtZ3JvdXBcIn0sW192bS5fdihfdm0uX3MobGFiZWwpKV0pLF92bS5fbCgoX3ZtLnBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgICAgICAgICAgIH0pKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gX2MoJ251bWJlci1pbnB1dCcse2tleTpwb2ludEluZGV4LGNsYXNzOnsgJ2NvbG9yLXJlZCc6IHBvaW50LmlzRXhjZWVkLCBtbDEwOiBwb2ludEluZGV4IH0sYXR0cnM6e1wiZGVjaW1hbFwiOl92bS4kc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWwsXCJyYW5nZVwiOl92bS4kc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZVJhbmdlfSxvbjp7XCJibHVyXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ucmVhbGl0eVZhbFVwZGF0ZShwcm9ibGVtKX0sXCJmb2N1c1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmF1dG9JbnB1dFNldFZhbChwcm9ibGVtLCBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0pfX0sbW9kZWw6e3ZhbHVlOihwb2ludC52YWwpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChwb2ludCwgXCJ2YWxcIiwgJCR2KX0sZXhwcmVzc2lvbjpcInBvaW50LnZhbFwifX0sWyhwb2ludC5zaG93TWFyayk/Wyhwb2ludC5oYXNNYXJrKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJodXhpbmctdmlld1wiLGF0dHJzOntcInNsb3RcIjpcImV4dGVuZFwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLm1hcmtIdXhpbmcoX3ZtLmRldGFpbCwgcG9pbnQpfX0sc2xvdDpcImV4dGVuZFwifSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgICAgICDlm75cXG4gICAgICAgICAgICAgICAgICBcIildKTpfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJodXhpbmctbWFya1wiLGF0dHJzOntcInNsb3RcIjpcImV4dGVuZFwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO192bS5tYXJrSHV4aW5nKF92bS5kZXRhaWwsIHBvaW50KX19LHNsb3Q6XCJleHRlbmRcIn0sW19jKCdpJyx7c3RhdGljQ2xhc3M6XCJhcnJvd1wifSksX3ZtLl92KFwi5qCH54K55L2NXFxuICAgICAgICAgICAgICAgICAgXCIpXSldOl92bS5fZSgpXSwyKX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImxhYmVsLWlucHV0LWdyb3VwIGxhYmVsLWlucHV0LWdyb3VwLWZsZXhcIn0sW192bS5fdihcIuiuvuiuoeWAvFwiKV0pLF92bS5fbCgoX3ZtLnBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgICAgICAgICAgIH0pKSxmdW5jdGlvbihzZXRWYWxJdGVtLHNldFZhbEluZGV4KXtyZXR1cm4gWyhzZXRWYWxJbmRleCA9PT0gMCk/X2MoJ251bWJlci1pbnB1dCcse2tleTpsYWJlbEluZGV4ICsgJy0nICsgc2V0VmFsSW5kZXgsYXR0cnM6e1wiZGVjaW1hbFwiOl92bS4kc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWwsXCJyYW5nZVwiOl92bS4kc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZVJhbmdlfSxvbjp7XCJibHVyXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2V0VmFsVXBkYXRlKHByb2JsZW0pfSxcImZvY3VzXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uYXV0b0lucHV0U2V0VmFsKHByb2JsZW0sIHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XSl9fSxtb2RlbDp7dmFsdWU6KHNldFZhbEl0ZW0uc2V0VmFsKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoc2V0VmFsSXRlbSwgXCJzZXRWYWxcIiwgJCR2KX0sZXhwcmVzc2lvbjpcInNldFZhbEl0ZW0uc2V0VmFsXCJ9fSk6X3ZtLl9lKCldfSldLDIpfSkpOl92bS5fZSgpLChfdm0uY29udGFpbnMoWzE3XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibnVtYmVyLWlucHV0LWdyb3VwIHBhc3NyYXRlLXNsb3BlXCJ9LFtfYygnZGl2JyxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImxhYmVsLWlucHV0LWdyb3VwXCJ9LFtfdm0uX3YoXCLpq5jluqZcIildKSxfdm0uX2woKF92bS5wb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHtcbiAgICAgICAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgICAgICB9KS5zbGljZSgwLCAyKSksZnVuY3Rpb24ocG9pbnQscG9pbnRJbmRleCl7cmV0dXJuIF9jKCdudW1iZXItaW5wdXQnLHtrZXk6cG9pbnRJbmRleCxjbGFzczp7ICdjb2xvci1yZWQnOiBwb2ludC5pc0V4Y2VlZCB9LGF0dHJzOntcInR5cGVcIjpwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDggPyAndHJ1ZS1vci1mYWxzZScgOiAnYWxsJyxcImRlY2ltYWxcIjpfdm0uJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVEZWNpbWFsLFwicmFuZ2VcIjpfdm0uJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVSYW5nZX0sb246e1wiYmx1clwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnJlYWxpdHlWYWxVcGRhdGUocHJvYmxlbSl9LFwiZm9jdXNcIjpmdW5jdGlvbigkZXZlbnQpe192bS5hdXRvSW5wdXRTZXRWYWwocHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKX19LG1vZGVsOnt2YWx1ZToocG9pbnQudmFsKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQocG9pbnQsIFwidmFsXCIsICQkdil9LGV4cHJlc3Npb246XCJwb2ludC52YWxcIn19LFsocG9pbnQuc2hvd01hcmspP1socG9pbnQuaGFzTWFyayk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaHV4aW5nLXZpZXdcIixhdHRyczp7XCJzbG90XCI6XCJleHRlbmRcIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5tYXJrSHV4aW5nKF92bS5kZXRhaWwsIHBvaW50KX19LHNsb3Q6XCJleHRlbmRcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAg5Zu+XFxuICAgICAgICAgICAgICAgICAgXCIpXSk6X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaHV4aW5nLW1hcmtcIixhdHRyczp7XCJzbG90XCI6XCJleHRlbmRcIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtfdm0ubWFya0h1eGluZyhfdm0uZGV0YWlsLCBwb2ludCl9fSxzbG90OlwiZXh0ZW5kXCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOlwiYXJyb3dcIn0pLF92bS5fdihcIuagh+eCueS9jVxcbiAgICAgICAgICAgICAgICAgIFwiKV0pXTpfdm0uX2UoKV0sMil9KV0sMiksX2MoJ2RpdicsW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJsYWJlbC1pbnB1dC1ncm91cFwifSxbX3ZtLl92KFwi5rC05bmz6Led56a7XCIpXSksX3ZtLl9sKChfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7XG4gICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgfSkuc2xpY2UoMiwgMykpLGZ1bmN0aW9uKHBvaW50LHBvaW50SW5kZXgpe3JldHVybiBfYygnbnVtYmVyLWlucHV0Jyx7a2V5OnBvaW50SW5kZXgsY2xhc3M6eyAnY29sb3ItcmVkJzogcG9pbnQuaXNFeGNlZWQgfSxhdHRyczp7XCJ0eXBlXCI6cHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA4ID8gJ3RydWUtb3ItZmFsc2UnIDogJ2FsbCcsXCJkZWNpbWFsXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlRGVjaW1hbCxcInJhbmdlXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2V9LG9uOntcImJsdXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5yZWFsaXR5VmFsVXBkYXRlKHByb2JsZW0pfSxcImZvY3VzXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uYXV0b0lucHV0U2V0VmFsKHByb2JsZW0sIHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XSl9fSxtb2RlbDp7dmFsdWU6KHBvaW50LnZhbCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KHBvaW50LCBcInZhbFwiLCAkJHYpfSxleHByZXNzaW9uOlwicG9pbnQudmFsXCJ9fSxbKHBvaW50LnNob3dNYXJrKT9bKHBvaW50Lmhhc01hcmspP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImh1eGluZy12aWV3XCIsYXR0cnM6e1wic2xvdFwiOlwiZXh0ZW5kXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ubWFya0h1eGluZyhfdm0uZGV0YWlsLCBwb2ludCl9fSxzbG90OlwiZXh0ZW5kXCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOWbvlxcbiAgICAgICAgICAgICAgICAgIFwiKV0pOl9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImh1eGluZy1tYXJrXCIsYXR0cnM6e1wic2xvdFwiOlwiZXh0ZW5kXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7X3ZtLm1hcmtIdXhpbmcoX3ZtLmRldGFpbCwgcG9pbnQpfX0sc2xvdDpcImV4dGVuZFwifSxbX2MoJ2knLHtzdGF0aWNDbGFzczpcImFycm93XCJ9KSxfdm0uX3YoXCLmoIfngrnkvY1cXG4gICAgICAgICAgICAgICAgICBcIildKV06X3ZtLl9lKCldLDIpfSldLDIpXSk6X3ZtLl9lKCksKF92bS5jb250YWlucyhbOV0sIHByb2JsZW0ucGFzc3JhdGVfbW9kZSkpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm51bWJlci1pbnB1dC1ncm91cFwifSxfdm0uX2woKF92bS5wb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gX2MoJ251bWJlci1pbnB1dCcse2tleTpwb2ludEluZGV4LGF0dHJzOntcImRlY2ltYWxcIjpfdm0uJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVEZWNpbWFsLFwicmFuZ2VcIjpfdm0uJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVSYW5nZX0sb246e1wiYmx1clwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnJlYWxpdHlWYWxVcGRhdGUocHJvYmxlbSl9fSxtb2RlbDp7dmFsdWU6KHBvaW50LnZhbCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KHBvaW50LCBcInZhbFwiLCAkJHYpfSxleHByZXNzaW9uOlwicG9pbnQudmFsXCJ9fSl9KSk6X3ZtLl9lKCldKX0pXSwyKX0pXSwyKTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5tb2RlID09PSAnZWRpdCcgfHwgX3ZtLmRldGFpbC5tb2RlID09PSAncmVkbycpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm10MTBcIn0sW19jKCdpdGVtJyx7c3RhdGljQ2xhc3M6XCJwMTVcIn0sW19jKCdpdGVtLWltZy1saXN0Jyx7YXR0cnM6e1wibWF4bGVuZ3RoXCI6NTAsXCJ0cmFjay10ZXh0XCI6J+Wunua1i+WunumHjyd9LG9uOntcImNhbGxiYWNrXCI6X3ZtLnNhdmVQcm9ibGVtLFwicmVtb3ZlXCI6X3ZtLnNhdmVQcm9ibGVtfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwuaW1nKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJpbWdcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5pbWdcIn19KV0sMSksX2MoJ2l0ZW0tdGV4dGFyZWEnLHtzdGF0aWNDbGFzczpcImJvcmRlci10YlwiLGF0dHJzOntcInBsYWNlaG9sZGVyXCI6XCLooaXlhYXor7TmmI5cIn0sb246e1wiYmx1clwiOl92bS5zYXZlUHJvYmxlbX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlbWFyayksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVtYXJrXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVtYXJrXCJ9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibWIxMFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcImMtbGFiZWxcIn0sW192bS5fdihcIuivt+mAieaLqeaWveW3peWNleS9jVwiKV0pLF92bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSl7cmV0dXJuIF9jKCdzaW5nbGUtc2VsZWN0Jyx7a2V5OnByb2JsZW0uY2hlY2tJdGVtLmlkLGF0dHJzOntcInRpdGxlXCI6cHJvYmxlbS5jaGVja0l0ZW0ubmFtZSxcInBhZ2UtdGl0bGVcIjpcIumAieaLqeaWveW3peWNleS9jVwiLFwicGxhY2Vob2xkZXJcIjpcIuivt+mAieaLqeaWveW3peWNleS9jVwiLFwib3B0aW9uc1wiOl92bS5tb2RlbC5jb250cmFjdG9yc30sb246e1wib25TZWxlY3RcIjpfdm0uc2F2ZVByb2JsZW19LG1vZGVsOnt2YWx1ZToocHJvYmxlbS5jb250cmFjdG9yKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQocHJvYmxlbSwgXCJjb250cmFjdG9yXCIsICQkdil9LGV4cHJlc3Npb246XCJwcm9ibGVtLmNvbnRyYWN0b3JcIn19KX0pXSwyKSxfYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5oqE6YCB5Lq6XCIsXCJtdWx0aVwiOnRydWUsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLmNjT3B0aW9ucyxcInJlcXVpcmVkXCI6dHJ1ZSxcIm1lbW9yeVwiOnRydWV9LG9uOntcIm9uU2VsZWN0XCI6X3ZtLmNoYW5nZUNDfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwuY2MpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcImNjXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwuY2NcIn19KV0sMSk6X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKT9bX2MoJ3Byb2JsZW0tZGV0YWlsLWhlYWRlcicse3N0YXRpY0NsYXNzOlwiYmctd2hpdGUgcHIwXCIsYXR0cnM6e1wic3RhdHVzXCI6X3ZtLmRldGFpbC5zdGF0dXN9fSxbX2MoJ3RlbXBsYXRlJyx7c2xvdDpcIm9wZXJhdFwifSxbKF92bS5kZXRhaWwuYWxsb3dSZWVkaXQgJiYgX3ZtLmRldGFpbC5tb2RlID09PSAndmlldycpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImJ0bi1yZWVkaXRcIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNoYW5nZU1vZGUoJ3JlZWRpdCcpfX19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICDkv67mlLlcXG4gICAgICAgICAgICBcIiksX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJlZGl0XCJ9fSldLDEpOl92bS5fZSgpLChfdm0uZGV0YWlsLnByb2JsZW1EYXRhWzBdLnBhc3NyYXRlX21vZGUgIT09IDkpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImJ0bi1kcmF3aW5nXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS52aWV3SHV4aW5nKF92bS5kZXRhaWwpfX19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICDmiLflnovlm75cXG4gICAgICAgICAgICBcIiksX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJhcnJvdy1yaWdodFwifX0pXSwxKTpfdm0uX2UoKV0pXSwyKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtbGlzdC1oZCBib3JkZXItYm90dG9tXCJ9LFsoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGggPiAxKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJsaXN0LWhkLXRvZ2dsZVwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0udG9nZ2xlUHJvYmxlbURhdGFBbGwoX3ZtLmRldGFpbCl9fX0sW192bS5fdihcIlxcbiAgICAgICAgICBcIitfdm0uX3MoX3ZtLmhhc1Byb2JsZW1EYXRhQ2xvc2UgPyAn5YWo5bGV5byAJyA6ICflhajmlLbotbcnKStcIlxcbiAgICAgICAgXCIpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucHJvYmxlbURhdGEubGVuZ3RoID09PSAxKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJsaXN0LWhkLXRpdGxlXCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgICAg5qOA5p+l6aG5XFxuICAgICAgICBcIildKTpfdm0uX2UoKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJsaXN0LWhkLW51bVwifSxbX3ZtLl92KFwi6K6h566X54K55pWwXCIpXSksKF92bS5kZXRhaWwucHJvYmxlbURhdGFbMF0ucGFzc3JhdGVfbW9kZSAhPT0gOSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibGlzdC1oZC1wYXNzcmF0ZVwifSxbX3ZtLl92KFwiXFxuICAgICAgICAgIOWQiOagvOeOh1xcbiAgICAgICAgXCIpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucHJvYmxlbURhdGFbMF0ucGFzc3JhdGVfbW9kZSA9PT0gOSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibGlzdC1oZC1wYXNzcmF0ZSBhbGlnbi1jIHdzLW5vd3JhcFwiLHN0YXRpY1N0eWxlOntcIndpZHRoXCI6XCI3MnB4XCJ9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgIOW8uuW6puWAvFxcbiAgICAgICAgXCIpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucHJvYmxlbURhdGFbMF0ucGFzc3JhdGVfbW9kZSA9PT0gOSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibGlzdC1oZC1wYXNzcmF0ZSB3cy1ub3dyYXBcIixzdGF0aWNTdHlsZTp7XCJ3aWR0aFwiOlwiMTAwcHhcIn19LFtfdm0uX3YoXCJcXG4gICAgICAgICAg5by65bqm55m+5YiG5q+UXFxuICAgICAgICBcIildKTpfdm0uX2UoKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1saXN0XCJ9LF92bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSxwcm9ibGVtSW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5OnByb2JsZW1JbmRleCxzdGF0aWNDbGFzczpcImJvcmRlci1ib3R0b21cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1pdGVtLWhkXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS50b2dnbGVQcm9ibGVtRGF0YShwcm9ibGVtKX19fSxbKF92bS5kZXRhaWwucHJvYmxlbURhdGEubGVuZ3RoID4gMSk/X2MoJ2knLHtzdGF0aWNDbGFzczpcImRldGFpbC1pdGVtLWFycm93XCIsY2xhc3M6eyAnaXRlbS1hcnJvdy1yaWdodCc6ICFwcm9ibGVtLmlzT3BlbiwgJ2l0ZW0tYXJyb3ctZG93bic6IHByb2JsZW0uaXNPcGVuIH19KTpfdm0uX2UoKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtaXRlbS1uYW1lXCIsY2xhc3M6eyBwbDE1OiBfdm0uZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA9PT0gMSB9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICBcIitfdm0uX3MocHJvYmxlbS5jaGVja0l0ZW0ubmFtZSkrXCJcXG4gICAgICAgICAgICBcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtaXRlbS1udW1cIn0sW192bS5fdihfdm0uX3MocHJvYmxlbS5wb2ludE51bSkpXSksKF92bS5kZXRhaWwucHJvYmxlbURhdGFbMF0ucGFzc3JhdGVfbW9kZSA9PT0gOSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWl0ZW0tcGFzc3JhdGUgYWxpZ24tY1wiLHN0YXRpY1N0eWxlOntcIndpZHRoXCI6XCI3MnB4XCJ9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICBcIitfdm0uX3MocHJvYmxlbS5pbnRlbnNpdHlWYWwpK1wiXFxuICAgICAgICAgICAgXCIpXSk6X3ZtLl9lKCksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWl0ZW0tcGFzc3JhdGVcIixjbGFzczp7ICdjb2xvci1yZWQnOiBwcm9ibGVtLnBhc3NyYXRlIDwgMC45IH19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgIFwiK192bS5fcyhfdm0uX2YoXCJwZXJjZW50XCIpKHByb2JsZW0ucGFzc3JhdGUsMikpK1wiXFxuICAgICAgICAgICAgXCIpXSldKSwocHJvYmxlbS5pc09wZW4pP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1pdGVtLWJkXCJ9LFsocHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA5KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtbGluZVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtbGFiZWxcIixjbGFzczp7ICdkZXRhaWwtbGluZS1sYWJlbC1zaW5nbGUnOiBfdm0uZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA9PT0gMSB9LHN0YXRpY1N0eWxlOntcIndpZHRoXCI6XCIxMTVweFwifX0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICDlvLrluqborr7orqHlgLxcXG4gICAgICAgICAgICAgIFwiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1saW5lLWNvblwifSxbX3ZtLl92KF92bS5fcyhwcm9ibGVtLmludGVuc2l0eVNldFZhbCkpXSldKTpfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtbGluZVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtbGFiZWxcIixjbGFzczp7ICdkZXRhaWwtbGluZS1sYWJlbC1zaW5nbGUnOiBfdm0uZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA9PT0gMSB9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgIOWQiOagvOagh+WHhlxcbiAgICAgICAgICAgICAgXCIpXSksKFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNSB8fFxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE2IHx8XG4gICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTcgfHxcbiAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxOFxuICAgICAgICAgICAgICAgICk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtY29uXCIsZG9tUHJvcHM6e1wiaW5uZXJIVE1MXCI6X3ZtLl9zKHByb2JsZW0uc3RhbmRhcmRSYW5nZSl9fSk6X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtY29uXCJ9LFtfdm0uX3YoX3ZtLl9zKHByb2JsZW0uc3RhbmRhcmRSYW5nZSkpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtbGluZVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtbGFiZWxcIixjbGFzczp7ICdkZXRhaWwtbGluZS1sYWJlbC1zaW5nbGUnOiBfdm0uZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA9PT0gMSB9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgIOWunua1i+WAvFxcbiAgICAgICAgICAgICAgXCIpXSksKFxuICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA1IHx8XG4gICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gNiB8fFxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE0IHx8XG4gICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTVcbiAgICAgICAgICAgICAgICApP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1saW5lLWNvblwifSxfdm0uX2woKHByb2JsZW0uYXJlYURhdGEpLGZ1bmN0aW9uKGFyZWEsYXJlYUluZGV4KXtyZXR1cm4gX2MoJ2Rpdicse2tleTphcmVhSW5kZXgsc3R5bGU6KHsgJ21hcmdpbi10b3AnOiAoYXJlYUluZGV4ID8gOCA6IDApICsgJ3B4JyB9KX0sW19jKCdwJyxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImRldGFpbC1saW5lLWFyZWFcIn0sW192bS5fdihfdm0uX3MoYXJlYS5uYW1lKSldKV0pLF92bS5fbCgocHJvYmxlbS5tZWFzdXJlX2l0ZW0pLGZ1bmN0aW9uKGxhYmVsLGxhYmVsSW5kZXgpe3JldHVybiBbKFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmhhc1BvaW50cyhwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lLCBsYWJlbDogbGFiZWwgfSkubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgKT9fYygnZGl2Jyx7a2V5OmxhYmVsSW5kZXgsc3RhdGljQ2xhc3M6XCJ2aWV3LXBvaW50cy1saW5lXCIsc3R5bGU6KHsgJ21hcmdpbi10b3AnOiAnNHB4JyB9KX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInZpZXctcG9pbnRzLWxlZnRcIn0sW19jKCdzcGFuJyxbX3ZtLl92KF92bS5fcyhsYWJlbCkrXCI6XCIpXSksX3ZtLl9sKChfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJlYTogYXJlYS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpLGZ1bmN0aW9uKHBvaW50LHBvaW50SW5kZXgpe3JldHVybiBbKHBvaW50SW5kZXgpP1tfdm0uX3YoXCIgLCBcIildOl92bS5fZSgpLF9jKCdzcGFuJyx7a2V5OnBvaW50SW5kZXgsY2xhc3M6eyAnY29sb3ItcmVkJzogcG9pbnQuaXNFeGNlZWQgfX0sW192bS5fdihfdm0uX3MocG9pbnQudmFsKSldKV19KV0sMiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidmlldy1wb2ludHMtcmlnaHRcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIOiuvuiuoeWAvFxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiK192bS5fcyhfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSwgbGFiZWw6IGxhYmVsIH0pWzBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldFZhbCkrXCJcXG4gICAgICAgICAgICAgICAgICAgICAgXCIpXSldKTpfdm0uX2UoKV19KV0sMil9KSk6KHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1saW5lLWNvblwifSxfdm0uX2woKF92bS5nZXRBcmVhRGF0YShwcm9ibGVtLnJlYWxpdHlWYWwpKSxmdW5jdGlvbihhcmVhLGFyZWFJbmRleCl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6YXJlYUluZGV4LHN0eWxlOih7ICdtYXJnaW4tdG9wJzogKGFyZWFJbmRleCA/IDggOiAwKSArICdweCcgfSl9LFtfYygncCcsW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtbGluZS1hcmVhXCIsc3R5bGU6KHsgJ21hcmdpbi1yaWdodCc6ICcxMHB4JyB9KX0sW192bS5fdihfdm0uX3MoYXJlYS5uYW1lKSldKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtc2V0dmFsXCJ9LFtfdm0uX3YoXCLorr7orqHlgLxcXG4gICAgICAgICAgICAgICAgICAgICAgXCIrX3ZtLl9zKF92bS5wb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pWzBdLnNldFZhbCkpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ2aWV3LXBvaW50cy1saW5lXCIsc3R5bGU6KHsgJ21hcmdpbi10b3AnOiAnNHB4JyB9KX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInZpZXctcG9pbnRzLWxlZnRcIn0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJjb2xvci10ZXh0IGYxMlwiLHN0eWxlOih7ICdtYXJnaW4tcmlnaHQnOiAnMzBweCcgfSl9LFtfdm0uX3YoXCLpq5jluqZcXG4gICAgICAgICAgICAgICAgICAgICAgXCIpXSksX3ZtLl9sKChfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLnNsaWNlKDAsIDIpKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gWyhwb2ludEluZGV4KT9bX3ZtLl92KFwiICwgXCIpXTpfdm0uX2UoKSxfYygnc3Bhbicse2tleTpwb2ludEluZGV4LGNsYXNzOnsgJ2NvbG9yLXJlZCc6IHBvaW50LmlzRXhjZWVkIH19LFtfdm0uX3YoX3ZtLl9zKHBvaW50LnZhbCkpXSldfSldLDIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidmlldy1wb2ludHMtbGluZVwiLHN0eWxlOih7ICdtYXJnaW4tdG9wJzogJzRweCcgfSl9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ2aWV3LXBvaW50cy1sZWZ0XCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiY29sb3ItdGV4dCBmMTJcIixzdHlsZTooeyAnbWFyZ2luLXJpZ2h0JzogJzEwcHgnIH0pfSxbX3ZtLl92KFwi5rC05bmz6Led56a7XCIpXSksX3ZtLl9sKChfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLnNsaWNlKDIsIDMpKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gWyhwb2ludEluZGV4KT9bX3ZtLl92KFwiICwgXCIpXTpfdm0uX2UoKSxfYygnc3Bhbicse2tleTpwb2ludEluZGV4LGNsYXNzOnsgJ2NvbG9yLXJlZCc6IHBvaW50LmlzRXhjZWVkIH19LFtfdm0uX3YoX3ZtLl9zKHBvaW50LnZhbCkpXSldfSldLDIpXSldKX0pKTpfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtbGluZS1jb25cIn0sX3ZtLl9sKChfdm0uZ2V0QXJlYURhdGEocHJvYmxlbS5yZWFsaXR5VmFsKSksZnVuY3Rpb24oYXJlYSxhcmVhSW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5OmFyZWFJbmRleCxzdHlsZTooeyAnbWFyZ2luLXRvcCc6IChhcmVhSW5kZXggPyA4IDogMCkgKyAncHgnIH0pfSxbX2MoJ3AnLFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtYXJlYVwifSxbX3ZtLl92KF92bS5fcyhhcmVhLm5hbWUpKV0pLChcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxMCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDExIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTYgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxOFxuICAgICAgICAgICAgICAgICAgICAgICk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImRldGFpbC1saW5lLXNldHZhbFwifSxbX3ZtLl92KFwi6K6+6K6h5YC8XFxuICAgICAgICAgICAgICAgICAgICAgIFwiK192bS5fcyhfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSB9KVswXS5zZXRWYWwpKV0pOl92bS5fZSgpLChfdm0uY29udGFpbnMoWzldLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpKT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLWxpbmUtc2V0dmFsXCJ9LFtfdm0uX3YoXCLnorPljJbmt7HluqZcXG4gICAgICAgICAgICAgICAgICAgICAgXCIpLF92bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAgICBcIitfdm0uX3MoKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSB9KVswXS5jYXJib24gfHwgMFxuICAgICAgICAgICAgICAgICAgICAgICAgKS50b0ZpeGVkKDEpKSldKTpfdm0uX2UoKV0pLF9jKCdwJyx7c3RhdGljU3R5bGU6e1wibWFyZ2luLXRvcFwiOlwiNHB4XCJ9fSxbX3ZtLl9sKChfdm0ucG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgfSkpLGZ1bmN0aW9uKHBvaW50LHBvaW50SW5kZXgpe3JldHVybiBbKHBvaW50SW5kZXgpP1tfdm0uX3YoXCIgLCBcIildOl92bS5fZSgpLF9jKCdzcGFuJyx7a2V5OnBvaW50SW5kZXgsY2xhc3M6eyAnY29sb3ItcmVkJzogcG9pbnQuaXNFeGNlZWQgfX0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiK192bS5fcyhwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHBvaW50LnZhbCA9PT0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAn5ZCI5qC8J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAn5LiN5ZCI5qC8J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcG9pbnQudmFsKStcIlxcbiAgICAgICAgICAgICAgICAgICAgICBcIildKV19KSwoIV92bS5wb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pLmxlbmd0aCk/X2MoJ3NwYW4nLFtfdm0uX3YoXCLml6BcIildKTpfdm0uX2UoKV0sMiksKF92bS5jb250YWlucyhbOV0sIHByb2JsZW0ucGFzc3JhdGVfbW9kZSkpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1saW5lLWNhcmJvbi12YWx1ZVwifSxbX2MoJ3NwYW4nLFtfdm0uX3YoXCLlubPlnYflgLxcXG4gICAgICAgICAgICAgICAgICAgICAgXCIrX3ZtLl9zKF92bS5wb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pWzBdLmF2ZykpXSksX2MoJ3NwYW4nLFtfdm0uX3YoXCLlvLrluqblgLxcXG4gICAgICAgICAgICAgICAgICAgICAgXCIrX3ZtLl9zKF92bS5wb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pWzBdLmZjaykpXSldKTpfdm0uX2UoKV0pfSkpXSldKTpfdm0uX2UoKV0pfSkpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm10MTBcIn0sWyhfdm0uZGV0YWlsLnJlbWFyayB8fCBfdm0uZGV0YWlsLmltZy5sZW5ndGgpP19jKCdpdGVtJyx7YXR0cnM6e1wibGFiZWxcIjpcIuihpeWFheivtOaYjlwifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tY29uXCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LFsoX3ZtLmRldGFpbC5yZW1hcmspP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tZm9udFwifSxbX3ZtLl92KF92bS5fcyhfdm0uZGV0YWlsLnJlbWFyaykpXSk6X3ZtLl9lKCksX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJlZGl0YWJsZWRcIjpmYWxzZX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLmltZyksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwiaW1nXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwuaW1nXCJ9fSldLDEpXSk6X3ZtLl9lKCksKF92bS5oYXNDb250cmFjdG9yKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLmlr3lt6XljZXkvY1cIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHRcIixhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sX3ZtLl9sKChfdm0uZGV0YWlsLnByb2JsZW1EYXRhKSxmdW5jdGlvbihwcm9ibGVtKXtyZXR1cm4gX2MoJ3AnLHtrZXk6cHJvYmxlbS5pZH0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgXCIrX3ZtLl9zKHByb2JsZW0uY29udHJhY3RvciA/IHByb2JsZW0uY29udHJhY3Rvci5uYW1lIDogJycpK1wiXFxuICAgICAgICAgICAgXCIpXSl9KSldKTpfdm0uX2UoKSxfYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5qOA5p+l5Lq6XCIsXCJtb2RlXCI6XCJ2aWV3XCIsXCJlZGl0YWJsZWRcIjpmYWxzZX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlZ2lzdCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVnaXN0XCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVnaXN0XCJ9fSksX2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5qOA5p+l5pe26Ze0XCIsXCJ0ZXh0XCI6X3ZtLmZvcm1hdERhdGUoX3ZtLmRldGFpbC5yZWdpc3RfZGF0ZSl9fSksKFxuICAgICAgICAgICAgKF92bS5kZXRhaWwucmVwYWlyX3JlbWFyayB8fFxuICAgICAgICAgICAgICAoX3ZtLmRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZSAmJiBfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlLmxlbmd0aCkpICYmXG4gICAgICAgICAgICAgIF92bS5kZXRhaWwuc3RhdHVzICE9PSAn5b6F5pW05pS5J1xuICAgICAgICAgICk/X2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5pW05pS554Wn54mHXCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1jb25cIixhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sWyhfdm0uZGV0YWlsLnJlcGFpcl9yZW1hcmspP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tZm9udFwifSxbX3ZtLl92KF92bS5fcyhfdm0uZGV0YWlsLnJlcGFpcl9yZW1hcmspKV0pOl92bS5fZSgpLF9jKCdpdGVtLWltZy1saXN0Jyx7YXR0cnM6e1wiZWRpdGFibGVkXCI6ZmFsc2V9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZSksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyX2ltYWdlX2ZpbGVcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZVwifX0pXSwxKV0pOl92bS5fZSgpLChfdm0uZGV0YWlsLnJlcGFpci5pZCAmJiAoX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknIHx8IF92bS5kZXRhaWwuc3RhdHVzID09PSAn5bey5pW05pS5JykpP19jKCd1c2VyLXNlbGVjdCcse2F0dHJzOntcInRpdGxlXCI6XCLmlbTmlLnkurpcIixcIm1vZGVcIjpcInZpZXdcIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwucmVwYWlyT3B0aW9ucyxcImRhdGVcIjpfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+W3suaVtOaUuScgPyBfdm0uZm9ybWF0RGF0ZShfdm0uZGV0YWlsLnJlcGFpcl9kYXRlKSA6ICcnLFwiZWRpdGFibGVkXCI6KF92bS5kZXRhaWwuaXNDaGVja2VyIHx8IF92bS5kZXRhaWwuaXNSZXBhaXIpICYmIF92bS5kZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5JyxcImJlZm9yZS1zZWxlY3RcIjpfdm0uYmVmb3JlU2VsZWN0UmVwYWlyfSxvbjp7XCJvblNlbGVjdFwiOl92bS5vblNlbGVjdFJlcGFpcn0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyXCJ9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwuaXNSZXBhaXIgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLmlbTmlLnnhafniYdcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJtYXhsZW5ndGhcIjo1MCxcInRyYWNrLXRleHRcIjon5a6e5rWL5a6e6YePJ30sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJfaW1hZ2VfZmlsZVwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlXCJ9fSldLDEpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwuaXNSZXBhaXIgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknKT9fYygnaXRlbS10ZXh0YXJlYScse3N0YXRpY0NsYXNzOlwiYm9yZGVyLXRiXCIsYXR0cnM6e1wicGxhY2Vob2xkZXJcIjpcIuihpeWFheivtOaYjlwifSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVwYWlyX3JlbWFyayksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyX3JlbWFya1wiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpcl9yZW1hcmtcIn19KTpfdm0uX2UoKSxfYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5oqE6YCB5Lq6XCIsXCJtb2RlXCI6XCJ2aWV3XCIsXCJtdWx0aVwiOnRydWUsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLmNjT3B0aW9ucyxcImVkaXRhYmxlZFwiOl92bS5kZXRhaWwuc3RhdHVzICE9PSAn5bey5pW05pS5J30sb246e1wib25TZWxlY3RcIjpfdm0uY2hhbmdlQ0N9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5jYyksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwiY2NcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5jY1wifX0pXSwxKV06X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCcpP1soX3ZtLmRldGFpbC5yZW1hcmsgfHwgX3ZtLmRldGFpbC5pbWcubGVuZ3RoKT9fYygnaXRlbScse3N0YXRpY0NsYXNzOlwibXQxMFwiLGF0dHJzOntcImxhYmVsXCI6XCLooaXlhYXor7TmmI5cIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbKF92bS5kZXRhaWwucmVtYXJrKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWZvbnRcIn0sW192bS5fdihfdm0uX3MoX3ZtLmRldGFpbC5yZW1hcmspKV0pOl92bS5fZSgpLF9jKCdpdGVtLWltZy1saXN0Jyx7YXR0cnM6e1wiZWRpdGFibGVkXCI6ZmFsc2UsXCJ0cmFjay10ZXh0XCI6J+Wunua1i+WunumHjyd9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5pbWcpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcImltZ1wiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLmltZ1wifX0pXSwxKV0pOl92bS5fZSgpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1iMTBcIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJjLWxhYmVsXCJ9LFtfdm0uX3YoXCLor7fpgInmi6nmlr3lt6XljZXkvY1cIildKSxfdm0uX2woKF92bS5kZXRhaWwucHJvYmxlbURhdGEpLGZ1bmN0aW9uKHByb2JsZW0pe3JldHVybiBfYygnc2luZ2xlLXNlbGVjdCcse2tleTpwcm9ibGVtLmNoZWNrSXRlbS5pZCxhdHRyczp7XCJ0aXRsZVwiOnByb2JsZW0uY2hlY2tJdGVtLm5hbWUsXCJwYWdlLXRpdGxlXCI6XCLpgInmi6nmlr3lt6XljZXkvY1cIixcInBsYWNlaG9sZGVyXCI6XCLor7fpgInmi6nmlr3lt6XljZXkvY1cIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwuY29udHJhY3RvcnMsXCJtb2RlXCI6XCJ2aWV3XCJ9LG1vZGVsOnt2YWx1ZToocHJvYmxlbS5jb250cmFjdG9yKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQocHJvYmxlbSwgXCJjb250cmFjdG9yXCIsICQkdil9LGV4cHJlc3Npb246XCJwcm9ibGVtLmNvbnRyYWN0b3JcIn19KX0pXSwyKV06X3ZtLl9lKCksKF92bS5kZXRhaWwuc3RhdHVzID09PSAn5qOA5p+l5a6M5q+VJyAmJiBfdm0uZGV0YWlsLm1vZGUgIT09ICdyZWVkaXQnICYmIF92bS5kZXRhaWwubW9kZSAhPT0gJ3JlZG8nKT9bX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibmVlZC1yZXBhaXJcIixvbjp7XCJjbGlja1wiOl92bS5zZXROZWVkUmVwYWlyfX0sW19jKCdpY29uJyx7YXR0cnM6e1wibmFtZVwiOl92bS5kZXRhaWwubmVlZFJlcGFpciA/ICdjaGVja2JveC1zcXVhcmUtY2hlY2tlZCcgOiAnY2hlY2tib3gtc3F1YXJlJ319KSxfdm0uX3YoXCLpgJrnn6XmlbTmlLlcXG4gICAgICBcIildLDEpLChfdm0uZGV0YWlsLm5lZWRSZXBhaXIpP19jKCd1c2VyLXNlbGVjdCcse2F0dHJzOntcInRpdGxlXCI6XCLmlbTmlLnkurpcIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwucmVwYWlyT3B0aW9ucyxcIm1lbW9yeVwiOnRydWV9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5yZXBhaXIpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcInJlcGFpclwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpclwifX0pOl92bS5fZSgpLChfdm0uZGV0YWlsLm5lZWRSZXBhaXIpP19jKCdhcHAtYnV0dG9uLWdyb3VwJyx7c3RhdGljQ2xhc3M6XCJwdDEwXCJ9LFtfYygnYXBwLWJ1dHRvbicse2F0dHJzOntcIm5hbWVcIjpcIumAmuefpeaVtOaUuVwifSxvbjp7XCJjbGlja1wiOl92bS5zZXRSZXBhaXJ9fSldLDEpOl92bS5fZSgpXTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5pZCAmJiBfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+ajgOafpeS4rScpP19jKCdhcHAtYnV0dG9uLWdyb3VwJyxbX2MoJ2FwcC1idXR0b24nLHthdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCIsXCJuYW1lXCI6XCLliKDpmaTmraTojYnnqL9cIn0sb246e1wiY2xpY2tcIjpfdm0uZGVsUHJvYmxlbX19KV0sMSk6X3ZtLl9lKCksKFxuICAgICAgICBfdm0uZGV0YWlsLnN0YXR1cyAhPT0gJ+ajgOafpeS4rScgJiZcbiAgICAgICAgICBfdm0uZGV0YWlsLm1vZGUgPT09ICd2aWV3JyAmJlxuICAgICAgICAgICFfdm0uYWxsb3dNZWFzdXJlUmVpbnNwZWN0ICYmXG4gICAgICAgICAgX3ZtLm1vZGVsLmN1cnJlbnRVc2VyQmF0Y2hJZCA9PT0gX3ZtLmRldGFpbC5iYXRjaF9pZFxuICAgICAgKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcsW19jKCdhcHAtYnV0dG9uJyx7YXR0cnM6e1widHlwZVwiOlwib3BlcmF0ZVwiLFwibmFtZVwiOlwi5YaN5rWL5LiA5qyhXCJ9LG9uOntcImNsaWNrXCI6X3ZtLnNldFJlZG99fSldLDEpOl92bS5fZSgpXTpfdm0uX2UoKSxfYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1sb2FkaW5nXCI6ZmFsc2UsXCJpcy1lbXB0eVwiOiFfdm0uaGFzTWFzdGVyQ2hlY2tpdGVtLFwiZW1wdHktdGV4dFwiOlwi6K+36YCJ5oup5qOA5p+l6aG5XCJ9fSksKF92bS5oYXNDYXJib25EaWFsb2cpP19jKCdtZWFzdXJlLWNhcmJvbi1kaWFsb2cnLHthdHRyczp7XCJ2YWx1ZVwiOl92bS5jYXJib25EYXRhLFwic2hvd1wiOl92bS5jYXJib25TaG93fSxvbjp7XCJjbG9zZVwiOl92bS5jYXJib25DbG9zZSxcInNlbGVjdFwiOl92bS5jYXJib25TZWxlY3R9fSk6X3ZtLl9lKCldLDIpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtdGVtcGxhdGUtMi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC10ZW1wbGF0ZS0yLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZGV0YWlsLXRlbXBsYXRlLTIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZmY2JlM2YyJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RldGFpbC10ZW1wbGF0ZS0yLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGV0YWlsLXRlbXBsYXRlLTIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2RldGFpbC10ZW1wbGF0ZS0yLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWZmY2JlM2YyJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImZmY2JlM2YyXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MDkwMWFhZGQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCJmNmExMTgwYVwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsIjx0ZW1wbGF0ZT5cbiAgPHRyYW5zaXRpb24gbmFtZT1cInNsaWRlLXJpZ2h0XCI+XG4gICAgPHBhZ2UtY29udGVudCB2LWlmPVwic2hvd1wiIG1vZGU9XCJkaWFsb2dcIiB0aXRsZT1cIuaIt+Wei+WbvlwiIDpvbi1jbG9zZT1cImNsb3NlUG9wdXBcIj5cbiAgICAgIDxkaXYgdi1pZj1cIm1vZGUgPT09ICdlZGl0J1wiIHNsb3Q9XCJoZWFkZXItYmFyLXJpZ2h0XCIgY2xhc3M9XCJoZWFkZXItYnRuXCIgQGNsaWNrPVwiY29uZmlybVwiPlxuICAgICAgICDnoa7lrppcbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c2Nyb2xsZXIgcmVmPVwic2Nyb2xsZXJcIj5cbiAgICAgICAgPGRpdiB2LWlmPVwibW9kZSA9PT0gJ2VkaXQnXCIgY2xhc3M9XCJwMTUgYm9yZGVyLWJvdHRvbSBjb2xvci1ncmF5XCI+XG4gICAgICAgICAg54K55Ye75oi35Z6L5Zu+5qCH6K6w54iG54K55L2N572u77yM5bm26L6T5YWl54iG54K55pWw5YC8XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkcmF3aW5nXG4gICAgICAgICAgOnVybD1cInVybFwiXG4gICAgICAgICAgOnBvaW50cz1cInBvaW50c1wiXG4gICAgICAgICAgcmVmPVwiZHJhd2luZ1wiXG4gICAgICAgICAgQG9uY2xpY2s9XCJvbmNsaWNrXCJcbiAgICAgICAgICBAY2xpY2suc3RvcFxuICAgICAgICAgIDpzdHlsZT1cInsgaGVpZ2h0OiBkcmF3aW5nSGVpZ2h0ICsgJ3B4JyB9XCJcbiAgICAgICAgLz5cblxuICAgICAgICA8IS0tIOe8lui+keaooeW8jyAtLT5cbiAgICAgICAgPGRpdiBjbGFzcz1cInBvaW50LWlucHV0LWxpc3QgYm9yZGVyLXRiXCIgdi1pZj1cIm1vZGUgPT09ICdlZGl0JyAmJiBwb2ludHMubGVuZ3RoXCI+XG4gICAgICAgICAgPG51bWJlci1pbnB1dFxuICAgICAgICAgICAgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIHBvaW50c1wiXG4gICAgICAgICAgICA6a2V5PVwicG9pbnRJbmRleFwiXG4gICAgICAgICAgICByZWY9XCJleGNlZWQtcG9pbnQtaW5wdXRcIlxuICAgICAgICAgICAgY2xhc3M9XCJtcjEwIG1iMTBcIlxuICAgICAgICAgICAgdi1tb2RlbD1cInBvaW50LnZhbFwiXG4gICAgICAgICAgICA6ZGVjaW1hbD1cInZhbHVlRGVjaW1hbFwiXG4gICAgICAgICAgICA6cmFuZ2U9XCJ2YWx1ZVJhbmdlXCJcbiAgICAgICAgICAgIEBmb2N1cz1cImlucHV0Rm9jdXMocG9pbnRJbmRleClcIlxuICAgICAgICAgICAgQGJsdXI9XCJpbnB1dEJsdXJcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxpIHNsb3Q9XCJleHRlbmRcIiBjbGFzcz1cImljb24tbWludXNcIiBAY2xpY2suc3RvcD1cInJlbW92ZUV4Y2VlZFBvaW50KHBvaW50KVwiIC8+XG4gICAgICAgICAgPC9udW1iZXItaW5wdXQ+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8IS0tIOe8lui+keaooeW8jyBlbmQgLS0+XG5cbiAgICAgICAgPCEtLSDmn6XnnIvmqKHlvI8gLS0+XG4gICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwibW9kZSA9PT0gJ3ZpZXcnXCI+XG4gICAgICAgICAgPHRlbXBsYXRlIHYtZm9yPVwiKGl0ZW0sIGl0ZW1JbmRleCkgaW4gbGF5b3V0UG9pbnRzRGF0YVwiPlxuICAgICAgICAgICAgPGl0ZW0gdi1pZj1cIml0ZW0uaXRlbU5hbWVcIiA6a2V5PVwiaXRlbUluZGV4XCIgYm9yZGVyPVwidG9wXCIgOmxhYmVsPVwiaXRlbS5pdGVtTmFtZVwiPlxuICAgICAgICAgICAgICA8ZGl2IHNsb3Q9XCJyaWdodFwiIGNsYXNzPVwiaXRlbS1jb25cIj5cbiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9XCIoYXJlYSwgYXJlYUluZGV4KSBpbiBpdGVtLmFyZWFzXCI+XG4gICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImFyZWEucG9pbnRzICYmIGFyZWEucG9pbnRzLmxlbmd0aFwiPlxuICAgICAgICAgICAgICAgICAgICA8cCB2LWlmPVwiYXJlYS5hcmVhTmFtZVwiIDprZXk9XCInbmFtZScgKyBhcmVhSW5kZXhcIiBjbGFzcz1cIm1iMTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImFyZWEtbmFtZVwiPnt7IGFyZWEuYXJlYU5hbWUgfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiA6a2V5PVwiJ3BvaW50cycgKyBhcmVhSW5kZXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIGFyZWEucG9pbnRzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9XCJwb2ludEluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicG9pbnQtZWxlIG1yMTAgbWIxMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICdwb2ludC1leGNlZWQnOiBwb2ludC5pc0V4Y2VlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3BvaW50LWN1cic6IHBvaW50LmluZGV4ID09PSBsaWdodEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9XCJjbGlja1BvaW50RWxlKHBvaW50KVwiXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5wYXNzcmF0ZU1vZGUgPT09IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHBvaW50LnZhbCA9PT0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAn5ZCI5qC8J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAn5LiN5ZCI5qC8J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcG9pbnQudmFsXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT5cbiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtZm9yPVwiKGFyZWEsIGFyZWFJbmRleCkgaW4gaXRlbS5hcmVhc1wiPlxuICAgICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgICB2LWlmPVwiYXJlYS5wb2ludHMgJiYgYXJlYS5wb2ludHMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgIDprZXk9XCJhcmVhSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgYm9yZGVyPVwidG9wXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwicHQxNVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPVwiYXJlYS5hcmVhTmFtZVwiIGNsYXNzPVwiaXRlbS1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICB7eyBhcmVhLmFyZWFOYW1lIH19XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLWNvblwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPVwiKHBvaW50LCBwb2ludEluZGV4KSBpbiBhcmVhLnBvaW50c1wiXG4gICAgICAgICAgICAgICAgICAgICAgOmtleT1cInBvaW50SW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicG9pbnQtZWxlIG1yMTAgbWIxMFwiXG4gICAgICAgICAgICAgICAgICAgICAgOmNsYXNzPVwie1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3BvaW50LWV4Y2VlZCc6IHBvaW50LmlzRXhjZWVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ3BvaW50LWN1cic6IHBvaW50LmluZGV4ID09PSBsaWdodEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrUG9pbnRFbGUocG9pbnQpXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIHt7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnBhc3NyYXRlTW9kZSA9PT0gOCA/IChwb2ludC52YWwgPT09IDEgPyAn5ZCI5qC8JyA6ICfkuI3lkIjmoLwnKSA6IHBvaW50LnZhbFxuICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvaXRlbT5cbiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPCEtLSDmn6XnnIvmqKHlvI8gZW5kIC0tPlxuXG4gICAgICAgIDxkaXZcbiAgICAgICAgICB2LWlmPVwic2Nyb2xsUGFkZGluZ0JvdHRvbVwiXG4gICAgICAgICAgOnN0eWxlPVwieyAncGFkZGluZy1ib3R0b20nOiBzY3JvbGxQYWRkaW5nQm90dG9tICsgJ3B4JyB9XCJcbiAgICAgICAgPjwvZGl2PlxuICAgICAgPC9zY3JvbGxlcj5cbiAgICA8L3BhZ2UtY29udGVudD5cbiAgPC90cmFuc2l0aW9uPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBTY3JvbGxlciBmcm9tICdAY29tcG9uZW50cy9zY3JvbGxlcic7XG5pbXBvcnQgSXRlbSBmcm9tICdAY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgTnVtYmVySW5wdXQgZnJvbSAnQGNvbXBvbmVudHMvbnVtYmVyLWlucHV0L2luZGV4LnZ1ZSc7XG5pbXBvcnQgRHJhd2luZyBmcm9tICdAY29tcG9uZW50cy9kcmF3aW5nL2luZGV4LnZ1ZSc7XG5cblxuaW1wb3J0IFBvcHVwTWl4aW4gZnJvbSAnQHNyYy91dGlscy9wb3B1cC1taXhpbic7XG5pbXBvcnQgUG9wdXAgZnJvbSAnQHNyYy91dGlscy9wb3B1cCc7XG5pbXBvcnQgc3RvcmUgZnJvbSAnQHN0b3JlJztcblxubGV0IF9jYWxsYmFjaztcbmxldCBwb2ludENvbG9yTm9ybWFsID0gJyNmZjQ1NDYnO1xubGV0IHBvaW50Q29sb3JMaWdodCA9ICcjNDI3NWU4JztcbmxldCBwb2ludENvbG9yUXVhbGlmaWVkID0gJyMxNGZmNTYnO1xuXG4vKiDluKblrp7mtYvngrnnmoTmiLflnovlm77vvIznm67liY3lj6rnlKjkuo7lrp7mtYvlrp7ph48gKi9cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnRHJhd2luZ1dpdGhQb2ludCcsXG4gIGNvbXBvbmVudHM6IHsgU2Nyb2xsZXIsIEl0ZW0sIE51bWJlcklucHV0LCBEcmF3aW5nIH0sXG4gIG1peGluczogW1BvcHVwTWl4aW5dLFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIGlzTG9hZGluZzogdHJ1ZSxcblxuICAgICAgcG9pbnRzOiBbXSxcbiAgICAgIG1heE1hcmtzOiBJbmZpbml0eSxcblxuICAgICAgbGF5b3V0UG9pbnRzRGF0YTogW10sXG4gICAgICBjaGVja2l0ZW1EYXRhOiBbXSxcbiAgICAgIGFyZWFEYXRhOiBbXSxcblxuICAgICAgLy8g5qih5byP77yM57yW6L6RKGVkaXQpIOWSjCDmn6XnnIsodmlldylcbiAgICAgIG1vZGU6ICd2aWV3JyxcblxuICAgICAgc2Nyb2xsUGFkZGluZ0JvdHRvbTogMCxcbiAgICAgIGxpZ2h0SW5kZXg6ICcnLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgaXNOdW1iZXJJbnB1dE9wZW4oKSB7XG4gICAgICByZXR1cm4gc3RvcmUuc3RhdGUuZ2xvYmFsLmlzTnVtYmVySW5wdXRPcGVuO1xuICAgIH0sXG4gICAgZHJhd2luZ0hlaWdodCgpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7XG4gICAgfSxcbiAgICB2YWx1ZURlY2ltYWwoKSB7XG4gICAgICByZXR1cm4gc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWw7XG4gICAgfSxcbiAgICB2YWx1ZVJhbmdlKCkge1xuICAgICAgcmV0dXJuIHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVSYW5nZTtcbiAgICB9LFxuICB9LFxuICB3YXRjaDoge1xuICAgIGlzTnVtYmVySW5wdXRPcGVuKHYpIHtcbiAgICAgIGlmICh2KSB7XG4gICAgICAgIHRoaXMuc2Nyb2xsUGFkZGluZ0JvdHRvbSA9IDIzMjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc2Nyb2xsUGFkZGluZ0JvdHRvbSA9IDA7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9wZW5Qb3B1cChwYXJhbXMpIHtcbiAgICAgIHRoaXMuc2hvdyA9IHRydWU7XG5cbiAgICAgIHRoaXMubW9kZSA9IHBhcmFtcy5tb2RlO1xuICAgICAgdGhpcy51cmwgPSBwYXJhbXMudXJsO1xuICAgICAgLy8gdGhpcy5wb2ludHMgPSBfLmNsb25lKHBhcmFtcy5wb2ludHMpO1xuICAgICAgdGhpcy5wb2ludHMgPSBfLm1hcChwYXJhbXMucG9pbnRzLCAocG9pbnQsIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4ucG9pbnQsXG4gICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgICB0aGlzLm1heE1hcmtzID0gaXNOYU4ocGFyYW1zLm1heE1hcmtzKSA/IEluZmluaXR5IDogcGFyYW1zLm1heE1hcmtzO1xuICAgICAgX2NhbGxiYWNrID0gcGFyYW1zLmNhbGxiYWNrO1xuXG4gICAgICB0aGlzLnBvaW50TGlnaHQoKTtcblxuICAgICAgLy8g55So5LqO5biD5bGA55qE5a6e5rWL54K55pWw5o2u77yM5YyF5ZCr5qOA5p+l6aG577yM5rWL5Yy6XG4gICAgICAvLyBbeyBpdGVtTmFtZTogJycsIGFyZWFzOiBbe2FyZWFOYW1lOiAnJywgcG9pbnRzOiBbXX1dIH1dXG4gICAgICB0aGlzLmxheW91dFBvaW50c0RhdGEgPSBbXTtcbiAgICAgIGlmIChfLmlzRW1wdHkocGFyYW1zLml0ZW1EYXRhKSB8fCBwYXJhbXMuaXRlbURhdGEubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIGxldCBwYXNzcmF0ZU1vZGUgPVxuICAgICAgICAgIChwYXJhbXMuaXRlbURhdGEgJiYgcGFyYW1zLml0ZW1EYXRhWzBdICYmIHBhcmFtcy5pdGVtRGF0YVswXS5wYXNzcmF0ZV9tb2RlKSB8fCAnJztcbiAgICAgICAgbGV0IGl0ZW1EYXRhID0geyBpdGVtTmFtZTogJycsIGFyZWFzOiBbXSwgcGFzc3JhdGVNb2RlOiBwYXNzcmF0ZU1vZGUgfTtcblxuICAgICAgICBpZiAoXy5pc0VtcHR5KHBhcmFtcy5hcmVhRGF0YSkpIHtcbiAgICAgICAgICBsZXQgcG9pbnRzID0gXy5jbG9uZSh0aGlzLnBvaW50cyk7XG4gICAgICAgICAgaXRlbURhdGEuYXJlYXMucHVzaCh7IGFyZWFOYW1lOiAnJywgcG9pbnRzOiBwb2ludHMgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgXy5lYWNoKHBhcmFtcy5hcmVhRGF0YSwgYXJlYSA9PiB7XG4gICAgICAgICAgICBsZXQgcG9pbnRzID0gXy5maWx0ZXIodGhpcy5wb2ludHMsIHsgYXJlYTogYXJlYS5uYW1lIH0pO1xuXG4gICAgICAgICAgICBpdGVtRGF0YS5hcmVhcy5wdXNoKHsgYXJlYU5hbWU6IGFyZWEubmFtZSwgcG9pbnRzOiBwb2ludHMgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmxheW91dFBvaW50c0RhdGEucHVzaChpdGVtRGF0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfLmVhY2gocGFyYW1zLml0ZW1EYXRhLCBpdGVtID0+IHtcbiAgICAgICAgICBsZXQgaXRlbU5hbWUgPSBpdGVtLml0ZW1fbmFtZSA/IGl0ZW0uaXRlbV9uYW1lIDogaXRlbS5uYW1lO1xuICAgICAgICAgIGxldCBpdGVtRGF0YSA9IHsgaXRlbU5hbWU6IGl0ZW1OYW1lLCBhcmVhczogW10sIHBhc3NyYXRlTW9kZTogaXRlbS5wYXNzcmF0ZV9tb2RlIHx8ICcnIH07XG5cbiAgICAgICAgICBpZiAoXy5pc0VtcHR5KHBhcmFtcy5hcmVhRGF0YSkpIHtcbiAgICAgICAgICAgIGxldCBwb2ludHMgPSBfLmZpbHRlcih0aGlzLnBvaW50cywgeyBpdGVtTmFtZTogaXRlbU5hbWUgfSk7XG4gICAgICAgICAgICBpdGVtRGF0YS5hcmVhcy5wdXNoKHsgYXJlYU5hbWU6ICcnLCBwb2ludHM6IHBvaW50cyB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgXy5lYWNoKHBhcmFtcy5hcmVhRGF0YSwgYXJlYSA9PiB7XG4gICAgICAgICAgICAgIGxldCBwb2ludHMgPSBfLmZpbHRlcih0aGlzLnBvaW50cywgeyBpdGVtTmFtZTogaXRlbU5hbWUsIGFyZWE6IGFyZWEubmFtZSB9KTtcbiAgICAgICAgICAgICAgaXRlbURhdGEuYXJlYXMucHVzaCh7IGFyZWFOYW1lOiBhcmVhLm5hbWUsIHBvaW50czogcG9pbnRzIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5sYXlvdXRQb2ludHNEYXRhLnB1c2goaXRlbURhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kZW1pdCgnb3BlbicpO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGNsb3NlUG9wdXAoKSB7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgfSxcblxuICAgIC8vIOiuvue9rumrmOS6rlxuICAgIHBvaW50TGlnaHQoaW5kZXgpIHtcbiAgICAgIHRoaXMubGlnaHRJbmRleCA9IGluZGV4O1xuICAgICAgdGhpcy5wb2ludHMgPSBfLm1hcCh0aGlzLnBvaW50cywgKHBvaW50LCBpKSA9PiB7XG4gICAgICAgIGxldCBwID0geyAuLi5wb2ludCB9O1xuICAgICAgICBpZiAoaW5kZXggPT09IGkpIHtcbiAgICAgICAgICBwLmNvbG9yID0gcG9pbnRDb2xvckxpZ2h0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChwLmlzUXVhbGlmaWVkKSB7XG4gICAgICAgICAgICBwLmNvbG9yID0gcG9pbnRDb2xvclF1YWxpZmllZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcC5jb2xvciA9IHBvaW50Q29sb3JOb3JtYWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOeCueWHu+Wunua1i+eCuVxuICAgIGNsaWNrUG9pbnRFbGUocG9pbnQpIHtcbiAgICAgIHRoaXMucG9pbnRMaWdodChwb2ludC5pbmRleCk7XG4gICAgfSxcblxuICAgIHJlbW92ZUV4Y2VlZFBvaW50KHBvaW50KSB7XG4gICAgICBsZXQgaW5kZXggPSB0aGlzLnBvaW50cy5pbmRleE9mKHBvaW50KTtcbiAgICAgIHRoaXMucG9pbnRzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfSxcblxuICAgIGlucHV0Rm9jdXMoaW5kZXgpIHtcbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgbGV0IGlucHV0ID0gdGhpcy4kcmVmc1snZXhjZWVkLXBvaW50LWlucHV0J11baW5kZXhdO1xuICAgICAgICB0aGlzLnBvaW50TGlnaHQoaW5kZXgpO1xuXG4gICAgICAgIHRoaXMuJHJlZnNbJ3Njcm9sbGVyJ10uc2Nyb2xsVG9FbGUoaW5wdXQpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBpbnB1dEJsdXIoKSB7XG4gICAgICB0aGlzLnBvaW50TGlnaHQoKTtcbiAgICB9LFxuXG4gICAgb25jbGljayhkYXRhKSB7XG4gICAgICBpZiAodGhpcy5tb2RlID09PSAndmlldycpIHtcbiAgICAgICAgaWYgKGRhdGEuY2xpY2tQb2ludCAmJiBkYXRhLmNsaWNrUG9pbnQudGFnID09PSAncG9pbnRzJykge1xuICAgICAgICAgIGxldCBpbmRleCA9IGRhdGEuY2xpY2tQb2ludC5pbmRleDtcbiAgICAgICAgICB0aGlzLnBvaW50TGlnaHQoaW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDmoIforrDkuIDnu4TngrlcbiAgICAgICAgaWYgKHRoaXMucG9pbnRzLmxlbmd0aCA+PSB0aGlzLm1heE1hcmtzKSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoJ+eIhueCueS4quaVsOS4jeiDveWkp+S6juWunua1i+eCueaVsCcpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucG9pbnRzLnB1c2goeyB4OiBkYXRhLngsIHk6IGRhdGEueSB9KTtcblxuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgbGV0IGFsbElucHV0ID0gdGhpcy4kcmVmc1snZXhjZWVkLXBvaW50LWlucHV0J107XG4gICAgICAgICAgbGV0IGxhc3RJbnB1dCA9IGFsbElucHV0ICYmIGFsbElucHV0W2FsbElucHV0Lmxlbmd0aCAtIDFdO1xuXG4gICAgICAgICAgaWYgKGxhc3RJbnB1dCkge1xuICAgICAgICAgICAgbGFzdElucHV0Lm9wZW5LZXlib2FyZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNvbmZpcm0oKSB7XG4gICAgICBsZXQgcmVzdWx0ID0gW107XG5cbiAgICAgIF8uZWFjaCh0aGlzLnBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICBpZiAocG9pbnQudmFsICE9PSAnJyAmJiBwb2ludC52YWwgIT09IG51bGwgJiYgcG9pbnQudmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBkZWxldGUgcG9pbnQuY29sb3I7XG4gICAgICAgICAgcmVzdWx0LnB1c2gocG9pbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgX2NhbGxiYWNrICYmIF9jYWxsYmFjayhyZXN1bHQpO1xuICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLmRyYXdpbmcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBvaW50LWlucHV0LWxpc3Qge1xuICBwYWRkaW5nOiAxNXB4IDAgNXB4IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uYXJlYS1uYW1lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbiAgY29sb3I6ICM4YzhjOGM7XG4gIHBhZGRpbmc6IDJweDtcbn1cblxuLnBvaW50LWVsZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDU2cHg7XG4gIGhlaWdodDogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2RjZGM7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNvbG9yOiAjMzMzO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ucG9pbnQtZXhjZWVkIHtcbiAgY29sb3I6ICNmZjQ2NDQ7XG59XG4ucG9pbnQtY3VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQyNzVlODtcbiAgYm9yZGVyLWNvbG9yOiAjNDI3NWU4O1xuICBjb2xvcjogd2hpdGU7XG59XG48L3N0eWxlPlxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3JlZjpcInNlbGVjdC1jb25cIixzdGF0aWNDbGFzczpcInNlbGVjdC1jb25cIixjbGFzczp7ICdzZWxlY3QtZGlzYWJsZWQnOiAhX3ZtLmVkaXRhYmxlZCB8fCBfdm0uaXNMb2FkaW5nIH0sb246e1wiY2xpY2tcIjpfdm0ub3BlbkRpYWxvZ319LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJzZWxlY3QtaGRcIn0sW192bS5fdihfdm0uX3MoX3ZtLmlzTG9hZGluZyA/ICcuLi4nIDogX3ZtLmhkVGV4dCkpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwic2VsZWN0LWJkXCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5pc0xvYWRpbmcgPyAnLi4uJyA6IF92bS5iZFRleHQpKV0pLChfdm0uZWRpdGFibGVkKT9fYygnaWNvbicse3N0YXRpY0NsYXNzOlwic2VsZWN0LWFycm93XCIsYXR0cnM6e1wibmFtZVwiOl92bS5pc09wZW4gPyAnYXJyb3ctdXAnIDogJ2Fycm93LWRvd24nfX0pOl92bS5fZSgpXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00M2MxNWNiYyZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00M2MxNWNiYyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI0M2MxNWNiY1wiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5pY29uLXBsdXNbZGF0YS12LTc4ZWIyMTllXXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDozMHB4O2hlaWdodDozMHB4O2JvcmRlcjoxLjVweCBzb2xpZCAjNDI3NWU4O2JvcmRlci1yYWRpdXM6MTVweH0uemphcHAgLmljb24tcGx1c1tkYXRhLXYtNzhlYjIxOWVdOmJlZm9yZXtsZWZ0OjRweDt0b3A6MTIuNzVweDt3aWR0aDoyMHB4O2hlaWdodDoxLjVweH0uemphcHAgLmljb24tcGx1c1tkYXRhLXYtNzhlYjIxOWVdOmFmdGVyLC56amFwcCAuaWNvbi1wbHVzW2RhdGEtdi03OGViMjE5ZV06YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXCI7cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZC1jb2xvcjojNDI3NWU4fS56amFwcCAuaWNvbi1wbHVzW2RhdGEtdi03OGViMjE5ZV06YWZ0ZXJ7bGVmdDoxMi43NXB4O3RvcDo0cHg7d2lkdGg6MS41cHg7aGVpZ2h0OjIwcHh9LnpqYXBwIC5idG4tbW9kaWZ5W2RhdGEtdi03OGViMjE5ZV17ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO2hlaWdodDoyNXB4O2xpbmUtaGVpZ2h0OjI1cHg7cGFkZGluZzowIDhweDtib3JkZXI6MXB4IHNvbGlkICNjOGQyZjY7YmFja2dyb3VuZC1jb2xvcjojZWJmMWZmO2NvbG9yOiM3YTk1ZDE7Zm9udC1zaXplOjE0cHg7d2hpdGUtc3BhY2U6bm93cmFwO2JvcmRlci1yYWRpdXM6MnB4fS56amFwcCAuYnRuLW1vZGlmeSAuaWNvbi1hcnJvdy1yaWdodFtkYXRhLXYtNzhlYjIxOWVde2ZvbnQtc2l6ZToxMnB4fS56amFwcCAubmVlZC1yZXBhaXJbZGF0YS12LTc4ZWIyMTllXXtoZWlnaHQ6MzRweDtsaW5lLWhlaWdodDoxOHB4O3BhZGRpbmc6OHB4IDA7Zm9udC1zaXplOjE2cHg7Y29sb3I6IzMzM30uemphcHAgLm5lZWQtcmVwYWlyIC5pY29uW2RhdGEtdi03OGViMjE5ZV17ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO21hcmdpbi1yaWdodDo3cHh9LnpqYXBwIC5uZWVkLXJlcGFpci1ib3R0b21bZGF0YS12LTc4ZWIyMTllXXtoZWlnaHQ6NDZweDtsaW5lLWhlaWdodDoxOHB4O3BhZGRpbmc6MTRweCAxNXB4O21hcmdpbi10b3A6MTBweDtmb250LXNpemU6MTZweDtjb2xvcjojNjY2fS56amFwcCAubmVlZC1yZXBhaXItYm90dG9tIC5pY29uW2RhdGEtdi03OGViMjE5ZV17ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO21hcmdpbi1yaWdodDo3cHh9LnpqYXBwIC5jLWxhYmVsW2RhdGEtdi03OGViMjE5ZV17Y29sb3I6Izk5OTtmb250LXNpemU6MTJweDtsaW5lLWhlaWdodDoxN3B4O3BhZGRpbmc6MTRweCAxNXB4IDhweDtiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjR9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiZHJvcC1kb3duLWdyb3VwIGJnLXN1Yi10aGVtZSBib3JkZXItYm90dG9tXCI+XG4gICAgPGRyb3Atc2VsZWN0LXBsYWNlIDp2YWx1ZT1cInBsYWNlXCIgOmVkaXRhYmxlZD1cImVkaXRhYmxlZFwiIEBvblNlbGVjdD1cIm9uQ2hhbmdlUGxhY2VcIiAvPlxuICAgIDxkcm9wLXNlbGVjdC1jaGVja2l0ZW1cbiAgICAgIHJlZj1cImRyb3Atc2VsZWN0LWNoZWNraXRlbVwiXG4gICAgICA6dmFsdWU9XCJjaGVja2l0ZW1zXCJcbiAgICAgIDptYXN0ZXItY2hlY2tpdGVtPVwibWFzdGVyQ2hlY2tpdGVtXCJcbiAgICAgIDpvcHRpb25zPVwiY2hlY2tpdGVtT3B0aW9uc1wiXG4gICAgICA6cGxhY2U9XCJwbGFjZVwiXG4gICAgICA6YmF0Y2gtaWQ9XCJiYXRjaElkXCJcbiAgICAgIDpwcm9jZXNzLW1vZGU9XCJwcm9jZXNzTW9kZVwiXG4gICAgICA6bW9kZT1cIm1vZGVcIlxuICAgICAgOm11bHRpPVwibXVsdGlcIlxuICAgICAgOmVkaXRhYmxlZD1cImVkaXRhYmxlZFwiXG4gICAgICA6aXMtbG9hZGluZz1cImNoZWNraXRlbVNlbGVjdExvYWRpbmdcIlxuICAgICAgQG9uU2VsZWN0PVwib25DaGFuZ2VDaGVja2l0ZW1cIlxuICAgIC8+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cblxuaW1wb3J0IERyb3BTZWxlY3RQbGFjZSBmcm9tICdAc3JjL3dpZGdldC9kcm9wLXNlbGVjdC1wbGFjZS9pbmRleC52dWUnO1xuaW1wb3J0IERyb3BTZWxlY3RDaGVja2l0ZW0gZnJvbSAnQHNyYy93aWRnZXQvZHJvcC1zZWxlY3QtY2hlY2tpdGVtL2luZGV4LnZ1ZSc7XG5pbXBvcnQgTWVhc3VyZURldGFpbE1vZGVsIGZyb20gJ0BzcmMvbW9kYWwvbWVhc3VyZS9kZXRhaWwtbW9kZWwuanMnO1xuaW1wb3J0IE1lYXN1cmVTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9tZWFzdXJlL2NvbW1vbi1zZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnTWVhc3VyZURldGFpbFBsYWNlQ2hlY2tpdGVtJyxcbiAgY29tcG9uZW50czoge1xuICAgIERyb3BTZWxlY3RQbGFjZSxcbiAgICBEcm9wU2VsZWN0Q2hlY2tpdGVtLFxuICB9LFxuICBwcm9wczoge1xuICAgIGRldGFpbDoge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge30sXG4gICAgfSxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbW9kZWw6IE1lYXN1cmVEZXRhaWxNb2RlbCxcbiAgICAgIGNoZWNraXRlbVNlbGVjdExvYWRpbmc6IGZhbHNlLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgcHJvaklkKCkge1xuICAgICAgcmV0dXJuIE1lYXN1cmVEZXRhaWxNb2RlbC5wbGFjZS5wcm9qZWN0LmlkIHx8ICcnO1xuICAgIH0sXG4gICAgYmF0Y2hJZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmRldGFpbCAmJiB0aGlzLmRldGFpbC5iYXRjaF9pZDtcbiAgICB9LFxuICAgIHBsYWNlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuZGV0YWlsUGxhY2U7XG4gICAgfSxcbiAgICBjaGVja2l0ZW1zKCkge1xuICAgICAgcmV0dXJuICh0aGlzLmRldGFpbCAmJiB0aGlzLmRldGFpbC5jaGVja0l0ZW1zKSB8fCBbXTtcbiAgICB9LFxuICAgIG1hc3RlckNoZWNraXRlbSgpIHtcbiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLmRldGFpbE1hc3RlckNoZWNraXRlbTtcbiAgICB9LFxuICAgIGNoZWNraXRlbU9wdGlvbnMoKSB7XG4gICAgICByZXR1cm4gTWVhc3VyZURldGFpbE1vZGVsLm1lYXN1cmVDaGVja0l0ZW1zO1xuICAgIH0sXG4gICAgcHJvY2Vzc01vZGUoKSB7XG4gICAgICBsZXQgY2hlY2tpdGVtID0gXy5pc0VtcHR5KHRoaXMubWFzdGVyQ2hlY2tpdGVtKSA/ICcnIDogdGhpcy5tYXN0ZXJDaGVja2l0ZW1bMV07XG4gICAgICByZXR1cm4gY2hlY2tpdGVtICYmIGNoZWNraXRlbS5wcm9jZXNzX21vZGUgPyBjaGVja2l0ZW0ucHJvY2Vzc19tb2RlIDogJyc7XG4gICAgfSxcbiAgICBtb2RlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGV0YWlsICYmIHRoaXMuZGV0YWlsLnN0YXR1cyA9PT0gJ+ajgOafpeS4rScgPyAnZWRpdCcgOiAndmlldyc7XG4gICAgfSxcbiAgICBtdWx0aSgpIHtcbiAgICAgIC8vIOaYr+WQpuaYr+WkmumAiVxuICAgICAgLy8g5b2T5YmN5b2V5YWl5qih5byPKHBjIOWQjuWPsCnorr7nva7kuLrlhYjlvZXlgLzmqKHlvI8oZW50cnlfcmVxdWlyZW1lbnRzID09PSAyKe+8jOS4lOW9k+WJjemXrumimOS5n+aYr+WFiOW9leWAvOaooeW8j++8jOWImeS4uuWkmumAieajgOafpemhuVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUubWVhc3VyZS5lbnRyeVJlcXVpcmVtZW50cyA9PT0gMiAmJlxuICAgICAgICAodGhpcy5kZXRhaWwuZW50cnlfcmVxdWlyZW1lbnRzID09PSAyIHx8IHRoaXMuZGV0YWlsLnN0YXR1cyAhPT0gJ+ajgOafpeS4rScpXG4gICAgICApO1xuICAgIH0sXG4gICAgLy8g5piv5ZCm5YWB6K646YOo5L2N5ZKM5qOA5p+l6aG5XG4gICAgLy8gMS7nlKjmiLflj6rog73liIfmjaLoh6rlt7Hop5LoibLnmoTpg6jkvY3lkozmo4Dmn6XpoblcbiAgICAvLyAyLuS7juW+heWKnui/m+WFpeivpuaDheaXtu+8jOS4jeiDveWIh+aNolxuICAgIC8vIDMucmVhZG9ubHkg5qih5byP5pe277yM5LiN6IO95YiH5o2iXG4gICAgLy8gNC7lho3mtYvkuIDmrKHml7bvvIzkuI3og73liIfmjaJcbiAgICBlZGl0YWJsZWQoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICB0aGlzLmRldGFpbCAmJlxuICAgICAgICB0aGlzLm1vZGVsLmN1cnJlbnRVc2VyQmF0Y2hJZCA9PT0gdGhpcy5kZXRhaWwuYmF0Y2hfaWQgJiZcbiAgICAgICAgIXRoaXMubW9kZWwucHJvYmxlbUlkICYmXG4gICAgICAgICF0aGlzLm1vZGVsLnJlYWRvbmx5ICYmXG4gICAgICAgIHRoaXMuZGV0YWlsLm1vZGUgIT09ICdyZWRvJ1xuICAgICAgKTtcbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb25DaGFuZ2VQbGFjZShyZXMpIHtcbiAgICAgIGxldCBzZWxlY3RlZFNlY3Rpb25JZCA9IHJlcy5zZWN0aW9uID8gcmVzLnNlY3Rpb24uaWQgOiAnJztcbiAgICAgIGxldCBzZWxlY3RlZEJ1aWxkaW5nSWQgPSByZXMuYnVpbGRpbmcgPyByZXMuYnVpbGRpbmcuaWQgOiAnJztcbiAgICAgIGxldCBzZWxlY3RlZFVuaXQgPSByZXMudW5pdCA/IHJlcy51bml0LmlkIDogJyc7XG4gICAgICBsZXQgc2VsZWN0ZWRGbG9vciA9IHJlcy5mbG9vciA/IHJlcy5mbG9vci5pZCA6ICcnO1xuICAgICAgbGV0IHNlbGVjdGVkUm9vbUlkID0gcmVzLnJvb20gPyByZXMucm9vbS5pZCA6ICcnO1xuXG4gICAgICBsZXQgZmlyc3RDaGVja2l0ZW0gPSBNZWFzdXJlRGV0YWlsTW9kZWwuZmlyc3RDaGVja2l0ZW1bMV0gfHwge307XG4gICAgICBsZXQgY2hlY2tJdGVtSWQgPSBmaXJzdENoZWNraXRlbS5pZCB8fCAnJztcbiAgICAgIC8vIOagh+auteWPkeeUn+S6huWPmOWMlu+8jOimgemHjeeOsOiOt+WPluaJueasoeS/oeaBr1xuICAgICAgbGV0IGhhc1NlY3Rpb25DaGFuZ2VkID1cbiAgICAgICAgc2VsZWN0ZWRTZWN0aW9uSWQgIT09IHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuZGV0YWlsUGxhY2Uuc2VjdGlvbi5pZDtcbiAgICAgIC8vIOalvOagi+WPkeeUn+S6huaUueWPmO+8jOimgemHjeaWsOiOt+WPluajgOafpemhueWkh+mAieWIl+ihqO+8iOWboOS4uumDqOS9jeWIkuWIhuWPr+iDveS8muWPkeeUn+aUueWPmO+8iVxuICAgICAgbGV0IGhhc0J1aWxkaW5nQ2hhbmdlZCA9XG4gICAgICAgIHNlbGVjdGVkQnVpbGRpbmdJZCAhPT0gdGhpcy4kc3RvcmUuc3RhdGUubWVhc3VyZS5kZXRhaWxQbGFjZS5idWlsZGluZy5pZDtcblxuICAgICAgLy8g5pu05paw5a6e5rWL5a6e6YeP6aaW6aG155qE6YOo5L2NXG4gICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWVhc3VyZS9zZXRJbmRleFBsYWNlJywgW3Jlcy5zZWN0aW9uLCByZXMuYnVpbGRpbmcsIHJlcy51bml0XSk7XG4gICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWVhc3VyZS9zZXREZXRhaWxQbGFjZScsIHJlcyk7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2VQbGFjZScsIHJlcyk7XG5cbiAgICAgIC8vIOmAieWujOmDqOS9jeS5i+WQju+8jOWmguaenOalvOagi+WPkeeUn+WPmOWMlu+8jOWImeimgeiOt+WPluW9k+WJjeajgOafpemhueeahOWunumZheKAnOmDqOS9jeWIkuWIhuKAnVxuICAgICAgUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmIChjaGVja0l0ZW1JZCkge1xuICAgICAgICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmdldE1lYXN1cmVDaGVja2l0ZW1SZWFsUHJvY2Vzc01vZGUoXG4gICAgICAgICAgICAgIHNlbGVjdGVkQnVpbGRpbmdJZCxcbiAgICAgICAgICAgICAgY2hlY2tJdGVtSWRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKHByZWNlc3NNb2RlID0+IHtcbiAgICAgICAgICAvLyDlpoLmnpzpgInmi6nnmoTpg6jkvY3lkozmo4Dmn6XpobnnmoTpg6jkvY3liJLliIbkuI3ljLnphY3vvIjliIbmiLcg5oiWIOaMieWxgu+8ie+8jOWImea4heepuuajgOafpemhue+8jOmHjeaWsOmAieaLqeajgOafpemhuVxuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICFwcmVjZXNzTW9kZSB8fFxuICAgICAgICAgICAgKHNlbGVjdGVkUm9vbUlkICYmIHByZWNlc3NNb2RlICE9PSAxKSB8fFxuICAgICAgICAgICAgKCFzZWxlY3RlZFJvb21JZCAmJiBwcmVjZXNzTW9kZSA9PT0gMSlcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIC8vIOa4heepuuajgOafpemhuVxuICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21lYXN1cmUvc2V0RGV0YWlsTWFzdGVyQ2hlY2tpdGVtJywgW10pO1xuICAgICAgICAgICAgdGhpcy5kZXRhaWwuY2hlY2tJdGVtcyA9IFtdO1xuXG4gICAgICAgICAgICB0aGlzLmNoZWNraXRlbVNlbGVjdExvYWRpbmcgPSB0cnVlO1xuXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChoYXNCdWlsZGluZ0NoYW5nZWQpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5nZXRBbGxNZWFzdXJlQnVpbGRpbmdDaGVja0l0ZW1zKFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFNlY3Rpb25JZCxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRCdWlsZGluZ0lkXG4gICAgICAgICAgICAgICAgICApLnRoZW4obWVhc3VyZUNoZWNrSXRlbXMgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGVuID0gTWVhc3VyZURldGFpbE1vZGVsLm1lYXN1cmVDaGVja0l0ZW1zLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLm1lYXN1cmVDaGVja0l0ZW1zLnNwbGljZSgwLCBsZW4sIC4uLm1lYXN1cmVDaGVja0l0ZW1zKTtcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChoYXNTZWN0aW9uQ2hhbmdlZCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmdldEJhdGNoQnlJZGVudGl0eShcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9qSWQsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkU2VjdGlvbklkLFxuICAgICAgICAgICAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwudGFic0lkZW50aXR5XG4gICAgICAgICAgICAgICAgICApLnRoZW4oYmF0Y2hEYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZXRhaWwuYmF0Y2hfaWQgPSBiYXRjaERhdGEuaWQ7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoZWNraXRlbVNlbGVjdExvYWRpbmcgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgIC8vIOaJk+W8gOajgOafpemhuemAieaLqVxuICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmc1snZHJvcC1zZWxlY3QtY2hlY2tpdGVtJ10ub3BlbkRpYWxvZygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwuaW5pdChcbiAgICAgICAgICAgIHNlbGVjdGVkUm9vbUlkLFxuICAgICAgICAgICAgc2VsZWN0ZWRCdWlsZGluZ0lkLFxuICAgICAgICAgICAgc2VsZWN0ZWRVbml0LFxuICAgICAgICAgICAgc2VsZWN0ZWRGbG9vcixcbiAgICAgICAgICAgIGNoZWNrSXRlbUlkXG4gICAgICAgICAgKS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICBQb3B1cC5hbGVydChlcnJvciwgMjAwMCk7XG4gICAgICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oLTEpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgb25DaGFuZ2VDaGVja2l0ZW0ocmVzKSB7XG4gICAgICBsZXQgaWRzID0gXy5tYXAocmVzLCBpdGVtID0+IHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uaWQ7XG4gICAgICB9KTtcblxuICAgICAgbGV0IGRlbGV0ZUV4dHJhID1cbiAgICAgICAgdGhpcy5kZXRhaWwuc3RhdHVzID09PSAn5qOA5p+l5LitJyAmJlxuICAgICAgICB0aGlzLmRldGFpbC5lbnRyeV9yZXF1aXJlbWVudHMgPT09IDIgJiZcbiAgICAgICAgIV8uaXNFbXB0eShfLmludGVyc2VjdGlvbihfLm1hcCh0aGlzLmRldGFpbC5jaGVja0l0ZW1zLCAnaWQnKSwgaWRzKSk7XG4gICAgICBsZXQgbWFzdGVyQ2hlY2tpdGVtID0gW107XG4gICAgICBsZXQgZmlyc3RDaGVja2l0ZW0gPSByZXNbMF07XG5cbiAgICAgIF8uZWFjaChNZWFzdXJlRGV0YWlsTW9kZWwubWVhc3VyZUNoZWNrSXRlbXMsIGl0ZW0xID0+IHtcbiAgICAgICAgXy5lYWNoKGl0ZW0xLmNoaWxkcmVuLCBpdGVtMiA9PiB7XG4gICAgICAgICAgaWYgKGl0ZW0yLmlkID09PSBmaXJzdENoZWNraXRlbS5pZCkge1xuICAgICAgICAgICAgbWFzdGVyQ2hlY2tpdGVtLnB1c2goaXRlbTEpO1xuICAgICAgICAgICAgbWFzdGVyQ2hlY2tpdGVtLnB1c2goaXRlbTIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtZWFzdXJlL3NldEluZGV4Q2hlY2tpdGVtJywgbWFzdGVyQ2hlY2tpdGVtKTtcbiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZUl0ZW1zJywgbWFzdGVyQ2hlY2tpdGVtLCBpZHMpO1xuICAgICAgaWYgKHRoaXMuJHJvdXRlLnBhcmFtcy5wcm9ibGVtSWQpIHtcbiAgICAgICAgLy8g5qC55o2u6Zeu6aKYaWTliqDovb3or6bmg4VcbiAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLmxvYWREZXRhaWxCeUlkKHRoaXMuJHJvdXRlLnBhcmFtcy5wcm9ibGVtSWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLmxvYWREZXRhaWxCeUlkZW50aXR5KE1lYXN1cmVEZXRhaWxNb2RlbC50YWJzSWRlbnRpdHksIGlkcywgZGVsZXRlRXh0cmEpO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5kcm9wLWRvd24tZ3JvdXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuLmRyb3AtZG93bi1ncm91cCAuc2VsZWN0LWNvbiB7XG4gIGZsZXg6IDE7XG5cbiAgQGluY2x1ZGUgZ3JhZGllbnRCb3JkZXJCKDIsICNkN2UwZjcpO1xufVxuXG4uZHJvcC1kb3duLWdyb3VwIC5zZWxlY3QtY29uOm5vdCg6bGFzdC1jaGlsZCkge1xuICBAaW5jbHVkZSBncmFkaWVudEJvcmRlclJCKDIsICNkN2UwZjcpO1xufVxuPC9zdHlsZT5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdlxuICAgIHYtb249XCIkbGlzdGVuZXJzXCJcbiAgICBjbGFzcz1cImRyYXdpbmctY29uXCJcbiAgICA6c3R5bGU9XCJ7IHdpZHRoOiB3aWR0aCArICdweCcsIGhlaWdodDogaGVpZ2h0ICsgJ3B4JyB9XCJcbiAgPlxuICAgIDx0ZW1wbGF0ZSB2LWlmPVwiaXNEb3dubG9hZGluZ1wiPlxuICAgICAgPHA+XG4gICAgICAgIDxzdmcgdmlld0JveD1cIjAgMCA4MCA4MFwiIGNsYXNzPVwic3ZnLWxvYWRpbmdcIj5cbiAgICAgICAgICA8Y2lyY2xlIGN4PVwiNDBcIiBjeT1cIjQwXCIgcj1cIjM2XCI+PC9jaXJjbGU+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgPC9wPlxuICAgICAgPHAgY2xhc3M9XCJsb2FkaW5nLXRleHRcIj7mraPlnKjkuIvovb0uLi48L3A+XG4gICAgPC90ZW1wbGF0ZT5cbiAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgICAgPGNhbnZhc1xuICAgICAgICB2LWlmPVwiIWVycm9yXCJcbiAgICAgICAgcmVmPVwiZHJhd2luZy1jYW52YXNcIlxuICAgICAgICA6c3R5bGU9XCJ7IHdpZHRoOiB3aWR0aCArICdweCcsIGhlaWdodDogaGVpZ2h0ICsgJ3B4JyB9XCJcbiAgICAgID48L2NhbnZhcz5cblxuICAgICAgPHAgdi1pZj1cImVycm9yXCIgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3sgZXJyb3IgfX08L3A+XG4gICAgPC90ZW1wbGF0ZT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IERyYXdpbmczU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvbWVhc3VyZS9kcmF3aW5nLTMtc2VydmljZS5qcyc7XG5pbXBvcnQgSW1hZ2VTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vaW1hZ2Utc2VydmljZSc7XG5pbXBvcnQgcGx1Z2luQXBpIGZyb20gJ0BzcmMvYXBpL3BsdWdpbkFwaSc7XG5pbXBvcnQgY29udGV4dCBmcm9tICdAc3JjL2ZyYW1ld29yay9jb250ZXh0JztcbmltcG9ydCBuZXR3b3JrIGZyb20gJ0BzcmMvZnJhbWV3b3JrL25ldHdvcmsnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdNZWFzdXJlRHJhd2luZzMnLFxuICBjb21wb25lbnRzOiB7fSxcbiAgcHJvcHM6IHtcbiAgICBkZXRhaWw6IHtcbiAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9LFxuICAgIH0sXG4gICAgd2lkdGg6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICB9LFxuICAgIGhlaWdodDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRyYXdpbmc6IG51bGwsXG4gICAgICBpc0Rvd25sb2FkaW5nOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnJyxcblxuICAgICAgaW1nOiBudWxsLFxuICAgICAgc3JjOiAnJyxcbiAgICAgIGZvbGRlcjogJ2hvdXNlLWltYWdlJyxcbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGRldGFpbCh2KSB7XG4gICAgICBpZiAodikge1xuICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLmdldEltYWdlKTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxuICBtb3VudGVkKCkge1xuICAgIHRoaXMuZ2V0SW1hZ2UoKTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5kcmF3aW5nICYmIHRoaXMuZHJhd2luZy5kZXN0cm95KSB7XG4gICAgICB0aGlzLmRyYXdpbmcuZGVzdHJveSgpO1xuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldEltYWdlKCkge1xuICAgICAgbGV0IHVybCA9XG4gICAgICAgIHRoaXMuZGV0YWlsLmRyYXdpbmdfZmlsZSAmJiB0aGlzLmRldGFpbC5kcmF3aW5nX2ZpbGVbMF1cbiAgICAgICAgICA/IHRoaXMuZGV0YWlsLmRyYXdpbmdfZmlsZVswXS51cmxcbiAgICAgICAgICA6ICcnO1xuICAgICAgaWYgKHRoaXMuaXNEb3dubG9hZGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZygnZ2V0SW1hZ2UgLS0tLS0tLS0tLS0nLCB1cmwpO1xuICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgbGV0IHVzZXJJZCA9IGNvbnRleHQuZ2V0VXNlcigpLnVzZXJfaWQ7XG4gICAgICAgIGxldCBmaWxlbmFtZSA9IHMuc3RyUmlnaHRCYWNrKFxuICAgICAgICAgIHMucmVwbGFjZUFsbCh1cmwsICdcXFxcP3gtb3NzLXByb2Nlc3M9aW1hZ2VcXFxcL3Jlc2l6ZSwnLCAnQCcpLFxuICAgICAgICAgICcvJ1xuICAgICAgICApO1xuICAgICAgICBpZiAoIWZpbGVuYW1lKSB7XG4gICAgICAgICAgdGhpcy5lcnJvciA9ICfmiLflnovlm77lnLDlnYDplJnor68nO1xuICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmVycm9yID0gJyc7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcGF0aHMgPSBbXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcEltYWdlUGF0aCgpICsgdXNlcklkICsgJy9ob3VzZS1pbWFnZS8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcEltYWdlUGF0aCgpICsgdXNlcklkICsgJy9kcmF3aW5nLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwSW1hZ2VQYXRoKCkgKyB1c2VySWQgKyAnL2ltYWdlcy8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcERhdGFQYXRoKCkgKyB1c2VySWQgKyAnL2hvdXNlLWltYWdlLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwRGF0YVBhdGgoKSArIHVzZXJJZCArICcvZHJhd2luZy8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcERhdGFQYXRoKCkgKyB1c2VySWQgKyAnL2ltYWdlcy8nICsgZmlsZW5hbWUsXG4gICAgICAgIF07XG4gICAgICAgIGxldCBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG5cbiAgICAgICAgaWYgKEFQUF9FTlYgPT09ICdkZXYnKSB7XG4gICAgICAgICAgcHJvbWlzZSA9IHByb21pc2UudGhlbigoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdXJsO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF8uZWFjaChwYXRocywgcGF0aCA9PiB7XG4gICAgICAgICAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHBsdWdpbkFwaS5pc0ZpbGVFeGlzdHMocGF0aCkudGhlbihleGlzdHMgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChleGlzdHMpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBJbWFnZVNlcnZpY2UuX2ZpeFBhdGgocGF0aCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHByb21pc2VcbiAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ+iOt+WPluWbvueJhyBzcmMgPT09PT09PT09JywgcmVzKTtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgLy8g5a2Y5Zyo5pys5Zyw5paH5Lu277yM55u05o6l6L+U5ZueXG4gICAgICAgICAgICAgIHRoaXMuc3JjID0gcmVzO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8g5LiN5a2Y5Zyo5pys5Zyw5paH5Lu277yM5LiL6L29XG4gICAgICAgICAgICAgIHJldHVybiBuZXR3b3JrLmdldEhhc05ldHdvcmsoKS50aGVuKGhhc05ldHdvcmsgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChoYXNOZXR3b3JrKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gSW1hZ2VTZXJ2aWNlLmRvd25sb2FkKHVybCwgdHJ1ZSwgdGhpcy5mb2xkZXIpLnRoZW4ocGF0aCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3JjID0gcGF0aDtcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ+W9k+WJjeaXoOe9kee7nCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygndGhpcy5zcmMgPT09PT09JywgdGhpcy5zcmMpO1xuICAgICAgICAgICAgaWYgKHRoaXMuc3JjKSB7XG4gICAgICAgICAgICAgIHRoaXMuaW1nID0gbmV3IEltYWdlKCk7XG5cbiAgICAgICAgICAgICAgdGhpcy5pbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmltZy5jb21wbGV0ZSkge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WbvueJh+WKoOi9veaIkOWKnyAtLS0tLS0tLS0nKTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy5pbml0KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9ICfliqDovb3lm77niYflpLHotKUnO1xuICAgICAgICAgICAgICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgIHRoaXMuaW1nLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9ICfliqDovb3lm77niYflpLHotKUnO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgIHRoaXMuaW1nLnNyYyA9IHRoaXMuc3JjO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5lcnJvciA9ICfkuIvovb3miLflnovlm77lpLHotKUnO1xuICAgICAgICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICB0aGlzLmVycm9yID0gXy5pc1N0cmluZyhlcnJvcikgPyBlcnJvciA6ICfkuIvovb3miLflnovlm77lpLHotKUnO1xuICAgICAgICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmVycm9yID0gJ+aIt+Wei+WbvuWcsOWdgOmUmeivryc7XG4gICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBpbml0KCkge1xuICAgICAgaWYgKHRoaXMuaXNEb3dubG9hZGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLmRyYXdpbmcgJiYgdGhpcy5kcmF3aW5nLnJlc2V0KCk7XG4gICAgICB0aGlzLmRyYXdpbmcgPSBEcmF3aW5nM1NlcnZpY2UuaW5pdCh7XG4gICAgICAgIGNhbnZhczogdGhpcy4kcmVmc1snZHJhd2luZy1jYW52YXMnXSxcbiAgICAgICAgaW1nOiB0aGlzLmltZyxcbiAgICAgICAgZGF0YTogdGhpcy5kZXRhaWwsXG4gICAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQsXG4gICAgICAgIG9uQ2hhbmdlOiAoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuZGV0YWlsLm1vZGUgPT09ICdlZGl0Jykge1xuICAgICAgICAgICAgdGhpcy4kZW1pdCgnb25DaGFuZ2UnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2xpY2tQb2ludDogcG9pbnQgPT4ge1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ29uQ2xpY2tQb2ludCcsIHBvaW50KTtcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDmm7TmlrDlm77nurhcbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgdGhpcy5kcmF3aW5nICYmIHRoaXMuZHJhd2luZy5zZXREZXRhaWxEYXRhKGRhdGEpO1xuICAgIH0sXG5cbiAgICBpbnB1dEJsdXIoKSB7XG4gICAgICB0aGlzLmRyYXdpbmcgJiYgdGhpcy5kcmF3aW5nLmlucHV0Qmx1cigpO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5kcmF3aW5nLWNvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmb250LXNpemU6IDA7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuLmRyYXdpbmctY29uIGNhbnZhcyB7XG4gIGJhY2tncm91bmQ6IHVybCh+QHNyYy9hc3NldHMvaW1nL2RpYWdyYW0tYmcucG5nKSB3aGl0ZTtcbiAgYmFja2dyb3VuZC1zaXplOiA0cHggNHB4O1xufVxuLmxvYWRpbmctdGV4dCB7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAjYWFhO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5lcnJvci10ZXh0IHtcbiAgcGFkZGluZzogMCAxNXB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgY29sb3I6ICNmZjNkM2Q7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuPC9zdHlsZT5cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5tYWluW2RhdGEtdi0yY2FjODg2NF17cG9zaXRpb246Zml4ZWQ7d2lkdGg6MTAwJTtib3R0b206MH0uemphcHAgLmFycm93W2RhdGEtdi0yY2FjODg2NF17cG9zaXRpb246YWJzb2x1dGU7dG9wOi03cHg7cmlnaHQ6MThweDt3aWR0aDowO2hlaWdodDowO2JvcmRlci1ib3R0b206N3B4IHNvbGlkICNmZmY7Ym9yZGVyLXJpZ2h0OjdweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItbGVmdDo3cHggc29saWQgdHJhbnNwYXJlbnR9LnpqYXBwIC5jb250ZW50W2RhdGEtdi0yY2FjODg2NF17cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC40KTtvdmVyZmxvdzpoaWRkZW59LnpqYXBwIC5ib3hbZGF0YS12LTJjYWM4ODY0XXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2JhY2tncm91bmQtY29sb3I6I2ZmZjtvdmVyZmxvdzphdXRvfS56amFwcCAuYm94LXNpbmdsZVtkYXRhLXYtMmNhYzg4NjRde2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleDoxfS56amFwcCAuZGV0YWlsLWhkW2RhdGEtdi0yY2FjODg2NF17ZGlzcGxheTpmbGV4O3BhZGRpbmc6NnB4IDE1cHh9LnpqYXBwIC5kZXRhaWwtYXJyb3ctcmlnaHRbZGF0YS12LTJjYWM4ODY0XXt3aWR0aDoxM3B4O2hlaWdodDozNHB4O292ZXJmbG93OmhpZGRlbn0uemphcHAgLmRldGFpbC1hcnJvdy1yaWdodFtkYXRhLXYtMmNhYzg4NjRdOmJlZm9yZXtkaXNwbGF5OmJsb2NrO2NvbnRlbnQ6XFxcIlxcXCI7d2lkdGg6MDtoZWlnaHQ6MDttYXJnaW4tdG9wOjEycHg7Ym9yZGVyOjVweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItbGVmdDo1cHggc29saWQgI2M4YzhjOH0uemphcHAgLmRldGFpbC1hcnJvdy1kb3duW2RhdGEtdi0yY2FjODg2NF17d2lkdGg6MTNweDtoZWlnaHQ6MzRweDtvdmVyZmxvdzpoaWRkZW59LnpqYXBwIC5kZXRhaWwtYXJyb3ctZG93bltkYXRhLXYtMmNhYzg4NjRdOmJlZm9yZXtkaXNwbGF5OmJsb2NrO2NvbnRlbnQ6XFxcIlxcXCI7d2lkdGg6MDtoZWlnaHQ6MDttYXJnaW4tdG9wOjE1cHg7Ym9yZGVyOjVweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItdG9wOjVweCBzb2xpZCAjYzhjOGM4fS56amFwcCAuZGV0YWlsLXRpdGxlW2RhdGEtdi0yY2FjODg2NF17ZmxleDoxO2xpbmUtaGVpZ2h0OjM0cHg7Y29sb3I6IzExMTtmb250LXNpemU6MTZweH0uemphcHAgLmRldGFpbC1iZFtkYXRhLXYtMmNhYzg4NjRde3BhZGRpbmc6OHB4IDE1cHggOHB4IDM1cHg7YmFja2dyb3VuZC1jb2xvcjojZmFmYWZhfS56amFwcCAudGV4dC1saW5lW2RhdGEtdi0yY2FjODg2NF17Zm9udC1zaXplOjE0cHg7Y29sb3I6IzY2NjtsaW5lLWhlaWdodDozMHB4O21hcmdpbi1ib3R0b206MzBweH0uemphcHAgLmRldGFpbC1oZC1zaW5nbGVbZGF0YS12LTJjYWM4ODY0XXtwYWRkaW5nOjZweCAwO21hcmdpbjowIDE1cHh9LnpqYXBwIC5kZXRhaWwtYmQtc2luZ2xlW2RhdGEtdi0yY2FjODg2NF17ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4OjE7cGFkZGluZzo4cHggMTVweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2dfMS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZDlhYTU1MiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7cmVmOlwic2VsZWN0LWNvblwiLHN0YXRpY0NsYXNzOlwic2VsZWN0LWNvblwiLGNsYXNzOnsgJ3NlbGVjdC1kaXNhYmxlZCc6ICFfdm0uZWRpdGFibGVkIHx8IF92bS5pc0xvYWRpbmcgfSxvbjp7XCJjbGlja1wiOl92bS5vcGVuRGlhbG9nfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInNlbGVjdC1oZFwifSxbX3ZtLl92KF92bS5fcyhfdm0uaXNMb2FkaW5nID8gJy4uLicgOiBfdm0uaGRUZXh0KSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJzZWxlY3QtYmRcIn0sW192bS5fdihfdm0uX3MoX3ZtLmlzTG9hZGluZyA/ICcuLi4nIDogX3ZtLmJkVGV4dCkpXSksKF92bS5lZGl0YWJsZWQpP19jKCdpY29uJyx7c3RhdGljQ2xhc3M6XCJzZWxlY3QtYXJyb3dcIixhdHRyczp7XCJuYW1lXCI6X3ZtLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bid9fSk6X3ZtLl9lKCldLDEpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWRiZDg3ZWYyJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWRiZDg3ZWYyJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImRiZDg3ZWYyXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZGJkODdlZjImbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIzNTMwZTExNFwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC52YWx1ZS1pbnB1dFtkYXRhLXYtZmZjYmUzZjJde2ZvbnQtc2l6ZTowO2xpbmUtaGVpZ2h0OjA7d2hpdGUtc3BhY2U6bm93cmFwfS56amFwcCAudmFsdWUtaW5wdXQtbGFiZWxbZGF0YS12LWZmY2JlM2YyXXtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM5OTk7bWFyZ2luLXJpZ2h0OjhweH0uemphcHAgLmFyZWEtbmFtZS10ZXh0W2RhdGEtdi1mZmNiZTNmMl17ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzo0cHggMDtsaW5lLWhlaWdodDoyMnB4O2ZvbnQtc2l6ZToxNnB4O2NvbG9yOiM0Mjc1ZTg7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwfS56amFwcCAuYXJlYS1uYW1lLWlucHV0W2RhdGEtdi1mZmNiZTNmMl17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjYxcHg7aGVpZ2h0OjM0cHg7Ym9yZGVyOjFweCBzb2xpZCAjNDI3NWU4O2JvcmRlci1yYWRpdXM6M3B4O3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMzMzM7Ym94LXNoYWRvdzowIDAgOHB4IDAgcmdiYSg2NiwxMTcsMjMyLC4zNyl9LnpqYXBwIC5hcmVhLW5hbWUtaW5wdXQgaW5wdXRbZGF0YS12LWZmY2JlM2YyXXtib3JkZXI6bm9uZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3BhZGRpbmc6NXB4O3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LnpqYXBwIC5hcmVhLWluZm9bZGF0YS12LWZmY2JlM2YyXXtkaXNwbGF5OmZsZXg7Zm9udC1zaXplOjE0cHh9LnpqYXBwIC5jaGVja2l0ZW0taW5mb1tkYXRhLXYtZmZjYmUzZjJde2ZsZXg6MTtwYWRkaW5nLXRvcDo3cHg7bWluLWhlaWdodDozNHB4fS56amFwcCAuY2hlY2tpdGVtLW5hbWVbZGF0YS12LWZmY2JlM2YyXXtjb2xvcjojMzMzfS56amFwcCAuY2hlY2tpdGVtLXN0YW5kYXJkW2RhdGEtdi1mZmNiZTNmMl17Y29sb3I6Izk5OX0uemphcHAgLmNoZWNraXRlbS1zdGFuZGFyZF9zcGVjaWFsW2RhdGEtdi1mZmNiZTNmMl17bGluZS1oZWlnaHQ6MjJweDtkaXNwbGF5OmJsb2NrO21hcmdpbi10b3A6MXB4fS56amFwcCAuaHV4aW5nLXZpZXdbZGF0YS12LWZmY2JlM2YyXXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTEwcHg7cmlnaHQ6LThweDt3aWR0aDoyMHB4O2hlaWdodDoyMHB4O2xpbmUtaGVpZ2h0OjIwcHg7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojNDI3NWU4O2NvbG9yOiNmZmY7Zm9udC1zaXplOjEycHg7Ym9yZGVyLXJhZGl1czoxMHB4fS56amFwcCAuaHV4aW5nLW1hcmtbZGF0YS12LWZmY2JlM2YyXXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTIwcHg7bGVmdDo1MCU7d2lkdGg6NDRweDtoZWlnaHQ6MjJweDtsaW5lLWhlaWdodDoyMnB4O21hcmdpbi1sZWZ0Oi0yMnB4O2JhY2tncm91bmQtY29sb3I6I2ZkZWJiZDt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojMTExO2ZvbnQtc2l6ZToxMHB4O2JvcmRlci1yYWRpdXM6MnB4fS56amFwcCAuaHV4aW5nLW1hcmsgLmFycm93W2RhdGEtdi1mZmNiZTNmMl17cG9zaXRpb246YWJzb2x1dGU7bGVmdDoxOXB4O2JvdHRvbTotNnB4O3dpZHRoOjA7aGVpZ2h0OjA7Ym9yZGVyOjNweCBzb2xpZCAjZmRlYmJkO2JvcmRlci1jb2xvcjojZmRlYmJkIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50fS56amFwcCAuaXRlbS1pbnB1dC1ncm91cFtkYXRhLXYtZmZjYmUzZjJde2Rpc3BsYXk6ZmxleH0uemphcHAgLmxhYmVsLWlucHV0LWdyb3VwW2RhdGEtdi1mZmNiZTNmMl17aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtwYWRkaW5nLXJpZ2h0OjhweDtjb2xvcjojOTk5O3RleHQtYWxpZ246cmlnaHQ7Zm9udC1zaXplOjE0cHh9LnpqYXBwIC5sYWJlbC1pbnB1dC1ncm91cC1mbGV4W2RhdGEtdi1mZmNiZTNmMl17ZmxleDoxfS56amFwcCAudmlldy1wb2ludHMtbGluZVtkYXRhLXYtZmZjYmUzZjJde2Rpc3BsYXk6ZmxleH0uemphcHAgLnZpZXctcG9pbnRzLWxlZnRbZGF0YS12LWZmY2JlM2YyXXttaW4td2lkdGg6MTQwcHg7cGFkZGluZy1sZWZ0OjIuNmVtO3RleHQtaW5kZW50Oi0yLjZlbX0uemphcHAgLnZpZXctcG9pbnRzLXJpZ2h0W2RhdGEtdi1mZmNiZTNmMl17ZmxleDoxO3BhZGRpbmctbGVmdDoxMHB4O2NvbG9yOiNiM2IzYjM7d2hpdGUtc3BhY2U6bm93cmFwfS56amFwcCAubnVtYmVyLWlucHV0LWdyb3VwW2RhdGEtdi1mZmNiZTNmMl17cGFkZGluZy10b3A6MTVweDttYXJnaW4tbGVmdDotMTBweH0uemphcHAgLm51bWJlci1pbnB1dC1ncm91cCAubnVtYmVyLWlucHV0W2RhdGEtdi1mZmNiZTNmMl17bWFyZ2luOjAgMCAxMHB4IDEwcHh9LnpqYXBwIC5wYXNzcmF0ZS1zbG9wZVtkYXRhLXYtZmZjYmUzZjJde2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47d2lkdGg6MTAwJTttYXJnaW4tbGVmdDppbmhlcml0fS56amFwcCAuYnRuLXJlZWRpdFtkYXRhLXYtZmZjYmUzZjJde3dpZHRoOjgwcHg7cGFkZGluZzoxMnB4IDA7bGluZS1oZWlnaHQ6MjJweDtmb250LXNpemU6MTRweDt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojNDI3NWU4fS56amFwcCAuYnRuLXJlZWRpdCAuaWNvbltkYXRhLXYtZmZjYmUzZjJde21hcmdpbi10b3A6NXB4O2ZvbnQtc2l6ZToxMnB4O3ZlcnRpY2FsLWFsaWduOnRvcH0uemphcHAgLmJ0bi1kcmF3aW5nW2RhdGEtdi1mZmNiZTNmMl17d2lkdGg6MTAwcHg7cGFkZGluZzoxMnB4IDE1cHg7bGluZS1oZWlnaHQ6MjJweDtmb250LXNpemU6MTRweDt0ZXh0LWFsaWduOnJpZ2h0O2NvbG9yOiM0Mjc1ZTh9LnpqYXBwIC5idG4tZHJhd2luZyAuaWNvbltkYXRhLXYtZmZjYmUzZjJde2ZvbnQtc2l6ZToxM3B4fS56amFwcCAuZGV0YWlsLWxpc3QtaGRbZGF0YS12LWZmY2JlM2YyXXtkaXNwbGF5OmZsZXg7aGVpZ2h0OjMwcHg7YmFja2dyb3VuZC1jb2xvcjojZmFmYWZhfS56amFwcCAuZGV0YWlsLWxpc3QtaGQgLmxpc3QtaGQtdG9nZ2xlW2RhdGEtdi1mZmNiZTNmMl17ZmxleDoxO3BhZGRpbmctbGVmdDoxNXB4O2xpbmUtaGVpZ2h0OjMwcHg7Y29sb3I6IzQyNzVlOH0uemphcHAgLmRldGFpbC1saXN0LWhkIC5saXN0LWhkLXRpdGxlW2RhdGEtdi1mZmNiZTNmMl17ZmxleDoxO3BhZGRpbmctbGVmdDoxNXB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Y29sb3I6Izg4OH0uemphcHAgLmRldGFpbC1saXN0LWhkIC5saXN0LWhkLW51bVtkYXRhLXYtZmZjYmUzZjJde3dpZHRoOjgwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojODg4fS56amFwcCAuZGV0YWlsLWxpc3QtaGQgLmxpc3QtaGQtcGFzc3JhdGVbZGF0YS12LWZmY2JlM2YyXXt3aWR0aDoxMDBweDtwYWRkaW5nOjAgMTVweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O3RleHQtYWxpZ246cmlnaHQ7Y29sb3I6Izg4OH0uemphcHAgLmRldGFpbC1saXN0W2RhdGEtdi1mZmNiZTNmMl17YmFja2dyb3VuZC1jb2xvcjojZmZmfS56amFwcCAuZGV0YWlsLWl0ZW0taGRbZGF0YS12LWZmY2JlM2YyXXtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6ZmxleC1zdGFydDttaW4taGVpZ2h0OjQ2cHh9LnpqYXBwIC5kZXRhaWwtaXRlbS1hcnJvd1tkYXRhLXYtZmZjYmUzZjJde2JvcmRlcjo1cHggc29saWQgI2M4YzhjODt3aWR0aDowO2hlaWdodDowfS56amFwcCAuZGV0YWlsLWl0ZW0tYXJyb3cuaXRlbS1hcnJvdy1yaWdodFtkYXRhLXYtZmZjYmUzZjJde21hcmdpbjoxOHB4IDEzcHggMCAxN3B4O2JvcmRlci10b3AtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0LXdpZHRoOjA7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudH0uemphcHAgLmRldGFpbC1pdGVtLWFycm93Lml0ZW0tYXJyb3ctZG93bltkYXRhLXYtZmZjYmUzZjJde21hcmdpbjoyMHB4IDEwcHggMCAxNXB4O2JvcmRlci1sZWZ0LWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1yaWdodC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItYm90dG9tLXdpZHRoOjB9LnpqYXBwIC5kZXRhaWwtaXRlbS1uYW1lW2RhdGEtdi1mZmNiZTNmMl17ZmxleDoxO3BhZGRpbmc6MTNweCAwO2xpbmUtaGVpZ2h0OjIwcHg7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzExMX0uemphcHAgLmRldGFpbC1pdGVtLW51bVtkYXRhLXYtZmZjYmUzZjJde3dpZHRoOjgwcHg7cGFkZGluZzoxM3B4IDA7bGluZS1oZWlnaHQ6MjBweDtmb250LXNpemU6MTRweDt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojODg4fS56amFwcCAuZGV0YWlsLWl0ZW0tcGFzc3JhdGVbZGF0YS12LWZmY2JlM2YyXXt3aWR0aDoxMDBweDtwYWRkaW5nOjEzcHggMTVweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4O3RleHQtYWxpZ246cmlnaHQ7Y29sb3I6Izg4OH0uemphcHAgLmRldGFpbC1saW5lW2RhdGEtdi1mZmNiZTNmMl17ZGlzcGxheTpmbGV4fS56amFwcCAuZGV0YWlsLWxpbmUtbGFiZWxbZGF0YS12LWZmY2JlM2YyXXtwYWRkaW5nOjhweCAwIDhweCAzNXB4O3dpZHRoOjEwNXB4O2xpbmUtaGVpZ2h0OjIwcHg7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzY2Nn0uemphcHAgLmRldGFpbC1saW5lLWxhYmVsLXNpbmdsZVtkYXRhLXYtZmZjYmUzZjJde3BhZGRpbmc6OHB4IDAgOHB4IDE1cHg7d2lkdGg6ODVweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM2NjZ9LnpqYXBwIC5kZXRhaWwtbGluZS1jb25bZGF0YS12LWZmY2JlM2YyXXtmbGV4OjE7cGFkZGluZzo4cHggMTVweCA4cHggMDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMzMzN9LnpqYXBwIC5kZXRhaWwtbGluZS1hcmVhW2RhdGEtdi1mZmNiZTNmMl17YmFja2dyb3VuZC1jb2xvcjojZjBmMGYwO2NvbG9yOiM4YzhjOGM7cGFkZGluZzoycHh9LnpqYXBwIC5kZXRhaWwtbGluZS1zZXR2YWxbZGF0YS12LWZmY2JlM2YyXXttYXJnaW4tbGVmdDo4cHg7Y29sb3I6Izk5OX0uemphcHAgLm5lZWQtcmVwYWlyW2RhdGEtdi1mZmNiZTNmMl17aGVpZ2h0OjQ2cHg7bGluZS1oZWlnaHQ6MThweDtwYWRkaW5nOjE0cHggMTVweDttYXJnaW4tdG9wOjEwcHg7Zm9udC1zaXplOjE2cHg7Y29sb3I6IzY2Nn0uemphcHAgLm5lZWQtcmVwYWlyIC5pY29uW2RhdGEtdi1mZmNiZTNmMl17ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO21hcmdpbi1yaWdodDo3cHh9LnpqYXBwIC5jLWxhYmVsW2RhdGEtdi1mZmNiZTNmMl17Y29sb3I6Izk5OTtmb250LXNpemU6MTJweDtsaW5lLWhlaWdodDoxN3B4O3BhZGRpbmc6MTRweCAxNXB4IDhweDtiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjR9LnpqYXBwIC52YWx1ZS1jYXJib25bZGF0YS12LWZmY2JlM2YyXXtkaXNwbGF5OmlubGluZS1ibG9jaztoZWlnaHQ6MjhweDt3aWR0aDozOHB4O2JvcmRlcjoxcHggc29saWQgI2U1ZTVlNTt2ZXJ0aWNhbC1hbGlnbjp0b3A7Ym9yZGVyLXJhZGl1czozcHg7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjhweDtjb2xvcjojMzMzfS56amFwcCAuZGV0YWlsLWxpbmUtY2FyYm9uLXZhbHVlW2RhdGEtdi1mZmNiZTNmMl17ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO21hcmdpbjo0cHggMCAxMHB4IDA7Y29sb3I6Izk5OX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzNmNzc2ZWEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCJmYzU0NjhiOFwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsIjx0ZW1wbGF0ZT5cbiAgPHRyYW5zaXRpb24gbmFtZT1cInNsaWRlLXVwXCIgQGxlYXZlPVwic3RhcnRDbG9zZVwiIEBhZnRlckxlYXZlPVwib25DbG9zZVwiPlxuICAgIDxkaXZcbiAgICAgIHYtaWY9XCJzaG93XCJcbiAgICAgIGNsYXNzPVwibnVtYmVyLWtleWJvYXJkLWNvblwiXG4gICAgICA6Y2xhc3M9XCJ7ICdpb3MtYmV6ZWwtbGVzcyc6IGlzSU9TQmV6ZWxMZXNzIH1cIlxuICAgICAgOnN0eWxlPVwieyAnei1pbmRleCc6IHpJbmRleCB9XCJcbiAgICAgIEB0b3VjaHN0YXJ0PVwia2V5VG91Y2hzdGFydFwiXG4gICAgICBAdG91Y2hlbmQ9XCJrZXlUb3VjaGVuZFwiXG4gICAgPlxuICAgICAgPHRlbXBsYXRlIHYtaWY9XCJ0eXBlID09PSAndHJ1ZS1vci1mYWxzZSdcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImtleWJvYXJkLXJvd1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctc3Bhbi0zIGtleXMtcm93XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwia2V5cyBjb2wgY29sb3ItZ3JlZW5cIiBkaXJlY3Q9XCJzZXRUdXJlXCI+XG4gICAgICAgICAgICAgIDxpY29uIG5hbWU9XCJxdWFsaWZpZWRcIj48L2ljb24+XG4gICAgICAgICAgICAgIOWQiOagvFxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwia2V5cyBjb2wgY29sb3ItcmVkXCIgZGlyZWN0PVwic2V0RmFsc2VcIj5cbiAgICAgICAgICAgICAgPGljb24gbmFtZT1cInVucXVhbGlmaWVkXCI+PC9pY29uPlxuICAgICAgICAgICAgICDkuI3lkIjmoLxcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctc3Bhbi0xXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwia2V5cy1yb3dcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImtleXMga2V5cy1va1wiIGRpcmVjdD1cImNsb3NlS2V5Ym9hcmRcIj5cbiAgICAgICAgICAgICAgICA8aWNvbiBuYW1lPVwia2V5Ym9hcmQtY2xvc2VcIiAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImtleXMtcm93XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzIGtleXMtZGVsZXRlXCIgZGlyZWN0PVwiZGVsZXRlXCI+XG4gICAgICAgICAgICAgICAgPGljb24gbmFtZT1cImtleWJvYXJkLWRlbGV0ZVwiIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwia2V5Ym9hcmQtcm93XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXMga2V5cy1wcmV2XCIgOmNsYXNzPVwieyBkaXNhYmxlZDogIWhhc1ByZXYgfVwiIGRpcmVjdD1cInByZXZcIj5cbiAgICAgICAgICAgIOS4iuS4gOmhuVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzIGtleXMtbmV4dFwiIDpjbGFzcz1cInsgZGlzYWJsZWQ6ICFoYXNOZXh0IH1cIiBkaXJlY3Q9XCJuZXh0XCI+XG4gICAgICAgICAgICDkuIvkuIDpoblcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgICAgPHRlbXBsYXRlIHYtZWxzZT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImtleWJvYXJkLXJvd1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzXCIgZGlyZWN0PVwiMVwiPjE8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwia2V5c1wiIGRpcmVjdD1cIjJcIj4yPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXNcIiBkaXJlY3Q9XCIzXCI+MzwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzIGtleXMtb2tcIiBkaXJlY3Q9XCJjbG9zZUtleWJvYXJkXCI+XG4gICAgICAgICAgICA8aWNvbiBuYW1lPVwia2V5Ym9hcmQtY2xvc2VcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwia2V5Ym9hcmQtcm93XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXNcIiBkaXJlY3Q9XCI0XCI+NDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzXCIgZGlyZWN0PVwiNVwiPjU8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwia2V5c1wiIGRpcmVjdD1cIjZcIj42PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXMga2V5cy1kZWxldGVcIiBkaXJlY3Q9XCJkZWxldGVcIj5cbiAgICAgICAgICAgIDxpY29uIG5hbWU9XCJrZXlib2FyZC1kZWxldGVcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwia2V5Ym9hcmQtcm93XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXNcIiBkaXJlY3Q9XCI3XCI+NzwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzXCIgZGlyZWN0PVwiOFwiPjg8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwia2V5c1wiIGRpcmVjdD1cIjlcIj45PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXMga2V5cy1wcmV2XCIgOmNsYXNzPVwieyBkaXNhYmxlZDogIWhhc1ByZXYgfVwiIGRpcmVjdD1cInByZXZcIj5cbiAgICAgICAgICAgIOS4iuS4gOmhuVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwia2V5Ym9hcmQtcm93XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXNcIiA6Y2xhc3M9XCJ7IGRpc2FibGVkOiBpc0Rpc2FibGVkTWludXMgfVwiIGRpcmVjdD1cIi1cIj4tPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImtleXNcIiBkaXJlY3Q9XCIwXCI+MDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzXCIgOmNsYXNzPVwieyBkaXNhYmxlZDogaXNEaXNhYmxlZFBvaW50IH1cIiBkaXJlY3Q9XCIuXCI+LjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJrZXlzIGtleXMtbmV4dFwiIDpjbGFzcz1cInsgZGlzYWJsZWQ6ICFoYXNOZXh0IH1cIiBkaXJlY3Q9XCJuZXh0XCI+XG4gICAgICAgICAgICDkuIvkuIDpoblcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgIDwvZGl2PlxuICA8L3RyYW5zaXRpb24+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5pbXBvcnQgSXRlbSBmcm9tICdAc3JjL2NvbXBvbmVudHMvaXRlbSc7XG5pbXBvcnQgeyBjb250ZXh0IH0gZnJvbSAndmFudC9lcy9taXhpbnMvcG9wdXAvY29udGV4dCc7XG5pbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJ0Bjb21tb24vZXZlbnQtYnVzJztcbmltcG9ydCBzdG9yZSBmcm9tICdAc3RvcmUnO1xuXG4vLyDojrflj5bmlbDlrZfovpPlhaXmoYbnmoTpm4blkIhcbmxldCBjb21wb25lbnRTZXQgPSBbXTtcbmxldCBkZWxldGVUb3VjaFRpbWVyO1xuLy8g6Kem5pG45LqL5Lu2XG5sZXQgdG91Y2hzdGFydFRpbWU7XG5sZXQgdG91Y2hzdGFydEVsO1xuY29uc3QgaW5wdXRTZXQgPSBbMCwgMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgJy4nLCAnLSddO1xuXG5mdW5jdGlvbiBoYXNWYWwodikge1xuICByZXR1cm4gdiAhPT0gdW5kZWZpbmVkICYmIHYgIT09IG51bGwgJiYgdiAhPT0gJyc7XG59XG5mdW5jdGlvbiBnZXRTY3JvbGxDb21wKGNvbXBvbmVudCkge1xuICBpZiAoY29tcG9uZW50ICYmIGNvbXBvbmVudC4kcGFyZW50KSB7XG4gICAgaWYgKGNvbXBvbmVudC4kcGFyZW50LiRvcHRpb25zLm5hbWUgPT09ICdTY3JvbGxlcicpIHtcbiAgICAgIHJldHVybiBjb21wb25lbnQuJHBhcmVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGdldFNjcm9sbENvbXAoY29tcG9uZW50LiRwYXJlbnQpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxubGV0IEZhc3RDbGlja0V2ZW50O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdOdW1iZXJLZXlib2FyZCcsXG4gIGNvbXBvbmVudHM6IHsgSXRlbSB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIGlzQ2xvc2luZzogZmFsc2UsXG4gICAgICB6SW5kZXg6IDAsXG5cbiAgICAgIHdpbGxPcGVuUGFyYW1zOiBudWxsLFxuXG4gICAgICAvLyDorrDlvZXplK7nm5jmmK/lk6rkuKrnu4Tku7bmiZPlvIDnmoRcbiAgICAgIGlucHV0Q29tcG9uZW50OiAnJyxcbiAgICAgIHR5cGU6ICcnLFxuXG4gICAgICAvLyDkuIrkuIDpobkg5ZKMIOS4i+S4gOmhuVxuICAgICAgaGFzUHJldjogZmFsc2UsXG4gICAgICBoYXNOZXh0OiBmYWxzZSxcblxuICAgICAgLy8g5YeP5Y+3IOWSjCDlsI/mlbDngrlcbiAgICAgIGlzRGlzYWJsZWRNaW51czogZmFsc2UsXG4gICAgICBpc0Rpc2FibGVkUG9pbnQ6IGZhbHNlLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgaXNJT1NCZXplbExlc3MoKSB7XG4gICAgICByZXR1cm4gc3RvcmUuc3RhdGUuYXBwLmlzSU9TQmV6ZWxMZXNzO1xuICAgIH0sXG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgaXNDbG9zaW5nKHYpIHtcbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgaWYgKCF2ICYmIHRoaXMud2lsbE9wZW5QYXJhbXMpIHtcbiAgICAgICAgICB0aGlzLm9wZW5LZXlib2FyZCh0aGlzLndpbGxPcGVuUGFyYW1zKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlZCgpIHtcbiAgICBFdmVudEJ1cy4kb24oJ3JvdXRlckJlZm9yZUVhY2gnLCB0aGlzLmNsb3NlS2V5Ym9hcmQpO1xuICAgIEV2ZW50QnVzLiRvbigncGFnZUNvbnRlbnRDbGljaycsIHRoaXMuY2xvc2VLZXlib2FyZCk7XG4gIH0sXG4gIGRlc3Ryb3llZCgpIHtcbiAgICBFdmVudEJ1cy4kb2ZmKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZUtleWJvYXJkKTtcbiAgICBFdmVudEJ1cy4kb2ZmKCdwYWdlQ29udGVudENsaWNrJywgdGhpcy5jbG9zZUtleWJvYXJkKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9wZW5LZXlib2FyZChwYXJhbXMpIHtcbiAgICAgIGlmICh0aGlzLmlzQ2xvc2luZykge1xuICAgICAgICAvLyDlpoLmnpzplK7nm5jmraPlnKjlhbPpl63kuK3vvIzliJnnrYnlvoXplK7nm5jlhbPpl63lrozmiJDlho3miZPlvIDjgIJ0cmFuc2l0aW9uIOWKqOeUu+aXoOazlee7iOatolxuICAgICAgICB0aGlzLndpbGxPcGVuUGFyYW1zID0gcGFyYW1zO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLndpbGxPcGVuUGFyYW1zID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuaW5wdXRDb21wb25lbnQgPSBwYXJhbXMuaW5wdXRDb21wb25lbnQ7XG4gICAgICB0aGlzLnpJbmRleCA9IGNvbnRleHQgPyArK2NvbnRleHQuekluZGV4IDogMTtcblxuICAgICAgc3RvcmUuY29tbWl0KCdnbG9iYWwvU0VUX0lTX05VTUJFUl9JTlBVVF9PUEVOJywgdHJ1ZSk7XG4gICAgICBzdG9yZS5jb21taXQoXG4gICAgICAgICdnbG9iYWwvU0VUX05VTUJFUl9LRVlCT0FSRF9IRUlHSFQnLFxuICAgICAgICBzdG9yZS5zdGF0ZS5hcHAuaXNJT1NCZXplbExlc3NcbiAgICAgICAgICA/IDI2NlxuICAgICAgICAgIDogdGhpcy5pbnB1dENvbXBvbmVudC50eXBlID09PSAndHJ1ZS1vci1mYWxzZSdcbiAgICAgICAgICA/IDE3NlxuICAgICAgICAgIDogMjMyXG4gICAgICApO1xuXG4gICAgICB0aGlzLmNhbGNUYWIoKTtcblxuICAgICAgdGhpcy50eXBlID0gdGhpcy5pbnB1dENvbXBvbmVudC50eXBlO1xuXG4gICAgICB0aGlzLnNldEtleXNTdGF0dXModGhpcy5pbnB1dENvbXBvbmVudC52YWx1ZSwgdGhpcy5pbnB1dENvbXBvbmVudC50eXBlKTtcbiAgICAgIEV2ZW50QnVzLiRlbWl0KCdudW1iZXJLZXlib2FyZE9wZW4nLCB0aGlzLmlucHV0Q29tcG9uZW50KTtcbiAgICB9LFxuICAgIC8vIOWFs+mXreW8ueeql1xuICAgIGNsb3NlS2V5Ym9hcmQoKSB7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgICAgIEV2ZW50QnVzLiRlbWl0KCdudW1iZXJLZXlib2FyZENsb3NlJyk7XG4gICAgfSxcbiAgICBzdGFydENsb3NlKCkge1xuICAgICAgdGhpcy5pc0Nsb3NpbmcgPSB0cnVlO1xuICAgIH0sXG4gICAgb25DbG9zZSgpIHtcbiAgICAgIHRoaXMuaXNDbG9zaW5nID0gZmFsc2U7XG5cbiAgICAgIHN0b3JlLmNvbW1pdCgnZ2xvYmFsL1NFVF9JU19OVU1CRVJfSU5QVVRfT1BFTicsIGZhbHNlKTtcbiAgICAgIEV2ZW50QnVzLiRlbWl0KCdhZnRlck51bWJlcktleWJvYXJkQ2xvc2UnKTtcbiAgICB9LFxuXG4gICAgLy8g6L6T5YWl5YC8XG4gICAgaW5wdXQodmFsKSB7XG4gICAgICBpZiAodmFsID09PSAnLScgJiYgdGhpcy5pc0Rpc2FibGVkTWludXMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHZhbCA9PT0gJy4nICYmIHRoaXMuaXNEaXNhYmxlZFBvaW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMuJGVtaXQoJ2tleWJvYXJkSW5wdXQnLCB2YWwpO1xuICAgIH0sXG4gICAgLy8g5Yig6Zmk5YC8XG4gICAgZGVsZXRlKGUpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2tleWJvYXJkRGVsZXRlJyk7XG5cbiAgICAgIC8vIOmVv+aMiSA1MDBtcyDlkI7vvIzmuIXnqbpcbiAgICAgIGRlbGV0ZVRvdWNoVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy4kZW1pdCgna2V5Ym9hcmRDbGVhcicpO1xuICAgICAgfSwgNTAwKTtcbiAgICB9LFxuXG4gICAgLy8g5Yik5a6a5piv5ZCm5pyJ4oCc5LiK5LiA6aG54oCd5ZKM4oCc5LiL5LiA6aG54oCdXG4gICAgY2FsY1RhYigpIHtcbiAgICAgIC8vIOehruWumuKAnOS4iuS4gOmhueKAneWSjOKAnOS4i+S4gOmhueKAneeahOWIh+aNouiMg+WbtO+8jOm7mOiupOiMg+WbtOaYr++8miBzY3JvbGxlciDnu4Tku7bojIPlm7TlhoVcbiAgICAgIGxldCBncm91cEFyZWEgPSBnZXRTY3JvbGxDb21wKHRoaXMuaW5wdXRDb21wb25lbnQpO1xuICAgICAgbGV0IGRvbVNldCA9IGdyb3VwQXJlYSAmJiBncm91cEFyZWEuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb21wb25lbnQtbnVtYmVyLWlucHV0Jyk7XG4gICAgICBjb21wb25lbnRTZXQgPSBbXTtcblxuICAgICAgaWYgKGRvbVNldCkge1xuICAgICAgICBfLmVhY2goZG9tU2V0LCBkb20gPT4ge1xuICAgICAgICAgIGNvbXBvbmVudFNldC5wdXNoKGRvbS5fX3Z1ZV9fKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGRvbVNldC5mb3JFYWNoKGRvbSA9PiB7XG5cbiAgICAgICAgLy8gfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChfLmlzRW1wdHkoY29tcG9uZW50U2V0KSkge1xuICAgICAgICB0aGlzLmhhc1ByZXYgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5oYXNOZXh0ID0gZmFsc2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgY3VycmVudEluZGV4ID0gXy5maW5kSW5kZXgoY29tcG9uZW50U2V0LCB0aGlzLmlucHV0Q29tcG9uZW50KTtcblxuICAgICAgICB0aGlzLmhhc1ByZXYgPSBjdXJyZW50SW5kZXggPiAwO1xuICAgICAgICB0aGlzLmhhc05leHQgPSBjdXJyZW50SW5kZXggPCBjb21wb25lbnRTZXQubGVuZ3RoIC0gMTtcbiAgICAgIH1cblxuICAgICAgLy8g6Ieq5a6a5LmJ5LiL5LiA6aG55LqL5Lu2XG4gICAgICBpZiAodGhpcy5pbnB1dENvbXBvbmVudCAmJiB0aGlzLmlucHV0Q29tcG9uZW50Lm5leHRFdmVudCkge1xuICAgICAgICB0aGlzLmhhc05leHQgPSB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8g5LiK5LiA6aG5XG4gICAgcHJldigpIHtcbiAgICAgIGxldCBjdXJyZW50SW5kZXggPSBfLmZpbmRJbmRleChjb21wb25lbnRTZXQsIHRoaXMuaW5wdXRDb21wb25lbnQpO1xuICAgICAgbGV0IHByZXZJbnB1dCA9IGNvbXBvbmVudFNldFtjdXJyZW50SW5kZXggLSAxXTtcblxuICAgICAgaWYgKCFwcmV2SW5wdXQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBFdmVudEJ1cy4kZW1pdCgnbnVtYmVySW5wdXRCbHVyJyk7XG4gICAgICBwcmV2SW5wdXQuc2V0Rm9jdXMoKTtcblxuICAgICAgdGhpcy5vcGVuS2V5Ym9hcmQoe1xuICAgICAgICBpbnB1dENvbXBvbmVudDogcHJldklucHV0LFxuICAgICAgfSk7XG4gICAgfSxcbiAgICAvLyDkuIvkuIDpoblcbiAgICBuZXh0KCkge1xuICAgICAgbGV0IGN1cnJlbnRJbmRleCA9IF8uZmluZEluZGV4KGNvbXBvbmVudFNldCwgdGhpcy5pbnB1dENvbXBvbmVudCk7XG4gICAgICBsZXQgbmV4dElucHV0ID0gY29tcG9uZW50U2V0W2N1cnJlbnRJbmRleCArIDFdO1xuXG4gICAgICBpZiAoIW5leHRJbnB1dCkge1xuICAgICAgICBpZiAodGhpcy5pbnB1dENvbXBvbmVudCAmJiB0aGlzLmlucHV0Q29tcG9uZW50Lm5leHRFdmVudCkge1xuICAgICAgICAgIHRoaXMuaW5wdXRDb21wb25lbnQubmV4dEV2ZW50KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBFdmVudEJ1cy4kZW1pdCgnbnVtYmVySW5wdXRCbHVyJyk7XG4gICAgICBuZXh0SW5wdXQuc2V0Rm9jdXMoKTtcblxuICAgICAgdGhpcy5vcGVuS2V5Ym9hcmQoe1xuICAgICAgICBpbnB1dENvbXBvbmVudDogbmV4dElucHV0LFxuICAgICAgfSk7XG4gICAgfSxcbiAgICAvLyDlkIjmoLxcbiAgICBzZXRUdXJlKCkge1xuICAgICAgdGhpcy4kZW1pdCgna2V5Ym9hcmRBc3NpZ24nLCAxKTtcbiAgICB9LFxuICAgIHNldEZhbHNlKCkge1xuICAgICAgdGhpcy4kZW1pdCgna2V5Ym9hcmRBc3NpZ24nLCAwKTtcbiAgICB9LFxuXG4gICAgLy8g6K6h566X5oyJ6ZKu55qE54q25oCBXG4gICAgc2V0S2V5c1N0YXR1cyh2YWx1ZSwgdHlwZSkge1xuICAgICAgdmFsdWUgPSBoYXNWYWwodmFsdWUpID8gdmFsdWUudG9TdHJpbmcoKSA6ICcnO1xuXG4gICAgICAvLyDliKTmlq0g4oCYLeKAmSDlj7fmmK/lkKblj6/ku6Xngrnlh7tcbiAgICAgIGlmIChoYXNWYWwodmFsdWUpIHx8IHR5cGUuaW5kZXhPZigncG9zaXRpdmUnKSA+PSAwKSB7XG4gICAgICAgIHRoaXMuaXNEaXNhYmxlZE1pbnVzID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaXNEaXNhYmxlZE1pbnVzID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIOWIpOaWrSDigJgu4oCZIOaYr+WQpuWPr+S7peeCueWHu1xuICAgICAgaWYgKCEvXFxkLy50ZXN0KHZhbHVlKSB8fCB2YWx1ZS5pbmRleE9mKCcuJykgPj0gMCB8fCB0eXBlLmluZGV4T2YoJ2ludCcpID49IDApIHtcbiAgICAgICAgdGhpcy5pc0Rpc2FibGVkUG9pbnQgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pc0Rpc2FibGVkUG9pbnQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g6K6+572u5oyJ6ZKu5rS75Yqo5Lit5qC35byPXG4gICAgc2V0S2V5QWN0aXZpbmcoa2V5LCB0eXBlKSB7XG4gICAgICBpZiAoIWtleSB8fCAha2V5LmNsYXNzTGlzdC5jb250YWlucygna2V5cycpIHx8IGtleS5jbGFzc0xpc3QuY29udGFpbnMoJ2Rpc2FibGVkJykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAga2V5LmNsYXNzTGlzdC5hZGQoJ2FjdGl2aW5nJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBrZXkuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZpbmcnKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g6Kem5pG45byA5aeLXG4gICAga2V5VG91Y2hzdGFydChlKSB7XG4gICAgICBsZXQga2V5ID0gZSAmJiBlLnRhcmdldDtcbiAgICAgIGlmICgha2V5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdG91Y2hzdGFydFRpbWUgPSArbmV3IERhdGUoKTtcbiAgICAgIHRvdWNoc3RhcnRFbCA9IGtleTtcbiAgICAgIHRoaXMuc2V0S2V5QWN0aXZpbmcoa2V5LCB0cnVlKTtcblxuICAgICAgbGV0IGRpcmVjdCA9IGtleS5nZXRBdHRyaWJ1dGUoJ2RpcmVjdCcpO1xuICAgICAgaWYgKGRpcmVjdCAhPT0gJ2Nsb3NlS2V5Ym9hcmQnKSB7XG4gICAgICAgIHRoaXMuY2xpY2tIYW5kbGVyKGRpcmVjdCk7XG4gICAgICB9XG4gICAgfSxcbiAgICAvLyDop6bmkbjnu5PmnZ9cbiAgICBrZXlUb3VjaGVuZChlKSB7XG4gICAgICBsZXQga2V5ID0gZSAmJiBlLnRhcmdldDtcbiAgICAgIGlmICgha2V5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXRLZXlBY3RpdmluZyhrZXksIGZhbHNlKTtcbiAgICAgIHRoaXMuc2V0S2V5QWN0aXZpbmcodG91Y2hzdGFydEVsLCBmYWxzZSk7XG5cbiAgICAgIGxldCBkaXJlY3QgPSBrZXkuZ2V0QXR0cmlidXRlKCdkaXJlY3QnKTtcbiAgICAgIGlmIChkaXJlY3QgPT09ICdkZWxldGUnKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChkZWxldGVUb3VjaFRpbWVyKTtcbiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0ID09PSAnY2xvc2VLZXlib2FyZCcpIHtcbiAgICAgICAgdGhpcy5jbGlja0hhbmRsZXIoZGlyZWN0KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g54K55Ye76ZSu55uY5oyJ6ZKu55qE5aSE55CG5LqL5Lu2XG4gICAgY2xpY2tIYW5kbGVyKGRpcmVjdCkge1xuICAgICAgaWYgKCFkaXJlY3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTmFOKGRpcmVjdCkpIHtcbiAgICAgICAgZGlyZWN0ID0gTnVtYmVyKGRpcmVjdCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgdGhpc1tkaXJlY3RdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXNbZGlyZWN0XSgpO1xuICAgICAgfSBlbHNlIGlmIChpbnB1dFNldC5pbmNsdWRlcyhkaXJlY3QpKSB7XG4gICAgICAgIHRoaXMuaW5wdXQoZGlyZWN0KTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4ubnVtYmVyLWtleWJvYXJkLWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogNHB4IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIGJveC1zaGFkb3c6IDAgLTRweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi5pb3MtYmV6ZWwtbGVzcyB7XG4gIHBhZGRpbmctYm90dG9tOiAzNHB4O1xufVxuXG4ua2V5Ym9hcmQtcm93IHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5rZXlzLXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4ucm93LXNwYW4tMSB7XG4gIGZsZXg6IDE7XG59XG4ucm93LXNwYW4tMiB7XG4gIGZsZXg6IDI7XG59XG4ucm93LXNwYW4tMyB7XG4gIGZsZXg6IDM7XG59XG5cbi5rZXlzIHtcbiAgZmxleDogMTtcbiAgaGVpZ2h0OiA0OHB4O1xuICBsaW5lLWhlaWdodDogNDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbjogNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDUsIDUsIDUsIDAuMDcpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDA7XG59XG4ua2V5cy1wcmV2IHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG59XG4ua2V5cy1uZXh0IHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG59XG4ua2V5cy1vayB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICRjb2xvckdyYXk7XG59XG4ua2V5cy1kZWxldGUge1xuICBjb2xvcjogJGNvbG9yR3JheTtcbn1cbi5pY29uIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4uaWNvbi1rZXlib2FyZC1jbG9zZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICM5OTk7XG59XG4uaWNvbi1rZXlib2FyZC1kZWxldGUge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBtYXJnaW4tdG9wOiAxM3B4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjMzMzO1xufVxuLmFjdGl2aW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcbn1cbi5kaXNhYmxlZCB7XG4gIGNvbG9yOiAjOTk5O1xufVxuXG4uY29sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTA0cHg7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuPC9zdHlsZT5cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5kcm9wLWRvd24tZ3JvdXBbZGF0YS12LTE3ZGNmNGQ0XXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93fS56amFwcCAuZHJvcC1kb3duLWdyb3VwIC5zZWxlY3QtY29uW2RhdGEtdi0xN2RjZjRkNF17ZmxleDoxO2JvcmRlcjpub25lO2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDBkZWcsI2Q3ZTBmNywjZDdlMGY3IDUwJSx0cmFuc3BhcmVudCAwKTtiYWNrZ3JvdW5kLXNpemU6MTAwJSAxcHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246Ym90dG9tfS56amFwcCAuZHJvcC1kb3duLWdyb3VwIC5zZWxlY3QtY29uW2RhdGEtdi0xN2RjZjRkNF06bm90KDpsYXN0LWNoaWxkKXtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCgyNzBkZWcsI2Q3ZTBmNywjZDdlMGY3IDUwJSx0cmFuc3BhcmVudCAwKSxsaW5lYXItZ3JhZGllbnQoMGRlZywjZDdlMGY3LCNkN2UwZjcgNTAlLHRyYW5zcGFyZW50IDApO2JhY2tncm91bmQtc2l6ZToxcHggMTAwJSwxMDAlIDFweDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIDAsYm90dG9tfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPHNjcm9sbGVyIHJlZj1cInNjcm9sbGVyXCI+XG4gICAgPG1lYXN1cmUtZGV0YWlsLXBsYWNlLWNoZWNraXRlbVxuICAgICAgOmRldGFpbD1cImRldGFpbFwiXG4gICAgICBAY2hhbmdlSXRlbXM9XCJjaGFuZ2VJdGVtc1wiXG4gICAgICBAY2hhbmdlUGxhY2U9XCJjaGFuZ2VQbGFjZVwiXG4gICAgLz5cblxuICAgIDx0ZW1wbGF0ZSB2LWlmPVwiaGFzTWFzdGVyQ2hlY2tpdGVtXCI+XG4gICAgICA8IS0tIOe8lui+keaooeW8jyAtLT5cbiAgICAgIDxkaXZcbiAgICAgICAgdi1pZj1cImRldGFpbC5tb2RlID09PSAnZWRpdCcgfHwgZGV0YWlsLm1vZGUgPT09ICdyZWVkaXQnIHx8IGRldGFpbC5tb2RlID09PSAncmVkbydcIlxuICAgICAgICBjbGFzcz1cImJnLXdoaXRlXCJcbiAgICAgID5cbiAgICAgICAgPGl0ZW0gYm9yZGVyPVwiYm90dG9tXCI+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgdi1pZj1cImRldGFpbC5wcm9ibGVtRGF0YVswXS5wYXNzcmF0ZV9tb2RlICE9PSA5XCJcbiAgICAgICAgICAgIGNsYXNzPVwiaXRlbS1mb250IGNvbG9yLXRoZW1lIGYxNFwiXG4gICAgICAgICAgICBAY2xpY2s9XCJ2aWV3SHV4aW5nXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICDmiLflnovlm75cbiAgICAgICAgICAgIDxpY29uIG5hbWU9XCJhcnJvdy1yaWdodFwiIGNsYXNzPVwibWw1XCIgc3R5bGU9XCJmb250LXNpemU6IDEycHg7XCIgLz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1pbnB1dFwiIHYtaWY9XCJkZXRhaWwucHJvYmxlbURhdGFbMF0ucGFzc3JhdGVfbW9kZSA9PT0gOVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZS1pbnB1dC1sYWJlbFwiPuW8uuW6puiuvuiuoeWAvDwvc3Bhbj5cbiAgICAgICAgICAgIDxudW1iZXItaW5wdXRcbiAgICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5wcm9ibGVtRGF0YVswXS5pbnRlbnNpdHlTZXRWYWxcIlxuICAgICAgICAgICAgICA6ZGVjaW1hbD1cIjJcIlxuICAgICAgICAgICAgICA6cmFuZ2U9XCJbMSwgOTkuOTldXCJcbiAgICAgICAgICAgICAgc3R5bGU9XCJ3aWR0aDogNDBweDtcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1jb24gdmFsdWUtaW5wdXQgYWxpZ24tclwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZS1pbnB1dC1sYWJlbFwiPua1i+WMuuaVsDwvc3Bhbj5cbiAgICAgICAgICAgIDxudW1iZXItaW5wdXRcbiAgICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5hcmVhTnVtXCJcbiAgICAgICAgICAgICAgc3R5bGU9XCJ3aWR0aDogNDBweDtcIlxuICAgICAgICAgICAgICB0eXBlPVwiaW50IHBvc2l0aXZlXCJcbiAgICAgICAgICAgICAgOnJhbmdlPVwiWzEsIDk5XVwiXG4gICAgICAgICAgICAgIEBibHVyPVwiYXJlYU51bUNoYW5nZShkZXRhaWwpXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cblxuICAgICAgICA8ZGl2IHYtZm9yPVwiKGFyZWEsIGFyZWFJbmRleCkgaW4gZGV0YWlsLmFyZWFEYXRhXCIgOmtleT1cImFyZWFJbmRleFwiIGNsYXNzPVwicHQxNSBwbDE1IHByMTVcIj5cbiAgICAgICAgICA8IS0tIOa1i+WMuuWQjeensCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXJlYS1uYW1lXCI+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHYtc2hvdz1cIiFhcmVhLmlzRWRpdGluZ1wiXG4gICAgICAgICAgICAgIGNsYXNzPVwiYXJlYS1uYW1lLXRleHRcIlxuICAgICAgICAgICAgICBAY2xpY2s9XCJhcmVhTmFtZUVkaXQoYXJlYSwgJGV2ZW50KVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt7IGFyZWEubmFtZSB9fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IHYtc2hvdz1cImFyZWEuaXNFZGl0aW5nXCIgY2xhc3M9XCJhcmVhLW5hbWUtaW5wdXRcIj5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJhcmVhLm5hbWVUZW1wXCJcbiAgICAgICAgICAgICAgICBtYXhsZW5ndGg9XCI1XCJcbiAgICAgICAgICAgICAgICBAYmx1cj1cImFyZWFOYW1lVXBkYXRlKGFyZWEsIGRldGFpbClcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPCEtLSDmtYvljLrlkI3np7AgZW5kIC0tPlxuXG4gICAgICAgICAgPCEtLSDlrp7mtYvlgLwgLS0+XG4gICAgICAgICAgPGRpdiB2LWZvcj1cIihwcm9ibGVtLCBwcm9ibGVtSW5kZXgpIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiIDprZXk9XCJwcm9ibGVtSW5kZXhcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhcmVhLWluZm9cIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNraXRlbS1pbmZvXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjaGVja2l0ZW0tbmFtZVwiIHYtaWY9XCJwcm9ibGVtLnBhc3NyYXRlX21vZGUgIT09IDVcIj57e1xuICAgICAgICAgICAgICAgICAgcHJvYmxlbS5jaGVja0l0ZW0ubmFtZVxuICAgICAgICAgICAgICAgIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY2hlY2tpdGVtLXN0YW5kYXJkIGNoZWNraXRlbS1zdGFuZGFyZF9zcGVjaWFsXCJcbiAgICAgICAgICAgICAgICAgIHYtaWY9XCJwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE1IHx8IHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTZcIlxuICAgICAgICAgICAgICAgICAgdi1odG1sPVwicHJvYmxlbS5zdGFuZGFyZFJhbmdlXCJcbiAgICAgICAgICAgICAgICA+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjaGVja2l0ZW0tc3RhbmRhcmQgY2hlY2tpdGVtLXN0YW5kYXJkX3NwZWNpYWxcIlxuICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPVwicHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNyB8fCBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE4XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICDlkIjmoLzmoIflh4YgPHNwYW4gdi1odG1sPVwicHJvYmxlbS5zdGFuZGFyZFJhbmdlXCI+PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY2hlY2tpdGVtLXN0YW5kYXJkXCIgdi1lbHNlPnt7IHByb2JsZW0uc3RhbmRhcmRSYW5nZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgPCEtLSDorr7orqHlgLwgLS0+XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICB2LWlmPVwiY29udGFpbnMoWzMsIDQsIDEwLCAxMSwgMTYsIDE3LCAxOF0sIHByb2JsZW0ucGFzc3JhdGVfbW9kZSlcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwidmFsdWUtaW5wdXQgcGwxMFwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInZhbHVlLWlucHV0LWxhYmVsXCI+6K6+6K6h5YC8PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxudW1iZXItaW5wdXRcbiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0uc2V0VmFsXCJcbiAgICAgICAgICAgICAgICAgIDpkZWNpbWFsPVwiJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVEZWNpbWFsXCJcbiAgICAgICAgICAgICAgICAgIDpyYW5nZT1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2VcIlxuICAgICAgICAgICAgICAgICAgQGJsdXI9XCJzZXRWYWxVcGRhdGUocHJvYmxlbSlcIlxuICAgICAgICAgICAgICAgICAgQGZvY3VzPVwiYXV0b0lucHV0U2V0VmFsKHByb2JsZW0sIHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XSlcIlxuICAgICAgICAgICAgICAgICAgQGlucHV0PVwic2F2ZUlucHV0U2V0VmFsKHByb2JsZW0sIHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XSlcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8IS0tIOiuvuiuoeWAvCBlbmQgLS0+XG5cbiAgICAgICAgICAgICAgPCEtLSDmtYvljLrngrnmlbAgLS0+XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICB2LWlmPVwiY29udGFpbnMoWzEsIDIsIDMsIDQsIDgsIDEwLCAxMSwgMTIsIDE2LCAxOF0sIHByb2JsZW0ucGFzc3JhdGVfbW9kZSlcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwidmFsdWUtaW5wdXQgcGwxMFwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInZhbHVlLWlucHV0LWxhYmVsXCI+54K55pWwPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxudW1iZXItaW5wdXRcbiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0ucG9pbnROdW1cIlxuICAgICAgICAgICAgICAgICAgdHlwZT1cImludCBwb3NpdGl2ZVwiXG4gICAgICAgICAgICAgICAgICA6cmFuZ2U9XCJbMCwgOTldXCJcbiAgICAgICAgICAgICAgICAgIEBibHVyPVwiYXJlYVBvaW50TnVtQ2hhbmdlKGRldGFpbCwgcHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKVwiXG4gICAgICAgICAgICAgICAgICBzdHlsZT1cIndpZHRoOiA0MHB4O1wiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwhLS0g5rWL5Yy654K55pWwIGVuZCAtLT5cblxuICAgICAgICAgICAgICA8IS0tIOeis+WMlua3seW6piAtIOS4k+WxnuS6jueul+azlTkgLS0+XG4gICAgICAgICAgICAgIDxkaXYgdi1pZj1cImNvbnRhaW5zKFs5XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKVwiIGNsYXNzPVwidmFsdWUtaW5wdXQgcGwxMFwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWUtaW5wdXQtbGFiZWxcIj7norPljJbmt7HluqY8L3NwYW4+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWNhcmJvblwiIEBjbGljaz1cImNhcmJvbk9wZW4ocHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKVwiPlxuICAgICAgICAgICAgICAgICAge3tcbiAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdLmNhcmJvbiB8fCBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0uY2FyYm9uID09PSAwXG4gICAgICAgICAgICAgICAgICAgICAgPyBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0uY2FyYm9uLnRvRml4ZWQoMSlcbiAgICAgICAgICAgICAgICAgICAgICA6ICcnXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPCEtLSDnorPljJbmt7HluqYgLSDkuJPlsZ7kuo7nrpfms5U5IGVuZCAtLT5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8IS0tIOWunua1i+WAvOW9leWFpSAtLT5cbiAgICAgICAgICAgIDwhLS0g5qCH5YeG44CB5qCH5YeGK+iuvuiuoeWAvOOAgeaegeW3ruOAgeWHgOmrmOOAgeaWueato+aAp+OAgeacgOWkp+WBj+W3ruOAgeiuvuiuoeWAvOeZvuWIhuavlOOAgeagh+mrmOW3ruOAgemXqOeql+WeguebtOW6piAtLT5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgdi1pZj1cImNvbnRhaW5zKFsxLCAyLCAzLCA0LCA3LCA4LCAxMCwgMTEsIDEyLCAxMywgMTYsIDE4XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKVwiXG4gICAgICAgICAgICAgIGNsYXNzPVwibnVtYmVyLWlucHV0LWdyb3VwXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPG51bWJlci1pbnB1dFxuICAgICAgICAgICAgICAgIHYtZm9yPVwiKHBvaW50LCBwb2ludEluZGV4KSBpbiBwb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwicG9pbnRJbmRleFwiXG4gICAgICAgICAgICAgICAgOnR5cGU9XCJwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDggPyAndHJ1ZS1vci1mYWxzZScgOiAnYWxsJ1wiXG4gICAgICAgICAgICAgICAgdi1tb2RlbD1cInBvaW50LnZhbFwiXG4gICAgICAgICAgICAgICAgOmRlY2ltYWw9XCIkc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWxcIlxuICAgICAgICAgICAgICAgIDpyYW5nZT1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2VcIlxuICAgICAgICAgICAgICAgIDpjbGFzcz1cInsgJ2NvbG9yLXJlZCc6IHBvaW50LmlzRXhjZWVkIH1cIlxuICAgICAgICAgICAgICAgIEBibHVyPVwicmVhbGl0eVZhbFVwZGF0ZShwcm9ibGVtKVwiXG4gICAgICAgICAgICAgICAgQGZvY3VzPVwiYXV0b0lucHV0U2V0VmFsKHByb2JsZW0sIHByb2JsZW0uYXJlYURhdGFbYXJlYUluZGV4XSlcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJwb2ludC5zaG93TWFya1wiPlxuICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICB2LWlmPVwicG9pbnQuaGFzTWFya1wiXG4gICAgICAgICAgICAgICAgICAgIHNsb3Q9XCJleHRlbmRcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImh1eGluZy12aWV3XCJcbiAgICAgICAgICAgICAgICAgICAgQGNsaWNrPVwibWFya0h1eGluZyhkZXRhaWwsIHBvaW50KVwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIOWbvlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHYtZWxzZVxuICAgICAgICAgICAgICAgICAgICBzbG90PVwiZXh0ZW5kXCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJodXhpbmctbWFya1wiXG4gICAgICAgICAgICAgICAgICAgIEBjbGljay5zdG9wPVwibWFya0h1eGluZyhkZXRhaWwsIHBvaW50KVwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYXJyb3dcIiAvPuagh+eCueS9jVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgPC9udW1iZXItaW5wdXQ+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPCEtLSDpq5jlrr3vvIzlvIDpl7Tov5vmt7HvvIzpq5jlrr3ljprvvIzlvIDpl7Tov5vmt7HvvIjluKbmnoHlt67vvIktLT5cbiAgICAgICAgICAgIDxkaXYgdi1pZj1cImNvbnRhaW5zKFs1LCA2LCAxNCwgMTVdLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpXCIgY2xhc3M9XCJwdDE1IHBiMTBcIj5cbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHYtZm9yPVwiKGxhYmVsLCBsYWJlbEluZGV4KSBpbiBwcm9ibGVtLm1lYXN1cmVfaXRlbVwiXG4gICAgICAgICAgICAgICAgOmtleT1cImxhYmVsSW5kZXhcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiaXRlbS1pbnB1dC1ncm91cFwiXG4gICAgICAgICAgICAgICAgOmNsYXNzPVwieyBtdDEwOiBsYWJlbEluZGV4IH1cIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxhYmVsLWlucHV0LWdyb3VwXCI+e3sgbGFiZWwgfX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8bnVtYmVyLWlucHV0XG4gICAgICAgICAgICAgICAgICB2LWZvcj1cIihwb2ludCwgcG9pbnRJbmRleCkgaW4gcG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7XG4gICAgICAgICAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgICAgICAgICAgICAgfSlcIlxuICAgICAgICAgICAgICAgICAgOmtleT1cInBvaW50SW5kZXhcIlxuICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cInBvaW50LnZhbFwiXG4gICAgICAgICAgICAgICAgICA6ZGVjaW1hbD1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlRGVjaW1hbFwiXG4gICAgICAgICAgICAgICAgICA6cmFuZ2U9XCIkc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZVJhbmdlXCJcbiAgICAgICAgICAgICAgICAgIDpjbGFzcz1cInsgJ2NvbG9yLXJlZCc6IHBvaW50LmlzRXhjZWVkLCBtbDEwOiBwb2ludEluZGV4IH1cIlxuICAgICAgICAgICAgICAgICAgQGJsdXI9XCJyZWFsaXR5VmFsVXBkYXRlKHByb2JsZW0pXCJcbiAgICAgICAgICAgICAgICAgIEBmb2N1cz1cImF1dG9JbnB1dFNldFZhbChwcm9ibGVtLCBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0pXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInBvaW50LnNob3dNYXJrXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICB2LWlmPVwicG9pbnQuaGFzTWFya1wiXG4gICAgICAgICAgICAgICAgICAgICAgc2xvdD1cImV4dGVuZFwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJodXhpbmctdmlld1wiXG4gICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPVwibWFya0h1eGluZyhkZXRhaWwsIHBvaW50KVwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICDlm75cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICB2LWVsc2VcbiAgICAgICAgICAgICAgICAgICAgICBzbG90PVwiZXh0ZW5kXCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImh1eGluZy1tYXJrXCJcbiAgICAgICAgICAgICAgICAgICAgICBAY2xpY2suc3RvcD1cIm1hcmtIdXhpbmcoZGV0YWlsLCBwb2ludClcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJhcnJvd1wiIC8+5qCH54K55L2NXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICA8L251bWJlci1pbnB1dD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGFiZWwtaW5wdXQtZ3JvdXAgbGFiZWwtaW5wdXQtZ3JvdXAtZmxleFwiPuiuvuiuoeWAvDwvZGl2PlxuICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgdi1mb3I9XCIoc2V0VmFsSXRlbSwgc2V0VmFsSW5kZXgpIGluIHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgICAgICAgICAgIH0pXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8bnVtYmVyLWlucHV0XG4gICAgICAgICAgICAgICAgICAgIHYtaWY9XCJzZXRWYWxJbmRleCA9PT0gMFwiXG4gICAgICAgICAgICAgICAgICAgIDprZXk9XCJsYWJlbEluZGV4ICsgJy0nICsgc2V0VmFsSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwic2V0VmFsSXRlbS5zZXRWYWxcIlxuICAgICAgICAgICAgICAgICAgICA6ZGVjaW1hbD1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlRGVjaW1hbFwiXG4gICAgICAgICAgICAgICAgICAgIDpyYW5nZT1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2VcIlxuICAgICAgICAgICAgICAgICAgICBAYmx1cj1cInNldFZhbFVwZGF0ZShwcm9ibGVtKVwiXG4gICAgICAgICAgICAgICAgICAgIEBmb2N1cz1cImF1dG9JbnB1dFNldFZhbChwcm9ibGVtLCBwcm9ibGVtLmFyZWFEYXRhW2FyZWFJbmRleF0pXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPCEtLSDlnaHluqYgLS0+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHYtaWY9XCJjb250YWlucyhbMTddLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpXCJcbiAgICAgICAgICAgICAgY2xhc3M9XCJudW1iZXItaW5wdXQtZ3JvdXAgcGFzc3JhdGUtc2xvcGVcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWwtaW5wdXQtZ3JvdXBcIj7pq5jluqY8L3NwYW4+XG4gICAgICAgICAgICAgICAgPG51bWJlci1pbnB1dFxuICAgICAgICAgICAgICAgICAgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgICB9KS5zbGljZSgwLCAyKVwiXG4gICAgICAgICAgICAgICAgICA6a2V5PVwicG9pbnRJbmRleFwiXG4gICAgICAgICAgICAgICAgICA6dHlwZT1cInByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gOCA/ICd0cnVlLW9yLWZhbHNlJyA6ICdhbGwnXCJcbiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJwb2ludC52YWxcIlxuICAgICAgICAgICAgICAgICAgOmRlY2ltYWw9XCIkc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWxcIlxuICAgICAgICAgICAgICAgICAgOnJhbmdlPVwiJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVSYW5nZVwiXG4gICAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7ICdjb2xvci1yZWQnOiBwb2ludC5pc0V4Y2VlZCB9XCJcbiAgICAgICAgICAgICAgICAgIEBibHVyPVwicmVhbGl0eVZhbFVwZGF0ZShwcm9ibGVtKVwiXG4gICAgICAgICAgICAgICAgICBAZm9jdXM9XCJhdXRvSW5wdXRTZXRWYWwocHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJwb2ludC5zaG93TWFya1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgdi1pZj1cInBvaW50Lmhhc01hcmtcIlxuICAgICAgICAgICAgICAgICAgICAgIHNsb3Q9XCJleHRlbmRcIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaHV4aW5nLXZpZXdcIlxuICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cIm1hcmtIdXhpbmcoZGV0YWlsLCBwb2ludClcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAg5Zu+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgdi1lbHNlXG4gICAgICAgICAgICAgICAgICAgICAgc2xvdD1cImV4dGVuZFwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJodXhpbmctbWFya1wiXG4gICAgICAgICAgICAgICAgICAgICAgQGNsaWNrLnN0b3A9XCJtYXJrSHV4aW5nKGRldGFpbCwgcG9pbnQpXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYXJyb3dcIiAvPuagh+eCueS9jVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgPC9udW1iZXItaW5wdXQ+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWwtaW5wdXQtZ3JvdXBcIj7msLTlubPot53nprs8L3NwYW4+XG4gICAgICAgICAgICAgICAgPG51bWJlci1pbnB1dFxuICAgICAgICAgICAgICAgICAgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgICB9KS5zbGljZSgyLCAzKVwiXG4gICAgICAgICAgICAgICAgICA6a2V5PVwicG9pbnRJbmRleFwiXG4gICAgICAgICAgICAgICAgICA6dHlwZT1cInByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gOCA/ICd0cnVlLW9yLWZhbHNlJyA6ICdhbGwnXCJcbiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJwb2ludC52YWxcIlxuICAgICAgICAgICAgICAgICAgOmRlY2ltYWw9XCIkc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWxcIlxuICAgICAgICAgICAgICAgICAgOnJhbmdlPVwiJHN0b3JlLnN0YXRlLm1lYXN1cmUudmFsdWVSYW5nZVwiXG4gICAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7ICdjb2xvci1yZWQnOiBwb2ludC5pc0V4Y2VlZCB9XCJcbiAgICAgICAgICAgICAgICAgIEBibHVyPVwicmVhbGl0eVZhbFVwZGF0ZShwcm9ibGVtKVwiXG4gICAgICAgICAgICAgICAgICBAZm9jdXM9XCJhdXRvSW5wdXRTZXRWYWwocHJvYmxlbSwgcHJvYmxlbS5hcmVhRGF0YVthcmVhSW5kZXhdKVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJwb2ludC5zaG93TWFya1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgdi1pZj1cInBvaW50Lmhhc01hcmtcIlxuICAgICAgICAgICAgICAgICAgICAgIHNsb3Q9XCJleHRlbmRcIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaHV4aW5nLXZpZXdcIlxuICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cIm1hcmtIdXhpbmcoZGV0YWlsLCBwb2ludClcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAg5Zu+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgdi1lbHNlXG4gICAgICAgICAgICAgICAgICAgICAgc2xvdD1cImV4dGVuZFwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJodXhpbmctbWFya1wiXG4gICAgICAgICAgICAgICAgICAgICAgQGNsaWNrLnN0b3A9XCJtYXJrSHV4aW5nKGRldGFpbCwgcG9pbnQpXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYXJyb3dcIiAvPuagh+eCueS9jVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgPC9udW1iZXItaW5wdXQ+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwhLS0g5re35Yed5Zyf5by65bqmIC0tPlxuICAgICAgICAgICAgPGRpdiB2LWlmPVwiY29udGFpbnMoWzldLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpXCIgY2xhc3M9XCJudW1iZXItaW5wdXQtZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPG51bWJlci1pbnB1dFxuICAgICAgICAgICAgICAgIHYtZm9yPVwiKHBvaW50LCBwb2ludEluZGV4KSBpbiBwb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwicG9pbnRJbmRleFwiXG4gICAgICAgICAgICAgICAgdi1tb2RlbD1cInBvaW50LnZhbFwiXG4gICAgICAgICAgICAgICAgOmRlY2ltYWw9XCIkc3RvcmUuc3RhdGUubWVhc3VyZS52YWx1ZURlY2ltYWxcIlxuICAgICAgICAgICAgICAgIDpyYW5nZT1cIiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2VcIlxuICAgICAgICAgICAgICAgIEBibHVyPVwicmVhbGl0eVZhbFVwZGF0ZShwcm9ibGVtKVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8IS0tIOWunua1i+WAvCBlbmQgLS0+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDwhLS0g5ouN54Wn44CB6KGl5YWF6K+05piO44CB5oqE6YCB5Lq6IC0tPlxuICAgICAgPGRpdiB2LWlmPVwiZGV0YWlsLm1vZGUgPT09ICdlZGl0JyB8fCBkZXRhaWwubW9kZSA9PT0gJ3JlZG8nXCIgY2xhc3M9XCJtdDEwXCI+XG4gICAgICAgIDxpdGVtIGNsYXNzPVwicDE1XCI+XG4gICAgICAgICAgPGl0ZW0taW1nLWxpc3RcbiAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwuaW1nXCJcbiAgICAgICAgICAgIDptYXhsZW5ndGg9XCI1MFwiXG4gICAgICAgICAgICBAY2FsbGJhY2s9XCJzYXZlUHJvYmxlbVwiXG4gICAgICAgICAgICBAcmVtb3ZlPVwic2F2ZVByb2JsZW1cIlxuICAgICAgICAgICAgOnRyYWNrLXRleHQ9XCIn5a6e5rWL5a6e6YePJ1wiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxpdGVtLXRleHRhcmVhXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZW1hcmtcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwi6KGl5YWF6K+05piOXCJcbiAgICAgICAgICBjbGFzcz1cImJvcmRlci10YlwiXG4gICAgICAgICAgQGJsdXI9XCJzYXZlUHJvYmxlbVwiXG4gICAgICAgIC8+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1iMTBcIj5cbiAgICAgICAgICA8cCBjbGFzcz1cImMtbGFiZWxcIj7or7fpgInmi6nmlr3lt6XljZXkvY08L3A+XG4gICAgICAgICAgPHNpbmdsZS1zZWxlY3RcbiAgICAgICAgICAgIHYtZm9yPVwicHJvYmxlbSBpbiBkZXRhaWwucHJvYmxlbURhdGFcIlxuICAgICAgICAgICAgOmtleT1cInByb2JsZW0uY2hlY2tJdGVtLmlkXCJcbiAgICAgICAgICAgIDp0aXRsZT1cInByb2JsZW0uY2hlY2tJdGVtLm5hbWVcIlxuICAgICAgICAgICAgcGFnZS10aXRsZT1cIumAieaLqeaWveW3peWNleS9jVwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIuivt+mAieaLqeaWveW3peWNleS9jVwiXG4gICAgICAgICAgICB2LW1vZGVsPVwicHJvYmxlbS5jb250cmFjdG9yXCJcbiAgICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwuY29udHJhY3RvcnNcIlxuICAgICAgICAgICAgQG9uU2VsZWN0PVwic2F2ZVByb2JsZW1cIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwuY2NcIlxuICAgICAgICAgIHRpdGxlPVwi5oqE6YCB5Lq6XCJcbiAgICAgICAgICA6bXVsdGk9XCJ0cnVlXCJcbiAgICAgICAgICA6b3B0aW9ucz1cIm1vZGVsLmNjT3B0aW9uc1wiXG4gICAgICAgICAgOnJlcXVpcmVkPVwidHJ1ZVwiXG4gICAgICAgICAgOm1lbW9yeT1cInRydWVcIlxuICAgICAgICAgIEBvblNlbGVjdD1cImNoYW5nZUNDXCJcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPCEtLSDmi43nhafjgIHooaXlhYXor7TmmI7jgIHmioTpgIHkurogZW5kIC0tPlxuICAgICAgPCEtLSDnvJbovpHmqKHlvI8gZW5kIC0tPlxuXG4gICAgICA8IS0tIOafpeeci+aooeW8jyAtLT5cbiAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiZGV0YWlsLm1vZGUgPT09ICd2aWV3J1wiPlxuICAgICAgICA8cHJvYmxlbS1kZXRhaWwtaGVhZGVyIDpzdGF0dXM9XCJkZXRhaWwuc3RhdHVzXCIgY2xhc3M9XCJiZy13aGl0ZSBwcjBcIj5cbiAgICAgICAgICA8dGVtcGxhdGUgc2xvdD1cIm9wZXJhdFwiPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICB2LWlmPVwiZGV0YWlsLmFsbG93UmVlZGl0ICYmIGRldGFpbC5tb2RlID09PSAndmlldydcIlxuICAgICAgICAgICAgICBjbGFzcz1cImJ0bi1yZWVkaXRcIlxuICAgICAgICAgICAgICBAY2xpY2s9XCJjaGFuZ2VNb2RlKCdyZWVkaXQnKVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIOS/ruaUuVxuICAgICAgICAgICAgICA8aWNvbiBuYW1lPVwiZWRpdFwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgdi1pZj1cImRldGFpbC5wcm9ibGVtRGF0YVswXS5wYXNzcmF0ZV9tb2RlICE9PSA5XCJcbiAgICAgICAgICAgICAgY2xhc3M9XCJidG4tZHJhd2luZ1wiXG4gICAgICAgICAgICAgIEBjbGljaz1cInZpZXdIdXhpbmcoZGV0YWlsKVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIOaIt+Wei+WbvlxuICAgICAgICAgICAgICA8aWNvbiBuYW1lPVwiYXJyb3ctcmlnaHRcIiAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPC9wcm9ibGVtLWRldGFpbC1oZWFkZXI+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbC1saXN0LWhkIGJvcmRlci1ib3R0b21cIj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA+IDFcIlxuICAgICAgICAgICAgY2xhc3M9XCJsaXN0LWhkLXRvZ2dsZVwiXG4gICAgICAgICAgICBAY2xpY2s9XCJ0b2dnbGVQcm9ibGVtRGF0YUFsbChkZXRhaWwpXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7eyBoYXNQcm9ibGVtRGF0YUNsb3NlID8gJ+WFqOWxleW8gCcgOiAn5YWo5pS26LW3JyB9fVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgdi1pZj1cImRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGggPT09IDFcIiBjbGFzcz1cImxpc3QtaGQtdGl0bGVcIj5cbiAgICAgICAgICAgIOajgOafpemhuVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaXN0LWhkLW51bVwiPuiuoeeul+eCueaVsDwvZGl2PlxuICAgICAgICAgIDxkaXYgdi1pZj1cImRldGFpbC5wcm9ibGVtRGF0YVswXS5wYXNzcmF0ZV9tb2RlICE9PSA5XCIgY2xhc3M9XCJsaXN0LWhkLXBhc3NyYXRlXCI+XG4gICAgICAgICAgICDlkIjmoLznjodcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLnByb2JsZW1EYXRhWzBdLnBhc3NyYXRlX21vZGUgPT09IDlcIlxuICAgICAgICAgICAgY2xhc3M9XCJsaXN0LWhkLXBhc3NyYXRlIGFsaWduLWMgd3Mtbm93cmFwXCJcbiAgICAgICAgICAgIHN0eWxlPVwid2lkdGg6IDcycHg7XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICDlvLrluqblgLxcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLnByb2JsZW1EYXRhWzBdLnBhc3NyYXRlX21vZGUgPT09IDlcIlxuICAgICAgICAgICAgY2xhc3M9XCJsaXN0LWhkLXBhc3NyYXRlIHdzLW5vd3JhcFwiXG4gICAgICAgICAgICBzdHlsZT1cIndpZHRoOiAxMDBweFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAg5by65bqm55m+5YiG5q+UXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwhLS0g5a6e5rWL5YC8IC0tPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZGV0YWlsLWxpc3RcIj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICB2LWZvcj1cIihwcm9ibGVtLCBwcm9ibGVtSW5kZXgpIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiXG4gICAgICAgICAgICA6a2V5PVwicHJvYmxlbUluZGV4XCJcbiAgICAgICAgICAgIGNsYXNzPVwiYm9yZGVyLWJvdHRvbVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbC1pdGVtLWhkXCIgQGNsaWNrPVwidG9nZ2xlUHJvYmxlbURhdGEocHJvYmxlbSlcIj5cbiAgICAgICAgICAgICAgPGlcbiAgICAgICAgICAgICAgICB2LWlmPVwiZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA+IDFcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiZGV0YWlsLWl0ZW0tYXJyb3dcIlxuICAgICAgICAgICAgICAgIDpjbGFzcz1cInsgJ2l0ZW0tYXJyb3ctcmlnaHQnOiAhcHJvYmxlbS5pc09wZW4sICdpdGVtLWFycm93LWRvd24nOiBwcm9ibGVtLmlzT3BlbiB9XCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbC1pdGVtLW5hbWVcIiA6Y2xhc3M9XCJ7IHBsMTU6IGRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGggPT09IDEgfVwiPlxuICAgICAgICAgICAgICAgIHt7IHByb2JsZW0uY2hlY2tJdGVtLm5hbWUgfX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWwtaXRlbS1udW1cIj57eyBwcm9ibGVtLnBvaW50TnVtIH19PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICB2LWlmPVwiZGV0YWlsLnByb2JsZW1EYXRhWzBdLnBhc3NyYXRlX21vZGUgPT09IDlcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiZGV0YWlsLWl0ZW0tcGFzc3JhdGUgYWxpZ24tY1wiXG4gICAgICAgICAgICAgICAgc3R5bGU9XCJ3aWR0aDogNzJweDtcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3sgcHJvYmxlbS5pbnRlbnNpdHlWYWwgfX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWwtaXRlbS1wYXNzcmF0ZVwiIDpjbGFzcz1cInsgJ2NvbG9yLXJlZCc6IHByb2JsZW0ucGFzc3JhdGUgPCAwLjkgfVwiPlxuICAgICAgICAgICAgICAgIHt7IHByb2JsZW0ucGFzc3JhdGUgfCBwZXJjZW50KDIpIH19XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgdi1pZj1cInByb2JsZW0uaXNPcGVuXCIgY2xhc3M9XCJkZXRhaWwtaXRlbS1iZFwiPlxuICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCJwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDlcIiBjbGFzcz1cImRldGFpbC1saW5lXCI+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkZXRhaWwtbGluZS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7ICdkZXRhaWwtbGluZS1sYWJlbC1zaW5nbGUnOiBkZXRhaWwucHJvYmxlbURhdGEubGVuZ3RoID09PSAxIH1cIlxuICAgICAgICAgICAgICAgICAgc3R5bGU9XCJ3aWR0aDogMTE1cHg7XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICDlvLrluqborr7orqHlgLxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGV0YWlsLWxpbmUtY29uXCI+e3sgcHJvYmxlbS5pbnRlbnNpdHlTZXRWYWwgfX08L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPVwiZGV0YWlsLWxpbmVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICBjbGFzcz1cImRldGFpbC1saW5lLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgIDpjbGFzcz1cInsgJ2RldGFpbC1saW5lLWxhYmVsLXNpbmdsZSc6IGRldGFpbC5wcm9ibGVtRGF0YS5sZW5ndGggPT09IDEgfVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAg5ZCI5qC85qCH5YeGXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkZXRhaWwtbGluZS1jb25cIlxuICAgICAgICAgICAgICAgICAgdi1pZj1cIlxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE1IHx8XG4gICAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNiB8fFxuICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTcgfHxcbiAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE4XG4gICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgdi1odG1sPVwicHJvYmxlbS5zdGFuZGFyZFJhbmdlXCJcbiAgICAgICAgICAgICAgICA+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbC1saW5lLWNvblwiIHYtZWxzZT57eyBwcm9ibGVtLnN0YW5kYXJkUmFuZ2UgfX08L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWwtbGluZVwiPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZGV0YWlsLWxpbmUtbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgOmNsYXNzPVwieyAnZGV0YWlsLWxpbmUtbGFiZWwtc2luZ2xlJzogZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA9PT0gMSB9XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICDlrp7mtYvlgLxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICB2LWlmPVwiXG4gICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gNSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gNiB8fFxuICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTQgfHxcbiAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE1XG4gICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkZXRhaWwtbGluZS1jb25cIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIoYXJlYSwgYXJlYUluZGV4KSBpbiBwcm9ibGVtLmFyZWFEYXRhXCJcbiAgICAgICAgICAgICAgICAgICAgOmtleT1cImFyZWFJbmRleFwiXG4gICAgICAgICAgICAgICAgICAgIDpzdHlsZT1cInsgJ21hcmdpbi10b3AnOiAoYXJlYUluZGV4ID8gOCA6IDApICsgJ3B4JyB9XCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkZXRhaWwtbGluZS1hcmVhXCI+e3sgYXJlYS5uYW1lIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWZvcj1cIihsYWJlbCwgbGFiZWxJbmRleCkgaW4gcHJvYmxlbS5tZWFzdXJlX2l0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICB2LWlmPVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhc1BvaW50cyhwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lLCBsYWJlbDogbGFiZWwgfSkubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOmtleT1cImxhYmVsSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOnN0eWxlPVwieyAnbWFyZ2luLXRvcCc6ICc0cHgnIH1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ2aWV3LXBvaW50cy1saW5lXCJcbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmlldy1wb2ludHMtbGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyBsYWJlbCB9fTo8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPVwiKHBvaW50LCBwb2ludEluZGV4KSBpbiBwb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInBvaW50SW5kZXhcIj4gLCA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIDprZXk9XCJwb2ludEluZGV4XCIgOmNsYXNzPVwieyAnY29sb3ItcmVkJzogcG9pbnQuaXNFeGNlZWQgfVwiPnt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludC52YWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZpZXctcG9pbnRzLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIOiuvuiuoeWAvFxuICAgICAgICAgICAgICAgICAgICAgICAgICB7e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwgeyBhcmVhOiBhcmVhLm5hbWUsIGxhYmVsOiBsYWJlbCB9KVswXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldFZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDwhLS0g5Z2h5bqm55qE5a6e5rWL5YC85pi+56S6IC0tPlxuICAgICAgICAgICAgICAgIDxkaXYgdi1lbHNlLWlmPVwicHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxN1wiIGNsYXNzPVwiZGV0YWlsLWxpbmUtY29uXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHYtZm9yPVwiKGFyZWEsIGFyZWFJbmRleCkgaW4gZ2V0QXJlYURhdGEocHJvYmxlbS5yZWFsaXR5VmFsKVwiXG4gICAgICAgICAgICAgICAgICAgIDprZXk9XCJhcmVhSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICA6c3R5bGU9XCJ7ICdtYXJnaW4tdG9wJzogKGFyZWFJbmRleCA/IDggOiAwKSArICdweCcgfVwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZGV0YWlsLWxpbmUtYXJlYVwiIDpzdHlsZT1cInsgJ21hcmdpbi1yaWdodCc6ICcxMHB4JyB9XCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZWEubmFtZVxuICAgICAgICAgICAgICAgICAgICAgIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZGV0YWlsLWxpbmUtc2V0dmFsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID7orr7orqHlgLxcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwgeyBhcmVhOiBhcmVhLm5hbWUgfSlbMF0uc2V0VmFsIH19PC9zcGFuXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiA6c3R5bGU9XCJ7ICdtYXJnaW4tdG9wJzogJzRweCcgfVwiIGNsYXNzPVwidmlldy1wb2ludHMtbGluZVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2aWV3LXBvaW50cy1sZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiA6c3R5bGU9XCJ7ICdtYXJnaW4tcmlnaHQnOiAnMzBweCcgfVwiIGNsYXNzPVwiY29sb3ItdGV4dCBmMTJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICA+6auY5bqmXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSkuc2xpY2UoMCwgMilcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInBvaW50SW5kZXhcIj4gLCA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiA6a2V5PVwicG9pbnRJbmRleFwiIDpjbGFzcz1cInsgJ2NvbG9yLXJlZCc6IHBvaW50LmlzRXhjZWVkIH1cIj57e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50LnZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgOnN0eWxlPVwieyAnbWFyZ2luLXRvcCc6ICc0cHgnIH1cIiBjbGFzcz1cInZpZXctcG9pbnRzLWxpbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmlldy1wb2ludHMtbGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPVwieyAnbWFyZ2luLXJpZ2h0JzogJzEwcHgnIH1cIiBjbGFzcz1cImNvbG9yLXRleHQgZjEyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPuawtOW5s+i3neemuzwvc3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPVwiKHBvaW50LCBwb2ludEluZGV4KSBpbiBwb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLnNsaWNlKDIsIDMpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJwb2ludEluZGV4XCI+ICwgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gOmtleT1cInBvaW50SW5kZXhcIiA6Y2xhc3M9XCJ7ICdjb2xvci1yZWQnOiBwb2ludC5pc0V4Y2VlZCB9XCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludC52YWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPVwiZGV0YWlsLWxpbmUtY29uXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHYtZm9yPVwiKGFyZWEsIGFyZWFJbmRleCkgaW4gZ2V0QXJlYURhdGEocHJvYmxlbS5yZWFsaXR5VmFsKVwiXG4gICAgICAgICAgICAgICAgICAgIDprZXk9XCJhcmVhSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICA6c3R5bGU9XCJ7ICdtYXJnaW4tdG9wJzogKGFyZWFJbmRleCA/IDggOiAwKSArICdweCcgfVwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZGV0YWlsLWxpbmUtYXJlYVwiPnt7IGFyZWEubmFtZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDMgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDEwIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxMSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTYgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE4XG4gICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkZXRhaWwtbGluZS1zZXR2YWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPuiuvuiuoeWAvFxuICAgICAgICAgICAgICAgICAgICAgICAge3sgcG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSB9KVswXS5zZXRWYWwgfX08L3NwYW5cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj1cImNvbnRhaW5zKFs5XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKVwiIGNsYXNzPVwiZGV0YWlsLWxpbmUtc2V0dmFsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID7norPljJbmt7HluqZcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Y6G5Y+y5pWw5o2u6buY6K6k5Li6IDAgLS0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRGaWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSB9KVswXS5jYXJib24gfHwgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICApLnRvRml4ZWQoMSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH19PC9zcGFuXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPVwibWFyZ2luLXRvcDogNHB4O1wiPlxuICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIocG9pbnQsIHBvaW50SW5kZXgpIGluIHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhcmVhOiBhcmVhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVwiXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJwb2ludEluZGV4XCI+ICwgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIDprZXk9XCJwb2ludEluZGV4XCIgOmNsYXNzPVwieyAnY29sb3ItcmVkJzogcG9pbnQuaXNFeGNlZWQgfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gOFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBwb2ludC52YWwgPT09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAn5ZCI5qC8J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICfkuI3lkIjmoLwnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHBvaW50LnZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPVwiIXBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwgeyBhcmVhOiBhcmVhLm5hbWUgfSkubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID7ml6A8L3NwYW5cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkZXRhaWwtbGluZS1jYXJib24tdmFsdWVcIlxuICAgICAgICAgICAgICAgICAgICAgIHYtaWY9XCJjb250YWlucyhbOV0sIHByb2JsZW0ucGFzc3JhdGVfbW9kZSlcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgICAgID7lubPlnYflgLxcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHBvaW50RmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwgeyBhcmVhOiBhcmVhLm5hbWUgfSlbMF0uYXZnIH19PC9zcGFuXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICAgICA+5by65bqm5YC8XG4gICAgICAgICAgICAgICAgICAgICAgICB7eyBwb2ludEZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lIH0pWzBdLmZjayB9fTwvc3BhblxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDwhLS0g5a6e5rWL5YC8IGVuZCAtLT5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwibXQxMFwiPlxuICAgICAgICAgIDxpdGVtIHYtaWY9XCJkZXRhaWwucmVtYXJrIHx8IGRldGFpbC5pbWcubGVuZ3RoXCIgbGFiZWw9XCLooaXlhYXor7TmmI5cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLWNvblwiIHNsb3Q9XCJyaWdodFwiPlxuICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCJkZXRhaWwucmVtYXJrXCIgY2xhc3M9XCJpdGVtLWZvbnRcIj57eyBkZXRhaWwucmVtYXJrIH19PC9kaXY+XG4gICAgICAgICAgICAgIDxpdGVtLWltZy1saXN0IHYtbW9kZWw9XCJkZXRhaWwuaW1nXCIgOmVkaXRhYmxlZD1cImZhbHNlXCIgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvaXRlbT5cblxuICAgICAgICAgIDxpdGVtIHYtaWY9XCJoYXNDb250cmFjdG9yXCIgbGFiZWw9XCLmlr3lt6XljZXkvY1cIj5cbiAgICAgICAgICAgIDxkaXYgc2xvdD1cInJpZ2h0XCIgY2xhc3M9XCJpdGVtLXRleHRcIj5cbiAgICAgICAgICAgICAgPHAgdi1mb3I9XCJwcm9ibGVtIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiIDprZXk9XCJwcm9ibGVtLmlkXCI+XG4gICAgICAgICAgICAgICAge3sgcHJvYmxlbS5jb250cmFjdG9yID8gcHJvYmxlbS5jb250cmFjdG9yLm5hbWUgOiAnJyB9fVxuICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2l0ZW0+XG5cbiAgICAgICAgICA8dXNlci1zZWxlY3QgdGl0bGU9XCLmo4Dmn6XkurpcIiBtb2RlPVwidmlld1wiIHYtbW9kZWw9XCJkZXRhaWwucmVnaXN0XCIgOmVkaXRhYmxlZD1cImZhbHNlXCIgLz5cblxuICAgICAgICAgIDxpdGVtIGxhYmVsPVwi5qOA5p+l5pe26Ze0XCIgOnRleHQ9XCJmb3JtYXREYXRlKGRldGFpbC5yZWdpc3RfZGF0ZSlcIj48L2l0ZW0+XG5cbiAgICAgICAgICA8IS0tIOaVtOaUueS/oeaBryAtLT5cbiAgICAgICAgICA8aXRlbVxuICAgICAgICAgICAgdi1pZj1cIlxuICAgICAgICAgICAgICAoZGV0YWlsLnJlcGFpcl9yZW1hcmsgfHxcbiAgICAgICAgICAgICAgICAoZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlICYmIGRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZS5sZW5ndGgpKSAmJlxuICAgICAgICAgICAgICAgIGRldGFpbC5zdGF0dXMgIT09ICflvoXmlbTmlLknXG4gICAgICAgICAgICBcIlxuICAgICAgICAgICAgbGFiZWw9XCLmlbTmlLnnhafniYdcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLWNvblwiIHNsb3Q9XCJyaWdodFwiPlxuICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCJkZXRhaWwucmVwYWlyX3JlbWFya1wiIGNsYXNzPVwiaXRlbS1mb250XCI+e3sgZGV0YWlsLnJlcGFpcl9yZW1hcmsgfX08L2Rpdj5cbiAgICAgICAgICAgICAgPGl0ZW0taW1nLWxpc3Qgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZVwiIDplZGl0YWJsZWQ9XCJmYWxzZVwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2l0ZW0+XG4gICAgICAgICAgPCEtLSDmlbTmlLnkv6Hmga8gZW5kIC0tPlxuICAgICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgICAgdi1pZj1cImRldGFpbC5yZXBhaXIuaWQgJiYgKGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknIHx8IGRldGFpbC5zdGF0dXMgPT09ICflt7LmlbTmlLknKVwiXG4gICAgICAgICAgICB0aXRsZT1cIuaVtOaUueS6ulwiXG4gICAgICAgICAgICBtb2RlPVwidmlld1wiXG4gICAgICAgICAgICB2LW1vZGVsPVwiZGV0YWlsLnJlcGFpclwiXG4gICAgICAgICAgICA6b3B0aW9ucz1cIm1vZGVsLnJlcGFpck9wdGlvbnNcIlxuICAgICAgICAgICAgOmRhdGU9XCJkZXRhaWwuc3RhdHVzID09PSAn5bey5pW05pS5JyA/IGZvcm1hdERhdGUoZGV0YWlsLnJlcGFpcl9kYXRlKSA6ICcnXCJcbiAgICAgICAgICAgIDplZGl0YWJsZWQ9XCIoZGV0YWlsLmlzQ2hlY2tlciB8fCBkZXRhaWwuaXNSZXBhaXIpICYmIGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknXCJcbiAgICAgICAgICAgIEBvblNlbGVjdD1cIm9uU2VsZWN0UmVwYWlyXCJcbiAgICAgICAgICAgIDpiZWZvcmUtc2VsZWN0PVwiYmVmb3JlU2VsZWN0UmVwYWlyXCJcbiAgICAgICAgICAvPlxuXG4gICAgICAgICAgPGl0ZW0gdi1pZj1cImRldGFpbC5pc1JlcGFpciAmJiBkZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5J1wiIGxhYmVsPVwi5pW05pS554Wn54mHXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1jb25cIiBzbG90PVwicmlnaHRcIj5cbiAgICAgICAgICAgICAgPGl0ZW0taW1nLWxpc3RcbiAgICAgICAgICAgICAgICB2LW1vZGVsPVwiZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlXCJcbiAgICAgICAgICAgICAgICA6bWF4bGVuZ3RoPVwiNTBcIlxuICAgICAgICAgICAgICAgIDp0cmFjay10ZXh0PVwiJ+Wunua1i+WunumHjydcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgIDxpdGVtLXRleHRhcmVhXG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLmlzUmVwYWlyICYmIGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknXCJcbiAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyX3JlbWFya1wiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIuihpeWFheivtOaYjlwiXG4gICAgICAgICAgICBjbGFzcz1cImJvcmRlci10YlwiXG4gICAgICAgICAgLz5cblxuICAgICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgICAgdGl0bGU9XCLmioTpgIHkurpcIlxuICAgICAgICAgICAgbW9kZT1cInZpZXdcIlxuICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5jY1wiXG4gICAgICAgICAgICA6bXVsdGk9XCJ0cnVlXCJcbiAgICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwuY2NPcHRpb25zXCJcbiAgICAgICAgICAgIDplZGl0YWJsZWQ9XCJkZXRhaWwuc3RhdHVzICE9PSAn5bey5pW05pS5J1wiXG4gICAgICAgICAgICBAb25TZWxlY3Q9XCJjaGFuZ2VDQ1wiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICA8IS0tIOS/ruaUueaVsOWAvCAtLT5cbiAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiZGV0YWlsLm1vZGUgPT09ICdyZWVkaXQnXCI+XG4gICAgICAgIDxpdGVtIHYtaWY9XCJkZXRhaWwucmVtYXJrIHx8IGRldGFpbC5pbWcubGVuZ3RoXCIgbGFiZWw9XCLooaXlhYXor7TmmI5cIiBjbGFzcz1cIm10MTBcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1jb25cIiBzbG90PVwicmlnaHRcIj5cbiAgICAgICAgICAgIDxkaXYgdi1pZj1cImRldGFpbC5yZW1hcmtcIiBjbGFzcz1cIml0ZW0tZm9udFwiPnt7IGRldGFpbC5yZW1hcmsgfX08L2Rpdj5cbiAgICAgICAgICAgIDxpdGVtLWltZy1saXN0IHYtbW9kZWw9XCJkZXRhaWwuaW1nXCIgOmVkaXRhYmxlZD1cImZhbHNlXCIgOnRyYWNrLXRleHQ9XCIn5a6e5rWL5a6e6YePJ1wiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cblxuICAgICAgICA8IS0tIDx1c2VyLXNlbGVjdFxuICAgICAgICAgICAgdi1pZj1cImRldGFpbC5yZXBhaXIuaWQgJiYgIWRldGFpbC5uZWVkUmVwYWlyXCJcbiAgICAgICAgICAgIHRpdGxlPVwi5pW05pS55Lq6XCJcbiAgICAgICAgICAgIG1vZGU9XCJ2aWV3XCJcbiAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyXCJcbiAgICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwucmVwYWlyT3B0aW9uc1wiXG4gICAgICAgICAgICA6ZGF0ZT1cImRldGFpbC5zdGF0dXMgPT09ICflt7LmlbTmlLknID8gZm9ybWF0RGF0ZShkZXRhaWwucmVwYWlyX2RhdGUpIDogJydcIlxuICAgICAgICAgICAgOmVkaXRhYmxlZD1cIihkZXRhaWwuaXNDaGVja2VyIHx8IGRldGFpbC5pc1JlcGFpcikgJiYgZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuSdcIlxuICAgICAgICAgICAgQG9uU2VsZWN0PVwib25TZWxlY3RSZXBhaXJcIlxuICAgICAgICAgIC8+IC0tPlxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtYjEwXCI+XG4gICAgICAgICAgPHAgY2xhc3M9XCJjLWxhYmVsXCI+6K+36YCJ5oup5pa95bel5Y2V5L2NPC9wPlxuICAgICAgICAgIDxzaW5nbGUtc2VsZWN0XG4gICAgICAgICAgICB2LWZvcj1cInByb2JsZW0gaW4gZGV0YWlsLnByb2JsZW1EYXRhXCJcbiAgICAgICAgICAgIDprZXk9XCJwcm9ibGVtLmNoZWNrSXRlbS5pZFwiXG4gICAgICAgICAgICA6dGl0bGU9XCJwcm9ibGVtLmNoZWNrSXRlbS5uYW1lXCJcbiAgICAgICAgICAgIHBhZ2UtdGl0bGU9XCLpgInmi6nmlr3lt6XljZXkvY1cIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCLor7fpgInmi6nmlr3lt6XljZXkvY1cIlxuICAgICAgICAgICAgdi1tb2RlbD1cInByb2JsZW0uY29udHJhY3RvclwiXG4gICAgICAgICAgICA6b3B0aW9ucz1cIm1vZGVsLmNvbnRyYWN0b3JzXCJcbiAgICAgICAgICAgIG1vZGU9XCJ2aWV3XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvdGVtcGxhdGU+XG4gICAgICA8IS0tIOS/ruaUueaVsOWAvCBlbmQgLS0+XG5cbiAgICAgIDwhLS0g6YCa55+l5pW05pS5IC0tPlxuICAgICAgPHRlbXBsYXRlXG4gICAgICAgIHYtaWY9XCJkZXRhaWwuc3RhdHVzID09PSAn5qOA5p+l5a6M5q+VJyAmJiBkZXRhaWwubW9kZSAhPT0gJ3JlZWRpdCcgJiYgZGV0YWlsLm1vZGUgIT09ICdyZWRvJ1wiXG4gICAgICA+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJuZWVkLXJlcGFpclwiIEBjbGljaz1cInNldE5lZWRSZXBhaXJcIj5cbiAgICAgICAgICA8aWNvbiA6bmFtZT1cImRldGFpbC5uZWVkUmVwYWlyID8gJ2NoZWNrYm94LXNxdWFyZS1jaGVja2VkJyA6ICdjaGVja2JveC1zcXVhcmUnXCIgLz7pgJrnn6XmlbTmlLlcbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHVzZXItc2VsZWN0XG4gICAgICAgICAgdi1pZj1cImRldGFpbC5uZWVkUmVwYWlyXCJcbiAgICAgICAgICB0aXRsZT1cIuaVtOaUueS6ulwiXG4gICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJcIlxuICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwucmVwYWlyT3B0aW9uc1wiXG4gICAgICAgICAgOm1lbW9yeT1cInRydWVcIlxuICAgICAgICAvPlxuXG4gICAgICAgIDxhcHAtYnV0dG9uLWdyb3VwIHYtaWY9XCJkZXRhaWwubmVlZFJlcGFpclwiIGNsYXNzPVwicHQxMFwiPlxuICAgICAgICAgIDxhcHAtYnV0dG9uIEBjbGljaz1cInNldFJlcGFpclwiIG5hbWU9XCLpgJrnn6XmlbTmlLlcIiAvPlxuICAgICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgICAgPCEtLSDpgJrnn6XmlbTmlLkgZW5kIC0tPlxuXG4gICAgICA8IS0tIOWIoOmZpOiNieeovyAtLT5cbiAgICAgIDxhcHAtYnV0dG9uLWdyb3VwIHYtaWY9XCJkZXRhaWwuaWQgJiYgZGV0YWlsLnN0YXR1cyA9PT0gJ+ajgOafpeS4rSdcIj5cbiAgICAgICAgPGFwcC1idXR0b24gdHlwZT1cInRleHRcIiBAY2xpY2s9XCJkZWxQcm9ibGVtXCIgbmFtZT1cIuWIoOmZpOatpOiNieeov1wiIC8+XG4gICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgICA8IS0tIOWIoOmZpOiNieeovyBlbmQgLS0+XG5cbiAgICAgIDxhcHAtYnV0dG9uLWdyb3VwXG4gICAgICAgIHYtaWY9XCJcbiAgICAgICAgICBkZXRhaWwuc3RhdHVzICE9PSAn5qOA5p+l5LitJyAmJlxuICAgICAgICAgICAgZGV0YWlsLm1vZGUgPT09ICd2aWV3JyAmJlxuICAgICAgICAgICAgIWFsbG93TWVhc3VyZVJlaW5zcGVjdCAmJlxuICAgICAgICAgICAgbW9kZWwuY3VycmVudFVzZXJCYXRjaElkID09PSBkZXRhaWwuYmF0Y2hfaWRcbiAgICAgICAgXCJcbiAgICAgID5cbiAgICAgICAgPGFwcC1idXR0b24gdHlwZT1cIm9wZXJhdGVcIiBAY2xpY2s9XCJzZXRSZWRvXCIgbmFtZT1cIuWGjea1i+S4gOasoVwiIC8+XG4gICAgICA8L2FwcC1idXR0b24tZ3JvdXA+XG4gICAgPC90ZW1wbGF0ZT5cblxuICAgIDxsb2FkaW5nLXN0YXR1cyA6aXMtbG9hZGluZz1cImZhbHNlXCIgOmlzLWVtcHR5PVwiIWhhc01hc3RlckNoZWNraXRlbVwiIGVtcHR5LXRleHQ9XCLor7fpgInmi6nmo4Dmn6XpoblcIiAvPlxuXG4gICAgPG1lYXN1cmUtY2FyYm9uLWRpYWxvZ1xuICAgICAgdi1pZj1cImhhc0NhcmJvbkRpYWxvZ1wiXG4gICAgICA6dmFsdWU9XCJjYXJib25EYXRhXCJcbiAgICAgIDpzaG93PVwiY2FyYm9uU2hvd1wiXG4gICAgICBAY2xvc2U9XCJjYXJib25DbG9zZVwiXG4gICAgICBAc2VsZWN0PVwiY2FyYm9uU2VsZWN0XCJcbiAgICAvPlxuICA8L3Njcm9sbGVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cblxuaW1wb3J0IFNjcm9sbGVyIGZyb20gJ0Bjb21wb25lbnRzL3Njcm9sbGVyJztcbmltcG9ydCBpdGVtIGZyb20gJ0Bjb21wb25lbnRzL2l0ZW0vJztcbmltcG9ydCBNZWFzdXJlRGV0YWlsUGxhY2VDaGVja2l0ZW0gZnJvbSAnLi9kZXRhaWwtcGxhY2UtY2hlY2tpdGVtLnZ1ZSc7XG5pbXBvcnQgTnVtYmVySW5wdXQgZnJvbSAnQGNvbXBvbmVudHMvbnVtYmVyLWlucHV0L2luZGV4LnZ1ZSc7XG5pbXBvcnQgSXRlbUltZ0xpc3QgZnJvbSAnQHNyYy9jb21wb25lbnRzL2l0ZW0taW1nLWxpc3QnO1xuaW1wb3J0IFVzZXJTZWxlY3QgZnJvbSAnQGNvbXBvbmVudHMvdXNlci1zZWxlY3QnO1xuaW1wb3J0IEl0ZW1UZXh0YXJlYSBmcm9tICdAY29tcG9uZW50cy9pdGVtLXRleHRhcmVhJztcbmltcG9ydCBQcm9ibGVtRGV0YWlsSGVhZGVyIGZyb20gJ0BzcmMvd2lkZ2V0L3Byb2JsZW0tZGV0YWlsLWhlYWRlcic7XG5cbmltcG9ydCBQb3B1cCBmcm9tICdAc3JjL3V0aWxzL3BvcHVwJztcbmltcG9ydCBNZWFzdXJlRGV0YWlsTW9kZWwgZnJvbSAnQHNyYy9tb2RhbC9tZWFzdXJlL2RldGFpbC1tb2RlbC5qcyc7XG5pbXBvcnQgRHJhd2luZyBmcm9tICdAc3JjL2NvbXBvbmVudHMvZHJhd2luZy9kaWFsb2cuanMnO1xuaW1wb3J0IE1lYXN1cmVTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9tZWFzdXJlL2NvbW1vbi1zZXJ2aWNlJztcbmltcG9ydCBEcmF3aW5nV2l0aFBvaW50IGZyb20gJy4vZHJhd2luZy13aXRoLXBvaW50LmpzJztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCBTaW5nbGVTZWxlY3QgZnJvbSAnQGNvbXBvbmVudHMvc2luZ2xlLXNlbGVjdCc7XG5pbXBvcnQgQ29tbW9uQ2hlY2tJdGVtU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2NoZWNrLWl0ZW0tc2VydmljZSc7XG5pbXBvcnQgVGFsa2luZ0RhdGFTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vdGFsa2luZy1kYXRhLXNlcnZpY2UnO1xuaW1wb3J0IHJvdXRlciBmcm9tICdAcm91dGVyJztcbmltcG9ydCBkZXRhaWxUZW1wbGF0ZU1peGluIGZyb20gJy4vZGV0YWlsLXRlbXBsYXRlLmpzJztcbmltcG9ydCBNZWFzdXJlQ2FyYm9uRGlhbG9nIGZyb20gJ0BzcmMvd2lkZ2V0L21lYXN1cmUtY2FyYm9uLWRpYWxvZy9pbmRleCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ01lYXN1cmVEZXRhaWxUZW1wbGF0ZTInLFxuICBjb21wb25lbnRzOiB7XG4gICAgU2Nyb2xsZXIsXG4gICAgaXRlbSxcbiAgICBNZWFzdXJlRGV0YWlsUGxhY2VDaGVja2l0ZW0sXG4gICAgTnVtYmVySW5wdXQsXG4gICAgSXRlbUltZ0xpc3QsXG4gICAgVXNlclNlbGVjdCxcbiAgICBJdGVtVGV4dGFyZWEsXG4gICAgUHJvYmxlbURldGFpbEhlYWRlcixcbiAgICBTaW5nbGVTZWxlY3QsXG4gICAgTWVhc3VyZUNhcmJvbkRpYWxvZyxcbiAgfSxcbiAgbWl4aW5zOiBbZGV0YWlsVGVtcGxhdGVNaXhpbl0sXG4gIHByb3BzOiB7XG4gICAgZGV0YWlsOiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7fSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIGNvbnNvbGUubG9nKHRoaXMuZGV0YWlsLCAnZGV0YWlsZGV0YWlsJyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vZGVsOiBNZWFzdXJlRGV0YWlsTW9kZWwsXG4gICAgICBjYXJib25TaG93OiBmYWxzZSxcbiAgICAgIGNhcmJvbkRhdGE6IDAsIC8vIOeis+WMlua3seW6puS8oOWFpeeahOaVsOaNrlxuICAgICAgY2FyYm9uU2VsZWN0RGF0YToge30sIC8vIOmAieS4reeis+WMlua3seW6pueahOWAvFxuICAgICAgLy8gYXJlYU51bTogMCwgLy8g6Kej5Yaz5LuO5b6F5Yqe6L+b5p2l5peg5rOV5pu05paw55qE6Zeu6aKYXG4gICAgICAvLyBkZXRhaWw6IE1lYXN1cmVEZXRhaWxNb2RlbC5kZXRhaWxEYXRhLmNvbnN0cnVjdCxcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGhhc1Byb2JsZW1EYXRhQ2xvc2UoKSB7XG4gICAgICByZXR1cm4gXy5zb21lKHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhLCBwcm9ibGVtID0+IHtcbiAgICAgICAgcmV0dXJuICFwcm9ibGVtLmlzT3BlbjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgbWFzdGVyQ2hlY2tpdGVtKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuZGV0YWlsTWFzdGVyQ2hlY2tpdGVtO1xuICAgIH0sXG4gICAgaGFzTWFzdGVyQ2hlY2tpdGVtKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWFzdGVyQ2hlY2tpdGVtICYmIHRoaXMubWFzdGVyQ2hlY2tpdGVtLmxlbmd0aDtcbiAgICB9LFxuXG4gICAgLy8g5Yik5pat5piv5ZCm5bGV56S65by55Ye65qGG77yM5Y+q5pyJ5pyJ566X5rOVOeaJjeWxleekulxuICAgIGhhc0NhcmJvbkRpYWxvZygpIHtcbiAgICAgIHJldHVybiB0aGlzLmRldGFpbC5wcm9ibGVtRGF0YS5maWx0ZXIoaXRlbSA9PiBpdGVtLnBhc3NyYXRlX21vZGUgPT09IDkpLmxlbmd0aDtcbiAgICB9LFxuICB9LFxuICBiZWZvcmVNb3VudCgpIHtcbiAgICAvLyB0aGlzLmFyZWFOdW0gPSB0aGlzLmRldGFpbC5hcmVhTnVtO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLy8g5qC55o2u5a6e5rWL54K56I635Y+W5rWL5Yy6XG4gICAgZ2V0QXJlYURhdGEocG9pbnRzKSB7XG4gICAgICBsZXQgYXJlYXMgPSBbXTtcbiAgICAgIF8uZWFjaChwb2ludHMsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIGlmICghXy5maW5kKGFyZWFzLCB7IG5hbWU6IHBvaW50LmFyZWEgfSkpIHtcbiAgICAgICAgICBhcmVhcy5wdXNoKHsgbmFtZTogcG9pbnQuYXJlYSB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gYXJlYXM7XG4gICAgfSxcbiAgICBmb3JtYXREYXRlKGRhdGUsIHRlbXAgPSAnWVlZWS1NTS1ERCBISDptbScpIHtcbiAgICAgIHJldHVybiBtb21lbnQoZGF0ZSkuZm9ybWF0KHRlbXApO1xuICAgIH0sXG5cbiAgICBjb250YWlucyhzZXQsIHZhbHVlKSB7XG4gICAgICByZXR1cm4gXy5pbmNsdWRlcyhzZXQsIHZhbHVlKTtcbiAgICB9LFxuXG4gICAgLy8g5a6e5rWL54K56L+H5ruk5ZmoXG4gICAgcG9pbnRGaWx0ZXIocG9pbnRzLCBtYXRjaCkge1xuICAgICAgcmV0dXJuIF8uZmlsdGVyKHBvaW50cywgbWF0Y2gpO1xuICAgIH0sXG4gICAgaGFzUG9pbnRzKHBvaW50cywgbWF0Y2gpIHtcbiAgICAgIGxldCBoYXNWYWwgPSB0aGlzLm1vZGVsLmhhc1ZhbCxcbiAgICAgICAgZmlsdGVyZWRQb2ludHMgPSB0aGlzLnBvaW50RmlsdGVyKHBvaW50cywgbWF0Y2gpO1xuICAgICAgcmV0dXJuIF8uZmlsdGVyKGZpbHRlcmVkUG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgIHJldHVybiBoYXNWYWwocG9pbnQudmFsKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgLy8g5L+u5pS55rWL5Yy65ZCN56ewXG4gICAgYXJlYU5hbWVFZGl0KGFyZWEsIGUpIHtcbiAgICAgIHRoaXMuJHNldChhcmVhLCAnaXNFZGl0aW5nJywgdHJ1ZSk7XG4gICAgICB0aGlzLiRzZXQoYXJlYSwgJ25hbWVUZW1wJywgYXJlYS5uYW1lKTtcbiAgICAgIGxldCBpbnB1dCA9IGUudGFyZ2V0Lm5leHRTaWJsaW5nLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgLy8gdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgLy8gICBpbnB1dC5mb2N1cygpO1xuICAgICAgLy8gfSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKGRvY3VtZW50LmJvZHkuY29udGFpbnMoaW5wdXQpKSB7XG4gICAgICAgICAgaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSwgMTAwKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuICAgIGFyZWFOYW1lVXBkYXRlKGFyZWEsIGRldGFpbCkge1xuICAgICAgbGV0IGhhc0VyciA9IGZhbHNlO1xuICAgICAgaWYgKCFhcmVhIHx8ICFkZXRhaWwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IG9sZE5hbWUgPSBhcmVhLm5hbWUudHJpbSgpO1xuICAgICAgbGV0IG5ld05hbWUgPSBhcmVhLm5hbWVUZW1wLnRyaW0oKTtcbiAgICAgIGlmIChuZXdOYW1lID09PSBvbGROYW1lKSB7XG4gICAgICAgIHRoaXMuJHNldChhcmVhLCAnaXNFZGl0aW5nJywgZmFsc2UpO1xuICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyDmoKHpqozph43lkI1cbiAgICAgIGxldCBpc0V4aXN0ID0gXy5zb21lKGRldGFpbC5hcmVhRGF0YSwgaXRlbSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtLm5hbWUgPT09IG5ld05hbWU7XG4gICAgICB9KTtcbiAgICAgIGlmIChuZXdOYW1lID09PSAnJyB8fCBuZXdOYW1lID09PSBudWxsIHx8IG5ld05hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAvLyBQb3B1cC5hbGVydCgn6K+36L6T5YWl5rWL5Yy65ZCN56ewJyk7XG4gICAgICAgIHRoaXMuJHNldChhcmVhLCAnaXNFZGl0aW5nJywgZmFsc2UpO1xuICAgICAgICBoYXNFcnIgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChpc0V4aXN0KSB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KG5ld05hbWUgKyAn5bey5a2Y5ZyoJyk7XG4gICAgICAgIGhhc0VyciA9IHRydWU7XG4gICAgICB9XG4gICAgICBpZiAoaGFzRXJyKSB7XG4gICAgICAgIGFyZWEubmFtZSA9IG9sZE5hbWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFyZWEubmFtZSA9IG5ld05hbWU7XG4gICAgICBfLmVhY2goZGV0YWlsLnByb2JsZW1EYXRhLCBwcm9ibGVtID0+IHtcbiAgICAgICAgbGV0IHRhcmdldEFyZWEgPSBfLmZpbmQocHJvYmxlbS5hcmVhRGF0YSwgeyBuYW1lOiBvbGROYW1lIH0pO1xuICAgICAgICBsZXQgdGFyZ2V0UG9pbnRzID0gXy5maWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IG9sZE5hbWUgfSk7XG5cbiAgICAgICAgaWYgKHRhcmdldEFyZWEpIHtcbiAgICAgICAgICB0YXJnZXRBcmVhLm5hbWUgPSBuZXdOYW1lO1xuICAgICAgICB9XG4gICAgICAgIF8uZWFjaCh0YXJnZXRQb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICBwb2ludC5hcmVhID0gbmV3TmFtZTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy4kc2V0KGFyZWEsICdpc0VkaXRpbmcnLCBmYWxzZSk7XG4gICAgICB0aGlzLnNhdmVQcm9ibGVtKGRldGFpbCk7XG4gICAgfSxcblxuICAgIGFyZWFOdW1DaGFuZ2UoZGV0YWlsKSB7XG4gICAgICAvLyBkZXRhaWwuYXJlYU51bSA9IHRoaXMuYXJlYU51bTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5zZXRBcmVhRGF0YUJ5TnVtKGRldGFpbCk7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwuc2V0RGV0YWlsUG9pbnRzQnlBcmVhKGRldGFpbCk7XG5cbiAgICAgIF8uZWFjaChkZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucG9pbnRzSGFuZGxlKHByb2JsZW0pO1xuICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnNhdmVQcm9ibGVtKGRldGFpbCk7XG4gICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgIH0sXG5cbiAgICBhcmVhUG9pbnROdW1DaGFuZ2UoZGV0YWlsLCBwcm9ibGVtLCBhcmVhKSB7XG4gICAgICB2YXIgc2libGluZ0FyZWEgPSBfLm1hcChkZXRhaWwucHJvYmxlbURhdGEsIHAgPT4ge1xuICAgICAgICByZXR1cm4gXy5maW5kKHAuYXJlYURhdGEsIHBhID0+IHtcbiAgICAgICAgICByZXR1cm4gcGEubmFtZSA9PT0gYXJlYS5uYW1lO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgdmFyIGlzQWxsQXJlYU51bVplcm8gPSAhXy5zb21lKHNpYmxpbmdBcmVhLCBzYSA9PiB7XG4gICAgICAgIHJldHVybiBzYS5wb2ludE51bSAhPT0gMDtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoaXNBbGxBcmVhTnVtWmVybykge1xuICAgICAgICBhcmVhLnBvaW50TnVtID0gXy5maWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSB9KS5sZW5ndGg7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCfkuIDkuKrmtYvljLrkuI3og73miYDmnInmo4Dmn6XpobnnmoTngrnmlbDkuLowJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTIpIHtcbiAgICAgICAgLy8gdmFyIGFyZWFEYXRhID0gXy5maW5kKGRldGFpbC5hcmVhRGF0YSwge25hbWU6IGFyZWEubmFtZX0pO1xuICAgICAgICBpZiAoYXJlYS5wb2ludE51bSA+IDYgfHwgYXJlYS5wb2ludE51bSA8IDIpIHtcbiAgICAgICAgICAvLyBhcmVhLnBvaW50TnVtID0gXy5maWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSB9KS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIFBvcHVwLmFsZXJ0KCfmoIfpq5jlt67nrpfms5Xmr4/kuKrmtYvljLrlrp7mtYvlgLzkuKrmlbDkuLogMn42Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE2KSB7XG4gICAgICAgIC8vIHZhciBhcmVhRGF0YSA9IF8uZmluZChkZXRhaWwuYXJlYURhdGEsIHtuYW1lOiBhcmVhLm5hbWV9KTtcbiAgICAgICAgaWYgKGFyZWEucG9pbnROdW0gPiA5OSB8fCBhcmVhLnBvaW50TnVtID09PSAxKSB7XG4gICAgICAgICAgYXJlYS5wb2ludE51bSA9IF8uZmlsdGVyKHByb2JsZW0ucmVhbGl0eVZhbCwgeyBhcmVhOiBhcmVhLm5hbWUgfSkubGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBQb3B1cC5hbGVydCgn5q+P5Liq5rWL5Yy654K55pWw5bqU6K+l5pivIDJ+OTkg55qE5pW05pWwJyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnNldFByb2JsZW1Qb2ludHNCeUFyZWEocHJvYmxlbSk7XG5cbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wb2ludHNIYW5kbGUocHJvYmxlbSk7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcblxuICAgICAgdGhpcy5zYXZlUHJvYmxlbSgpO1xuICAgIH0sXG5cbiAgICAvLyDmm7TmlrDlrp7mtYvlgLxcbiAgICByZWFsaXR5VmFsVXBkYXRlKHByb2JsZW0pIHtcbiAgICAgIHRoaXMudXBkYXRlKHByb2JsZW0pO1xuICAgICAgdGhpcy5zYXZlUHJvYmxlbSgpO1xuICAgIH0sXG5cbiAgICAvLyDmm7TmlrDorr7orqHlgLxcbiAgICBzZXRWYWxVcGRhdGUocHJvYmxlbSkge1xuICAgICAgdGhpcy51cGRhdGUocHJvYmxlbSk7XG4gICAgICB0aGlzLnNhdmVQcm9ibGVtKCk7XG4gICAgfSxcblxuICAgIC8vIOS/neWtmOi+k+WFpeeahOiuvuiuoeWAvFxuICAgIHNhdmVJbnB1dFNldFZhbChwcm9ibGVtLCBhcmVhKSB7XG4gICAgICBpZiAoXy5pbmNsdWRlcyhbNSwgNiwgMTRdLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpKSB7XG4gICAgICAgIC8vIOmrmOWuve+8jOW8gOmXtOi/m+a3sVxuICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJldlNldFZhbFtwcm9ibGVtLmNoZWNrSXRlbS5pZF0gPSB7fTtcblxuICAgICAgICBfLmVhY2gocHJvYmxlbS5tZWFzdXJlX2l0ZW0sIGxhYmVsID0+IHtcbiAgICAgICAgICB2YXIgZmlyc3RQb2ludCA9IF8uZmluZChwcm9ibGVtLnJlYWxpdHlWYWwsIHsgYXJlYTogYXJlYS5uYW1lLCBsYWJlbDogbGFiZWwgfSksXG4gICAgICAgICAgICBpdGVtU2V0VmFsID0gZmlyc3RQb2ludC5zZXRWYWw7XG5cbiAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJldlNldFZhbFtwcm9ibGVtLmNoZWNrSXRlbS5pZF1bJ3ZhbC0nICsgbGFiZWxdID0gaXRlbVNldFZhbDtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDmoIflh4Yr6K6+6K6h5YC877yM5p6B5beuK+iuvuiuoeWAvFxuICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJldlNldFZhbFtwcm9ibGVtLmNoZWNrSXRlbS5pZF0gPSB7XG4gICAgICAgICAgdmFsOiBhcmVhLnNldFZhbCxcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIOWunua1i+WAvOi+k+WFpeahhuiOt+WPlueEpueCueeahOaXtuWAme+8jOiHquWKqOWhq+WFpeS4iuS4gOasoeeahOiuvuiuoeWAvFxuICAgIGF1dG9JbnB1dFNldFZhbChwcm9ibGVtLCBhcmVhKSB7XG4gICAgICAvLyDkuIrkuIDmrKHovpPlhaXnmoTorr7orqHlgLxcbiAgICAgIGxldCBwcmV2U2V0VmFsID0gTWVhc3VyZURldGFpbE1vZGVsLnByZXZTZXRWYWxbcHJvYmxlbS5jaGVja0l0ZW0uaWRdO1xuICAgICAgbGV0IG5lZWRTZXRWYWwgPSBfLmluY2x1ZGVzKFszLCA0LCA1LCA2LCAxMCwgMTEsIDE0LCAxNSwgMTcsIDE4XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKTtcbiAgICAgIC8vIOafpeaJvuaYr+WQpuacieS4uuepuueahOiuvuiuoeWAvFxuICAgICAgbGV0IGhhc0VtcHR5U2V0VmFsID0gXy5zb21lKHByb2JsZW0ucmVhbGl0eVZhbCwgcG9pbnQgPT4ge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gYXJlYS5uYW1lICYmICF0aGlzLm1vZGVsLmhhc1ZhbChwb2ludC5zZXRWYWwpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChuZWVkU2V0VmFsICYmIGhhc0VtcHR5U2V0VmFsICYmIHByZXZTZXRWYWwgJiYgIV8uaXNFbXB0eShwcmV2U2V0VmFsKSkge1xuICAgICAgICBpZiAoXy5pbmNsdWRlcyhbNSwgNiwgMTQsIDE1XSwgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlKSkge1xuICAgICAgICAgIC8vIOmrmOWuvSDlkowg5byA6Ze06L+b5rexIOaooeW8j++8jOmcgOimgeWIhuWIq+WPluiuvuiuoeWAvO+8jOWkjeWItue7meesrOS4gOS4queCue+8jOeEtuWQjue7n+S4gOWIsOWQjumdoueahOeCue+8m+W8gOmXtOi/m+a3se+8iOW4puaegeW3ru+8iVxuICAgICAgICAgIF8uZWFjaChwcm9ibGVtLm1lYXN1cmVfaXRlbSwgbGFiZWwgPT4ge1xuICAgICAgICAgICAgbGV0IGl0ZW1TZXRWYWwgPSBwcmV2U2V0VmFsWyd2YWwnICsgJy0nICsgbGFiZWxdO1xuICAgICAgICAgICAgbGV0IGZpcnN0UG9pbnQgPSBfLmZpbmQocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSwgbGFiZWw6IGxhYmVsIH0pO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5tb2RlbC5oYXNWYWwoaXRlbVNldFZhbCkpIHtcbiAgICAgICAgICAgICAgZmlyc3RQb2ludC5zZXRWYWwgPSBpdGVtU2V0VmFsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIOaZrumAmuaooeW8j++8iOagh+WHhivorr7orqHlgLzvvIzmnoHlt64r6K6+6K6h5YC877yJ77yM5Y+q55So57uZIGFyZWEg6LWL5YC85bCx6KGMXG4gICAgICAgICAgaWYgKHRoaXMubW9kZWwuaGFzVmFsKHByZXZTZXRWYWwudmFsKSkge1xuICAgICAgICAgICAgYXJlYS5zZXRWYWwgPSBwcmV2U2V0VmFsLnZhbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gdGhpcy51cGRhdGUocHJvYmxlbSk7XG4gICAgICB9XG4gICAgfSxcbiAgICB1cGRhdGUocHJvYmxlbSkge1xuICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnNldFZhbFNwcmVhZChwcm9ibGVtKTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wb2ludHNIYW5kbGUocHJvYmxlbSk7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcbiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7XG4gICAgfSxcbiAgICBjaGFuZ2VNb2RlKG1vZGUpIHtcbiAgICAgIHRoaXMuaXNQcm9ibGVtRXhpc3RzKCkudGhlbigoKSA9PiB7XG4gICAgICAgIFBvcHVwLmNvbmZpcm0oJ+S7iuWkqTI0OjAw5YmN5Y+v5L+u5pS577yM5piv5ZCm546w5Zyo5L+u5pS577yfJywgeyBva1RleHQ6ICfkv67mlLknIH0pLnRoZW4oaXNPayA9PiB7XG4gICAgICAgICAgaWYgKGlzT2spIHtcbiAgICAgICAgICAgIHRoaXMuZGV0YWlsLm1vZGUgPSBtb2RlO1xuICAgICAgICAgICAgLy8gdGhpcy4kZW1pdCgnY2hhbmdlTW9kZScsIG1vZGUpO1xuICAgICAgICAgICAgdGhpcy5kZXRhaWwubmVlZFJlcGFpciA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy4kcmVmc1snc2Nyb2xsZXInXS5zY3JvbGxUb3AgPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgbWFya0h1eGluZyhkZXRhaWwsIHBvaW50KSB7XG4gICAgICBsZXQgcG9pbnRzID0gW107XG4gICAgICBpZiAocG9pbnQgJiYgcG9pbnQueCAhPT0gJycgJiYgcG9pbnQueCAhPT0gdW5kZWZpbmVkICYmIHBvaW50LnggIT09IG51bGwpIHtcbiAgICAgICAgcG9pbnRzID0gW3BvaW50XTtcbiAgICAgIH1cblxuICAgICAgRHJhd2luZy5vcGVuUG9wdXAoe1xuICAgICAgICBtb2RlOiAnbWFyaycsXG4gICAgICAgIHVybDogZGV0YWlsLmRyYXdpbmdfZmlsZVswXSA/IGRldGFpbC5kcmF3aW5nX2ZpbGVbMF0udXJsIDogJycsXG4gICAgICAgIHBvaW50czogcG9pbnRzLFxuICAgICAgICBvbm1hcms6IHJlcyA9PiB7XG4gICAgICAgICAgcG9pbnQueCA9IHJlcy54O1xuICAgICAgICAgIHBvaW50LnkgPSByZXMueTtcblxuICAgICAgICAgIF8uZWFjaChkZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnBvaW50c0hhbmRsZShwcm9ibGVtKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHRoaXMuc2F2ZVByb2JsZW0oZGV0YWlsKTtcbiAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIHZpZXdIdXhpbmcoKSB7XG4gICAgICBsZXQgcG9pbnRzID0gW107XG4gICAgICBsZXQgdmlld1BvaW50cyA9IFtdO1xuXG4gICAgICBpZiAoXy5pc0VtcHR5KHRoaXMuZGV0YWlsLmRyYXdpbmdfZmlsZSkpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ1BD56uv5pyq6K6+572u5oi35Z6L5Zu+Jyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgXy5lYWNoKHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhLCBwcm9ibGVtID0+IHtcbiAgICAgICAgLy8g6L+H5ruk5rKh5pyJ5qCH6K6w55qE54K5XG4gICAgICAgIHBvaW50cyA9IHBvaW50cy5jb25jYXQoXG4gICAgICAgICAgXy5maWx0ZXIoXy5jbG9uZShwcm9ibGVtLnJlYWxpdHlWYWwpLCBwb2ludCA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5tb2RlbC5oYXNWYWwocG9pbnQueCkgJiYgdGhpcy5tb2RlbC5oYXNWYWwocG9pbnQueSkpIHtcbiAgICAgICAgICAgICAgaWYgKHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICBwb2ludC5pdGVtTmFtZSA9IHByb2JsZW0uY2hlY2tJdGVtLml0ZW1fbmFtZVxuICAgICAgICAgICAgICAgICAgPyBwcm9ibGVtLmNoZWNrSXRlbS5pdGVtX25hbWVcbiAgICAgICAgICAgICAgICAgIDogcHJvYmxlbS5jaGVja0l0ZW0ubmFtZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIC8vIOaMiea1i+WMuuaOkuW6j1xuICAgICAgaWYgKCFfLmlzRW1wdHkodGhpcy5kZXRhaWwuYXJlYURhdGEpKSB7XG4gICAgICAgIF8uZWFjaCh0aGlzLmRldGFpbC5hcmVhRGF0YSwgYXJlYSA9PiB7XG4gICAgICAgICAgdmFyIGFyZWFQb2ludHMgPSBfLmZpbHRlcihfLmNsb25lKHBvaW50cyksIHsgYXJlYTogYXJlYS5uYW1lIH0pO1xuICAgICAgICAgIHZpZXdQb2ludHMgPSB2aWV3UG9pbnRzLmNvbmNhdChhcmVhUG9pbnRzKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGxldCBjaGVja2l0ZW1zID0gW107XG5cbiAgICAgIF8uZWFjaCh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIGxldCBjaGVja2l0ZW0gPSB7IC4uLnByb2JsZW0uY2hlY2tJdGVtIH07XG4gICAgICAgIGNoZWNraXRlbS5wYXNzcmF0ZV9tb2RlID0gcHJvYmxlbS5wYXNzcmF0ZV9tb2RlO1xuICAgICAgICBjaGVja2l0ZW1zLnB1c2goY2hlY2tpdGVtKTtcbiAgICAgIH0pO1xuXG4gICAgICBEcmF3aW5nV2l0aFBvaW50Lm9wZW5Qb3B1cCh7XG4gICAgICAgIG1vZGU6ICd2aWV3JyxcbiAgICAgICAgdXJsOiB0aGlzLmRldGFpbC5kcmF3aW5nX2ZpbGVbMF0gPyB0aGlzLmRldGFpbC5kcmF3aW5nX2ZpbGVbMF0udXJsIDogJycsXG4gICAgICAgIHBvaW50czogdmlld1BvaW50cyxcbiAgICAgICAgYXJlYURhdGE6IHRoaXMuZGV0YWlsLmFyZWFEYXRhIHx8IFtdLFxuICAgICAgICBpdGVtRGF0YTogY2hlY2tpdGVtcyxcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICB0b2dnbGVQcm9ibGVtRGF0YShwcm9ibGVtKSB7XG4gICAgICBpZiAodGhpcy5kZXRhaWwucHJvYmxlbURhdGEubGVuZ3RoID4gMSkge1xuICAgICAgICB0aGlzLiRzZXQocHJvYmxlbSwgJ2lzT3BlbicsICFwcm9ibGVtLmlzT3Blbik7XG4gICAgICB9XG4gICAgfSxcbiAgICB0b2dnbGVQcm9ibGVtRGF0YUFsbCgpIHtcbiAgICAgIGxldCBoYXNDbG9zZSA9IHRoaXMuaGFzUHJvYmxlbURhdGFDbG9zZTtcbiAgICAgIF8uZWFjaCh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIHRoaXMuJHNldChwcm9ibGVtLCAnaXNPcGVuJywgISFoYXNDbG9zZSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgaXNQcm9ibGVtRXhpc3RzKCkge1xuICAgICAgbGV0IGRldGFpbCA9IHRoaXMuZGV0YWlsO1xuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmlzUHJvYmxlbUV4aXN0cyhkZXRhaWwuaWQpLnRoZW4oZXhpc3RzID0+IHtcbiAgICAgICAgaWYgKCFleGlzdHMpIHtcbiAgICAgICAgICBQb3B1cC5hbGVydCgn5pWw5o2u5pyJ5pu05pawJyk7XG4gICAgICAgICAgcm91dGVyLmdvKC0xKTtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoeyBtZ3M6ICfpl67popjkuI3lrZjlnKgnLCBjb2RlOiAtMSB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBiZWZvcmVTZWxlY3RSZXBhaXIoKSB7XG4gICAgICBsZXQgZGV0YWlsID0gdGhpcy5kZXRhaWwsXG4gICAgICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG4gICAgICBpZiAoZGV0YWlsLm1vZGUgPT09ICd2aWV3Jykge1xuICAgICAgICBwcm9taXNlID0gdGhpcy5pc1Byb2JsZW1FeGlzdHMoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwcm9taXNlO1xuICAgIH0sXG4gICAgb25TZWxlY3RSZXBhaXIoKSB7XG4gICAgICBpZiAodGhpcy5kZXRhaWwubW9kZSAhPT0gJ3JlZWRpdCcgJiYgdGhpcy5kZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5Jykge1xuICAgICAgICByZXR1cm4gTWVhc3VyZVNlcnZpY2UuY2hhbmdlUmVwYWlyKHRoaXMuZGV0YWlsKVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbG9hZERldGFpbCgpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g6K6+572u6YCa55+l5pW05pS5XG4gICAgc2V0TmVlZFJlcGFpcigpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbCxcbiAgICAgICAgcGxhY2UgPSB0aGlzLm1vZGVsLnBsYWNlLFxuICAgICAgICBpdGVtID0gdGhpcy5tYXN0ZXJDaGVja2l0ZW1bMF0sXG4gICAgICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIGRldGFpbC5uZWVkUmVwYWlyID0gIWRldGFpbC5uZWVkUmVwYWlyO1xuXG4gICAgICAvLyDliKTmlq3lsZ7mgKfmmK/lkKbooqvop4Llr5/jgILpnZ7luLjns5/ns5XnmoTlgZrms5XvvIzlupTor6XkuovlhYjmiorlk43lupTlvI/mlbDmja7mj5Dlj5blh7rmnaVcbiAgICAgIGlmICghXy5pc09iamVjdChkZXRhaWwucmVwYWlyLl9fb2JfXykpIHtcbiAgICAgICAgbGV0IHJlcGFpciA9IF8uY2xvbmUoZGV0YWlsLnJlcGFpcik7XG4gICAgICAgIGRlbGV0ZSBkZXRhaWwucmVwYWlyO1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5kZXRhaWwsICdyZXBhaXInLCByZXBhaXIpO1xuICAgICAgfVxuICAgICAgaWYgKChkZXRhaWwubmVlZFJlcGFpciAmJiBfLmlzRW1wdHkoZGV0YWlsLnJlcGFpcikpIHx8ICFkZXRhaWwucmVwYWlyLmlkKSB7XG4gICAgICAgIHByb21pc2UgPSBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldEJpZFNlY3Rpb25DaGVja0l0ZW1JbmZvKFxuICAgICAgICAgIGRldGFpbC5wcm9qX2lkLFxuICAgICAgICAgIHBsYWNlLnNlY3Rpb24uaWQsXG4gICAgICAgICAgaXRlbS5pZCxcbiAgICAgICAgICAn5a6e5rWL5a6e6YePJ1xuICAgICAgICApXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgbGV0IHJlcGFpciA9IGl0ZW0ucmVwYWlyWzBdIHx8IHt9O1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihkZXRhaWwucmVwYWlyLCByZXBhaXIpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgVGFsa2luZ0RhdGFTZXJ2aWNlLmFkZFRyYWNrKCflrp7mtYvlrp7ph48t6YCa55+l5pW05pS5Jyk7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBwcm9taXNlXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAvLyDop6PlhrPku6Plip7ov5vmnaXkuI3liLfmlrBcbiAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgdGhpcy5iZWZvcmVTZWxlY3RSZXBhaXIoKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGNoZWNrU3VibWl0RGF0YSgpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbDtcbiAgICAgIGxldCByZXN1bHQgPSBfLnNvbWUoZGV0YWlsLnByb2JsZW1EYXRhLCBwcm9ibGVtID0+IHtcbiAgICAgICAgLy8g5piv5ZCm5pyJ5pyq5b2V5YC855qE54K5XG4gICAgICAgIGxldCBoYXNFbXB0eVBvaW50ID0gZmFsc2U7XG4gICAgICAgIC8vIOmrmOW3rueul+azleWFgeiuuOacieepuuWAvO+8jOS9huaYr+avj+S4qua1i+WMuuiHs+WwkeimgeacieS4pOS4queCuVxuICAgICAgICBsZXQgaGlnaERpZmZFcnIgPSAnJztcblxuICAgICAgICBsZXQgaGFzRW1wdHlTZXRWYWw7XG5cbiAgICAgICAgaWYgKHByb2JsZW0ucGFzc3JhdGVfbW9kZSAhPT0gMTIgJiYgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlICE9PSA1KSB7XG4gICAgICAgICAgaGFzRW1wdHlQb2ludCA9IF8uc29tZShwcm9ibGVtLnJlYWxpdHlWYWwsIGl0ZW0gPT4ge1xuICAgICAgICAgICAgcmV0dXJuICFpdGVtLmlzRmljdCAmJiAhdGhpcy5tb2RlbC5oYXNWYWwoaXRlbS52YWwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTIpIHtcbiAgICAgICAgICBsZXQgcG9pbnRzR3JvdXAgPSBfLmdyb3VwQnkocHJvYmxlbS5yZWFsaXR5VmFsIHx8IFtdLCAnYXJlYScpO1xuXG4gICAgICAgICAgbGV0IGhhc0Vycm9yQXJlYSA9IF8uc29tZShwb2ludHNHcm91cCwgcG9pbnRzID0+IHtcbiAgICAgICAgICAgIGxldCBoYXNWYWxQb2ludCA9IF8uZmlsdGVyKHBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tb2RlbC5oYXNWYWwocG9pbnQudmFsKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gaGFzVmFsUG9pbnQubGVuZ3RoIDwgMjtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGhpZ2hEaWZmRXJyID0gaGFzRXJyb3JBcmVhID8gJ+avj+S4qua1i+WMuuiHs+WwkeWhq+S4pOS4quWAvCcgOiAnJztcbiAgICAgICAgfSBlbHNlIGlmIChwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDUpIHtcbiAgICAgICAgICB2YXIgY2hlY2tlZFJlc3VsdCA9IHRoaXMubW9kZWwuY29tcGxldGVJbnB1dChwcm9ibGVtLnJlYWxpdHlWYWwpLFxuICAgICAgICAgICAgaGFzRW1wdHlBcmVhID0gY2hlY2tlZFJlc3VsdC5oYXNFbXB0eUFyZWE7XG4gICAgICAgICAgaGFzRW1wdHlQb2ludCA9IGNoZWNrZWRSZXN1bHQuaW5jb21wbGV0ZWQ7XG4gICAgICAgICAgaGFzRW1wdHlTZXRWYWwgPSBjaGVja2VkUmVzdWx0LmVtcHR5U2V0VmFsO1xuXG4gICAgICAgICAgLy8g5pW05Liq5rWL5Yy65pyq5aGrXG4gICAgICAgICAgaWYgKGhhc0VtcHR5QXJlYSkge1xuICAgICAgICAgICAgUG9wdXAuYWxlcnQoJ+WuveW6puOAgemrmOW6puiHs+WwkemcgOWujOaVtOW9leWFpeWFtuS4reS4gOS4qicpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGhhc0VtcHR5UG9pbnQgfHwgaGFzRW1wdHlTZXRWYWwpIHtcbiAgICAgICAgICAgIFBvcHVwLmFsZXJ0KCfor7flvZXlhajmiYDmnInlrp7mtYvlgLzlkozorr7orqHlgLwnKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOWunua1i+WAvOaYr+WQpuacieacquagh+iusOaIt+Wei+Wbvizmr4/kuKrmtYvljLrlj6rnlKjmoIforrDkuIDkuKrngrnljbPlj69cbiAgICAgICAgbGV0IGhhc0xvc3RQb2ludCA9IF8uc29tZShwcm9ibGVtLmFyZWFEYXRhLCBhcmVhID0+IHtcbiAgICAgICAgICAvLyDniIbngrlcbiAgICAgICAgICBsZXQgZXhjZWVkUG9pbnRzID0gXy5maWx0ZXIocHJvYmxlbS5yZWFsaXR5VmFsLCB7IGFyZWE6IGFyZWEubmFtZSwgaXNFeGNlZWQ6IHRydWUgfSk7XG4gICAgICAgICAgLy8g5pyJ5qCH6K6w55qE54iG54K5XG4gICAgICAgICAgbGV0IGV4Y2VlZE1hcmtQb2ludHMgPSBfLmZpbHRlcihwcm9ibGVtLnJlYWxpdHlWYWwsIHtcbiAgICAgICAgICAgIGFyZWE6IGFyZWEubmFtZSxcbiAgICAgICAgICAgIGlzRXhjZWVkOiB0cnVlLFxuICAgICAgICAgICAgaGFzTWFyazogdHJ1ZSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICAvLyDmnInniIbngrks5LiU5rKh5pyJ5qCH6K6w5oi35Z6L5Zu+XG4gICAgICAgICAgcmV0dXJuICEhZXhjZWVkUG9pbnRzLmxlbmd0aCAmJiAhZXhjZWVkTWFya1BvaW50cy5sZW5ndGg7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyDmmK/lkKbmnInorr7orqHkuYvmnKrloavvvIwzLDQsNiDlr7nlupTnmoTliIbliKvmmK8gOiDmoIflh4Yr6K6+6K6h5YC877yM5p6B5beuK+iuvuiuoeWAvO+8jOW8gOmXtOi/m+a3seOAgemrmOWuveWOmuOAgeW8gOmXtOi/m+a3se+8iOaegeW3ru+8iVxuICAgICAgICBoYXNFbXB0eVNldFZhbCA9XG4gICAgICAgICAgXy5pbmNsdWRlcyhbMywgNCwgNiwgMTAsIDExLCAxNCwgMTUsIDE2LCAxNywgMThdLCBwcm9ibGVtLnBhc3NyYXRlX21vZGUpICYmXG4gICAgICAgICAgXy5zb21lKHByb2JsZW0ucmVhbGl0eVZhbCwgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICF0aGlzLm1vZGVsLmhhc1ZhbChwb2ludC5zZXRWYWwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAvLyDmr4/kuKrmo4Dmn6Xpobnoh7PlsJHkuIDkuKrmtYvngrlcbiAgICAgICAgbGV0IGhhc05vdFBvaW50ID0gXy5pc0VtcHR5KHByb2JsZW0ucmVhbGl0eVZhbCk7XG5cbiAgICAgICAgbGV0IGF2ZXJhZ2VMb3dJdGVtO1xuICAgICAgICBsZXQgYXZlcmFnZUhpZ2hJdGVtO1xuICAgICAgICBsZXQgYXZlcmFnZU92ZXJmbG93VGlwcyA9ICcnO1xuXG4gICAgICAgIGlmIChoYXNOb3RQb2ludCkge1xuICAgICAgICAgIFBvcHVwLmFsZXJ0KCfmr4/kuKrmo4Dmn6Xpobnoh7PlsJHkuIDkuKrmtYvngrknKTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChoYXNFbXB0eVBvaW50KSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+Whq+WGmeWFqOmDqOWunua1i+WAvCcpO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhhc0VtcHR5U2V0VmFsKSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+Whq+WGmeWFqOmDqOiuvuiuoeWAvCcpO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhpZ2hEaWZmRXJyKSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQocHJvYmxlbS5jaGVja0l0ZW0ubmFtZSArIGhpZ2hEaWZmRXJyKTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICAvLyDmnInmiLflnovlm77liJnopoHmoKHpqozmmK/lkKbmoIforrDkuobngrnkvY1cbiAgICAgICAgaWYgKCFfLmlzRW1wdHkoZGV0YWlsLmRyYXdpbmdfZmlsZSkgJiYgaGFzTG9zdFBvaW50ICYmICFkZXRhaWwub3B0aW9uYWxKaWNoYSkge1xuICAgICAgICAgIFBvcHVwLmFsZXJ0KCfmr4/kuKrmtYvljLrmr4/kuKrmo4Dmn6Xpobnoh7PlsJEx5Liq54iG54K55qCH54K55L2NJyk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDmt7fms6XlnJ/lvLrluqbmoKHpqozvvIzmtYvljLrlubPlnYflgLzlv4XpobvlnKggW21pbiwgbWF4XSDkuYvpl7Qo5qCH5YeG5LiN5ZCM77yM5a+554Wn6KGo5Lmf5LiN5LiA5qC3KVxuICAgICAgICBpZiAocHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA5KSB7XG4gICAgICAgICAgYXZlcmFnZUxvd0l0ZW0gPSBfLmZpbHRlcihwcm9ibGVtLmludGVuc2l0eU91dGNvbWUsIHsgaW50ZW5zaXR5OiAnbG93JyB9KTtcbiAgICAgICAgICBhdmVyYWdlSGlnaEl0ZW0gPSBfLmZpbHRlcihwcm9ibGVtLmludGVuc2l0eU91dGNvbWUsIHsgaW50ZW5zaXR5OiAnaGlnaCcgfSk7XG5cbiAgICAgICAgICBpZiAoIXRoaXMubW9kZWwuaGFzVmFsKHByb2JsZW0uaW50ZW5zaXR5U2V0VmFsKSkge1xuICAgICAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+i+k+WFpeW8uuW6puiuvuiuoeWAvCcpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGF2ZXJhZ2VMb3dJdGVtLmxlbmd0aCB8fCBhdmVyYWdlSGlnaEl0ZW0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAvLyDmtYvljLox55qE5bmz5Z2H5YC85bCP5LqOWFhY77yM5rWL5Yy6MueahOW5s+Wdh+WAvOWkp+S6jlhYWO+8jOa1i+WMujPnmoTlubPlnYflgLzlpKfkuo5YWFjvvIzml6Dms5XorqHnrpfjgIJcbiAgICAgICAgICAgIGF2ZXJhZ2VPdmVyZmxvd1RpcHMgPVxuICAgICAgICAgICAgICBhdmVyYWdlTG93SXRlbS5yZWR1Y2UoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYSArIGAke2IuYXJlYX3nmoTlubPlnYflgLzlsI/kuo4ke2IucmVmZXJlbmNlTWlufe+8jGA7XG4gICAgICAgICAgICAgIH0sICcnKSArXG4gICAgICAgICAgICAgIGF2ZXJhZ2VIaWdoSXRlbS5yZWR1Y2UoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYSArIGAke2IuYXJlYX3nmoTlubPlnYflgLzlpKfkuo4ke2IucmVmZXJlbmNlTWF4fe+8jGA7XG4gICAgICAgICAgICAgIH0sICcnKTtcblxuICAgICAgICAgICAgYXZlcmFnZU92ZXJmbG93VGlwcyA9IGF2ZXJhZ2VPdmVyZmxvd1RpcHMgKyAn5peg5rOV6K6h566XJztcblxuICAgICAgICAgICAgUG9wdXAuYWxlcnQoYXZlcmFnZU92ZXJmbG93VGlwcyk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBsZXQgY29uc3RyYWN0b3JSZXF1aXJlZCA9IF8uZmluZChkZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICByZXR1cm4gXy5pc0VtcHR5KHByb2JsZW0uY29udHJhY3Rvcik7XG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXN1bHQgJiYgY29uc3RyYWN0b3JSZXF1aXJlZCkge1xuICAgICAgICBQb3B1cC5hbGVydCgn6K+36YCJ5oup5pa95bel5Y2V5L2NJyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAhcmVzdWx0O1xuICAgIH0sXG5cbiAgICAvLyDpgJrnn6XmlbTmlLlcbiAgICBzZXRSZXBhaXIoKSB7XG4gICAgICBsZXQgZGV0YWlsID0gXy5jbG9uZSh0aGlzLmRldGFpbCk7XG4gICAgICBpZiAoXy5pc0VtcHR5KGRldGFpbC5yZXBhaXIpIHx8ICFkZXRhaWwucmVwYWlyLmlkKSB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCfor7fpgInmi6nmlbTmlLnkuronKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gTWVhc3VyZVNlcnZpY2Uuc2V0UmVwYWlyKGRldGFpbClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHRoaXMucmVsb2FkRGV0YWlsKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6YeN5paw5Yqg6L296Zeu6aKY6K+m5oOFXG4gICAgcmVsb2FkRGV0YWlsKCkge1xuICAgICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5wcm9ibGVtSWQpIHtcbiAgICAgICAgICByZXR1cm4gTWVhc3VyZURldGFpbE1vZGVsLmxvYWREZXRhaWxCeUlkKHRoaXMuJHJvdXRlLnF1ZXJ5LnByb2JsZW1JZCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIE1lYXN1cmVEZXRhaWxNb2RlbC5sb2FkRGV0YWlsQnlJZGVudGl0eShNZWFzdXJlRGV0YWlsTW9kZWwudGFic0lkZW50aXR5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOW8gOWQr+eis+WMlua3seW6plxuICAgIGNhcmJvbk9wZW4ocHJvYmxlbSwgYXJlYSkge1xuICAgICAgdGhpcy5jYXJib25TaG93ID0gdHJ1ZTtcbiAgICAgIC8vIOS8oOWFpeeis+WMlua3seW6plxuICAgICAgdGhpcy5jYXJib25EYXRhID0gYXJlYS5jYXJib247XG4gICAgICAvLyDorrDkvY/pgInkuK3nmoTnorPljJbmt7HluqZcbiAgICAgIHRoaXMuY2FyYm9uU2VsZWN0RGF0YSA9IHtcbiAgICAgICAgaWQ6IHByb2JsZW0uaWQsXG4gICAgICAgIGFyZWFOYW1lOiBhcmVhLm5hbWUsXG4gICAgICB9O1xuICAgIH0sXG5cbiAgICAvLyDpgInkuK3norPljJbmt7HluqZcbiAgICBjYXJib25TZWxlY3QoY2FyYm9uKSB7XG4gICAgICBjb25zdCB7IGlkLCBhcmVhTmFtZSB9ID0gdGhpcy5jYXJib25TZWxlY3REYXRhO1xuICAgICAgdGhpcy5kZXRhaWwucHJvYmxlbURhdGEuZm9yRWFjaChwcm9ibGVtID0+IHtcbiAgICAgICAgaWYgKHByb2JsZW0uaWQgPT09IGlkKSB7XG4gICAgICAgICAgcHJvYmxlbS5yZWFsaXR5VmFsLmZvckVhY2gocG9pbnQgPT4ge1xuICAgICAgICAgICAgaWYgKHBvaW50LmFyZWEgPT09IGFyZWFOYW1lKSB7XG4gICAgICAgICAgICAgIC8vIOS/ruaUueWvueW6lOajgOafpemhueOAgea1i+WMuueahOeis+WMlua3seW6plxuICAgICAgICAgICAgICBwb2ludC5jYXJib24gPSBjYXJib247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBwcm9ibGVtLmFyZWFEYXRhLmZvckVhY2goYXJlYSA9PiB7XG4gICAgICAgICAgICBpZiAoYXJlYS5uYW1lID09PSBhcmVhTmFtZSkge1xuICAgICAgICAgICAgICAvLyDkv67mlLnlr7nlupTmo4Dmn6XpobnjgIHmtYvljLrnmoTnorPljJbmt7HluqZcbiAgICAgICAgICAgICAgYXJlYS5jYXJib24gPSBjYXJib247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICAvLyDmm7TmlrDlrp7mtYvlgLxcbiAgICAgICAgICB0aGlzLnJlYWxpdHlWYWxVcGRhdGUocHJvYmxlbSk7XG4gICAgICAgICAgY29uc29sZS5sb2coJ+eis+WMlua3seW6pu+8micsIGNhcmJvbiwgXy5jbG9uZURlZXAocHJvYmxlbSkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g5YWz6Zet56Kz5YyW5rex5bqmXG4gICAgY2FyYm9uQ2xvc2UoKSB7XG4gICAgICB0aGlzLmNhcmJvblNob3cgPSBmYWxzZTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4udmFsdWUtaW5wdXQge1xuICBmb250LXNpemU6IDA7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuLnZhbHVlLWlucHV0LWxhYmVsIHtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICM5OTk7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4uYXJlYS1uYW1lLXRleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDRweCAwO1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuLmFyZWEtbmFtZS1pbnB1dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogNjFweDtcbiAgaGVpZ2h0OiAzNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAkdGhlbWVDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICRjb2xvckJsYWNrO1xuICBib3gtc2hhZG93OiAwIDAgOHB4IDAgcmdiYSg2NiwgMTE3LCAyMzIsIDAuMzcpO1xufVxuLmFyZWEtbmFtZS1pbnB1dCBpbnB1dCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uYXJlYS1pbmZvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmNoZWNraXRlbS1pbmZvIHtcbiAgZmxleDogMTtcbiAgcGFkZGluZy10b3A6IDdweDtcbiAgbWluLWhlaWdodDogMzRweDtcbn1cbi5jaGVja2l0ZW0tbmFtZSB7XG4gIGNvbG9yOiAjMzMzO1xufVxuLmNoZWNraXRlbS1zdGFuZGFyZCB7XG4gIGNvbG9yOiAjOTk5O1xufVxuXG4uY2hlY2tpdGVtLXN0YW5kYXJkX3NwZWNpYWwge1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDFweDtcbn1cblxuLmh1eGluZy12aWV3IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0xMHB4O1xuICByaWdodDogLThweDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHRoZW1lQ29sb3I7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLmh1eGluZy1tYXJrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0yMHB4O1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiA0NHB4O1xuICBoZWlnaHQ6IDIycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBtYXJnaW4tbGVmdDogLTIycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGViYmQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICMxMTE7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuLmh1eGluZy1tYXJrIC5hcnJvdyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMTlweDtcbiAgYm90dG9tOiAtNnB4O1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBib3JkZXI6IDNweCBzb2xpZCAjZmRlYmJkO1xuICBib3JkZXItY29sb3I6ICNmZGViYmQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG59XG5cbi5pdGVtLWlucHV0LWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5sYWJlbC1pbnB1dC1ncm91cCB7XG4gIGhlaWdodDogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgY29sb3I6ICM5OTk7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ubGFiZWwtaW5wdXQtZ3JvdXAtZmxleCB7XG4gIGZsZXg6IDE7XG59XG5cbi52aWV3LXBvaW50cy1saW5lIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi52aWV3LXBvaW50cy1sZWZ0IHtcbiAgbWluLXdpZHRoOiAxNDBweDtcbiAgcGFkZGluZy1sZWZ0OiAyLjZlbTtcbiAgdGV4dC1pbmRlbnQ6IC0yLjZlbTtcbn1cbi52aWV3LXBvaW50cy1yaWdodCB7XG4gIGZsZXg6IDE7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgY29sb3I6ICRjb2xvckxpZ2h0O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4ubnVtYmVyLWlucHV0LWdyb3VwIHtcbiAgcGFkZGluZy10b3A6IDE1cHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbn1cbi5udW1iZXItaW5wdXQtZ3JvdXAgLm51bWJlci1pbnB1dCB7XG4gIG1hcmdpbjogMCAwIDEwcHggMTBweDtcbn1cblxuLnBhc3NyYXRlLXNsb3BlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IGluaGVyaXQ7XG59XG5cbi5idG4tcmVlZGl0IHtcbiAgd2lkdGg6IDgwcHg7XG4gIHBhZGRpbmc6IDEycHggMDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG59XG4uYnRuLXJlZWRpdCAuaWNvbiB7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuLmJ0bi1kcmF3aW5nIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBwYWRkaW5nOiAxMnB4IDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG59XG4uYnRuLWRyYXdpbmcgLmljb24ge1xuICBmb250LXNpemU6IDEzcHg7XG59XG5cbi5kZXRhaWwtbGlzdC1oZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cbi5kZXRhaWwtbGlzdC1oZCAubGlzdC1oZC10b2dnbGUge1xuICBmbGV4OiAxO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG59XG4uZGV0YWlsLWxpc3QtaGQgLmxpc3QtaGQtdGl0bGUge1xuICBmbGV4OiAxO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjODg4O1xufVxuLmRldGFpbC1saXN0LWhkIC5saXN0LWhkLW51bSB7XG4gIHdpZHRoOiA4MHB4O1xuICAvLyBwYWRkaW5nOiAwIDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICM4ODg7XG59XG4uZGV0YWlsLWxpc3QtaGQgLmxpc3QtaGQtcGFzc3JhdGUge1xuICB3aWR0aDogMTAwcHg7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGNvbG9yOiAjODg4O1xufVxuXG4uZGV0YWlsLWxpc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cbi5kZXRhaWwtaXRlbS1oZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBtaW4taGVpZ2h0OiA0NnB4O1xufVxuLmRldGFpbC1pdGVtLWFycm93IHtcbiAgYm9yZGVyOiA1cHggc29saWQgI2M4YzhjODtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbn1cbi5kZXRhaWwtaXRlbS1hcnJvdy5pdGVtLWFycm93LXJpZ2h0IHtcbiAgbWFyZ2luOiAxOHB4IDEzcHggMCAxN3B4O1xuICBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwO1xuICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5kZXRhaWwtaXRlbS1hcnJvdy5pdGVtLWFycm93LWRvd24ge1xuICBtYXJnaW46IDIwcHggMTBweCAwIDE1cHg7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn1cbi5kZXRhaWwtaXRlbS1uYW1lIHtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogMTNweCAwO1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzExMTtcbn1cbi5kZXRhaWwtaXRlbS1udW0ge1xuICB3aWR0aDogODBweDtcbiAgcGFkZGluZzogMTNweCAwO1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjODg4O1xufVxuLmRldGFpbC1pdGVtLXBhc3NyYXRlIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBwYWRkaW5nOiAxM3B4IDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBjb2xvcjogIzg4ODtcbn1cblxuLmRldGFpbC1saW5lIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5kZXRhaWwtbGluZS1sYWJlbCB7XG4gIHBhZGRpbmc6IDhweCAwIDhweCAzNXB4O1xuICB3aWR0aDogMTA1cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjNjY2O1xufVxuLmRldGFpbC1saW5lLWxhYmVsLXNpbmdsZSB7XG4gIHBhZGRpbmc6IDhweCAwIDhweCAxNXB4O1xuICB3aWR0aDogODVweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICM2NjY7XG59XG4uZGV0YWlsLWxpbmUtY29uIHtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogOHB4IDE1cHggOHB4IDA7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjMzMzO1xufVxuLmRldGFpbC1saW5lLWFyZWEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xuICBjb2xvcjogIzhjOGM4YztcbiAgcGFkZGluZzogMnB4O1xufVxuLmRldGFpbC1saW5lLXNldHZhbCB7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIGNvbG9yOiAjOTk5O1xufVxuXG4ubmVlZC1yZXBhaXIge1xuICBoZWlnaHQ6IDQ2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBwYWRkaW5nOiAxNHB4IDE1cHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICM2NjY7XG59XG4ubmVlZC1yZXBhaXIgLmljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIG1hcmdpbi1yaWdodDogN3B4O1xufVxuLmMtbGFiZWwge1xuICBjb2xvcjogIzk5OTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMTdweDtcbiAgcGFkZGluZzogMTRweCAxNXB4IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcbn1cblxuLy8g56Kz5YyW5rex5bqmXG4udmFsdWUtY2FyYm9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDI4cHg7XG4gIHdpZHRoOiAzOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjI5LCAyMjksIDIyOSk7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogIzMzMztcbn1cblxuLy8g56Kz5YyW5rex5bqm55qE5pi+56S6XG4uZGV0YWlsLWxpbmUtY2FyYm9uLXZhbHVlIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW46IDRweCAwIDEwcHggMDtcbiAgY29sb3I6ICM5OTk7XG59XG48L3N0eWxlPlxuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGlhbG9nLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWU0NjUzMTljJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiY2I1NWY1MzJcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCI8dGVtcGxhdGU+XG4gIDxkaXZcbiAgICB2LWlmPVwic2hvd1wiXG4gICAgY2xhc3M9XCJtYWluXCJcbiAgICA6c3R5bGU9XCJ7IHRvcDogY29udGVudFRvcCArICdweCcgfVwiXG4gID5cbiAgICA8aSBjbGFzcz1cImFycm93XCIgLz5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cImNvbnRlbnRcIlxuICAgICAgQGNsaWNrLnNlbGY9XCJjbG9zZVBvcHVwXCJcbiAgICA+XG4gICAgICA8dHJhbnNpdGlvblxuICAgICAgICBuYW1lPVwic2xpZGUtZG93blwiXG4gICAgICAgIEBlbnRlcj1cImlzT3BlbmluZyA9IHRydWVcIlxuICAgICAgICBAYWZ0ZXItZW50ZXI9XCJpc09wZW5pbmcgPSBmYWxzZVwiXG4gICAgICAgIEBsZWF2ZT1cImlzQ2xvc2luZyA9IHRydWVcIlxuICAgICAgICBAYWZ0ZXItbGVhdmU9XCJhZnRlckNsb3NlXCJcbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHYtaWY9XCJzaG93TGlzdFwiXG4gICAgICAgICAgY2xhc3M9XCJib3hcIlxuICAgICAgICAgIDpzdHlsZT1cInsnaGVpZ2h0JzogbGlzdEhlaWdodCArICdweCd9XCJcbiAgICAgICAgPlxuICAgICAgICAgIDwhLS0g5YaF5a65IC0tPlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIHYtZm9yPVwiKGl0ZW0sIGl0ZW1JbmRleCkgaW4gZGF0YVwiXG4gICAgICAgICAgICA6a2V5PVwiaXRlbUluZGV4XCJcbiAgICAgICAgICAgIDpjbGFzcz1cInsnYm9yZGVyLWJvdHRvbSc6IGRhdGEubGVuZ3RoID4gMSwgJ2JveC1zaW5nbGUnOiBkYXRhLmxlbmd0aCA9PT0gMX1cIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDwhLS0g5qOA5p+l6aG55ZCN56ewIC0tPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzcz1cImRldGFpbC1oZFwiXG4gICAgICAgICAgICAgIDpjbGFzcz1cInsnYm9yZGVyLWJvdHRvbSc6IGRhdGEubGVuZ3RoIDw9IDEsICdkZXRhaWwtaGQtc2luZ2xlJzogZGF0YS5sZW5ndGggPD0gMX1cIlxuICAgICAgICAgICAgICBAY2xpY2s9XCJ0b2dnbGVJdGVtKGl0ZW0pXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlcbiAgICAgICAgICAgICAgICB2LWlmPVwiZGF0YS5sZW5ndGggPiAxXCJcbiAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7J2RldGFpbC1hcnJvdy1yaWdodCc6ICFpdGVtLmlzT3BlbiwgJ2RldGFpbC1hcnJvdy1kb3duJzogaXRlbS5pc09wZW59XCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbC10aXRsZVwiPnt7aXRlbS5uYW1lfX08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPCEtLSDmo4Dmn6XpobnlkI3np7AgZW5kIC0tPlxuXG4gICAgICAgICAgICA8IS0tIOajgOafpeaMh+W8leWGheWuuSAtLT5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgdi1pZj1cImRhdGEubGVuZ3RoIDw9IDEgfHwgaXRlbS5pc09wZW5cIlxuICAgICAgICAgICAgICBjbGFzcz1cImRldGFpbC1iZFwiXG4gICAgICAgICAgICAgIDpjbGFzcz1cInsnZGV0YWlsLWJkLXNpbmdsZSc6IGRhdGEubGVuZ3RoIDw9IDF9XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHBcbiAgICAgICAgICAgICAgICB2LWZvcj1cIih0ZXh0LCB0ZXh0SW5kZXgpIGluIGl0ZW0udGV4dEFyclwiXG4gICAgICAgICAgICAgICAgOmtleT1cInRleHRJbmRleFwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LWxpbmVcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3t0ZXh0fX1cbiAgICAgICAgICAgICAgPC9wPlxuXG4gICAgICAgICAgICAgIDxpdGVtLWltZy1saXN0XG4gICAgICAgICAgICAgICAgdi1tb2RlbD1cIml0ZW0uY29udGVudEltYWdlXCJcbiAgICAgICAgICAgICAgICA6ZWRpdGFibGVkPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgIDxsb2FkaW5nLXN0YXR1c1xuICAgICAgICAgICAgICAgIDppcy1lbXB0eT1cIiFpdGVtLnRleHRBcnIubGVuZ3RoICYmICFpdGVtLmNvbnRlbnRJbWFnZS5sZW5ndGhcIlxuICAgICAgICAgICAgICAgIGVtcHR5LXRleHQ9XCJQQ+err+acquiuvue9ruajgOafpeaMh+W8lVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwhLS0g5qOA5p+l5oyH5byV5YaF5a65IGVuZCAtLT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8IS0tIOWGheWuuSBlbmQgLS0+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC90cmFuc2l0aW9uPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgSXRlbUltZ0xpc3QgZnJvbSAnQHNyYy9jb21wb25lbnRzL2l0ZW0taW1nLWxpc3QnO1xuXG5pbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJ0Bjb21tb24vZXZlbnQtYnVzJztcbmltcG9ydCBDb21tb25DaGVja0l0ZW1TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY2hlY2staXRlbS1zZXJ2aWNlLmpzJztcbmltcG9ydCBQb3B1cE1peGluIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAtbWl4aW4nO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdDaGVja0d1aWRlRGV0YWlsRHJvcCcsXG4gIGNvbXBvbmVudHM6IHsgSXRlbUltZ0xpc3QgfSxcbiAgbWl4aW5zOiBbUG9wdXBNaXhpbl0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgc2hvd0xpc3Q6IGZhbHNlLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGlzT3BlbmluZzogZmFsc2UsXG4gICAgICBpc0Nsb3Npbmc6IGZhbHNlLFxuXG4gICAgICAvLyDkuIvmi4nmoYbot53nprvpobbpg6jnmoTot53nprtcbiAgICAgIGNvbnRlbnRUb3A6IDY0LFxuICAgICAgLy8g5YiX6KGo6auY5bqmXG4gICAgICBsaXN0SGVpZ2h0OiA1MTAsXG5cbiAgICAgIG1vZHVsZTogJycsXG4gICAgICBpdGVtSWRzOiBbXSxcbiAgICAgIGRhdGE6IFtdLFxuICAgICAgdGFyZ2V0OiAnJyxcbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIHNob3codikge1xuICAgICAgaWYgKHYpIHtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIHRoaXMuc2hvd0xpc3QgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxuICBjcmVhdGVkKCkge1xuICAgIEV2ZW50QnVzLiRvbigncm91dGVyQmVmb3JlRWFjaCcsIHRoaXMuY2xvc2VQb3B1cCk7XG4gICAgRXZlbnRCdXMuJG9uKCdwYWdlQ29udGVudENsaWNrJywgdGhpcy5vbkNsaWNrT3RoZXIpO1xuICB9LFxuICBkZXN0cm95ZWQoKSB7XG4gICAgRXZlbnRCdXMuJG9mZigncm91dGVyQmVmb3JlRWFjaCcsIHRoaXMuY2xvc2VQb3B1cCk7XG4gICAgRXZlbnRCdXMuJG9mZigncGFnZUNvbnRlbnRDbGljaycsIHRoaXMub25DbGlja090aGVyKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9wZW5Qb3B1cChwYXJhbXMpIHtcbiAgICAgIHRoaXMuc2hvdyA9IHRydWU7XG4gICAgICB0aGlzLiRlbWl0KCdvcGVuJyk7XG5cbiAgICAgIHRoaXMubW9kdWxlID0gcGFyYW1zLm1vZHVsZTtcbiAgICAgIHRoaXMuaXRlbUlkcyA9IHBhcmFtcy5pdGVtSWRzO1xuICAgICAgdGhpcy5vcHRpb25zID0gcGFyYW1zLm9wdGlvbnM7XG5cbiAgICAgIC8vIOiuoeeul+mhtumDqOi3neemu1xuICAgICAgY29uc3QgJGhlYWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGF5b3V0LW1haW4gLmxheW91dC1oZWFkZXInKTtcbiAgICAgIHRoaXMuY29udGVudFRvcCA9ICRoZWFkLm9mZnNldEhlaWdodDtcblxuICAgICAgLy8g6K6h566X6aG26YOo6Led56a7XG4gICAgICBpZiAocGFyYW1zLmVsKSB7XG4gICAgICAgIGxldCBib3VuZGluZyA9IHBhcmFtcy5lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgdGhpcy5jb250ZW50VG9wID0gYm91bmRpbmcuYm90dG9tO1xuICAgICAgfVxuICAgICAgdGhpcy50YXJnZXQgPSBwYXJhbXMuZWw7XG5cbiAgICAgIHRoaXMubGlzdEhlaWdodCA9IF8ubWluQnkoW3dpbmRvdy5pbm5lckhlaWdodCAtIHRoaXMuY29udGVudFRvcCAtIDUwLCA1MTBdKTtcblxuICAgICAgdGhpcy5nZXREYXRhKCk7XG4gICAgfSxcbiAgICAvLyDlhbPpl63lvLnnqpdcbiAgICBjbG9zZVBvcHVwKCkge1xuICAgICAgaWYgKHRoaXMuaXNPcGVuaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zaG93TGlzdCA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTtcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICB0aGlzLiRvbignYWZ0ZXJDbG9zZVBvcHVwJywgcmVzb2x2ZSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGFmdGVyQ2xvc2UoKSB7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcblxuICAgICAgdGhpcy5pc0Nsb3NpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2FmdGVyQ2xvc2VQb3B1cCcpO1xuICAgIH0sXG4gICAgLy8g54K55Ye75YW25LuW5Zyw5pa577yM5YWz6Zet5by556qXXG4gICAgb25DbGlja090aGVyKGUpIHtcbiAgICAgIGlmICghZSB8fCAhZS50YXJnZXQgfHwgZS50YXJnZXQgPT09IHRoaXMudGFyZ2V0IHx8ICF0aGlzLnNob3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XG4gICAgfSxcblxuICAgIGdldERhdGEoKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gXy5tYXAodGhpcy5vcHRpb25zLCBpdGVtID0+IHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIGlzT3BlbjogZmFsc2UsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldE1lYXN1cmVDaGVja0l0ZW0odGhpcy5pdGVtSWRzKVxuICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICB0aGlzLmRhdGEgPSBfLm1hcChyZXMsIGl0ZW0gPT4ge1xuICAgICAgICAgICAgICBsZXQgY29udGVudCA9IGl0ZW0uY29udGVudCA/IGl0ZW0uY29udGVudC50cmltKCkgOiAnJztcbiAgICAgICAgICAgICAgbGV0IGNvbnRlbnRBcnIgPSBjb250ZW50ID8gY29udGVudC5zcGxpdCgnXFxuJykgOiBbXTtcbiAgICAgICAgICAgICAgbGV0IGNvbnRlbnRJbWFnZSA9IGl0ZW0uY29udGVudF9pbWFnZSA/IEpTT04ucGFyc2UoaXRlbS5jb250ZW50X2ltYWdlKSA6IFtdO1xuICAgICAgICAgICAgICBsZXQgdGV4dEFyciA9IF8uZmlsdGVyKGNvbnRlbnRBcnIsIHYgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAhLzxpbWcoW1xcc1xcU10qKT4vZ20udGVzdCh2KTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgXy5lYWNoKGNvbnRlbnRJbWFnZSwgdiA9PiB7XG4gICAgICAgICAgICAgICAgdi51cmwgPSB2LnVybC5zcGxpdCgnQCcpWzBdO1xuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiBpdGVtLmlkLFxuICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0uZnVsbF9uYW1lLFxuICAgICAgICAgICAgICAgIHRleHRBcnIsXG4gICAgICAgICAgICAgICAgY29udGVudEltYWdlLFxuICAgICAgICAgICAgICAgIGlzT3BlbjogZmFsc2UsXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgdG9nZ2xlSXRlbShpdGVtKSB7XG4gICAgICBpZiAodGhpcy5kYXRhLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgdGhpcy4kc2V0KGl0ZW0sICdpc09wZW4nLCAhaXRlbS5pc09wZW4pO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLm1haW4ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBib3R0b206IDA7XG59XG4uYXJyb3cge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTdweDtcbiAgcmlnaHQ6IDE4cHg7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIGJvcmRlci1ib3R0b206IDdweCBzb2xpZCB3aGl0ZTtcbiAgYm9yZGVyLXJpZ2h0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1sZWZ0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG4uY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuLmJveC1zaW5nbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4OiAxO1xufVxuXG4uZGV0YWlsLWhkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZzogNnB4IDE1cHg7XG59XG4uZGV0YWlsLWFycm93LXJpZ2h0IHtcbiAgd2lkdGg6IDEzcHg7XG4gIGhlaWdodDogMzRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5kZXRhaWwtYXJyb3ctcmlnaHQ6OmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgbWFyZ2luLXRvcDogMTJweDtcbiAgYm9yZGVyOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2M4YzhjODtcbn1cbi5kZXRhaWwtYXJyb3ctZG93biB7XG4gIHdpZHRoOiAxM3B4O1xuICBoZWlnaHQ6IDM0cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uZGV0YWlsLWFycm93LWRvd246OmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgYm9yZGVyOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci10b3A6IDVweCBzb2xpZCAjYzhjOGM4O1xufVxuLmRldGFpbC10aXRsZSB7XG4gIGZsZXg6IDE7XG4gIGxpbmUtaGVpZ2h0OiAzNHB4O1xuICBjb2xvcjogIzExMTtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uZGV0YWlsLWJkIHtcbiAgcGFkZGluZzogOHB4IDE1cHggOHB4IDM1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG59XG4udGV4dC1saW5lIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzY2NjtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5kZXRhaWwtaGQtc2luZ2xlIHtcbiAgcGFkZGluZzogNnB4IDA7XG4gIG1hcmdpbjogMCAxNXB4O1xufVxuLmRldGFpbC1iZC1zaW5nbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4OiAxO1xuICBwYWRkaW5nOiA4cHggMTVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG48L3N0eWxlPlxuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaXRlbS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02OTIwZGRlNyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjIxOTJjZDAwXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3Zhbi1hY3Rpb24tc2hlZXQnLHtzdGF0aWNDbGFzczpcIm1lYXN1cmUtYy1kXCIsYXR0cnM6e1widGl0bGVcIjpcIueis+WMlua3seW6pihtbSnpgInmi6lcIixcImdldC1jb250YWluZXJcIjpcImJvZHlcIn0sb246e1wiY2xvc2VcIjpfdm0uY2xvc2V9LG1vZGVsOnt2YWx1ZTooX3ZtLmNhcmJvblNob3cpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uY2FyYm9uU2hvdz0kJHZ9LGV4cHJlc3Npb246XCJjYXJib25TaG93XCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibWNkLWNvbnRlbnRcIn0sX3ZtLl9sKChfdm0uY2FyYm9uTGlzdCksZnVuY3Rpb24oaXRlbSxpbmRleCl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6aW5kZXgsc3RhdGljQ2xhc3M6XCJtY2QtbGlzdFwiLGNsYXNzOnsgYWN0aXZlOiBpdGVtID09PSBfdm0udmFsdWUgfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNlbGVjdChpdGVtKX19fSxbX3ZtLl92KFwiXFxuICAgICAgXCIrX3ZtLl9zKGl0ZW0udG9GaXhlZCgxKSkrXCJcXG4gICAgXCIpXSl9KSldKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XG4gIDx2YW4tYWN0aW9uLXNoZWV0XG4gICAgdi1tb2RlbD1cImNhcmJvblNob3dcIlxuICAgIHRpdGxlPVwi56Kz5YyW5rex5bqmKG1tKemAieaLqVwiXG4gICAgY2xhc3M9XCJtZWFzdXJlLWMtZFwiXG4gICAgZ2V0LWNvbnRhaW5lcj1cImJvZHlcIlxuICAgIEBjbG9zZT1cImNsb3NlXCJcbiAgPlxuICAgIDxkaXYgY2xhc3M9XCJtY2QtY29udGVudFwiPlxuICAgICAgPGRpdlxuICAgICAgICB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gY2FyYm9uTGlzdFwiXG4gICAgICAgIDprZXk9XCJpbmRleFwiXG4gICAgICAgIGNsYXNzPVwibWNkLWxpc3RcIlxuICAgICAgICA6Y2xhc3M9XCJ7IGFjdGl2ZTogaXRlbSA9PT0gdmFsdWUgfVwiXG4gICAgICAgIEBjbGljaz1cInNlbGVjdChpdGVtKVwiXG4gICAgICA+XG4gICAgICAgIHt7IGl0ZW0udG9GaXhlZCgxKSB9fVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvdmFuLWFjdGlvbi1zaGVldD5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgY29uY3JldGVSZWZlcmVuY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9tZWFzdXJlLWNvbmNyZXRlLXJlZmVyZW5jZSc7XG5pbXBvcnQgeyBhZGRCYWNrRXZlbnRRdWV1ZSwgY2xlYXJCYWNrQnV0dG9uRXZlbnQgfSBmcm9tICdAc3JjL2NvbW1vbi9iYWNrYnV0dG9uJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnTWVhc3VyZUNhcmJvbkRpYWxvZycsXG4gIHByb3BzOiB7XG4gICAgLy8g6YCJ5Lit55qE5YC8XG4gICAgdmFsdWU6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDAsXG4gICAgfSxcblxuICAgIC8vIOaYvuekuumakOiXj1xuICAgIHNob3c6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjYXJib25TaG93OiB0aGlzLnNob3csXG4gICAgICBjYXJib25MaXN0OiBjb25jcmV0ZVJlZmVyZW5jZS5jYXJib25Db25maWcubGlzdCwgLy8g56Kz5YyW5rex5bqm55qE5YiX6KGoXG4gICAgICBiYWNrQnV0dG9uRXZlbnQ6IG51bGwsIC8vIOeJqeeQhumUrlxuICAgIH07XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBzaG93KHYpIHtcbiAgICAgIHRoaXMuY2FyYm9uU2hvdyA9IHY7XG4gICAgICB0aGlzLmluaXQoKTtcbiAgICB9LFxuICB9LFxuXG4gIGFjdGl2YXRlZCgpIHtcbiAgICB0aGlzLmNhcmJvblNob3cgPSB0aGlzLnNob3c7XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGluaXQoKSB7XG4gICAgICAvLyDms6jlhaXniannkIbov5Tlm57plK7kuovku7ZcbiAgICAgIGlmICghdGhpcy5iYWNrQnV0dG9uRXZlbnQpIHtcbiAgICAgICAgdGhpcy5iYWNrQnV0dG9uRXZlbnQgPSBhZGRCYWNrRXZlbnRRdWV1ZSh0aGlzLmNsb3NlKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIOmAieS4rVxuICAgIHNlbGVjdCh2YWx1ZSkge1xuICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0JywgdmFsdWUpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0sXG5cbiAgICAvLyDlhbPpl61cbiAgICBjbG9zZSgpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgICB0aGlzLmNhcmJvblNob3cgPSBmYWxzZTtcbiAgICAgIC8vIOa4hemZpOeJqeeQhui/lOWbnumUruS6i+S7tlxuICAgICAgaWYgKHRoaXMuYmFja0J1dHRvbkV2ZW50KSB7XG4gICAgICAgIGNsZWFyQmFja0J1dHRvbkV2ZW50KHRoaXMuYmFja0J1dHRvbkV2ZW50KTtcbiAgICAgICAgdGhpcy5iYWNrQnV0dG9uRXZlbnQgPSBudWxsO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5tZWFzdXJlLWMtZCB7XG4gIC8vIOagh+mimFxuICAudmFuLWFjdGlvbi1zaGVldF9faGVhZGVyIHtcbiAgICBjb2xvcjogIzMzMztcbiAgfVxuICAvLyDlpJblsYJcbiAgLm1jZC1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAvLyDnorPljJbmt7HluqZcbiAgLm1jZC1saXN0IHtcbiAgICB3aWR0aDogODBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNWU1ZTU7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIG1hcmdpbjogMCAwIDEwcHggMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIH1cblxuICAubWNkLWxpc3QuYWN0aXZlIHtcbiAgICBjb2xvcjogIzQyNzVlODtcbiAgICBib3JkZXItY29sb3I6ICM0Mjc1ZTg7XG4gIH1cbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kOGY2MTIxMCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1kOGY2MTIxMCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJkOGY2MTIxMFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MTk2ZTdhN2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pdGVtLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY5MjBkZGU3Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiB2LWlmPVwic2hvd1wiIGNsYXNzPVwiY29udGVudFwiIDpzdHlsZT1cInsgdG9wOiBjb250ZW50VG9wICsgJ3B4JyB9XCIgQGNsaWNrLnNlbGY9XCJjbG9zZVBvcHVwXCI+XG4gICAgPHRyYW5zaXRpb25cbiAgICAgIG5hbWU9XCJzbGlkZS1kb3duXCJcbiAgICAgIEBlbnRlcj1cImlzT3BlbmluZyA9IHRydWVcIlxuICAgICAgQGFmdGVyLWVudGVyPVwiaXNPcGVuaW5nID0gZmFsc2VcIlxuICAgICAgQGxlYXZlPVwiaXNDbG9zaW5nID0gdHJ1ZVwiXG4gICAgICBAYWZ0ZXItbGVhdmU9XCJhZnRlckNsb3NlXCJcbiAgICA+XG4gICAgICA8ZGl2IHYtaWY9XCJzaG93TGlzdFwiIGNsYXNzPVwiYm94XCIgOnN0eWxlPVwieyBoZWlnaHQ6IGxpc3RIZWlnaHQgKyAncHgnIH1cIj5cbiAgICAgICAgPGl0ZW0gY2xhc3M9XCJpdGVtLWhkXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tdGV4dCBuYW1lLXBhcmVudFwiPjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLWluZm9cIj7lkIjmoLznjoc8L2Rpdj5cbiAgICAgICAgICA8aSBjbGFzcz1cImljb24tZW1wdHlcIiAvPlxuICAgICAgICA8L2l0ZW0+XG5cbiAgICAgICAgPGRpdiB2LWlmPVwib3B0aW9ucy5sZW5ndGhcIiByZWY9XCJsaXN0LXdyYXBcIiBjbGFzcz1cImxpc3Qtd3JhcFwiPlxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gb3B0aW9uc1wiPlxuICAgICAgICAgICAgPCEtLSDkuIDnuqfmo4Dmn6XpobkgLS0+XG4gICAgICAgICAgICA8aXRlbSA6a2V5PVwiaW5kZXhcIiBib3JkZXI9XCJib3R0b21cIiBAY2xpY2s9XCJ0b2dnbGVJdGVtKGl0ZW0pXCI+XG4gICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJpdGVtLXRyaWFuZ2xlXCJcbiAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7ICd0cmlhbmdsZS1yaWdodCc6ICFvcGVuU2V0W2l0ZW0uaWRdLCAndHJpYW5nbGUtZG93bic6IG9wZW5TZXRbaXRlbS5pZF0gfVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHQgbmFtZS1wYXJlbnRcIj57eyBpdGVtLm5hbWUgfX08L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0taW5mb1wiPnt7IHBhc3NyYXRlRGF0YVtpdGVtLmlkXSB9fTwvZGl2PlxuICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tZW1wdHlcIiAvPlxuICAgICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgICAgPCEtLSDkuIDnuqfmo4Dmn6XpobkgZW5kIC0tPlxuXG4gICAgICAgICAgICA8IS0tIOS6jOe6p+ajgOafpemhuSAtLT5cbiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiaXRlbS5jaGlsZHJlbiAmJiBpdGVtLmNoaWxkcmVuLmxlbmd0aCAmJiBvcGVuU2V0W2l0ZW0uaWRdXCI+XG4gICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbSwgc3ViaW5kZXgpIGluIGl0ZW0uY2hpbGRyZW5cIlxuICAgICAgICAgICAgICAgIDprZXk9XCInc3ViIC0nICsgaW5kZXggKyAnLScgKyBzdWJpbmRleFwiXG4gICAgICAgICAgICAgICAgOmNsYXNzPVwie1xuICAgICAgICAgICAgICAgICAgJ2NoZWNraXRlbS1zZWxlY3RlZCc6XG4gICAgICAgICAgICAgICAgICAgIGdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnc2VsZWN0ZWQnIHx8IGdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnY3VycmVudCcsXG4gICAgICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAgICAgYm9yZGVyPVwiYm90dG9tXCJcbiAgICAgICAgICAgICAgICBAY2xpY2s9XCJjbGlja0l0ZW0oc3ViaXRlbSlcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tdGV4dCBuYW1lLWNoaWxkXCI+e3sgc3ViaXRlbS5uYW1lIH19PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0taW5mb1wiIDpjbGFzcz1cInsgJ2NvbG9yLW9yYW5nZSc6IGdldEl0ZW1JbmZvKHN1Yml0ZW0pID09PSAn5pqC5a2YJyB9XCI+XG4gICAgICAgICAgICAgICAgICB7eyBnZXRJdGVtSW5mbyhzdWJpdGVtKSB9fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0taWNvblwiPlxuICAgICAgICAgICAgICAgICAgPGljb25cbiAgICAgICAgICAgICAgICAgICAgdi1pZj1cImdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnYmxhbmsnIHx8IGdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnc2luZ2xlJ1wiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDxpY29uIHYtaWY9XCJnZXRJdGVtVHlwZShzdWJpdGVtKSA9PT0gJ2Fycm93J1wiIG5hbWU9XCJhcnJvdy1yaWdodFwiIC8+XG4gICAgICAgICAgICAgICAgICA8aWNvbiB2LWlmPVwiZ2V0SXRlbVR5cGUoc3ViaXRlbSkgPT09ICdjdXJyZW50J1wiIG5hbWU9XCJxdWFsaWZpZWRcIiAvPlxuICAgICAgICAgICAgICAgICAgPGljb24gdi1pZj1cImdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnY2hlY2tib3gnXCIgbmFtZT1cImNoZWNrYm94XCIgLz5cbiAgICAgICAgICAgICAgICAgIDxpY29uIHYtaWY9XCJnZXRJdGVtVHlwZShzdWJpdGVtKSA9PT0gJ3NlbGVjdGVkJ1wiIG5hbWU9XCJjaGVja2JveC1jaGVja2VkXCIgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwhLS0g5LqM57qn5qOA5p+l6aG5IGVuZCAtLT5cbiAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8YXBwLWJ1dHRvblxuICAgICAgICAgIHYtc2hvdz1cIm11bHRpXCJcbiAgICAgICAgICBjbGFzcz1cImJ0bi1jb25maXJtXCJcbiAgICAgICAgICA6Y2xhc3M9XCJ7ICdidG4tZGlzYWJsZWQnOiAhYWxsb3dDb25maXJtIH1cIlxuICAgICAgICAgIEBjbGljaz1cImNvbmZpcm1cIlxuICAgICAgICAgIG5hbWU9XCLnoa7lrppcIlxuICAgICAgICAvPlxuXG4gICAgICAgIDxsb2FkaW5nLXN0YXR1c1xuICAgICAgICAgIHYtaWY9XCIhb3B0aW9ucy5sZW5ndGhcIlxuICAgICAgICAgIDppcy1lbXB0eT1cInRydWVcIlxuICAgICAgICAgIHR5cGU9XCJzZWFyY2hcIlxuICAgICAgICAgIGVtcHR5LXRleHQ9XCLmnKrmkJzntKLliLDnm7jlhbPlhoXlrrlcIlxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC90cmFuc2l0aW9uPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5cbmltcG9ydCAkcSBmcm9tICdAc3RhdGljL2xpYi9wcm9taXNlJztcbmltcG9ydCBJdGVtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtJztcbmltcG9ydCBBcHBCdXR0b24gZnJvbSAnQHNyYy9jb21wb25lbnRzL2FwcC1idXR0b24vaW5kZXgudnVlJztcbmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnQGNvbW1vbi9ldmVudC1idXMnO1xuaW1wb3J0IENoZWNrUXVhbGl0eU1lYXN1cmVSZXBvc2l0b3J5IGZyb20gJ0BzcmMvcmVwb3NpdG9yaWVzL2NoZWNrLXF1YWxpdHktbWVhc3VyZS1yZXBvc2l0b3J5JztcbmltcG9ydCBsb2NhbFN0b3JhZ2UgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbG9jYWxTdG9yYWdlJztcbmltcG9ydCBQb3B1cCBmcm9tICdAc3JjL3V0aWxzL3BvcHVwJztcbmltcG9ydCBQb3B1cE1peGluIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAtbWl4aW4nO1xuXG5sZXQgX3BsYWNlO1xubGV0IF9jYWxsYmFjaztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnRHJvcFNlbGVjdENoZWNraXRlbURpYWxvZycsXG4gIGNvbXBvbmVudHM6IHsgSXRlbSwgQXBwQnV0dG9uIH0sXG4gIG1peGluczogW1BvcHVwTWl4aW5dLFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIHNob3dMaXN0OiBmYWxzZSxcbiAgICAgIGlzT3BlbmluZzogZmFsc2UsXG4gICAgICBpc0Nsb3Npbmc6IGZhbHNlLFxuXG4gICAgICAvLyDkuIvmi4nmoYbot53nprvpobbpg6jnmoTot53nprtcbiAgICAgIGNvbnRlbnRUb3A6IDY0LFxuICAgICAgLy8g5YiX6KGo6auY5bqmXG4gICAgICBsaXN0SGVpZ2h0OiA1MTAsXG5cbiAgICAgIC8vIOaooeW8j++8jOaMh+Wunua1i+mXrumimOivpuaDheeahOeKtuaAge+8jGVkaXQo57yW6L6RKSDlkowgdmlldyjmn6XnnIspXG4gICAgICBtb2RlOiAnJyxcblxuICAgICAgb3B0aW9uczogW10sXG4gICAgICAvKiDlt7LpgInmlbDmja46IFtdICovXG4gICAgICBzZWxlY3RlZFNldDogW10sXG4gICAgICBjdXJyZW50U2V0OiBbXSxcbiAgICAgIG9wZW5TZXQ6IHt9LFxuICAgICAgcGFzc3JhdGVEYXRhOiB7fSxcblxuICAgICAgLy8g55So5LqO6K6w5b2V5b2T5YmN5by556qX5piv5ZOq5Liq57uE5Lu25omT5byA55qE77yM5Lya5o6l5Y+X5Lyg6L+H5p2l55qEIF91aWRcbiAgICAgIGNvbXBvbmVudFVpZDogJycsXG5cbiAgICAgIG11bHRpOiBmYWxzZSxcblxuICAgICAgdGFyZ2V0OiAnJyxcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGFsbG93Q29uZmlybSgpIHtcbiAgICAgIHJldHVybiAhXy5pc0VtcHR5KHRoaXMuc2VsZWN0ZWRTZXQpO1xuICAgIH0sXG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgc2hvdyh2KSB7XG4gICAgICBpZiAodikge1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zaG93TGlzdCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2hvd0xpc3Qodikge1xuICAgICAgaWYgKHYpIHtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuJHJlZnNbJ2xpc3Qtd3JhcCddKSB7XG4gICAgICAgICAgICAgIGxldCBzZWxlY3RlZERvbSA9IHRoaXMuJHJlZnNbJ2xpc3Qtd3JhcCddLnF1ZXJ5U2VsZWN0b3IoJy5jaGVja2l0ZW0tc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkRG9tKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWREb20uc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCh0cnVlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIDQwMCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgRXZlbnRCdXMuJG9uKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICBFdmVudEJ1cy4kb24oJ3BhZ2VDb250ZW50Q2xpY2snLCB0aGlzLm9uQ2xpY2tPdGhlcik7XG4gIH0sXG4gIGRlc3Ryb3llZCgpIHtcbiAgICBFdmVudEJ1cy4kb2ZmKCdyb3V0ZXJCZWZvcmVFYWNoJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICBFdmVudEJ1cy4kb2ZmKCdwYWdlQ29udGVudENsaWNrJywgdGhpcy5vbkNsaWNrT3RoZXIpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLyog5omT5byA5by556qX77yMcGFyYW1z5YaF5a6577yaXG4gICAgICogb3B0aW9uczogQXJyYXkg5aSH6YCJ6aG5XG4gICAgICogc2VsZWN0ZWQ6IEFycmF5IOW3sumAiemhuVxuICAgICAqIGhhc1NlYXJjaDog5piv5ZCm5pyJ5pCc57Si5Yqf6IO9XG4gICAgICogZWw6IERvbSDnm67moIflhYPntKDvvIznlKjkuo7orqHnrpflvLnnqpfot53nprvpobbpg6jnmoTpq5jluqZcbiAgICAgKiBoYXNCZ0NvbG9yOiBCb29sZWFuIOWxgue6p+WIl+ihqOaYr+WQpuacieiDjOaZr+iJslxuICAgICAqIGVtcHR5VGV4dDogQXJyYXkg5ZCE5bGC57qn55qE5Li656m65o+Q56S66K+tXG4gICAgICovXG4gICAgb3BlblBvcHVwKHBhcmFtcykge1xuICAgICAgLy8g5aaC5p6c5piv5omT5byA55qE77yM5YiZ5YWz6ZetXG4gICAgICBpZiAodGhpcy5zaG93KSB7XG4gICAgICAgIGlmIChwYXJhbXMuY29tcG9uZW50VWlkID09PSB0aGlzLmNvbXBvbmVudFVpZCkge1xuICAgICAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDlhYjlhbPpl63lvZPliY3lvLnnqpfvvIzlho3miZPlvIBcbiAgICAgICAgICB0aGlzLmNsb3NlUG9wdXAoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMub3BlblBvcHVwKHBhcmFtcyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29tcG9uZW50VWlkID0gcGFyYW1zLmNvbXBvbmVudFVpZCB8fCAnJztcblxuICAgICAgLy8g6K6h566X6aG26YOo6Led56a7XG4gICAgICBjb25zdCAkaGVhZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sYXlvdXQtbWFpbiAubGF5b3V0LWhlYWRlcicpO1xuICAgICAgdGhpcy5jb250ZW50VG9wID0gJGhlYWQub2Zmc2V0SGVpZ2h0O1xuXG4gICAgICAvLyDorqHnrpfpobbpg6jot53nprtcbiAgICAgIGlmIChwYXJhbXMuZWwpIHtcbiAgICAgICAgbGV0IGJvdW5kaW5nID0gcGFyYW1zLmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICB0aGlzLmNvbnRlbnRUb3AgPSBib3VuZGluZy5ib3R0b207XG4gICAgICB9XG4gICAgICB0aGlzLnRhcmdldCA9IHBhcmFtcy5lbDtcblxuICAgICAgLy8g6K6h566X5rua5Yqo5Yy65Z+f6auY5bqmXG4gICAgICB0aGlzLmxpc3RIZWlnaHQgPSBfLm1pbkJ5KFt3aW5kb3cuaW5uZXJIZWlnaHQgLSB0aGlzLmNvbnRlbnRUb3AgLSA1MCwgNTEwXSk7XG5cbiAgICAgIHRoaXMub3B0aW9ucyA9IHBhcmFtcy5vcHRpb25zO1xuICAgICAgdGhpcy5wcm9jZXNzTW9kZSA9IHBhcmFtcy5wcm9jZXNzTW9kZTtcbiAgICAgIHRoaXMubW9kZSA9IHBhcmFtcy5tb2RlO1xuICAgICAgdGhpcy5tdWx0aSA9IHBhcmFtcy5tdWx0aTtcblxuICAgICAgX3BsYWNlID0gcGFyYW1zLnBsYWNlO1xuICAgICAgX2NhbGxiYWNrID0gcGFyYW1zLmNhbGxiYWNrO1xuXG4gICAgICAvLyDor7vlj5bmo4Dmn6XpobnnmoTmlLbnvKnnirbmgIHnvJPlrZhcbiAgICAgIGlmIChfLmlzRW1wdHkocGFyYW1zLm9wZW5TdGF0dXMpKSB7XG4gICAgICAgIGxldCBtZW1vcnkgPSBsb2NhbFN0b3JhZ2UuZ2V0T2JqZWN0KCdtZWFzdXJlUmVwb3J0Um9vbU1lbW9yeScpIHx8IHt9O1xuICAgICAgICB0aGlzLm9wZW5TZXQgPSBtZW1vcnk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9wZW5TZXQgPSBwYXJhbXMub3BlblN0YXR1cztcbiAgICAgIH1cbiAgICAgIC8vIOaJk+W8gOW9k+WJjeajgOafpemhueeahOeItue6p1xuICAgICAgbGV0IHNlbGVjdGVkUGFyZW50ID0gXy5maW5kKHBhcmFtcy5vcHRpb25zLCBpdGVtID0+IHtcbiAgICAgICAgcmV0dXJuIF8uc29tZShpdGVtLmNoaWxkcmVuLCBjaGlsZCA9PiB7XG4gICAgICAgICAgcmV0dXJuIF8uc29tZShwYXJhbXMuc2VsZWN0ZWQsIHsgaWQ6IGNoaWxkLmlkIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgaWYgKHNlbGVjdGVkUGFyZW50KSB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLm9wZW5TZXQsIHNlbGVjdGVkUGFyZW50LmlkLCB0cnVlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5nZXRQYXNzcmF0ZURhdGEocGFyYW1zLnBsYWNlLCBwYXJhbXMuYmF0Y2hJZCwgcGFyYW1zLnByb2Nlc3NNb2RlKTtcblxuICAgICAgdGhpcy5pbml0U2VsZWN0ZWRTZXQocGFyYW1zLm9wdGlvbnMsIHBhcmFtcy5zZWxlY3RlZCk7XG5cbiAgICAgIHRoaXMuc2hvdyA9IHRydWU7XG4gICAgICB0aGlzLiRlbWl0KCdvcGVuJyk7XG4gICAgfSxcbiAgICAvLyDlhbPpl63lvLnnqpdcbiAgICBjbG9zZVBvcHVwKCkge1xuICAgICAgaWYgKHRoaXMuaXNPcGVuaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zaG93TGlzdCA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTtcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICB0aGlzLiRvbignYWZ0ZXJDbG9zZVBvcHVwJywgcmVzb2x2ZSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGFmdGVyQ2xvc2UoKSB7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcblxuICAgICAgdGhpcy5pc0Nsb3NpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2FmdGVyQ2xvc2VQb3B1cCcpO1xuICAgIH0sXG4gICAgLy8g54K55Ye75YW25LuW5Zyw5pa577yM5YWz6Zet5by556qXXG4gICAgb25DbGlja090aGVyKGUpIHtcbiAgICAgIGlmICghZSB8fCAhZS50YXJnZXQgfHwgZS50YXJnZXQgPT09IHRoaXMudGFyZ2V0IHx8ICF0aGlzLnNob3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluWQiOagvOeOh1xuICAgIGdldFBhc3NyYXRlRGF0YShwbGFjZSwgYmF0Y2hJZCwgcHJvY2Vzc01vZGUpIHtcbiAgICAgIGxldCBidWlsZGluZ0lkID0gcGxhY2UuYnVpbGRpbmcgPyBwbGFjZS5idWlsZGluZy5pZCA6ICcnO1xuICAgICAgbGV0IHVuaXQgPSBwbGFjZS51bml0ID8gcGxhY2UudW5pdC5pZCA6ICcnO1xuICAgICAgbGV0IGZsb29yID0gcGxhY2UuZmxvb3IgPyBwbGFjZS5mbG9vci5pZCA6ICcnO1xuICAgICAgbGV0IHJvb21JZCA9IHBsYWNlLnJvb20gPyBwbGFjZS5yb29tLmlkIDogJyc7XG4gICAgICBsZXQgcHJvYmxlbVByb21pc2U7XG5cbiAgICAgIGlmIChwcm9jZXNzTW9kZSA9PT0gMSkge1xuICAgICAgICBwcm9ibGVtUHJvbWlzZSA9IENoZWNrUXVhbGl0eU1lYXN1cmVSZXBvc2l0b3J5LmdldFJvb21BbGxQcm9ibGVtcyhiYXRjaElkLCByb29tSWQpO1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzTW9kZSA9PT0gMiB8fCBwcm9jZXNzTW9kZSA9PT0gNSkge1xuICAgICAgICBwcm9ibGVtUHJvbWlzZSA9IENoZWNrUXVhbGl0eU1lYXN1cmVSZXBvc2l0b3J5LmdldEZsb29yQWxsUHJvYmxlbXMoXG4gICAgICAgICAgYmF0Y2hJZCxcbiAgICAgICAgICBidWlsZGluZ0lkLFxuICAgICAgICAgIHVuaXQsXG4gICAgICAgICAgZmxvb3IsXG4gICAgICAgICAgcHJvY2Vzc01vZGVcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSBpZiAocm9vbUlkKSB7XG4gICAgICAgIHByb2JsZW1Qcm9taXNlID0gQ2hlY2tRdWFsaXR5TWVhc3VyZVJlcG9zaXRvcnkuZ2V0Um9vbUFsbFByb2JsZW1zKGJhdGNoSWQsIHJvb21JZCk7XG4gICAgICB9IGVsc2UgaWYgKGZsb29yKSB7XG4gICAgICAgIHByb2JsZW1Qcm9taXNlID0gQ2hlY2tRdWFsaXR5TWVhc3VyZVJlcG9zaXRvcnkuZ2V0Rmxvb3JBbGxQcm9ibGVtcyhcbiAgICAgICAgICBiYXRjaElkLFxuICAgICAgICAgIGJ1aWxkaW5nSWQsXG4gICAgICAgICAgdW5pdCxcbiAgICAgICAgICBmbG9vclxuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8g5aaC5p6c5rKh5pyJ6YOo5L2N5YiS5YiG77yM5YiZ5LiN566X5ZCI5qC8546HXG4gICAgICAgIHByb2JsZW1Qcm9taXNlID0gJHEud2hlbihbXSk7XG4gICAgICB9XG5cbiAgICAgIHByb2JsZW1Qcm9taXNlLnRoZW4oaXRlbXMgPT4ge1xuICAgICAgICAvLyDlkIjmoLznjofmlbDmja5cbiAgICAgICAgbGV0IHBhc3NyYXRlRGF0YSA9IHt9O1xuICAgICAgICBsZXQgcGFyZW50c0RhdGEgPSB7fTtcblxuICAgICAgICBfLmVhY2goaXRlbXMsIGl0ZW0gPT4ge1xuICAgICAgICAgIC8vIOS8mOWFiOWPluacieaVsOaNrueahOmXrumimO+8jOWQjuWPluaaguWtmFxuICAgICAgICAgIGlmIChpdGVtLnN0YXR1cyA9PT0gJ+ajgOafpeS4rScpIHtcbiAgICAgICAgICAgIHBhc3NyYXRlRGF0YVtpdGVtLml0ZW1faWRdID0gJ+aaguWtmCc7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChpdGVtLnBhc3NyYXRlX21vZGUgPT09IDkpIHtcbiAgICAgICAgICAgICAgcGFzc3JhdGVEYXRhW2l0ZW0uaXRlbV9pZF0gPSBpdGVtLnN0YW5kYXJkX2ludGVuc2l0eV92YWx1ZVxuICAgICAgICAgICAgICAgID8gKChpdGVtLmludGVuc2l0eV92YWx1ZSAvIGl0ZW0uc3RhbmRhcmRfaW50ZW5zaXR5X3ZhbHVlKSAqIDEwMCkudG9GaXhlZCgyKSArICclJ1xuICAgICAgICAgICAgICAgIDogJyc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwYXNzcmF0ZURhdGFbaXRlbS5pdGVtX2lkXSA9IGl0ZW0ubWVhc3VyZW1lbnRfcG9pbnRzXG4gICAgICAgICAgICAgICAgPyAoXG4gICAgICAgICAgICAgICAgICAgICgoaXRlbS5tZWFzdXJlbWVudF9wb2ludHMgLSBpdGVtLnByb2JsZW1fcG9pbnRzKSAvIGl0ZW0ubWVhc3VyZW1lbnRfcG9pbnRzKSAqXG4gICAgICAgICAgICAgICAgICAgIDEwMFxuICAgICAgICAgICAgICAgICAgKS50b0ZpeGVkKDIpICsgJyUnXG4gICAgICAgICAgICAgICAgOiAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaXRlbS5wYXJlbnRfaXRlbV9pZCkge1xuICAgICAgICAgICAgaWYgKCFwYXJlbnRzRGF0YVtpdGVtLnBhcmVudF9pdGVtX2lkXSkge1xuICAgICAgICAgICAgICBwYXJlbnRzRGF0YVtpdGVtLnBhcmVudF9pdGVtX2lkXSA9IHtcbiAgICAgICAgICAgICAgICBwb2ludE51bTogMCxcbiAgICAgICAgICAgICAgICBleGNlZWROdW06IDAsXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhcmVudHNEYXRhW2l0ZW0ucGFyZW50X2l0ZW1faWRdLnBvaW50TnVtICs9IGl0ZW0ubWVhc3VyZW1lbnRfcG9pbnRzIHx8IDA7XG4gICAgICAgICAgICBwYXJlbnRzRGF0YVtpdGVtLnBhcmVudF9pdGVtX2lkXS5leGNlZWROdW0gKz0gaXRlbS5wcm9ibGVtX3BvaW50cyB8fCAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy5lYWNoKHBhcmVudHNEYXRhLCAobnVtLCBpZCkgPT4ge1xuICAgICAgICAgIHBhc3NyYXRlRGF0YVtpZF0gPSBudW0ucG9pbnROdW1cbiAgICAgICAgICAgID8gKCgobnVtLnBvaW50TnVtIC0gbnVtLmV4Y2VlZE51bSkgKiAxMDApIC8gbnVtLnBvaW50TnVtKS50b0ZpeGVkKDIpICsgJyUnXG4gICAgICAgICAgICA6ICcnO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wYXNzcmF0ZURhdGEgPSBwYXNzcmF0ZURhdGE7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgZ2V0SXRlbUluZm8oaXRlbSkge1xuICAgICAgbGV0IGluZm8gPSB0aGlzLnBhc3NyYXRlRGF0YVtpdGVtLmlkXTtcbiAgICAgIGxldCBwcm9jZXNzTW9kZVRleHRTZXQgPSBbJycsICfliIbmiLcnLCAn5LiN5YiG5Y2V5YWD5pW05bGCJywgJycsICcnLCAn5YiG5Y2V5YWD5pW05bGCJ107XG5cbiAgICAgIGlmIChpbmZvKSB7XG4gICAgICAgIHJldHVybiBpbmZvO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0ucHJvY2Vzc19tb2RlID09PSB0aGlzLnByb2Nlc3NNb2RlID8gJycgOiBwcm9jZXNzTW9kZVRleHRTZXRbaXRlbS5wcm9jZXNzX21vZGVdO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiDojrflj5bmo4Dmn6XpobnnmoTnsbvlnovvvJpcbiAgICAgKiAxLiBjdXJyZW50OiDlvZPliY3mo4Dmn6XpoblcbiAgICAgKiAyLiBibGFuazog5aSa6YCJ5pe277yM5peg5rOV6KKr6YCJ5oup77yM5Lmf5peg5rOV54K55Ye7XG4gICAgICogMy4gc2VsZWN0ZWQ6IOWkmumAieaXtu+8jOW3sumAieS4rVxuICAgICAqIDQuIGNoZWNrYm94OiDlpJrpgInml7bvvIzmnKrpgIlcbiAgICAgKiA1LiBhcnJvdzog5bey57uP5pyJ5pWw5o2u55qE5qOA5p+l6aG5XG4gICAgICogNi4gc2luZ2xlOiDljZXpgInnmoTmo4Dmn6XpoblcbiAgICAgKi9cbiAgICBnZXRJdGVtVHlwZShpdGVtKSB7XG4gICAgICAvLyDmmK/lkKbmmK/lvZPliY3mo4Dmn6XpobnvvIjlvZPliY3mo4Dmn6XpobnnmoTmhI/mgJ3mmK/vvJrlvZPliY3pl67popjnmoTmo4Dmn6XpobnvvIzlnKjnoa7orqTpgInmi6nmo4Dmn6XpobnkuYvliY3vvIzpl67popjkuI3kvJrph43liqDovb3vvIzmo4Dmn6XpobnkuI3kvJrlj5jvvIlcbiAgICAgIGxldCBpc0N1cnJlbnQgPSBfLnNvbWUodGhpcy5jdXJyZW50U2V0LCB7IGlkOiBpdGVtLmlkIH0pO1xuICAgICAgLy8g5piv5ZCm5piv5bey6YCJ5qOA5p+l6aG577yI5b2T5YmN5bey6YCJ5oup55qE5qOA5p+l6aG577yJXG4gICAgICBsZXQgaXNTZWxlY3RlZCA9IF8uc29tZSh0aGlzLnNlbGVjdGVkU2V0LCB7IGlkOiBpdGVtLmlkIH0pO1xuICAgICAgLy8g5piv5ZCm5piv57yW6L6R5qih5byPXG4gICAgICBsZXQgaXNFZGl0TW9kZSA9IHRoaXMubW9kZSA9PT0gJ2VkaXQnO1xuICAgICAgLy8g5qOA5p+l6aG55piv5ZCm5pyJ5aaC5p6c6L+H6Zeu6aKY77yI5pqC5a2Y6Zeu6aKY5ZKM5bey5o+Q5Lqk6Zeu6aKY6YO9566X77yJXG4gICAgICBsZXQgaGFzRGF0YSA9ICEhdGhpcy5wYXNzcmF0ZURhdGFbaXRlbS5pZF07XG4gICAgICAvLyDmo4Dmn6XpobnnmoTpg6jkvY3liJLliIbnsbvlnovvvIzlsYIoZmxvb3IpIOaIliDmiL/pl7Qocm9vbSlcbiAgICAgIGxldCBpdGVtTW9kZSA9IGl0ZW0ucHJvY2Vzc19tb2RlID09PSAxID8gJ3Jvb20nIDogJ2Zsb29yJztcbiAgICAgIC8vIOmDqOS9jeeahOexu+Wei++8jOWxgihmbG9vcikg5oiWIOaIv+mXtChyb29tKVxuICAgICAgbGV0IHBsYWNlTW9kZSA9IF9wbGFjZSAmJiBfcGxhY2Uucm9vbSAmJiBfcGxhY2Uucm9vbS5pZCA/ICdyb29tJyA6ICdmbG9vcic7XG5cbiAgICAgIGlmICh0aGlzLm11bHRpKSB7XG4gICAgICAgIC8vIOWkmumAiVxuICAgICAgICBpZiAoIWlzRWRpdE1vZGUgJiYgaXNDdXJyZW50KSB7XG4gICAgICAgICAgcmV0dXJuICdjdXJyZW50JztcbiAgICAgICAgfSBlbHNlIGlmIChpc1NlbGVjdGVkKSB7XG4gICAgICAgICAgcmV0dXJuICdzZWxlY3RlZCc7XG4gICAgICAgIH0gZWxzZSBpZiAoaXRlbU1vZGUgPT09IHBsYWNlTW9kZSAmJiAoIWhhc0RhdGEgfHwgKGhhc0RhdGEgJiYgaXNDdXJyZW50KSkpIHtcbiAgICAgICAgICByZXR1cm4gJ2NoZWNrYm94JztcbiAgICAgICAgfSBlbHNlIGlmIChoYXNEYXRhICYmICFpc0N1cnJlbnQgJiYgIWlzU2VsZWN0ZWQpIHtcbiAgICAgICAgICByZXR1cm4gJ2Fycm93JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gJ2JsYW5rJztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIGlmIChpc0VkaXRNb2RlICYmIGlzU2VsZWN0ZWQpIHtcbiAgICAgICAgICByZXR1cm4gJ3NlbGVjdGVkJztcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtTW9kZSA9PT0gcGxhY2VNb2RlICYmICFpc1NlbGVjdGVkICYmICghaGFzRGF0YSB8fCAoaGFzRGF0YSAmJiBpc0N1cnJlbnQpKSkge1xuICAgICAgICAgIHJldHVybiAnY2hlY2tib3gnO1xuICAgICAgICB9IGVsc2UgaWYgKCFpc0VkaXRNb2RlICYmIGlzQ3VycmVudCkge1xuICAgICAgICAgIHJldHVybiAnY3VycmVudCc7XG4gICAgICAgIH0gZWxzZSBpZiAoaGFzRGF0YSAmJiAhaXNDdXJyZW50ICYmICFpc1NlbGVjdGVkKSB7XG4gICAgICAgICAgcmV0dXJuICdhcnJvdyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICdibGFuayc7XG4gICAgICAgIH0gKi9cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOWNlemAiVxuICAgICAgICBpZiAoaXNDdXJyZW50KSB7XG4gICAgICAgICAgcmV0dXJuICdjdXJyZW50JztcbiAgICAgICAgfSBlbHNlIGlmIChoYXNEYXRhKSB7XG4gICAgICAgICAgcmV0dXJuICdhcnJvdyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICdzaW5nbGUnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOagueaNriBwYXJhbXMuc2VsZWN0ZWQg77yM5Yid5aeL5YyW5Ye6IHRoaXMuc2VsZWN0ZWRTZXRcbiAgICBpbml0U2VsZWN0ZWRTZXQob3B0aW9ucyA9IFtdLCBzZWxlY3RlZCA9IFtdKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkU2V0ID0gW107XG4gICAgICB0aGlzLmN1cnJlbnRTZXQgPSBbXTtcblxuICAgICAgXy5lYWNoKHNlbGVjdGVkLCBpdGVtID0+IHtcbiAgICAgICAgbGV0IHRhcmdldDtcbiAgICAgICAgbGV0IGlzRXhpc3QgPSBfLnNvbWUob3B0aW9ucywgb3B0aW9uSXRlbSA9PiB7XG4gICAgICAgICAgdGFyZ2V0ID0gXy5maW5kKG9wdGlvbkl0ZW0uY2hpbGRyZW4gfHwgW10sIHsgaWQ6IGl0ZW0uaWQgfSk7XG4gICAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGlzRXhpc3QpIHtcbiAgICAgICAgICB0aGlzLmN1cnJlbnRTZXQucHVzaChfLmNsb25lKHRhcmdldCkpO1xuXG4gICAgICAgICAgaWYgKHRoaXMubW9kZSA9PT0gJ2VkaXQnKSB7XG4gICAgICAgICAgICAvLyDnvJbovpHnirbmgIFcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRTZXQucHVzaChfLmNsb25lKHRhcmdldCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOWboOS4uuaYr+mAgueUqCB2LWh0bWwg57uR5a6a5pWw5o2u77yM5omA5Lul6KaB6L2s5LmJXG4gICAgc2hvd05hbWUobmFtZSkge1xuICAgICAgbGV0IHJlcyA9IG5hbWU7XG5cbiAgICAgIHJlcyA9IHJlcy5yZXBsYWNlKG5ldyBSZWdFeHAoJzwnLCAnZ20nKSwgJyZsdDsnKTtcbiAgICAgIHJlcyA9IHJlcy5yZXBsYWNlKG5ldyBSZWdFeHAoJz4nLCAnZ20nKSwgJyZndDsnKTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfSxcblxuICAgIHRvZ2dsZUl0ZW0oaXRlbSkge1xuICAgICAgbGV0IGlzT3BlbiA9IHRoaXMub3BlblNldFtpdGVtLmlkXTtcbiAgICAgIHRoaXMuJHNldCh0aGlzLm9wZW5TZXQsIGl0ZW0uaWQsICFpc09wZW4pO1xuICAgICAgbG9jYWxTdG9yYWdlLnNhdmVPYmplY3QoJ21lYXN1cmVSZXBvcnRSb29tTWVtb3J5JywgdGhpcy5vcGVuU2V0KTtcbiAgICB9LFxuXG4gICAgLy8g6YCJ5oup5LqL5Lu2XG4gICAgY2xpY2tJdGVtKGl0ZW0pIHtcbiAgICAgIGxldCBpdGVtVHlwZSA9IHRoaXMuZ2V0SXRlbVR5cGUoaXRlbSk7XG4gICAgICBsZXQgcHJvY2Vzc01vZGVUaXBzID0gW1xuICAgICAgICAnJyxcbiAgICAgICAgJ+atpOmhueaMieaIt+a1i+mHj++8jOS4juW9k+WJjemDqOS9jeS4jeespicsXG4gICAgICAgICfmraTpobnmjInkuI3liIbljZXlhYPmlbTlsYLmtYvph4/vvIzkuI7lvZPliY3pg6jkvY3kuI3nrKYnLFxuICAgICAgICAnJyxcbiAgICAgICAgJycsXG4gICAgICAgICfmraTpobnmjInliIbljZXlhYPmlbTlsYLmtYvph4/vvIzkuI7lvZPliY3pg6jkvY3kuI3nrKYnLFxuICAgICAgXTtcbiAgICAgIGxldCByb29tSWQgPSAoX3BsYWNlLnJvb20gJiYgX3BsYWNlLnJvb20uaWQpIHx8ICcnO1xuXG4gICAgICBpZiAoKHJvb21JZCAmJiBpdGVtLnByb2Nlc3NfbW9kZSAhPT0gMSkgfHwgKCFyb29tSWQgJiYgaXRlbS5wcm9jZXNzX21vZGUgPT09IDEpKSB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KHByb2Nlc3NNb2RlVGlwc1tpdGVtLnByb2Nlc3NfbW9kZV0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8qIGlmIChpdGVtLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMiAmJiBpdGVtLnBhc3NyYXRlX21vZGUgPT09IDgpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+WFiOW9leWAvOaooeW8j+aaguS4jeaUr+aMgeKAnOinguaEn+KAneexu+eul+azlScpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9ICovXG5cbiAgICAgIGlmIChcbiAgICAgICAgaXRlbS5lbnRyeV9yZXF1aXJlbWVudHMgIT09IDEgJiZcbiAgICAgICAgaXRlbS5wYXNzcmF0ZV9tb2RlICE9PSA4ICYmXG4gICAgICAgIChpdGVtLnN0YW5kYXJkX21heCA9PT0gbnVsbCB8fCBpdGVtLnN0YW5kYXJkX21heCA9PT0gJycpXG4gICAgICApIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+WFiOWcqFBD56uv6K6+572u5q2k5qOA5p+l6aG555qE5ZCI5qC85qCH5YeG5YC844CCJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMubXVsdGkpIHtcbiAgICAgICAgaWYgKGl0ZW1UeXBlID09PSAnY3VycmVudCcgfHwgaXRlbVR5cGUgPT09ICdibGFuaycpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW1UeXBlID09PSAnYXJyb3cnKSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3QoaXRlbSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGl0ZW1JbmRleCA9IF8uZmluZEluZGV4KHRoaXMuc2VsZWN0ZWRTZXQsIHsgaWQ6IGl0ZW0uaWQgfSk7XG5cbiAgICAgICAgaWYgKGl0ZW1JbmRleCA+PSAwKSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RlZFNldC5zcGxpY2UoaXRlbUluZGV4LCAxKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDliKTmlq3mmK/lkKblkIznuqdcbiAgICAgICAgICBsZXQgaXNTYW1lUGFyZW50ID1cbiAgICAgICAgICAgICF0aGlzLnNlbGVjdGVkU2V0Lmxlbmd0aCB8fFxuICAgICAgICAgICAgXy5zb21lKHRoaXMub3B0aW9ucywgaXRlbTEgPT4ge1xuICAgICAgICAgICAgICB2YXIgc2VsZWN0SW5MaXN0ID0gXy5zb21lKGl0ZW0xLmNoaWxkcmVuLCBpdGVtMiA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0yLmlkID09PSB0aGlzLnNlbGVjdGVkU2V0WzBdLmlkO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgdmFyIGl0ZW1Jbkxpc3QgPSBfLnNvbWUoaXRlbTEuY2hpbGRyZW4sIGl0ZW0yID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTIuaWQgPT09IGl0ZW0uaWQ7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0SW5MaXN0ICYmIGl0ZW1Jbkxpc3Q7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBsZXQgaXNQcm9jZXNzTW9kZVNhbWUgPVxuICAgICAgICAgICAgXy5pc0VtcHR5KHRoaXMuc2VsZWN0ZWRTZXQpIHx8IHRoaXMuc2VsZWN0ZWRTZXRbMF0ucHJvY2Vzc19tb2RlID09PSBpdGVtLnByb2Nlc3NfbW9kZTtcblxuICAgICAgICAgIGxldCBoYXNQYXNzcmF0ZU1vZGU5ID1cbiAgICAgICAgICAgIF8uc29tZSh0aGlzLnNlbGVjdGVkU2V0LCBzZWxlY3RlZEl0ZW0gPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRJdGVtLnBhc3NyYXRlX21vZGUgPT09IDk7XG4gICAgICAgICAgICB9KSB8fFxuICAgICAgICAgICAgKHRoaXMuc2VsZWN0ZWRTZXQubGVuZ3RoICYmIGl0ZW0ucGFzc3JhdGVfbW9kZSA9PT0gOSk7XG4gICAgICAgICAgaWYgKCFpc1NhbWVQYXJlbnQpIHtcbiAgICAgICAgICAgIFBvcHVwLmFsZXJ0KCflj6rog73lnKjnm7jlkIznmoTkuIDnuqfmo4Dmn6XpobnkuIvlpJrpgIknKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIWlzUHJvY2Vzc01vZGVTYW1lKSB7XG4gICAgICAgICAgICBQb3B1cC5hbGVydCgn5Y+q6IO95Zyo55u45ZCM55qE6YOo5L2N5YiS5YiG5qOA5p+l6aG56YeM5aSa6YCJJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGhhc1Bhc3NyYXRlTW9kZTkpIHtcbiAgICAgICAgICAgIFBvcHVwLmFsZXJ0KCfmt7flh53lnJ/lvLrluqbkuI3lj6/lpJrpgInmo4Dmn6XpobknKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5zZWxlY3RlZFNldC5wdXNoKGl0ZW0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXRlbVR5cGUgPT09ICdjdXJyZW50Jykge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuc2VsZWN0KGl0ZW0pO1xuICAgICAgICB9LCAxMDApO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBzZWxlY3QoZGF0YSkge1xuICAgICAgaWYgKCFfLmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgZGF0YSA9IFtkYXRhXTtcbiAgICAgIH1cbiAgICAgIGxldCByZXMgPSBfLmV4dGVuZChbXSwgZGF0YSk7XG4gICAgICBfY2FsbGJhY2sgJiYgX2NhbGxiYWNrKHJlcyk7XG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcbiAgICB9LFxuXG4gICAgY29uZmlybSgpIHtcbiAgICAgIGlmICh0aGlzLmFsbG93Q29uZmlybSkge1xuICAgICAgICB0aGlzLnNlbGVjdCh0aGlzLnNlbGVjdGVkU2V0KTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uY29udGVudCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuLmxpc3Qtd3JhcCB7XG4gIGZsZXg6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBoZWlnaHQ6IDQ2NXB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbi5pdGVtIHtcbiAgcGFkZGluZzogM3B4IDE1cHggM3B4IDI4cHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaXRlbS1pbmZvIHtcbiAgd2lkdGg6IDgwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjb2xvcjogIzk5OTtcbn1cbi5pdGVtIC5pdGVtLWljb24ge1xuICB3aWR0aDogNDRweDtcbiAgaGVpZ2h0OiAzNHB4O1xuICBsaW5lLWhlaWdodDogMzRweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5pdGVtIC5pY29uLWFycm93LXJpZ2h0IHtcbiAgY29sb3I6ICRhcnJvd0NvbG9yO1xufVxuLml0ZW0gLmljb24tY2hlY2tib3gge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBtYXJnaW4tdG9wOiA3LjVweDtcbn1cbi5pdGVtIC5pY29uLWNoZWNrYm94LWNoZWNrZWQge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBtYXJnaW4tdG9wOiA3LjVweDtcbn1cbi5pdGVtIC5pY29uLXF1YWxpZmllZCB7XG4gIGNvbG9yOiAkdGhlbWVDb2xvcjtcbn1cbi5pY29uLWVtcHR5IHtcbiAgd2lkdGg6IDQ0cHg7XG59XG5cbi5pdGVtLWhkIHtcbiAgcGFkZGluZzogOHB4IDE1cHggMCAxNXB4O1xufVxuLml0ZW0taGQgLml0ZW0taW5mbyB7XG4gIHdpZHRoOiA0OHB4O1xuICBtYXJnaW46IDAgMTZweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICM5OTk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogI2Y0ZjRmNDtcbn1cblxuLm5hbWUtcGFyZW50IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICMxMTE7XG59XG4ubmFtZS1jaGlsZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICMzMzM7XG59XG5cbi5pdGVtLXRyaWFuZ2xlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBib3JkZXI6IDVweCBzb2xpZCAjYzhjOGM4O1xufVxuLnRyaWFuZ2xlLXJpZ2h0IHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjYzhjOGM4O1xuICBsZWZ0OiAxMHB4O1xuICB0b3A6IDE1cHg7XG59XG4udHJpYW5nbGUtZG93biB7XG4gIGJvcmRlci1jb2xvcjogI2M4YzhjOCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgbGVmdDogMTBweDtcbiAgdG9wOiAxNy41cHg7XG59XG5cbi5idG4tY29uZmlybSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRzdWJUaGVtZUNvbG9yO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICBjb2xvcjogJHRoZW1lQ29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG4uYnRuLWNvbmZpcm0uYnRuLWRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcbiAgY29sb3I6ICRjb2xvckdyYXkzO1xufVxuPC9zdHlsZT5cbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLXRlbXBsYXRlLTIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZmZjYmUzZjImbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9saXN0LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTc0MTAyYzA1Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWQ4ZjYxMjEwJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiOGRkZGY4ZGFcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAubWVhc3VyZS1jLWQgLnZhbi1hY3Rpb24tc2hlZXRfX2hlYWRlcltkYXRhLXYtZDhmNjEyMTBde2NvbG9yOiMzMzN9LnpqYXBwIC5tZWFzdXJlLWMtZCAubWNkLWNvbnRlbnRbZGF0YS12LWQ4ZjYxMjEwXXtwYWRkaW5nOjE1cHg7ZGlzcGxheTpmbGV4O2ZsZXgtd3JhcDp3cmFwO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS56amFwcCAubWVhc3VyZS1jLWQgLm1jZC1saXN0W2RhdGEtdi1kOGY2MTIxMF17d2lkdGg6ODBweDtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2JvcmRlcjoxcHggc29saWQgI2U1ZTVlNTtib3JkZXItcmFkaXVzOjNweDtjb2xvcjojMzMzO21hcmdpbjowIDAgMTBweCAwO3RleHQtYWxpZ246Y2VudGVyO2Zsb2F0OmxlZnR9LnpqYXBwIC5tZWFzdXJlLWMtZCAubWNkLWxpc3QuYWN0aXZlW2RhdGEtdi1kOGY2MTIxMF17Y29sb3I6IzQyNzVlODtib3JkZXItY29sb3I6IzQyNzVlOH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCI8dGVtcGxhdGU+XG4gIDx0cmFuc2l0aW9uIG5hbWU9XCJzbGlkZS1yaWdodFwiPlxuICAgIDxwYWdlLWNvbnRlbnRcbiAgICAgIHYtaWY9XCJzaG93XCJcbiAgICAgIDp0aXRsZT1cInRpdGxlXCJcbiAgICAgIG1vZGU9XCJkaWFsb2dcIlxuICAgICAgOm9uLWNsb3NlPVwiY2xvc2VFdmVudFwiXG4gICAgPlxuICAgICAgPCEtLSAoKCggIXNlbGVjdGVkLm5hbWUgfHwgY3VzdG9tQWRkU3VwcGxpZXIoc2VsZWN0ZWQubmFtZSkgPiAtMSkpICYmIGVkaXRvckFkZERhdGEpICAtLT5cbiAgICAgIDxkaXZcbiAgICAgICAgdi1pZj1cIlxuICAgICAgICAgIChyaWdodEJ0biAmJiAhZWRpdG9yQWRkRGF0YSkgfHxcbiAgICAgICAgICAgIChyaWdodEJ0biAmJiBlZGl0b3JBZGREYXRhICYmICghc2VsZWN0ZWQubmFtZSB8fCBjdXN0b21BZGRTdXBwbGllcihzZWxlY3RlZC5uYW1lKSA+IC0xKSlcbiAgICAgICAgXCJcbiAgICAgICAgc2xvdD1cImhlYWRlci1iYXItcmlnaHRcIlxuICAgICAgICBjbGFzcz1cImhlYWRlci1idG5cIlxuICAgICAgICBAY2xpY2s9XCJyaWdodEJ0bkV2ZW50KGNhdGVnb3J5KVwiXG4gICAgICA+XG4gICAgICAgIHt7IHJpZ2h0QnRuIH19XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHNjcm9sbGVyXG4gICAgICAgIDpoYXMtbmV4dD1cIiFzZWFyY2hTdGF0dXMgJiYgIWdyb3VwaW5nICYmIG9wdGlvbnNMaW1pdCA8IG9wdGlvbnMubGVuZ3RoXCJcbiAgICAgICAgZW5kLXRleHRcbiAgICAgICAgOmlzLWVtcHR5PVwib3B0aW9uc1Nob3cubGVuZ3RoID09PSAwXCJcbiAgICAgICAgQGxvYWROZXh0PVwicGFnZU9wdGlvbnNcIlxuICAgICAgPlxuICAgICAgICA8YXBwLXNlYXJjaC1iYXJcbiAgICAgICAgICB2LWlmPVwic2VhcmNoQmFyXCJcbiAgICAgICAgICByZWY9XCJhcHAtc2VhcmNoLWJhclwiXG4gICAgICAgICAgdi1tb2RlbD1cImtleXdvcmRcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwi5pCc57SiXCJcbiAgICAgICAgICA6aGlzdG9yeS1rZXk9XCJzdG9yYWdlS2V5XCJcbiAgICAgICAgICBAY2hhbmdlU2VhcmNoU3RhdHVzPVwib25TZWFyY2hUeXBlQ2hhbmdlXCJcbiAgICAgICAgLz5cblxuICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInNlYXJjaFN0YXR1c1wiPlxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwia2V5d29yZFwiPlxuICAgICAgICAgICAgPHZhbi1jb2xsYXBzZVxuICAgICAgICAgICAgICB2LWlmPVwiZ3JvdXBpbmdcIlxuICAgICAgICAgICAgICB2LW1vZGVsPVwiYWN0aXZlVGFiXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHZhbi1jb2xsYXBzZS1pdGVtXG4gICAgICAgICAgICAgICAgdi1mb3I9XCIoaXRlbSwga2V5KSBpbiBzZWFyY2hEYXRhXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwia2V5XCJcbiAgICAgICAgICAgICAgICA6dGl0bGU9XCJpdGVtLm5hbWVcIlxuICAgICAgICAgICAgICAgIDpuYW1lPVwia2V5XCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgICB2LWZvcj1cIih2LCBrKSBpbiBpdGVtLmNoaWxkcmVuXCJcbiAgICAgICAgICAgICAgICAgIDprZXk9XCJrXCJcbiAgICAgICAgICAgICAgICAgIDpjaGVja2VkPVwiY2hlY2tlZEl0ZW0uaWQgPT09IHYuaWRcIlxuICAgICAgICAgICAgICAgICAgOml0ZW09XCJ2XCJcbiAgICAgICAgICAgICAgICAgIDpsaW5lLWxpbWl0PVwibGluZUxpbWl0XCJcbiAgICAgICAgICAgICAgICAgIHJlbmRlci1maWVsZD1cInJlbmFtZVwiXG4gICAgICAgICAgICAgICAgICBAY2xpY2s9XCJzZWxlY3RJdGVtXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L3Zhbi1jb2xsYXBzZS1pdGVtPlxuICAgICAgICAgICAgPC92YW4tY29sbGFwc2U+XG5cbiAgICAgICAgICAgIDxsb2FkaW5nLXN0YXR1c1xuICAgICAgICAgICAgICB2LWlmPVwiZ3JvdXBpbmcgJiYgIXNlYXJjaERhdGEubGVuZ3RoXCJcbiAgICAgICAgICAgICAgOmlzLWVtcHR5PVwidHJ1ZVwiXG4gICAgICAgICAgICAgIGVtcHR5LXRleHQ9XCLmsqHmnInlhoXlrrlcIlxuICAgICAgICAgICAgICBzaG93LXN0eWxlPVwic2VhcmNoXCJcbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiIWdyb3VwaW5nXCI+XG4gICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgdi1mb3I9XCIoaXRlbSwga2V5KSBpbiBzZWFyY2hEYXRhXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwia2V5XCJcbiAgICAgICAgICAgICAgICA6Y2hlY2tlZD1cImNoZWNrZWRJdGVtLmlkID09PSBpdGVtLmlkXCJcbiAgICAgICAgICAgICAgICA6aXRlbT1cIml0ZW1cIlxuICAgICAgICAgICAgICAgIDpsaW5lLWxpbWl0PVwibGluZUxpbWl0XCJcbiAgICAgICAgICAgICAgICByZW5kZXItZmllbGQ9XCJyZW5hbWVcIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cInNlbGVjdEl0ZW1cIlxuICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgIDxsb2FkaW5nLXN0YXR1c1xuICAgICAgICAgICAgICAgIHYtaWY9XCIhc2VhcmNoRGF0YS5sZW5ndGhcIlxuICAgICAgICAgICAgICAgIDppcy1lbXB0eT1cInRydWVcIlxuICAgICAgICAgICAgICAgIGVtcHR5LXRleHQ9XCLmsqHmnInlhoXlrrlcIlxuICAgICAgICAgICAgICAgIHNob3ctc3R5bGU9XCJzZWFyY2hcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICAgICAgPCEtLSDmnZDmlpnpqozmlLbmnZDmlpnkvpvlupTllYbvvIzmiYvliqjmt7vliqAgLS0+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJzdXBwbGllci1lZGl0b3JcIlxuICAgICAgICAgICAgdi1pZj1cInNlbGVjdGVkLmlkID09PSAnLTEnICYmIGN1c3RvbUFkZFN1cHBsaWVyKHNlbGVjdGVkLm5hbWUpIDwgMCAmJiBlZGl0b3JBZGREYXRhXCJcbiAgICAgICAgICAgIEBjbGljaz1cImNsb3NlUG9wdXBcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGl0bGVcIj57eyBzZWxlY3RlZC5uYW1lIH19PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJpY29uXCI+XG4gICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uZm9udCBpY29uLWVkaXQgbWFyZ2luLXJcIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cInJpZ2h0QnRuRXZlbnRcIlxuICAgICAgICAgICAgICA+PC9pPlxuICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb25mb250IGljb24tcXVhbGlmaWVkXCI+PC9pPlxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDx2YW4tY29sbGFwc2VcbiAgICAgICAgICAgIHYtaWY9XCJncm91cGluZ1wiXG4gICAgICAgICAgICB2LW1vZGVsPVwiYWN0aXZlVGFiXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8dmFuLWNvbGxhcHNlLWl0ZW1cbiAgICAgICAgICAgICAgdi1mb3I9XCIoaXRlbSwga2V5KSBpbiBvcHRpb25zU2hvd1wiXG4gICAgICAgICAgICAgIDprZXk9XCJrZXlcIlxuICAgICAgICAgICAgICA6dGl0bGU9XCJpdGVtLm5hbWVcIlxuICAgICAgICAgICAgICA6bmFtZT1cImtleVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgdi1mb3I9XCIodiwgaykgaW4gaXRlbS5jaGlsZHJlblwiXG4gICAgICAgICAgICAgICAgOmtleT1cImtcIlxuICAgICAgICAgICAgICAgIDpjaGVja2VkPVwiY2hlY2tlZEl0ZW0uaWQgPT09IHYuaWRcIlxuICAgICAgICAgICAgICAgIDppdGVtPVwidlwiXG4gICAgICAgICAgICAgICAgOmxpbmUtbGltaXQ9XCJsaW5lTGltaXRcIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cInNlbGVjdEl0ZW1cIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC92YW4tY29sbGFwc2UtaXRlbT5cbiAgICAgICAgICA8L3Zhbi1jb2xsYXBzZT5cblxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICAgICAgICA8aXRlbVxuICAgICAgICAgICAgICB2LWZvcj1cIihpdGVtLCBrZXkpIGluIG9wdGlvbnNTaG93XCJcbiAgICAgICAgICAgICAgOmtleT1cImtleVwiXG4gICAgICAgICAgICAgIDpjaGVja2VkPVwiY2hlY2tlZEl0ZW0uaWQgPT09IGl0ZW0uaWRcIlxuICAgICAgICAgICAgICA6aXRlbT1cIml0ZW1cIlxuICAgICAgICAgICAgICA6bGluZS1saW1pdD1cImxpbmVMaW1pdFwiXG4gICAgICAgICAgICAgIEBjbGljaz1cInNlbGVjdEl0ZW1cIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICAgICAgPGxvYWRpbmctc3RhdHVzXG4gICAgICAgICAgICB2LWlmPVwiIW9wdGlvbnNTaG93Lmxlbmd0aFwiXG4gICAgICAgICAgICA6aXMtZW1wdHk9XCJ0cnVlXCJcbiAgICAgICAgICAgIGVtcHR5LXRleHQ9XCLmmoLml6DmlbDmja5cIlxuICAgICAgICAgICAgc2hvdy1zdHlsZT1cInNlYXJjaFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDwvc2Nyb2xsZXI+XG4gICAgPC9wYWdlLWNvbnRlbnQ+XG4gIDwvdHJhbnNpdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5cbmltcG9ydCBhcHBTZWFyY2hCYXIgZnJvbSAnQGNvbXBvbmVudHMvYXBwLXNlYXJjaC1iYXIvd2l0aC1oaXN0b3J5JztcbmltcG9ydCBpdGVtIGZyb20gJy4vaXRlbSc7XG5pbXBvcnQgU2Nyb2xsZXIgZnJvbSAnQGNvbXBvbmVudHMvc2Nyb2xsZXInO1xuaW1wb3J0IFBvcHVwTWl4aW4gZnJvbSAnQHNyYy91dGlscy9wb3B1cC1taXhpbic7XG5pbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJ0Bjb21tb24vZXZlbnQtYnVzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnQXBwU2luZ2xlU2VsZWN0JyxcbiAgY29tcG9uZW50czoge1xuICAgIGFwcFNlYXJjaEJhcixcbiAgICBpdGVtLFxuICAgIFNjcm9sbGVyLFxuICB9LFxuICBtaXhpbnM6IFtQb3B1cE1peGluXSxcbiAgcHJvcHM6IHt9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY3RpdmVUYWI6IFtdLFxuICAgICAgc3RvcmFnZUtleTogZW5jb2RlVVJJKHRoaXMudGl0bGUgfHwgJ3NpbmdsZVNlbGVjdE1hcmsnKSxcbiAgICAgIHN0b3JhZ2VWYWw6IFtdLFxuICAgICAga2V5d29yZDogJycsXG4gICAgICBzZWFyY2hTdGF0dXM6IGZhbHNlLFxuICAgICAgY2hlY2tlZEl0ZW06IHt9LFxuICAgICAgc2hvdzogZmFsc2UsXG4gICAgICBzZWFyY2hEYXRhOiBbXSxcblxuICAgICAgb3B0aW9uczogW10sXG5cbiAgICAgIG9wdGlvbnNMaW1pdDogMjAsXG4gICAgICBwYWdpbmdPcHRpb25zOiBmYWxzZSxcbiAgICAgIHNlYXJjaEJhcjogdHJ1ZSwgLy8g6buY6K6k5piv5pyJ5pCc57SiXG4gICAgICBjYXRlZ29yeTogW10sIC8vIOWIhue7hOWQjeensO+8jOWIhuexu+WQjeensFxuICAgICAgaWZUb2dnbGU6IGZhbHNlLFxuICAgICAgZWRpdG9yQWRkRGF0YTogZmFsc2UsXG4gICAgICBsaW5lTGltaXQ6IDEsIC8vIOihjOaVsOmZkOWItlxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgb3B0aW9uc1Nob3coKSB7XG4gICAgICBpZiAoIXRoaXMub3B0aW9ucyB8fCAhdGhpcy5vcHRpb25zLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDlpoLmnpzpnIDopoHliIbnu4RcbiAgICAgICAgaWYgKHRoaXMuZ3JvdXBpbmcpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5nZXRHcm91cERhdGEoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLnNsaWNlKDAsIHRoaXMub3B0aW9uc0xpbWl0KTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxuICB3YXRjaDoge1xuICAgIGtleXdvcmQodikge1xuICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICB0aGlzLmZpbHRlckxpc3Qodik7XG4gICAgICB9KTtcbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb3BlblBvcHVwKHBhcmFtcykge1xuICAgICAgY29uc29sZS5sb2cocGFyYW1zKTtcbiAgICAgIHRoaXMudmFsdWUgPSB0cnVlO1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuY2F0ZWdvcnkgPSBbXTtcbiAgICAgIEV2ZW50QnVzLiRvbignY2xvc2VEaWFsb2cnLCB0aGlzLmNsb3NlUG9wdXApO1xuICAgICAgdGhpcy50aXRsZSA9IHBhcmFtcy50aXRsZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWQgPSBwYXJhbXMuc2VsZWN0ZWQ7XG4gICAgICB0aGlzLmNoZWNrZWRJdGVtID0gcGFyYW1zLnNlbGVjdGVkO1xuICAgICAgdGhpcy5vcHRpb25zID0gcGFyYW1zLm9wdGlvbnM7XG4gICAgICB0aGlzLm9uU2VsZWN0ID0gcGFyYW1zLm9uU2VsZWN0O1xuICAgICAgdGhpcy5zZWFyY2hCYXIgPSBwYXJhbXMuc2VhcmNoQmFyO1xuICAgICAgdGhpcy5ncm91cGluZyA9IHBhcmFtcy5ncm91cGluZztcbiAgICAgIHRoaXMucmlnaHRCdG4gPSBwYXJhbXMucmlnaHRCdG47XG4gICAgICB0aGlzLnJpZ2h0QnRuRXZlbnQgPSBwYXJhbXMucmlnaHRCdG5FdmVudDtcbiAgICAgIHRoaXMuaWZUb2dnbGUgPSBwYXJhbXMuaWZUb2dnbGU7XG4gICAgICB0aGlzLmxpbmVMaW1pdCA9IHBhcmFtcy5saW5lTGltaXQ7XG4gICAgICB0aGlzLmVkaXRvckFkZERhdGEgPSBwYXJhbXMuZWRpdG9yQWRkRGF0YTtcbiAgICAgIC8vIGFjdGl2ZVRhYlxuICAgICAgaWYgKHBhcmFtcy5ncm91cGluZyAmJiBwYXJhbXMuYXV0b09wZW4pIHtcbiAgICAgICAgbGV0IHRhYnMgPSBfLnVuaXFCeShfLm1hcCh0aGlzLm9wdGlvbnMsIHBhcmFtcy5ncm91cGluZykpO1xuICAgICAgICB0aGlzLmFjdGl2ZVRhYiA9IF8ubWFwKHRhYnMsICh0YWIsIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3RvcmFnZUtleSA9IGVuY29kZVVSSSh0aGlzLnRpdGxlIHx8ICdzaW5nbGVTZWxlY3RNYXJrJyk7IC8vIOS4jeWPr+WwhuWFtuaUvue9ruWcqGRhdGHlkoxjb21wdXRlZOS4re+8jOWboOS4uuWIh+aNouaXtuS4jeS8muabtOaWsFxuICAgICAgdGhpcy4kZW1pdCgnb3BlbicpO1xuICAgIH0sXG4gICAgY2xvc2VQb3B1cCgpIHtcbiAgICAgIHRoaXMudmFsdWUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTtcbiAgICB9LFxuXG4gICAgLy8g5YWz6ZetXG4gICAgY2xvc2VFdmVudCgpIHtcbiAgICAgIEV2ZW50QnVzLiRvZmYoJ2Nsb3NlRGlhbG9nJywgdGhpcy5jbG9zZVBvcHVwKTtcbiAgICAgIHRoaXMudmFsdWUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuICAgICAgLy8g5riF6Zmk5pCc57Si57uT5p6cXG4gICAgICB0aGlzLmtleXdvcmQgPSAnJztcbiAgICAgIHRoaXMuc2VhcmNoU3RhdHVzID0gZmFsc2U7XG4gICAgICB0aGlzLiRyZWZzWydhcHAtc2VhcmNoLWJhciddICYmIHRoaXMuJHJlZnNbJ2FwcC1zZWFyY2gtYmFyJ10uY2FuY2VsU2VhcmNoKCk7XG4gICAgfSxcbiAgICBjdXN0b21BZGRTdXBwbGllcihuYW1lKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmZpbmRJbmRleChpdGVtID0+IGl0ZW0ubmFtZSA9PT0gbmFtZSk7XG4gICAgfSxcbiAgICAvLyDpgInmi6nmn5DkuKrpgInpoblcbiAgICBzZWxlY3RJdGVtKGl0ZW0pIHtcbiAgICAgIGlmICh0aGlzLmlmVG9nZ2xlICYmIHRoaXMuY2hlY2tlZEl0ZW0uaWQgPT09IGl0ZW0uaWQpIHtcbiAgICAgICAgdGhpcy5jaGVja2VkSXRlbSA9IHt9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jaGVja2VkSXRlbSA9IGl0ZW07XG4gICAgICB9XG4gICAgICAvLyB0aGlzLiRlbWl0KCdvblNlbGVjdCcsIGl0ZW0pO1xuICAgICAgdGhpcy5vblNlbGVjdCh0aGlzLmNoZWNrZWRJdGVtKTtcbiAgICAgIC8vIOiusOW9leaQnOe0ouiusOW9lVxuICAgICAgdGhpcy4kcmVmc1snYXBwLXNlYXJjaC1iYXInXSAmJiB0aGlzLiRyZWZzWydhcHAtc2VhcmNoLWJhciddLnNhdmVIaXN0b3J5KCk7XG5cbiAgICAgIC8vIOW7tui/n+WFs+mXre+8jOiuqeeUqOaIt+eci+WIsOmAieaLqeeahOWGheWuuVxuICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmNsb3NlRXZlbnQoKTtcbiAgICAgIH0sIDMwMCk7XG4gICAgfSxcbiAgICAvLyDmkJzntKLmoYbnirbmgIHlj5jljJZcbiAgICBvblNlYXJjaFR5cGVDaGFuZ2UodHlwZSkge1xuICAgICAgdGhpcy5zZWFyY2hTdGF0dXMgPSB0eXBlO1xuICAgIH0sXG4gICAgLy8g5pCc57Si6L+H5rukXG4gICAgZmlsdGVyTGlzdChrZXl3b3JkKSB7XG4gICAgICBsZXQgaW5kZXg7XG4gICAgICBsZXQgX2l0ZW07XG4gICAgICBjb25zdCBfcmVnID0gbmV3IFJlZ0V4cCgnKCcgKyBrZXl3b3JkICsgJyknLCAnZ21pJyk7XG4gICAgICB0aGlzLmNhdGVnb3J5ID0gW107XG4gICAgICB0aGlzLmtleXdvcmQgPSBrZXl3b3JkO1xuICAgICAgdGhpcy5zZWFyY2hEYXRhID0gW107XG4gICAgICBpZiAoIWtleXdvcmQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgLy8g6auY5Lqu5YWz6ZSu5a2XXG4gICAgICB0aGlzLm9wdGlvbnMubWFwKGl0ZW0gPT4ge1xuICAgICAgICBpZiAoX3JlZy50ZXN0KGl0ZW0ubmFtZSkpIHtcbiAgICAgICAgICBfaXRlbSA9IHtcbiAgICAgICAgICAgIC4uLml0ZW0sXG4gICAgICAgICAgICByZW5hbWU6IGl0ZW0ubmFtZS5yZXBsYWNlKF9yZWcsIGA8bGFiZWw+JDE8L2xhYmVsPmApLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAvLyDlpoLmnpzpnIDopoHliIbnu4RcbiAgICAgICAgICBpZiAodGhpcy5ncm91cGluZykge1xuICAgICAgICAgICAgaW5kZXggPSB0aGlzLmNhdGVnb3J5LmluZGV4T2YoX2l0ZW1bdGhpcy5ncm91cGluZ10pO1xuICAgICAgICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgICB0aGlzLmNhdGVnb3J5LnB1c2goX2l0ZW1bdGhpcy5ncm91cGluZ10pO1xuICAgICAgICAgICAgICB0aGlzLnNlYXJjaERhdGEucHVzaCh7XG4gICAgICAgICAgICAgICAgbmFtZTogX2l0ZW1bdGhpcy5ncm91cGluZ10sXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtfaXRlbV0sXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5zZWFyY2hEYXRhW2luZGV4XS5jaGlsZHJlbi5wdXNoKF9pdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hEYXRhLnB1c2goX2l0ZW0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgLy8g5YiG6aG1XG4gICAgcGFnZU9wdGlvbnMoKSB7XG4gICAgICB0aGlzLm9wdGlvbnNMaW1pdCA9IHRoaXMub3B0aW9uc0xpbWl0ICsgMjA7XG4gICAgICB0aGlzLnBhZ2luZ09wdGlvbnMgPSBmYWxzZTtcbiAgICB9LFxuICAgIC8vIOWIhue7hOaVsOaNrlxuICAgIGdldEdyb3VwRGF0YSgpIHtcbiAgICAgIGxldCBpbmRleDtcbiAgICAgIGNvbnN0IGFyciA9IFtdO1xuXG4gICAgICB0aGlzLmNhdGVnb3J5ID0gW107XG4gICAgICB0aGlzLm9wdGlvbnMubWFwKGl0ZW0gPT4ge1xuICAgICAgICBpbmRleCA9IHRoaXMuY2F0ZWdvcnkuaW5kZXhPZihpdGVtW3RoaXMuZ3JvdXBpbmddKTtcbiAgICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICAgIHRoaXMuY2F0ZWdvcnkucHVzaChpdGVtW3RoaXMuZ3JvdXBpbmddKTtcbiAgICAgICAgICBhcnIucHVzaCh7XG4gICAgICAgICAgICBuYW1lOiBpdGVtW3RoaXMuZ3JvdXBpbmddLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtpdGVtXSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhcnJbaW5kZXhdLmNoaWxkcmVuLnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBhcnI7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLnN1cHBsaWVyLWVkaXRvciB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDUycHg7XG4gIGNvbG9yOiByZ2IoNjYsIDExNywgMjMyKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgLmljb24ge1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2M4YzhjODtcbiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7XG4gIH1cbiAgLmljb24tZWRpdCB7XG4gICAgY29sb3I6ICNjOGM4Yzg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICB9XG4gIC5pY29uLXF1YWxpZmllZCB7XG4gICAgY29sb3I6ICR0aGVtZUNvbG9yO1xuICB9XG4gIC5tYXJnaW4tciB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICB9XG59XG4ubGlzdC10aXRsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAwO1xuICBjb2xvcjogIzg4ODtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMzBweDtcbiAgbWluLWhlaWdodDogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZzogOHB4IDE2cHggMnB4O1xufVxuLnNlYXJjaC1pdGVtIHtcbiAgPiBkaXYge1xuICAgIHBhZGRpbmctcmlnaHQ6IDM1cHg7XG4gIH1cbiAgaSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbG9yOiByZ2IoMjA0LCAyMDQsIDIwNCk7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgfVxufVxuLnZhbi1wb3B1cCB7XG4gICYtLXJpZ2h0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbn1cbi9kZWVwLyAudmFuLWNlbGxfX3RpdGxlIHtcbiAgY29sb3I6ICM0MTc0ZTk7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuL2RlZXAvIC52YW4tY29sbGFwc2UtaXRlbV9fY29udGVudCB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgcGFkZGluZzogMCAwIDAgMjVweDtcbiAgLnZhbi1jZWxsIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gIH1cbn1cbjwvc3R5bGU+XG4iLCI8dGVtcGxhdGU+XG4gIDx0cmFuc2l0aW9uIG5hbWU9XCJzbGlkZS1yaWdodFwiPlxuICAgIDxwYWdlLWNvbnRlbnQgdi1pZj1cInNob3dcIiBtb2RlPVwiZGlhbG9nXCIgdGl0bGU9XCLmiLflnovlm75cIiA6b24tY2xvc2U9XCJjbG9zZVBvcHVwXCI+XG4gICAgICA8ZHJhd2luZyA6dXJsPVwidXJsXCIgOnBvaW50cz1cInBvaW50c1wiIDpmb2xkZXI9XCJmb2xkZXJcIiBAb25jbGljaz1cIm9uY2xpY2tcIiBzdHlsZT1cImZsZXg6IDFcIiAvPlxuXG4gICAgICA8YXBwLWJ1dHRvbi1ncm91cCB2LWlmPVwibW9kZSA9PT0gJ211bHRpcGxlLXJlbWFyaydcIiBmaXhlZC1ib3R0b20gc2VhbWxlc3M+XG4gICAgICAgIDxhcHAtYnV0dG9uXG4gICAgICAgICAgOnR5cGU9XCJwb2ludHMubGVuZ3RoID8gJ3dhcm5pbmcnIDogJ25vcm1hbCdcIlxuICAgICAgICAgIHBsYWluXG4gICAgICAgICAgc3R5bGU9XCJ3aWR0aDogNTAlXCJcbiAgICAgICAgICBAY2xpY2s9XCJ1bmRvXCJcbiAgICAgICAgPlxuICAgICAgICAgIOaSpOmUgFxuICAgICAgICA8L2FwcC1idXR0b24+XG4gICAgICAgIDxhcHAtYnV0dG9uIEBjbGljaz1cInN1cmVcIj4g56Gu5a6aIDwvYXBwLWJ1dHRvbj5cbiAgICAgIDwvYXBwLWJ1dHRvbi1ncm91cD5cbiAgICA8L3BhZ2UtY29udGVudD5cbiAgPC90cmFuc2l0aW9uPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbi8qKlxuICog5paw5YaZ5LqG5by556qX55qE5oi35Z6L5Zu+57uE5Lu277yM5aaC5p6c5pyJ6ZyA6KaB6K+355yLLi9wb3B1cO+8jOi/meS4quaWh+S7tuacquadpeWIoOmZpFxuICovXG5pbXBvcnQgUG9wdXBNaXhpbiBmcm9tICdAc3JjL3V0aWxzL3BvcHVwLW1peGluJztcbmltcG9ydCBQb3B1cCBmcm9tICdAc3JjL3V0aWxzL3BvcHVwJztcbmltcG9ydCBzdG9yZSBmcm9tICdAc3RvcmUnO1xuaW1wb3J0IERyYXdpbmcgZnJvbSAnLi9pbmRleC52dWUnO1xuXG5sZXQgcG9pbnRDb2xvck5vcm1hbCA9ICcjZmY0NTQ2JztcbmxldCBwb2ludENvbG9yTGlnaHQgPSAnIzQyNzVlOCc7XG5sZXQgcG9pbnRDb2xvckZvdW5kID0gJyMxNGZmNTYnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdEcmF3aW5nRGlhbG9nJyxcbiAgc3RvcmUsXG4gIGNvbXBvbmVudHM6IHsgRHJhd2luZyB9LFxuICBtaXhpbnM6IFtQb3B1cE1peGluXSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2hvdzogZmFsc2UsXG5cbiAgICAgIG1vZGU6ICcnLFxuICAgICAgdXJsOiAnJyxcbiAgICAgIHBvaW50czogW10sXG4gICAgICBmb2xkZXI6ICcnLFxuICAgICAgbWF4TWFya3M6IEluZmluaXR5LFxuICAgICAgb25tYXJrOiAoKSA9PiB7fSxcbiAgICB9O1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb3BlblBvcHVwKHBhcmFtcykge1xuICAgICAgdGhpcy5tb2RlID0gcGFyYW1zLm1vZGU7XG4gICAgICB0aGlzLnVybCA9IHBhcmFtcy51cmw7XG4gICAgICB0aGlzLnBvaW50cyA9IHBhcmFtcy5wb2ludHM7XG4gICAgICB0aGlzLmZvbGRlciA9IHBhcmFtcy5mb2xkZXI7XG4gICAgICB0aGlzLm1heE1hcmtzID0gaXNOYU4ocGFyYW1zLm1heE1hcmtzKSA/IEluZmluaXR5IDogcGFyYW1zLm1heE1hcmtzO1xuICAgICAgdGhpcy5vbm1hcmsgPSBwYXJhbXMub25tYXJrO1xuXG4gICAgICB0aGlzLnNob3cgPSB0cnVlO1xuICAgICAgdGhpcy4kZW1pdCgnb3BlbicpO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGNsb3NlUG9wdXAoKSB7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgfSxcblxuICAgIC8vIOaSpOmUgFxuICAgIHVuZG8oKSB7XG4gICAgICB0aGlzLnBvaW50cy5wb3AoKTtcbiAgICB9LFxuICAgIC8vIOehruiupFxuICAgIHN1cmUoKSB7XG4gICAgICBpZiAoIXRoaXMucG9pbnRzLmxlbmd0aCkge1xuICAgICAgICBQb3B1cC5hbGVydCgn6K+35YWI5Zyo5oi35Z6L5Zu+5qCH6K6w5L2N572uJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xuICAgICAgdGhpcy5vbm1hcmsgJiYgdGhpcy5vbm1hcmsodGhpcy5wb2ludHMpO1xuICAgIH0sXG5cbiAgICAvLyDorr7nva7pq5jkuq5cbiAgICBwb2ludExpZ2h0KGluZGV4KSB7XG4gICAgICB0aGlzLnBvaW50cyA9IF8ubWFwKHRoaXMucG9pbnRzLCAocG9pbnQsIGkpID0+IHtcbiAgICAgICAgbGV0IHAgPSB7IC4uLnBvaW50IH07XG4gICAgICAgIGlmIChpbmRleCA9PT0gaSkge1xuICAgICAgICAgIHAuY29sb3IgPSBwb2ludENvbG9yTGlnaHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHAuZm91bmQpIHtcbiAgICAgICAgICAgIHAuY29sb3IgPSBwb2ludENvbG9yRm91bmQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHAuY29sb3IgPSBwb2ludENvbG9yTm9ybWFsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcDtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBvbmNsaWNrKGRhdGEpIHtcbiAgICAgIGlmICh0aGlzLm1vZGUgPT09ICd2aWV3Jykge1xuICAgICAgICBpZiAoZGF0YS5jbGlja1BvaW50ICYmIGRhdGEuY2xpY2tQb2ludC50YWcgPT09ICdwb2ludHMnKSB7XG4gICAgICAgICAgbGV0IGluZGV4ID0gZGF0YS5jbGlja1BvaW50LmluZGV4O1xuICAgICAgICAgIHRoaXMucG9pbnRMaWdodChpbmRleCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5tb2RlID09PSAnbWFyay12YWwtZ3JvdXAnKSB7XG4gICAgICAgIC8vIOagh+iusOS4gOe7hOeCuVxuICAgICAgICBpZiAodGhpcy5wb2ludHMubGVuZ3RoID49IG1heE1hcmtzKSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoJ+eIhueCueS4quaVsOS4jeiDveWkp+S6juWunua1i+eCueaVsCcpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucG9pbnRzLnB1c2goeyB4OiBkYXRhLngsIHk6IGRhdGEueSB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5tb2RlID09PSAnbXVsdGlwbGUtcmVtYXJrJykge1xuICAgICAgICB0aGlzLnBvaW50cy5wdXNoKHsgeDogZGF0YS54LCB5OiBkYXRhLnkgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcG9pbnQgPSB7IHg6IGRhdGEueCwgeTogZGF0YS55IH07XG4gICAgICAgIHRoaXMucG9pbnRzID0gW3BvaW50XTtcblxuICAgICAgICAvLyDlhbPpl63lvLnnqpfvvIzmiafooYzlm57osINcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XG4gICAgICAgICAgdGhpcy5vbm1hcmsgJiYgdGhpcy5vbm1hcmsocG9pbnQpO1xuICAgICAgICB9LCAyMDApO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG4iLCJ2YXIgZXNjYXBlID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzXCIpO1xuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLmRyYXdpbmctY29uW2RhdGEtdi0xOTZlN2E3ZF17ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtmb250LXNpemU6MDtsaW5lLWhlaWdodDowfS56amFwcCAuZHJhd2luZy1jb24gY2FudmFzW2RhdGEtdi0xOTZlN2E3ZF17YmFja2dyb3VuZDp1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIkBzcmMvYXNzZXRzL2ltZy9kaWFncmFtLWJnLnBuZ1wiKSkgKyBcIikgI2ZmZjtiYWNrZ3JvdW5kLXNpemU6NHB4IDRweH0uemphcHAgLmxvYWRpbmctdGV4dFtkYXRhLXYtMTk2ZTdhN2Rde21hcmdpbi10b3A6MTVweDtjb2xvcjojYWFhfS56amFwcCAuZXJyb3ItdGV4dFtkYXRhLXYtMTk2ZTdhN2RdLC56amFwcCAubG9hZGluZy10ZXh0W2RhdGEtdi0xOTZlN2E3ZF17cGFkZGluZzowIDE1cHg7bGluZS1oZWlnaHQ6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTZweH0uemphcHAgLmVycm9yLXRleHRbZGF0YS12LTE5NmU3YTdkXXtjb2xvcjojZmYzZDNkfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPHBhZ2UtY29udGVudCB0aXRsZT1cIuWunua1i+WunumHj1wiIDpzaG93LWdvLXJvb3Q9XCJ0cnVlXCI+XG4gICAgPCEtLSDlpLTpg6ggdGFicyAtLT5cbiAgICA8dGVtcGxhdGUgc2xvdD1cImhlYWRlci1iYXItY2VudGVyXCI+XG4gICAgICA8IS0tIOWPquivu+aooeW8j+S4i++8jOS4jeaYvuekuiB0YWJzIC0tPlxuICAgICAgPGRpdiB2LWlmPVwidGFicy5sZW5ndGggPiAxICYmICFyZWFkb25seVwiIGNsYXNzPVwiaGVhZGVyLXRhYnNcIj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHYtZm9yPVwiKHRhYiwgaW5kZXgpIGluIHRhYnNcIlxuICAgICAgICAgIDprZXk9XCJpbmRleFwiXG4gICAgICAgICAgY2xhc3M9XCJoZWFkZXItdGFiXCJcbiAgICAgICAgICA6Y2xhc3M9XCJ7IG9uOiB0YWIua2V5ID09PSBjdXJyZW50VGFiIH1cIlxuICAgICAgICAgIEBjbGljaz1cImNoYW5nZVRhYih0YWIpXCJcbiAgICAgICAgPlxuICAgICAgICAgIHt7IHRhYi5uYW1lIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IHYtZWxzZSBjbGFzcz1cImhlYWRlci1iYXItdGl0bGVcIj5cbiAgICAgICAge3sgbW9kZWwucGxhY2VGdWxsbmFtZSB9fVxuICAgICAgPC9kaXY+XG4gICAgPC90ZW1wbGF0ZT5cbiAgICA8IS0tIOWktOmDqCB0YWJzIGVuZCAtLT5cblxuICAgIDwhLS0g5qOA5p+l5oyH5byVIC0tPlxuICAgIDxjaGVjay1ndWlkZVxuICAgICAgdi1pZj1cIiFpc0xvYWRpbmdcIlxuICAgICAgc2xvdD1cImhlYWRlci1iYXItcmlnaHRcIlxuICAgICAgbW9kdWxlPVwibWVhc3VyZVwiXG4gICAgICA6aXRlbS1pZHM9XCJjaGVja0l0ZW1HdWlkZUlkc1wiXG4gICAgICBtb2RlPVwiZHJvcFwiXG4gICAgLz5cbiAgICA8IS0tIOajgOafpeaMh+W8lSBlbmQgLS0+XG4gICAgPHRlbXBsYXRlIHYtaWY9XCIhaXNMb2FkaW5nXCI+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbCAmJiBkZXRhaWwucHJvYmxlbURhdGEgJiYgZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aFwiPlxuICAgICAgICA8IS0tIOmAieWhq+aooeW8jyAtLT5cbiAgICAgICAgPG1lYXN1cmUtZGV0YWlsLXRlbXBsYXRlLTFcbiAgICAgICAgICB2LWlmPVwiZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMVwiXG4gICAgICAgICAgcmVmPVwidGVtcGxhdGUtMVwiXG4gICAgICAgICAgOmRldGFpbD1cImRldGFpbFwiXG4gICAgICAgICAgQGNoYW5nZUl0ZW1zPVwiY2hhbmdlSXRlbXNcIlxuICAgICAgICAgIEBjaGFuZ2VQbGFjZT1cImNoYW5nZVBsYWNlXCJcbiAgICAgICAgLz5cblxuICAgICAgICA8IS0tIOWFiOW9leWAvOaooeW8jyAtLT5cbiAgICAgICAgPG1lYXN1cmUtZGV0YWlsLXRlbXBsYXRlLTJcbiAgICAgICAgICB2LWlmPVwiZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMlwiXG4gICAgICAgICAgcmVmPVwidGVtcGxhdGUtMlwiXG4gICAgICAgICAgOmRldGFpbD1cImRldGFpbFwiXG4gICAgICAgICAgQGNoYW5nZUl0ZW1zPVwiY2hhbmdlSXRlbXNcIlxuICAgICAgICAgIEBjaGFuZ2VQbGFjZT1cImNoYW5nZVBsYWNlXCJcbiAgICAgICAgLz5cblxuICAgICAgICA8IS0tIOWFiOagh+eCueaooeW8jyAtLT5cbiAgICAgICAgPG1lYXN1cmUtZGV0YWlsLXRlbXBsYXRlLTNcbiAgICAgICAgICB2LWlmPVwiZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gM1wiXG4gICAgICAgICAgcmVmPVwidGVtcGxhdGUtM1wiXG4gICAgICAgICAgOmRldGFpbD1cImRldGFpbFwiXG4gICAgICAgICAgQGNoYW5nZUl0ZW1zPVwiY2hhbmdlSXRlbXNcIlxuICAgICAgICAgIEBjaGFuZ2VQbGFjZT1cImNoYW5nZVBsYWNlXCJcbiAgICAgICAgLz5cbiAgICAgIDwvdGVtcGxhdGU+XG5cbiAgICAgIDxsb2FkaW5nLXN0YXR1cyA6aXMtZW1wdHk9XCIhZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aFwiIGVtcHR5LXRleHQ9XCLmmoLml6Dlrp7mtYvorrDlvZVcIiAvPlxuICAgIDwvdGVtcGxhdGU+XG5cbiAgICA8bG9hZGluZy1zdGF0dXMgOmlzLWxvYWRpbmc9XCJpc0xvYWRpbmdcIiAvPlxuXG4gICAgPHRlbXBsYXRlIHYtaWY9XCIhaXNMb2FkaW5nICYmICEoZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMyAmJiAhZHJhd2luZ1VybClcIj5cbiAgICAgIDxhcHAtYnV0dG9uLWdyb3VwXG4gICAgICAgIHYtaWY9XCJcbiAgICAgICAgICBkZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8XG4gICAgICAgICAgICBkZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCcgfHxcbiAgICAgICAgICAgIGRldGFpbC5tb2RlID09PSAncmVkbycgfHxcbiAgICAgICAgICAgIChkZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5JyAmJiBkZXRhaWwuaXNSZXBhaXIgJiYgIWRldGFpbC5pc1JlcGFpck1vZGUpXG4gICAgICAgIFwiXG4gICAgICAgIGZpeGVkLWJvdHRvbVxuICAgICAgICA6c2VhbWxlc3M9XCJkZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IGRldGFpbC5tb2RlID09PSAncmVkbydcIlxuICAgICAgPlxuICAgICAgICA8YXBwLWJ1dHRvblxuICAgICAgICAgIHYtaWY9XCJkZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IGRldGFpbC5tb2RlID09PSAncmVkbydcIlxuICAgICAgICAgIG5hbWU9XCLmmoLlrZhcIlxuICAgICAgICAgIHBsYWluXG4gICAgICAgICAgc3R5bGU9XCJ3aWR0aDogNTAlXCJcbiAgICAgICAgICA6ZGlzYWJsZWQ9XCJkZXRhaWwubW9kZSA9PT0gJ3JlZG8nXCJcbiAgICAgICAgICBAY2xpY2s9XCJzYXZlUHJvYmxlbUFuZFRpcFwiXG4gICAgICAgICAgQGRpc2FibGVkQ2xpY2s9XCJkaXNhYmxlZFNhdmVUaXBcIlxuICAgICAgICAvPlxuICAgICAgICA8YXBwLWJ1dHRvbiB2LWlmPVwiZGV0YWlsLm1vZGUgPT09ICdlZGl0J1wiIG5hbWU9XCLmj5DkuqTmo4Dmn6XorrDlvZVcIiBAY2xpY2s9XCJzdWJtaXRDaGVja1wiIC8+XG4gICAgICAgIDxhcHAtYnV0dG9uIHYtaWY9XCJkZXRhaWwubW9kZSA9PT0gJ3JlZG8nXCIgbmFtZT1cIuaPkOS6pFwiIEBjbGljaz1cInN1Ym1pdFJlZG9cIiAvPlxuICAgICAgICA8YXBwLWJ1dHRvbiB2LWlmPVwiZGV0YWlsLm1vZGUgPT09ICdyZWVkaXQnXCIgbmFtZT1cIuaPkOS6pOajgOafpeiusOW9lVwiIEBjbGljaz1cInJlc3VibWl0Q2hlY2tcIiAvPlxuICAgICAgICA8YXBwLWJ1dHRvblxuICAgICAgICAgIHYtaWY9XCJcbiAgICAgICAgICAgIGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknICYmXG4gICAgICAgICAgICAgIGRldGFpbC5pc1JlcGFpciAmJlxuICAgICAgICAgICAgICBkZXRhaWwubW9kZSA9PT0gJ3ZpZXcnICYmXG4gICAgICAgICAgICAgICFkZXRhaWwuaXNSZXBhaXJNb2RlXG4gICAgICAgICAgXCJcbiAgICAgICAgICBuYW1lPVwi5a6M5oiQ5pW05pS5XCJcbiAgICAgICAgICBAY2xpY2s9XCJzdWJtaXRSZXBhaXJcIlxuICAgICAgICAvPlxuICAgICAgPC9hcHAtYnV0dG9uLWdyb3VwPlxuICAgIDwvdGVtcGxhdGU+XG4gIDwvcGFnZS1jb250ZW50PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cblxuaW1wb3J0IENoZWNrR3VpZGUgZnJvbSAnQHNyYy93aWRnZXQvY2hlY2stZ3VpZGUvaW5kZXgudnVlJztcbmltcG9ydCBNZWFzdXJlRGV0YWlsVGVtcGxhdGUxIGZyb20gJy4vZGV0YWlsLXRlbXBsYXRlLTEnO1xuaW1wb3J0IE1lYXN1cmVEZXRhaWxUZW1wbGF0ZTIgZnJvbSAnLi9kZXRhaWwtdGVtcGxhdGUtMic7XG5pbXBvcnQgTWVhc3VyZURldGFpbFRlbXBsYXRlMyBmcm9tICcuL2RldGFpbC10ZW1wbGF0ZS0zJztcbmltcG9ydCBNZWFzdXJlRGV0YWlsTW9kZWwgZnJvbSAnQHNyYy9tb2RhbC9tZWFzdXJlL2RldGFpbC1tb2RlbC5qcyc7XG5pbXBvcnQgbG9jYWxTdG9yYWdlIGZyb20gJ0BzcmMvZnJhbWV3b3JrL2xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgbG9jYWxTdG9yYWdlS2V5cyBmcm9tICdAc3JjL2ZyYW1ld29yay9sb2NhbFN0b3JhZ2Uua2V5cyc7XG5pbXBvcnQgUG9wdXAgZnJvbSAnQHNyYy91dGlscy9wb3B1cCc7XG5pbXBvcnQgTWVhc3VyZVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL21lYXN1cmUvY29tbW9uLXNlcnZpY2UnO1xuLy8gaW1wb3J0IHsgZ2V0Q2FsY3VsYXRvciB9IGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vbWVhc3VyZS1jYWxjdWxhdG9yL2luZGV4LmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnTWVhc3VyZURldGFpbCcsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBDaGVja0d1aWRlLFxuICAgIE1lYXN1cmVEZXRhaWxUZW1wbGF0ZTEsXG4gICAgTWVhc3VyZURldGFpbFRlbXBsYXRlMixcbiAgICBNZWFzdXJlRGV0YWlsVGVtcGxhdGUzLFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgICAvLyBbeyBuYW1lOiAn5pa95belJywga2V5OiAncmVwYWlyJyB9LCB7IG5hbWU6ICfnm5HnkIYnLCBrZXk6ICdzdXBlcnZpc2lvbicgfSwgeyBuYW1lOiAn5bu66K6+Jywga2V5OiAnY29uc3RydWN0JyB9XVxuICAgICAgdGFiczogW10sXG4gICAgICBjdXJyZW50VGFiOiAnJyxcblxuICAgICAgYnVpbGRpbmdJZDogJycsXG4gICAgICB1bml0OiAnJyxcbiAgICAgIGZsb29yOiAnJyxcbiAgICAgIHJvb21JZDogJycsXG4gICAgICBjaGVja2l0ZW1JZDogJycsXG4gICAgICBwcm9ibGVtSWQ6ICcnLFxuXG4gICAgICBwbGFjZToge30sXG4gICAgICBpZGVudGl0eTogJycsXG4gICAgICBwcm9jZXNzTW9kZTogJycsXG4gICAgICAvKiDkuLvopoHnmoTmo4Dmn6XpobnvvIzmo4Dmn6Xpobnlj6/ku6XlpJrpgInvvIzkvYbmmK/lhbbkuK3lj6rmnInkuIDkuKrkuLvopoHmo4Dmn6XpoblcbiAgICAgICAqIFt75LiA57qn5qOA5p+l6aG5fSwge+S6jOe6p+ajgOafpemhuX1dXG4gICAgICAgKiDkuInmlrnop5LoibLnmoTmlbDmja7pg73mmK/moLnmja7ov5nkuKrkuLvopoHmo4Dmn6Xpobnmn6Xor6LnmoTvvIzkvYbmmK/lkITkuKrop5LoibLnmoTlhbfkvZPmo4Dmn6XpobnkuI3kuIDlrprnm7jlkIzvvIznlLHlkITkuKrpl67popjnmoTmmI7nu4blhrPlrppcbiAgICAgICAqIOS9huaYr+S4ieaWueinkuiJsuiCr+WumuaVsOaNruiCr+WumuS8mueUseS4u+imgeeahOajgOafpemhue+8jOavlOWmgu+8mlxuICAgICAgICog5pa95bel5pWw5o2u5qOA5p+l6aG577yaQSwgQiwgQyDvvIhBIOaYr+S4u+imgeajgOafpemhue+8jEIg5ZKMIEMg5piv5aSa6YCJ5qOA5p+l6aG55Yqg5YWl55qE77yJXG4gICAgICAgKiDnm5HnkIbmlbDmja7mo4Dmn6XpobnvvJpBLCBELCBFXG4gICAgICAgKiDlu7rorr7mlbDmja7mo4Dmn6XpobnvvJpBXG4gICAgICAgKi9cbiAgICAgIG1hc3RlckNoZWNraXRlbTogW10sXG4gICAgICBtb2RlbDogTWVhc3VyZURldGFpbE1vZGVsLFxuICAgICAgY2hlY2tJdGVtR3VpZGVJZHM6IFtdLCAvLyDlvZPliY3pgInkuK3nmoTmo4Dmn6XpoblcblxuICAgICAgLy8g5pa95bel5Y2V5L2N5pWw5o2uXG4gICAgICByZXBhaXJEYXRhOiB7fSxcbiAgICAgIC8vIOebkeeQhuWNleS9jeaVsOaNrlxuICAgICAgc3VwZXJ2aXNpb25EYXRhOiB7fSxcbiAgICAgIC8vIOW7uuiuvuWNleS9jeaVsOaNrlxuICAgICAgY29uc3RydWN0RGF0YToge30sXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBwcm9qSWQoKSB7XG4gICAgICBpZiAoXy5pc0VtcHR5KE1lYXN1cmVEZXRhaWxNb2RlbC5wbGFjZSkgfHwgXy5pc0VtcHR5KE1lYXN1cmVEZXRhaWxNb2RlbC5wbGFjZS5wcm9qZWN0KSkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gTWVhc3VyZURldGFpbE1vZGVsLnBsYWNlLnByb2plY3QuaWQ7XG4gICAgICB9XG4gICAgfSxcbiAgICAvLyDlvZPliY3pobXpnaLlsZXnpLrnmoTor6bmg4XvvIzot5/pmo8gdGFiIOWIh+aNou+8jOWGheWuueS8muaUueWPmFxuICAgIGRldGFpbCgpIHtcbiAgICAgIGxldCBkYXRhO1xuICAgICAgaWYgKHRoaXMuY3VycmVudFRhYiA9PT0gJ3JlcGFpcicpIHtcbiAgICAgICAgZGF0YSA9IHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUucmVwYWlyRGF0YTtcbiAgICAgICAgLy8gZGF0YSA9IHRoaXMucmVwYWlyRGF0YTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50VGFiID09PSAnc3VwZXJ2aXNpb24nKSB7XG4gICAgICAgIGRhdGEgPSB0aGlzLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnN1cGVydmlzaW9uRGF0YTtcbiAgICAgICAgLy8gZGF0YSA9IHRoaXMuc3VwZXJ2aXNpb25EYXRhO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlbnRUYWIgPT09ICdjb25zdHJ1Y3QnKSB7XG4gICAgICAgIGRhdGEgPSB0aGlzLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLmNvbnN0cnVjdERhdGE7XG4gICAgICAgIC8vIGRhdGEgPSB0aGlzLmNvbnN0cnVjdERhdGE7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9LFxuICAgIC8vIGNoZWNrSXRlbUd1aWRlSWRzKCkge1xuICAgIC8vICAgbGV0IGNoZWNraXRlbXMgPSB0aGlzLmRldGFpbCA/IHRoaXMuZGV0YWlsLmNoZWNrSXRlbXMgOiAodGhpcy5jaGVja2l0ZW1zIHx8IFtdKTtcbiAgICAvLyAgIHJldHVybiBfLm1hcChjaGVja2l0ZW1zIHx8IFtdLCBpdGVtID0+IHtcbiAgICAvLyAgICAgcmV0dXJuIGl0ZW0uaWQ7XG4gICAgLy8gICB9KTtcbiAgICAvLyB9LFxuICAgIGRyYXdpbmdVcmwoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICAodGhpcy5kZXRhaWwgJiZcbiAgICAgICAgICB0aGlzLmRldGFpbC5kcmF3aW5nX2ZpbGUgJiZcbiAgICAgICAgICB0aGlzLmRldGFpbC5kcmF3aW5nX2ZpbGVbMF0gJiZcbiAgICAgICAgICB0aGlzLmRldGFpbC5kcmF3aW5nX2ZpbGVbMF0udXJsKSB8fFxuICAgICAgICAnJ1xuICAgICAgKTtcbiAgICB9LFxuICB9LFxuICBhY3RpdmF0ZWQoKSB7XG4gICAgaWYgKCF0aGlzLiRyb3V0ZXIuaXNCYWNrKSB7XG4gICAgICB0aGlzLmJ1aWxkaW5nSWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5idWlsZGluZ0lkO1xuICAgICAgdGhpcy51bml0ID0gdGhpcy4kcm91dGUucXVlcnkudW5pdDtcbiAgICAgIHRoaXMuZmxvb3IgPSB0aGlzLiRyb3V0ZS5xdWVyeS5mbG9vcjtcbiAgICAgIHRoaXMucm9vbUlkID0gdGhpcy4kcm91dGUucXVlcnkucm9vbUlkO1xuICAgICAgdGhpcy5jaGVja2l0ZW1JZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmNoZWNraXRlbUlkO1xuICAgICAgdGhpcy5wcm9ibGVtSWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5wcm9ibGVtSWQ7XG4gICAgICB0aGlzLnZpZXdJZGVudGl0eSA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnZpZXdJZGVudGl0eTtcbiAgICAgIC8vIOWPquivu+eKtuaAge+8jOS4jeiDveWIh+aNoiB0YWLvvIzkuI3og73liIfmjaLpg6jkvY3lkozmo4Dmn6XpoblcbiAgICAgIHRoaXMucmVhZG9ubHkgPSB0aGlzLiRyb3V0ZS5xdWVyeS5yZWFkb25seTtcblxuICAgICAgdGhpcy5pbml0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIOi/lOWbnumhtemdoueahOaXtuWAme+8jOWPquWKoOi9veW9k+WJjSB0YWJcbiAgICAgIHRoaXMucmVsb2FkRGV0YWlsKCk7XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaW5pdCgpIHtcbiAgICAgIGxldCB7XG4gICAgICAgIHJvb21JZCxcbiAgICAgICAgYnVpbGRpbmdJZCxcbiAgICAgICAgdW5pdCxcbiAgICAgICAgZmxvb3IsXG4gICAgICAgIGNoZWNraXRlbUlkLFxuICAgICAgICBwcm9ibGVtSWQsXG4gICAgICAgIHZpZXdJZGVudGl0eSxcbiAgICAgICAgcmVhZG9ubHksXG4gICAgICB9ID0gdGhpcztcbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcblxuICAgICAgcmV0dXJuIE1lYXN1cmVEZXRhaWxNb2RlbC5pbml0KFxuICAgICAgICByb29tSWQsXG4gICAgICAgIGJ1aWxkaW5nSWQsXG4gICAgICAgIHVuaXQsXG4gICAgICAgIGZsb29yLFxuICAgICAgICBjaGVja2l0ZW1JZCxcbiAgICAgICAgcHJvYmxlbUlkLFxuICAgICAgICB2aWV3SWRlbnRpdHksXG4gICAgICAgIHJlYWRvbmx5XG4gICAgICApXG4gICAgICAgIC50aGVuKGRldGFpbERhdGEgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdkZXRhaWxEYXRhID09PT09JywgZGV0YWlsRGF0YSk7XG4gICAgICAgICAgdGhpcy5yZXBhaXJEYXRhID0gZGV0YWlsRGF0YS5yZXBhaXI7XG4gICAgICAgICAgdGhpcy5zdXBlcnZpc2lvbkRhdGEgPSBkZXRhaWxEYXRhLnN1cGVydmlzaW9uO1xuICAgICAgICAgIHRoaXMuY29uc3RydWN0RGF0YSA9IGRldGFpbERhdGEuY29uc3RydWN0O1xuXG4gICAgICAgICAgdGhpcy5tYXN0ZXJDaGVja2l0ZW0gPSBNZWFzdXJlRGV0YWlsTW9kZWwuZmlyc3RDaGVja2l0ZW07XG4gICAgICAgICAgdGhpcy50YWJzID0gTWVhc3VyZURldGFpbE1vZGVsLnRhYnM7XG4gICAgICAgICAgdGhpcy5jdXJyZW50VGFiID0gdGhpcy50YWJzW3RoaXMudGFicy5sZW5ndGggLSAxXS5rZXk7XG4gICAgICAgICAgbGV0IGNoZWNraXRlbUlkcyA9IF8ubWFwKHRoaXMuZGV0YWlsID8gdGhpcy5kZXRhaWwuY2hlY2tJdGVtcyA6IFtdLCAnaWQnKSxcbiAgICAgICAgICAgIGxlbiA9IHRoaXMuY2hlY2tJdGVtR3VpZGVJZHMubGVuZ3RoO1xuICAgICAgICAgIHRoaXMuY2hlY2tJdGVtR3VpZGVJZHMuc3BsaWNlKDAsIGxlbiwgLi4uY2hlY2tpdGVtSWRzKTtcbiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgY2hhbmdlVGFiKHRhYikge1xuICAgICAgbGV0IGNoZWNraXRlbUlkID0gXy5pc0VtcHR5KHRoaXMubWFzdGVyQ2hlY2tpdGVtKVxuICAgICAgICA/IHRoaXMuY2hlY2tpdGVtSWRcbiAgICAgICAgOiB0aGlzLm1hc3RlckNoZWNraXRlbVsxXS5pZDtcblxuICAgICAgdGhpcy5jdXJyZW50VGFiID0gdGFiLmtleTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC50YWJzSWRlbnRpdHkgPSB0YWIuaWRlbnRpdHk7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwubG9hZERldGFpbEJ5SWRlbnRpdHkodGFiLmlkZW50aXR5LCBbY2hlY2tpdGVtSWRdKS50aGVuKGRldGFpbERhdGEgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnZGV0YWlsRGF0YSA9PT09PScsIGRldGFpbERhdGEpO1xuXG4gICAgICAgIHRoaXMucmVwYWlyRGF0YSA9IGRldGFpbERhdGEucmVwYWlyO1xuICAgICAgICB0aGlzLnN1cGVydmlzaW9uRGF0YSA9IGRldGFpbERhdGEuc3VwZXJ2aXNpb247XG4gICAgICAgIHRoaXMuY29uc3RydWN0RGF0YSA9IGRldGFpbERhdGEuY29uc3RydWN0O1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBjaGFuZ2VJdGVtcyhpdGVtcywgaWRzKSB7XG4gICAgICB0aGlzLm1hc3RlckNoZWNraXRlbS5zcGxpY2UoMCwgMiwgLi4uaXRlbXMpO1xuICAgICAgdGhpcy5jaGVja2l0ZW1JZCA9IGl0ZW1zWzFdLmlkO1xuXG4gICAgICBsZXQgbGVuID0gdGhpcy5jaGVja0l0ZW1HdWlkZUlkcy5sZW5ndGg7XG4gICAgICB0aGlzLmNoZWNrSXRlbUd1aWRlSWRzLnNwbGljZSgwLCBsZW4sIC4uLmlkcyk7XG4gICAgfSxcbiAgICBjaGFuZ2VQbGFjZShwbGFjZSkge1xuICAgICAgaWYgKCFwbGFjZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucGxhY2UgPSBwbGFjZTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wcm9qZWN0ID0gcGxhY2UucHJvamVjdDtcbiAgICAgIGxldCBidWlsZGluZ05hbWUgPSAocGxhY2UuYnVpbGRpbmcgJiYgcGxhY2UuYnVpbGRpbmcubmFtZSkgfHwgJyc7XG4gICAgICBsZXQgdW5pdE5hbWUgPSAocGxhY2UudW5pdCAmJiBwbGFjZS51bml0Lm5hbWUpIHx8ICcnO1xuICAgICAgbGV0IGZsb29yTmFtZSA9IChwbGFjZS5mbG9vciAmJiBwbGFjZS5mbG9vci5uYW1lKSB8fCAnJztcbiAgICAgIGxldCByb29tTmFtZSA9IChwbGFjZS5yb29tICYmIHBsYWNlLnJvb20ubmFtZSkgfHwgJyc7XG4gICAgICBsZXQgcGxhY2VOYW1lID0gYnVpbGRpbmdOYW1lICsgdW5pdE5hbWUgKyAocm9vbU5hbWUgfHwgZmxvb3JOYW1lKTtcbiAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wbGFjZUZ1bGxuYW1lID0gcGxhY2VOYW1lO1xuICAgIH0sXG4gICAgdmFsdWVDaGFuZ2Uoa2V5LCB2YWx1ZSkge30sXG5cbiAgICByZWxvYWREZXRhaWwoKSB7XG4gICAgICAvLyDov5Tlm57pobXpnaLnmoTml7blgJnvvIzlj6rliqDovb3lvZPliY0gdGFiXG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkucHJvYmxlbUlkKSB7XG4gICAgICAgIHJldHVybiBNZWFzdXJlRGV0YWlsTW9kZWwubG9hZERldGFpbEJ5SWQodGhpcy5wcm9ibGVtSWQpLnRoZW4oZGV0YWlsRGF0YSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2RldGFpbERhdGEgPT09PT0nLCBkZXRhaWxEYXRhKTtcblxuICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGV0IGlkZW50aXR5ID0gTWVhc3VyZURldGFpbE1vZGVsLnRhYnNJZGVudGl0eTtcbiAgICAgICAgcmV0dXJuIE1lYXN1cmVEZXRhaWxNb2RlbC5sb2FkRGV0YWlsQnlJZGVudGl0eShpZGVudGl0eSkudGhlbihkZXRhaWxEYXRhID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnZGV0YWlsRGF0YSA9PT09PScsIGRldGFpbERhdGEpO1xuICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiDojrflj5bln7rnoYDmlbDmja5cbiAgICAgKiDpg6jkvY3vvJrmoIfmrrXvvIzmpbzmoIvvvIzljZXlhYPvvIzmpbzlsYLvvIzmiL/pl7RcbiAgICAgKiDnlKjmiLfop5LoibJcbiAgICAgKiDpobbpg6ggdGFic1xuICAgICAqL1xuICAgIGdldEJhc2VEYXRhKCkge1xuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmdldFBsYWNlRGF0YSh0aGlzLmJ1aWxkaW5nSWQsIHRoaXMudW5pdCwgdGhpcy5mbG9vciwgdGhpcy5yb29tSWQpXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgdGhpcy5wbGFjZSA9IHJlcztcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5nZXRNZWFzdXJlVXNlcklkZW50aXR5KCkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgdGhpcy5pZGVudGl0eSA9IHJlcztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5nZXRJZGVudGl0eUFuZFRhYnModGhpcy5wbGFjZS5zZWN0aW9uLmlkLCB0aGlzLmlkZW50aXR5KS50aGVuKFxuICAgICAgICAgICAgcmVzID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RhYnMgPT09PT0nLCByZXMpO1xuICAgICAgICAgICAgICAvLyB0aGlzLnRhYnMgPSByZXM7XG5cbiAgICAgICAgICAgICAgaWYgKHRoaXMudmlld0lkZW50aXR5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50VGFiID0gXy5maW5kKHJlcywgeyBpZGVudGl0eTogdGhpcy5pZGVudGl0eSB9KTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUYWIgPSByZXNbcmVzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRoaXMuYmF0Y2hJZCA9IHRoaXMuY3VycmVudFRhYi5iYXRjaC5pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmdldE1lYXN1cmVDaGVja2l0ZW1SZWFsUHJvY2Vzc01vZGUoXG4gICAgICAgICAgICB0aGlzLmJ1aWxkaW5nSWQsXG4gICAgICAgICAgICB0aGlzLmNoZWNraXRlbUlkXG4gICAgICAgICAgKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3NNb2RlID0gcmVzO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgZ2V0RGV0YWlsRGF0YSgpIHtcbiAgICAgIGxldCBnZXREZXRhaWxEYXRhUHJvbWlzZTtcblxuICAgICAgaWYgKHRoaXMucHJvYmxlbUlkKSB7XG4gICAgICAgIC8vIOmAmui/hyBpZCDmn6Xor6LmlbDmja5cbiAgICAgICAgZ2V0RGV0YWlsRGF0YVByb21pc2UgPSBNZWFzdXJlU2VydmljZS5nZXRQcm9ibGVtQnlJZCh0aGlzLnByb2JsZW1JZCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tpdGVtSWQpIHtcbiAgICAgICAgLy8g5qC55o2uIOmDqOS9jSvmo4Dmn6Xpobkr5om55qyhIOafpeivouaVsOaNrlxuICAgICAgICBnZXREZXRhaWxEYXRhUHJvbWlzZSA9IHRoaXMuZ2V0QmFzZURhdGEoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5nZXREZXRhaWxEYXRhQnlCYXRjaCh0aGlzLmJhdGNoSWQsIHRoaXMuY2hlY2tpdGVtSWQpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGdldERldGFpbERhdGFQcm9taXNlID0gUHJvbWlzZS5yZWplY3QoJ+WPguaVsOmUmeivrycpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZ2V0RGV0YWlsRGF0YVByb21pc2VcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnZGV0YWlsRGF0YSA9PT09PT0nLCByZXMpO1xuXG4gICAgICAgICAgLyogcHJvYmxlbS5jYWxjdWxhdG9yID0gZ2V0Q2FsY3VsYXRvcih7XG4gICAgICAgICAgICBlbnRyeU1vZGU6IHByb2JsZW0uZW50cnlfcmVxdWlyZW1lbnRzLFxuICAgICAgICAgICAgcGFzc3JhdGVNb2RlOiBwcm9ibGVtLnBhc3NyYXRlX21vZGUsXG4gICAgICAgICAgICBtaW46IHByb2JsZW0uc3RhbmRhcmRfbWluLFxuICAgICAgICAgICAgbWF4OiBwcm9ibGVtLnN0YW5kYXJkX21heCxcbiAgICAgICAgICAgIGV4dGVuc2lvbjogcHJvYmxlbS5leHRlbnNpb24sXG4gICAgICAgICAgICBoYXNEaWFncmFtOiAhXy5pc0VtcHR5KHByb2JsZW0uZHJhd2luZ19maWxlKSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGNvbnNvbGUubG9nKCdwcm9ibGVtLmRyYXdpbmdfZmlsZSA9PT09PScsIHByb2JsZW0uZHJhd2luZ19maWxlLCBwcm9ibGVtKTtcblxuICAgICAgICAgIGNvbnNvbGUubG9nKCdwcm9ibGVtLmNhbGN1bGF0b3IgPT09PT09PScsIHByb2JsZW0uY2FsY3VsYXRvcik7XG4gICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICAncHJvYmxlbS5jYWxjdWxhdG9yID09PT09PT0nLFxuICAgICAgICAgICAgcHJvYmxlbS5jYWxjdWxhdG9yLnNldFBvaW50U3RhdGUocHJvYmxlbS5yZWFsaXR5VmFsKVxuICAgICAgICAgICk7ICovXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBnZXREZXRhaWxEYXRhQnlCYXRjaChiYXRjaElkLCBjaGVja2l0ZW1JZHMsIGRlbGV0ZUV4dHJhKSB7XG4gICAgICBpZiAoIWJhdGNoSWQpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCfnvLrlsJHlj4LmlbDvvIzmibnmrKEgaWQnKTtcbiAgICAgIH1cbiAgICAgIGlmICghY2hlY2tpdGVtSWRzKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgn57y65bCR5Y+C5pWw77yM5qOA5p+l6aG5IGlkJyk7XG4gICAgICB9XG4gICAgICBsZXQgcHJvYmxlbVByb21pc2U7XG5cbiAgICAgIGNoZWNraXRlbUlkcyA9IF8uaXNBcnJheShjaGVja2l0ZW1JZHMpID8gY2hlY2tpdGVtSWRzIDogW2NoZWNraXRlbUlkc107XG5cbiAgICAgIGlmICh0aGlzLnByb2Nlc3NNb2RlID09PSAxKSB7XG4gICAgICAgIC8vIOaMieaIt1xuICAgICAgICBwcm9ibGVtUHJvbWlzZSA9IE1lYXN1cmVTZXJ2aWNlLmdldFJvb21Qcm9ibGVtKFxuICAgICAgICAgIHRoaXMucGxhY2Uucm9vbS5pZCxcbiAgICAgICAgICBjaGVja2l0ZW1JZHMsXG4gICAgICAgICAgYmF0Y2hJZCxcbiAgICAgICAgICBkZWxldGVFeHRyYVxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnByb2Nlc3NNb2RlID09PSAyKSB7XG4gICAgICAgIC8vIOS4jeWIhuWNleWFg+aVtOWxglxuICAgICAgICBwcm9ibGVtUHJvbWlzZSA9IE1lYXN1cmVTZXJ2aWNlLmdldEZsb29yUHJvYmxlbShcbiAgICAgICAgICB0aGlzLnBsYWNlLmJ1aWxkaW5nLmlkLFxuICAgICAgICAgICcnLFxuICAgICAgICAgIHRoaXMucGxhY2UuZmxvb3IuaWQsXG4gICAgICAgICAgY2hlY2tpdGVtSWRzLFxuICAgICAgICAgIGJhdGNoSWQsXG4gICAgICAgICAgMixcbiAgICAgICAgICBkZWxldGVFeHRyYVxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnByb2Nlc3NNb2RlID09PSA1KSB7XG4gICAgICAgIC8vIOWIhuWNleWFg+aVtOWxglxuICAgICAgICBwcm9ibGVtUHJvbWlzZSA9IE1lYXN1cmVTZXJ2aWNlLmdldEZsb29yUHJvYmxlbShcbiAgICAgICAgICB0aGlzLnBsYWNlLmJ1aWxkaW5nLmlkLFxuICAgICAgICAgIHRoaXMucGxhY2UudW5pdC5pZCxcbiAgICAgICAgICB0aGlzLnBsYWNlLmZsb29yLmlkLFxuICAgICAgICAgIGNoZWNraXRlbUlkcyxcbiAgICAgICAgICBiYXRjaElkLFxuICAgICAgICAgIDUsXG4gICAgICAgICAgZGVsZXRlRXh0cmFcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByb2JsZW1Qcm9taXNlXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgaWYgKF8uaXNFbXB0eShyZXMpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5pZGVudGl0eSA9PT0gdGhpcy5jdXJyZW50VGFiLmlkZW50aXR5ICYmICF0aGlzLnJlYWRvbmx5KSB7XG4gICAgICAgICAgICAgIC8vIOWIm+W7uuaWsOmXrumimFxuICAgICAgICAgICAgICByZXR1cm4gTWVhc3VyZVNlcnZpY2UuY3JlYXRlTmV3RGV0YWlsKFxuICAgICAgICAgICAgICAgIGNoZWNraXRlbUlkcyxcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUYWIuYmF0Y2gsXG4gICAgICAgICAgICAgICAgdGhpcy5wbGFjZVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICcnLFxuICAgICAgICAgICAgICAgIG1vZGU6ICcnLFxuICAgICAgICAgICAgICAgIHByb2JsZW1EYXRhOiBbXSxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGRldGFpbERhdGEgPT4ge1xuICAgICAgICAgIGRldGFpbERhdGEgPSBNZWFzdXJlU2VydmljZS5maWxsUHJvYmxlbURhdGEoZGV0YWlsRGF0YSwgY2hlY2tpdGVtSWRzLCB0aGlzLnBsYWNlKTtcbiAgICAgICAgICByZXR1cm4gZGV0YWlsRGF0YTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIHNhdmVQcm9ibGVtKCkge1xuICAgICAgbGV0IGRldGFpbCA9IHRoaXMuZGV0YWlsO1xuICAgICAgaWYgKGRldGFpbC5tb2RlID09PSAncmVlZGl0JyB8fCBkZXRhaWwubW9kZSA9PT0gJ3JlZG8nKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLnNhdmUoZGV0YWlsKVxuICAgICAgICAudGhlbihkZXRhaWxJZCA9PiB7XG4gICAgICAgICAgaWYgKGRldGFpbElkKSB7XG4gICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5kZXRhaWwsICdpZCcsIGRldGFpbElkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIHNhdmVQcm9ibGVtQW5kVGlwKCkge1xuICAgICAgdGhpcy5zYXZlUHJvYmxlbSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICBQb3B1cC5hbGVydCgn5L+d5a2Y5oiQ5YqfJyk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRpc2FibGVkU2F2ZVRpcCgpIHtcbiAgICAgIFBvcHVwLmFsZXJ0KCfigJzlho3mtYvkuIDpgY3igJ3lip/og73mmoLkuI3mlK/mjIHmmoLlrZgnKTtcbiAgICB9LFxuXG4gICAgc2F2ZUFyZWFIaXN0b3J5KCkge1xuICAgICAgLy8g5L+d5a2Y5qOA5p+l6aG555qE6buY6K6k5rWL5Yy65pWw5o2u77yI5rWL5Yy65pWw77yM54K55pWw77yJXG4gICAgICBsZXQgbWVhc3VyZUl0ZW1zT2JqZWN0ID1cbiAgICAgICAgbG9jYWxTdG9yYWdlLmdldE9iamVjdChcbiAgICAgICAgICBsb2NhbFN0b3JhZ2VLZXlzLk1FQVNVUkVfVjNfQ0hFQ0tfSVRFTVNfSU5JVF9EQVRBLFxuICAgICAgICAgIGxvY2FsU3RvcmFnZS5sZXZlbC51c2VyXG4gICAgICAgICkgfHwge307XG5cbiAgICAgIF8uZWFjaCh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIG1lYXN1cmVJdGVtc09iamVjdFtwcm9ibGVtLmNoZWNrSXRlbS5pZF0gPSB7XG4gICAgICAgICAgYXJlYU51bTogcHJvYmxlbS5hcmVhTnVtLFxuICAgICAgICAgIGFyZWFEYXRhOiBwcm9ibGVtLmFyZWFEYXRhLFxuICAgICAgICAgIHBhc3NyYXRlX21vZGU6IHByb2JsZW0ucGFzc3JhdGVfbW9kZSxcbiAgICAgICAgICBwb2ludE51bTogcHJvYmxlbS5wb2ludE51bSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgICAgbG9jYWxTdG9yYWdlLnNhdmVPYmplY3QoXG4gICAgICAgIGxvY2FsU3RvcmFnZUtleXMuTUVBU1VSRV9WM19DSEVDS19JVEVNU19JTklUX0RBVEEsXG4gICAgICAgIG1lYXN1cmVJdGVtc09iamVjdCxcbiAgICAgICAgbG9jYWxTdG9yYWdlLmxldmVsLnVzZXJcbiAgICAgICk7XG4gICAgfSxcblxuICAgIGNoZWNrU3VibWl0RGF0YSgpIHtcbiAgICAgIGxldCB0ZW1wbGF0ZTtcblxuICAgICAgaWYgKHRoaXMuZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMSkge1xuICAgICAgICB0ZW1wbGF0ZSA9IHRoaXMuJHJlZnNbJ3RlbXBsYXRlLTEnXTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5kZXRhaWwuZW50cnlfcmVxdWlyZW1lbnRzID09PSAyKSB7XG4gICAgICAgIHRlbXBsYXRlID0gdGhpcy4kcmVmc1sndGVtcGxhdGUtMiddO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmRldGFpbC5lbnRyeV9yZXF1aXJlbWVudHMgPT09IDMpIHtcbiAgICAgICAgdGVtcGxhdGUgPSB0aGlzLiRyZWZzWyd0ZW1wbGF0ZS0zJ107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0ZW1wbGF0ZSAmJiB0ZW1wbGF0ZS5jaGVja1N1Ym1pdERhdGEoKTtcbiAgICB9LFxuXG4gICAgLy8g5o+Q5Lqk5qOA5p+l6K6w5b2VXG4gICAgc3VibWl0Q2hlY2soKSB7XG4gICAgICBpZiAoIXRoaXMuY2hlY2tTdWJtaXREYXRhKHRoaXMuZGV0YWlsKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyDlpoLmnpzmmK/lhYjmoIfngrnmqKHlvI/vvIzmj5DkuqTliY3orqHnrpfkuIDkuIsgMjAyMC0wNy0wOFxuICAgICAgaWYgKHRoaXMuZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMykge1xuICAgICAgICAodGhpcy5kZXRhaWwucHJvYmxlbURhdGEgfHwgW10pLmZvckVhY2gocHJvYmxlbSA9PiB7XG4gICAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnBvaW50c0hhbmRsZShwcm9ibGVtKTtcbiAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5zdWJtaXQodGhpcy5kZXRhaWwpLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5kZXRhaWwuZW50cnlfcmVxdWlyZW1lbnRzID09PSAyKSB7XG4gICAgICAgICAgdGhpcy5zYXZlQXJlYUhpc3RvcnkoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNhdmVTZWN0aW9uQ29udHJhY3RvcigpO1xuICAgICAgICB0aGlzLnJlbG9hZERldGFpbCgpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOS/ruaUueaVsOWAvO+8jOaPkOS6pFxuICAgIHJlc3VibWl0Q2hlY2soKSB7XG4gICAgICBpZiAoIXRoaXMuY2hlY2tTdWJtaXREYXRhKHRoaXMuZGV0YWlsKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyDlpoLmnpzmmK/lhYjmoIfngrnmqKHlvI/vvIzmj5DkuqTliY3orqHnrpfkuIDkuIsgMjAyMC0wNy0wOFxuICAgICAgaWYgKHRoaXMuZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMykge1xuICAgICAgICAodGhpcy5kZXRhaWwucHJvYmxlbURhdGEgfHwgW10pLmZvckVhY2gocHJvYmxlbSA9PiB7XG4gICAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnBvaW50c0hhbmRsZShwcm9ibGVtKTtcbiAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucHJvYmxlbUhhbmRsZShwcm9ibGVtKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gTWVhc3VyZVNlcnZpY2UucmVzdWJtaXRDaGVjayh0aGlzLmRldGFpbCkudGhlbigoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLmRldGFpbC5lbnRyeV9yZXF1aXJlbWVudHMgPT09IDIpIHtcbiAgICAgICAgICB0aGlzLnNhdmVBcmVhSGlzdG9yeSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2F2ZVNlY3Rpb25Db250cmFjdG9yKCk7XG4gICAgICAgIHRoaXMucmVsb2FkRGV0YWlsKCk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgc3VibWl0UmVwYWlyKCkge1xuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLnN1Ym1pdFJlcGFpcih0aGlzLmRldGFpbCkudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMucmVsb2FkRGV0YWlsKCk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgc3VibWl0UmVkbygpIHtcbiAgICAgIGlmICghdGhpcy5jaGVja1N1Ym1pdERhdGEodGhpcy5kZXRhaWwpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIOWmguaenOaYr+WFiOagh+eCueaooeW8j++8jOaPkOS6pOWJjeiuoeeul+S4gOS4iyAyMDIwLTA3LTA4XG4gICAgICBpZiAodGhpcy5kZXRhaWwuZW50cnlfcmVxdWlyZW1lbnRzID09PSAzKSB7XG4gICAgICAgICh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSB8fCBbXSkuZm9yRWFjaChwcm9ibGVtID0+IHtcbiAgICAgICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucG9pbnRzSGFuZGxlKHByb2JsZW0pO1xuICAgICAgICAgIE1lYXN1cmVEZXRhaWxNb2RlbC5wcm9ibGVtSGFuZGxlKHByb2JsZW0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBNZWFzdXJlU2VydmljZS5zdWJtaXRSZWRvKHRoaXMuZGV0YWlsKVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuZGV0YWlsLmVudHJ5X3JlcXVpcmVtZW50cyA9PT0gMikge1xuICAgICAgICAgICAgdGhpcy5zYXZlQXJlYUhpc3RvcnkoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5zYXZlU2VjdGlvbkNvbnRyYWN0b3IoKTtcbiAgICAgICAgICB0aGlzLnJlbG9hZERldGFpbCgpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g5L+d5a2Y5qCH5q615pa95bel5Y2V5L2N44CC55So5oi36YCJ5oup5LqG5p+Q5Liq5pa95bel5Y2V5L2N77yM5o+Q5Lqk5pWw5o2u5ZCO77yM6K6w5b2VIOagh+autS3mlr3lt6XljZXkvY3nmoTlhbPns7tcbiAgICBzYXZlU2VjdGlvbkNvbnRyYWN0b3IoKSB7XG4gICAgICB2YXIgc2VjdGlvbklkID0gdGhpcy5kZXRhaWwucGxhY2Uuc2VjdGlvbi5pZDtcblxuICAgICAgdmFyIHNlY3Rpb25Db250cmFjdG9ycyA9XG4gICAgICAgIGxvY2FsU3RvcmFnZS5nZXRVc2VyT2JqZWN0KGxvY2FsU3RvcmFnZUtleXMuTUVBU1VSRV9TRUNUSU9OX0NPTlRSQUNUT1IpIHx8IHt9O1xuXG4gICAgICBsZXQgY29udHJhY3RvciA9XG4gICAgICAgIHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhICYmXG4gICAgICAgIHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhWzBdICYmXG4gICAgICAgIHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhWzBdLmNvbnRyYWN0b3I7XG5cbiAgICAgIGlmICghXy5pc0VtcHR5KGNvbnRyYWN0b3IpKSB7XG4gICAgICAgIHNlY3Rpb25Db250cmFjdG9yc1tzZWN0aW9uSWRdID0gY29udHJhY3Rvci5pZDtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNhdmVVc2VyT2JqZWN0KFxuICAgICAgICAgIGxvY2FsU3RvcmFnZUtleXMuTUVBU1VSRV9TRUNUSU9OX0NPTlRSQUNUT1IsXG4gICAgICAgICAgc2VjdGlvbkNvbnRyYWN0b3JzXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLmhlYWRlci10YWJzIHtcbiAgZm9udC1zaXplOiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uaGVhZGVyLXRhYiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgcGFkZGluZzogMTBweDtcbiAgaGVpZ2h0OiA0NHB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBvcGFjaXR5OiAwLjY1O1xufVxuLmhlYWRlci10YWI6Zmlyc3QtY2hpbGQge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG4uaGVhZGVyLXRhYjpsYXN0LWNoaWxkIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbn1cbi5oZWFkZXItdGFiLm9uIHtcbiAgb3BhY2l0eTogMTtcbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWU0NjUzMTljJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RpYWxvZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2RpYWxvZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZGlhbG9nLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWU0NjUzMTljJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImU0NjUzMTljXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3RyYW5zaXRpb24nLHthdHRyczp7XCJuYW1lXCI6XCJzbGlkZS1yaWdodFwifX0sWyhfdm0uc2hvdyk/X2MoJ3BhZ2UtY29udGVudCcse2F0dHJzOntcInRpdGxlXCI6X3ZtLnRpdGxlLFwibW9kZVwiOlwiZGlhbG9nXCIsXCJvbi1jbG9zZVwiOl92bS5jbG9zZUV2ZW50fX0sWyhcbiAgICAgICAgKF92bS5yaWdodEJ0biAmJiAhX3ZtLmVkaXRvckFkZERhdGEpIHx8XG4gICAgICAgICAgKF92bS5yaWdodEJ0biAmJiBfdm0uZWRpdG9yQWRkRGF0YSAmJiAoIV92bS5zZWxlY3RlZC5uYW1lIHx8IF92bS5jdXN0b21BZGRTdXBwbGllcihfdm0uc2VsZWN0ZWQubmFtZSkgPiAtMSkpXG4gICAgICApP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImhlYWRlci1idG5cIixhdHRyczp7XCJzbG90XCI6XCJoZWFkZXItYmFyLXJpZ2h0XCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ucmlnaHRCdG5FdmVudChfdm0uY2F0ZWdvcnkpfX0sc2xvdDpcImhlYWRlci1iYXItcmlnaHRcIn0sW192bS5fdihcIlxcbiAgICAgIFwiK192bS5fcyhfdm0ucmlnaHRCdG4pK1wiXFxuICAgIFwiKV0pOl92bS5fZSgpLF9jKCdzY3JvbGxlcicse2F0dHJzOntcImhhcy1uZXh0XCI6IV92bS5zZWFyY2hTdGF0dXMgJiYgIV92bS5ncm91cGluZyAmJiBfdm0ub3B0aW9uc0xpbWl0IDwgX3ZtLm9wdGlvbnMubGVuZ3RoLFwiZW5kLXRleHRcIjpcIlwiLFwiaXMtZW1wdHlcIjpfdm0ub3B0aW9uc1Nob3cubGVuZ3RoID09PSAwfSxvbjp7XCJsb2FkTmV4dFwiOl92bS5wYWdlT3B0aW9uc319LFsoX3ZtLnNlYXJjaEJhcik/X2MoJ2FwcC1zZWFyY2gtYmFyJyx7cmVmOlwiYXBwLXNlYXJjaC1iYXJcIixhdHRyczp7XCJwbGFjZWhvbGRlclwiOlwi5pCc57SiXCIsXCJoaXN0b3J5LWtleVwiOl92bS5zdG9yYWdlS2V5fSxvbjp7XCJjaGFuZ2VTZWFyY2hTdGF0dXNcIjpfdm0ub25TZWFyY2hUeXBlQ2hhbmdlfSxtb2RlbDp7dmFsdWU6KF92bS5rZXl3b3JkKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLmtleXdvcmQ9JCR2fSxleHByZXNzaW9uOlwia2V5d29yZFwifX0pOl92bS5fZSgpLChfdm0uc2VhcmNoU3RhdHVzKT9bKF92bS5rZXl3b3JkKT9bKF92bS5ncm91cGluZyk/X2MoJ3Zhbi1jb2xsYXBzZScse21vZGVsOnt2YWx1ZTooX3ZtLmFjdGl2ZVRhYiksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5hY3RpdmVUYWI9JCR2fSxleHByZXNzaW9uOlwiYWN0aXZlVGFiXCJ9fSxfdm0uX2woKF92bS5zZWFyY2hEYXRhKSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCd2YW4tY29sbGFwc2UtaXRlbScse2tleTprZXksYXR0cnM6e1widGl0bGVcIjppdGVtLm5hbWUsXCJuYW1lXCI6a2V5fX0sX3ZtLl9sKChpdGVtLmNoaWxkcmVuKSxmdW5jdGlvbih2LGspe3JldHVybiBfYygnaXRlbScse2tleTprLGF0dHJzOntcImNoZWNrZWRcIjpfdm0uY2hlY2tlZEl0ZW0uaWQgPT09IHYuaWQsXCJpdGVtXCI6dixcImxpbmUtbGltaXRcIjpfdm0ubGluZUxpbWl0LFwicmVuZGVyLWZpZWxkXCI6XCJyZW5hbWVcIn0sb246e1wiY2xpY2tcIjpfdm0uc2VsZWN0SXRlbX19KX0pKX0pKTpfdm0uX2UoKSwoX3ZtLmdyb3VwaW5nICYmICFfdm0uc2VhcmNoRGF0YS5sZW5ndGgpP19jKCdsb2FkaW5nLXN0YXR1cycse2F0dHJzOntcImlzLWVtcHR5XCI6dHJ1ZSxcImVtcHR5LXRleHRcIjpcIuayoeacieWGheWuuVwiLFwic2hvdy1zdHlsZVwiOlwic2VhcmNoXCJ9fSk6X3ZtLl9lKCksKCFfdm0uZ3JvdXBpbmcpP1tfdm0uX2woKF92bS5zZWFyY2hEYXRhKSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCdpdGVtJyx7a2V5OmtleSxhdHRyczp7XCJjaGVja2VkXCI6X3ZtLmNoZWNrZWRJdGVtLmlkID09PSBpdGVtLmlkLFwiaXRlbVwiOml0ZW0sXCJsaW5lLWxpbWl0XCI6X3ZtLmxpbmVMaW1pdCxcInJlbmRlci1maWVsZFwiOlwicmVuYW1lXCJ9LG9uOntcImNsaWNrXCI6X3ZtLnNlbGVjdEl0ZW19fSl9KSwoIV92bS5zZWFyY2hEYXRhLmxlbmd0aCk/X2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtZW1wdHlcIjp0cnVlLFwiZW1wdHktdGV4dFwiOlwi5rKh5pyJ5YaF5a65XCIsXCJzaG93LXN0eWxlXCI6XCJzZWFyY2hcIn19KTpfdm0uX2UoKV06X3ZtLl9lKCldOl92bS5fZSgpXTpbKF92bS5zZWxlY3RlZC5pZCA9PT0gJy0xJyAmJiBfdm0uY3VzdG9tQWRkU3VwcGxpZXIoX3ZtLnNlbGVjdGVkLm5hbWUpIDwgMCAmJiBfdm0uZWRpdG9yQWRkRGF0YSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwic3VwcGxpZXItZWRpdG9yXCIsb246e1wiY2xpY2tcIjpfdm0uY2xvc2VQb3B1cH19LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihfdm0uX3MoX3ZtLnNlbGVjdGVkLm5hbWUpKV0pLF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJpY29uXCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbmZvbnQgaWNvbi1lZGl0IG1hcmdpbi1yXCIsb246e1wiY2xpY2tcIjpfdm0ucmlnaHRCdG5FdmVudH19KSxfYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbmZvbnQgaWNvbi1xdWFsaWZpZWRcIn0pXSldKTpfdm0uX2UoKSwoX3ZtLmdyb3VwaW5nKT9fYygndmFuLWNvbGxhcHNlJyx7bW9kZWw6e3ZhbHVlOihfdm0uYWN0aXZlVGFiKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLmFjdGl2ZVRhYj0kJHZ9LGV4cHJlc3Npb246XCJhY3RpdmVUYWJcIn19LF92bS5fbCgoX3ZtLm9wdGlvbnNTaG93KSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCd2YW4tY29sbGFwc2UtaXRlbScse2tleTprZXksYXR0cnM6e1widGl0bGVcIjppdGVtLm5hbWUsXCJuYW1lXCI6a2V5fX0sX3ZtLl9sKChpdGVtLmNoaWxkcmVuKSxmdW5jdGlvbih2LGspe3JldHVybiBfYygnaXRlbScse2tleTprLGF0dHJzOntcImNoZWNrZWRcIjpfdm0uY2hlY2tlZEl0ZW0uaWQgPT09IHYuaWQsXCJpdGVtXCI6dixcImxpbmUtbGltaXRcIjpfdm0ubGluZUxpbWl0fSxvbjp7XCJjbGlja1wiOl92bS5zZWxlY3RJdGVtfX0pfSkpfSkpOl92bS5fbCgoX3ZtLm9wdGlvbnNTaG93KSxmdW5jdGlvbihpdGVtLGtleSl7cmV0dXJuIF9jKCdpdGVtJyx7a2V5OmtleSxhdHRyczp7XCJjaGVja2VkXCI6X3ZtLmNoZWNrZWRJdGVtLmlkID09PSBpdGVtLmlkLFwiaXRlbVwiOml0ZW0sXCJsaW5lLWxpbWl0XCI6X3ZtLmxpbmVMaW1pdH0sb246e1wiY2xpY2tcIjpfdm0uc2VsZWN0SXRlbX19KX0pLCghX3ZtLm9wdGlvbnNTaG93Lmxlbmd0aCk/X2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtZW1wdHlcIjp0cnVlLFwiZW1wdHktdGV4dFwiOlwi5pqC5peg5pWw5o2uXCIsXCJzaG93LXN0eWxlXCI6XCJzZWFyY2hcIn19KTpfdm0uX2UoKV1dLDIpXSwxKTpfdm0uX2UoKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBWdWUgZnJvbSAndnVlJztcbmltcG9ydCBkaWFsb2cgZnJvbSAnLi9kaWFsb2cudnVlJztcblxubGV0IGluc3RhbmNlID0gZmFsc2U7XG5cbmlmICghaW5zdGFuY2UpIHtcbiAgbGV0IERpYWxvZ0NvbXBvbmVudCA9IFZ1ZS5leHRlbmQoZGlhbG9nKTtcbiAgaW5zdGFuY2UgPSBuZXcgRGlhbG9nQ29tcG9uZW50KHtcbiAgICBlbDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXG4gIH0pO1xuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5zdGFuY2UuJGVsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc2Nyb2xsZXInLHtyZWY6XCJzY3JvbGxlclwifSxbX2MoJ21lYXN1cmUtZGV0YWlsLXBsYWNlLWNoZWNraXRlbScse2F0dHJzOntcImRldGFpbFwiOl92bS5kZXRhaWx9LG9uOntcImNoYW5nZUl0ZW1zXCI6X3ZtLmNoYW5nZUl0ZW1zLFwiY2hhbmdlUGxhY2VcIjpfdm0uY2hhbmdlUGxhY2V9fSksKF92bS5oYXNNYXN0ZXJDaGVja2l0ZW0pP1soX3ZtLmRldGFpbC5tb2RlID09PSAnZWRpdCcgfHwgX3ZtLmRldGFpbC5tb2RlID09PSAncmVlZGl0JyB8fCBfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWRvJyk/W192bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSxwcm9ibGVtSW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5OnByb2JsZW1JbmRleCxzdGF0aWNDbGFzczpcInB0MTAgYmctd2hpdGVcIn0sW19jKCdpdGVtJyx7YXR0cnM6e1wibGFiZWxcIjpcIuWunua1i+eCueaVsFwiLFwibW9kZVwiOlwiZWRpdFwiLFwiYm9yZGVyXCI6XCJub25lXCJ9fSxbX2MoJ3RlbXBsYXRlJyx7c2xvdDpcInJpZ2h0XCJ9LFtfYygnbnVtYmVyLWlucHV0Jyx7YXR0cnM6e1widHlwZVwiOlwiaW50IHBvc2l0aXZlXCIsXCJyYW5nZVwiOlsxLCA5OTldfSxvbjp7XCJibHVyXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ucG9pbnROdW1DaGFuZ2UocHJvYmxlbSl9fSxtb2RlbDp7dmFsdWU6KHByb2JsZW0ucG9pbnROdW0pLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChwcm9ibGVtLCBcInBvaW50TnVtXCIsICQkdil9LGV4cHJlc3Npb246XCJwcm9ibGVtLnBvaW50TnVtXCJ9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IHBsNVwifSxbX3ZtLl92KFwi5LiqXCIpXSldLDEpXSwyKSxfYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLniIbngrnmlbDlgLxcIixcIm1vZGVcIjpcImVkaXRcIixcImJvcmRlclwiOlwibm9uZVwifX0sWyghX3ZtLmRyYXdpbmdVcmwpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tY29uXCIsc3RhdGljU3R5bGU6e1wibWFyZ2luLXJpZ2h0XCI6XCItMTBweFwifSxhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sW192bS5fbCgocHJvYmxlbS5yZWFsaXR5VmFsKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gX2MoJ251bWJlci1pbnB1dCcse2tleTpwb2ludEluZGV4LHJlZjpcImV4Y2VlZC1wb2ludC1pbnB1dFwiLHJlZkluRm9yOnRydWUsc3RhdGljQ2xhc3M6XCJtcjEwIG1iMTBcIixhdHRyczp7XCJkZWNpbWFsXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlRGVjaW1hbCxcInJhbmdlXCI6X3ZtLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnZhbHVlUmFuZ2UsXCJuZXh0LWV2ZW50XCI6ZnVuY3Rpb24gKCkgeyByZXR1cm4gX3ZtLmFkZEV4Y2VlZFZhbChwcm9ibGVtKTsgfX0sb246e1wiYmx1clwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnVwZGF0ZWRFeGNlZWRWYWwocHJvYmxlbSl9fSxtb2RlbDp7dmFsdWU6KHBvaW50LnZhbCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KHBvaW50LCBcInZhbFwiLCAkJHYpfSxleHByZXNzaW9uOlwicG9pbnQudmFsXCJ9fSxbKHBvaW50SW5kZXggPT09IHByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGggLSAxKT9fYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbi1taW51c1wiLGF0dHJzOntcInNsb3RcIjpcImV4dGVuZFwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO192bS5yZW1vdmVFeGNlZWRWYWwocHJvYmxlbSl9fSxzbG90OlwiZXh0ZW5kXCJ9KTpfdm0uX2UoKV0pfSksKHByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGggPCBwcm9ibGVtLnBvaW50TnVtKT9fYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbi1wbHVzXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtfdm0uYWRkRXhjZWVkVmFsKHByb2JsZW0pfX19KTpfdm0uX2UoKV0sMik6X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1jb25cIixhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sWyhwcm9ibGVtLnJlYWxpdHlWYWwubGVuZ3RoKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWZvbnRcIn0sW192bS5fbCgocHJvYmxlbS5yZWFsaXR5VmFsKSxmdW5jdGlvbihwb2ludCxwb2ludEluZGV4KXtyZXR1cm4gWyhwb2ludEluZGV4KT9bX3ZtLl92KFwiLFwiKV06X3ZtLl9lKCksX3ZtLl92KF92bS5fcyhwb2ludC52YWwpK1wiXFxuICAgICAgICAgICAgICBcIildfSldLDIpOl92bS5fZSgpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tZm9udCBjb2xvci1ibHVlXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5tYXJrRXhjZWVkVmFsKHByb2JsZW0pfX19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgIOWcqOaIt+Wei+Wbvuagh+iusFxcbiAgICAgICAgICAgIFwiKV0pXSldKV0sMSl9KSwoX3ZtLmlucHV0Q29tcGxldGUpP19jKCdpdGVtJyxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1mb250XCJ9LFtfdm0uX3YoXCLlkIjmoLznjodcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgY29sb3ItdGhlbWUgcGw1XCJ9LFtfdm0uX2woKF92bS5kZXRhaWwucHJvYmxlbURhdGEpLGZ1bmN0aW9uKHByb2JsZW0scHJvYmxlbUluZGV4KXtyZXR1cm4gWyhwcm9ibGVtSW5kZXgpP1tfdm0uX3YoXCIsXCIpXTpfdm0uX2UoKSxfdm0uX3YoX3ZtLl9zKF92bS5fZihcInBlcmNlbnRcIikocHJvYmxlbS5wYXNzcmF0ZSwyKSkrXCJcXG4gICAgICAgICAgXCIpXX0pXSwyKSwoX3ZtLmRldGFpbC5tb2RlID09PSAnZWRpdCcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tY29uIGFsaWduLXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm5lZWQtcmVwYWlyXCIsb246e1wiY2xpY2tcIjpfdm0uc2V0TmVlZFJlcGFpcn19LFtfYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpfdm0uZGV0YWlsLm5lZWRSZXBhaXIgPyAnY2hlY2tib3gtc3F1YXJlLWNoZWNrZWQnIDogJ2NoZWNrYm94LXNxdWFyZSd9fSksX3ZtLl92KFwi6YCa55+l5pW05pS5XFxuICAgICAgICAgIFwiKV0sMSldKTpfdm0uX2UoKV0pOl92bS5fZSgpLChfdm0uaW5wdXRDb21wbGV0ZSAmJiBfdm0uZGV0YWlsLm5lZWRSZXBhaXIpP19jKCd1c2VyLXNlbGVjdCcse2F0dHJzOntcInRpdGxlXCI6XCLmlbTmlLnkurpcIixcImJvcmRlclwiOlwidG9wXCIsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLnJlcGFpck9wdGlvbnMsXCJtZW1vcnlcIjp0cnVlfSxvbjp7XCJvblNlbGVjdFwiOl92bS5vblNlbGVjdFJlcGFpcn0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwicmVwYWlyXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyXCJ9fSk6X3ZtLl9lKCldOl92bS5fZSgpLChfdm0uZGV0YWlsLm1vZGUgPT09ICdlZGl0JyB8fCBfdm0uZGV0YWlsLm1vZGUgPT09ICdyZWRvJyk/W19jKCdpdGVtJyx7c3RhdGljQ2xhc3M6XCJwMTUgbXQxMFwifSxbX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJ0cmFjay10ZXh0XCI6J+Wunua1i+WunumHjycsXCJtYXhsZW5ndGhcIjo1MH0sb246e1wiY2FsbGJhY2tcIjpfdm0uc2F2ZVByb2JsZW19LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5pbWcpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcImltZ1wiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLmltZ1wifX0pXSwxKSxfYygnaXRlbS10ZXh0YXJlYScse3N0YXRpY0NsYXNzOlwiYm9yZGVyLXRiXCIsYXR0cnM6e1wicGxhY2Vob2xkZXJcIjpcIuihpeWFheivtOaYjlwifSxvbjp7XCJibHVyXCI6X3ZtLnNhdmVQcm9ibGVtfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVtYXJrKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZW1hcmtcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5yZW1hcmtcIn19KV06X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZG8nIHx8IF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCcpP1tfYygncCcse3N0YXRpY0NsYXNzOlwiYy1sYWJlbCBtYjEwXCJ9LFtfdm0uX3YoXCLor7fpgInmi6nmlr3lt6XljZXkvY1cIildKSxfdm0uX2woKF92bS5kZXRhaWwucHJvYmxlbURhdGEpLGZ1bmN0aW9uKHByb2JsZW0pe3JldHVybiBfYygnc2luZ2xlLXNlbGVjdCcse2tleTpwcm9ibGVtLmNoZWNrSXRlbS5pZCxhdHRyczp7XCJ0aXRsZVwiOnByb2JsZW0uY2hlY2tJdGVtLm5hbWUsXCJwYWdlLXRpdGxlXCI6XCLpgInmi6nmlr3lt6XljZXkvY1cIixcInBsYWNlaG9sZGVyXCI6XCLor7fpgInmi6nmlr3lt6XljZXkvY1cIixcIm9wdGlvbnNcIjpfdm0ubW9kZWwuY29udHJhY3RvcnMsXCJtb2RlXCI6X3ZtLmRldGFpbC5tb2RlID09PSAnZWRpdCcgfHwgX3ZtLmRldGFpbC5tb2RlID09PSAncmVkbycgPyAnZWRpdCcgOiAndmlldyd9LG9uOntcIm9uU2VsZWN0XCI6X3ZtLnNhdmVQcm9ibGVtfSxtb2RlbDp7dmFsdWU6KHByb2JsZW0uY29udHJhY3RvciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KHByb2JsZW0sIFwiY29udHJhY3RvclwiLCAkJHYpfSxleHByZXNzaW9uOlwicHJvYmxlbS5jb250cmFjdG9yXCJ9fSl9KV06X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ2VkaXQnIHx8IF92bS5kZXRhaWwubW9kZSA9PT0gJ3JlZG8nKT9fYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5oqE6YCB5Lq6XCIsXCJtdWx0aVwiOnRydWUsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLmNjT3B0aW9ucyxcInJlcXVpcmVkXCI6ZmFsc2UsXCJtZW1vcnlcIjp0cnVlfSxvbjp7XCJvblNlbGVjdFwiOl92bS5jaGFuZ2VDQ30sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLmNjKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJjY1wiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLmNjXCJ9fSk6X3ZtLl9lKCksKF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKT9bX2MoJ3Byb2JsZW0tZGV0YWlsLWhlYWRlcicse3N0YXRpY0NsYXNzOlwiYmctd2hpdGUgcHIwXCIsYXR0cnM6e1wic3RhdHVzXCI6X3ZtLmRldGFpbC5zdGF0dXN9fSksX2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5qCH5q61XCIsXCJ0ZXh0XCI6X3ZtLmRldGFpbC5wbGFjZS5zZWN0aW9uLm5hbWUgKyAn77yIJyArIF92bS5kZXRhaWwucGxhY2UucHJvamVjdC5uYW1lICsgJ++8iSd9fSksX3ZtLl9sKChfdm0uZGV0YWlsLnByb2JsZW1EYXRhKSxmdW5jdGlvbihwcm9ibGVtLHByb2JsZW1JbmRleCl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6cHJvYmxlbUluZGV4fSxbX2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5a6e5rWL54K5XCIsXCJ0ZXh0XCI6cHJvYmxlbS5wb2ludE51bX19KSxfYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLlkIjmoLznjodcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHRcIixhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgIFwiK192bS5fcyhfdm0uX2YoXCJwZXJjZW50XCIpKHByb2JsZW0ucGFzc3JhdGUsMikpK1wiXFxuICAgICAgICAgICAgXCIpLChfdm0uZHJhd2luZ1VybCk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImNvbG9yLXRoZW1lIG1sMTVcIixvbjp7XCJjbGlja1wiOl92bS52aWV3SHV4aW5nfX0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgXCIrX3ZtLl9zKHByb2JsZW0ucm9vbXR5cGVfdHlwZSB8fCAn5oi35Z6L5Zu+JykrXCJcXG4gICAgICAgICAgICBcIildKTpfdm0uX2UoKV0pXSksKHByb2JsZW0ucmVhbGl0eVZhbC5sZW5ndGgpP19jKCdpdGVtJyx7YXR0cnM6e1wibGFiZWxcIjpcIueIhueCueaVsOWAvFwifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dFwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbX3ZtLl9sKChwcm9ibGVtLnJlYWxpdHlWYWwpLGZ1bmN0aW9uKHBvaW50LHBvaW50SW5kZXgpe3JldHVybiBbKHBvaW50SW5kZXgpP1tfdm0uX3YoXCIsXCIpXTpfdm0uX2UoKSxfdm0uX3YoX3ZtLl9zKHBvaW50LnZhbCkrXCJcXG4gICAgICAgICAgICBcIildfSldLDIpXSk6X3ZtLl9lKCldLDEpfSksKFxuICAgICAgICAgIChfdm0uZGV0YWlsLmFsbG93UmVlZGl0ICYmIF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKSB8fFxuICAgICAgICAgICAgKF92bS5kcmF3aW5nVXJsICYmIF92bS5kZXRhaWwucHJvYmxlbURhdGEubGVuZ3RoID4gMSlcbiAgICAgICAgKT9fYygnaXRlbScse3N0YXRpY0NsYXNzOlwicHQwIHBiMFwiLGF0dHJzOntcImxhYmVsXCI6XCJcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHRcIixhdHRyczp7XCJzbG90XCI6XCJyaWdodFwifSxzbG90OlwicmlnaHRcIn0sWyhfdm0uZGV0YWlsLmFsbG93UmVlZGl0ICYmIF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiYnRuLW1vZGlmeVwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uY2hhbmdlTW9kZSgncmVlZGl0Jyl9fX0sW192bS5fdihcIlxcbiAgICAgICAgICAgIOS/ruaUueaVsOWAvFxcbiAgICAgICAgICAgIFwiKSxfYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpcImFycm93LXJpZ2h0XCJ9fSldLDEpOl92bS5fZSgpLChfdm0uZHJhd2luZ1VybCAmJiBfdm0uZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA+IDEpP19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJidG4tbW9kaWZ5XCIsb246e1wiY2xpY2tcIjpfdm0udmlld0h1eGluZ319LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICBcIitfdm0uX3MoX3ZtLmRldGFpbC5yb29tdHlwZV90eXBlKStcIlxcbiAgICAgICAgICAgIFwiKSxfYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpcImFycm93LXJpZ2h0XCJ9fSldLDEpOl92bS5fZSgpXSldKTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5yZW1hcmsgfHwgX3ZtLmRldGFpbC5pbWcubGVuZ3RoKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLooaXlhYXor7TmmI5cIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbKF92bS5kZXRhaWwucmVtYXJrKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWZvbnRcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgIFwiK192bS5fcyhfdm0uZGV0YWlsLnJlbWFyaykrXCJcXG4gICAgICAgICAgXCIpXSk6X3ZtLl9lKCksX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJlZGl0YWJsZWRcIjpmYWxzZX0sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLmltZyksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwiaW1nXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwuaW1nXCJ9fSldLDEpXSk6X3ZtLl9lKCksX2MoJ3VzZXItc2VsZWN0Jyx7YXR0cnM6e1widGl0bGVcIjpcIuajgOafpeS6ulwiLFwibW9kZVwiOlwidmlld1wiLFwiZGF0ZVwiOl92bS5mb3JtYXREYXRlKF92bS5kZXRhaWwucmVnaXN0X2RhdGUpLFwiZWRpdGFibGVkXCI6ZmFsc2V9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5yZWdpc3QpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcInJlZ2lzdFwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlZ2lzdFwifX0pLChcbiAgICAgICAgICAoX3ZtLmRldGFpbC5yZXBhaXJfcmVtYXJrIHx8XG4gICAgICAgICAgICAoX3ZtLmRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZSAmJiBfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlLmxlbmd0aCkpICYmXG4gICAgICAgICAgICBfdm0uZGV0YWlsLnN0YXR1cyAhPT0gJ+W+heaVtOaUuSdcbiAgICAgICAgKT9fYygnaXRlbScse2F0dHJzOntcImxhYmVsXCI6XCLmlbTmlLnnhafniYdcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWNvblwiLGF0dHJzOntcInNsb3RcIjpcInJpZ2h0XCJ9LHNsb3Q6XCJyaWdodFwifSxbKF92bS5kZXRhaWwucmVwYWlyX3JlbWFyayk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1mb250XCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5kZXRhaWwucmVwYWlyX3JlbWFyaykpXSk6X3ZtLl9lKCksX2MoJ2l0ZW0taW1nLWxpc3QnLHthdHRyczp7XCJlZGl0YWJsZWRcIjpmYWxzZSxcInRyYWNrLXRleHRcIjon5a6e5rWL5a6e6YePJ30sbW9kZWw6e3ZhbHVlOihfdm0uZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJfaW1hZ2VfZmlsZVwiLCAkJHYpfSxleHByZXNzaW9uOlwiZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlXCJ9fSldLDEpXSk6X3ZtLl9lKCksKF92bS5kZXRhaWwucmVwYWlyLmlkICYmIChfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScgfHwgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflt7LmlbTmlLknKSk/X2MoJ3VzZXItc2VsZWN0Jyx7YXR0cnM6e1widGl0bGVcIjpcIuaVtOaUueS6ulwiLFwibW9kZVwiOlwidmlld1wiLFwib3B0aW9uc1wiOl92bS5tb2RlbC5yZXBhaXJPcHRpb25zLFwiZGF0ZVwiOl92bS5kZXRhaWwuc3RhdHVzID09PSAn5bey5pW05pS5JyA/IF92bS5mb3JtYXREYXRlKF92bS5kZXRhaWwucmVwYWlyX2RhdGUpIDogJycsXCJlZGl0YWJsZWRcIjooX3ZtLmRldGFpbC5pc0NoZWNrZXIgfHwgX3ZtLmRldGFpbC5pc1JlcGFpcikgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknLFwiYmVmb3JlLXNlbGVjdFwiOl92bS5iZWZvcmVTZWxlY3RSZXBhaXJ9LG9uOntcIm9uU2VsZWN0XCI6X3ZtLm9uU2VsZWN0UmVwYWlyfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVwYWlyKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5yZXBhaXJcIn19KTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5pc1JlcGFpciAmJiBfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScpP19jKCdpdGVtJyx7YXR0cnM6e1wibGFiZWxcIjpcIuaVtOaUueeFp+eJh1wifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tY29uXCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LFtfYygnaXRlbS1pbWctbGlzdCcse2F0dHJzOntcIm1heGxlbmd0aFwiOjUwLFwidHJhY2stdGV4dFwiOiflrp7mtYvlrp7ph48nfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVwYWlyX2ltYWdlX2ZpbGUpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uZGV0YWlsLCBcInJlcGFpcl9pbWFnZV9maWxlXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyX2ltYWdlX2ZpbGVcIn19KV0sMSldKTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5pc1JlcGFpciAmJiBfdm0uZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScpP19jKCdpdGVtLXRleHRhcmVhJyx7c3RhdGljQ2xhc3M6XCJib3JkZXItdGJcIixhdHRyczp7XCJwbGFjZWhvbGRlclwiOlwi6KGl5YWF6K+05piOXCJ9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5yZXBhaXJfcmVtYXJrKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJfcmVtYXJrXCIsICQkdil9LGV4cHJlc3Npb246XCJkZXRhaWwucmVwYWlyX3JlbWFya1wifX0pOl92bS5fZSgpLChfdm0uaGFzQ29udHJhY3Rvcik/X2MoJ2l0ZW0nLHthdHRyczp7XCJsYWJlbFwiOlwi5pa95bel5Y2V5L2NXCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0XCIsYXR0cnM6e1wic2xvdFwiOlwicmlnaHRcIn0sc2xvdDpcInJpZ2h0XCJ9LF92bS5fbCgoX3ZtLmRldGFpbC5wcm9ibGVtRGF0YSksZnVuY3Rpb24ocHJvYmxlbSl7cmV0dXJuIF9jKCdwJyx7a2V5OnByb2JsZW0uaWR9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICBcIitfdm0uX3MocHJvYmxlbS5jb250cmFjdG9yID8gcHJvYmxlbS5jb250cmFjdG9yLm5hbWUgOiAnJykrXCJcXG4gICAgICAgICAgXCIpXSl9KSldKTpfdm0uX2UoKSxfYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5oqE6YCB5Lq6XCIsXCJtb2RlXCI6XCJ2aWV3XCIsXCJtdWx0aVwiOnRydWUsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLmNjT3B0aW9ucyxcImVkaXRhYmxlZFwiOl92bS5kZXRhaWwuc3RhdHVzICE9PSAn5bey5pW05pS5J30sb246e1wib25TZWxlY3RcIjpfdm0uY2hhbmdlQ0N9LG1vZGVsOnt2YWx1ZTooX3ZtLmRldGFpbC5jYyksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KF92bS5kZXRhaWwsIFwiY2NcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5jY1wifX0pXTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5zdGF0dXMgPT09ICfmo4Dmn6Xlrozmr5UnICYmIF92bS5kZXRhaWwubW9kZSA9PT0gJ3ZpZXcnKT9bX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibmVlZC1yZXBhaXItYm90dG9tXCIsb246e1wiY2xpY2tcIjpfdm0uc2V0TmVlZFJlcGFpcn19LFtfYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpfdm0uZGV0YWlsLm5lZWRSZXBhaXIgPyAnY2hlY2tib3gtc3F1YXJlLWNoZWNrZWQnIDogJ2NoZWNrYm94LXNxdWFyZSd9fSksX3ZtLl92KFwi6YCa55+l5pW05pS5XFxuICAgICAgXCIpXSwxKSwoX3ZtLmRldGFpbC5uZWVkUmVwYWlyKT9fYygndXNlci1zZWxlY3QnLHthdHRyczp7XCJ0aXRsZVwiOlwi5pW05pS55Lq6XCIsXCJvcHRpb25zXCI6X3ZtLm1vZGVsLnJlcGFpck9wdGlvbnMsXCJtZW1vcnlcIjp0cnVlfSxtb2RlbDp7dmFsdWU6KF92bS5kZXRhaWwucmVwYWlyKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmRldGFpbCwgXCJyZXBhaXJcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImRldGFpbC5yZXBhaXJcIn19KTpfdm0uX2UoKSwoX3ZtLmRldGFpbC5uZWVkUmVwYWlyKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcse3N0YXRpY0NsYXNzOlwicHQxMFwifSxbX2MoJ2FwcC1idXR0b24nLHthdHRyczp7XCJuYW1lXCI6XCLpgJrnn6XmlbTmlLlcIn0sb246e1wiY2xpY2tcIjpfdm0uc2V0UmVwYWlyfX0pXSwxKTpfdm0uX2UoKV06X3ZtLl9lKCksKF92bS5kZXRhaWwuaWQgJiYgX3ZtLmRldGFpbC5zdGF0dXMgPT09ICfmo4Dmn6XkuK0nKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcsW19jKCdhcHAtYnV0dG9uJyx7YXR0cnM6e1widHlwZVwiOlwidGV4dFwiLFwibmFtZVwiOlwi5Yig6Zmk5q2k6I2J56i/XCJ9LG9uOntcImNsaWNrXCI6X3ZtLmRlbFByb2JsZW19fSldLDEpOl92bS5fZSgpLChcbiAgICAgICAgX3ZtLmRldGFpbC5zdGF0dXMgIT09ICfmo4Dmn6XkuK0nICYmXG4gICAgICAgICAgX3ZtLmRldGFpbC5tb2RlID09PSAndmlldycgJiZcbiAgICAgICAgICAhX3ZtLmFsbG93TWVhc3VyZVJlaW5zcGVjdCAmJlxuICAgICAgICAgIF92bS5tb2RlbC5jdXJyZW50VXNlckJhdGNoSWQgPT09IF92bS5kZXRhaWwuYmF0Y2hfaWRcbiAgICAgICk/X2MoJ2FwcC1idXR0b24tZ3JvdXAnLFtfYygnYXBwLWJ1dHRvbicse2F0dHJzOntcInR5cGVcIjpcIm9wZXJhdGVcIixcIm5hbWVcIjpcIuWGjea1i+S4gOasoVwifSxvbjp7XCJjbGlja1wiOl92bS5zZXRSZWRvfX0pXSwxKTpfdm0uX2UoKV06X3ZtLl9lKCksX2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtbG9hZGluZ1wiOmZhbHNlLFwiaXMtZW1wdHlcIjohX3ZtLmhhc01hc3RlckNoZWNraXRlbSxcImVtcHR5LXRleHRcIjpcIuivt+mAieaLqeajgOafpemhuVwifX0pXSwyKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLXRlbXBsYXRlLTEudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtdGVtcGxhdGUtMS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03OGViMjE5ZSZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9kZXRhaWwtdGVtcGxhdGUtMS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2RldGFpbC10ZW1wbGF0ZS0xLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9kZXRhaWwtdGVtcGxhdGUtMS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03OGViMjE5ZSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI3OGViMjE5ZVwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRyb3AtZG93bi1ncm91cCBiZy1zdWItdGhlbWUgYm9yZGVyLWJvdHRvbVwifSxbX2MoJ2Ryb3Atc2VsZWN0LXBsYWNlJyx7YXR0cnM6e1widmFsdWVcIjpfdm0ucGxhY2UsXCJlZGl0YWJsZWRcIjpfdm0uZWRpdGFibGVkfSxvbjp7XCJvblNlbGVjdFwiOl92bS5vbkNoYW5nZVBsYWNlfX0pLF9jKCdkcm9wLXNlbGVjdC1jaGVja2l0ZW0nLHtyZWY6XCJkcm9wLXNlbGVjdC1jaGVja2l0ZW1cIixhdHRyczp7XCJ2YWx1ZVwiOl92bS5jaGVja2l0ZW1zLFwibWFzdGVyLWNoZWNraXRlbVwiOl92bS5tYXN0ZXJDaGVja2l0ZW0sXCJvcHRpb25zXCI6X3ZtLmNoZWNraXRlbU9wdGlvbnMsXCJwbGFjZVwiOl92bS5wbGFjZSxcImJhdGNoLWlkXCI6X3ZtLmJhdGNoSWQsXCJwcm9jZXNzLW1vZGVcIjpfdm0ucHJvY2Vzc01vZGUsXCJtb2RlXCI6X3ZtLm1vZGUsXCJtdWx0aVwiOl92bS5tdWx0aSxcImVkaXRhYmxlZFwiOl92bS5lZGl0YWJsZWQsXCJpcy1sb2FkaW5nXCI6X3ZtLmNoZWNraXRlbVNlbGVjdExvYWRpbmd9LG9uOntcIm9uU2VsZWN0XCI6X3ZtLm9uQ2hhbmdlQ2hlY2tpdGVtfX0pXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC1wbGFjZS1jaGVja2l0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9kZXRhaWwtcGxhY2UtY2hlY2tpdGVtLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xN2RjZjRkNCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9kZXRhaWwtcGxhY2UtY2hlY2tpdGVtLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZGV0YWlsLXBsYWNlLWNoZWNraXRlbS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xN2RjZjRkNCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIxN2RjZjRkNFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTczZjc3NmVhJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC10ZW1wbGF0ZS0yLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWZmY2JlM2YyJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiOWU5NzkyNmFcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2dfMS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZDlhYTU1MiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjQ5NWVhNjNhXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGlhbG9nXzEudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2dfMS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2RpYWxvZ18xLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00ZDlhYTU1MiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9kaWFsb2dfMS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2RpYWxvZ18xLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9kaWFsb2dfMS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZDlhYTU1MiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI0ZDlhYTU1MlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIChfdm0uc2hvdyk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY29udGVudFwiLHN0eWxlOih7IHRvcDogX3ZtLmNvbnRlbnRUb3AgKyAncHgnIH0pLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0ICE9PSAkZXZlbnQuY3VycmVudFRhcmdldCl7IHJldHVybiBudWxsOyB9cmV0dXJuIF92bS5jbG9zZVBvcHVwKCRldmVudCl9fX0sW19jKCd0cmFuc2l0aW9uJyx7YXR0cnM6e1wibmFtZVwiOlwic2xpZGUtZG93blwifSxvbjp7XCJlbnRlclwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmlzT3BlbmluZyA9IHRydWV9LFwiYWZ0ZXItZW50ZXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pc09wZW5pbmcgPSBmYWxzZX0sXCJsZWF2ZVwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmlzQ2xvc2luZyA9IHRydWV9LFwiYWZ0ZXItbGVhdmVcIjpfdm0uYWZ0ZXJDbG9zZX19LFsoX3ZtLnNob3dMaXN0KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJib3hcIixzdHlsZTooeyBoZWlnaHQ6IF92bS5saXN0SGVpZ2h0ICsgJ3B4JyB9KX0sW19jKCdpdGVtJyx7c3RhdGljQ2xhc3M6XCJpdGVtLWhkXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgbmFtZS1wYXJlbnRcIn0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0taW5mb1wifSxbX3ZtLl92KFwi5ZCI5qC8546HXCIpXSksX2MoJ2knLHtzdGF0aWNDbGFzczpcImljb24tZW1wdHlcIn0pXSksKF92bS5vcHRpb25zLmxlbmd0aCk/X2MoJ2Rpdicse3JlZjpcImxpc3Qtd3JhcFwiLHN0YXRpY0NsYXNzOlwibGlzdC13cmFwXCJ9LFtfdm0uX2woKF92bS5vcHRpb25zKSxmdW5jdGlvbihpdGVtLGluZGV4KXtyZXR1cm4gW19jKCdpdGVtJyx7a2V5OmluZGV4LGF0dHJzOntcImJvcmRlclwiOlwiYm90dG9tXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0udG9nZ2xlSXRlbShpdGVtKX19fSxbX2MoJ2knLHtzdGF0aWNDbGFzczpcIml0ZW0tdHJpYW5nbGVcIixjbGFzczp7ICd0cmlhbmdsZS1yaWdodCc6ICFfdm0ub3BlblNldFtpdGVtLmlkXSwgJ3RyaWFuZ2xlLWRvd24nOiBfdm0ub3BlblNldFtpdGVtLmlkXSB9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IG5hbWUtcGFyZW50XCJ9LFtfdm0uX3YoX3ZtLl9zKGl0ZW0ubmFtZSkpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1pbmZvXCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5wYXNzcmF0ZURhdGFbaXRlbS5pZF0pKV0pLF9jKCdpJyx7c3RhdGljQ2xhc3M6XCJpY29uLWVtcHR5XCJ9KV0pLChpdGVtLmNoaWxkcmVuICYmIGl0ZW0uY2hpbGRyZW4ubGVuZ3RoICYmIF92bS5vcGVuU2V0W2l0ZW0uaWRdKT9fdm0uX2woKGl0ZW0uY2hpbGRyZW4pLGZ1bmN0aW9uKHN1Yml0ZW0sc3ViaW5kZXgpe3JldHVybiBfYygnaXRlbScse2tleTonc3ViIC0nICsgaW5kZXggKyAnLScgKyBzdWJpbmRleCxjbGFzczp7XG4gICAgICAgICAgICAgICAgJ2NoZWNraXRlbS1zZWxlY3RlZCc6XG4gICAgICAgICAgICAgICAgICBfdm0uZ2V0SXRlbVR5cGUoc3ViaXRlbSkgPT09ICdzZWxlY3RlZCcgfHwgX3ZtLmdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnY3VycmVudCcsXG4gICAgICAgICAgICAgIH0sYXR0cnM6e1wiYm9yZGVyXCI6XCJib3R0b21cIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jbGlja0l0ZW0oc3ViaXRlbSl9fX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dCBuYW1lLWNoaWxkXCJ9LFtfdm0uX3YoX3ZtLl9zKHN1Yml0ZW0ubmFtZSkpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1pbmZvXCIsY2xhc3M6eyAnY29sb3Itb3JhbmdlJzogX3ZtLmdldEl0ZW1JbmZvKHN1Yml0ZW0pID09PSAn5pqC5a2YJyB9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgIFwiK192bS5fcyhfdm0uZ2V0SXRlbUluZm8oc3ViaXRlbSkpK1wiXFxuICAgICAgICAgICAgICBcIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWljb25cIn0sWyhfdm0uZ2V0SXRlbVR5cGUoc3ViaXRlbSkgPT09ICdibGFuaycgfHwgX3ZtLmdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnc2luZ2xlJyk/X2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJcIn19KTpfdm0uX2UoKSwoX3ZtLmdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnYXJyb3cnKT9fYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpcImFycm93LXJpZ2h0XCJ9fSk6X3ZtLl9lKCksKF92bS5nZXRJdGVtVHlwZShzdWJpdGVtKSA9PT0gJ2N1cnJlbnQnKT9fYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpcInF1YWxpZmllZFwifX0pOl92bS5fZSgpLChfdm0uZ2V0SXRlbVR5cGUoc3ViaXRlbSkgPT09ICdjaGVja2JveCcpP19jKCdpY29uJyx7YXR0cnM6e1wibmFtZVwiOlwiY2hlY2tib3hcIn19KTpfdm0uX2UoKSwoX3ZtLmdldEl0ZW1UeXBlKHN1Yml0ZW0pID09PSAnc2VsZWN0ZWQnKT9fYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpcImNoZWNrYm94LWNoZWNrZWRcIn19KTpfdm0uX2UoKV0sMSldKX0pOl92bS5fZSgpXX0pXSwyKTpfdm0uX2UoKSxfYygnYXBwLWJ1dHRvbicse2RpcmVjdGl2ZXM6W3tuYW1lOlwic2hvd1wiLHJhd05hbWU6XCJ2LXNob3dcIix2YWx1ZTooX3ZtLm11bHRpKSxleHByZXNzaW9uOlwibXVsdGlcIn1dLHN0YXRpY0NsYXNzOlwiYnRuLWNvbmZpcm1cIixjbGFzczp7ICdidG4tZGlzYWJsZWQnOiAhX3ZtLmFsbG93Q29uZmlybSB9LGF0dHJzOntcIm5hbWVcIjpcIuehruWumlwifSxvbjp7XCJjbGlja1wiOl92bS5jb25maXJtfX0pLCghX3ZtLm9wdGlvbnMubGVuZ3RoKT9fYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1lbXB0eVwiOnRydWUsXCJ0eXBlXCI6XCJzZWFyY2hcIixcImVtcHR5LXRleHRcIjpcIuacquaQnOe0ouWIsOebuOWFs+WGheWuuVwifX0pOl92bS5fZSgpXSwxKTpfdm0uX2UoKV0pXSwxKTpfdm0uX2UoKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnO1xuaW1wb3J0IGRpYWxvZyBmcm9tICcuL2RpYWxvZ18xLnZ1ZSc7XG5cbmxldCBpbnN0YW5jZSA9IGZhbHNlO1xuXG5pZiAoIWluc3RhbmNlKSB7XG4gIGxldCBEaWFsb2dDb21wb25lbnQgPSBWdWUuZXh0ZW5kKGRpYWxvZyk7XG4gIGluc3RhbmNlID0gbmV3IERpYWxvZ0NvbXBvbmVudCh7XG4gICAgZWw6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICB9KTtcblxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGluc3RhbmNlLiRlbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbGlzdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03NDEwMmMwNSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjY1MTcwZDczXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9rZXlib2FyZC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02MzM3ZjQyOCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM4ZmFkYzA2JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RpYWxvZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2RpYWxvZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNsaWRlLXJpZ2h0XCJ9fSxbKF92bS5zaG93KT9fYygncGFnZS1jb250ZW50Jyx7YXR0cnM6e1wibW9kZVwiOlwiZGlhbG9nXCIsXCJ0aXRsZVwiOlwi5oi35Z6L5Zu+XCIsXCJvbi1jbG9zZVwiOl92bS5jbG9zZVBvcHVwfX0sW19jKCdkcmF3aW5nJyx7c3RhdGljU3R5bGU6e1wiZmxleFwiOlwiMVwifSxhdHRyczp7XCJ1cmxcIjpfdm0udXJsLFwicG9pbnRzXCI6X3ZtLnBvaW50cyxcImZvbGRlclwiOl92bS5mb2xkZXJ9LG9uOntcIm9uY2xpY2tcIjpfdm0ub25jbGlja319KSwoX3ZtLm1vZGUgPT09ICdtdWx0aXBsZS1yZW1hcmsnKT9fYygnYXBwLWJ1dHRvbi1ncm91cCcse2F0dHJzOntcImZpeGVkLWJvdHRvbVwiOlwiXCIsXCJzZWFtbGVzc1wiOlwiXCJ9fSxbX2MoJ2FwcC1idXR0b24nLHtzdGF0aWNTdHlsZTp7XCJ3aWR0aFwiOlwiNTAlXCJ9LGF0dHJzOntcInR5cGVcIjpfdm0ucG9pbnRzLmxlbmd0aCA/ICd3YXJuaW5nJyA6ICdub3JtYWwnLFwicGxhaW5cIjpcIlwifSxvbjp7XCJjbGlja1wiOl92bS51bmRvfX0sW192bS5fdihcIlxcbiAgICAgICAg5pKk6ZSAXFxuICAgICAgXCIpXSksX2MoJ2FwcC1idXR0b24nLHtvbjp7XCJjbGlja1wiOl92bS5zdXJlfX0sW192bS5fdihcIiDnoa7lrpogXCIpXSldLDEpOl92bS5fZSgpXSwxKTpfdm0uX2UoKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBWdWUgZnJvbSAndnVlJztcbmltcG9ydCBkaWFsb2cgZnJvbSAnLi9kaWFsb2cudnVlJztcblxubGV0IGluc3RhbmNlID0gZmFsc2U7XG5cbmlmICghaW5zdGFuY2UpIHtcbiAgbGV0IERpYWxvZ0NvbXBvbmVudCA9IFZ1ZS5leHRlbmQoZGlhbG9nKTtcbiAgaW5zdGFuY2UgPSBuZXcgRGlhbG9nQ29tcG9uZW50KHtcbiAgICBlbDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXG4gIH0pO1xuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5zdGFuY2UuJGVsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03NDA2ODM4NiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjUzNDc4NzkwXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4va2V5Ym9hcmQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NjMzN2Y0MjgmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCJiZDVlYjA2MlwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuOS41QHZ1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fcG9zdGNzcy1sb2FkZXJAMy4wLjBAcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fc2Fzcy1sb2FkZXJANy4xLjBAc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LW9uZU9mLTEtNCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiMzU1OTBkY2JcIiwgY29udGVudCwgdHJ1ZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTsiLCJ2YXIgZXNjYXBlID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzXCIpO1xuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLmRyYXdpbmctY29uW2RhdGEtdi0zMmM2MTczNl17ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtmb250LXNpemU6MDtsaW5lLWhlaWdodDowfS56amFwcCAuZHJhd2luZy1jb24gY2FudmFzW2RhdGEtdi0zMmM2MTczNl17YmFja2dyb3VuZDp1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIkBzcmMvYXNzZXRzL2ltZy9kaWFncmFtLWJnLnBuZ1wiKSkgKyBcIikgI2ZmZjtiYWNrZ3JvdW5kLXNpemU6NHB4IDRweH0uemphcHAgLmxvYWRpbmctdGV4dFtkYXRhLXYtMzJjNjE3MzZde21hcmdpbi10b3A6MTVweDtjb2xvcjojYWFhfS56amFwcCAuZXJyb3ItdGV4dFtkYXRhLXYtMzJjNjE3MzZdLC56amFwcCAubG9hZGluZy10ZXh0W2RhdGEtdi0zMmM2MTczNl17cGFkZGluZzowIDE1cHg7bGluZS1oZWlnaHQ6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTZweH0uemphcHAgLmVycm9yLXRleHRbZGF0YS12LTMyYzYxNzM2XXtjb2xvcjojZmYzZDNkfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiB2LW9uPVwiJGxpc3RlbmVyc1wiIGNsYXNzPVwiZHJhd2luZy1jb25cIiByZWY9XCJjb250ZW50XCI+XG4gICAgPHRlbXBsYXRlIHYtaWY9XCJpc0Rvd25sb2FkaW5nXCI+XG4gICAgICA8cD5cbiAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDgwIDgwXCIgY2xhc3M9XCJzdmctbG9hZGluZ1wiPlxuICAgICAgICAgIDxjaXJjbGUgY3g9XCI0MFwiIGN5PVwiNDBcIiByPVwiMzZcIj48L2NpcmNsZT5cbiAgICAgICAgPC9zdmc+XG4gICAgICA8L3A+XG4gICAgICA8cCBjbGFzcz1cImxvYWRpbmctdGV4dFwiPuato+WcqOS4i+i9vS4uLjwvcD5cbiAgICA8L3RlbXBsYXRlPlxuICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICA8Y2FudmFzIHYtaWY9XCIhZXJyb3JcIiByZWY9XCJkcmF3aW5nLWNhbnZhc1wiPjwvY2FudmFzPlxuXG4gICAgICA8cCB2LWlmPVwiZXJyb3JcIiBjbGFzcz1cImVycm9yLXRleHRcIj57eyBlcnJvciB9fTwvcD5cbiAgICA8L3RlbXBsYXRlPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgcyBmcm9tICd1bmRlcnNjb3JlLnN0cmluZyc7XG5pbXBvcnQgeyBFeHRlbmRDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgfSBmcm9tICdAc3JjL2xpYi9odXhpbmcvaGlkcGktY2FudmFzJztcbmltcG9ydCBJbWFnZVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9pbWFnZS1zZXJ2aWNlJztcbmltcG9ydCBwbHVnaW5BcGkgZnJvbSAnQHNyYy9hcGkvcGx1Z2luQXBpJztcbmltcG9ydCBjb250ZXh0IGZyb20gJ0BzcmMvZnJhbWV3b3JrL2NvbnRleHQnO1xuaW1wb3J0IG5ldHdvcmsgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbmV0d29yayc7XG5cbi8qIGxldCBwb2ludENvbG9yUmVkID0gJyNmZjQ1NDYnO1xubGV0IHBvaW50Q29sb3JCbHVlID0gJyM0Mjc1ZTgnO1xubGV0IHBvaW50Q29sb3JHcmVlbiA9ICcjMTRmZjU2JzsgKi9cblxuLy8g5piv5ZCm5Zyo57yp5pS+XG5mdW5jdGlvbiBfaXNQaW5jaGluZyhlKSB7XG4gIGxldCBjaGFuZ2VkID0gZS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg7XG4gIGxldCB0b3VjaGluZyA9IGUudG91Y2hlcy5sZW5ndGg7XG5cbiAgcmV0dXJuIGNoYW5nZWQgPT09IDEgfHwgY2hhbmdlZCA9PT0gMiB8fCB0b3VjaGluZyA9PT0gMjtcbn1cblxuLy8g5piv5ZCm5Zyo5ouW5YqoXG5mdW5jdGlvbiBfaXNEcmFnZ2luZyhlKSB7XG4gIHJldHVybiBlLnRvdWNoZXMubGVuZ3RoID09PSAxO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdEcmF3aW5nJyxcbiAgcHJvcHM6IHtcbiAgICB1cmw6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICB9LFxuICAgIC8vIOagh+iusOeCuVxuICAgIHBvaW50czoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAgICB9LFxuICAgIC8vIOWIhuWMulxuICAgIHJlZ2lvbnM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gW10sXG4gICAgfSxcbiAgICBwb2ludENvbG9yOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnI2ZmNDU0NicsXG4gICAgfSxcbiAgICAvLyDmoIforrDngrnljYrlvoRcbiAgICBwb2ludFJhZGl1czoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogNyxcbiAgICB9LFxuICAgIC8vIOacgOWkp+e8qeaUvuWAjeaVsFxuICAgIHNjYWxlTWF4OiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiA0LFxuICAgIH0sXG4gICAgY2xpY2tEZWxheToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogNTAwLFxuICAgIH0sXG4gICAgZm9sZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnaG91c2UtaW1hZ2UnLFxuICAgIH0sXG4gICAgb25saW5lTW9kZToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG4gICAgLy9cbiAgICBjb250ZW50U2Nyb2xsOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0Rvd25sb2FkaW5nOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnJyxcblxuICAgICAgLy8g55S75biDXG4gICAgICBjYW52YXM6IG51bGwsXG4gICAgICAvLyDnlLvluIMyROWunuS+i1xuICAgICAgY3R4OiBudWxsLFxuICAgICAgLy8g5Zu+54mHXG4gICAgICBpbWc6IG51bGwsXG4gICAgICBzcmM6ICcnLFxuICAgICAgd2lkdGg6IDAsXG4gICAgICBoZWlnaHQ6IDAsXG4gICAgICB4OiAwLFxuICAgICAgeTogMCxcbiAgICAgIHNjYWxlOiAxLFxuICAgICAgZGVmYXVsdFNjYWxlOiAxLFxuICAgICAgcGl4ZWxSYXRpbzogMSxcbiAgICAgIG1hcmtQb3NpdGlvbjogbnVsbCxcbiAgICAgIG1hcmtQb3NpdGlvbkltYWdlRGF0YTogW10sXG4gICAgICBtYXJrQ29vcmRpbmF0ZXM6IFtdLFxuXG4gICAgICBwaW5jaFJhdGlvOiAwLFxuICAgICAgc2NhbGVCZXR3ZWVuOiBbXSxcbiAgICAgIGlzUGluY2g6IGZhbHNlLFxuICAgICAgY2xpY2tQb2ludHM6IFtdLFxuICAgICAgdG91Y2hTdGFydDogeyB4OiAwLCB5OiAwLCBjeDogMCwgY3k6IDAsIHRpbWU6IDAgfSxcbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIHVybCgpIHtcbiAgICAgIHRoaXMuZ2V0SW1hZ2UoKTtcbiAgICB9LFxuICAgIHBvaW50cyh2KSB7XG4gICAgICB0aGlzLmN0eCAmJiB0aGlzLmRyYXcoKTtcbiAgICB9LFxuICAgIHJlZ2lvbnModikge1xuICAgICAgdGhpcy5jdHggJiYgdGhpcy5kcmF3KCk7XG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCgpIHtcbiAgICB0aGlzLmdldEltYWdlKCk7XG4gIH0sXG4gIGRlc3Ryb3llZCgpIHtcbiAgICBpZiAodGhpcy5jYW52YXMpIHtcbiAgICAgIHRoaXMuY2FudmFzLndpZHRoID0gMDtcbiAgICAgIHRoaXMuY2FudmFzLmhlaWdodCA9IDA7XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0SW1hZ2UoKSB7XG4gICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSB0cnVlO1xuICAgICAgaWYgKHRoaXMudXJsKSB7XG4gICAgICAgIGxldCB1c2VySWQgPSBjb250ZXh0LmdldFVzZXIoKS51c2VyX2lkO1xuICAgICAgICBsZXQgdXJsID0gcy5yZXBsYWNlQWxsKHRoaXMudXJsLCAnXFxcXD94LW9zcy1wcm9jZXNzPWltYWdlXFxcXC9yZXNpemUsJywgJ0AnKTtcbiAgICAgICAgbGV0IGZpbGVuYW1lID0gcy5zdHJSaWdodEJhY2sodXJsLCAnLycpO1xuICAgICAgICBpZiAoIWZpbGVuYW1lKSB7XG4gICAgICAgICAgdGhpcy5lcnJvciA9ICfmiLflnovlm77lnLDlnYDplJnor68nO1xuICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmVycm9yID0gJyc7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcGF0aHMgPSBbXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcEltYWdlUGF0aCgpICsgdXNlcklkICsgJy8nICsgdGhpcy5mb2xkZXIgKyAnLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwSW1hZ2VQYXRoKCkgKyB1c2VySWQgKyAnL2hvdXNlLWltYWdlLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwSW1hZ2VQYXRoKCkgKyB1c2VySWQgKyAnL2RyYXdpbmcvJyArIGZpbGVuYW1lLFxuICAgICAgICAgIHBsdWdpbkFwaS5hcHBJbWFnZVBhdGgoKSArIHVzZXJJZCArICcvbG9jYXRpb24taW1hZ2UvJyArIGZpbGVuYW1lLFxuICAgICAgICAgIHBsdWdpbkFwaS5hcHBJbWFnZVBhdGgoKSArIHVzZXJJZCArICcvaW1hZ2VzLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwRGF0YVBhdGgoKSArIHVzZXJJZCArICcvJyArIHRoaXMuZm9sZGVyICsgJy8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcERhdGFQYXRoKCkgKyB1c2VySWQgKyAnL2hvdXNlLWltYWdlLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwRGF0YVBhdGgoKSArIHVzZXJJZCArICcvZHJhd2luZy8nICsgZmlsZW5hbWUsXG4gICAgICAgICAgcGx1Z2luQXBpLmFwcERhdGFQYXRoKCkgKyB1c2VySWQgKyAnL2xvY2F0aW9uLWltYWdlLycgKyBmaWxlbmFtZSxcbiAgICAgICAgICBwbHVnaW5BcGkuYXBwRGF0YVBhdGgoKSArIHVzZXJJZCArICcvaW1hZ2VzLycgKyBmaWxlbmFtZSxcbiAgICAgICAgXTtcbiAgICAgICAgbGV0IHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcblxuICAgICAgICBpZiAoQVBQX0VOViA9PT0gJ2RldicgfHwgdGhpcy5vbmxpbmVNb2RlKSB7XG4gICAgICAgICAgcHJvbWlzZSA9IHByb21pc2UudGhlbigoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy51cmw7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgXy5lYWNoKHBhdGhzLCBwYXRoID0+IHtcbiAgICAgICAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gcGx1Z2luQXBpLmlzRmlsZUV4aXN0cyhwYXRoKS50aGVuKGV4aXN0cyA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGV4aXN0cykge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIEltYWdlU2VydmljZS5fZml4UGF0aChwYXRoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcHJvbWlzZVxuICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzKSB7XG4gICAgICAgICAgICAgIC8vIOWtmOWcqOacrOWcsOaWh+S7tu+8jOebtOaOpei/lOWbnlxuICAgICAgICAgICAgICB0aGlzLnNyYyA9IHJlcztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIC8vIOS4jeWtmOWcqOacrOWcsOaWh+S7tu+8jOS4i+i9vVxuICAgICAgICAgICAgICByZXR1cm4gbmV0d29yay5nZXRIYXNOZXR3b3JrKCkudGhlbihoYXNOZXR3b3JrID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaGFzTmV0d29yaykge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIEltYWdlU2VydmljZS5kb3dubG9hZCh0aGlzLnVybCwgdHJ1ZSwgdGhpcy5mb2xkZXIpLnRoZW4ocGF0aCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3JjID0gcGF0aDtcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ+W9k+WJjeaXoOe9kee7nCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5zcmMpIHtcbiAgICAgICAgICAgICAgdGhpcy5pbWcgPSBuZXcgSW1hZ2UoKTtcblxuICAgICAgICAgICAgICB0aGlzLmltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaW1nLmNvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuaW5pdCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5Yqg6L295Zu+54mH5aSx6LSlJztcbiAgICAgICAgICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICB0aGlzLmltZy5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5Yqg6L295Zu+54mH5aSx6LSlJztcbiAgICAgICAgICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSB0aGlzLnNyYztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAn5LiL6L295oi35Z6L5Zu+5aSx6LSlJztcbiAgICAgICAgICAgICAgdGhpcy5pc0Rvd25sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgICAgdGhpcy5lcnJvciA9IF8uaXNTdHJpbmcoZXJyb3IpID8gZXJyb3IgOiAn5LiL6L295oi35Z6L5Zu+5aSx6LSlJztcbiAgICAgICAgICAgIHRoaXMuaXNEb3dubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lcnJvciA9ICfmiLflnovlm77lnLDlnYDplJnor68nO1xuICAgICAgICB0aGlzLmlzRG93bmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIOWIneWni+WMluWbvue6uFxuICAgIGluaXQoKSB7XG4gICAgICBpZiAoIXRoaXMuJHJlZnNbJ2RyYXdpbmctY2FudmFzJ10pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IGNvbnRlbnQgPSB0aGlzLiRyZWZzWydjb250ZW50J107XG5cbiAgICAgIHRoaXMuY2FudmFzID0gdGhpcy4kcmVmc1snZHJhd2luZy1jYW52YXMnXTtcbiAgICAgIHRoaXMuY3R4ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgIHRoaXMud2lkdGggPSBjb250ZW50Lm9mZnNldFdpZHRoO1xuICAgICAgdGhpcy5oZWlnaHQgPSBjb250ZW50Lm9mZnNldEhlaWdodDtcbiAgICAgIHRoaXMucGl4ZWxSYXRpbyA9IHRoaXMuZ2V0UGl4ZWxSYXRpbyh0aGlzLmN0eCk7XG5cbiAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmhlaWdodCA9IHRoaXMuaGVpZ2h0ICsgJ3B4JztcbiAgICAgIHRoaXMuY2FudmFzLnN0eWxlLndpZHRoID0gdGhpcy53aWR0aCArICdweCc7XG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHRoaXMud2lkdGggKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmhlaWdodCAqIHRoaXMucGl4ZWxSYXRpbztcbiAgICAgICF0aGlzLmN0eC5leHRlbmRlZCAmJiBFeHRlbmRDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQodGhpcy5jdHgpO1xuXG4gICAgICAvLyDnu5Hlrprkuovku7ZcbiAgICAgIHRoaXMuYmluZFRvdWNoRXZlbnQoKTtcblxuICAgICAgdGhpcy5jYWxjKCk7XG4gICAgICB0aGlzLmRyYXcoKTtcbiAgICB9LFxuXG4gICAgLy8g6I635Y+W5YOP57Sg5q+UXG4gICAgZ2V0UGl4ZWxSYXRpbyhjb250ZXh0KSB7XG4gICAgICBsZXQgYmFja2luZ1N0b3JlID1cbiAgICAgICAgY29udGV4dC5iYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIGNvbnRleHQubW96QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICBjb250ZXh0Lm1zQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIGNvbnRleHQuYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICAxO1xuXG4gICAgICByZXR1cm4gKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIC8gYmFja2luZ1N0b3JlO1xuICAgIH0sXG5cbiAgICAvLyDorqHnrpflubborr7nva5jYW52YXPnmoTlrr3pq5jlkozlm77niYfnvKnmlL7nmoTmr5TkvotcbiAgICBjYWxjKGltZykge1xuICAgICAgdmFyIGN0eFdpZHRoID0gdGhpcy53aWR0aDtcbiAgICAgIGxldCBzY2FsZSA9IGN0eFdpZHRoIC8gdGhpcy5pbWcud2lkdGg7XG4gICAgICBsZXQgY3R4SGVpZ2h0ID0gdGhpcy5pbWcuaGVpZ2h0ICogc2NhbGU7XG5cbiAgICAgIHZhciBoZWlnaHQgPSB0aGlzLmhlaWdodCB8fCBjdHhIZWlnaHQ7XG4gICAgICBpZiAoY3R4SGVpZ2h0ID4gdGhpcy5oZWlnaHQpIHtcbiAgICAgICAgc2NhbGUgPSBzY2FsZSAqIChoZWlnaHQgLyBjdHhIZWlnaHQpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNjYWxlID0gc2NhbGUgKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICB0aGlzLmRlZmF1bHRTY2FsZSA9IHRoaXMuc2NhbGU7XG4gICAgICB0aGlzLnNjYWxlQmV0d2VlbiA9IFt0aGlzLnNjYWxlLCB0aGlzLnNjYWxlICogdGhpcy5zY2FsZU1heF07XG4gICAgfSxcblxuICAgIC8vIOWdkOagh+i9rOaNolxuICAgIHdpblRvQ2FudmFzKHgsIHkpIHtcbiAgICAgIHZhciBwb3MgPSB0aGlzLmNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgeDogeCAtIHBvcy5sZWZ0ICogKHRoaXMuY2FudmFzLndpZHRoIC8gKHBvcy53aWR0aCAqIHRoaXMucGl4ZWxSYXRpbykpLFxuICAgICAgICB5OiB5IC0gcG9zLnRvcCAqICh0aGlzLmNhbnZhcy5oZWlnaHQgLyAocG9zLmhlaWdodCAqIHRoaXMucGl4ZWxSYXRpbykpLFxuICAgICAgfTtcbiAgICB9LFxuICAgIC8vIOWIpOaWreaLluaLveeahOaXtuWAmeaYr+WQpuWIsOi+vui+ueeVjO+8jOaWueWQke+8miB0ICwgciAsIGIgLCBsXG4gICAgaXNCb3VuZGFyeShkaXIpIHtcbiAgICAgIHN3aXRjaCAoZGlyKSB7XG4gICAgICAgIGNhc2UgJ3QnOlxuICAgICAgICAgIGlmICh0aGlzLnkgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncic6XG4gICAgICAgICAgaWYgKHRoaXMueCA8PSB0aGlzLmNhbnZhcy53aWR0aCAtIHRoaXMuaW1nLndpZHRoICogdGhpcy5zY2FsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdiJzpcbiAgICAgICAgICBpZiAodGhpcy55IDw9IHRoaXMuaW1nLmhlaWdodCAqIHRoaXMuc2NhbGVCZXR3ZWVuWzBdIC0gdGhpcy5pbWcuaGVpZ2h0ICogdGhpcy5zY2FsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdsJzpcbiAgICAgICAgICBpZiAodGhpcy54ID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIGJpbmRUb3VjaEV2ZW50KCkge1xuICAgICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaHN0YXJ0KTtcbiAgICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaG1vdmUpO1xuICAgICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLnRvdWNoTW92ZUFuZEVuZEhhbmRsZXIpO1xuICAgIH0sXG5cbiAgICB1bmJpbmRUb3VjaEV2ZW50KCkge1xuICAgICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaHN0YXJ0KTtcbiAgICAgIHRoaXMuY2FudmFzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaG1vdmUpO1xuICAgICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLnRvdWNoTW92ZUFuZEVuZEhhbmRsZXIpO1xuICAgIH0sXG5cbiAgICBvblRvdWNoc3RhcnQoZSkge1xuICAgICAgdGhpcy5pc1BpbmNoID0gZmFsc2U7XG5cbiAgICAgIGlmIChfaXNEcmFnZ2luZyhlKSkge1xuICAgICAgICBsZXQgdG91Y2ggPSBlLnRvdWNoZXNbMF07XG4gICAgICAgIGxldCBwb3MgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpO1xuXG4gICAgICAgIHRoaXMudG91Y2hTdGFydCA9IHtcbiAgICAgICAgICB4OiBwb3MueCxcbiAgICAgICAgICB5OiBwb3MueSxcbiAgICAgICAgICBjeDogdG91Y2guY2xpZW50WCxcbiAgICAgICAgICBjeTogdG91Y2guY2xpZW50WSxcbiAgICAgICAgICB0aW1lOiBEYXRlLm5vdygpLFxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChfaXNQaW5jaGluZyhlKSkge1xuICAgICAgICBsZXQgdG91Y2gxID0gZS50b3VjaGVzWzBdO1xuICAgICAgICBsZXQgdG91Y2gyID0gZS50b3VjaGVzWzFdO1xuICAgICAgICBsZXQgZGlzdGFuY2U7XG4gICAgICAgIGxldCBwb2ludDEgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoMS5jbGllbnRYLCB0b3VjaDEuY2xpZW50WSk7XG4gICAgICAgIGxldCBwb2ludDIgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoMi5jbGllbnRYLCB0b3VjaDIuY2xpZW50WSk7XG5cbiAgICAgICAgLy8gdGhpcy5pc1BpbmNoID0gdHJ1ZTtcbiAgICAgICAgZGlzdGFuY2UgPSBNYXRoLnNxcnQoTWF0aC5wb3cocG9pbnQyLnggLSBwb2ludDEueCwgMikgKyBNYXRoLnBvdyhwb2ludDIueSAtIHBvaW50MS55LCAyKSk7XG5cbiAgICAgICAgdGhpcy5waW5jaFJhdGlvID0gdGhpcy5zY2FsZSAvIGRpc3RhbmNlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBvblRvdWNobW92ZShlKSB7XG4gICAgICBpZiAodGhpcy5jb250ZW50U2Nyb2xsID09PSBmYWxzZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChfaXNEcmFnZ2luZyhlKSkge1xuICAgICAgICAvLyDpmLvmraLlhoXlrrnmu5rliqjlpITnkIZcbiAgICAgICAgdmFyIHRyaWdnZXJTdG9wID1cbiAgICAgICAgICAodGhpcy50b3VjaFN0YXJ0LmN5ID4gZS5wYWdlWSAmJiB0aGlzLmlzQm91bmRhcnkoJ2InKSkgfHxcbiAgICAgICAgICAodGhpcy50b3VjaFN0YXJ0LmN5IDwgZS5wYWdlWSAmJiB0aGlzLmlzQm91bmRhcnkoJ3QnKSkgfHxcbiAgICAgICAgICAodGhpcy50b3VjaFN0YXJ0LmN4ID4gZS5wYWdlWCAmJiB0aGlzLmlzQm91bmRhcnkoJ3InKSkgfHxcbiAgICAgICAgICAodGhpcy50b3VjaFN0YXJ0LmN4IDwgZS5wYWdlWCAmJiB0aGlzLmlzQm91bmRhcnkoJ2wnKSk7XG4gICAgICAgIGlmICghdHJpZ2dlclN0b3ApIHtcbiAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudG91Y2hNb3ZlQW5kRW5kSGFuZGxlcihlKTtcbiAgICAgIH0gZWxzZSBpZiAoX2lzUGluY2hpbmcoZSkpIHtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgbGV0IHRvdWNoMSA9IGUudG91Y2hlc1swXTtcbiAgICAgICAgbGV0IHRvdWNoMiA9IGUudG91Y2hlc1sxXTtcbiAgICAgICAgbGV0IHBvaW50MSA9IHRoaXMud2luVG9DYW52YXModG91Y2gxLmNsaWVudFgsIHRvdWNoMS5jbGllbnRZKTtcbiAgICAgICAgbGV0IHBvaW50MiA9IHRoaXMud2luVG9DYW52YXModG91Y2gyLmNsaWVudFgsIHRvdWNoMi5jbGllbnRZKTtcbiAgICAgICAgbGV0IHNjYWxlO1xuICAgICAgICBsZXQgZGlzdGFuY2U7XG4gICAgICAgIGxldCBjZW50ZXI7XG4gICAgICAgIGxldCByYXRlO1xuICAgICAgICBsZXQgb2Zmc2V0O1xuXG4gICAgICAgIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHBvaW50Mi54IC0gcG9pbnQxLngsIDIpICsgTWF0aC5wb3cocG9pbnQyLnkgLSBwb2ludDEueSwgMikpO1xuXG4gICAgICAgIHRoaXMuaXNQaW5jaCA9IHRydWU7IC8vIOmYsuatoue8qeaUvuWQjuaUvuW8gOaJi+aMh++8jOS4gOagueaJi+aMh+WFiOaUvuW8gO+8jOeEtuWQjuinpuWPkeaLluWKqCAtLT4g5Y+R55Sf5YGP56e7XG4gICAgICAgIHNjYWxlID0gdGhpcy5waW5jaFJhdGlvICogZGlzdGFuY2U7XG5cbiAgICAgICAgaWYgKHNjYWxlID4gdGhpcy5zY2FsZUJldHdlZW5bMF0gJiYgc2NhbGUgPCB0aGlzLnNjYWxlQmV0d2VlblsxXSkge1xuICAgICAgICAgIC8vIDLmiYvmjIfnvKnmlL7nmoTkuK3lv4PngrlcbiAgICAgICAgICBjZW50ZXIgPSB7XG4gICAgICAgICAgICB4OiAoKHBvaW50MS54ICsgcG9pbnQyLngpIC8gMikgKiB0aGlzLnBpeGVsUmF0aW8sXG4gICAgICAgICAgICB5OiAoKHBvaW50MS55ICsgcG9pbnQyLnkpIC8gMikgKiB0aGlzLnBpeGVsUmF0aW8sXG4gICAgICAgICAgfTtcbiAgICAgICAgICAvLyDkuK3lv4Pngrnnm7jlr7nkuo7lm77niYflt6bkuIrop5LnmoTmr5TkvotcbiAgICAgICAgICByYXRlID0ge1xuICAgICAgICAgICAgeDogKGNlbnRlci54IC0gdGhpcy54KSAvICh0aGlzLmltZy53aWR0aCAqIHRoaXMuc2NhbGUpLFxuICAgICAgICAgICAgeTogKGNlbnRlci55IC0gdGhpcy55KSAvICh0aGlzLmltZy5oZWlnaHQgKiB0aGlzLnNjYWxlKSxcbiAgICAgICAgICB9O1xuICAgICAgICAgIC8vIOaUvuWkp+WQjueahOS4reW/g+eCueWdkOagh1xuICAgICAgICAgIGNlbnRlci5uZXdYID0gdGhpcy54ICsgdGhpcy5pbWcud2lkdGggKiBzY2FsZSAqIHJhdGUueDtcbiAgICAgICAgICBjZW50ZXIubmV3WSA9IHRoaXMueSArIHRoaXMuaW1nLmhlaWdodCAqIHNjYWxlICogcmF0ZS55O1xuICAgICAgICAgIG9mZnNldCA9IHtcbiAgICAgICAgICAgIHg6IGNlbnRlci5uZXdYIC0gY2VudGVyLngsXG4gICAgICAgICAgICB5OiBjZW50ZXIubmV3WSAtIGNlbnRlci55LFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAvLyDnvKnlsI/ml7bmnInojIPlm7TpmZDliLZcbiAgICAgICAgICBpZiAoc2NhbGUgPCB0aGlzLnNjYWxlKSB7XG4gICAgICAgICAgICB0aGlzLnNldFJhbmdlKHRoaXMueCAtIG9mZnNldC54LCB0aGlzLnkgLSBvZmZzZXQueSwgc2NhbGUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOaUvuWkp+aXtu+8jOS/neaMgeS4reW/g+eCueS9jee9ruS4jeWPmO+8jOenu+WKqOW3puS4iuinkueahOWdkOagh1xuICAgICAgICAgIGlmIChzY2FsZSA+IHRoaXMuc2NhbGUpIHtcbiAgICAgICAgICAgIHRoaXMueCA9IHRoaXMueCAtIG9mZnNldC54O1xuICAgICAgICAgICAgdGhpcy55ID0gdGhpcy55IC0gb2Zmc2V0Lnk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8g5pyA5ZCO6YeN57uYXG4gICAgICAgICAgaWYgKHNjYWxlICE9PSB0aGlzLnNjYWxlKSB7XG4gICAgICAgICAgICAvLyDph43mlrDorr7nva7mr5TkvotcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgPSBzY2FsZTtcbiAgICAgICAgICAgIC8vIOmHjee7mFxuICAgICAgICAgICAgdGhpcy5kcmF3KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHRvdWNoTW92ZUFuZEVuZEhhbmRsZXIoZSkge1xuICAgICAgbGV0IHR5cGUgPSBlLnR5cGU7XG4gICAgICBsZXQgdG91Y2ggPSB7XG4gICAgICAgIHRvdWNobW92ZTogZS50b3VjaGVzWzBdLFxuICAgICAgICB0b3VjaGVuZDogZS5jaGFuZ2VkVG91Y2hlc1swXSxcbiAgICAgIH1bdHlwZV07XG4gICAgICBsZXQgb2Zmc2V0WDtcbiAgICAgIGxldCBvZmZzZXRZO1xuICAgICAgbGV0IHBvcyA9IHRoaXMud2luVG9DYW52YXModG91Y2guY2xpZW50WCwgdG91Y2guY2xpZW50WSk7XG5cbiAgICAgIG9mZnNldFggPSAocG9zLnggLSB0aGlzLnRvdWNoU3RhcnQueCkgKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICBvZmZzZXRZID0gKHBvcy55IC0gdGhpcy50b3VjaFN0YXJ0LnkpICogdGhpcy5waXhlbFJhdGlvO1xuXG4gICAgICBpZiAoXG4gICAgICAgIHR5cGUgPT09ICd0b3VjaGVuZCcgJiZcbiAgICAgICAgRGF0ZS5ub3coKSAtIHRoaXMudG91Y2hTdGFydC50aW1lIDwgdGhpcy5jbGlja0RlbGF5ICYmXG4gICAgICAgIE1hdGguYWJzKHRvdWNoLmNsaWVudFggLSB0aGlzLnRvdWNoU3RhcnQuY3gpIDwgNiAmJlxuICAgICAgICBNYXRoLmFicyh0b3VjaC5jbGllbnRZIC0gdGhpcy50b3VjaFN0YXJ0LmN5KSA8IDZcbiAgICAgICkge1xuICAgICAgICB0aGlzLmNsaWNrSGFuZGxlcihlKTsgLy8g54K55Ye7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodHlwZSA9PT0gJ3RvdWNobW92ZScgJiYgIXRoaXMuaXNQaW5jaCkge1xuICAgICAgICAgIC8vIOaLluWKqFxuICAgICAgICAgIHRoaXMudG91Y2hTdGFydC54ID0gcG9zLng7XG4gICAgICAgICAgdGhpcy50b3VjaFN0YXJ0LnkgPSBwb3MueTtcblxuICAgICAgICAgIHRoaXMuc2V0UmFuZ2UodGhpcy54ICsgb2Zmc2V0WCwgdGhpcy55ICsgb2Zmc2V0WSwgdGhpcy5zY2FsZSk7XG4gICAgICAgICAgLy8gdGhpcy54ICs9IG9mZnNldFg7IHRoaXMueSArPSBvZmZzZXRZO1xuICAgICAgICAgIHRoaXMuZHJhdygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOeCueWHu+Wbnuiwg1xuICAgIGlzQ2FuQ2xpY2socG9zKSB7XG4gICAgICB2YXIgZmxhZyA9IGZhbHNlO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm1hcmtQb3NpdGlvbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgcGFyc2VGbG9hdChwb3MueCkgPiBwYXJzZUZsb2F0KHRoaXMubWFya1Bvc2l0aW9uW2ldLngpICYmXG4gICAgICAgICAgcGFyc2VGbG9hdChwb3MueCkgPFxuICAgICAgICAgICAgcGFyc2VGbG9hdCh0aGlzLm1hcmtQb3NpdGlvbltpXS54KSArIHBhcnNlRmxvYXQodGhpcy5tYXJrUG9zaXRpb25baV0udykgJiZcbiAgICAgICAgICBwYXJzZUZsb2F0KHBvcy55KSA+IHBhcnNlRmxvYXQodGhpcy5tYXJrUG9zaXRpb25baV0ueSkgJiZcbiAgICAgICAgICBwYXJzZUZsb2F0KHBvcy55KSA8XG4gICAgICAgICAgICBwYXJzZUZsb2F0KHRoaXMubWFya1Bvc2l0aW9uW2ldLnkpICsgcGFyc2VGbG9hdCh0aGlzLm1hcmtQb3NpdGlvbltpXS5oKVxuICAgICAgICApIHtcbiAgICAgICAgICBmbGFnID0gdHJ1ZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZsYWc7XG4gICAgfSxcblxuICAgIGNsaWNrSGFuZGxlcihlKSB7XG4gICAgICB2YXIgdG91Y2ggPSBlLmNoYW5nZWRUb3VjaGVzWzBdO1xuICAgICAgLy8g5byA5ZCv5qCH6K6w5Yqf6IO95pe277yM5Y+q5pyJ5qCH6K6w5Yy65Z+f5Y+v5Lul54K55Ye7XG4gICAgICBpZiAodGhpcy5tYXJrKSB7XG4gICAgICAgIHZhciBwb3MgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpO1xuICAgICAgICB2YXIgcmF0ZSA9IHtcbiAgICAgICAgICB4OiAocG9zLnggLSB0aGlzLnggLyB0aGlzLnBpeGVsUmF0aW8pIC8gKCh0aGlzLmltZy53aWR0aCAqIHRoaXMuc2NhbGUpIC8gdGhpcy5waXhlbFJhdGlvKSxcbiAgICAgICAgICB5OlxuICAgICAgICAgICAgKHBvcy55IC0gdGhpcy55IC8gdGhpcy5waXhlbFJhdGlvKSAvICgodGhpcy5pbWcuaGVpZ2h0ICogdGhpcy5zY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8pLFxuICAgICAgICB9O1xuICAgICAgICBwb3MgPSB7XG4gICAgICAgICAgeDogcmF0ZS54ICogdGhpcy5pbWcud2lkdGgsXG4gICAgICAgICAgeTogcmF0ZS55ICogdGhpcy5pbWcuaGVpZ2h0LFxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICh0aGlzLmlzQ2FuQ2xpY2socG9zKSkge1xuICAgICAgICAgIHRoaXMuY3R4LnNhdmUoKTtcbiAgICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICB0aGlzLmN0eC5hcmMoXG4gICAgICAgICAgICAocG9zLnggKiB0aGlzLnNjYWxlKSAvIHRoaXMucGl4ZWxSYXRpbyArIHRoaXMueCAvIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgICAgIChwb3MueSAqIHRoaXMuc2NhbGUpIC8gdGhpcy5waXhlbFJhdGlvICsgdGhpcy55IC8gdGhpcy5waXhlbFJhdGlvLFxuICAgICAgICAgICAgdGhpcy5zY2FsZSA9PT0gdGhpcy5kZWZhdWx0U2NhbGVcbiAgICAgICAgICAgICAgPyB0aGlzLnBvaW50UmFkaXVzXG4gICAgICAgICAgICAgIDogdGhpcy5wb2ludFJhZGl1cyAqICgxICsgKHRoaXMuc2NhbGUgLSB0aGlzLmRlZmF1bHRTY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8pLFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIE1hdGguUEkgKiAyLFxuICAgICAgICAgICAgZmFsc2VcbiAgICAgICAgICApO1xuICAgICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcbiAgICAgICAgICB0aGlzLmN0eC5yZXN0b3JlKCk7XG5cbiAgICAgICAgICB2YXIgbmV3TWFya1BvaW50ID0ge1xuICAgICAgICAgICAgeDogcG9zLngsXG4gICAgICAgICAgICB5OiBwb3MueSxcbiAgICAgICAgICB9O1xuICAgICAgICAgIHRoaXMubWFya0Nvb3JkaW5hdGVzLnB1c2gobmV3TWFya1BvaW50KTtcbiAgICAgICAgICB0aGlzLnBvaW50cy5wdXNoKG5ld01hcmtQb2ludCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHRoaXMucmVkcmF3KGUsIHRoaXMud2luVG9DYW52YXModG91Y2guY2xpZW50WCwgdG91Y2guY2xpZW50WSkpO1xuICAgIH0sXG5cbiAgICAvLyDmi5bliqjlkoznvKnmlL7nmoTojIPlm7TpmZDliLZcbiAgICBzZXRSYW5nZSh4LCB5LCBzY2FsZSkge1xuICAgICAgbGV0IGltZ1cgPSB0aGlzLmltZy53aWR0aCAqIHNjYWxlO1xuICAgICAgbGV0IGltZ0ggPSB0aGlzLmltZy5oZWlnaHQgKiBzY2FsZTtcbiAgICAgIGxldCBjYW5zVyA9IHRoaXMuY2FudmFzLndpZHRoO1xuICAgICAgbGV0IGNhbnNIID0gdGhpcy5jYW52YXMuaGVpZ2h0O1xuICAgICAgbGV0IGJvcmRlckJvdHRvbSA9IHRoaXMuaW1nLmhlaWdodCAqIHRoaXMuc2NhbGVCZXR3ZWVuWzBdO1xuXG4gICAgICBpZiAoaW1nVyA8IGNhbnNXKSB7XG4gICAgICAgIHggPSAoY2Fuc1cgLSBpbWdXKSAvIDI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4ID0geCArIGltZ1cgPCBjYW5zVyA/IGNhbnNXIC0gaW1nVyA6IHg7XG4gICAgICAgIHggPSB4ID4gMCA/IDAgOiB4O1xuICAgICAgfVxuXG4gICAgICBpZiAoaW1nSCA8IGNhbnNIKSB7XG4gICAgICAgIHkgPSAoY2Fuc0ggLSBpbWdIKSAvIDI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB5ID0geSArIGltZ0ggPCBib3JkZXJCb3R0b20gPyBib3JkZXJCb3R0b20gLSBpbWdIIDogeTtcbiAgICAgICAgeSA9IHkgPiAwID8gMCA6IHk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMueCA9IHg7XG4gICAgICB0aGlzLnkgPSB5O1xuICAgIH0sXG5cbiAgICBkcmF3KCkge1xuICAgICAgdGhpcy5zZXRSYW5nZSh0aGlzLngsIHRoaXMueSwgdGhpcy5zY2FsZSk7XG5cbiAgICAgIHRoaXMuZHJhd0ltYWdlKCk7XG4gICAgICB0aGlzLmRyYXdQb2ludHMoKTtcbiAgICAgIHRoaXMuZHJhd1JlZ2lvbnMoKTtcbiAgICB9LFxuXG4gICAgLy8g54K55Ye76YeN57uYXG4gICAgcmVkcmF3KGUsIHBvcykge1xuICAgICAgdGhpcy5jbGlja1BvaW50cyA9IFtdO1xuICAgICAgdGhpcy5kcmF3SW1hZ2UoKTtcbiAgICAgIHRoaXMuZHJhd1BvaW50cyhwb3MpO1xuICAgICAgdGhpcy5kcmF3UmVnaW9ucyhwb3MpO1xuICAgICAgdGhpcy5jbGlja0NhbGxiYWNrKGUsIHRoaXMuY2xpY2tQb2ludHMpO1xuICAgIH0sXG5cbiAgICAvLyDliKTmlq3ngrnlh7vkvY3nva5cbiAgICBjbGlja0NhbGxiYWNrKGUsIHBvaW50cykge1xuICAgICAgbGV0IGNsaWNrUG9pbnQ7XG4gICAgICBwb2ludHMuc29tZShmdW5jdGlvbiAodiwgaSkge1xuICAgICAgICBpZiAodi50YWcgPT09ICdwb2ludHMnKSB7XG4gICAgICAgICAgY2xpY2tQb2ludCA9IHY7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2xpY2tQb2ludCA9IHY7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdmFyIHRvdWNoID0gZS5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgICAgIGxldCBwb3MgPSB0aGlzLndpblRvQ2FudmFzKHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpO1xuICAgICAgbGV0IHJhdGUgPSB7XG4gICAgICAgIHg6IChwb3MueCAtIHRoaXMueCAvIHRoaXMucGl4ZWxSYXRpbykgLyAoKHRoaXMuaW1nLndpZHRoICogdGhpcy5zY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8pLFxuICAgICAgICB5OiAocG9zLnkgLSB0aGlzLnkgLyB0aGlzLnBpeGVsUmF0aW8pIC8gKCh0aGlzLmltZy5oZWlnaHQgKiB0aGlzLnNjYWxlKSAvIHRoaXMucGl4ZWxSYXRpbyksXG4gICAgICB9O1xuXG4gICAgICBwb3MgPSB7XG4gICAgICAgIHg6IHBhcnNlRmxvYXQoKHJhdGUueCAqIHRoaXMuaW1nLndpZHRoKS50b0ZpeGVkKDIpKSxcbiAgICAgICAgeTogcGFyc2VGbG9hdCgocmF0ZS55ICogdGhpcy5pbWcuaGVpZ2h0KS50b0ZpeGVkKDIpKSxcbiAgICAgIH07XG5cbiAgICAgIC8vIOeCueWHu+aIt+Wei+WbvuWMuuWfn++8jOepuueZveWMuuWfn+S4jeinpuWPkVxuICAgICAgaWYgKHBvcy55ID49IDAgJiYgcG9zLnggPj0gMCAmJiBwb3MueSA8PSB0aGlzLmltZy5oZWlnaHQgJiYgcG9zLnggPD0gdGhpcy5pbWcud2lkdGgpIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnb25jbGljaycsIHtcbiAgICAgICAgICB0eXBlOiBjbGlja1BvaW50ID8gJ3BvaW50JyA6ICcnLFxuICAgICAgICAgIHBvaW50czogdGhpcy5wb2ludHMsXG4gICAgICAgICAgcG9pbnQ6IGNsaWNrUG9pbnQsXG4gICAgICAgICAgY2xpY2tQb2ludDogY2xpY2tQb2ludCxcbiAgICAgICAgICB4OiBwb3MueCxcbiAgICAgICAgICB5OiBwb3MueSxcbiAgICAgICAgICBzY2FsZTogdGhpcy5zY2FsZSAvIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOe7mOWItuWbvueJh1xuICAgIGRyYXdJbWFnZSgpIHtcbiAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KTtcbiAgICAgIHRoaXMuY3R4LmRyYXdJbWFnZShcbiAgICAgICAgdGhpcy5pbWcsXG4gICAgICAgIDAsXG4gICAgICAgIDAsXG4gICAgICAgIHRoaXMuaW1nLndpZHRoLFxuICAgICAgICB0aGlzLmltZy5oZWlnaHQsXG4gICAgICAgIHRoaXMueCxcbiAgICAgICAgdGhpcy55LFxuICAgICAgICB0aGlzLmltZy53aWR0aCAqIHRoaXMuc2NhbGUsXG4gICAgICAgIHRoaXMuaW1nLmhlaWdodCAqIHRoaXMuc2NhbGVcbiAgICAgICk7XG4gICAgfSxcblxuICAgIGRyYXdQb2ludHMocG9zKSB7XG4gICAgICB0aGlzLnBvaW50cy5mb3JFYWNoKCh2LCBpKSA9PiB7XG4gICAgICAgIHRoaXMuZHJhd1BvaW50KFxuICAgICAgICAgICh2LnggKiB0aGlzLnNjYWxlKSAvIHRoaXMucGl4ZWxSYXRpbyArIHRoaXMueCAvIHRoaXMucGl4ZWxSYXRpbyxcbiAgICAgICAgICAodi55ICogdGhpcy5zY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8gKyB0aGlzLnkgLyB0aGlzLnBpeGVsUmF0aW8sXG4gICAgICAgICAgdGhpcy5wb2ludFJhZGl1cyxcbiAgICAgICAgICBpLFxuICAgICAgICAgIHBvcyxcbiAgICAgICAgICB2LmNvbG9yXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgZHJhd1BvaW50KHgsIHksIHIsIGksIHBvcywgY29sb3IpIHtcbiAgICAgIHRoaXMuY3R4LnNhdmUoKTtcbiAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICB0aGlzLmN0eC5zaGFkb3dCbHVyID0gciAvIDI7XG4gICAgICB0aGlzLmN0eC5zaGFkb3dDb2xvciA9ICdibGFjayc7XG5cbiAgICAgIGlmIChjb2xvcikge1xuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSBjb2xvcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOm7mOiupOminOiJslxuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSB0aGlzLnBvaW50Q29sb3I7XG4gICAgICB9XG4gICAgICB0aGlzLmN0eC5hcmMoeCwgeSwgciwgMCwgTWF0aC5QSSAqIDIsIGZhbHNlKTtcbiAgICAgIHRoaXMuY3R4LmZpbGwoKTtcblxuICAgICAgdGhpcy5jdHguc2hhZG93Qmx1ciA9IDA7XG4gICAgICB0aGlzLmN0eC5zaGFkb3dDb2xvciA9ICd0cmFuc3BhcmVudCc7XG5cbiAgICAgIHRoaXMuY3R4LnJlc3RvcmUoKTtcblxuICAgICAgLy8g5omp5aSn5Y+v54K55Ye755qE5Yy65Z+f77yM5Zug5Li65ZyG5q+U6L6D6Zq+54K55LitXG4gICAgICByID0gciAqIDI7XG4gICAgICB0aGlzLmN0eC5zYXZlKCk7XG4gICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gJ3RyYW5zcGFyZW50JztcbiAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICd0cmFuc3BhcmVudCc7XG4gICAgICB0aGlzLmN0eC5yZWN0KHggLSByLCB5IC0gciwgMiAqIHIsIDIgKiByKTtcbiAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xuICAgICAgdGhpcy5jdHgucmVzdG9yZSgpO1xuXG4gICAgICBpZiAocG9zICYmIHRoaXMuY3R4LmlzUG9pbnRJblBhdGgocG9zLnggKiB0aGlzLnBpeGVsUmF0aW8sIHBvcy55ICogdGhpcy5waXhlbFJhdGlvKSkge1xuICAgICAgICB0aGlzLmNsaWNrUG9pbnRzLnB1c2goe1xuICAgICAgICAgIHRhZzogJ3BvaW50cycsXG4gICAgICAgICAgcG9zOiBwb3MsXG4gICAgICAgICAgaW5kZXg6IGksXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBkcmF3UmVnaW9ucyhwb3MpIHtcbiAgICAgIGlmICh0aGlzLnJlZ2lvbnMgJiYgdGhpcy5yZWdpb25zLmxlbmd0aCkge1xuICAgICAgICB0aGlzLnJlZ2lvbnMuZm9yRWFjaCgodiwgaSkgPT4ge1xuICAgICAgICAgIHZhciB4TWluLCB4TWF4LCB5TWluLCB5TWF4O1xuICAgICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICAgICAgdi5hcmVhLmZvckVhY2goKHAsIHBpKSA9PiB7XG4gICAgICAgICAgICB2YXIgeCA9IChwWzBdICogdGhpcy5zY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8gKyB0aGlzLnggLyB0aGlzLnBpeGVsUmF0aW87XG4gICAgICAgICAgICB2YXIgeSA9IChwWzFdICogdGhpcy5zY2FsZSkgLyB0aGlzLnBpeGVsUmF0aW8gKyB0aGlzLnkgLyB0aGlzLnBpeGVsUmF0aW87XG5cbiAgICAgICAgICAgIGlmIChwaSkge1xuICAgICAgICAgICAgICB0aGlzLmN0eC5saW5lVG8oeCwgeSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLmN0eC5tb3ZlVG8oeCwgeSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHhNaW4gPSB4TWluID09PSB1bmRlZmluZWQgPyB4IDogeE1pbiA8IHggPyB4TWluIDogeDtcbiAgICAgICAgICAgIHhNYXggPSB4TWF4ID09PSB1bmRlZmluZWQgPyB4IDogeE1heCA+IHggPyB4TWF4IDogeDtcbiAgICAgICAgICAgIHlNaW4gPSB5TWluID09PSB1bmRlZmluZWQgPyB5IDogeU1pbiA8IHkgPyB5TWluIDogeTtcbiAgICAgICAgICAgIHlNYXggPSB5TWF4ID09PSB1bmRlZmluZWQgPyB5IDogeU1heCA+IHkgPyB5TWF4IDogeTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwgMTQ0LCAwLCAwLjQpJztcbiAgICAgICAgICB0aGlzLmN0eC5maWxsKCk7XG5cbiAgICAgICAgICB0aGlzLmN0eC5saW5lV2lkdGggPSAzO1xuICAgICAgICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gJyNmZWRhOGUnO1xuICAgICAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xuXG4gICAgICAgICAgdGhpcy5jdHgubGluZVdpZHRoID0gMjtcbiAgICAgICAgICB0aGlzLmN0eC5zdHJva2VTdHlsZSA9ICdyZ2JhKDAsIDAsIDAsIDAuOCknO1xuICAgICAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xuXG4gICAgICAgICAgaWYgKHBvcyAmJiB0aGlzLmN0eC5pc1BvaW50SW5QYXRoKHBvcy54ICogdGhpcy5waXhlbFJhdGlvLCBwb3MueSAqIHRoaXMucGl4ZWxSYXRpbykpIHtcbiAgICAgICAgICAgIHRoaXMuY2xpY2tQb2ludHMucHVzaCh7XG4gICAgICAgICAgICAgIHRhZzogJ3JlZ2lvbicsXG4gICAgICAgICAgICAgIHBvczogcG9zLFxuICAgICAgICAgICAgICBpbmRleDogaSxcbiAgICAgICAgICAgICAgcmVnaW9uRGF0YTogdixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOWMuuWfn+WQjeensFxuICAgICAgICAgIHRoaXMuY3R4LmZvbnQgPVxuICAgICAgICAgICAgJzE4cHggYm9sZCAtYXBwbGUtc3lzdGVtLCBcIkhlbHZldGljYSBOZXVlXCIsIFJvYm90bywgXCJTZWdvZSBVSVwiLCBzYW5zLXNlcmlmJztcbiAgICAgICAgICB0aGlzLmN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICAgICAgICB0aGlzLmN0eC5saW5lV2lkdGggPSA0O1xuXG4gICAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICAgICAgdGhpcy5jdHguc3Ryb2tlVGV4dCh2Lm5hbWUsICh4TWF4ICsgeE1pbikgLyAyLCAoeU1heCArIHlNaW4pIC8gMiArIDEwKTtcbiAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnIzExMTExMSc7XG4gICAgICAgICAgdGhpcy5jdHguZmlsbFRleHQodi5uYW1lLCAoeE1heCArIHhNaW4pIC8gMiwgKHlNYXggKyB5TWluKSAvIDIgKyAxMCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5kcmF3aW5nLWNvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4uZHJhd2luZy1jb24gY2FudmFzIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHVybCh+QHNyYy9hc3NldHMvaW1nL2RpYWdyYW0tYmcucG5nKSB3aGl0ZTtcbiAgYmFja2dyb3VuZC1zaXplOiA0cHggNHB4O1xufVxuLmxvYWRpbmctdGV4dCB7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAjYWFhO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5lcnJvci10ZXh0IHtcbiAgcGFkZGluZzogMCAxNXB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgY29sb3I6ICNmZjNkM2Q7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuPC9zdHlsZT5cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5jb250ZW50W2RhdGEtdi00ZDlhYTU1Ml17cG9zaXRpb246Zml4ZWQ7d2lkdGg6MTAwJTtib3R0b206MDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjQpO292ZXJmbG93OmhpZGRlbn0uemphcHAgLmJveFtkYXRhLXYtNGQ5YWE1NTJde2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YmFja2dyb3VuZC1jb2xvcjojZmZmfS56amFwcCAubGlzdC13cmFwW2RhdGEtdi00ZDlhYTU1Ml17ZmxleDoxO2JhY2tncm91bmQtY29sb3I6I2ZmZjtoZWlnaHQ6NDY1cHg7b3ZlcmZsb3c6YXV0bztzY3JvbGwtYmVoYXZpb3I6c21vb3RofS56amFwcCAuaXRlbVtkYXRhLXYtNGQ5YWE1NTJde3BhZGRpbmc6M3B4IDE1cHggM3B4IDI4cHg7YWxpZ24taXRlbXM6Y2VudGVyfS56amFwcCAuaXRlbS1pbmZvW2RhdGEtdi00ZDlhYTU1Ml17d2lkdGg6ODBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTBweDtjb2xvcjojOTk5fS56amFwcCAuaXRlbSAuaXRlbS1pY29uW2RhdGEtdi00ZDlhYTU1Ml17d2lkdGg6NDRweDtoZWlnaHQ6MzRweDtsaW5lLWhlaWdodDozNHB4O3RleHQtYWxpZ246cmlnaHQ7Zm9udC1zaXplOjE0cHh9LnpqYXBwIC5pdGVtIC5pY29uLWFycm93LXJpZ2h0W2RhdGEtdi00ZDlhYTU1Ml17Y29sb3I6I2M4YzhjOH0uemphcHAgLml0ZW0gLmljb24tY2hlY2tib3hbZGF0YS12LTRkOWFhNTUyXSwuemphcHAgLml0ZW0gLmljb24tY2hlY2tib3gtY2hlY2tlZFtkYXRhLXYtNGQ5YWE1NTJde3ZlcnRpY2FsLWFsaWduOnRvcDttYXJnaW4tdG9wOjcuNXB4fS56amFwcCAuaXRlbSAuaWNvbi1xdWFsaWZpZWRbZGF0YS12LTRkOWFhNTUyXXtjb2xvcjojNDI3NWU4fS56amFwcCAuaWNvbi1lbXB0eVtkYXRhLXYtNGQ5YWE1NTJde3dpZHRoOjQ0cHh9LnpqYXBwIC5pdGVtLWhkW2RhdGEtdi00ZDlhYTU1Ml17cGFkZGluZzo4cHggMTVweCAwIDE1cHh9LnpqYXBwIC5pdGVtLWhkIC5pdGVtLWluZm9bZGF0YS12LTRkOWFhNTUyXXt3aWR0aDo0OHB4O21hcmdpbjowIDE2cHg7aGVpZ2h0OjE2cHg7bGluZS1oZWlnaHQ6MTZweDtjb2xvcjojOTk5O2JvcmRlci1yYWRpdXM6OHB4O2JhY2tncm91bmQtaW1hZ2U6I2Y0ZjRmNH0uemphcHAgLm5hbWUtcGFyZW50W2RhdGEtdi00ZDlhYTU1Ml17Zm9udC1zaXplOjE2cHg7Zm9udC13ZWlnaHQ6NzAwO2NvbG9yOiMxMTF9LnpqYXBwIC5uYW1lLWNoaWxkW2RhdGEtdi00ZDlhYTU1Ml17Zm9udC1zaXplOjE0cHg7Y29sb3I6IzMzM30uemphcHAgLml0ZW0tdHJpYW5nbGVbZGF0YS12LTRkOWFhNTUyXXtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDowO2hlaWdodDowO2JvcmRlcjo1cHggc29saWQgI2M4YzhjOH0uemphcHAgLnRyaWFuZ2xlLXJpZ2h0W2RhdGEtdi00ZDlhYTU1Ml17Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNjOGM4Yzg7bGVmdDoxMHB4O3RvcDoxNXB4fS56amFwcCAudHJpYW5nbGUtZG93bltkYXRhLXYtNGQ5YWE1NTJde2JvcmRlci1jb2xvcjojYzhjOGM4IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O2xlZnQ6MTBweDt0b3A6MTcuNXB4fS56amFwcCAuYnRuLWNvbmZpcm1bZGF0YS12LTRkOWFhNTUyXXtiYWNrZ3JvdW5kLWNvbG9yOiNlYmYxZmY7YmFja2dyb3VuZC1pbWFnZTpub25lO2NvbG9yOiM0Mjc1ZTg7Ym9yZGVyLXJhZGl1czowfS56amFwcCAuYnRuLWNvbmZpcm0uYnRuLWRpc2FibGVkW2RhdGEtdi00ZDlhYTU1Ml17YmFja2dyb3VuZC1jb2xvcjojZjRmNGY0O2NvbG9yOiNiMmIyYjJ9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiPHRlbXBsYXRlPlxuICA8dHJhbnNpdGlvbiBuYW1lPVwic2xpZGUtcmlnaHRcIj5cbiAgICA8cGFnZS1jb250ZW50XG4gICAgICB2LWlmPVwic2hvd1wiXG4gICAgICBtb2RlPVwiZGlhbG9nXCJcbiAgICAgIHRpdGxlPVwi5qOA5p+l5oyH5byVXCJcbiAgICAgIDpvbi1jbG9zZT1cImNsb3NlUG9wdXBcIlxuICAgID5cbiAgICAgIDxkaXZcbiAgICAgICAgdi1pZj1cIiFpc0xvYWRpbmcgJiYgbGlzdERhdGEubGVuZ3RoXCJcbiAgICAgICAgY2xhc3M9XCJwYWdlLXNjcm9sbFwiXG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICB2LWZvcj1cIihpdGVtLCBrZXkpIGluIGxpc3REYXRhXCJcbiAgICAgICAgICA6a2V5PVwia2V5XCJcbiAgICAgICAgPlxuICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICBib3JkZXI9XCJib3R0b21cIlxuICAgICAgICAgICAgOmljb24tcmlnaHQ9XCJpdGVtLnN1Yml0ZW0gJiYgaXRlbS5zdWJpdGVtLmxlbmd0aCA/IChpdGVtLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J1wiXG4gICAgICAgICAgICBAY2xpY2s9XCJjbGlja0l0ZW0oaXRlbSlcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHQgZnctYiBjb2xvci1ibHVlIG9uZS1saW5lXCI+e3tpdGVtLml0ZW1fbmFtZX19PC9kaXY+XG4gICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiaXRlbS5pc09wZW5cIj5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbSwga2V5MikgaW4gaXRlbS5zdWJpdGVtXCJcbiAgICAgICAgICAgICAgOmtleT1cImtleTJcIlxuICAgICAgICAgICAgICBjbGFzcz1cInN1Ymxpc3RcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aXRlbVxuICAgICAgICAgICAgICAgIGJvcmRlcj1cImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJwbDBcIlxuICAgICAgICAgICAgICAgIDppY29uLXJpZ2h0PVwic3ViaXRlbS5zdWJpdGVtICYmIHN1Yml0ZW0uc3ViaXRlbS5sZW5ndGggPyAoc3ViaXRlbS5pc09wZW4gPyAnYXJyb3ctdXAnIDogJ2Fycm93LWRvd24nKSA6ICdhcnJvdy1yaWdodCdcIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrSXRlbShzdWJpdGVtKVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0IGNoZWNraXRlbS1saXN0LW5hbWVcIj57e3N1Yml0ZW0uaXRlbV9uYW1lfX08L2Rpdj5cbiAgICAgICAgICAgICAgPC9pdGVtPlxuICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInN1Yml0ZW0uaXNPcGVuXCI+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbUEsIGtleTMpIGluIHN1Yml0ZW0uc3ViaXRlbVwiXG4gICAgICAgICAgICAgICAgICA6a2V5PVwia2V5M1wiXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cInN1Ymxpc3RcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxpdGVtXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicGwwXCJcbiAgICAgICAgICAgICAgICAgICAgOmljb24tcmlnaHQ9XCJzdWJpdGVtQS5zdWJpdGVtICYmIHN1Yml0ZW1BLnN1Yml0ZW0ubGVuZ3RoID8gKHN1Yml0ZW1BLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J1wiXG4gICAgICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrSXRlbShzdWJpdGVtQSlcIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0IGNoZWNraXRlbS1saXN0LW5hbWVcIj57e3N1Yml0ZW1BLml0ZW1fbmFtZX19PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2l0ZW0+XG4gICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cInN1Yml0ZW1BLmlzT3BlblwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIoc3ViaXRlbUIsIGtleTQpIGluIHN1Yml0ZW1BLnN1Yml0ZW1cIlxuICAgICAgICAgICAgICAgICAgICAgIDprZXk9XCJrZXk0XCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInN1Ymxpc3RcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInBsMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6aWNvbi1yaWdodD1cInN1Yml0ZW1CLnN1Yml0ZW0gJiYgc3ViaXRlbUIuc3ViaXRlbS5sZW5ndGggPyAoc3ViaXRlbUIuaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJykgOiAnYXJyb3ctcmlnaHQnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cImNsaWNrSXRlbShzdWJpdGVtQilcIlxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLXRleHQgY2hlY2tpdGVtLWxpc3QtbmFtZVwiPnt7c3ViaXRlbUIuaXRlbV9uYW1lfX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2l0ZW0+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxsb2FkaW5nLXN0YXR1c1xuICAgICAgICA6aXMtbG9hZGluZz1cImlzTG9hZGluZ1wiXG4gICAgICAgIDppcy1lbXB0eT1cIiFsaXN0RGF0YS5sZW5ndGhcIlxuICAgICAgICBlbXB0eS10ZXh0PVwi5rKh5pyJ5qOA5p+l6aG5XCJcbiAgICAgIC8+XG4gICAgPC9wYWdlLWNvbnRlbnQ+XG4gIDwvdHJhbnNpdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgJHEgZnJvbSAnQHN0YXRpYy9saWIvcHJvbWlzZSc7XG5cbmltcG9ydCBDb21tb25DaGVja0l0ZW1TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY2hlY2staXRlbS1zZXJ2aWNlLmpzJztcbmltcG9ydCBDaGVja0d1aWRlRGV0YWlsIGZyb20gJ0BzcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC5qcyc7XG5pbXBvcnQgUG9wdXBNaXhpbiBmcm9tICdAc3JjL3V0aWxzL3BvcHVwLW1peGluJztcbmltcG9ydCBJdGVtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgbW1rdiBmcm9tICdAc3JjL2ZyYW1ld29yay9tbWt2JztcbmltcG9ydCBtbWt2S2V5cyBmcm9tICdAc3JjL2ZyYW1ld29yay9tbWt2LmtleXMnO1xuaW1wb3J0IHN0b3JlIGZyb20gJ0BzdG9yZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0NoZWNrR3VpZGVMaXN0JyxcbiAgY29tcG9uZW50czogeyBJdGVtIH0sXG4gIG1peGluczogW1BvcHVwTWl4aW5dLFxuICBzdG9yZSxcbiAgcHJvcHM6IHtcbiAgICBkYXRhOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIGlzTG9hZGluZzogdHJ1ZSxcblxuICAgICAgbGlzdERhdGE6IFtdLFxuXG4gICAgICBtb2R1bGU6ICcnLFxuICAgICAgaXRlbUlkOiAnJyxcbiAgICAgIGJhdGNoSWQ6ICcnLFxuICAgICAgc2VjdGlvbklkOiAnJyxcbiAgICAgIG9wdGlvbnM6ICcnLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgLy8g55So5Lul5a2Y5YKo5ZyodnV45Lit5Lyg5YWl55qE5YC877yM6L+Z5Liq5piv5Li65LqG5aSa5qih5Z2X77yM5b+r6YCf5L2/55So5LiA5Lqb5Y+C5pWw55qE5YC8XG4gICAgbW9kdWxlQXR0cmlidXRlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmdsb2JhbC5tb2R1bGVBdHRyaWJ1dGU7XG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCgpIHtcbiAgICB0aGlzLmRhdGEgPSBbXTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9wZW5Qb3B1cChwYXJhbXMpIHtcbiAgICAgIGxldCBwcm9taXNlO1xuXG4gICAgICB0aGlzLnZhbHVlID0gdHJ1ZTtcbiAgICAgIHRoaXMuc2hvdyA9IHRydWU7XG5cbiAgICAgIHRoaXMubW9kdWxlID0gcGFyYW1zLm1vZHVsZTtcbiAgICAgIHRoaXMuaXRlbUlkID0gcGFyYW1zLml0ZW1JZDtcbiAgICAgIHRoaXMuYmF0Y2hJZCA9IHBhcmFtcy5iYXRjaElkO1xuICAgICAgdGhpcy5zZWN0aW9uSWQgPSBwYXJhbXMuc2VjdGlvbklkO1xuICAgICAgdGhpcy5vcHRpb25zID0gcGFyYW1zLm9wdGlvbnM7XG5cbiAgICAgIHRoaXMuJGVtaXQoJ29wZW4nKTtcblxuICAgICAgZm9yIChsZXQga2V5IGluIHBhcmFtcykge1xuICAgICAgICB0aGlzW2tleV0gPSBwYXJhbXNba2V5XTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jaGVja1R5cGUgPSB7XG4gICAgICAgIGNoZWNrOiAzMSxcbiAgICAgICAgJ2NoZWNrLXNhZmV0eSc6IDM2LFxuICAgICAgICAnY2hlY2stcXVhbGl0eSc6IDM3LFxuICAgICAgICAnbWVhc3VyZS12Myc6IDQxLFxuICAgICAgICBwcm9jZXNzOiAzMixcbiAgICAgICAgJ2ZseS1pbnNwZWN0JzogMTAxLFxuICAgICAgfVt0aGlzLm1vZHVsZV07XG5cbiAgICAgIGxldCBpc0luaXRCeUJpZHNlY3Rpb24gPSBmYWxzZTtcbiAgICAgIGlmICghXy5pc0VtcHR5KHRoaXMuaXRlbUlkKSkge1xuICAgICAgICBwcm9taXNlID0gdGhpcy5pbml0QnlJZCgpO1xuICAgICAgfSBlbHNlIGlmICghXy5pc0VtcHR5KHRoaXMuY2hlY2tUeXBlKSAmJiBfLmlzRW1wdHkodGhpcy5zZWN0aW9uSWQpKSB7XG4gICAgICAgIHByb21pc2UgPSB0aGlzLmluaXRCeVR5cGUoKTtcbiAgICAgIH0gZWxzZSBpZiAoIV8uaXNFbXB0eSh0aGlzLmJhdGNoSWQpKSB7XG4gICAgICAgIHByb21pc2UgPSB0aGlzLmluaXRCeUJhdGNoKCk7XG4gICAgICB9IGVsc2UgaWYgKCFfLmlzRW1wdHkodGhpcy5vcHRpb25zKSkge1xuICAgICAgICBwcm9taXNlID0gdGhpcy5pbml0QnlPcHRpb25zKCk7XG4gICAgICB9IGVsc2UgaWYgKCFfLmlzRW1wdHkodGhpcy5zZWN0aW9uSWQpKSB7XG4gICAgICAgIGlzSW5pdEJ5Qmlkc2VjdGlvbiA9IHRydWU7XG4gICAgICAgIHByb21pc2UgPSB0aGlzLmluaXRCeUJpZHNlY3Rpb24oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb21pc2UgPSAkcS53aGVuKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHByb21pc2UudGhlbihkYXRhID0+IHtcbiAgICAgICAgLy8g6aOe5qOA5LiT6aG544CB546w5Zy644CB5a6J5YWo44CB6LSo6YeP5qOA5p+l55qE6aaW6aG15ZKM5qOA5p+l6aG555qE5qOA5p+l5oyH5byVXG4gICAgICAgIGNvbnN0IG1kYSA9IHRoaXMubW9kdWxlQXR0cmlidXRlW3RoaXMubW9kdWxlXSB8fCB7fTtcbiAgICAgICAgaWYgKCFfLmlzRW1wdHkobWRhKSAmJiBtZGEuc2V0VXN1YWxJdGVtcyAmJiBpc0luaXRCeUJpZHNlY3Rpb24pIHtcbiAgICAgICAgICBtbWt2LmdldFVzZXJLZXkodGhpcy5tbWt2Q29kZSgpKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgIHJlcyA9IGRhdGE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXMgPSB0aGlzLm1lcmdlQXJyYXkodGhpcy5kZWVwQ2xvbmUoZGF0YSksIHJlcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMubGlzdERhdGEgPSByZXMgfHwgW107IC8vIOagkeaVsOaNrlxuICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmxpc3REYXRhID0gZGF0YSB8fCBbXTtcbiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6L+U5Zue5b2T5YmN55qE5qih5Z2X55qEIG1ta3Yg55qE5Zu65a6a5YC8XG4gICAgbW1rdkNvZGUoKSB7XG4gICAgICBjb25zdCBtb2R1bGUgPSB0aGlzLm1vZHVsZUF0dHJpYnV0ZVt0aGlzLm1vZHVsZV0gfHwge307XG4gICAgICByZXR1cm4gbW1rdktleXNbbW9kdWxlLm1ta3ZfaXRlbV0gKyAnXycgKyB0aGlzLnNlY3Rpb25JZDtcbiAgICB9LFxuXG4gICAgLy8g5qC55o2ubW1rdueahOaVsOaNru+8jOWwhumAieS4reeahOaVsOaNrui/m+ihjOetm+mAiVxuICAgIG1lcmdlQXJyYXkob2xkRGF0YSwgbW1rdkRhdGEpIHtcbiAgICAgIHJldHVybiBfLmZpbHRlcihvbGREYXRhLCByZXMgPT4ge1xuICAgICAgICBsZXQgbmV3UmVzID0gbW1rdkRhdGFbcmVzLmlkXTtcbiAgICAgICAgaWYgKCFfLmlzRW1wdHkocmVzLnN1Yml0ZW0pKSB7XG4gICAgICAgICAgcmVzLnN1Yml0ZW0gPSB0aGlzLm1lcmdlQXJyYXkocmVzLnN1Yml0ZW0sIG1ta3ZEYXRhKTtcbiAgICAgICAgfVxuICAgICAgICAvLyDpl67popjmj4/ov7Dlm6DkuLrlnKjmo4Dmn6Xpobnlj6/op4HmgKfkuK3kuI3lj6/op4HvvIzmiYDku6XmlbDmja7lubbmsqHmnInlsIbpl67popjmj4/ov7Dmt7vliqDlhbbkuK1cbiAgICAgICAgcmV0dXJuICFfLmlzRW1wdHkobmV3UmVzKSB8fCByZXMudHlwZSA9PT0gJ2Rlc2MnO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIGNsb3NlUG9wdXAoKSB7XG4gICAgICB0aGlzLnZhbHVlID0gZmFsc2U7XG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgfSxcblxuICAgIC8vIOajgOafpemhueeCueWHu+S6i+S7tlxuICAgIGNsaWNrSXRlbShpdGVtKSB7XG4gICAgICBpZiAoaXRlbS5zdWJpdGVtICYmIGl0ZW0uc3ViaXRlbS5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy4kc2V0KGl0ZW0sICdpc09wZW4nLCAhaXRlbS5pc09wZW4pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm1vZHVsZSA9PT0gJ3NwZWNpYWwtaW5zcGVjdCcpIHtcbiAgICAgICAgLy9cbiAgICAgICAgQ2hlY2tHdWlkZURldGFpbC5vcGVuUG9wdXAoe1xuICAgICAgICAgIGl0ZW1JZDogaXRlbS5pZCxcbiAgICAgICAgICBtb2R1bGU6IHRoaXMubW9kdWxlLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIENoZWNrR3VpZGVEZXRhaWwub3BlblBvcHVwKHtcbiAgICAgICAgICBpdGVtSWQ6IGl0ZW0uaXRlbV9pZCxcbiAgICAgICAgICBtb2R1bGU6IHRoaXMubW9kdWxlLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g5qC55o2uIGl0ZW0taWQg5Yid5aeL5YyWXG4gICAgaW5pdEJ5SWQoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGUgPT09ICdzcGVjaWFsLWluc3BlY3QnKSB7XG4gICAgICAgIC8vIOS4k+mhueW3oeajgFxuICAgICAgICAvKiByZXR1cm4gU3BlY2lhbEluc3BlY3RTZXJ2aWNlLmdldFNwZWNpYWxJbnNwZWN0Q2hlY2tJdGVtRGV0YWlsKFxuICAgICAgICAgIHRoaXMuaXRlbUlkXG4gICAgICAgICkudGhlbihjaGVja0l0ZW0gPT4ge1xuICAgICAgICAgIGNoZWNrSXRlbS5jb250ZW50ID0gY2hlY2tJdGVtLmd1aWRlbGluZTtcbiAgICAgICAgICBpdGVtRGF0YSA9IGNoZWNrSXRlbTtcbiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB9KTsgKi9cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOaZrumAmuajgOafpemhuVxuICAgICAgICByZXR1cm4gQ29tbW9uQ2hlY2tJdGVtU2VydmljZS5nZXRDaGVja0l0ZW0odGhpcy5pdGVtSWQsIHRoaXMuY2hlY2tUeXBlKS50aGVuKGNoZWNrSXRlbSA9PiB7XG4gICAgICAgICAgLy8g5Yik5pat5piv5ZCm5pyJ5a2Q57qnXG4gICAgICAgICAgaWYgKCFjaGVja0l0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybiAkcS53aGVuKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHRoaXMuc2VjdGlvbklkKSB7XG4gICAgICAgICAgICAvLyDlpoLmnpzmnInmoIfmrrXvvIzmn6XmoIfmrrXmo4Dmn6XpoblcbiAgICAgICAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldEJpZFNlY3Rpb25DaGVja0l0ZW1MaXN0QnlDb2RlKFxuICAgICAgICAgICAgICB0aGlzLnNlY3Rpb25JZCxcbiAgICAgICAgICAgICAgY2hlY2tJdGVtLmNvZGVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOayoeacieagh+autSBpZO+8jOWImeafpeaJgOacieajgOafpemhuVxuICAgICAgICAgICAgcmV0dXJuIENvbW1vbkNoZWNrSXRlbVNlcnZpY2UuZ2V0Q2hlY2tJdGVtVHJlZUJ5Q29kZShjaGVja0l0ZW0uY29kZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g5qC55o2uIGNoZWNrLXR5cGUg5Yid5aeL5YyWXG4gICAgaW5pdEJ5VHlwZSgpIHtcbiAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldENoZWNrSXRlbUd1aWRlbGluZUxpc3QodGhpcy5jaGVja1R5cGUpO1xuICAgIH0sXG5cbiAgICBpbml0QnlCYXRjaCgpIHtcbiAgICAgIC8qIHJldHVybiBTcGVjaWFsSW5zcGVjdFNlcnZpY2UuZ2V0U3BlY2lhbEluc3BlY3RDaGVja0l0ZW1HdWlkZShcbiAgICAgICAgdGhpcy5iYXRjaElkXG4gICAgICApOyAqL1xuICAgICAgcmV0dXJuICRxLndoZW4oKTtcbiAgICB9LFxuXG4gICAgLy8g5p+l6K+i5qCH5q6155qE5qOA5p+l5oyH5byVXG4gICAgaW5pdEJ5Qmlkc2VjdGlvbigpIHtcbiAgICAgIHJldHVybiBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldEJpZFNlY3Rpb25DaGVja0l0ZW1UcmVlQnlUeXBlKFxuICAgICAgICB0aGlzLnNlY3Rpb25JZCxcbiAgICAgICAgdGhpcy5jaGVja1R5cGVcbiAgICAgICk7XG4gICAgfSxcblxuICAgIC8vIOagueaNriBvcHRpb25zIOWIneWni+WMllxuICAgIGluaXRCeU9wdGlvbnMoKSB7XG4gICAgICByZXR1cm4gJHEucmVzb2x2ZSh0aGlzLm9wdGlvbnMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBKU09O77yM5rex5ou36LSdXG4gICAgICovXG4gICAgZGVlcENsb25lKGRhdGEpIHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5wYWdlLXNjcm9sbCB7XG4gIGZsZXg6IDE7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbn1cblxuLnN1Ymxpc3Qge1xuICBwYWRkaW5nLWxlZnQ6IDI1cHg7XG4gIHBhZGRpbmctdG9wOiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuLnN1Ymxpc3QgPiAuc3VibGlzdCB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy10b3A6IDA7XG59XG48L3N0eWxlPlxuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLnNlbGVjdC1jb25bZGF0YS12LWRiZDg3ZWYyXXtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOjdweCA0MHB4IDdweCAxNXB4O2hlaWdodDo1MHB4O292ZXJmbG93OmhpZGRlbn0uemphcHAgLnNlbGVjdC1jb25bZGF0YS12LWRiZDg3ZWYyXTpub3QoOmZpcnN0LWNoaWxkKXtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCg5MGRlZywjZDdlMGY3LCNkN2UwZjcgNTAlLHRyYW5zcGFyZW50IDApO2JhY2tncm91bmQtc2l6ZToxcHggMTAwJTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9LnpqYXBwIC5zZWxlY3QtY29uPipbZGF0YS12LWRiZDg3ZWYyXXtwb2ludGVyLWV2ZW50czpub25lfS56amFwcCAuc2VsZWN0LWhkW2RhdGEtdi1kYmQ4N2VmMl17bGluZS1oZWlnaHQ6MTRweDtmb250LXNpemU6MTBweH0uemphcHAgLnNlbGVjdC1iZFtkYXRhLXYtZGJkODdlZjJdLC56amFwcCAuc2VsZWN0LWhkW2RhdGEtdi1kYmQ4N2VmMl17Y29sb3I6IzMzMztvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXB9LnpqYXBwIC5zZWxlY3QtYmRbZGF0YS12LWRiZDg3ZWYyXXttYXJnaW4tdG9wOjJweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNHB4fS56amFwcCAuc2VsZWN0LWFycm93W2RhdGEtdi1kYmQ4N2VmMl17cG9zaXRpb246YWJzb2x1dGU7dG9wOjVweDtyaWdodDowO3dpZHRoOjQwcHg7aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6NDBweDtmb250LXNpemU6MTZweDtjb2xvcjojYzhjOGM4O3RleHQtYWxpZ246Y2VudGVyfS56amFwcCAuc2VsZWN0LWRpc2FibGVkW2RhdGEtdi1kYmQ4N2VmMl17YmFja2dyb3VuZC1jb2xvcjojZjVmN2ZifS56amFwcCAuc2VsZWN0LWRpc2FibGVkIC5zZWxlY3QtYmRbZGF0YS12LWRiZDg3ZWYyXSwuemphcHAgLnNlbGVjdC1kaXNhYmxlZCAuc2VsZWN0LWhkW2RhdGEtdi1kYmQ4N2VmMl17Y29sb3I6IzY2Nn0uemphcHAgLnNlbGVjdC1kaXNhYmxlZCAuc2VsZWN0LWFycm93W2RhdGEtdi1kYmQ4N2VmMl17ZGlzcGxheTpub25lfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLF92bS5fZyh7c3RhdGljQ2xhc3M6XCJwcm9ibGVtLWRldGFpbC1oZWFkZXIgYm9yZGVyLWJvdHRvbVwifSxfdm0uJGxpc3RlbmVycyksW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInN0YXR1c1wiLGNsYXNzOntcbiAgICAn5b6F5pW05pS5JzogJ3N0YXR1cy1yZWQnLFxuICAgICfkuI3lkIjmoLwnOiAnc3RhdHVzLXJlZCcsXG4gICAgJ+W3sumAgOWbnic6ICdzdGF0dXMtcmVkJyxcblxuICAgICflvoXlpI3pqownOiAnc3RhdHVzLW9yYW5nZScsXG4gICAgJ+W3suaUvuawtOW+hemqjOaUtic6ICdzdGF0dXMtb3JhbmdlJyxcbiAgICAn5qOA5p+l5LitJzogJ3N0YXR1cy1vcmFuZ2UnLFxuICAgICflvoXpqozmlLYnOiAnc3RhdHVzLW9yYW5nZScsXG5cbiAgICAn5bey6YCa6L+HJzogJ3N0YXR1cy1ncmVlbicsXG4gICAgJ+W3suaVtOaUuSc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICflt7Lmj5DkuqQnOiAnc3RhdHVzLWdyZWVuJyxcbiAgICAn5ZCI5qC8JzogJ3N0YXR1cy1ncmVlbicsXG4gICAgJ+ajgOafpeWujOavlSc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICflt7LpqozmlLYnOiAnc3RhdHVzLWdyZWVuJyxcbiAgICBcbiAgICAn5bey5YWz6ZetJzogJ3N0YXR1cy1ibGFjaycsXG5cbiAgICAn6L+b5bqm5q2j5bi4JzogJ3N0YXR1cy1ncmVlbicsXG4gICAgJ+i/m+W6pua7nuWQjic6ICdzdGF0dXMtcmVkJyxcbiAgICBcbiAgICAn6aqM5pS25LitJzogJ3N0YXR1cy1vcmFuZ2UnLFxuICAgICflt7Lmir3pqownOiAnc3RhdHVzLWdyZWVuJyxcbiAgfVtfdm0uc3RhdHVzXX0sW192bS5fdihfdm0uX3MoX3ZtLnN0YXR1c1RleHQgfHwgX3ZtLnN0YXR1cykpXSksKF92bS5sZXZlbCA9PT0gJ+e0p+aApScgfHwgX3ZtLmxldmVsID09PSAn54m55oClJyk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInVyZ2VudFwifSxbX3ZtLl92KF92bS5fcyhfdm0uZWRPcHRpb25zW192bS5sZXZlbF0pKV0pOl92bS5fZSgpLChfdm0uaXNUaW1lb3V0KT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidGltZW91dFwifSxbX3ZtLl92KFwi6LaF5pe2XCIpXSk6X3ZtLl9lKCksKF92bS5zZW50QmFja1RpbWVzID4gMCk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInJldHVyblwifSxbX3ZtLl92KFwi6YCA5ZueXCIrX3ZtLl9zKF92bS5zZW50QmFja1RpbWVzKStcIuasoVwiKV0pOl92bS5fZSgpLF92bS5fdChcIm9wZXJhdFwiKV0sMil9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPHRlbXBsYXRlPlxuICA8ZGl2IHYtb249XCIkbGlzdGVuZXJzXCIgY2xhc3M9XCJwcm9ibGVtLWRldGFpbC1oZWFkZXIgYm9yZGVyLWJvdHRvbVwiPlxuICAgIDxkaXZcbiAgICAgIGNsYXNzPVwic3RhdHVzXCJcbiAgICAgIDpjbGFzcz1cIntcbiAgICAgICflvoXmlbTmlLknOiAnc3RhdHVzLXJlZCcsXG4gICAgICAn5LiN5ZCI5qC8JzogJ3N0YXR1cy1yZWQnLFxuICAgICAgJ+W3sumAgOWbnic6ICdzdGF0dXMtcmVkJyxcblxuICAgICAgJ+W+heWkjemqjCc6ICdzdGF0dXMtb3JhbmdlJyxcbiAgICAgICflt7LmlL7msLTlvoXpqozmlLYnOiAnc3RhdHVzLW9yYW5nZScsXG4gICAgICAn5qOA5p+l5LitJzogJ3N0YXR1cy1vcmFuZ2UnLFxuICAgICAgJ+W+hemqjOaUtic6ICdzdGF0dXMtb3JhbmdlJyxcblxuICAgICAgJ+W3sumAmui/hyc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICAgJ+W3suaVtOaUuSc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICAgJ+W3suaPkOS6pCc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICAgJ+WQiOagvCc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICAgJ+ajgOafpeWujOavlSc6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICAgJ+W3sumqjOaUtic6ICdzdGF0dXMtZ3JlZW4nLFxuICAgICAgXG4gICAgICAn5bey5YWz6ZetJzogJ3N0YXR1cy1ibGFjaycsXG5cbiAgICAgICfov5vluqbmraPluLgnOiAnc3RhdHVzLWdyZWVuJyxcbiAgICAgICfov5vluqbmu57lkI4nOiAnc3RhdHVzLXJlZCcsXG4gICAgICBcbiAgICAgICfpqozmlLbkuK0nOiAnc3RhdHVzLW9yYW5nZScsXG4gICAgICAn5bey5oq96aqMJzogJ3N0YXR1cy1ncmVlbicsXG4gICAgfVtzdGF0dXNdXCJcbiAgICA+e3tzdGF0dXNUZXh0IHx8IHN0YXR1c319PC9kaXY+XG5cbiAgICA8IS0tIOmXrumimOagh+etviAtLT5cbiAgICA8c3BhbiB2LWlmPVwibGV2ZWwgPT09ICfntKfmgKUnIHx8IGxldmVsID09PSAn54m55oClJ1wiIGNsYXNzPVwidXJnZW50XCI+e3tlZE9wdGlvbnNbbGV2ZWxdfX08L3NwYW4+XG4gICAgPHNwYW4gdi1pZj1cImlzVGltZW91dFwiIGNsYXNzPVwidGltZW91dFwiPui2heaXtjwvc3Bhbj5cbiAgICA8c3BhbiB2LWlmPVwic2VudEJhY2tUaW1lcyA+IDBcIiBjbGFzcz1cInJldHVyblwiPumAgOWbnnt7c2VudEJhY2tUaW1lc3195qyhPC9zcGFuPlxuICAgIDwhLS0g6Zeu6aKY5qCH562+IGVuZCAtLT5cblxuICAgIDwhLS0g5pON5L2c5oyJ6ZKuIC0tPlxuICAgIDxzbG90IG5hbWU9XCJvcGVyYXRcIiAvPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgT3B0aW9uc1NlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9vcHRpb25zLXNlcnZpY2UuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdQcm9ibGVtSGVhZGVyJyxcbiAgcHJvcHM6IHtcbiAgICBzdGF0dXM6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgc3RhdHVzVGV4dDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICBsZXZlbDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICBpc1RpbWVvdXQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICAgIHNlbnRCYWNrVGltZXM6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAwLFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIOe0p+aApeeoi+W6puaWh+Wtl1xuICAgICAgZWRPcHRpb25zOiB7fSxcbiAgICB9O1xuICB9LFxuICBjcmVhdGVkKCkge1xuICAgIE9wdGlvbnNTZXJ2aWNlLmdldE9wdGlvbnMoJ+e0p+aApeeoi+W6picpLnRoZW4ocmVzID0+IHtcbiAgICAgIHRoaXMuZWRPcHRpb25zID0gcmVzO1xuICAgIH0pO1xuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4ucHJvYmxlbS1kZXRhaWwtaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogNDBweDtcbiAgcGFkZGluZzogMCAxNXB4O1xuICBsaW5lLWhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbn1cblxuLnByb2JsZW0tZGV0YWlsLWhlYWRlciAuc3RhdHVzIHtcbiAgZmxleDogMTtcbiAgaGVpZ2h0OiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgYm9yZGVyLWxlZnQ6IHNvbGlkIDVweCAjZGRkO1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgY29sb3I6ICMxMTE7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1yZWQge1xuICBib3JkZXItY29sb3I6ICRjb2xvclJlZDtcbn1cbi5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1ibHVlIHtcbiAgYm9yZGVyLWNvbG9yOiAkY29sb3JCbHVlO1xufVxuLnByb2JsZW0tZGV0YWlsLWhlYWRlciAuc3RhdHVzLWdyZWVuIHtcbiAgYm9yZGVyLWNvbG9yOiAkY29sb3JHcmVlbjtcbn1cbi5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1vcmFuZ2Uge1xuICBib3JkZXItY29sb3I6ICRjb2xvck9yYW5nZTtcbn1cbi5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnN0YXR1cy1ibGFjayB7XG4gIGJvcmRlci1jb2xvcjogJGNvbG9yQmxhY2s7XG59XG4ucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC5zdGF0dXMtZ3JheSB7XG4gIGJvcmRlci1jb2xvcjogJGNvbG9yR3JheTtcbn1cblxuLnByb2JsZW0tZGV0YWlsLWhlYWRlciAudXJnZW50LFxuLnByb2JsZW0tZGV0YWlsLWhlYWRlciAudGltZW91dCxcbi5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnJldHVybiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwIDVweDtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDEycHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAycHg7XG59XG4ucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC51cmdlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JSZWQ7XG59XG4ucHJvYmxlbS1kZXRhaWwtaGVhZGVyIC50aW1lb3V0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzk1NGNmZTtcbn1cbi5wcm9ibGVtLWRldGFpbC1oZWFkZXIgLnJldHVybiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvck9yYW5nZTtcbn1cblxuLnByb2JsZW0tZGV0YWlsLWhlYWRlciAub3BlcmF0IHtcbiAgaGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogNDBweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogIzZiN2JhOTtcbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wOTAxYWFkZCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0wOTAxYWFkZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIwOTAxYWFkZFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZDhmNjEyMTAmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwtZHJvcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yY2FjODg2NCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyxfdm0uX2coe3JlZjpcImNvbnRlbnRcIixzdGF0aWNDbGFzczpcImRyYXdpbmctY29uXCJ9LF92bS4kbGlzdGVuZXJzKSxbKF92bS5pc0Rvd25sb2FkaW5nKT9bX2MoJ3AnLFtfYygnc3ZnJyx7c3RhdGljQ2xhc3M6XCJzdmctbG9hZGluZ1wiLGF0dHJzOntcInZpZXdCb3hcIjpcIjAgMCA4MCA4MFwifX0sW19jKCdjaXJjbGUnLHthdHRyczp7XCJjeFwiOlwiNDBcIixcImN5XCI6XCI0MFwiLFwiclwiOlwiMzZcIn19KV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImxvYWRpbmctdGV4dFwifSxbX3ZtLl92KFwi5q2j5Zyo5LiL6L29Li4uXCIpXSldOlsoIV92bS5lcnJvcik/X2MoJ2NhbnZhcycse3JlZjpcImRyYXdpbmctY2FudmFzXCJ9KTpfdm0uX2UoKSwoX3ZtLmVycm9yKT9fYygncCcse3N0YXRpY0NsYXNzOlwiZXJyb3ItdGV4dFwifSxbX3ZtLl92KF92bS5fcyhfdm0uZXJyb3IpKV0pOl92bS5fZSgpXV0sMil9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZmJhNTk5MGEmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZmJhNTk5MGEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiZmJhNTk5MGFcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAuc3RhdHVzLXRvdGFsLWJhcltkYXRhLXYtYmUwN2NkOWNde2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7dGV4dC1hbGlnbjpjZW50ZXJ9LnpqYXBwIC50b3RhbC1pdGVtW2RhdGEtdi1iZTA3Y2Q5Y117ZmxleDoxO2xpbmUtaGVpZ2h0OjIwcHg7cGFkZGluZzoxMHB4IDVweCAwO2NvbG9yOiMxMTE7Zm9udC1zaXplOjEycHh9LnpqYXBwIC50b3RhbC1zdGF0dXNbZGF0YS12LWJlMDdjZDljXXt3aGl0ZS1zcGFjZTpub3dyYXB9LnpqYXBwIC50b3RhbC1zdGF0dXNbZGF0YS12LWJlMDdjZDljXTpiZWZvcmV7Y29udGVudDpcXFwiXFxcIjt3aWR0aDoxMHB4O2hlaWdodDoxMHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDttYXJnaW46NXB4IDVweCAwIDA7YmFja2dyb3VuZC1jb2xvcjojZGRkO2JvcmRlci1yYWRpdXM6NTAlfS56amFwcCAudG90YWwtc3RhdHVzLW9yYW5nZVtkYXRhLXYtYmUwN2NkOWNdOmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOiNmYzhiMDF9LnpqYXBwIC50b3RhbC1zdGF0dXMtb3JhbmdlMltkYXRhLXYtYmUwN2NkOWNdOmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZjhlMjR9LnpqYXBwIC50b3RhbC1zdGF0dXMtd2hpdGUyW2RhdGEtdi1iZTA3Y2Q5Y106YmVmb3Jle2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNkY2RjZGN9LnpqYXBwIC50b3RhbC1zdGF0dXMtcmVkW2RhdGEtdi1iZTA3Y2Q5Y106YmVmb3Jle2JhY2tncm91bmQtY29sb3I6I2ZmM2QzZH0uemphcHAgLnRvdGFsLXN0YXR1cy1ncmVlbltkYXRhLXYtYmUwN2NkOWNdOmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOiMwYmM2NjZ9LnpqYXBwIC50b3RhbC1zdGF0dXMtd2hpdGVbZGF0YS12LWJlMDdjZDljXTpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjojZmZmfS56amFwcCAudG90YWwtc3RhdHVzLXdoaXRlLWJvcmRlcltkYXRhLXYtYmUwN2NkOWNdOmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCAjZGNkY2RjfS56amFwcCAudG90YWwtc3RhdHVzLWJsdWVbZGF0YS12LWJlMDdjZDljXTpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjojNDE3NGU5fS56amFwcCAudG90YWwtc3RhdHVzLXB1cnBsZS1ib3JkZXJbZGF0YS12LWJlMDdjZDljXTpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgIzc5NmJmYn0uemphcHAgLnRvdGFsLXN0YXR1cy1ncmVlbi1ib3JkZXJbZGF0YS12LWJlMDdjZDljXTpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgIzBiYzY2Nn0uemphcHAgLnN0YXR1cy10b3RhbC1iYXIuLWFicy10b3AtcmlnaHRbZGF0YS12LWJlMDdjZDljXXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDoxM3B4fS56amFwcCAuc3RhdHVzLXRvdGFsLWJhci4tYWJzLXRvcC1yaWdodCAudG90YWwtaXRlbVtkYXRhLXYtYmUwN2NkOWNde3BhZGRpbmctbGVmdDozcHg7cGFkZGluZy1yaWdodDozcHh9LnpqYXBwIC5zdGF0dXMtdG90YWwtYmFyLi1hYnMtdG9wLXJpZ2h0IC50b3RhbC1zdGF0dXNbZGF0YS12LWJlMDdjZDljXTpiZWZvcmV7bWFyZ2luLXJpZ2h0OjJweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCI8dGVtcGxhdGU+XG4gIDxzY3JvbGxlciByZWY9XCJzY3JvbGxlclwiPlxuICAgIDxtZWFzdXJlLWRldGFpbC1wbGFjZS1jaGVja2l0ZW1cbiAgICAgIDpkZXRhaWw9XCJkZXRhaWxcIlxuICAgICAgQGNoYW5nZUl0ZW1zPVwiY2hhbmdlSXRlbXNcIlxuICAgICAgQGNoYW5nZVBsYWNlPVwiY2hhbmdlUGxhY2VcIlxuICAgIC8+XG5cbiAgICA8dGVtcGxhdGUgdi1pZj1cImhhc01hc3RlckNoZWNraXRlbSAmJiBkcmF3aW5nVXJsXCI+XG4gICAgICA8cHJvYmxlbS1kZXRhaWwtaGVhZGVyXG4gICAgICAgIHYtaWY9XCJkZXRhaWwubW9kZSAhPT0gJ2VkaXQnICYmICFkZXRhaWwuaXNSZXBhaXJNb2RlXCJcbiAgICAgICAgOnN0YXR1cz1cImRldGFpbC5zdGF0dXNcIlxuICAgICAgICBjbGFzcz1cImJnLXdoaXRlXCJcbiAgICAgID5cbiAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJkZXRhaWwuYWxsb3dSZWVkaXQgJiYgZGV0YWlsLm1vZGUgPT09ICd2aWV3J1wiIHNsb3Q9XCJvcGVyYXRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuLXJlZWRpdFwiIEBjbGljaz1cImNoYW5nZU1vZGUoJ3JlZWRpdCcpXCI+XG4gICAgICAgICAgICDkv67mlLlcbiAgICAgICAgICAgIDxpY29uIG5hbWU9XCJlZGl0XCIgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDwvcHJvYmxlbS1kZXRhaWwtaGVhZGVyPlxuXG4gICAgICA8IS0tIOeKtuaAgSAtLT5cbiAgICAgIDxzdGF0dXMtdG90YWwtYmFyIHYtaWY9XCJkZXRhaWwuaXNSZXBhaXJNb2RlXCIgOmRhdGE9XCJ0b3RhbERhdGFcIiAvPlxuICAgICAgPCEtLSDlm77nurggLS0+XG4gICAgICA8ZHJhd2luZy0zXG4gICAgICAgIHJlZj1cImRyYXdpbmdcIlxuICAgICAgICA6ZGV0YWlsPVwiZGV0YWlsXCJcbiAgICAgICAgQG9uQ2hhbmdlPVwic2F2ZVByb2JsZW1cIlxuICAgICAgICBAb25DbGlja1BvaW50PVwib25DbGlja1BvaW50XCJcbiAgICAgIC8+XG5cbiAgICAgIDwhLS0gPGRyYXdpbmctbWVhc3VyZVxuICAgICAgICA6dXJsPVwiZHJhd2luZ1VybFwiXG4gICAgICAgIDpkYXRhPVwiZHJhd2luZ0RhdGFcIlxuICAgICAgICA6cG9pbnQtc3RhdHVzPVwiZGV0YWlsLnBvaW50U3RhdHVzXCJcbiAgICAgICAgOm1vZGU9XCJkZXRhaWwubW9kZSA9PT0gJ3ZpZXcnID8gJ3ZpZXcnIDogJ2VkaXQnXCJcbiAgICAgICAgQG9uQ2hhbmdlPVwib25EcmF3aW5nQ2hhbmdlXCJcbiAgICAgICAvPiAtLT5cblxuICAgICAgPGl0ZW0gdi1pZj1cImRldGFpbC5pc1JlcGFpck1vZGVcIiBib3JkZXI9XCJ0b3BcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tdGV4dCBjb2xvci1ncmF5IGFsaWduLWNcIj7ngrnlh7vlm77nurjkuK3ngrnkvY3mn6XnnIvor6bmg4U8L2Rpdj5cbiAgICAgIDwvaXRlbT5cblxuICAgICAgPCEtLSDnvJbovpHmqKHlvI8gLS0+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5tb2RlID09PSAnZWRpdCcgfHwgZGV0YWlsLm1vZGUgPT09ICdyZWRvJ1wiPlxuICAgICAgICA8ZGl2IHN0eWxlPVwicGFkZGluZzogMTBweCAwXCI+XG4gICAgICAgICAgPGl0ZW0gY2xhc3M9XCJwdDE1IHBiMTVcIj5cbiAgICAgICAgICAgIDxpdGVtLWltZy1saXN0XG4gICAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwuaW1nXCJcbiAgICAgICAgICAgICAgOm1heGxlbmd0aD1cIjUwXCJcbiAgICAgICAgICAgICAgQGNhbGxiYWNrPVwic2F2ZVByb2JsZW1cIlxuICAgICAgICAgICAgICA6dHJhY2stdGV4dD1cIiflrp7mtYvlrp7ph48nXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9pdGVtPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1iMTBcIj5cbiAgICAgICAgICA8cCBjbGFzcz1cImMtbGFiZWxcIj7or7fpgInmi6nmlr3lt6XljZXkvY08L3A+XG4gICAgICAgICAgPHNpbmdsZS1zZWxlY3RcbiAgICAgICAgICAgIHYtZm9yPVwicHJvYmxlbSBpbiBkZXRhaWwucHJvYmxlbURhdGFcIlxuICAgICAgICAgICAgOmtleT1cInByb2JsZW0uY2hlY2tJdGVtLmlkXCJcbiAgICAgICAgICAgIDp0aXRsZT1cInByb2JsZW0uY2hlY2tJdGVtLm5hbWVcIlxuICAgICAgICAgICAgcGFnZS10aXRsZT1cIumAieaLqeaWveW3peWNleS9jVwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIuivt+mAieaLqeaWveW3peWNleS9jVwiXG4gICAgICAgICAgICB2LW1vZGVsPVwicHJvYmxlbS5jb250cmFjdG9yXCJcbiAgICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwuY29udHJhY3RvcnNcIlxuICAgICAgICAgICAgQG9uU2VsZWN0PVwic2F2ZVByb2JsZW1cIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aXRlbSB2LWlmPVwiZGV0YWlsLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwubGVuZ3RoXCIgbGFiZWw9XCLlkIjmoLznjodcIiBtb2RlPVwiZWRpdFwiPlxuICAgICAgICAgIDxkaXYgc2xvdD1cInJpZ2h0XCIgY2xhc3M9XCJpdGVtLXRleHQgY29sb3ItdGhlbWUgYWxpZ24tclwiPlxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtZm9yPVwiKHByb2JsZW0sIGluZGV4KSBpbiBkZXRhaWwucHJvYmxlbURhdGFcIj5cbiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJpbmRleFwiPjsgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAge3sgcHJvYmxlbS5wYXNzcmF0ZSB8IHBlcmNlbnQoMikgfX1cbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cbiAgICAgICAgPGl0ZW0gdi1pZj1cImRldGFpbC5wYXNzcmF0ZV9tb2RlICE9PSA4XCIgbGFiZWw9XCLlkIjmoLzmoIflh4ZcIiBtb2RlPVwiZWRpdFwiPlxuICAgICAgICAgIDxkaXYgc2xvdD1cInJpZ2h0XCIgY2xhc3M9XCJpdGVtLXRleHQgY29sb3ItZ3JheSBhbGlnbi1yXCI+XG4gICAgICAgICAgICA8cCB2LWZvcj1cIihwcm9ibGVtLCBpbmRleCkgaW4gZGV0YWlsLnByb2JsZW1EYXRhXCIgOmtleT1cImluZGV4XCI+XG4gICAgICAgICAgICAgIDxzcGFuIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrO1wiIHYtaWY9XCJwcm9ibGVtLnBhc3NyYXRlX21vZGUgIT09IDVcIj57e1xuICAgICAgICAgICAgICAgIHByb2JsZW0uY2hlY2tJdGVtLm5hbWVcbiAgICAgICAgICAgICAgfX08L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJpdGVtLXRleHRfc3BlY2lhbFwiXG4gICAgICAgICAgICAgICAgdi1pZj1cIlxuICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNSB8fFxuICAgICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE2IHx8XG4gICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTdcbiAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgIHYtaHRtbD1cInByb2JsZW0uc3RhbmRhcmRSYW5nZVwiXG4gICAgICAgICAgICAgID48L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWw1XCIgc3R5bGU9XCJ3aGl0ZS1zcGFjZTogbm93cmFwO1wiIHYtZWxzZT57e1xuICAgICAgICAgICAgICAgIHByb2JsZW0uc3RhbmRhcmRSYW5nZVxuICAgICAgICAgICAgICB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gdi1pZj1cInByb2JsZW0uaXNKSWNoZU1vZGVcIiBjbGFzcz1cImNvbG9yLWdyYXlcIj7mnoHlt67nrpfms5U8L3NwYW4+XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvaXRlbT5cblxuICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImhhc1BvaW50ICYmIGhhc0V4Y2VlZCAmJiBkZXRhaWwubW9kZSAhPT0gJ3JlZG8nXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm5lZWQtcmVwYWlyXCIgQGNsaWNrPVwic2V0TmVlZFJlcGFpclwiPlxuICAgICAgICAgICAgPGljb25cbiAgICAgICAgICAgICAgOm5hbWU9XCJkZXRhaWwubmVlZFJlcGFpciA/ICdjaGVja2JveC1zcXVhcmUtY2hlY2tlZCcgOiAnY2hlY2tib3gtc3F1YXJlJ1wiXG4gICAgICAgICAgICAvPumAmuefpeaVtOaUuVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPHVzZXItc2VsZWN0XG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLm5lZWRSZXBhaXJcIlxuICAgICAgICAgICAgdGl0bGU9XCLmlbTmlLnkurpcIlxuICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJcIlxuICAgICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5yZXBhaXJPcHRpb25zXCJcbiAgICAgICAgICAgIDptZW1vcnk9XCJ0cnVlXCJcbiAgICAgICAgICAgIDpiZWZvcmUtc2VsZWN0PVwiYmVmb3JlU2VsZWN0UmVwYWlyXCJcbiAgICAgICAgICAgIEBvblNlbGVjdD1cIm9uU2VsZWN0UmVwYWlyXCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgICAgdi1pZj1cImRldGFpbC5uZWVkUmVwYWlyICYmIGFsbG93TWVhc3VyZVJlaW5zcGVjdFwiXG4gICAgICAgICAgICB0aXRsZT1cIuWkjemqjOS6ulwiXG4gICAgICAgICAgICA6bXVsdGk9XCJ0cnVlXCJcbiAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVpbnNwZWN0XCJcbiAgICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwucmVpbnNwZWN0T3B0aW9uc1wiXG4gICAgICAgICAgICA6bWVtb3J5PVwidHJ1ZVwiXG4gICAgICAgICAgICA6YmVmb3JlLWNvbmZpcm09XCJiZWZvcmVDb25maXJtUmVpbnNwZWN0XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDwhLS0g57yW6L6R5qih5byPIGVuZCAtLT5cblxuICAgICAgPCEtLSDmn6XnnIvmqKHlvI8gLS0+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5tb2RlID09PSAndmlldycgfHwgZGV0YWlsLm1vZGUgPT09ICdyZWVkaXQnXCI+XG4gICAgICAgIDxpdGVtIGxhYmVsPVwi5ZCI5qC8546HXCI+XG4gICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tdGV4dCBhbGlnbi1yIGNvbG9yLXRoZW1lXCI+XG4gICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9XCIocHJvYmxlbSwgaW5kZXgpIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiPlxuICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImluZGV4XCI+OyA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICB7eyBwcm9ibGVtLnBhc3NyYXRlIHwgcGVyY2VudCgyKSB9fVxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxpdGVtIGNsYXNzPVwibXQxMFwiIGxhYmVsPVwi54K55pWwXCI+XG4gICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tdGV4dFwiPlxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtZm9yPVwiKHByb2JsZW0sIGluZGV4KSBpbiBkZXRhaWwucHJvYmxlbURhdGFcIj5cbiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJpbmRleFwiPjsgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAge3sgcHJvYmxlbS5wb2ludE51bSB9fVxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxpdGVtIHYtaWY9XCJkZXRhaWwucGFzc3JhdGVfbW9kZSAhPT0gOFwiIGxhYmVsPVwi5ZCI5qC85qCH5YeGXCI+XG4gICAgICAgICAgPGRpdiBzbG90PVwicmlnaHRcIiBjbGFzcz1cIml0ZW0tdGV4dFwiPlxuICAgICAgICAgICAgPHAgdi1mb3I9XCIocHJvYmxlbSwgaW5kZXgpIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiIDprZXk9XCJpbmRleFwiPlxuICAgICAgICAgICAgICA8c3BhbiB2LWlmPVwicHJvYmxlbS5wYXNzcmF0ZV9tb2RlICE9PSA1XCI+e3sgcHJvYmxlbS5jaGVja0l0ZW0ubmFtZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICBjbGFzcz1cIml0ZW0tdGV4dF9zcGVjaWFsXCJcbiAgICAgICAgICAgICAgICB2LWlmPVwiXG4gICAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE1IHx8XG4gICAgICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTYgfHxcbiAgICAgICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxN1xuICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgdi1odG1sPVwicHJvYmxlbS5zdGFuZGFyZFJhbmdlXCJcbiAgICAgICAgICAgICAgPjwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtbDVcIiBzdHlsZT1cIndoaXRlLXNwYWNlOiBub3dyYXA7XCIgdi1lbHNlPnt7XG4gICAgICAgICAgICAgICAgcHJvYmxlbS5zdGFuZGFyZFJhbmdlXG4gICAgICAgICAgICAgIH19PC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiB2LWlmPVwicHJvYmxlbS5pc0pJY2hlTW9kZVwiIGNsYXNzPVwiY29sb3ItZ3JheVwiPuaegeW3rueul+azlTwvc3Bhbj5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtYjEwXCIgdi1pZj1cImRldGFpbC5tb2RlID09PSAncmVlZGl0J1wiPlxuICAgICAgICAgIDxwIGNsYXNzPVwiYy1sYWJlbFwiPuivt+mAieaLqeaWveW3peWNleS9jTwvcD5cbiAgICAgICAgICA8c2luZ2xlLXNlbGVjdFxuICAgICAgICAgICAgdi1mb3I9XCJwcm9ibGVtIGluIGRldGFpbC5wcm9ibGVtRGF0YVwiXG4gICAgICAgICAgICA6a2V5PVwicHJvYmxlbS5jaGVja0l0ZW0uaWRcIlxuICAgICAgICAgICAgOnRpdGxlPVwicHJvYmxlbS5jaGVja0l0ZW0ubmFtZVwiXG4gICAgICAgICAgICBwYWdlLXRpdGxlPVwi6YCJ5oup5pa95bel5Y2V5L2NXCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwi6K+36YCJ5oup5pa95bel5Y2V5L2NXCJcbiAgICAgICAgICAgIHYtbW9kZWw9XCJwcm9ibGVtLmNvbnRyYWN0b3JcIlxuICAgICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5jb250cmFjdG9yc1wiXG4gICAgICAgICAgICBtb2RlPVwidmlld1wiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5tb2RlID09PSAndmlldydcIj5cbiAgICAgICAgPGl0ZW0gdi1pZj1cImRldGFpbC5pbWcubGVuZ3RoXCIgbGFiZWw9XCLnm7jlhbPnhafniYdcIj5cbiAgICAgICAgICA8ZGl2IHNsb3Q9XCJyaWdodFwiIGNsYXNzPVwiaXRlbS1jb25cIj5cbiAgICAgICAgICAgIDxpdGVtLWltZy1saXN0IHYtbW9kZWw9XCJkZXRhaWwuaW1nXCIgOmVkaXRhYmxlZD1cImZhbHNlXCIgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9pdGVtPlxuXG4gICAgICAgIDxpdGVtIHYtaWY9XCJoYXNDb250cmFjdG9yXCIgbGFiZWw9XCLmlr3lt6XljZXkvY1cIj5cbiAgICAgICAgICA8ZGl2IHNsb3Q9XCJyaWdodFwiIGNsYXNzPVwiaXRlbS10ZXh0XCI+XG4gICAgICAgICAgICA8cCB2LWZvcj1cInByb2JsZW0gaW4gZGV0YWlsLnByb2JsZW1EYXRhXCIgOmtleT1cInByb2JsZW0uaWRcIj5cbiAgICAgICAgICAgICAge3sgcHJvYmxlbS5jb250cmFjdG9yID8gcHJvYmxlbS5jb250cmFjdG9yLm5hbWUgOiAnJyB9fVxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2l0ZW0+XG5cbiAgICAgICAgPHVzZXItc2VsZWN0IHRpdGxlPVwi5qOA5p+l5Lq6XCIgbW9kZT1cInZpZXdcIiB2LW1vZGVsPVwiZGV0YWlsLnJlZ2lzdFwiIDplZGl0YWJsZWQ9XCJmYWxzZVwiIC8+XG5cbiAgICAgICAgPGl0ZW0gbGFiZWw9XCLmo4Dmn6Xml7bpl7RcIiA6dGV4dD1cImZvcm1hdERhdGUoZGV0YWlsLnJlZ2lzdF9kYXRlKVwiPjwvaXRlbT5cblxuICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImRldGFpbC5pc1JlcGFpck1vZGVcIj5cbiAgICAgICAgICA8IS0tIOeIhueCueaVtOaUueaooeW8jyAtLT5cbiAgICAgICAgICA8dXNlci1zZWxlY3RcbiAgICAgICAgICAgIHYtaWY9XCJkZXRhaWwucmVwYWlyLmlkXCJcbiAgICAgICAgICAgIHRpdGxlPVwi5pW05pS55Lq6XCJcbiAgICAgICAgICAgIG1vZGU9XCJ2aWV3XCJcbiAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyXCJcbiAgICAgICAgICAgIDpvcHRpb25zPVwibW9kZWwucmVwYWlyT3B0aW9uc1wiXG4gICAgICAgICAgICA6ZGF0ZT1cImRldGFpbC5zdGF0dXMgPT09ICflt7LmlbTmlLknID8gZm9ybWF0RGF0ZShkZXRhaWwucmVwYWlyX2RhdGUpIDogJydcIlxuICAgICAgICAgICAgOmVkaXRhYmxlZD1cIlxuICAgICAgICAgICAgICAoZGV0YWlsLmlzQ2hlY2tlciB8fCBkZXRhaWwuaXNSZXBhaXIgfHwgZGV0YWlsLmlzUmVpbnNwZWN0KSAmJlxuICAgICAgICAgICAgICAgIGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknXG4gICAgICAgICAgICBcIlxuICAgICAgICAgICAgOmJlZm9yZS1zZWxlY3Q9XCJiZWZvcmVTZWxlY3RSZXBhaXJcIlxuICAgICAgICAgICAgQG9uU2VsZWN0PVwib25TZWxlY3RSZXBhaXJcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHVzZXItc2VsZWN0XG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLnJlaW5zcGVjdC5sZW5ndGhcIlxuICAgICAgICAgICAgdGl0bGU9XCLlpI3pqozkurpcIlxuICAgICAgICAgICAgbW9kZT1cInZpZXdcIlxuICAgICAgICAgICAgOm11bHRpPVwidHJ1ZVwiXG4gICAgICAgICAgICB2LW1vZGVsPVwiZGV0YWlsLnJlaW5zcGVjdFwiXG4gICAgICAgICAgICA6b3B0aW9ucz1cIm1vZGVsLnJlaW5zcGVjdE9wdGlvbnNcIlxuICAgICAgICAgICAgOmVkaXRhYmxlZD1cIlxuICAgICAgICAgICAgICAoZGV0YWlsLmlzQ2hlY2tlciB8fCBkZXRhaWwuaXNSZWluc3BlY3QpICYmXG4gICAgICAgICAgICAgICAgKGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknIHx8IGRldGFpbC5zdGF0dXMgPT09ICflvoXlpI3pqownKVxuICAgICAgICAgICAgXCJcbiAgICAgICAgICAgIDpiZWZvcmUtY29uZmlybT1cImJlZm9yZUNvbmZpcm1SZWluc3BlY3RcIlxuICAgICAgICAgICAgQG9uU2VsZWN0PVwib25TZWxlY3RSZWluc3BlY3RcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+XG4gICAgICAgICAgPCEtLSDmraPluLjmlbTmlLnmqKHlvI8gLS0+XG4gICAgICAgICAgPGl0ZW1cbiAgICAgICAgICAgIHYtaWY9XCJcbiAgICAgICAgICAgICAgKChkZXRhaWwucmVwYWlyX2ltYWdlX2ZpbGUgJiYgZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlLmxlbmd0aCA+IDApIHx8XG4gICAgICAgICAgICAgICAgZGV0YWlsLnJlcGFpcl9yZW1hcmspICYmXG4gICAgICAgICAgICAgICAgZGV0YWlsLnN0YXR1cyAhPT0gJ+W+heaVtOaUuSdcbiAgICAgICAgICAgIFwiXG4gICAgICAgICAgICBsYWJlbD1cIuaVtOaUueeFp+eJh1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tY29uXCIgc2xvdD1cInJpZ2h0XCI+XG4gICAgICAgICAgICAgIDxkaXYgdi1pZj1cImRldGFpbC5yZXBhaXJfcmVtYXJrXCIgY2xhc3M9XCJpdGVtLWZvbnRcIj57eyBkZXRhaWwucmVwYWlyX3JlbWFyayB9fTwvZGl2PlxuICAgICAgICAgICAgICA8aXRlbS1pbWctbGlzdCB2LW1vZGVsPVwiZGV0YWlsLnJlcGFpcl9pbWFnZV9maWxlXCIgOmVkaXRhYmxlZD1cImZhbHNlXCIgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvaXRlbT5cblxuICAgICAgICAgIDx1c2VyLXNlbGVjdFxuICAgICAgICAgICAgdi1pZj1cImRldGFpbC5yZXBhaXIuaWQgJiYgZGV0YWlsLnN0YXR1cyAhPT0gJ+ajgOafpeWujOavlSdcIlxuICAgICAgICAgICAgdGl0bGU9XCLmlbTmlLnkurpcIlxuICAgICAgICAgICAgbW9kZT1cInZpZXdcIlxuICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJcIlxuICAgICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5yZXBhaXJPcHRpb25zXCJcbiAgICAgICAgICAgIDpkYXRlPVwiZGV0YWlsLnN0YXR1cyA9PT0gJ+W3suaVtOaUuScgPyBmb3JtYXREYXRlKGRldGFpbC5yZXBhaXJfZGF0ZSkgOiAnJ1wiXG4gICAgICAgICAgICA6ZWRpdGFibGVkPVwiKGRldGFpbC5pc0NoZWNrZXIgfHwgZGV0YWlsLmlzUmVwYWlyKSAmJiBkZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5J1wiXG4gICAgICAgICAgICBAb25TZWxlY3Q9XCJvblNlbGVjdFJlcGFpclwiXG4gICAgICAgICAgLz5cblxuICAgICAgICAgIDxpdGVtIHYtaWY9XCJkZXRhaWwuaXNSZXBhaXIgJiYgZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuSdcIiBsYWJlbD1cIuaVtOaUueeFp+eJh1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tY29uXCIgc2xvdD1cInJpZ2h0XCI+XG4gICAgICAgICAgICAgIDxpdGVtLWltZy1saXN0XG4gICAgICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJfaW1hZ2VfZmlsZVwiXG4gICAgICAgICAgICAgICAgOm1heGxlbmd0aD1cIjUwXCJcbiAgICAgICAgICAgICAgICA6dHJhY2stdGV4dD1cIiflrp7mtYvlrp7ph48nXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvaXRlbT5cblxuICAgICAgICAgIDxpdGVtLXRleHRhcmVhXG4gICAgICAgICAgICB2LWlmPVwiZGV0YWlsLmlzUmVwYWlyICYmIGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknXCJcbiAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVwYWlyX3JlbWFya1wiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIuihpeWFheivtOaYjlwiXG4gICAgICAgICAgICBjbGFzcz1cImJvcmRlci10YlwiXG4gICAgICAgICAgLz5cblxuICAgICAgICAgIDx0ZW1wbGF0ZVxuICAgICAgICAgICAgdi1pZj1cIlxuICAgICAgICAgICAgICBkZXRhaWwuc3RhdHVzID09PSAn5qOA5p+l5a6M5q+VJyAmJlxuICAgICAgICAgICAgICAgIGhhc1BvaW50ICYmXG4gICAgICAgICAgICAgICAgaGFzRXhjZWVkICYmXG4gICAgICAgICAgICAgICAgZGV0YWlsLm1vZGUgPT09ICd2aWV3JyAmJlxuICAgICAgICAgICAgICAgICEoYWxsb3dNZWFzdXJlUmVpbnNwZWN0ICYmICFkZXRhaWwuaXNDaGVja2VyKVxuICAgICAgICAgICAgXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmVlZC1yZXBhaXJcIiBAY2xpY2s9XCJzZXROZWVkUmVwYWlyXCI+XG4gICAgICAgICAgICAgIDxpY29uXG4gICAgICAgICAgICAgICAgOm5hbWU9XCJkZXRhaWwubmVlZFJlcGFpciA/ICdjaGVja2JveC1zcXVhcmUtY2hlY2tlZCcgOiAnY2hlY2tib3gtc3F1YXJlJ1wiXG4gICAgICAgICAgICAgIC8+6YCa55+l5pW05pS5XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPHVzZXItc2VsZWN0XG4gICAgICAgICAgICAgIHYtaWY9XCJkZXRhaWwubmVlZFJlcGFpclwiXG4gICAgICAgICAgICAgIHRpdGxlPVwi5pW05pS55Lq6XCJcbiAgICAgICAgICAgICAgdi1tb2RlbD1cImRldGFpbC5yZXBhaXJcIlxuICAgICAgICAgICAgICA6b3B0aW9ucz1cIm1vZGVsLnJlcGFpck9wdGlvbnNcIlxuICAgICAgICAgICAgICA6bWVtb3J5PVwidHJ1ZVwiXG4gICAgICAgICAgICAgIDpiZWZvcmUtc2VsZWN0PVwiYmVmb3JlU2VsZWN0UmVwYWlyXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8dXNlci1zZWxlY3RcbiAgICAgICAgICAgICAgdi1pZj1cImRldGFpbC5uZWVkUmVwYWlyICYmIGFsbG93TWVhc3VyZVJlaW5zcGVjdFwiXG4gICAgICAgICAgICAgIHRpdGxlPVwi5aSN6aqM5Lq6XCJcbiAgICAgICAgICAgICAgOm11bHRpPVwidHJ1ZVwiXG4gICAgICAgICAgICAgIHYtbW9kZWw9XCJkZXRhaWwucmVpbnNwZWN0XCJcbiAgICAgICAgICAgICAgOm9wdGlvbnM9XCJtb2RlbC5yZWluc3BlY3RPcHRpb25zXCJcbiAgICAgICAgICAgICAgOm1lbW9yeT1cInRydWVcIlxuICAgICAgICAgICAgICA6YmVmb3JlLWNvbmZpcm09XCJiZWZvcmVDb25maXJtUmVpbnNwZWN0XCJcbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxhcHAtYnV0dG9uLWdyb3VwIHYtaWY9XCJkZXRhaWwubmVlZFJlcGFpclwiIGNsYXNzPVwicHQxMFwiPlxuICAgICAgICAgICAgICA8YXBwLWJ1dHRvbiBAY2xpY2s9XCJzZXRSZXBhaXJcIiBuYW1lPVwi6YCa55+l5pW05pS5XCIgLz5cbiAgICAgICAgICAgIDwvYXBwLWJ1dHRvbi1ncm91cD5cbiAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDwhLS0g5p+l55yL5qih5byPIGVuZCAtLT5cblxuICAgICAgPGFwcC1idXR0b24tZ3JvdXBcbiAgICAgICAgdi1pZj1cIlxuICAgICAgICAgIGRldGFpbC5zdGF0dXMgIT09ICfmo4Dmn6XkuK0nICYmXG4gICAgICAgICAgICBkZXRhaWwubW9kZSA9PT0gJ3ZpZXcnICYmXG4gICAgICAgICAgICAhYWxsb3dNZWFzdXJlUmVpbnNwZWN0ICYmXG4gICAgICAgICAgICBtb2RlbC5jdXJyZW50VXNlckJhdGNoSWQgPT09IGRldGFpbC5iYXRjaF9pZFxuICAgICAgICBcIlxuICAgICAgPlxuICAgICAgICA8YXBwLWJ1dHRvbiB0eXBlPVwib3BlcmF0ZVwiIEBjbGljaz1cInNldFJlZG9cIiBuYW1lPVwi5YaN5rWL5LiA5qyhXCIgLz5cbiAgICAgIDwvYXBwLWJ1dHRvbi1ncm91cD5cbiAgICA8L3RlbXBsYXRlPlxuXG4gICAgPGxvYWRpbmctc3RhdHVzXG4gICAgICA6aXMtbG9hZGluZz1cImZhbHNlXCJcbiAgICAgIDppcy1lbXB0eT1cIiFoYXNNYXN0ZXJDaGVja2l0ZW0gfHwgIWRyYXdpbmdVcmxcIlxuICAgICAgOmVtcHR5LXRleHQ9XCIhaGFzTWFzdGVyQ2hlY2tpdGVtID8gJ+ivt+mAieaLqeajgOafpemhuScgOiAn5rKh5pyJ5oi35Z6L5Zu+J1wiXG4gICAgLz5cbiAgPC9zY3JvbGxlcj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgU2Nyb2xsZXIgZnJvbSAnQGNvbXBvbmVudHMvc2Nyb2xsZXInO1xuaW1wb3J0IGl0ZW0gZnJvbSAnQGNvbXBvbmVudHMvaXRlbS8nO1xuaW1wb3J0IE1lYXN1cmVEZXRhaWxQbGFjZUNoZWNraXRlbSBmcm9tICcuL2RldGFpbC1wbGFjZS1jaGVja2l0ZW0udnVlJztcbmltcG9ydCBQcm9ibGVtRGV0YWlsSGVhZGVyIGZyb20gJ0BzcmMvd2lkZ2V0L3Byb2JsZW0tZGV0YWlsLWhlYWRlcic7XG5pbXBvcnQgU3RhdHVzVG90YWxCYXIgZnJvbSAnQHNyYy93aWRnZXQvc3RhdHVzLXRvdGFsLWJhci9pbmRleC52dWUnO1xuaW1wb3J0IERyYXdpbmczIGZyb20gJy4vZHJhd2luZy0zLnZ1ZSc7XG5pbXBvcnQgSXRlbUltZ0xpc3QgZnJvbSAnQHNyYy9jb21wb25lbnRzL2l0ZW0taW1nLWxpc3QnO1xuaW1wb3J0IEl0ZW1UZXh0YXJlYSBmcm9tICdAY29tcG9uZW50cy9pdGVtLXRleHRhcmVhJztcbmltcG9ydCBVc2VyU2VsZWN0IGZyb20gJ0Bjb21wb25lbnRzL3VzZXItc2VsZWN0JztcbmltcG9ydCBkcmF3aW5nTWVhc3VyZSBmcm9tICdAc3JjL3dpZGdldC9kcmF3aW5nLW1lYXN1cmUvJztcblxuaW1wb3J0IFBvcHVwIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAnO1xuaW1wb3J0IE1lYXN1cmVEZXRhaWxNb2RlbCBmcm9tICdAc3JjL21vZGFsL21lYXN1cmUvZGV0YWlsLW1vZGVsLmpzJztcbmltcG9ydCBNZWFzdXJlU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvbWVhc3VyZS9jb21tb24tc2VydmljZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgU2luZ2xlU2VsZWN0IGZyb20gJ0Bjb21wb25lbnRzL3NpbmdsZS1zZWxlY3QnO1xuaW1wb3J0IENvbW1vbkNoZWNrSXRlbVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9jaGVjay1pdGVtLXNlcnZpY2UnO1xuaW1wb3J0IFRhbGtpbmdEYXRhU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL3RhbGtpbmctZGF0YS1zZXJ2aWNlJztcbmltcG9ydCByb3V0ZXIgZnJvbSAnQHJvdXRlcic7XG5pbXBvcnQgZGV0YWlsVGVtcGxhdGVNaXhpbiBmcm9tICcuL2RldGFpbC10ZW1wbGF0ZS5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ01lYXN1cmVEZXRhaWxUZW1wbGF0ZTMnLFxuICBjb21wb25lbnRzOiB7XG4gICAgU2Nyb2xsZXIsXG4gICAgaXRlbSxcbiAgICBNZWFzdXJlRGV0YWlsUGxhY2VDaGVja2l0ZW0sXG4gICAgUHJvYmxlbURldGFpbEhlYWRlcixcbiAgICBTdGF0dXNUb3RhbEJhcixcbiAgICBEcmF3aW5nMyxcbiAgICBJdGVtSW1nTGlzdCxcbiAgICBJdGVtVGV4dGFyZWEsXG4gICAgVXNlclNlbGVjdCxcbiAgICBTaW5nbGVTZWxlY3QsXG4gICAgZHJhd2luZ01lYXN1cmUsXG4gIH0sXG4gIG1peGluczogW2RldGFpbFRlbXBsYXRlTWl4aW5dLFxuICBwcm9wczoge1xuICAgIGRldGFpbDoge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge30sXG4gICAgfSxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbW9kZWw6IE1lYXN1cmVEZXRhaWxNb2RlbCxcbiAgICB9O1xuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgbWFzdGVyQ2hlY2tpdGVtKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuZGV0YWlsTWFzdGVyQ2hlY2tpdGVtO1xuICAgIH0sXG4gICAgaGFzTWFzdGVyQ2hlY2tpdGVtKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWFzdGVyQ2hlY2tpdGVtICYmIHRoaXMubWFzdGVyQ2hlY2tpdGVtLmxlbmd0aDtcbiAgICB9LFxuICAgIHRvdGFsRGF0YSgpIHtcbiAgICAgIGxldCBwb2ludHNUb3RhbCA9IHRoaXMuZGV0YWlsLnBvaW50c1RvdGFsIHx8IHt9O1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgeyBzdGF0dXM6ICflvoXmlbTmlLknLCBjb2xvcjogJ3JlZCcsIHRvdGFsOiBwb2ludHNUb3RhbC5yZXBhaXIgfSxcbiAgICAgICAgeyBzdGF0dXM6ICflvoXlpI3pqownLCBjb2xvcjogJ29yYW5nZScsIHRvdGFsOiBwb2ludHNUb3RhbC5yZWluc3BlY3QgfSxcbiAgICAgICAgeyBzdGF0dXM6ICflt7LpgJrov4cnLCBjb2xvcjogJ2dyZWVuJywgdG90YWw6IHBvaW50c1RvdGFsLnBhc3MgfSxcbiAgICAgICAgeyBzdGF0dXM6ICfpnZ7mraPluLjlhbPpl60nLCBjb2xvcjogJ2dyYXknLCB0b3RhbDogcG9pbnRzVG90YWwuY2xvc2UgfSxcbiAgICAgIF07XG4gICAgfSxcbiAgICBkcmF3aW5nRGF0YSgpIHtcbiAgICAgIGxldCByZXN1bHQgPSBbXTtcblxuICAgICAgXy5lYWNoKHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhLCBwcm9ibGVtID0+IHtcbiAgICAgICAgcmVzdWx0LnB1c2goe1xuICAgICAgICAgIGNoZWNraXRlbTogcHJvYmxlbS5jaGVja0l0ZW0sXG4gICAgICAgICAgcGFzc3JhdGVNb2RlOiBwcm9ibGVtLnBhc3NyYXRlX21vZGUsXG4gICAgICAgICAgcG9pbnRzOiBwcm9ibGVtLnJlYWxpdHlWYWwsXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICBjb25zb2xlLmxvZygnZHJhd2luZ0RhdGEgPT09PT09PT09JywgcmVzdWx0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGZvcm1hdERhdGUoZGF0ZSwgdGVtcCA9ICdZWVlZLU1NLUREIEhIOm1tJykge1xuICAgICAgcmV0dXJuIG1vbWVudChkYXRlKS5mb3JtYXQodGVtcCk7XG4gICAgfSxcblxuICAgIGNoYW5nZU1vZGUobW9kZSkge1xuICAgICAgdGhpcy5pc1Byb2JsZW1FeGlzdHMoKS50aGVuKCgpID0+IHtcbiAgICAgICAgUG9wdXAuY29uZmlybSgn5LuK5aSpMjQ6MDDliY3lj6/kv67mlLnvvIzmmK/lkKbnjrDlnKjkv67mlLnvvJ8nLCB7IG9rVGV4dDogJ+S/ruaUuScgfSkudGhlbihpc09rID0+IHtcbiAgICAgICAgICBpZiAoaXNPaykge1xuICAgICAgICAgICAgdGhpcy5kZXRhaWwubW9kZSA9IG1vZGU7XG4gICAgICAgICAgICB0aGlzLmRldGFpbC5uZWVkUmVwYWlyID0gZmFsc2U7XG4gICAgICAgICAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgIC8vIOabtOaWsCBzb3RyZSDvvIzku6XorqkgZHJhd2luZyDph43mlrDliJ3lp4vljJZcbiAgICAgICAgICAgICAgaWYgKHRoaXMuZGV0YWlsLmlkID09PSB0aGlzLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnJlcGFpckRhdGEuaWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ21lYXN1cmUvU0VUX1JFUEFJUl9EQVRBJywgXy5jbG9uZSh0aGlzLmRldGFpbCkpO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZGV0YWlsLmlkID09PSB0aGlzLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnN1cGVydmlzaW9uRGF0YS5pZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnbWVhc3VyZS9TRVRfU1VQRVJWSVNJT05fREFUQScsIF8uY2xvbmUodGhpcy5kZXRhaWwpKTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRldGFpbC5pZCA9PT0gdGhpcy4kc3RvcmUuc3RhdGUubWVhc3VyZS5jb25zdHJ1Y3REYXRhLmlkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdtZWFzdXJlL1NFVF9DT05TVFJVQ1RfREFUQScsIF8uY2xvbmUodGhpcy5kZXRhaWwpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB0aGlzLiRyZWZzWydzY3JvbGxlciddLnNjcm9sbFRvcCA9IDA7XG4gICAgICAgICAgICB9LCAzMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDorr7nva7pgJrnn6XmlbTmlLlcbiAgICBzZXROZWVkUmVwYWlyKCkge1xuICAgICAgbGV0IGRldGFpbCA9IHRoaXMuZGV0YWlsLFxuICAgICAgICBwbGFjZSA9IHRoaXMubW9kZWwucGxhY2UsXG4gICAgICAgIGl0ZW0gPSB0aGlzLm1hc3RlckNoZWNraXRlbVswXSxcbiAgICAgICAgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuXG4gICAgICB0aGlzLiRzZXQodGhpcy5kZXRhaWwsICduZWVkUmVwYWlyJywgIXRoaXMuZGV0YWlsLm5lZWRSZXBhaXIpO1xuXG4gICAgICBpZiAoIWRldGFpbC5uZWVkUmVwYWlyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICgoZGV0YWlsLm5lZWRSZXBhaXIgJiYgXy5pc0VtcHR5KGRldGFpbC5yZXBhaXIpKSB8fCAhZGV0YWlsLnJlcGFpci5pZCkge1xuICAgICAgICBwcm9taXNlID0gQ29tbW9uQ2hlY2tJdGVtU2VydmljZS5nZXRCaWRTZWN0aW9uQ2hlY2tJdGVtSW5mbyhcbiAgICAgICAgICBkZXRhaWwucHJval9pZCxcbiAgICAgICAgICBwbGFjZS5zZWN0aW9uLmlkLFxuICAgICAgICAgIGl0ZW0uaWQsXG4gICAgICAgICAgJ+Wunua1i+WunumHjydcbiAgICAgICAgKVxuICAgICAgICAgIC50aGVuKGl0ZW0gPT4ge1xuICAgICAgICAgICAgbGV0IHJlcGFpciA9IGl0ZW0ucmVwYWlyWzBdIHx8IHt9O1xuICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuZGV0YWlsLCAncmVwYWlyJywgcmVwYWlyKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIFRhbGtpbmdEYXRhU2VydmljZS5hZGRUcmFjaygn5a6e5rWL5a6e6YePLemAmuefpeaVtOaUuScpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcHJvbWlzZS50aGVuKCgpID0+IHtcbiAgICAgICAgdGhpcy5iZWZvcmVTZWxlY3RSZXBhaXIoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgaXNQcm9ibGVtRXhpc3RzKCkge1xuICAgICAgbGV0IGRldGFpbCA9IHRoaXMuZGV0YWlsO1xuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmlzUHJvYmxlbUV4aXN0cyhkZXRhaWwuaWQpLnRoZW4oZXhpc3RzID0+IHtcbiAgICAgICAgaWYgKCFleGlzdHMpIHtcbiAgICAgICAgICBQb3B1cC5hbGVydCgn5pWw5o2u5pyJ5pu05pawJyk7XG4gICAgICAgICAgcm91dGVyLmdvKC0xKTtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoeyBtZ3M6ICfpl67popjkuI3lrZjlnKgnLCBjb2RlOiAtMSB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBiZWZvcmVTZWxlY3RSZXBhaXIocmVzKSB7XG4gICAgICBsZXQgZGV0YWlsID0gdGhpcy5kZXRhaWwsXG4gICAgICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG5cbiAgICAgIHJlcyA9IHJlcyB8fCB0aGlzLmRldGFpbC5yZXBhaXI7XG4gICAgICBpZiAoZGV0YWlsLm1vZGUgPT09ICd2aWV3Jykge1xuICAgICAgICBwcm9taXNlID0gdGhpcy5pc1Byb2JsZW1FeGlzdHMoKTtcbiAgICAgIH1cbiAgICAgIHByb21pc2VcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIChkZXRhaWwuaXNSZXBhaXJNb2RlIHx8IHRoaXMuYWxsb3dNZWFzdXJlUmVpbnNwZWN0KSAmJlxuICAgICAgICAgICAgXy5zb21lKGRldGFpbC5yZWluc3BlY3QsIHsgaWQ6IHJlcy5pZCB9KVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgUG9wdXAuYWxlcnQoJ+aVtOaUueS6uuS4juWkjemqjOS6uuS4jeiDveebuOWQjCcpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCfmlbTmlLnkurrkuI7lpI3pqozkurrkuI3og73nm7jlkIwnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgJGxvZy5lcnJvcihlcnJvcik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfSxcbiAgICBvblNlbGVjdFJlcGFpcigpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbDtcbiAgICAgIGlmIChkZXRhaWwubW9kZSAhPT0gJ3JlZWRpdCcgJiYgZGV0YWlsLnN0YXR1cyA9PT0gJ+W+heaVtOaUuScpIHtcbiAgICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmNoYW5nZVJlcGFpcihkZXRhaWwpXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVsb2FkRGV0YWlsKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgYmVmb3JlQ29uZmlybVJlaW5zcGVjdChyZXMpIHtcbiAgICAgIGlmICghXy5pc0VtcHR5KHRoaXMuZGV0YWlsLnJlcGFpcikgJiYgXy5zb21lKHJlcywgeyBpZDogdGhpcy5kZXRhaWwucmVwYWlyLmlkIH0pKSB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCflpI3pqozkurrkuI7mlbTmlLnkurrkuI3og73nm7jlkIwnKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0sXG4gICAgb25TZWxlY3RSZWluc3BlY3QoKSB7XG4gICAgICByZXR1cm4gTWVhc3VyZVNlcnZpY2UuY2hhbmdlUmVpbnNwZWN0KHRoaXMuZGV0YWlsKS50aGVuKCgpID0+IHtcbiAgICAgICAgLy8gdGhpcy5yZWxvYWREZXRhaWwoKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBvbkNsaWNrUG9pbnQocG9pbnQpIHtcbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ01lYXN1cmVQb2ludERldGFpbCcsIHBhcmFtczogeyBpZDogcG9pbnQucG9pbnRJZCB9IH0pO1xuICAgIH0sXG5cbiAgICBjaGVja1N1Ym1pdERhdGEoKSB7XG4gICAgICB0aGlzLiRyZWZzWydkcmF3aW5nJ10uaW5wdXRCbHVyKCk7XG5cbiAgICAgIGxldCBfdGhpcyA9IHRoaXMsXG4gICAgICAgIGRldGFpbCA9IF90aGlzLmRldGFpbCxcbiAgICAgICAgaGFzVmFsID0gX3RoaXMubW9kZWwuaGFzVmFsO1xuICAgICAgLy8g5piv5ZCm5piv5YWz6IGU5qOA5p+lXG4gICAgICBsZXQgaXNDb21ib0NoZWNrID0gZGV0YWlsLnByb2JsZW1EYXRhLmxlbmd0aCA+IDE7XG4gICAgICBsZXQgcG9pbnRzVmFsQXJyID0gXy51bnppcChcbiAgICAgICAgXy5tYXAoZGV0YWlsLnByb2JsZW1EYXRhLCBwcm9ibGVtID0+IHtcbiAgICAgICAgICByZXR1cm4gXy5tYXAocHJvYmxlbS5yZWFsaXR5VmFsLCBwb2ludCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcG9pbnQudmFsO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgKTtcblxuICAgICAgLy8g5YWz6IGU5qOA5p+l55qE5pe25YCZ77yM5LiA5Liq5qOA5p+l6aG56Iez5bCR6KaB5b2V5LiA5Liq54K5XG4gICAgICBsZXQgaGFzRW1wdHlQcm9ibGVtID0gXy5zb21lKGRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIHJldHVybiAhXy5zb21lKHByb2JsZW0ucmVhbGl0eVZhbCwgcG9pbnQgPT4ge1xuICAgICAgICAgIHJldHVybiB0aGlzLm1vZGVsLmhhc1ZhbChwb2ludC52YWwpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyDmnKrlvZXlhaXlrp7mtYvlgLznmoTngrlcbiAgICAgIGxldCB2YWxFbXB0eVBvaW50cyA9IFtdLFxuICAgICAgICAvLyDmnKrlvZXlhaXorr7orqHlgLznmoTngrlcbiAgICAgICAgc2V0VmFsRW1wdHlQb2ludHMgPSBbXSxcbiAgICAgICAgLy8g5YWz6IGU5qOA5p+l6aG555qE5pe25YCZ77yM5LiA57uE54K56YeM6Z2i77yM5rKh5pyJ6L6T5YWl5Lu75L2V5YC8XG4gICAgICAgIGludmFsaWRQb2ludHMgPSBbXTtcblxuICAgICAgbGV0IGFsbFByb2JsZW1Qb2ludHMgPSBbXTtcblxuICAgICAgLy8g5piv5ZCm5pyJ5pyq5b2V5YWl5a6e5rWL54K555qE6Zeu6aKYXG4gICAgICBsZXQgaGFzRW1wdHlSZWFsaXR5VmFsID0gXy5zb21lKGRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIHJldHVybiAhcHJvYmxlbS5yZWFsaXR5VmFsIHx8ICFwcm9ibGVtLnJlYWxpdHlWYWwubGVuZ3RoO1xuICAgICAgfSk7XG5cbiAgICAgIGxldCBoYXNFbXB0eUFyZWEgPSBmYWxzZSxcbiAgICAgICAgaW5jb21wbGV0ZWRHcm91cCA9IGZhbHNlLFxuICAgICAgICByZXN1bHQgPSB0cnVlO1xuICAgICAgXy5lYWNoKGRldGFpbC5wcm9ibGVtRGF0YSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDUpIHtcbiAgICAgICAgICB2YXIgYXJlYUdyb3VwUG9pbnRzO1xuICAgICAgICAgIF8uZWFjaChwcm9ibGVtLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50LCBwSW5kZXgsIHBvaW50cykge1xuICAgICAgICAgICAgLy8g5ZCM5LiA57uE55qE54K5XG4gICAgICAgICAgICB2YXIgYnJvUG9pbnQgPSBfLmZpbmQocG9pbnRzLCBmdW5jdGlvbihwKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwb2ludCAhPT0gcCAmJiBwLmFyZWEgPT09IHBvaW50LmFyZWEgJiYgcC5sYWJlbCA9PT0gcG9pbnQubGFiZWw7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8g5om+5Ye65omA5pyJ57uE5pyq5b2V5a6M5pW055qE54K5XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICghaGFzVmFsKHBvaW50LnZhbCkgJiYgaGFzVmFsKGJyb1BvaW50LnZhbCkpIHx8XG4gICAgICAgICAgICAgIChoYXNWYWwocG9pbnQudmFsKSAmJiAhaGFzVmFsKGJyb1BvaW50LnZhbCkpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgdmFsRW1wdHlQb2ludHMucHVzaChwb2ludCk7XG4gICAgICAgICAgICAgIGluY29tcGxldGVkR3JvdXAgPSB0cnVlO1xuICAgICAgICAgICAgICAvLyDmlbTkuKrljLrpg73msqHmnInlvZXlhaXngrlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGFyZWFHcm91cFBvaW50cyA9IF8uZmlsdGVyKHBvaW50cywgZnVuY3Rpb24ocCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwLmFyZWEgPT09IHBvaW50LmFyZWE7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB2YXIgZm91bmQgPSBfLmZpbmQoYXJlYUdyb3VwUG9pbnRzLCBmdW5jdGlvbihwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhhc1ZhbChwLnZhbCk7XG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIGlmICghZm91bmQpIHtcbiAgICAgICAgICAgICAgICB2YWxFbXB0eVBvaW50cy5wdXNoKHBvaW50KTtcbiAgICAgICAgICAgICAgICBoYXNFbXB0eUFyZWEgPSB0cnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIOaJgOacieW9leWujOaVtOayoeacieiuvuiuoeWAvOeahOeCuVxuICAgICAgICAgICAgaWYgKCFoYXNWYWwocG9pbnQuc2V0VmFsKSAmJiBoYXNWYWwocG9pbnQudmFsKSAmJiBoYXNWYWwoYnJvUG9pbnQudmFsKSkge1xuICAgICAgICAgICAgICBzZXRWYWxFbXB0eVBvaW50cy5wdXNoKHBvaW50KTtcbiAgICAgICAgICAgICAgaW5jb21wbGV0ZWRHcm91cCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIOaJgOaciemXrumimOeahOeCuVxuICAgICAgICAgICAgaWYgKCFhbGxQcm9ibGVtUG9pbnRzW3BJbmRleF0pIHtcbiAgICAgICAgICAgICAgYWxsUHJvYmxlbVBvaW50c1twSW5kZXhdID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbGxQcm9ibGVtUG9pbnRzW3BJbmRleF0ucHVzaChwb2ludCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAocHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA1KSB7XG4gICAgICAgICAgICBpZiAoaGFzRW1wdHlBcmVhKSB7XG4gICAgICAgICAgICAgIFBvcHVwLmFsZXJ0KCflrr3luqbjgIHpq5jluqboh7PlsJHpnIDlrozmlbTlvZXlhaXlhbbkuK3kuIDkuKonKTtcbiAgICAgICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGluY29tcGxldGVkR3JvdXApIHtcbiAgICAgICAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+W9leWFqOWunua1i+WAvOWSjOiuvuiuoeWAvCcpO1xuICAgICAgICAgICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfLmVhY2gocHJvYmxlbS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCwgcEluZGV4KSB7XG4gICAgICAgICAgICAvLyDmib7lh7rmiYDmnInmnKrlvZXlhaXnmoTngrlcbiAgICAgICAgICAgIGlmICghaGFzVmFsKHBvaW50LnZhbCkpIHtcbiAgICAgICAgICAgICAgdmFsRW1wdHlQb2ludHMucHVzaChwb2ludCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIOaJgOacieacquW9leWFpeiuvuiuoeWAvOeahOeCuVxuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAocHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAzIHx8XG4gICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSA2IHx8XG4gICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNCB8fFxuICAgICAgICAgICAgICAgIHByb2JsZW0ucGFzc3JhdGVfbW9kZSA9PT0gMTUgfHxcbiAgICAgICAgICAgICAgICBwcm9ibGVtLnBhc3NyYXRlX21vZGUgPT09IDE2IHx8XG4gICAgICAgICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZV9tb2RlID09PSAxNykgJiZcbiAgICAgICAgICAgICAgIWhhc1ZhbChwb2ludC5zZXRWYWwpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgc2V0VmFsRW1wdHlQb2ludHMucHVzaChwb2ludCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIOaJgOaciemXrumimOeahOeCuVxuICAgICAgICAgICAgaWYgKCFhbGxQcm9ibGVtUG9pbnRzW3BJbmRleF0pIHtcbiAgICAgICAgICAgICAgYWxsUHJvYmxlbVBvaW50c1twSW5kZXhdID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbGxQcm9ibGVtUG9pbnRzW3BJbmRleF0ucHVzaChwb2ludCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVzdWx0ID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuXG4gICAgICBfLmVhY2goYWxsUHJvYmxlbVBvaW50cywgcG9pbnRzID0+IHtcbiAgICAgICAgbGV0IGlzR3JvdXBFbXB0eSA9ICFfLnNvbWUocG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLm1vZGVsLmhhc1ZhbChwb2ludC52YWwpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoaXNHcm91cEVtcHR5KSB7XG4gICAgICAgICAgaW52YWxpZFBvaW50cyA9IGludmFsaWRQb2ludHMuY29uY2F0KHBvaW50cyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIWlzQ29tYm9DaGVjayAmJiB2YWxFbXB0eVBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgXy5lYWNoKHZhbEVtcHR5UG9pbnRzLCBwb2ludCA9PiB7XG4gICAgICAgICAgcG9pbnQuaXNXYXJuaW5nID0gdHJ1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgX3RoaXMuJHJlZnNbJ2RyYXdpbmcnXS51cGRhdGUoZGV0YWlsKTtcblxuICAgICAgICBQb3B1cC5hbGVydCgn6K+35aGr5YaZ5omA5pyJ55qE5a6e5rWL5YC8Jyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc0NvbWJvQ2hlY2sgJiYgc2V0VmFsRW1wdHlQb2ludHMubGVuZ3RoKSB7XG4gICAgICAgIF8uZWFjaChzZXRWYWxFbXB0eVBvaW50cywgcG9pbnQgPT4ge1xuICAgICAgICAgIHBvaW50LmlzV2FybmluZyA9IHRydWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF90aGlzLiRyZWZzWydkcmF3aW5nJ10udXBkYXRlKGRldGFpbCk7XG5cbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+Whq+WGmeaJgOacieeahOiuvuiuoeWAvCcpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0NvbWJvQ2hlY2sgJiYgaGFzRW1wdHlQcm9ibGVtICYmIHBvaW50c1ZhbEFyci5sZW5ndGgpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+avj+S4quajgOafpemhueiHs+WwkeW9leS4gOS4queCuScpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChoYXNFbXB0eVJlYWxpdHlWYWwpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+eCueWHu+aIt+Wei+WbvuW9leWFpea1i+mHj+aVsOaNricpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0NvbWJvQ2hlY2sgJiYgaW52YWxpZFBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgXy5lYWNoKGludmFsaWRQb2ludHMsIHBvaW50ID0+IHtcbiAgICAgICAgICBwb2ludC5pc1dhcm5pbmcgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLiRyZWZzWydkcmF3aW5nJ10udXBkYXRlKGRldGFpbCk7XG4gICAgICB9XG5cbiAgICAgIGxldCBub1JlcGFpciA9IF8uaXNFbXB0eShkZXRhaWwucmVwYWlyKSB8fCAhZGV0YWlsLnJlcGFpci5pZDtcbiAgICAgIC8vIOajgOafpeaVtOaUueS6uuaYr+WQpumAieaLqVxuICAgICAgaWYgKChkZXRhaWwubmVlZFJlcGFpciB8fCBkZXRhaWwuc3RhdHVzID09PSAn5b6F5pW05pS5JykgJiYgbm9SZXBhaXIpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+mAieaLqeaVtOaUueS6uicpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIOagoemqjOWkjemqjOS6ulxuICAgICAgaWYgKFxuICAgICAgICAoZGV0YWlsLm5lZWRSZXBhaXIgfHwgKGRldGFpbC5zdGF0dXMgPT09ICflvoXmlbTmlLknICYmIGRldGFpbC5pc1JlcGFpck1vZGUpKSAmJlxuICAgICAgICB0aGlzLmFsbG93TWVhc3VyZVJlaW5zcGVjdFxuICAgICAgKSB7XG4gICAgICAgIGlmIChfLmlzRW1wdHkoZGV0YWlsLnJlaW5zcGVjdCkpIHtcbiAgICAgICAgICBQb3B1cC5hbGVydCgn6K+36YCJ5oup5aSN6aqM5Lq6Jyk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8uc29tZShkZXRhaWwucmVpbnNwZWN0LCB7IGlkOiBkZXRhaWwucmVwYWlyLmlkIH0pKSB7XG4gICAgICAgICAgUG9wdXAuYWxlcnQoJ+aVtOaUueS6uuS4juWkjemqjOS6uuS4jeiDveebuOWQjCcpO1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsZXQgY29uc3RyYWN0b3JSZXF1aXJlZCA9IF8uZmluZChkZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICByZXR1cm4gXy5pc0VtcHR5KHByb2JsZW0uY29udHJhY3Rvcik7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGNvbnN0cmFjdG9yUmVxdWlyZWQpIHtcbiAgICAgICAgUG9wdXAuYWxlcnQoJ+ivt+mAieaLqeaWveW3peWNleS9jScpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICAgLy8g6YCa55+l5pW05pS5XG4gICAgc2V0UmVwYWlyKCkge1xuICAgICAgbGV0IGRldGFpbCA9IF8uY2xvbmUodGhpcy5kZXRhaWwpO1xuICAgICAgaWYgKF8uaXNFbXB0eShkZXRhaWwucmVwYWlyKSB8fCAhZGV0YWlsLnJlcGFpci5pZCkge1xuICAgICAgICBQb3B1cC5hbGVydCgn6K+36YCJ5oup5pW05pS55Lq6Jyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuYWxsb3dNZWFzdXJlUmVpbnNwZWN0KSB7XG4gICAgICAgIGlmIChfLmlzRW1wdHkoZGV0YWlsLnJlaW5zcGVjdCkpIHtcbiAgICAgICAgICBQb3B1cC5hbGVydCgn6K+36YCJ5oup5aSN6aqM5Lq6Jyk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChfLnNvbWUoZGV0YWlsLnJlaW5zcGVjdCwgeyBpZDogZGV0YWlsLnJlcGFpci5pZCB9KSkge1xuICAgICAgICAgIFBvcHVwLmFsZXJ0KCfmlbTmlLnkurrkuI7lpI3pqozkurrkuI3og73nm7jlkIwnKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLnNldFJlcGFpcihkZXRhaWwpLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLnJlbG9hZERldGFpbCgpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOmHjeaWsOWKoOi9vemXrumimOivpuaDhVxuICAgIHJlbG9hZERldGFpbCgpIHtcbiAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkucHJvYmxlbUlkKSB7XG4gICAgICAgICAgcmV0dXJuIE1lYXN1cmVEZXRhaWxNb2RlbC5sb2FkRGV0YWlsQnlJZCh0aGlzLiRyb3V0ZS5xdWVyeS5wcm9ibGVtSWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBNZWFzdXJlRGV0YWlsTW9kZWwubG9hZERldGFpbEJ5SWRlbnRpdHkoTWVhc3VyZURldGFpbE1vZGVsLnRhYnNJZGVudGl0eSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBvbkRyYXdpbmdDaGFuZ2UocmVzKSB7XG4gICAgICBjb25zb2xlLmxvZygnb25EcmF3aW5nQ2hhbmdlIC0tLS0tLS0tLScsIHJlcyk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLm5lZWQtcmVwYWlyIHtcbiAgaGVpZ2h0OiA0NnB4O1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgcGFkZGluZzogMTRweCAxNXB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjNjY2O1xufVxuLm5lZWQtcmVwYWlyIC5pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBtYXJnaW4tcmlnaHQ6IDdweDtcbn1cbi5jLWxhYmVsIHtcbiAgY29sb3I6ICM5OTk7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbGluZS1oZWlnaHQ6IDE3cHg7XG4gIHBhZGRpbmc6IDE0cHggMTVweCA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG59XG4uYnRuLXJlZWRpdCB7XG4gIHdpZHRoOiA4MHB4O1xuICBwYWRkaW5nOiAxMnB4IDA7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICR0aGVtZUNvbG9yO1xufVxuLmJ0bi1yZWVkaXQgLmljb24ge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cbi5pdGVtLXRleHRfc3BlY2lhbCB7XG4gIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICBkaXNwbGF5OiBpbmhlcml0O1xufVxuPC9zdHlsZT5cbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZHJhd2luZy0zLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTMyYzYxNzM2Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsIi8qKlxuICogSGlEUEkgQ2FudmFzIFBvbHlmaWxsICgxLjAuOSlcbiAqXG4gKiBBdXRob3I6IEpvbmF0aGFuIEQuIEpvaG5zb24gKGh0dHA6Ly9qb25kYXZpZGpvaG4uY29tKVxuICogSG9tZXBhZ2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb25kYXZpZGpvaG4vaGlkcGktY2FudmFzLXBvbHlmaWxsXG4gKiBJc3N1ZSBUcmFja2VyOiBodHRwczovL2dpdGh1Yi5jb20vam9uZGF2aWRqb2huL2hpZHBpLWNhbnZhcy1wb2x5ZmlsbC9pc3N1ZXNcbiAqIExpY2Vuc2U6IEFwYWNoZSAyLjBcbiAqL1xuZnVuY3Rpb24gRXh0ZW5kQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKHByb3RvdHlwZSkge1xuICB2YXIgcGl4ZWxSYXRpbyA9IChmdW5jdGlvbihjb250ZXh0KSB7XG4gICAgICB2YXIgYmFja2luZ1N0b3JlID1cbiAgICAgICAgY29udGV4dC5iYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIGNvbnRleHQubW96QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICBjb250ZXh0Lm1zQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgIGNvbnRleHQuYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgICAxO1xuXG4gICAgICByZXR1cm4gKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIC8gYmFja2luZ1N0b3JlO1xuICAgIH0pKHByb3RvdHlwZSksXG4gICAgZm9yRWFjaCA9IGZ1bmN0aW9uKG9iaiwgZnVuYykge1xuICAgICAgZm9yICh2YXIgcCBpbiBvYmopIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwKSkge1xuICAgICAgICAgIGZ1bmMob2JqW3BdLCBwKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgcmF0aW9BcmdzID0ge1xuICAgICAgZmlsbFJlY3Q6ICdhbGwnLFxuICAgICAgY2xlYXJSZWN0OiAnYWxsJyxcbiAgICAgIHN0cm9rZVJlY3Q6ICdhbGwnLFxuICAgICAgbW92ZVRvOiAnYWxsJyxcbiAgICAgIGxpbmVUbzogJ2FsbCcsXG4gICAgICBhcmM6IFswLCAxLCAyXSxcbiAgICAgIGFyY1RvOiAnYWxsJyxcbiAgICAgIGJlemllckN1cnZlVG86ICdhbGwnLFxuICAgICAgaXNQb2ludGluUGF0aDogJ2FsbCcsXG4gICAgICBpc1BvaW50aW5TdHJva2U6ICdhbGwnLFxuICAgICAgcXVhZHJhdGljQ3VydmVUbzogJ2FsbCcsXG4gICAgICByZWN0OiAnYWxsJyxcbiAgICAgIHRyYW5zbGF0ZTogJ2FsbCcsXG4gICAgICBjcmVhdGVSYWRpYWxHcmFkaWVudDogJ2FsbCcsXG4gICAgICBjcmVhdGVMaW5lYXJHcmFkaWVudDogJ2FsbCcsXG4gICAgfTtcblxuICBpZiAocGl4ZWxSYXRpbyA9PT0gMSkgcmV0dXJuO1xuXG4gIGZvckVhY2gocmF0aW9BcmdzLCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgcHJvdG90eXBlW2tleV0gPSAoZnVuY3Rpb24oX3N1cGVyKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBpLFxuICAgICAgICAgIGxlbixcbiAgICAgICAgICBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgICAgICBpZiAodmFsdWUgPT09ICdhbGwnKSB7XG4gICAgICAgICAgYXJncyA9IGFyZ3MubWFwKGZ1bmN0aW9uKGEpIHtcbiAgICAgICAgICAgIHJldHVybiBhICogcGl4ZWxSYXRpbztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW3ZhbHVlW2ldXSAqPSBwaXhlbFJhdGlvO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICB9O1xuICAgIH0pKHByb3RvdHlwZVtrZXldKTtcbiAgfSk7XG5cbiAgLy8gU3Ryb2tlIGxpbmVXaWR0aCBhZGp1c3RtZW50XG4gIHByb3RvdHlwZS5zdHJva2UgPSAoZnVuY3Rpb24oX3N1cGVyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5saW5lV2lkdGggKj0gcGl4ZWxSYXRpbztcbiAgICAgIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgdGhpcy5saW5lV2lkdGggLz0gcGl4ZWxSYXRpbztcbiAgICB9O1xuICB9KShwcm90b3R5cGUuc3Ryb2tlKTtcblxuICAvLyBUZXh0XG4gIC8vXG4gIHByb3RvdHlwZS5maWxsVGV4dCA9IChmdW5jdGlvbihfc3VwZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICAgIGFyZ3NbMV0gKj0gcGl4ZWxSYXRpbzsgLy8geFxuICAgICAgYXJnc1syXSAqPSBwaXhlbFJhdGlvOyAvLyB5XG5cbiAgICAgIHRoaXMuZm9udCA9IHRoaXMuZm9udC5yZXBsYWNlKC8oXFxkKykocHh8ZW18cmVtfHB0KS9nLCBmdW5jdGlvbih3LCBtLCB1KSB7XG4gICAgICAgIHJldHVybiBtICogcGl4ZWxSYXRpbyArIHU7XG4gICAgICB9KTtcblxuICAgICAgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuXG4gICAgICB0aGlzLmZvbnQgPSB0aGlzLmZvbnQucmVwbGFjZSgvKFxcZCspKHB4fGVtfHJlbXxwdCkvZywgZnVuY3Rpb24odywgbSwgdSkge1xuICAgICAgICByZXR1cm4gbSAvIHBpeGVsUmF0aW8gKyB1O1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSkocHJvdG90eXBlLmZpbGxUZXh0KTtcblxuICBwcm90b3R5cGUuc3Ryb2tlVGV4dCA9IChmdW5jdGlvbihfc3VwZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICAgIGFyZ3NbMV0gKj0gcGl4ZWxSYXRpbzsgLy8geFxuICAgICAgYXJnc1syXSAqPSBwaXhlbFJhdGlvOyAvLyB5XG5cbiAgICAgIHRoaXMuZm9udCA9IHRoaXMuZm9udC5yZXBsYWNlKC8oXFxkKykocHh8ZW18cmVtfHB0KS9nLCBmdW5jdGlvbih3LCBtLCB1KSB7XG4gICAgICAgIHJldHVybiBtICogcGl4ZWxSYXRpbyArIHU7XG4gICAgICB9KTtcblxuICAgICAgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuXG4gICAgICB0aGlzLmZvbnQgPSB0aGlzLmZvbnQucmVwbGFjZSgvKFxcZCspKHB4fGVtfHJlbXxwdCkvZywgZnVuY3Rpb24odywgbSwgdSkge1xuICAgICAgICByZXR1cm4gbSAvIHBpeGVsUmF0aW8gKyB1O1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSkocHJvdG90eXBlLnN0cm9rZVRleHQpO1xuXG4gIHByb3RvdHlwZS5leHRlbmRlZCA9IHRydWU7XG59XG5cbmxldCBFeHRlbmRIVE1MQ2FudmFzRWxlbWVudCA9IGZ1bmN0aW9uKGNhbnZhcykge1xuICAoZnVuY3Rpb24ocHJvdG90eXBlKSB7XG4gICAgcHJvdG90eXBlLmdldENvbnRleHQgPSAoZnVuY3Rpb24oX3N1cGVyKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24odHlwZSkge1xuICAgICAgICB2YXIgYmFja2luZ1N0b3JlLFxuICAgICAgICAgIHJhdGlvLFxuICAgICAgICAgIGNvbnRleHQgPSBfc3VwZXIuY2FsbCh0aGlzLCB0eXBlKTtcblxuICAgICAgICBpZiAodHlwZSA9PT0gJzJkJykge1xuICAgICAgICAgIGJhY2tpbmdTdG9yZSA9XG4gICAgICAgICAgICBjb250ZXh0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgICAgICAgIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgICAgICBjb250ZXh0Lm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgICAgICAgIGNvbnRleHQubXNCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgICAgICBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgICAgICBjb250ZXh0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgICAgICAgIDE7XG5cbiAgICAgICAgICByYXRpbyA9ICh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCAxKSAvIGJhY2tpbmdTdG9yZTtcblxuICAgICAgICAgIGlmIChyYXRpbyA+IDEpIHtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUuaGVpZ2h0ID0gdGhpcy5oZWlnaHQgKyAncHgnO1xuICAgICAgICAgICAgdGhpcy5zdHlsZS53aWR0aCA9IHRoaXMud2lkdGggKyAncHgnO1xuICAgICAgICAgICAgdGhpcy53aWR0aCAqPSByYXRpbztcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0ICo9IHJhdGlvO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBFeHRlbmRDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQoY29udGV4dCk7XG4gICAgICAgIHJldHVybiBjb250ZXh0O1xuICAgICAgfTtcbiAgICB9KShwcm90b3R5cGUuZ2V0Q29udGV4dCk7XG4gIH0pKGNhbnZhcyk7XG59O1xuXG5leHBvcnQgeyBFeHRlbmRDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsIEV4dGVuZEhUTUxDYW52YXNFbGVtZW50IH07XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAubmVlZC1yZXBhaXJbZGF0YS12LTVjNmNhYWMwXXtoZWlnaHQ6NDZweDtsaW5lLWhlaWdodDoxOHB4O3BhZGRpbmc6MTRweCAxNXB4O21hcmdpbi10b3A6MTBweDtmb250LXNpemU6MTZweDtjb2xvcjojNjY2fS56amFwcCAubmVlZC1yZXBhaXIgLmljb25bZGF0YS12LTVjNmNhYWMwXXtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjp0b3A7bWFyZ2luLXJpZ2h0OjdweH0uemphcHAgLmMtbGFiZWxbZGF0YS12LTVjNmNhYWMwXXtjb2xvcjojOTk5O2ZvbnQtc2l6ZToxMnB4O2xpbmUtaGVpZ2h0OjE3cHg7cGFkZGluZzoxNHB4IDE1cHggOHB4O2JhY2tncm91bmQtY29sb3I6I2Y0ZjRmNH0uemphcHAgLmJ0bi1yZWVkaXRbZGF0YS12LTVjNmNhYWMwXXt3aWR0aDo4MHB4O3BhZGRpbmc6MTJweCAwO2xpbmUtaGVpZ2h0OjIycHg7Zm9udC1zaXplOjE0cHg7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6IzQyNzVlOH0uemphcHAgLmJ0bi1yZWVkaXQgLmljb25bZGF0YS12LTVjNmNhYWMwXXttYXJnaW4tdG9wOjVweDtmb250LXNpemU6MTJweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LnpqYXBwIC5pdGVtLXRleHRfc3BlY2lhbFtkYXRhLXYtNWM2Y2FhYzBde2xpbmUtaGVpZ2h0OjIzcHg7ZGlzcGxheTppbmhlcml0fVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPHRyYW5zaXRpb24gbmFtZT1cInNsaWRlLXJpZ2h0XCI+XG4gICAgPHBhZ2UtY29udGVudFxuICAgICAgdi1pZj1cInNob3dcIlxuICAgICAgbW9kZT1cImRpYWxvZ1wiXG4gICAgICB0aXRsZT1cIuajgOafpeaMh+W8lVwiXG4gICAgICA6b24tY2xvc2U9XCJjbG9zZVBvcHVwXCJcbiAgICAgIDpjbGFzcz1cInsgJ2NvbnRlbnQtbm90LWVtcHR5JzogY29udGVudC5sZW5ndGggfVwiXG4gICAgPlxuICAgICAgPGRpdiB2LWlmPVwiIWlzTG9hZGluZ1wiIGNsYXNzPVwiY2hlY2stZ3VpZGUtZGV0YWlsLWhkIGJvcmRlci1ib3R0b21cIj5cbiAgICAgICAgPGgyIGNsYXNzPVwiY2hlY2stZ3VpZGUtZGV0YWlsLXRpdGxlIHBiMTBcIj57eyB0aXRsZSB9fTwvaDI+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiB2LWlmPVwiIWlzTG9hZGluZyAmJiBjb250ZW50Lmxlbmd0aFwiIGNsYXNzPVwiY2hlY2stZ3VpZGUtZGV0YWlsLWNvbnRlbnRcIj5cbiAgICAgICAgPHAgdi1mb3I9XCIoaXRlbSwga2V5KSBpbiBjb250ZW50XCIgOmtleT1cImtleVwiPlxuICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgIHYtaWY9XCJpdGVtLmlzSW1nICYmIGl0ZW0uc3JjXCJcbiAgICAgICAgICAgIDpzcmM9XCJnZXRUaHVtYm5haWwoaXRlbSlcIlxuICAgICAgICAgICAgOmNsYXNzPVwieyAnaW1nLW5vdC1yZWFkeSc6ICFpdGVtLnJlYWR5LCBlcnJvcjogaXRlbS5zdGF0dXMgPT09ICdyZWplY3RlZCcgfVwiXG4gICAgICAgICAgICBAZXJyb3I9XCJpbWdFcnJvcihpdGVtLCBrZXkpXCJcbiAgICAgICAgICAgIEBjbGljaz1cImltZ0NsaWNrKGl0ZW0pXCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxzcGFuIHYtaWY9XCIhaXRlbS5pc0ltZ1wiPlxuICAgICAgICAgICAge3sgaXRlbS52YWwgfX1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvcD5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8bG9hZGluZy1zdGF0dXNcbiAgICAgICAgOmlzLWxvYWRpbmc9XCJpc0xvYWRpbmdcIlxuICAgICAgICA6aXMtZW1wdHk9XCIhY29udGVudC5sZW5ndGhcIlxuICAgICAgICBlbXB0eS10ZXh0PVwiUEPnq6/mnKrorr7nva7mo4Dmn6XmjIflvJVcIlxuICAgICAgLz5cbiAgICA8L3BhZ2UtY29udGVudD5cbiAgPC90cmFuc2l0aW9uPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbi8vIGltcG9ydCAkcSBmcm9tICdAc3RhdGljL2xpYi9wcm9taXNlJztcbmltcG9ydCBwbHVnaW5BcGkgZnJvbSAnQHNyYy9hcGkvcGx1Z2luQXBpJztcbmltcG9ydCBQb3B1cE1peGluIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAtbWl4aW4nO1xuaW1wb3J0IENvbW1vbkNoZWNrSXRlbVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9jaGVjay1pdGVtLXNlcnZpY2UuanMnO1xuaW1wb3J0IEltYWdlU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2ltYWdlLXNlcnZpY2UnO1xuLy8gaW1wb3J0IFdlYlNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi93ZWItc2VydmljZSc7XG5pbXBvcnQgU3BlY2lhbEluc3BlY3RTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9zcGVjaWFsLWluc3BlY3Qvc3BlY2lhbC1pbnNwZWN0LXNlcnZpY2UnO1xuLy8gaW1wb3J0IERhdGFTeW5jaHJvbml6ZXIgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9kYXRhLXN5bmNocm9uaXplcic7XG5pbXBvcnQgVGVtcGxldFBsYW5TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS90ZW1wbGV0LXBsYW4vdGVtcGxldC1wbGFuLXNlcnZpY2UnO1xuaW1wb3J0IE1hdGVyaWFsU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvbWF0ZXJpYWwvbWF0ZXJpYWwtc2VydmljZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0NoZWNrR3VpZGVEZXRhaWwnLFxuICBjb21wb25lbnRzOiB7fSxcbiAgbWl4aW5zOiBbUG9wdXBNaXhpbl0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgICAgaXNJbWFnZURvd25sb2FkaW5nOiBmYWxzZSxcblxuICAgICAgdGl0bGU6ICcnLFxuICAgICAgY29udGVudDogW10sXG5cbiAgICAgIG1vZHVsZTogJycsXG4gICAgICBpdGVtSWQ6ICcnLFxuICAgIH07XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvcGVuUG9wdXAocGFyYW1zKSB7XG4gICAgICBsZXQgcHJvbWlzZTtcblxuICAgICAgdGhpcy52YWx1ZSA9IHRydWU7XG4gICAgICB0aGlzLnNob3cgPSB0cnVlO1xuXG4gICAgICB0aGlzLm1vZHVsZSA9IHBhcmFtcy5tb2R1bGU7XG4gICAgICB0aGlzLml0ZW1JZCA9IHBhcmFtcy5pdGVtSWQ7XG5cbiAgICAgIHRoaXMuJGVtaXQoJ29wZW4nKTtcblxuICAgICAgZm9yIChsZXQga2V5IGluIHBhcmFtcykge1xuICAgICAgICB0aGlzW2tleV0gPSBwYXJhbXNba2V5XTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jaGVja1R5cGUgPSB7XG4gICAgICAgIGNoZWNrOiAzMSxcbiAgICAgICAgJ2NoZWNrLXNhZmV0eSc6IDM2LFxuICAgICAgICAnY2hlY2stcXVhbGl0eSc6IDM3LFxuICAgICAgICAnbWVhc3VyZS12Myc6IDQxLFxuICAgICAgICBwcm9jZXNzOiAzMixcbiAgICAgICAgJ2ZseS1pbnNwZWN0JzogMTAxLFxuICAgICAgfVt0aGlzLm1vZHVsZV07XG5cbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcblxuICAgICAgaWYgKHRoaXMubW9kdWxlID09PSAnc3BlY2lhbC1pbnNwZWN0Jykge1xuICAgICAgICAvLyDkuJPpobnlt6Hmo4BcbiAgICAgICAgcHJvbWlzZSA9IFNwZWNpYWxJbnNwZWN0U2VydmljZS5nZXRTcGVjaWFsSW5zcGVjdENoZWNrSXRlbURldGFpbCh0aGlzLml0ZW1JZCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMubW9kdWxlID09PSAndGVtcGxldC1wbGFuJykge1xuICAgICAgICBwcm9taXNlID0gVGVtcGxldFBsYW5TZXJ2aWNlLmdldFRlbXBsZXREZXRhaWwodGhpcy5pdGVtSWQpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm1vZHVsZSA9PT0gJ21hdGVyaWFsJykge1xuICAgICAgICBwcm9taXNlID0gTWF0ZXJpYWxTZXJ2aWNlLmdldE1hdGVyaWFsRGV0YWlsKHRoaXMuaXRlbUlkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb21pc2UgPSBDb21tb25DaGVja0l0ZW1TZXJ2aWNlLmdldENoZWNrSXRlbSh0aGlzLml0ZW1JZCwgdGhpcy5jaGVja1R5cGUpO1xuICAgICAgfVxuXG4gICAgICBwcm9taXNlXG4gICAgICAgIC50aGVuKGNoZWNraXRlbURhdGEgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdjaGVja2l0ZW1EYXRhJywgY2hlY2tpdGVtRGF0YSk7XG4gICAgICAgICAgdGhpcy5jaGVja2l0ZW1EYXRhID0gY2hlY2tpdGVtRGF0YTtcbiAgICAgICAgICB0aGlzLnRpdGxlID0gY2hlY2tpdGVtRGF0YS5mdWxsX25hbWUgfHwgY2hlY2tpdGVtRGF0YS5uYW1lO1xuXG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpcy5tb2R1bGUgPT09ICdzcGVjaWFsLWluc3BlY3QnIHx8XG4gICAgICAgICAgICB0aGlzLm1vZHVsZSA9PT0gJ2luc3BlY3QnIHx8XG4gICAgICAgICAgICB0aGlzLm1vZHVsZSA9PT0gJ2ZseS1pbnNwZWN0JyB8fFxuICAgICAgICAgICAgdGhpcy5tb2R1bGUgPT09ICdtYXRlcmlhbCdcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGNoZWNraXRlbURhdGEuY29udGVudCA9IGNoZWNraXRlbURhdGEuZ3VpZGVsaW5lIHx8IGNoZWNraXRlbURhdGEuY29udGVudDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsZXQgY29udGVudCA9IGNoZWNraXRlbURhdGEuY29udGVudCA/IGNoZWNraXRlbURhdGEuY29udGVudC50cmltKCkgOiAnJztcbiAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC88XFwvcD48cD4vZ20sICdcXG4nKTtcbiAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC88cD4vZ20sICcnKTtcbiAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC88XFwvcD4vZ20sICcnKTtcbiAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC88YnI+L2dtLCAnJyk7XG4gICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPGJyIFxcLz4vZ20sICcnKTtcblxuICAgICAgICAgIC8vIOW8uuWItuWbvueJh+aNouihjOaYvuekulxuICAgICAgICAgIGlmICgvKDxpbWdbXlxcPl0qPikvZ20udGVzdChjb250ZW50KSkge1xuICAgICAgICAgICAgbGV0IGNvbkFyciA9IGNvbnRlbnQuc3BsaXQoLyg8aW1nW15cXD5dKj4pL2dtKTsgLy8g5Lul5Zu+54mH5p2l5YiH5Ymy5a2X56ym5LiyXG4gICAgICAgICAgICBjb25BcnIgPSBjb25BcnIuZmlsdGVyKHYgPT4gISF2KTtcbiAgICAgICAgICAgIGNvbkFyci5mb3JFYWNoKCh2LCBrKSA9PiB7XG4gICAgICAgICAgICAgIGlmICh2ICYmICEvXlxccypcXG4vLnRlc3QodikgJiYgayAmJiAhL1xcblxccyokLy50ZXN0KGNvbkFycltrIC0gMV0pKSB7XG4gICAgICAgICAgICAgICAgLy8g5aaC5p6c5LiN5piv5Lul5o2i6KGM56ym5byA5aS077yM5YiZ5Yqg5LiK5o2i6KGM56ymXG4gICAgICAgICAgICAgICAgY29uQXJyW2tdID0gJ1xcbicgKyB2O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbkFyci5qb2luKCcnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsZXQgY29udGVudEFyciA9IGNvbnRlbnQgPyBjb250ZW50LnNwbGl0KCdcXG4nKSA6IFtdO1xuXG4gICAgICAgICAgdGhpcy5jb250ZW50ID0gXy5tYXAoY29udGVudEFyciwgKHZhbCwgY29udGVudEluZGV4KSA9PiB7XG4gICAgICAgICAgICB2YXIgY29udGVudEl0ZW07XG4gICAgICAgICAgICBpZiAoLzxpbWcoW1xcc1xcU10qKT4vZ20udGVzdCh2YWwpKSB7XG4gICAgICAgICAgICAgIGxldCBpbWdTcmMgPSB2YWwuc3BsaXQoL1xcc3NyYz1cIihbXlwiXSopXCIvZ20pWzFdO1xuXG4gICAgICAgICAgICAgIC8vIOacgOe7iOaYvuekuuWbvueJh+eUqOeahCBzcmNcbiAgICAgICAgICAgICAgbGV0IHJlc1NyYyA9ICcnO1xuICAgICAgICAgICAgICAvLyDmmK/lkKbmnInmmL7npLrnmoTlm77niYdcbiAgICAgICAgICAgICAgbGV0IHJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgLy8g5Zu+54mH55qE54q25oCB77yacGVuZGluZ++8iOi/m+ihjOS4re+8ieOAgWZ1bGZpbGxlZO+8iOW3suaIkOWKn++8ieWSjHJlamVjdGVk77yI5bey5aSx6LSl77yJXG4gICAgICAgICAgICAgIGxldCBzdGF0dXMgPSAncGVuZGluZyc7XG4gICAgICAgICAgICAgIC8vIOWbvueJh2lkXG4gICAgICAgICAgICAgIGxldCBpZCA9IGltZ1NyY1xuICAgICAgICAgICAgICAgID8gaW1nU3JjLm1hdGNoKC9bXFx3fC1dezM2fS9nbSlbMF1cbiAgICAgICAgICAgICAgICA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgJy0nICsgY29udGVudEluZGV4O1xuXG4gICAgICAgICAgICAgIGNvbnRlbnRJdGVtID0ge1xuICAgICAgICAgICAgICAgIGlzSW1nOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNyYzogcmVzU3JjLCAvLyDmnIDnu4jmmL7npLrlm77niYdcbiAgICAgICAgICAgICAgICB1cmw6IGltZ1NyYywgLy8g5a2Y5pS+5Zu+54mH55qE5Y6f5Zu+77yM5LiA6Iis5oOF5Ya15LiL5pivaHR0cHPnmoTlm77niYfvvIzkuI3ov4fnprvnur/mqKHlvI/kuIvvvIzmmL7npLrmnKzlnLDlm77niYdcbiAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgcmVhZHk6IHJlYWR5LFxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29udGVudEl0ZW0gPSB7IGlzSW1nOiBmYWxzZSwgdmFsOiB2YWwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb250ZW50SXRlbTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLmRvd25sb2FkSW1hZ2UoKTsgLy8g5LiL6L295Zu+54mHXG4gICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAkbG9nLmxvZyhlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiDlhbPpl63lvLnnqpdcbiAgICAgKi9cbiAgICBjbG9zZVBvcHVwKCkge1xuICAgICAgdGhpcy52YWx1ZSA9IGZhbHNlO1xuICAgICAgdGhpcy5zaG93ID0gZmFsc2U7XG4gICAgICB0aGlzLiRlbWl0KCdjbG9zZScpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiDmoLnmja5pdGVt6L+U5Zue55qEc3RhdHVz77yM6L+U5Zue55u45bqU55qE5Zu+54mHXG4gICAgICogcGVuZGluZ++8iOi/m+ihjOS4re+8ieOAgWZ1bGZpbGxlZO+8iOW3suaIkOWKn++8ieWSjHJlamVjdGVk77yI5bey5aSx6LSl77yJXG4gICAgICog5byA5Y+R546v5aKD6L+U5ZueaHR0cHPnmoTlm77niYdcbiAgICAgKi9cbiAgICBnZXRUaHVtYm5haWwoaXRlbSkge1xuICAgICAgaWYgKGl0ZW0uc3RhdHVzID09PSAncGVuZGluZycpIHtcbiAgICAgICAgcmV0dXJuIEltYWdlU2VydmljZS5JTUFHRV9MT0FESU5HO1xuICAgICAgfSBlbHNlIGlmIChpdGVtLnN0YXR1cyA9PT0gJ3JlamVjdGVkJykge1xuICAgICAgICByZXR1cm4gSW1hZ2VTZXJ2aWNlLklNQUdFX1JFTE9BRDtcbiAgICAgIH0gZWxzZSBpZiAoQVBQX0VOViA9PT0gJ2RldicpIHtcbiAgICAgICAgLy8g5byA5Y+R546v5aKD77yM5LiN6K+75Y+W5pys5Zyw5paH5Lu277yIdGVtcO+8iVxuICAgICAgICByZXR1cm4gaXRlbS51cmw7XG4gICAgICB9IGVsc2UgaWYgKGl0ZW0uc3RhdHVzID09PSAnZnVsZmlsbGVkJykge1xuICAgICAgICByZXR1cm4gaXRlbS5zcmM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkbG9nLmxvZygn5qOA5p+l5oyH5byVLeaYvuekuuWbvueJh++8micsIGl0ZW0pO1xuICAgICAgICByZXR1cm4gSW1hZ2VTZXJ2aWNlLklNQUdFX1BMQUNFSE9MRDtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICog5Zu+54mH5Yqg6L295aSx6LSl55qE5aSE55CGXG4gICAgICog5oC75pyJ5Lqb5Zu+54mH5rKh5pyJ5Yqe5rOV5pi+56S66L+Y5piv5oCO5LmI5ru077yM57uZ5LuW5LiA5Liq6buY6K6k5Zu+54mH5pi+56S677yM5LiN6KaB5Ye6546w6Zeu6aKYXG4gICAgICovXG4gICAgaW1nRXJyb3IoaXRlbSwgaW5kZXgpIHtcbiAgICAgICRsb2cuZXJyb3IoJ+ajgOafpeaMh+W8lS3liqDovb3lm77niYflh7rnjrDplJnor6/vvJonLCBpdGVtKTtcbiAgICAgIGxldCBvYmogPSB7IC4uLml0ZW0gfTtcbiAgICAgIG9iai5zdGF0dXMgPSAncmVqZWN0ZWQnO1xuICAgICAgdGhpcy4kc2V0KHRoaXMuY29udGVudCwgaW5kZXgsIG9iaik7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIOS4i+i9veWbvueJh1xuICAgICAqIDLjgIFJbWFnZVNlcnZpY2UuaXNOZWVkRG93bmxvYWQg5Yik5pat5Zu+54mH5piv5ZCm6ZyA6KaB5LiL6L29XG4gICAgICogM+OAgUltYWdlU2VydmljZS5kb3dubG9hZCDmoLnmja7lm77niYfnmoTot6/lvoTkuIvovb3nm7jlupTnmoTlm77niYdcbiAgICAgKiA044CBSW1hZ2VTZXJ2aWNlLmdldFBhdGhGcm9tVXJsIOi/lOWbnuacrOWcsOeahOWbvueJh1xuICAgICAqIDXjgIFJbWFnZVNlcnZpY2UuZml4VXJsIOe7meWbvueJh+a3u+WKoOWJjee8gFxuICAgICAqL1xuICAgIGRvd25sb2FkSW1hZ2UoaXRlbSkge1xuICAgICAgLy8g5aaC5p6c5Lyg5YWl5Y+C5pWw77yM5YiZ5Y+q5Yqg6L295b2T5YmN55qE5Y+C5pWwXG4gICAgICBpdGVtID0gaXRlbSA/IFtpdGVtXSA6IHRoaXMuaW1hZ2VMaXN0KCk7XG5cbiAgICAgIC8vIOWIpOaWreaYr+WQpuaciee9kVxuICAgICAgXy5lYWNoKGl0ZW0sIHJlcyA9PiB7XG4gICAgICAgIGxldCBvYmogPSB7IC4uLnJlcyB9OyAvLyDojrflj5blr7nosaFcbiAgICAgICAgbGV0IGluZGV4ID0gXy5tYXAodGhpcy5jb250ZW50LCByZXMgPT4gcmVzLmlkKS5pbmRleE9mKHJlcy5pZCk7IC8vIOiOt+WPluaVsOe7hOS4reeahOe0ouW8lVxuXG4gICAgICAgIEltYWdlU2VydmljZS5pc05lZWREb3dubG9hZChyZXMudXJsKS50aGVuKGlzTmVlZCA9PiB7XG4gICAgICAgICAgaWYgKGlzTmVlZCkge1xuICAgICAgICAgICAgSW1hZ2VTZXJ2aWNlLmRvd25sb2FkKHJlcy51cmwpXG4gICAgICAgICAgICAgIC50aGVuKGltYWdlID0+IHtcbiAgICAgICAgICAgICAgICBvYmouc3RhdHVzID0gJ2Z1bGZpbGxlZCc7XG4gICAgICAgICAgICAgICAgb2JqLnNyYyA9IEltYWdlU2VydmljZS5maXhVcmwoaW1hZ2UpO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNldCh0aGlzLmNvbnRlbnQsIGluZGV4LCBvYmopO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICRsb2cuZXJyb3IoJ+ajgOafpeaMh+W8lS3kuIvovb3lm77niYfvvJonLCBlcnJvcik7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmouc3RhdHVzID0gJ2Z1bGZpbGxlZCc7XG4gICAgICAgICAgICBvYmouc3JjID0gSW1hZ2VTZXJ2aWNlLmZpeFVybChJbWFnZVNlcnZpY2UuZ2V0UGF0aEZyb21VcmwocmVzLnVybCkpO1xuICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuY29udGVudCwgaW5kZXgsIG9iaik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDov5Tlm57mnInlm77niYfnmoTmlbDnu4RcbiAgICBpbWFnZUxpc3QoKSB7XG4gICAgICByZXR1cm4gXy5maWx0ZXIodGhpcy5jb250ZW50LCByZXMgPT4gcmVzLmlzSW1nKTtcbiAgICB9LFxuXG4gICAgLy8g54K55Ye75Zu+54mH5LqL5Lu2XG4gICAgaW1nQ2xpY2soaXRlbSkge1xuICAgICAgLy8g5qC55o2u54q25oCB5pi+56S677yM5LiN5ZCM5pWI5p6cXG4gICAgICBpZiAoaXRlbS5zdGF0dXMgPT09ICdwZW5kaW5nJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOWKoOi9veS4reeahOS4jeaJp+ihjFxuICAgICAgfSBlbHNlIGlmIChpdGVtLnN0YXR1cyA9PT0gJ3JlamVjdGVkJykge1xuICAgICAgICB0aGlzLmRvd25sb2FkSW1hZ2UoaXRlbSk7XG4gICAgICAgICRsb2cubG9nKCfmo4Dmn6XmjIflvJUt54K55Ye76YeN5paw5Yqg6L29LemHjeaWsOS4i+i9veWbvueJh++8micsIGl0ZW0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOWKoOi9veS4reeahOS4jeaJp+ihjFxuICAgICAgfVxuXG4gICAgICBsZXQgaW1hZ2VMaXN0ID0gdGhpcy5pbWFnZUxpc3QoKTsgLy8g6I635Y+W5pyJ5Zu+54mH55qE5pWw57uEXG4gICAgICBsZXQgaW5kZXggPSBfLm1hcChpbWFnZUxpc3QsIHJlcyA9PiByZXMuaWQpLmluZGV4T2YoaXRlbS5pZCk7IC8vIOiOt+WPlumAieaLqeeahOWbvueJh+eahOWcqCBpbWFnZUxpc3TkuK3nmoTntKLlvJVcbiAgICAgIGltYWdlTGlzdCA9IF8ubWFwKGltYWdlTGlzdCwgcmVzID0+IHRoaXMuZ2V0VGh1bWJuYWlsKHJlcykpOyAvLyDov5Tlm57nm7jlupTnmoTlm77niYflnLDlnYBcbiAgICAgIHBsdWdpbkFwaS5vcGVuSW1hZ2VCcm93c2VyKGltYWdlTGlzdCwgaW5kZXgpOyAvLyDmn6XnnIvlpKflm75cbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uY29udGVudC1ub3QtZW1wdHkgL2RlZXAvIC5sYXlvdXQtY29udGVudCB7XG4gIGRpc3BsYXk6IGF1dG87XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XG59XG4uY2hlY2stZ3VpZGUtZGV0YWlsLWhkIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIHBhZGRpbmc6IDI1cHggMzBweCA1cHggMDtcbn1cbi5jaGVjay1ndWlkZS1kZXRhaWwtdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiAjMTExO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xufVxuLmNoZWNrLWd1aWRlLWRldGFpbC1pbmZvIHtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICM4YzhjOGM7XG59XG4uY2hlY2stZ3VpZGUtZGV0YWlsLWNvbnRlbnQge1xuICBwYWRkaW5nOiAzMHB4O1xuICBsaW5lLWhlaWdodDogMzBweDtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgbWluLWhlaWdodDogMWVtO1xufVxuLmNoZWNrLWd1aWRlLWRldGFpbC1jb250ZW50IGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi5jaGVjay1ndWlkZS1kZXRhaWwtY29udGVudCAuaW1nLW5vdC1yZWFkeSB7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IGF1dG87XG59XG4uZXJyb3Ige1xuICBtYXgtd2lkdGg6IDUwJTtcbn1cbjwvc3R5bGU+XG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7cmVmOlwiY2hlY2stZ3VpZGUtYnRuXCIsc3RhdGljQ2xhc3M6XCJoZWFkZXItYnRuXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5vcGVuQ2hlY2tHdWlkZSgpfX19LFtfYygnaWNvbicse2F0dHJzOntcIm5hbWVcIjpcIm5hdi1pbmZvXCJ9fSldLDEpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbGlzdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2xpc3QudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTc0MTAyYzA1JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2xpc3QudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9saXN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9saXN0LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTc0MTAyYzA1Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjc0MTAyYzA1XCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3RyYW5zaXRpb24nLHthdHRyczp7XCJuYW1lXCI6XCJzbGlkZS1yaWdodFwifX0sWyhfdm0uc2hvdyk/X2MoJ3BhZ2UtY29udGVudCcse2F0dHJzOntcIm1vZGVcIjpcImRpYWxvZ1wiLFwidGl0bGVcIjpcIuajgOafpeaMh+W8lVwiLFwib24tY2xvc2VcIjpfdm0uY2xvc2VQb3B1cH19LFsoIV92bS5pc0xvYWRpbmcgJiYgX3ZtLmxpc3REYXRhLmxlbmd0aCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicGFnZS1zY3JvbGxcIn0sX3ZtLl9sKChfdm0ubGlzdERhdGEpLGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX2MoJ2Rpdicse2tleTprZXl9LFtfYygnaXRlbScse2F0dHJzOntcImJvcmRlclwiOlwiYm90dG9tXCIsXCJpY29uLXJpZ2h0XCI6aXRlbS5zdWJpdGVtICYmIGl0ZW0uc3ViaXRlbS5sZW5ndGggPyAoaXRlbS5pc09wZW4gPyAnYXJyb3ctdXAnIDogJ2Fycm93LWRvd24nKSA6ICdhcnJvdy1yaWdodCd9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uY2xpY2tJdGVtKGl0ZW0pfX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgZnctYiBjb2xvci1ibHVlIG9uZS1saW5lXCJ9LFtfdm0uX3YoX3ZtLl9zKGl0ZW0uaXRlbV9uYW1lKSldKV0pLChpdGVtLmlzT3Blbik/X3ZtLl9sKChpdGVtLnN1Yml0ZW0pLGZ1bmN0aW9uKHN1Yml0ZW0sa2V5Mil7cmV0dXJuIF9jKCdkaXYnLHtrZXk6a2V5MixzdGF0aWNDbGFzczpcInN1Ymxpc3RcIn0sW19jKCdpdGVtJyx7c3RhdGljQ2xhc3M6XCJwbDBcIixhdHRyczp7XCJib3JkZXJcIjpcImJvdHRvbVwiLFwiaWNvbi1yaWdodFwiOnN1Yml0ZW0uc3ViaXRlbSAmJiBzdWJpdGVtLnN1Yml0ZW0ubGVuZ3RoID8gKHN1Yml0ZW0uaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJykgOiAnYXJyb3ctcmlnaHQnfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNsaWNrSXRlbShzdWJpdGVtKX19fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IGNoZWNraXRlbS1saXN0LW5hbWVcIn0sW192bS5fdihfdm0uX3Moc3ViaXRlbS5pdGVtX25hbWUpKV0pXSksKHN1Yml0ZW0uaXNPcGVuKT9fdm0uX2woKHN1Yml0ZW0uc3ViaXRlbSksZnVuY3Rpb24oc3ViaXRlbUEsa2V5Myl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6a2V5MyxzdGF0aWNDbGFzczpcInN1Ymxpc3RcIn0sW19jKCdpdGVtJyx7c3RhdGljQ2xhc3M6XCJwbDBcIixhdHRyczp7XCJib3JkZXJcIjpcImJvdHRvbVwiLFwiaWNvbi1yaWdodFwiOnN1Yml0ZW1BLnN1Yml0ZW0gJiYgc3ViaXRlbUEuc3ViaXRlbS5sZW5ndGggPyAoc3ViaXRlbUEuaXNPcGVuID8gJ2Fycm93LXVwJyA6ICdhcnJvdy1kb3duJykgOiAnYXJyb3ctcmlnaHQnfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNsaWNrSXRlbShzdWJpdGVtQSl9fX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tdGV4dCBjaGVja2l0ZW0tbGlzdC1uYW1lXCJ9LFtfdm0uX3YoX3ZtLl9zKHN1Yml0ZW1BLml0ZW1fbmFtZSkpXSldKSwoc3ViaXRlbUEuaXNPcGVuKT9fdm0uX2woKHN1Yml0ZW1BLnN1Yml0ZW0pLGZ1bmN0aW9uKHN1Yml0ZW1CLGtleTQpe3JldHVybiBfYygnZGl2Jyx7a2V5OmtleTQsc3RhdGljQ2xhc3M6XCJzdWJsaXN0XCJ9LFtfYygnaXRlbScse3N0YXRpY0NsYXNzOlwicGwwXCIsYXR0cnM6e1wiYm9yZGVyXCI6XCJib3R0b21cIixcImljb24tcmlnaHRcIjpzdWJpdGVtQi5zdWJpdGVtICYmIHN1Yml0ZW1CLnN1Yml0ZW0ubGVuZ3RoID8gKHN1Yml0ZW1CLmlzT3BlbiA/ICdhcnJvdy11cCcgOiAnYXJyb3ctZG93bicpIDogJ2Fycm93LXJpZ2h0J30sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jbGlja0l0ZW0oc3ViaXRlbUIpfX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLXRleHQgY2hlY2tpdGVtLWxpc3QtbmFtZVwifSxbX3ZtLl92KF92bS5fcyhzdWJpdGVtQi5pdGVtX25hbWUpKV0pXSldLDEpfSk6X3ZtLl9lKCldLDIpfSk6X3ZtLl9lKCldLDIpfSk6X3ZtLl9lKCldLDIpfSkpOl92bS5fZSgpLF9jKCdsb2FkaW5nLXN0YXR1cycse2F0dHJzOntcImlzLWxvYWRpbmdcIjpfdm0uaXNMb2FkaW5nLFwiaXMtZW1wdHlcIjohX3ZtLmxpc3REYXRhLmxlbmd0aCxcImVtcHR5LXRleHRcIjpcIuayoeacieajgOafpemhuVwifX0pXSwxKTpfdm0uX2UoKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBWdWUgZnJvbSAndnVlJztcbmltcG9ydCBkaWFsb2cgZnJvbSAnLi9saXN0LnZ1ZSc7XG5cbmxldCBpbnN0YW5jZSA9IGZhbHNlO1xuXG5pZiAoIWluc3RhbmNlKSB7XG4gIGxldCBEaWFsb2dDb21wb25lbnQgPSBWdWUuZXh0ZW5kKGRpYWxvZyk7XG4gIGluc3RhbmNlID0gbmV3IERpYWxvZ0NvbXBvbmVudCh7XG4gICAgZWw6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICB9KTtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnN0YW5jZS4kZWwpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnN0YW5jZTtcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2RldGFpbC1kcm9wLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGV0YWlsLWRyb3AudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9kZXRhaWwtZHJvcC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmNhYzg4NjQmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZGV0YWlsLWRyb3AudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9kZXRhaWwtZHJvcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZGV0YWlsLWRyb3AudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MmNhYzg4NjQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMmNhYzg4NjRcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiAoX3ZtLnNob3cpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1haW5cIixzdHlsZTooeyB0b3A6IF92bS5jb250ZW50VG9wICsgJ3B4JyB9KX0sW19jKCdpJyx7c3RhdGljQ2xhc3M6XCJhcnJvd1wifSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY29udGVudFwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0ICE9PSAkZXZlbnQuY3VycmVudFRhcmdldCl7IHJldHVybiBudWxsOyB9cmV0dXJuIF92bS5jbG9zZVBvcHVwKCRldmVudCl9fX0sW19jKCd0cmFuc2l0aW9uJyx7YXR0cnM6e1wibmFtZVwiOlwic2xpZGUtZG93blwifSxvbjp7XCJlbnRlclwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmlzT3BlbmluZyA9IHRydWV9LFwiYWZ0ZXItZW50ZXJcIjpmdW5jdGlvbigkZXZlbnQpe192bS5pc09wZW5pbmcgPSBmYWxzZX0sXCJsZWF2ZVwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmlzQ2xvc2luZyA9IHRydWV9LFwiYWZ0ZXItbGVhdmVcIjpfdm0uYWZ0ZXJDbG9zZX19LFsoX3ZtLnNob3dMaXN0KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJib3hcIixzdHlsZTooeydoZWlnaHQnOiBfdm0ubGlzdEhlaWdodCArICdweCd9KX0sX3ZtLl9sKChfdm0uZGF0YSksZnVuY3Rpb24oaXRlbSxpdGVtSW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5Oml0ZW1JbmRleCxjbGFzczp7J2JvcmRlci1ib3R0b20nOiBfdm0uZGF0YS5sZW5ndGggPiAxLCAnYm94LXNpbmdsZSc6IF92bS5kYXRhLmxlbmd0aCA9PT0gMX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkZXRhaWwtaGRcIixjbGFzczp7J2JvcmRlci1ib3R0b20nOiBfdm0uZGF0YS5sZW5ndGggPD0gMSwgJ2RldGFpbC1oZC1zaW5nbGUnOiBfdm0uZGF0YS5sZW5ndGggPD0gMX0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS50b2dnbGVJdGVtKGl0ZW0pfX19LFsoX3ZtLmRhdGEubGVuZ3RoID4gMSk/X2MoJ2knLHtjbGFzczp7J2RldGFpbC1hcnJvdy1yaWdodCc6ICFpdGVtLmlzT3BlbiwgJ2RldGFpbC1hcnJvdy1kb3duJzogaXRlbS5pc09wZW59fSk6X3ZtLl9lKCksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGV0YWlsLXRpdGxlXCJ9LFtfdm0uX3YoX3ZtLl9zKGl0ZW0ubmFtZSkpXSldKSwoX3ZtLmRhdGEubGVuZ3RoIDw9IDEgfHwgaXRlbS5pc09wZW4pP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRldGFpbC1iZFwiLGNsYXNzOnsnZGV0YWlsLWJkLXNpbmdsZSc6IF92bS5kYXRhLmxlbmd0aCA8PSAxfX0sW192bS5fbCgoaXRlbS50ZXh0QXJyKSxmdW5jdGlvbih0ZXh0LHRleHRJbmRleCl7cmV0dXJuIF9jKCdwJyx7a2V5OnRleHRJbmRleCxzdGF0aWNDbGFzczpcInRleHQtbGluZVwifSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICBcIitfdm0uX3ModGV4dCkrXCJcXG4gICAgICAgICAgICBcIildKX0pLF9jKCdpdGVtLWltZy1saXN0Jyx7YXR0cnM6e1wiZWRpdGFibGVkXCI6ZmFsc2V9LG1vZGVsOnt2YWx1ZTooaXRlbS5jb250ZW50SW1hZ2UpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChpdGVtLCBcImNvbnRlbnRJbWFnZVwiLCAkJHYpfSxleHByZXNzaW9uOlwiaXRlbS5jb250ZW50SW1hZ2VcIn19KSxfYygnbG9hZGluZy1zdGF0dXMnLHthdHRyczp7XCJpcy1lbXB0eVwiOiFpdGVtLnRleHRBcnIubGVuZ3RoICYmICFpdGVtLmNvbnRlbnRJbWFnZS5sZW5ndGgsXCJlbXB0eS10ZXh0XCI6XCJQQ+err+acquiuvue9ruajgOafpeaMh+W8lVwifX0pXSwyKTpfdm0uX2UoKV0pfSkpOl92bS5fZSgpXSldLDEpXSk6X3ZtLl9lKCl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBWdWUgZnJvbSAndnVlJztcbmltcG9ydCBkaWFsb2cgZnJvbSAnLi9kZXRhaWwtZHJvcC52dWUnO1xuXG5sZXQgaW5zdGFuY2UgPSBmYWxzZTtcblxuaWYgKCFpbnN0YW5jZSkge1xuICBsZXQgRGlhbG9nQ29tcG9uZW50ID0gVnVlLmV4dGVuZChkaWFsb2cpO1xuICBpbnN0YW5jZSA9IG5ldyBEaWFsb2dDb21wb25lbnQoe1xuICAgIGVsOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgfSk7XG5cbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnN0YW5jZS4kZWwpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnN0YW5jZTtcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiaGVhZGVyLWJ0blwiIHJlZj1cImNoZWNrLWd1aWRlLWJ0blwiIEBjbGljaz1cIm9wZW5DaGVja0d1aWRlKClcIj5cbiAgICA8aWNvbiBuYW1lPVwibmF2LWluZm9cIiAvPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG4vLyBcbmltcG9ydCAkcSBmcm9tICdAc3RhdGljL2xpYi9wcm9taXNlJztcbmltcG9ydCBDb21tb25DaGVja0l0ZW1TZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vY2hlY2staXRlbS1zZXJ2aWNlLmpzJztcbmltcG9ydCBDaGVja0d1aWRlTGlzdCBmcm9tICdAc3JjL3dpZGdldC9jaGVjay1ndWlkZS9saXN0LmpzJztcbmltcG9ydCBDaGVja0d1aWRlRGV0YWlsIGZyb20gJ0BzcmMvd2lkZ2V0L2NoZWNrLWd1aWRlL2RldGFpbC5qcyc7XG5pbXBvcnQgQ2hlY2tHdWlkZURldGFpbERyb3AgZnJvbSAnQHNyYy93aWRnZXQvY2hlY2stZ3VpZGUvZGV0YWlsLWRyb3AuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdDaGVja0d1aWRlJyxcbiAgY29tcG9uZW50czoge30sXG4gIHByb3BzOiB7XG4gICAgLy8g5qih5Z2XY29kZe+8jOm7mOiupOepuu+8jOWPliBwcm9ibGVtX2NsYXNzIOihqOWGheWuueOAgidzcGVjaWFsLWluc3BlY3QnIOS4k+mhueW3oeajgFxuICAgIG1vZHVsZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICAvLyDlvLnnqpfnmoTmlrnlvI/vvIxkcm9wKOS4i+aLieahhikgfCBwYWdlKOmhtemdouW9ouW8j+eahOW8ueeqlylcbiAgICBtb2RlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAncGFnZScsXG4gICAgfSxcbiAgICBpdGVtSWQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgaXRlbUlkczoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAgICB9LFxuICAgIGJhdGNoSWQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnLFxuICAgIH0sXG4gICAgc2VjdGlvbklkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnJyxcbiAgICB9LFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4gW10sXG4gICAgfSxcbiAgICBvcHRpb25zUHJvbWlzZToge1xuICAgICAgdHlwZTogRnVuY3Rpb24sXG4gICAgICBkZWZhdWx0OiAoKSA9PiB7fSxcbiAgICB9LFxuICAgIGJlZm9yZU9wZW46IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogKCkgPT4ge30sXG4gICAgfSxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICB9O1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLy8g5omT5byA5qOA5p+l5oyH5byV5by556qXXG4gICAgb3BlbkNoZWNrR3VpZGUoKSB7XG4gICAgICBsZXQgYmVmb3JlT3BlbiA9IHRoaXMuYmVmb3JlT3BlbiAmJiB0aGlzLmJlZm9yZU9wZW4oKTtcblxuICAgICAgaWYgKCEoYmVmb3JlT3BlbiBpbnN0YW5jZW9mIFByb21pc2UpKSB7XG4gICAgICAgIGJlZm9yZU9wZW4gPSBQcm9taXNlLnJlc29sdmUoYmVmb3JlT3Blbik7XG4gICAgICB9XG5cbiAgICAgIGJlZm9yZU9wZW4udGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzICE9PSBmYWxzZSkge1xuICAgICAgICAgIGlmICh0aGlzLm1vZGUgPT09ICdkcm9wJykge1xuICAgICAgICAgICAgLy8g5LiL5ouJ5qih5byPXG4gICAgICAgICAgICBDaGVja0d1aWRlRGV0YWlsRHJvcC5vcGVuUG9wdXAoe1xuICAgICAgICAgICAgICBpdGVtSWRzOiB0aGlzLml0ZW1JZHMsXG4gICAgICAgICAgICAgIGVsOiB0aGlzLiRyZWZzWydjaGVjay1ndWlkZS1idG4nXSxcbiAgICAgICAgICAgICAgb3B0aW9uczogdGhpcy5vcHRpb25zLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxldCBwcm9taXNlO1xuXG4gICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmnInlrZDpm4ZcbiAgICAgICAgICAgIGlmICh0aGlzLm1vZHVsZSA9PT0gJ3RlbXBsZXQtcGxhbicpIHtcbiAgICAgICAgICAgICAgcHJvbWlzZSA9ICRxLndoZW4oZmFsc2UpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLml0ZW1JZCAmJiB0aGlzLnNlY3Rpb25JZCkge1xuICAgICAgICAgICAgICBwcm9taXNlID0gQ29tbW9uQ2hlY2tJdGVtU2VydmljZS5oYXNDaGlsZFNlY3Rpb25DaGVja0l0ZW0oXG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtSWQsXG4gICAgICAgICAgICAgICAgdGhpcy5zZWN0aW9uSWRcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5pdGVtSWQpIHtcbiAgICAgICAgICAgICAgcHJvbWlzZSA9IENvbW1vbkNoZWNrSXRlbVNlcnZpY2UuaGFzQ2hpbGRDaGVja0l0ZW0odGhpcy5pdGVtSWQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcHJvbWlzZSA9ICRxLndoZW4odHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHByb21pc2UudGhlbihoYXNDaGlsZCA9PiB7XG4gICAgICAgICAgICAgIGlmIChoYXNDaGlsZCkge1xuICAgICAgICAgICAgICAgIC8vIOacieWtkOmbhu+8jOaJk+W8gOajgOafpemhueWIl+ihqO+8iOagkeW9ou+8ieW8ueeql1xuICAgICAgICAgICAgICAgIENoZWNrR3VpZGVMaXN0Lm9wZW5Qb3B1cCh7XG4gICAgICAgICAgICAgICAgICBtb2R1bGU6IHRoaXMubW9kdWxlLFxuICAgICAgICAgICAgICAgICAgaXRlbUlkOiB0aGlzLml0ZW1JZCxcbiAgICAgICAgICAgICAgICAgIGJhdGNoSWQ6IHRoaXMuYmF0Y2hJZCxcbiAgICAgICAgICAgICAgICAgIHNlY3Rpb25JZDogdGhpcy5zZWN0aW9uSWQsXG4gICAgICAgICAgICAgICAgICBvcHRpb25zOiB0aGlzLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8g5rKh5pyJ5a2Q6ZuG77yM5omT5byA5qOA5p+l5oyH5byV6K+m5oOF5by556qXXG4gICAgICAgICAgICAgICAgQ2hlY2tHdWlkZURldGFpbC5vcGVuUG9wdXAoe1xuICAgICAgICAgICAgICAgICAgaXRlbUlkOiB0aGlzLml0ZW1JZCxcbiAgICAgICAgICAgICAgICAgIG1vZHVsZTogdGhpcy5tb2R1bGUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE0MDlhN2FjJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kaWFsb2cudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZTQ2NTMxOWMmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLm51bWJlci1rZXlib2FyZC1jb25bZGF0YS12LTYzMzdmNDI4XXtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7Ym90dG9tOjA7d2lkdGg6MTAwJTtwYWRkaW5nOjRweCAwO2JhY2tncm91bmQtY29sb3I6I2ZhZmFmYTtib3gtc2hhZG93OjAgLTRweCA4cHggMCByZ2JhKDAsMCwwLC4wOCk7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfS56amFwcCAuaW9zLWJlemVsLWxlc3NbZGF0YS12LTYzMzdmNDI4XXtwYWRkaW5nLWJvdHRvbTozNHB4fS56amFwcCAua2V5Ym9hcmQtcm93W2RhdGEtdi02MzM3ZjQyOF0sLnpqYXBwIC5rZXlzLXJvd1tkYXRhLXYtNjMzN2Y0Mjhde2Rpc3BsYXk6ZmxleH0uemphcHAgLnJvdy1zcGFuLTFbZGF0YS12LTYzMzdmNDI4XXtmbGV4OjF9LnpqYXBwIC5yb3ctc3Bhbi0yW2RhdGEtdi02MzM3ZjQyOF17ZmxleDoyfS56amFwcCAucm93LXNwYW4tM1tkYXRhLXYtNjMzN2Y0Mjhde2ZsZXg6M30uemphcHAgLmtleXNbZGF0YS12LTYzMzdmNDI4XXtmbGV4OjE7aGVpZ2h0OjQ4cHg7bGluZS1oZWlnaHQ6NDhweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MThweDttYXJnaW46NHB4O2JvcmRlcjoxcHggc29saWQgcmdiYSg1LDUsNSwuMDcpO2JvcmRlci1yYWRpdXM6OHB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtwYWRkaW5nOjB9LnpqYXBwIC5rZXlzLW5leHRbZGF0YS12LTYzMzdmNDI4XSwuemphcHAgLmtleXMtcHJldltkYXRhLXYtNjMzN2Y0Mjhde2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM0Mjc1ZTh9LnpqYXBwIC5rZXlzLW9rW2RhdGEtdi02MzM3ZjQyOF17Zm9udC1zaXplOjE0cHg7Y29sb3I6Izk5OX0uemphcHAgLmtleXMtZGVsZXRlW2RhdGEtdi02MzM3ZjQyOF17Y29sb3I6Izk5OX0uemphcHAgLmljb25bZGF0YS12LTYzMzdmNDI4XXtwb2ludGVyLWV2ZW50czpub25lfS56amFwcCAuaWNvbi1rZXlib2FyZC1jbG9zZVtkYXRhLXYtNjMzN2Y0Mjhde2ZvbnQtc2l6ZToyMHB4O2NvbG9yOiM5OTl9LnpqYXBwIC5pY29uLWtleWJvYXJkLWRlbGV0ZVtkYXRhLXYtNjMzN2Y0Mjhde3ZlcnRpY2FsLWFsaWduOnRvcDttYXJnaW4tdG9wOjEzcHg7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzMzM30uemphcHAgLmFjdGl2aW5nW2RhdGEtdi02MzM3ZjQyOF17YmFja2dyb3VuZC1jb2xvcjojZWNlY2VjfS56amFwcCAuZGlzYWJsZWRbZGF0YS12LTYzMzdmNDI4XXtjb2xvcjojOTk5fS56amFwcCAuY29sW2RhdGEtdi02MzM3ZjQyOF17ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6MTA0cHg7bGluZS1oZWlnaHQ6MzZweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJzdGF0dXMtdG90YWwtYmFyXCJ9LF92bS5fbCgoX3ZtLmRhdGEpLGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX2MoJ2Rpdicse2tleTprZXksc3RhdGljQ2xhc3M6XCJ0b3RhbC1pdGVtXCJ9LFsoX3ZtLnN0YXR1cyA9PT0gJ2RlZmF1bHQnKT9bX2MoJ3AnLFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwidG90YWwtc3RhdHVzXCIsY2xhc3M6J3RvdGFsLXN0YXR1cy0nICsgaXRlbS5jb2xvcn0sW192bS5fdihcIlxcbiAgICAgICAgICBcIitfdm0uX3MoaXRlbS5zdGF0dXMpK1wiXFxuICAgICAgICBcIildKV0pLF9jKCdwJyxbX3ZtLl92KFwiXFxuICAgICAgICBcIitfdm0uX3MoaXRlbS50b3RhbCkrXCJcXG4gICAgICBcIildKV06X3ZtLl9lKCksKF92bS5zdGF0dXMgPT09ICdsYXNlci1zY2FubmluZycpP1tfYygncCcsW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJ0b3RhbC1zdGF0dXNcIixjbGFzczooXCJ0b3RhbC1zdGF0dXMtXCIgKyAoaXRlbS5jb2xvcikpfSxbX3ZtLl92KFwiXFxuICAgICAgICAgIFwiK192bS5fcyhpdGVtLnN0YXR1cykrXCJcXG4gICAgICAgIFwiKV0pLF92bS5fdihcIlxcbiAgICAgICAgKFwiK192bS5fcyhpdGVtLnRvdGFsKStcIilcXG4gICAgICBcIildKV06X3ZtLl9lKCldLDIpfSkpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInN0YXR1cy10b3RhbC1iYXJcIj5cbiAgICA8ZGl2XG4gICAgICB2LWZvcj1cIihpdGVtLCBrZXkpIGluIGRhdGFcIlxuICAgICAgOmtleT1cImtleVwiXG4gICAgICBjbGFzcz1cInRvdGFsLWl0ZW1cIlxuICAgID5cbiAgICAgIDwhLS0g6buY6K6kIC0tPlxuICAgICAgPHRlbXBsYXRlIHYtaWY9XCJzdGF0dXMgPT09ICdkZWZhdWx0J1wiPlxuICAgICAgICA8cD5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgY2xhc3M9XCJ0b3RhbC1zdGF0dXNcIlxuICAgICAgICAgICAgOmNsYXNzPVwiJ3RvdGFsLXN0YXR1cy0nICsgaXRlbS5jb2xvclwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3tpdGVtLnN0YXR1c319XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L3A+XG4gICAgICAgIDxwPlxuICAgICAgICAgIHt7aXRlbS50b3RhbH19XG4gICAgICAgIDwvcD5cbiAgICAgIDwvdGVtcGxhdGU+XG5cbiAgICAgIDwhLS0g5Zyodi1mb3Llvqrnjq/kuIvkvb/nlKjlhbflkI3mj5Lmp73vvIzkvJrlh7rnjrAkc2xvdHPkuI3og73lrprkvY3mmK/lkKbmnInkvb/nlKjmj5Lmp70gLS0+XG4gICAgICA8IS0tIOWboOatpOaUueS4uueUqHByb3Bz5Lyg5YC8IC0tPlxuICAgICAgPCEtLSDmraTkuLrmv4DlhYnmiavmj4/lrp7mtYsgLS0+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cInN0YXR1cyA9PT0gJ2xhc2VyLXNjYW5uaW5nJ1wiPlxuICAgICAgICA8cD5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgY2xhc3M9XCJ0b3RhbC1zdGF0dXNcIlxuICAgICAgICAgICAgOmNsYXNzPVwiYHRvdGFsLXN0YXR1cy0ke2l0ZW0uY29sb3J9YFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3tpdGVtLnN0YXR1c319XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICh7e2l0ZW0udG90YWx9fSlcbiAgICAgICAgPC9wPlxuICAgICAgPC90ZW1wbGF0ZT5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnU3RhdHVzVG90YWxCYXInLFxuICBwcm9wczoge1xuICAgIC8vIOaYvuekuueahOaVsOaNrlxuICAgIGRhdGE6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9LFxuICAgIH0sXG5cbiAgICAvLyDkuI3lkIznmoTlsZXnpLrnsbvlnotcbiAgICBzdGF0dXM6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdkZWZhdWx0JyxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLnN0YXR1cy10b3RhbC1iYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi50b3RhbC1pdGVtIHtcbiAgZmxleDogMTtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIHBhZGRpbmc6IDEwcHggNXB4IDA7XG4gIGNvbG9yOiAjMTExO1xuICBmb250LXNpemU6IDEycHg7XG59XG4udG90YWwtc3RhdHVzIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgJjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMTBweDtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgbWFyZ2luOiA1cHggNXB4IDAgMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgfVxufVxuLnRvdGFsLXN0YXR1cy1vcmFuZ2U6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvck9yYW5nZTtcbn1cbi50b3RhbC1zdGF0dXMtb3JhbmdlMjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmOGUyNDtcbn1cbi50b3RhbC1zdGF0dXMtd2hpdGUyOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGNkY2RjO1xufVxuLnRvdGFsLXN0YXR1cy1yZWQ6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvclJlZDtcbn1cbi50b3RhbC1zdGF0dXMtZ3JlZW46OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvckdyZWVuO1xufVxuLnRvdGFsLXN0YXR1cy13aGl0ZTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi50b3RhbC1zdGF0dXMtd2hpdGUtYm9yZGVyOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3I7XG59XG4udG90YWwtc3RhdHVzLWJsdWU6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0MTc0ZTk7XG59XG4udG90YWwtc3RhdHVzLXB1cnBsZS1ib3JkZXI6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM3OTZiZmI7XG59XG4udG90YWwtc3RhdHVzLWdyZWVuLWJvcmRlcjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yR3JlZW47XG59XG4uc3RhdHVzLXRvdGFsLWJhci4tYWJzLXRvcC1yaWdodCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMTNweDtcbiAgLnRvdGFsLWl0ZW0ge1xuICAgIHBhZGRpbmctbGVmdDogM3B4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgfVxuICAudG90YWwtc3RhdHVzOjpiZWZvcmUge1xuICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICB9XG59XG48L3N0eWxlPlxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YmUwN2NkOWMmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YmUwN2NkOWMmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiYmUwN2NkOWNcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kcmF3aW5nLTMudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MzJjNjE3MzYmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIyMjExOGI5YlwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZGlhbG9nLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTFkYjQ4OWFlJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YmUwN2NkOWMmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiLy8gaW1wb3J0ICRxIGZyb20gJ0BzdGF0aWMvbGliL3Byb21pc2UnO1xuLy8gaW1wb3J0IFV0aWxzIGZyb20gJ0BzcmMvdXRpbHMvaW5kZXgnO1xuLy8gaW1wb3J0IGNvbnRleHQgZnJvbSAnQHNyYy9mcmFtZXdvcmsvY29udGV4dCc7XG5pbXBvcnQgUG9wdXAgZnJvbSAnQHNyYy91dGlscy9wb3B1cCc7XG5pbXBvcnQgTWVhc3VyZVNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL21lYXN1cmUvY29tbW9uLXNlcnZpY2UnO1xuaW1wb3J0IGxvY2FsU3RvcmFnZSBmcm9tICdAc3JjL2ZyYW1ld29yay9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IGxvY2FsU3RvcmFnZUtleXMgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbG9jYWxTdG9yYWdlLmtleXMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdNZWFzdXJlRGV0YWlsVGVtcGxhdGVNaXhpbicsXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzU2F2aW5nOiBmYWxzZSxcbiAgICAgIGhhc1BvaW50OiBmYWxzZSxcbiAgICAgIGhhc0V4Y2VlZDogZmFsc2UsXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBhbGxvd01lYXN1cmVSZWluc3BlY3QoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubWVhc3VyZS5hbGxvd01lYXN1cmVSZWluc3BlY3Q7XG4gICAgfSxcbiAgICBkcmF3aW5nVXJsKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgKHRoaXMuZGV0YWlsICYmXG4gICAgICAgICAgdGhpcy5kZXRhaWwuZHJhd2luZ19maWxlICYmXG4gICAgICAgICAgdGhpcy5kZXRhaWwuZHJhd2luZ19maWxlWzBdICYmXG4gICAgICAgICAgdGhpcy5kZXRhaWwuZHJhd2luZ19maWxlWzBdLnVybCkgfHxcbiAgICAgICAgJydcbiAgICAgICk7XG4gICAgfSxcblxuICAgIC8vIOaYr+WQpui+k+WFpeWujOaIkFxuICAgIGlucHV0Q29tcGxldGUoKSB7XG4gICAgICByZXR1cm4gIV8uc29tZSh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSB8fCBbXSwgcHJvYmxlbSA9PiB7XG4gICAgICAgIHJldHVybiBfLnNvbWUocHJvYmxlbS5yZWFsaXR5VmFsLCBwb2ludCA9PiB7XG4gICAgICAgICAgcmV0dXJuICFwb2ludC5pc0ZpY3QgJiYgIXRoaXMuaGFzVmFsKHBvaW50LnZhbCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8qIGhhc1BvaW50KCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgdGhpcy5kZXRhaWwgJiZcbiAgICAgICAgdGhpcy5kZXRhaWwucHJvYmxlbURhdGEgJiZcbiAgICAgICAgXy5zb21lKHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhIHx8IFtdLCBwcm9ibGVtID0+IHtcbiAgICAgICAgICByZXR1cm4gXy5zb21lKHByb2JsZW0ucmVhbGl0eVZhbCwgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICFwb2ludC5pc0ZpY3QgJiYgdGhpcy5oYXNWYWwocG9pbnQudmFsKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSxcblxuICAgIC8vIGhhc0V4Y2VlZFxuICAgIGhhc0V4Y2VlZCgpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIHRoaXMuZGV0YWlsICYmXG4gICAgICAgIHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhICYmXG4gICAgICAgIF8uc29tZSh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSB8fCBbXSwgcHJvYmxlbSA9PiB7XG4gICAgICAgICAgcmV0dXJuIF8uc29tZShwcm9ibGVtLnJlYWxpdHlWYWwsIHBvaW50ID0+IHtcbiAgICAgICAgICAgIHJldHVybiAhcG9pbnQuaXNGaWN0ICYmIHBvaW50LmlzRXhjZWVkO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9LCAqL1xuXG4gICAgLy8g5piv5ZCm5pyJ5pa95bel5Y2V5L2NXG4gICAgaGFzQ29udHJhY3RvcigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIHRoaXMuZGV0YWlsICYmXG4gICAgICAgIHRoaXMuZGV0YWlsLnByb2JsZW1EYXRhICYmXG4gICAgICAgIF8uc29tZSh0aGlzLmRldGFpbC5wcm9ibGVtRGF0YSB8fCBbXSwgcHJvYmxlbSA9PiB7XG4gICAgICAgICAgcmV0dXJuICFfLmlzRW1wdHkocHJvYmxlbS5jb250cmFjdG9yKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSxcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBoYXNFeGNlZWQodikge1xuICAgICAgaWYgKCF2KSB7XG4gICAgICAgIGlmICh0aGlzLmRldGFpbC5lbnRyeV9yZXF1aXJlbWVudHMgPT09IDMpIHtcbiAgICAgICAgICB0aGlzLmRldGFpbC5uZWVkUmVwYWlyID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgICdkZXRhaWwucHJvYmxlbURhdGEnOiB7XG4gICAgICBoYW5kbGVyKHYpIHtcbiAgICAgICAgaWYgKF8uaXNFbXB0eSh2KSkge1xuICAgICAgICAgIHRoaXMuaGFzUG9pbnQgPSBmYWxzZTtcbiAgICAgICAgICB0aGlzLmhhc0V4Y2VlZCA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5oYXNQb2ludCA9IF8uc29tZSh2LCBwcm9ibGVtID0+IHtcbiAgICAgICAgICByZXR1cm4gXy5zb21lKHByb2JsZW0ucmVhbGl0eVZhbCwgcG9pbnQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICFwb2ludC5pc0ZpY3QgJiYgdGhpcy5oYXNWYWwocG9pbnQudmFsKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuaGFzRXhjZWVkID0gXy5zb21lKHYsIHByb2JsZW0gPT4ge1xuICAgICAgICAgIHJldHVybiBfLnNvbWUocHJvYmxlbS5yZWFsaXR5VmFsLCBwb2ludCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gIXBvaW50LmlzRmljdCAmJiBwb2ludC5pc0V4Y2VlZDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgZGVlcDogdHJ1ZSxcbiAgICAgIGltbWVkaWF0ZTogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLy8g5Yik5pat5piv5ZCm5pyJ5YC8XG4gICAgaGFzVmFsKHZhbCkge1xuICAgICAgaWYgKHZhbCA9PT0gJycgfHwgdmFsID09PSB1bmRlZmluZWQgfHwgdmFsID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBjaGFuZ2VJdGVtcyhpdGVtcywgaWRzKSB7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2VJdGVtcycsIGl0ZW1zLCBpZHMpO1xuICAgIH0sXG4gICAgY2hhbmdlUGxhY2UocGxhY2UpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZVBsYWNlJywgcGxhY2UpO1xuICAgIH0sXG5cbiAgICBzYXZlUHJvYmxlbSgpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbDtcbiAgICAgIGlmIChkZXRhaWwubW9kZSA9PT0gJ3JlZWRpdCcgfHwgZGV0YWlsLm1vZGUgPT09ICdyZWRvJykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICB9XG5cbiAgICAgIF8uZWFjaChkZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICBwcm9ibGVtLnJlYWxpdHlWYWwgPSBbLi4ucHJvYmxlbS5yZWFsaXR5VmFsXTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gTWVhc3VyZVNlcnZpY2Uuc2F2ZShkZXRhaWwpXG4gICAgICAgIC50aGVuKGRldGFpbElkID0+IHtcbiAgICAgICAgICBpZiAoZGV0YWlsSWQpIHtcbiAgICAgICAgICAgIHRoaXMuJHNldCh0aGlzLmRldGFpbCwgJ2lkJywgZGV0YWlsSWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICBQb3B1cC5hbGVydChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgc2F2ZVByb2JsZW1BbmRUaXAoKSB7XG4gICAgICB0aGlzLnNhdmVQcm9ibGVtKCkudGhlbigoKSA9PiB7XG4gICAgICAgIFBvcHVwLmFsZXJ0KCfkv53lrZjmiJDlip8nKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBkZWxQcm9ibGVtKCkge1xuICAgICAgcmV0dXJuIE1lYXN1cmVTZXJ2aWNlLmRlbGV0ZURyYWZ0UHJvYmxlbSh0aGlzLmRldGFpbClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHRoaXMuJHJvdXRlci5nbygtMSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICBQb3B1cC5hbGVydChlcnJvciwgMjAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBjaGFuZ2VDQygpIHtcbiAgICAgIGxldCBkZXRhaWwgPSB0aGlzLmRldGFpbDtcbiAgICAgIGlmIChkZXRhaWwubW9kZSA9PT0gJ2VkaXQnKSB7XG4gICAgICAgIHRoaXMuc2F2ZVByb2JsZW0oZGV0YWlsKTtcbiAgICAgIH0gZWxzZSBpZiAoZGV0YWlsLm1vZGUgPT09ICd2aWV3Jykge1xuICAgICAgICBNZWFzdXJlU2VydmljZS5jaGFuZ2VDQyhkZXRhaWwsIHRydWUpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIC8vIOW+heWKnui/m+adpeaXoOazleWIt+aWsFxuICAgICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyDlho3mtYvkuIDmrKFcbiAgICBzZXRSZWRvKCkge1xuICAgICAgbGV0IHNlY3Rpb25Db250cmFjdG9ycyA9XG4gICAgICAgICAgbG9jYWxTdG9yYWdlLmdldFVzZXJPYmplY3QobG9jYWxTdG9yYWdlS2V5cy5NRUFTVVJFX1NFQ1RJT05fQ09OVFJBQ1RPUikgfHwge30sXG4gICAgICAgIHNlY3Rpb25JZCA9IHRoaXMubW9kZWwucGxhY2Uuc2VjdGlvbi5pZDtcblxuICAgICAgbGV0IGNvbnRyYWN0b3JJZCA9IHNlY3Rpb25Db250cmFjdG9yc1tzZWN0aW9uSWRdO1xuICAgICAgbGV0IGRlZmFsdXRDb250cmFjdG9yID0gY29udHJhY3RvcklkICYmIF8uZmluZCh0aGlzLm1vZGVsLmNvbnRyYWN0b3JzLCB7IGlkOiBjb250cmFjdG9ySWQgfSk7XG5cbiAgICAgIHRoaXMuZGV0YWlsLm1vZGUgPSAncmVkbyc7XG5cbiAgICAgIHRoaXMuZGV0YWlsLmltZyA9IFtdO1xuICAgICAgdGhpcy5kZXRhaWwucmVtYXJrID0gJyc7XG4gICAgICB0aGlzLmRldGFpbC5jYyA9IFtdO1xuXG4gICAgICBfLmVhY2godGhpcy5kZXRhaWwucHJvYmxlbURhdGEsIHByb2JsZW0gPT4ge1xuICAgICAgICAvLyDmuIXpmaTlrp7mtYvlgLxcbiAgICAgICAgaWYgKHByb2JsZW0uZW50cnlfcmVxdWlyZW1lbnRzID09PSAyKSB7XG4gICAgICAgICAgcHJvYmxlbS5yZWFsaXR5VmFsID0gXy5tYXAocHJvYmxlbS5yZWFsaXR5VmFsLCBwb2ludCA9PiB7XG4gICAgICAgICAgICBsZXQgbmV3UG9pbnQgPSB7IHZhbDogJycsIHNldFZhbDogJycsIGFyZWE6IHBvaW50LmFyZWEgfTtcblxuICAgICAgICAgICAgaWYgKHBvaW50LmxhYmVsKSB7XG4gICAgICAgICAgICAgIG5ld1BvaW50LmxhYmVsID0gcG9pbnQubGFiZWw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBuZXdQb2ludDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9ibGVtLnJlYWxpdHlWYWwgPSBbXTtcbiAgICAgICAgICBwcm9ibGVtLnBvaW50TnVtID0gJyc7XG4gICAgICAgICAgcHJvYmxlbS5wYXNzcmF0ZSA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDmuIXpmaTmlr3lt6XljZXkvY1cbiAgICAgICAgcHJvYmxlbS5jb250cmFjdG9yID0gZGVmYWx1dENvbnRyYWN0b3IgfHwge307XG4gICAgICB9KTtcblxuICAgICAgaWYgKHRoaXMuZGV0YWlsLmlkID09PSB0aGlzLiRzdG9yZS5zdGF0ZS5tZWFzdXJlLnJlcGFpckRhdGEuaWQpIHtcbiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdtZWFzdXJlL1NFVF9SRVBBSVJfREFUQScsIF8uY2xvbmUodGhpcy5kZXRhaWwpKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5kZXRhaWwuaWQgPT09IHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuc3VwZXJ2aXNpb25EYXRhLmlkKSB7XG4gICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnbWVhc3VyZS9TRVRfU1VQRVJWSVNJT05fREFUQScsIF8uY2xvbmUodGhpcy5kZXRhaWwpKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5kZXRhaWwuaWQgPT09IHRoaXMuJHN0b3JlLnN0YXRlLm1lYXN1cmUuY29uc3RydWN0RGF0YS5pZCkge1xuICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ21lYXN1cmUvU0VUX0NPTlNUUlVDVF9EQVRBJywgXy5jbG9uZSh0aGlzLmRldGFpbCkpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLiRyZWZzWydzY3JvbGxlciddLnNjcm9sbFRvcCA9IDA7XG4gICAgfSxcbiAgfSxcbn07XG4iLCIvKlxuICog5a6e5rWL5a6e6YeP5b2V5YWlXG4gKiBoYXNCb3VuY2luZyDmmK/lkKbmnInlvLnmgKfmlYjmnpzvvIzpu5jorqQgdHJ1ZVxuICovXG5pbXBvcnQgTWVhc3VyZURldGFpbE1vZGVsIGZyb20gJ0BzcmMvbW9kYWwvbWVhc3VyZS9kZXRhaWwtbW9kZWwuanMnO1xuaW1wb3J0IG1lYXN1cmVQb2ludHNIYW5kbGUgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi9tZWFzdXJlLXBvaW50cy1oYW5kbGUnO1xuaW1wb3J0IHsgZ2V0RHJhd1NlcnZlciB9IGZyb20gJy4vbW9kdWxlLW1uZyc7XG5pbXBvcnQgeyBmb3JtYXRGbG9hdFZhbERpc3BsYXkgfSBmcm9tICdAc3JjL2ZpbHRlcnMvbGltaXQtdG8nO1xuXG52YXIgX3NlbGY7XG5cbi8qIOS4iuS4gOasoei+k+WFpeeahOiuvuiuoeWAvFxuICog5qC85byP77yaIHvmo4Dmn6XpoblJRDogeyd2YWwnOiAnJyAsICd2YWwt6auYJzogJyd9IH1cbiAqIOS4gOiIrOaooeW8j+eUqCB2YWwg5L2c5Li6IGtlee+8jOmrmOWuve+8jOW8gOmXtOi/m+a3seS8muaOpeS4gOS4qiAnLemrmCdcbiAqL1xudmFyIHByZXZTZXRWYWwgPSB7fTtcblxuZnVuY3Rpb24gTWVhc3VyZURyYXcoKSB7XG4gIHZhciBfY2FudmFzLFxuICAgIF9jdHgsXG4gICAgX2ltZyxcbiAgICBfcGl4ZWxSYXRpbyxcbiAgICBfeCA9IDAsXG4gICAgX3kgPSAwLFxuICAgIF94UmFuZ2UsXG4gICAgX3lSYW5nZSwgLy8g5ouW5ou955qE5pe25YCZIHggeSDlhYHorrjnmoTojIPlm7RcbiAgICBfc2NhbGUgPSAxO1xuXG4gIHZhciBfcGluY2hSYXRpbyxcbiAgICBfc2NhbGVCZXR3ZWVuID0gW10sXG4gICAgX2lzUGluY2gsXG4gICAgX3RvdWNoU3RhcnQsXG4gICAgcGluY2hDZW50ZXIgPSB7fTtcblxuICB2YXIgaXNNb3ZpbmcsXG4gICAgbW92ZVRpbWVyLFxuICAgIG1vdmVEZXN0ID0geyB4OiBudWxsLCB5OiBudWxsIH07IC8vIG1vdmVUbyDnp7vliqjnmoTnu4jngrnvvIzlvZPmnInlpJrkuKptb3Zl5Lu75Yqh55qE5pe25YCZ77yM6KaB5ZCI5bm25aSE55CGXG5cbiAgLy8g5a6a5LmJ6aKc6ImyXG4gIHZhciBleGNlZWRDb2xvciA9ICcjZmYzYzQ2JyxcbiAgICBxdWFsaWZpZWRDb2xvciA9ICcjMGJjNjY2JyxcbiAgICBsaWdodENvbG9yID0gJyM0Mjc1ZTgnO1xuXG4gIC8vIOS4uumrmOS6rueCuea3u+WKoOazoue6ue+8jOiMg+WbtOWAvCAwIH4gMe+8jOihqOekuuWNiuW+hO+8miBwb2ludFJhZGl1cyB+IHBvaW50UmFkaXVzICsgMTDvvIzpgI/mmI7luqbvvJogMC41IH4gMFxuICB2YXIgbGlnaHRSaXBwbGUgPSAwLFxuICAgIGxpZ2h0UmlwcGxlVGltZXIsXG4gICAgbGlnaHRSaXBwbGVUaW1lcyA9IDAsIC8vIOazoue6uemXqueDgeeahOasoeaVsFxuICAgIGxpZ2h0UmlwcGxlVGltZXNNYXggPSAyOyAvLyDmnIDlpKfpl6rng4HmrKHmlbDorr7lrprkuLoy5qyhXG5cbiAgLy8g6K2m5ZGK5pWI5p6cXG4gIHZhciBoYXNXYXJuaW5nLFxuICAgIHdhcm5pbmdSaXBwbGUgPSAwLFxuICAgIHdhcm5pbmdSaXBwbGVUaW1lcjtcblxuICAvLyDnirbmgIFcbiAgdmFyIHByb2JsZW1Nb2RlID0gbnVsbCxcbiAgICBpc0VkaXRNb2RlID0gbnVsbCxcbiAgICBpc0lucHV0U2hvdyA9IGZhbHNlLFxuICAgIGlzS2V5Ym9hcmRTaG93ID0gZmFsc2UsXG4gICAgaW5wdXRMZW5ndGggPSAwLCAvLyDovpPlhaXmoYbnmoTmlbDph49cbiAgICBoYXNPcGVyYUJ0biA9IGZhbHNlLFxuICAgIGhhc1ByZXZJbnB1dCxcbiAgICBoYXNOZXh0SW5wdXQ7XG5cbiAgdmFyIGtleWJvYXJkVGV4dCA9IFtcbiAgICAnMScsXG4gICAgJzInLFxuICAgICczJyxcbiAgICAn5Yig6ZmkJyxcbiAgICAnNCcsXG4gICAgJzUnLFxuICAgICc2JyxcbiAgICAnLScsXG4gICAgJzcnLFxuICAgICc4JyxcbiAgICAnOScsXG4gICAgJy4nLFxuICAgICfkuIrkuIDpobknLFxuICAgICcwJyxcbiAgICAn5LiL5LiA6aG5JyxcbiAgICAn5YWz6ZetJyxcbiAgXTtcblxuICB2YXIgcGFzc3JhdGVNb2RlLCBjb21ib0xlbmd0aDtcblxuICB2YXIgZHJhd1BvaW50SW5kZXggPSBudWxsLCAvLyDlvZPliY3moIforrDnmoQgaW5kZXhcbiAgICBsaWdodElucHV0SW5kZXggPSBudWxsOyAvLyDpq5jkuq7nmoTovpPlhaXmoYYgaW5kZXhcblxuICB2YXIga2V5Ym9yYWRBY3Rpb25EYXRhID0ge307IC8vIOmUruebmOeCueWHu+eKtuaAgVxuXG4gIHZhciB0aGF0ID0gdGhpcztcblxuICAvLyDlrprkuYnpu5jorqTlgLxcbiAgdmFyIF9kZWZhdWx0cyA9IHtcbiAgICAvLyDlrp7mtYvlrp7ph4/mlbDmja5cbiAgICBkYXRhOiBbXSxcblxuICAgIC8vIOWuvVxuICAgIHdpZHRoOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsXG5cbiAgICAvLyDpq5hcbiAgICBoZWlnaHQ6IDAsXG5cbiAgICAvLyDlm77niYflnLDlnYBcbiAgICBzcmM6ICcnLFxuXG4gICAgLy8g54K55Ye75Zyo5Yy65Z+f5YaF55qE5Zue6LCDXG4gICAgY2xpY2tDYWxsYmFjazogZnVuY3Rpb24oKSB7fSxcblxuICAgIC8vIOeCueeahOWNiuW+hFxuICAgIHBvaW50UmFkaXVzOiA4LFxuXG4gICAgLy8g5a6e6ZmF5LiK54K55Y+v54K55Ye755qE6IyD5Zu05piv55S75Ye655qE54K555qE5Yeg5YCNXG4gICAgcG9pbnRSYXRpbzogMixcblxuICAgIC8vIOaJi+aMh+S7juaOpeinpuWIsOaKrOi1t++8jOWkmuWwkeaXtumXtOmXtOmalOWGheiupOS4uuaYr+eCueWHu++8jOiAjOS4jeaYr+aLluWKqOaIluWFtuWug1xuICAgIGNsaWNrRGVsYXk6IDUwMCxcbiAgfTtcblxuICBsZXQgZHJhd1NlcnZlcjtcbiAgZnVuY3Rpb24gZ2V0UGl4ZWxSYXRpbyhjb250ZXh0KSB7XG4gICAgdmFyIGJhY2tpbmdTdG9yZSA9XG4gICAgICBjb250ZXh0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICBjb250ZXh0Lm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgIGNvbnRleHQubXNCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICBjb250ZXh0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgIDE7XG5cbiAgICByZXR1cm4gKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIC8gYmFja2luZ1N0b3JlO1xuICB9XG5cbiAgZnVuY3Rpb24gd2luVG9DYW52YXMoeCwgeSkge1xuICAgIHZhciBwb3MgPSBfY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IHggLSBwb3MubGVmdCAqIChfY2FudmFzLndpZHRoIC8gKHBvcy53aWR0aCAqIF9waXhlbFJhdGlvKSksXG4gICAgICB5OiB5IC0gcG9zLnRvcCAqIChfY2FudmFzLmhlaWdodCAvIChwb3MuaGVpZ2h0ICogX3BpeGVsUmF0aW8pKSxcbiAgICB9O1xuICB9XG5cbiAgLy8g6K6h566X5bm26K6+572uY2FudmFz55qE5a696auY5ZKM5Zu+54mH57yp5pS+55qE5q+U5L6LXG4gIC8vIOiuoeeul+WbvueJh+eahOe8qeaUvuavlOS+i+WSjOWFgeiuuOe8qeaUvueahOavlOS+i+WMuumXtFxuICBmdW5jdGlvbiBfY2FsYygpIHtcbiAgICB2YXIgc2NhbGUsIHNjYWxlTWF4O1xuXG4gICAgaWYgKF9kZWZhdWx0cy53aWR0aCAvIF9pbWcud2lkdGggPCBfZGVmYXVsdHMuaGVpZ2h0IC8gX2ltZy5oZWlnaHQpIHtcbiAgICAgIC8vXG4gICAgICBzY2FsZSA9IF9kZWZhdWx0cy53aWR0aCAvIF9pbWcud2lkdGg7XG4gICAgICBfeCA9IDA7XG4gICAgICBfeSA9ICgoX2RlZmF1bHRzLmhlaWdodCAtIF9pbWcuaGVpZ2h0ICogc2NhbGUpIC8gMikgKiBfcGl4ZWxSYXRpbztcbiAgICB9IGVsc2Uge1xuICAgICAgc2NhbGUgPSBfZGVmYXVsdHMuaGVpZ2h0IC8gX2ltZy5oZWlnaHQ7XG4gICAgICBfeCA9ICgoX2RlZmF1bHRzLndpZHRoIC0gX2ltZy53aWR0aCAqIHNjYWxlKSAvIDIpICogX3BpeGVsUmF0aW87XG4gICAgICBfeSA9IDA7XG4gICAgfVxuXG4gICAgX3NjYWxlID0gc2NhbGUgKiBfcGl4ZWxSYXRpbztcbiAgICBzY2FsZU1heCA9IF9zY2FsZSA8IDAuMjUgPyAyIDogX3NjYWxlICogODtcblxuICAgIF9zY2FsZUJldHdlZW4gPSBbX3NjYWxlLCBzY2FsZU1heF07XG5cbiAgICBfeFJhbmdlID0gW194LCBfeF07XG4gICAgX3lSYW5nZSA9IFtfeSwgX3ldO1xuICB9XG5cbiAgLy8g57uY5Yi2XG4gIGZ1bmN0aW9uIF9kcmF3KCkge1xuICAgIC8vIOa4heepuueUu+W4g1xuICAgIF9jdHguY2xlYXJSZWN0KDAsIDAsIF9jYW52YXMud2lkdGgsIF9jYW52YXMuaGVpZ2h0KTtcblxuICAgIF9kcmF3SW1hZ2UoKTtcbiAgICBfZHJhd1BvaW50cygpO1xuXG4gICAgX2RyYXdJbnB1dFBvcHVwKCk7XG4gICAgX2RyYXdLZXlib3JhZCgpO1xuXG4gICAgLy8g6auY5Lqu54K555qE5rOi57q55pWI5p6cXG4gICAgaWYgKGRyYXdQb2ludEluZGV4ICE9PSBudWxsICYmIGxpZ2h0UmlwcGxlVGltZXMgPCBsaWdodFJpcHBsZVRpbWVzTWF4KSB7XG4gICAgICBjbGVhclRpbWVvdXQobGlnaHRSaXBwbGVUaW1lcik7XG5cbiAgICAgIGxpZ2h0UmlwcGxlVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBsaWdodFJpcHBsZSA9IGxpZ2h0UmlwcGxlICsgMC4wNztcbiAgICAgICAgaWYgKGxpZ2h0UmlwcGxlID49IDEpIHtcbiAgICAgICAgICBsaWdodFJpcHBsZSA9IDA7XG4gICAgICAgICAgbGlnaHRSaXBwbGVUaW1lcyA9IGxpZ2h0UmlwcGxlVGltZXMgKyAxO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpZ2h0UmlwcGxlVGltZXMgPj0gbGlnaHRSaXBwbGVUaW1lc01heCkge1xuICAgICAgICAgIGxpZ2h0UmlwcGxlID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsaWdodFJpcHBsZSA9IHBhcnNlRmxvYXQobGlnaHRSaXBwbGUudG9GaXhlZCgyKSk7XG4gICAgICAgIH1cblxuICAgICAgICBfZHJhdygpO1xuICAgICAgfSwgNDApO1xuICAgIH1cblxuICAgIC8vIOapmeiJsuitpuWRiuaViOaenCB3YXJuaW5nUmlwcGxlXG4gICAgaWYgKGhhc1dhcm5pbmcpIHtcbiAgICAgIGNsZWFyVGltZW91dCh3YXJuaW5nUmlwcGxlVGltZXIpO1xuXG4gICAgICB3YXJuaW5nUmlwcGxlVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICB3YXJuaW5nUmlwcGxlID0gd2FybmluZ1JpcHBsZSArIDAuMDc7XG4gICAgICAgIGlmICh3YXJuaW5nUmlwcGxlID49IDEpIHtcbiAgICAgICAgICB3YXJuaW5nUmlwcGxlID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHdhcm5pbmdSaXBwbGUgPSBwYXJzZUZsb2F0KHdhcm5pbmdSaXBwbGUudG9GaXhlZCgyKSk7XG5cbiAgICAgICAgX2RyYXcoKTtcbiAgICAgIH0sIDQwKTtcbiAgICB9XG4gIH1cblxuICAvLyDnu5jliLblm77niYdcbiAgZnVuY3Rpb24gX2RyYXdJbWFnZSgpIHtcbiAgICBfY3R4LmRyYXdJbWFnZShcbiAgICAgIF9pbWcsXG4gICAgICAwLFxuICAgICAgMCxcbiAgICAgIF9pbWcud2lkdGgsXG4gICAgICBfaW1nLmhlaWdodCxcbiAgICAgIF94LFxuICAgICAgX3ksXG4gICAgICBfaW1nLndpZHRoICogX3NjYWxlLFxuICAgICAgX2ltZy5oZWlnaHQgKiBfc2NhbGVcbiAgICApO1xuICB9XG5cbiAgZnVuY3Rpb24gX2RyYXdQb2ludHMocG9zKSB7XG4gICAgX2RlZmF1bHRzLnBvaW50cy5mb3JFYWNoKGZ1bmN0aW9uKHYsIGkpIHtcbiAgICAgIF9kcmF3UG9pbnQoXG4gICAgICAgICh2LnggKiBfc2NhbGUpIC8gX3BpeGVsUmF0aW8gKyBfeCAvIF9waXhlbFJhdGlvLFxuICAgICAgICAodi55ICogX3NjYWxlKSAvIF9waXhlbFJhdGlvICsgX3kgLyBfcGl4ZWxSYXRpbyxcbiAgICAgICAgX2RlZmF1bHRzLnBvaW50UmFkaXVzLFxuICAgICAgICBpLFxuICAgICAgICBwb3MsXG4gICAgICAgIGRyYXdQb2ludEluZGV4ID09PSBpXG4gICAgICAgICAgPyBsaWdodENvbG9yXG4gICAgICAgICAgOiB2LmNvbG9yIHx8ICh2LmlzUXVhbGlmaWVkID8gcXVhbGlmaWVkQ29sb3IgOiBleGNlZWRDb2xvciksXG4gICAgICAgIHZcbiAgICAgICk7XG5cbiAgICAgIHYuaW5kZXggPSBpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8g57uY5Yi25Y2V5Liq54K5XG4gIGZ1bmN0aW9uIF9kcmF3UG9pbnQoeCwgeSwgciwgaSwgcG9zLCBjb2xvciwgcG9pbnQpIHtcbiAgICBfY3R4LnNhdmUoKTtcblxuICAgIC8vIOmrmOS6rumXqueDgeaViOaenFxuICAgIGlmIChkcmF3UG9pbnRJbmRleCAhPT0gbnVsbCAmJiBkcmF3UG9pbnRJbmRleCA9PT0gaSkge1xuICAgICAgX2N0eC5iZWdpblBhdGgoKTtcbiAgICAgIF9jdHguZmlsbFN0eWxlID0gJ3JnYmEoNjYsIDExNywgMjMyLCAnICsgKDAuNiAqICgxIC0gbGlnaHRSaXBwbGUpICsgMC4xKSArICcpJztcbiAgICAgIF9jdHguYXJjKHgsIHksIHIgKiAoMSArIGxpZ2h0UmlwcGxlKSwgMCwgTWF0aC5QSSAqIDIsIGZhbHNlKTtcbiAgICAgIF9jdHguZmlsbCgpO1xuICAgIH1cblxuICAgIC8vIOapmeiJsuaPkOekuumXqueDgeaViOaenFxuICAgIGlmIChwb2ludC5pc1dhcm5pbmcgJiYgZHJhd1BvaW50SW5kZXggIT09IGkpIHtcbiAgICAgIF9jdHguYmVnaW5QYXRoKCk7XG4gICAgICBfY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDI1MiwgMTM5LCAxLCAnICsgKDAuNiAqICgxIC0gd2FybmluZ1JpcHBsZSkgKyAwLjEpICsgJyknO1xuICAgICAgX2N0eC5hcmMoeCwgeSwgciAqICgxICsgd2FybmluZ1JpcHBsZSksIDAsIE1hdGguUEkgKiAyLCBmYWxzZSk7XG4gICAgICBfY3R4LmZpbGwoKTtcbiAgICB9XG5cbiAgICBfY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgaWYgKHBvaW50LmlzV2FybmluZyAmJiBkcmF3UG9pbnRJbmRleCAhPT0gaSkge1xuICAgICAgX2N0eC5maWxsU3R5bGUgPSAnI2ZmNzQzOSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbG9yICYmIChfY3R4LmZpbGxTdHlsZSA9IGNvbG9yKTtcbiAgICB9XG5cbiAgICBfY3R4LmFyYyh4LCB5LCByLCAwLCBNYXRoLlBJICogMiwgZmFsc2UpO1xuICAgIC8vIF9jdHguZmlsbCgpO1xuXG4gICAgX2N0eC5nbG9iYWxBbHBoYSA9IDAuNjtcbiAgICBfY3R4LmZpbGwoKTtcblxuICAgIF9jdHguZ2xvYmFsQWxwaGEgPSAxO1xuICAgIGNvbG9yICYmIChfY3R4LnN0cm9rZVN0eWxlID0gY29sb3IpO1xuICAgIF9jdHgubGluZVdpZHRoID0gMTtcbiAgICBfY3R4LnN0cm9rZSgpO1xuICB9XG5cbiAgLy8g6I635Y+W6auY5Lqu54K5XG4gIGZ1bmN0aW9uIF9nZXRMaWdodFBvaW50KCkge1xuICAgIHZhciByZXN1bHQ7XG5cbiAgICBpZiAoZHJhd1BvaW50SW5kZXggPT09IG51bGwpIHtcbiAgICAgIHJlc3VsdCA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCA9IF9kZWZhdWx0cy5wb2ludHNbZHJhd1BvaW50SW5kZXhdO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQgfHwgbnVsbDtcbiAgfVxuXG4gIC8vIOe7mOWItui+k+WFpeahhlxuICBmdW5jdGlvbiBfZHJhd0lucHV0UG9wdXAoKSB7XG4gICAgdmFyIGxpZ2h0UG9pbnQgPSBfZ2V0TGlnaHRQb2ludCgpO1xuXG4gICAgLy8g6L6T5YWl5qGG5by556qX5bC65a+4XG4gICAgdmFyIHBTaXplID0gX2dldElucHV0UG9wdXBTaXplKCk7XG4gICAgdmFyIHB3ID0gcFNpemUudyxcbiAgICAgIHBoID0gcFNpemUuaCxcbiAgICAgIHByID0gNTtcblxuICAgIC8vIOW8ueeql+i1t+Wni+S9jee9ru+8iOW3puS4iuinku+8iVxuICAgIHZhciBpbnB1dFBvcHVwUG9zID0gX2dldElucHV0UG9wdXBQb3MoKTtcbiAgICB2YXIgeCA9IGlucHV0UG9wdXBQb3MueCxcbiAgICAgIHkgPSBpbnB1dFBvcHVwUG9zLnk7XG5cbiAgICBpZiAoIWxpZ2h0UG9pbnQgfHwgIWlzSW5wdXRTaG93KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8g57uY5Yi26IOM5pmvXG4gICAgX2N0eC5maWxsU3R5bGUgPSAncmdiYSgwLDAsMCwwLjgpJztcbiAgICBfY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgX2N0eC5hcmMoeCArIHByLCB5ICsgcHIsIHByLCBNYXRoLlBJLCBNYXRoLlBJICogMS41KTtcbiAgICBfY3R4LmxpbmVUbyhwdyArIHggLSBwciwgeSk7XG4gICAgX2N0eC5hcmMoeCArIHB3IC0gcHIsIHkgKyBwciwgcHIsIE1hdGguUEkgKiAxLjUsIDApO1xuICAgIF9jdHgubGluZVRvKHggKyBwdywgeSArIHBoIC0gcHIpO1xuICAgIF9jdHguYXJjKHggKyBwdyAtIHByLCB5ICsgcGggLSBwciwgcHIsIDAsIE1hdGguUEkgKiAwLjUpO1xuICAgIF9jdHgubGluZVRvKHggKyBwdyAvIDIgKyA1LCB5ICsgcGgpO1xuICAgIF9jdHgubGluZVRvKHggKyBwdyAvIDIsIHkgKyBwaCArIDUpO1xuICAgIF9jdHgubGluZVRvKHggKyBwdyAvIDIgLSA1LCB5ICsgcGgpO1xuICAgIF9jdHgubGluZVRvKHggKyBwciwgeSArIHBoKTtcbiAgICBfY3R4LmFyYyh4ICsgcHIsIHkgKyBwaCAtIHByLCBwciwgTWF0aC5QSSAqIDAuNSwgTWF0aC5QSSk7XG4gICAgX2N0eC5saW5lVG8oeCwgeSArIHByKTtcblxuICAgIF9jdHguY2xvc2VQYXRoKCk7XG4gICAgX2N0eC5maWxsKCk7XG5cbiAgICBpZiAoaXNFZGl0TW9kZSkge1xuICAgICAgLy8g57uY5Yi24oCc5Yig6Zmk4oCd5ZKM4oCc5L+d5a2Y4oCd5oyJ6ZKuXG4gICAgICBfY3R4LmxpbmVDYXAgPSAncm91bmQnO1xuICAgICAgX2N0eC5saW5lSm9pbiA9ICdyb3VuZCc7XG5cbiAgICAgIF9jdHguYmVnaW5QYXRoKCk7XG4gICAgICBfY3R4LmFyYyh4IC0gMjYsIHkgKyBwaCAvIDIsIDE2LCAwLCBNYXRoLlBJICogMik7XG4gICAgICBfY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgX2N0eC5maWxsKCk7XG4gICAgICBfY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgX2N0eC5zdHJva2VTdHlsZSA9ICcjZmYzZDNkJztcbiAgICAgIF9jdHgubGluZVdpZHRoID0gMjtcbiAgICAgIF9jdHgubW92ZVRvKHggLSAzNCwgeSArIHBoIC8gMik7XG4gICAgICBfY3R4LmxpbmVUbyh4IC0gMTgsIHkgKyBwaCAvIDIpO1xuICAgICAgX2N0eC5zdHJva2UoKTtcblxuICAgICAgX2N0eC5iZWdpblBhdGgoKTtcbiAgICAgIF9jdHguYXJjKHggKyBwdyArIDI2LCB5ICsgcGggLyAyLCAxNiwgMCwgTWF0aC5QSSAqIDIpO1xuICAgICAgX2N0eC5jbG9zZVBhdGgoKTtcbiAgICAgIF9jdHguZmlsbCgpO1xuICAgICAgX2N0eC5iZWdpblBhdGgoKTtcbiAgICAgIF9jdHguc3Ryb2tlU3R5bGUgPSAnIzBiYzY2Nic7XG4gICAgICBfY3R4LmxpbmVXaWR0aCA9IDI7XG4gICAgICBfY3R4Lm1vdmVUbyh4ICsgcHcgKyAxOCwgeSArIHBoIC8gMiAtIDEpO1xuICAgICAgX2N0eC5saW5lVG8oeCArIHB3ICsgMjQsIHkgKyBwaCAvIDIgKyA1KTtcbiAgICAgIF9jdHgubGluZVRvKHggKyBwdyArIDM1LCB5ICsgcGggLyAyIC0gNik7XG4gICAgICBfY3R4LnN0cm9rZSgpO1xuXG4gICAgICBfY3R4LmxpbmVDYXAgPSAnYnV0dCc7XG4gICAgICBfY3R4LmxpbmVKb2luID0gJ21pdGVyJztcbiAgICB9XG4gICAgX2RyYXdJbnB1dHMoeCwgeSk7XG4gIH1cblxuICAvLyDnu5jliLbovpPlhaXmoYZcbiAgLy8geCx5IOaYr+W8ueeql+eahOW3puS4iuinkuWdkOagh++8jOW8ueeql+eahOi+uei3neaYryA1XG4gIGZ1bmN0aW9uIF9kcmF3SW5wdXRzKHgsIHkpIHtcbiAgICAvKipcbiAgICAgKiB0b2RvIG1lYXN1cmUgZW5kXG4gICAgICog6LCD55So5pa55rOV5pu/5o2iIF9kcmF3SW5wdXRzXG4gICAgIHJldHVybiBkcmF3U2VydmVyLl9kcmF3SW5wdXRzKHgsIHksIGRyYXdQb2ludEluZGV4LCBsaWdodElucHV0SW5kZXgpO1xuICAgICAqICovXG4gICAgcmV0dXJuIGRyYXdTZXJ2ZXIuX2RyYXdJbnB1dHMoeCwgeSwgZHJhd1BvaW50SW5kZXgsIGxpZ2h0SW5wdXRJbmRleCk7XG5cbiAgICAvLyDovpPlhaXmoYblsLrlr7hcbiAgICB2YXIgaXcgPSA2OSxcbiAgICAgIGloID0gMzM7XG5cbiAgICB2YXIgYm9yZGVyQ29sb3IgPSAnI2I1YjViNScsXG4gICAgICBib3JkZXJMaWdodENvbG9yID0gaXNFZGl0TW9kZSA/ICcjZmZmZmZmJyA6IGJvcmRlckNvbG9yO1xuXG4gICAgdmFyIHBvaW50RGF0YTtcbiAgICAvLyDovpPlhaXmoYbnmoTmoIforrDngrlcbiAgICB2YXIgcG9pbnRzQXJyID0gW107XG4gICAgdmFyIGN1clBvaW50O1xuICAgIHZhciBwb2ludExhYmxlR3JvdXA7XG5cbiAgICB2YXIgbGlnaHRJbnB1dFJvdywgbGlnaHRJbnB1dENvbDtcblxuICAgIHggPSB4ICsgNSArIDAuNTtcbiAgICB5ID0geSArIDUgKyAwLjU7XG5cbiAgICBfY3R4LmxpbmVXaWR0aCA9IDE7XG4gICAgX2N0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICBfY3R4LmZvbnQgPSAnMTZweCAtYXBwbGUtc3lzdGVtLCBcIkhlbHZldGljYSBOZXVlXCIsIFJvYm90bywgXCJTZWdvZSBVSVwiLCBzYW5zLXNlcmlmJztcblxuICAgIGlmIChwYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgIC8vIOagh+WHhlxuICAgICAgXy5lYWNoKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhLCBmdW5jdGlvbihwcm9ibGVtLCBpbmRleCkge1xuICAgICAgICBfZHJhd0lucHV0KHtcbiAgICAgICAgICB4OiB4ICsgKGl3ICsgMTApICogaW5kZXgsXG4gICAgICAgICAgeTogeSxcbiAgICAgICAgICBib3JkZXJDb2xvcjogbGlnaHRJbnB1dEluZGV4ID09PSBpbmRleCA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICBsYWJlbDogX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGEubGVuZ3RoID4gMSA/IHByb2JsZW0uY2hlY2tJdGVtLm5hbWUgOiAn5a6e5rWL5YC8JyxcbiAgICAgICAgICB2YWw6IGhhc1ZhbChwcm9ibGVtLnJlYWxpdHlWYWxbZHJhd1BvaW50SW5kZXhdLnZhbClcbiAgICAgICAgICAgID8gcHJvYmxlbS5yZWFsaXR5VmFsW2RyYXdQb2ludEluZGV4XS52YWxcbiAgICAgICAgICAgIDogaXNFZGl0TW9kZVxuICAgICAgICAgICAgPyAnJ1xuICAgICAgICAgICAgOiAn5pyq5aGrJyxcbiAgICAgICAgICB2YWxDb2xvcjogaGFzVmFsKHByb2JsZW0ucmVhbGl0eVZhbFtkcmF3UG9pbnRJbmRleF0udmFsKVxuICAgICAgICAgICAgPyBwcm9ibGVtLnJlYWxpdHlWYWxbZHJhd1BvaW50SW5kZXhdLmlzRXhjZWVkXG4gICAgICAgICAgICAgID8gJyNmZjQ1NDUnXG4gICAgICAgICAgICAgIDogJyNmZmZmZmYnXG4gICAgICAgICAgICA6IGJvcmRlckNvbG9yLFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyDnu5jliLblhbPogZTmo4Dmn6XpobnnmoTov57mjqXnur9cbiAgICAgICAgaWYgKGluZGV4KSB7XG4gICAgICAgICAgX2N0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICBfY3R4LnN0cm9rZVN0eWxlID0gYm9yZGVyQ29sb3I7XG4gICAgICAgICAgX2N0eC5tb3ZlVG8oeCArIChpdyArIDEwKSAqIGluZGV4IC0gOS41LCB5ICsgaWggLyAyKTtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKGl3ICsgMTApICogaW5kZXggLSAwLjUsIHkgKyBpaCAvIDIpO1xuICAgICAgICAgIF9jdHguc3Ryb2tlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAyKSB7XG4gICAgICAvLyDmnoHlt67nrpfms5VcbiAgICAgIHBvaW50RGF0YSA9IF9kZWZhdWx0cy5wb2ludHNbZHJhd1BvaW50SW5kZXhdO1xuICAgICAgcG9pbnRzQXJyID0gXy5maWx0ZXIoX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbCwgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50RGF0YS5hcmVhO1xuICAgICAgfSk7XG5cbiAgICAgIF8uZWFjaChwb2ludHNBcnIsIGZ1bmN0aW9uKHBvaW50LCBpbmRleCkge1xuICAgICAgICB2YXIgcm93ID0gTWF0aC5mbG9vcigoaW5kZXggKiAyKSAvIDMpLFxuICAgICAgICAgIGNvbCA9IChpbmRleCAqIDIpICUgMztcbiAgICAgICAgX2RyYXdJbnB1dCh7XG4gICAgICAgICAgeDogeCArIGNvbCAqIGl3LFxuICAgICAgICAgIHk6IHkgKyByb3cgKiBpaCxcbiAgICAgICAgICBib3JkZXJDb2xvcjogbGlnaHRJbnB1dEluZGV4ID09PSBpbmRleCA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICBsYWJlbDogJ+Wunua1i+WAvCcsXG4gICAgICAgICAgdmFsOiBwb2ludC52YWwsXG4gICAgICAgICAgdmFsQ29sb3I6IHBvaW50LmlzRXhjZWVkID8gJyNmZjQ1NDUnIDogJyNmZmZmZmYnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogJ24nLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAzKSB7XG4gICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICAvLyDlrp7mtYvlgLxcbiAgICAgIF9kcmF3SW5wdXQoe1xuICAgICAgICB4OiB4LFxuICAgICAgICB5OiB5LFxuICAgICAgICBib3JkZXJDb2xvcjogbGlnaHRJbnB1dEluZGV4ID09PSAwID8gYm9yZGVyTGlnaHRDb2xvciA6IGJvcmRlckNvbG9yLFxuICAgICAgICBsYWJlbDogJ+Wunua1i+WAvCcsXG4gICAgICAgIHZhbDogX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbFtkcmF3UG9pbnRJbmRleF0udmFsLFxuICAgICAgICB2YWxDb2xvcjogX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbFtkcmF3UG9pbnRJbmRleF0uaXNFeGNlZWRcbiAgICAgICAgICA/ICcjZmY0NTQ1J1xuICAgICAgICAgIDogJyNmZmZmZmYnLFxuICAgICAgICBib3JkZXJSYWRpdXM6ICdsJyxcbiAgICAgIH0pO1xuXG4gICAgICAvLyDorr7orqHlgLxcbiAgICAgIF9kcmF3SW5wdXQoe1xuICAgICAgICB4OiB4ICsgaXcsXG4gICAgICAgIHk6IHksXG4gICAgICAgIGJvcmRlckNvbG9yOiBsaWdodElucHV0SW5kZXggPT09IDEgPyBib3JkZXJMaWdodENvbG9yIDogYm9yZGVyQ29sb3IsXG4gICAgICAgIGxhYmVsOiAn6K6+6K6h5YC8JyxcbiAgICAgICAgdmFsOiBfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsW2RyYXdQb2ludEluZGV4XS5zZXRWYWwsXG4gICAgICAgIHZhbENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgIGJvcmRlclJhZGl1czogJ3InLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIOmHjeWPoOeahOi+ueahhlxuICAgICAgaWYgKGxpZ2h0SW5wdXRJbmRleCAhPT0gbnVsbCkge1xuICAgICAgICBfY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICBfY3R4LnN0cm9rZVN0eWxlID0gJyNmZmZmZmYnO1xuICAgICAgICBfY3R4Lm1vdmVUbyh4ICsgaXcsIHkgLSAwLjUpO1xuICAgICAgICBfY3R4LmxpbmVUbyh4ICsgaXcsIHkgKyBpaCArIDAuNSk7XG4gICAgICAgIF9jdHguc3Ryb2tlKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgIC8vIOaegeW3rivorr7orqHlgLzvvIzmmoLkuI3mlK/mjIFcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGFzc3JhdGVNb2RlID09PSA1IHx8XG4gICAgICBwYXNzcmF0ZU1vZGUgPT09IDYgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTQgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTVcbiAgICApIHtcbiAgICAgIC8vIOmrmOWuveOAgeW8gOmXtOi/m+a3seOAgemrmOWuveWOmuOAgeW8gOmXtOi/m+a3se+8iOW4puaegeW3ru+8iVxuICAgICAgeCA9IHggKyA0NTtcblxuICAgICAgcG9pbnREYXRhID0gX2RlZmF1bHRzLnBvaW50c1tkcmF3UG9pbnRJbmRleF07XG4gICAgICBwb2ludHNBcnIgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnREYXRhLmFyZWE7XG4gICAgICB9KTtcblxuICAgICAgcG9pbnRMYWJsZUdyb3VwID0gXy5ncm91cEJ5KHBvaW50c0FyciwgJ2xhYmVsJyk7XG5cbiAgICAgIF8uZWFjaChwb2ludExhYmxlR3JvdXAsIGZ1bmN0aW9uKHBvaW50cywgbGFiZWwpIHtcbiAgICAgICAgdmFyIGxhYmVsVGV4dCA9IGxhYmVsO1xuICAgICAgICB2YXIgbGFiZWxUZXh0SW5kZXggPSB7XG4gICAgICAgICAg6auYOiAwLFxuICAgICAgICAgIOW8gOmXtDogMCxcbiAgICAgICAgICDlrr06IDEsXG4gICAgICAgICAg6L+b5rexOiAxLFxuICAgICAgICAgIOWOmjogMixcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGxhYmVsSW5kZXggPSBsYWJlbFRleHRJbmRleFtsYWJlbF0gfHwgMDtcblxuICAgICAgICBpZiAobGFiZWwgPT09ICfpq5gnKSB7XG4gICAgICAgICAgbGFiZWxUZXh0ID0gJ+mrmOW6pic7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGFiZWwgPT09ICflrr0nKSB7XG4gICAgICAgICAgbGFiZWxUZXh0ID0gJ+WuveW6pic7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGFiZWwgPT09ICfljponKSB7XG4gICAgICAgICAgbGFiZWxUZXh0ID0gJ+WOmuW6pic7XG4gICAgICAgIH1cblxuICAgICAgICAvL1xuICAgICAgICBfY3R4LmZpbGxTdHlsZSA9ICcjZmZmZmZmJztcbiAgICAgICAgX2N0eC5mb250ID0gJzE2cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG4gICAgICAgIF9jdHguZmlsbFRleHQobGFiZWxUZXh0LCB4IC0gMjUsIHkgKyA0NCAqIGxhYmVsSW5kZXggKyBpaCAvIDIgKyA2KTtcblxuICAgICAgICAvLyDnu5jliLbovpPlhaXmoYZcbiAgICAgICAgXy5lYWNoKHBvaW50cywgZnVuY3Rpb24ocG9pbnQsIHBJbmRleCkge1xuICAgICAgICAgIF9kcmF3SW5wdXQoe1xuICAgICAgICAgICAgeDogeCArIHBJbmRleCAqIGl3LFxuICAgICAgICAgICAgeTogeSArIDQ0ICogbGFiZWxJbmRleCxcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOlxuICAgICAgICAgICAgICBsaWdodElucHV0SW5kZXggPT09IGxhYmVsSW5kZXggKiAzICsgcEluZGV4ID8gYm9yZGVyTGlnaHRDb2xvciA6IGJvcmRlckNvbG9yLFxuICAgICAgICAgICAgbGFiZWw6ICflrp7mtYvlgLwnLFxuICAgICAgICAgICAgdmFsOiBwb2ludC52YWwsXG4gICAgICAgICAgICB2YWxDb2xvcjogcG9pbnQuaXNFeGNlZWQgPyAnI2ZmNDU0NScgOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6IHBJbmRleCA9PT0gMCA/ICdsJyA6ICduJyxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgX2RyYXdJbnB1dCh7XG4gICAgICAgICAgeDogeCArIDIgKiBpdyxcbiAgICAgICAgICB5OiB5ICsgNDQgKiBsYWJlbEluZGV4LFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBsaWdodElucHV0SW5kZXggPT09IGxhYmVsSW5kZXggKiAzICsgMiA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICBsYWJlbDogJ+iuvuiuoeWAvCcsXG4gICAgICAgICAgdmFsOiBwb2ludHNbMF0uc2V0VmFsLFxuICAgICAgICAgIHZhbENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiAncicsXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChsaWdodElucHV0SW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgbGlnaHRJbnB1dFJvdyA9IE1hdGguZmxvb3IobGlnaHRJbnB1dEluZGV4IC8gMyk7XG4gICAgICAgIGxpZ2h0SW5wdXRDb2wgPSBsaWdodElucHV0SW5kZXggJSAzO1xuXG4gICAgICAgIC8vIOmHjeWPoOeahOi+ueahhlxuICAgICAgICBpZiAobGlnaHRJbnB1dENvbCAhPT0gMikge1xuICAgICAgICAgIF9jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgX2N0eC5zdHJva2VTdHlsZSA9ICcjZmZmZmZmJztcbiAgICAgICAgICBfY3R4Lm1vdmVUbyh4ICsgKGxpZ2h0SW5wdXRDb2wgKyAxKSAqIGl3LCB5ICsgNDQgKiBsaWdodElucHV0Um93IC0gMC41KTtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKGxpZ2h0SW5wdXRDb2wgKyAxKSAqIGl3LCB5ICsgNDQgKiBsaWdodElucHV0Um93ICsgaWggKyAwLjUpO1xuICAgICAgICAgIF9jdHguc3Ryb2tlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gNyB8fCBwYXNzcmF0ZU1vZGUgPT09IDEyIHx8IHBhc3NyYXRlTW9kZSA9PT0gMTMpIHtcbiAgICAgIHBvaW50RGF0YSA9IF9kZWZhdWx0cy5wb2ludHNbZHJhd1BvaW50SW5kZXhdO1xuICAgICAgcG9pbnRzQXJyID0gXy5maWx0ZXIoX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbCwgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50RGF0YS5hcmVhO1xuICAgICAgfSk7XG5cbiAgICAgIF8uZWFjaChwb2ludHNBcnIsIGZ1bmN0aW9uKHBvaW50LCBpbmRleCkge1xuICAgICAgICBfZHJhd0lucHV0KHtcbiAgICAgICAgICB4OiB4ICsgaW5kZXggKiBpdyxcbiAgICAgICAgICB5OiB5LFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBsaWdodElucHV0SW5kZXggPT09IGluZGV4ID8gYm9yZGVyTGlnaHRDb2xvciA6IGJvcmRlckNvbG9yLFxuICAgICAgICAgIGxhYmVsOiAn5a6e5rWL5YC8JyxcbiAgICAgICAgICB2YWw6IHBvaW50LnZhbCxcbiAgICAgICAgICB2YWxDb2xvcjogcG9pbnQuaXNFeGNlZWQgPyAnI2ZmNDU0NScgOiAnI2ZmZmZmZicsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiBpbmRleCA9PT0gMCA/ICdsJyA6IGluZGV4ID09PSAyID8gJ3InIDogJ24nLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAobGlnaHRJbnB1dEluZGV4ID09PSAwIHx8IGxpZ2h0SW5wdXRJbmRleCA9PT0gMSkge1xuICAgICAgICBfY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICBfY3R4LnN0cm9rZVN0eWxlID0gJyNmZmZmZmYnO1xuICAgICAgICBfY3R4Lm1vdmVUbyh4ICsgKGxpZ2h0SW5wdXRJbmRleCArIDEpICogaXcsIHkgLSAwLjUpO1xuICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKGxpZ2h0SW5wdXRJbmRleCArIDEpICogaXcsIHkgKyBpaCArIDAuNSk7XG4gICAgICAgIF9jdHguc3Ryb2tlKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDgpIHtcbiAgICAgIC8vIOinguaEn1xuICAgICAgY3VyUG9pbnQgPSBfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsW2RyYXdQb2ludEluZGV4XTtcblxuICAgICAgaWYgKGlzRWRpdE1vZGUpIHtcbiAgICAgICAgLy8g57yW6L6R5qih5byP77yM6ZyA6KaB57uY5Yi25Lik5Liq5oyJ6ZKuXG4gICAgICAgIC8vIOWQiOagvFxuICAgICAgICBfZHJhd0lucHV0KHtcbiAgICAgICAgICB4OiB4LFxuICAgICAgICAgIHk6IHksXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IGN1clBvaW50LnZhbCA9PT0gMSA/ICcjNDI3NWU4JyA6ICcjZmZmZmZmJyxcbiAgICAgICAgICBiZ0NvbG9yOiBjdXJQb2ludC52YWwgPT09IDEgPyAnIzQyNzVlOCcgOiAnJyxcbiAgICAgICAgICB2YWw6ICflkIjmoLwnLFxuICAgICAgICAgIHZhbENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIOS4jeWQiOagvFxuICAgICAgICBfZHJhd0lucHV0KHtcbiAgICAgICAgICB4OiB4ICsgaXcgKyAxMCxcbiAgICAgICAgICB5OiB5LFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBjdXJQb2ludC52YWwgPT09IDAgPyAnIzQyNzVlOCcgOiAnI2ZmZmZmZicsXG4gICAgICAgICAgYmdDb2xvcjogY3VyUG9pbnQudmFsID09PSAwID8gJyM0Mjc1ZTgnIDogJycsXG4gICAgICAgICAgdmFsOiAn5LiN5ZCI5qC8JyxcbiAgICAgICAgICB2YWxDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOafpeeci+aooeW8j++8jOWPqueUqOe7mOWItue7k+aenFxuICAgICAgICBfZHJhd0lucHV0KHtcbiAgICAgICAgICB4OiB4LFxuICAgICAgICAgIHk6IHksXG4gICAgICAgICAgYm9yZGVyQ29sb3I6ICcjZmZmZmZmJyxcbiAgICAgICAgICBiZ0NvbG9yOiAnJyxcbiAgICAgICAgICB2YWw6IGN1clBvaW50LnZhbCA9PT0gMSA/ICflkIjmoLwnIDogJ+S4jeWQiOagvCcsXG4gICAgICAgICAgdmFsQ29sb3I6ICcjZmZmZmZmJyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE2KSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhfZGVmYXVsdHMsICdfZGVmYXVsdHMnKTtcbiAgICAgIC8vIOWHgOmrmO+8iOacgOWkp+WBj+W3ruWAvCvmnoHlt67lgLzvvIlcblxuICAgICAgcG9pbnREYXRhID0gX2RlZmF1bHRzLnBvaW50c1tkcmF3UG9pbnRJbmRleF07XG5cbiAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludERhdGEuYXJlYTtcbiAgICAgIH0pO1xuXG4gICAgICBfLmVhY2gocG9pbnRzQXJyLCBmdW5jdGlvbihwb2ludCwgaW5kZXgpIHtcbiAgICAgICAgdmFyIHJvdyA9IE1hdGguZmxvb3IoKGluZGV4ICogMikgLyAzKSxcbiAgICAgICAgICBjb2wgPSAoaW5kZXggKiAyKSAlIDM7XG4gICAgICAgIF9kcmF3SW5wdXQoe1xuICAgICAgICAgIHg6IHggKyBjb2wgKiBpdyxcbiAgICAgICAgICB5OiB5ICsgcm93ICogaWgsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IGxpZ2h0SW5wdXRJbmRleCA9PT0gaW5kZXggPyBib3JkZXJMaWdodENvbG9yIDogYm9yZGVyQ29sb3IsXG4gICAgICAgICAgbGFiZWw6ICflrp7mtYvlgLwnLFxuICAgICAgICAgIHZhbDogcG9pbnQudmFsLFxuICAgICAgICAgIHZhbENvbG9yOiBwb2ludC5pc0V4Y2VlZCA/ICcjZmY0NTQ1JyA6ICcjZmZmZmZmJyxcbiAgICAgICAgICBib3JkZXJSYWRpdXM6ICduJyxcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgX2RyYXdJbnB1dCh7XG4gICAgICAgIHg6IHgsXG4gICAgICAgIHk6IHkgKyAzMyAqIDMgKyA2LFxuICAgICAgICB3OiA2OSAqIDMsXG4gICAgICAgIGg6IDMzLFxuICAgICAgICBib3JkZXJDb2xvcjogbGlnaHRJbnB1dEluZGV4ID09PSA1ID8gYm9yZGVyTGlnaHRDb2xvciA6IGJvcmRlckNvbG9yLFxuICAgICAgICBsYWJlbDogJ+iuvuiuoeWAvCcsXG4gICAgICAgIHZhbDogX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbFtkcmF3UG9pbnRJbmRleCAqIDVdLnNldFZhbCxcbiAgICAgICAgdmFsQ29sb3I6ICcjZmZmZmZmJyxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAncicsXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTcpIHtcbiAgICAgIC8vIOWdoeW6plxuICAgICAgcG9pbnREYXRhID0gX2RlZmF1bHRzLnBvaW50c1tkcmF3UG9pbnRJbmRleF07XG5cbiAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludERhdGEuYXJlYTtcbiAgICAgIH0pO1xuXG4gICAgICBfLmVhY2gocG9pbnRzQXJyLCBmdW5jdGlvbihwb2ludCwgaW5kZXgpIHtcbiAgICAgICAgX2RyYXdJbnB1dCh7XG4gICAgICAgICAgeDogeCArIGluZGV4ICogaXcsXG4gICAgICAgICAgeTogeSxcbiAgICAgICAgICBib3JkZXJDb2xvcjogbGlnaHRJbnB1dEluZGV4ID09PSBpbmRleCA/IGJvcmRlckxpZ2h0Q29sb3IgOiBib3JkZXJDb2xvcixcbiAgICAgICAgICBsYWJlbDogaW5kZXggPD0gMSA/ICfpq5jluqYnIDogJ+awtOW5s+i3neemuycsXG4gICAgICAgICAgdmFsOiBwb2ludC52YWwsXG4gICAgICAgICAgdmFsQ29sb3I6IHBvaW50LmlzRXhjZWVkID8gJyNmZjQ1NDUnIDogJyNmZmZmZmYnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogJ24nLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICBfZHJhd0lucHV0KHtcbiAgICAgICAgeDogeCxcbiAgICAgICAgeTogeSArIDMzICogMSArIDYsXG4gICAgICAgIHc6IDY5ICogMyxcbiAgICAgICAgaDogMzMsXG4gICAgICAgIGJvcmRlckNvbG9yOiBsaWdodElucHV0SW5kZXggPT09IDMgPyBib3JkZXJMaWdodENvbG9yIDogYm9yZGVyQ29sb3IsXG4gICAgICAgIGxhYmVsOiAn6K6+6K6h5YC8JyxcbiAgICAgICAgdmFsOiBfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsW2RyYXdQb2ludEluZGV4ICogM10uc2V0VmFsLFxuICAgICAgICB2YWxDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICBib3JkZXJSYWRpdXM6ICdyJyxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAqIOe7mOWItuS4gOS4qui+k+WFpeahhlxuICAgKiB4LCB5OiDotbflp4vlnZDmoIfvvIzlt6bkuIrop5JcbiAgICogdywgaDog6L6T5YWl5qGG55qE5a696auYXG4gICAqIGJvcmRlckNvbG9yOiDovrnmoYbpopzoibJcbiAgICogYmdDb2xvcjog6IOM5pmv6aKc6ImyXG4gICAqIGxhYmVsOiDovpPlhaXmoYbnmoTmj5DnpLrmloflrZdcbiAgICogbGFiZWxDb2xvcjog5o+Q56S65paH5a2X6aKc6ImyXG4gICAqIHZhbDog5a6e5rWL5YC877yM6L6T5YWl5qGG5pyA5aSa5pi+56S6OOS9je+8jOWwj+aVsOWPr+S7peaYvuekujjkvY3vvIzmlbTmlbA35L2NXG4gICAqIHZhbENvbG9yOiDlrp7mtYvlgLzpopzoibJcbiAgICogcjog6L6T5YWl5qGG5ZyG6KeS5Y2K5b6EXG4gICAqIGJyOiBib3JkZXItcmFkaXVzIOWchuinku+8jOm7mOiupOWFqOmDqOWchuinkiBhIO+8jG46IOS4jeeUqOWchuinku+8jGw65bem6L655ZyG6KeS77yMcjrlj7PovrnlnIbop5JcbiAgICovXG4gIGZ1bmN0aW9uIF9kcmF3SW5wdXQoc2V0dGluZykge1xuICAgIHZhciB4ID0gc2V0dGluZy54LFxuICAgICAgeSA9IHNldHRpbmcueSxcbiAgICAgIHcgPSBzZXR0aW5nLncgfHwgNjksXG4gICAgICBoID0gc2V0dGluZy5oIHx8IDMzLFxuICAgICAgYm9yZGVyQ29sb3IgPSBzZXR0aW5nLmJvcmRlckNvbG9yLFxuICAgICAgYmdDb2xvciA9IHNldHRpbmcuYmdDb2xvcixcbiAgICAgIGxhYmVsID0gc2V0dGluZy5sYWJlbCA/IHNldHRpbmcubGFiZWwuc3Vic3RyKDAsIDQpIDogJycsXG4gICAgICBsYWJlbENvbG9yID0gc2V0dGluZy5sYWJlbENvbG9yLFxuICAgICAgdmFsID0gaGFzVmFsKHNldHRpbmcudmFsKVxuICAgICAgICA/IHNldHRpbmcudmFsLnRvU3RyaW5nKCkuc3Vic3RyKC0oc2V0dGluZy52YWwudG9TdHJpbmcoKS5pbmRleE9mKCcuJykgPCAwID8gNyA6IDgpKVxuICAgICAgICA6ICcnLFxuICAgICAgdmFsQ29sb3IgPSBzZXR0aW5nLnZhbENvbG9yLFxuICAgICAgYnIgPSBzZXR0aW5nLmJvcmRlclJhZGl1cyB8fCAnYScsXG4gICAgICByID0gMjtcblxuICAgIF9jdHguc3Ryb2tlU3R5bGUgPSBib3JkZXJDb2xvcjtcbiAgICBfY3R4LmJlZ2luUGF0aCgpO1xuICAgIGlmIChiciA9PT0gJ2EnIHx8IGJyID09PSAnbCcpIHtcbiAgICAgIF9jdHguYXJjKHggKyByLCB5ICsgciwgciwgTWF0aC5QSSwgTWF0aC5QSSAqIDEuNSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9jdHgubW92ZVRvKHgsIHkpO1xuICAgIH1cblxuICAgIC8vIGxhYmVsIOWwj+aWh+Wtl+aPkOekuueahOaXtuWAmeimgeWBmui+ueahhuWkhOeQhlxuICAgIGlmIChoYXNWYWwobGFiZWwpICYmIGhhc1ZhbCh2YWwpKSB7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgKHcgLSBsYWJlbC5sZW5ndGggKiA4KSAvIDIgLSAyLCB5KTtcbiAgICAgIF9jdHgubW92ZVRvKHggKyAodyArIGxhYmVsLmxlbmd0aCAqIDgpIC8gMiArIDIsIHkpO1xuICAgIH1cblxuICAgIGlmIChiciA9PT0gJ2EnIHx8IGJyID09PSAncicpIHtcbiAgICAgIF9jdHgubGluZVRvKHggKyB3IC0gciwgeSk7XG4gICAgICBfY3R4LmFyYyh4ICsgdyAtIHIsIHkgKyByLCByLCBNYXRoLlBJICogMS41LCAwKTtcbiAgICAgIF9jdHgubGluZVRvKHggKyB3LCB5ICsgaCAtIHIpO1xuICAgICAgX2N0eC5hcmMoeCArIHcgLSByLCB5ICsgaCAtIHIsIHIsIDAsIE1hdGguUEkgKiAwLjUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgdywgeSk7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgdywgeSArIGgpO1xuICAgIH1cbiAgICBpZiAoYnIgPT09ICdhJyB8fCBiciA9PT0gJ2wnKSB7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgciwgeSArIGgpO1xuICAgICAgX2N0eC5hcmMoeCArIHIsIHkgKyBoIC0gciwgciwgTWF0aC5QSSAqIDAuNSwgTWF0aC5QSSk7XG4gICAgICBfY3R4LmxpbmVUbyh4LCB5ICsgcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9jdHgubGluZVRvKHgsIHkgKyBoKTtcbiAgICAgIF9jdHgubGluZVRvKHgsIHkgLSAwLjUpO1xuICAgIH1cbiAgICBfY3R4LnN0cm9rZSgpO1xuXG4gICAgaWYgKGhhc1ZhbChiZ0NvbG9yKSkge1xuICAgICAgX2N0eC5maWxsU3R5bGUgPSBiZ0NvbG9yO1xuICAgICAgX2N0eC5maWxsKCk7XG4gICAgfVxuXG4gICAgLy8gbGFiZWxcbiAgICBpZiAoaGFzVmFsKGxhYmVsKSkge1xuICAgICAgX2N0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcblxuICAgICAgaWYgKGhhc1ZhbCh2YWwpKSB7XG4gICAgICAgIC8vIOWwj+aWh+Wtl+aPkOekulxuICAgICAgICBfY3R4LmZpbGxTdHlsZSA9IGxhYmVsQ29sb3IgfHwgYm9yZGVyQ29sb3I7XG4gICAgICAgIF9jdHguZm9udCA9ICc4cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG4gICAgICAgIF9jdHguZmlsbFRleHQobGFiZWwsIHggKyB3IC8gMiwgeSArIDMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8g5omT5paH5a2X5o+Q56S6XG4gICAgICAgIF9jdHguZmlsbFN0eWxlID0gbGFiZWxDb2xvciB8fCAnIzgwODA4MCc7XG4gICAgICAgIF9jdHguZm9udCA9ICcxNnB4IC1hcHBsZS1zeXN0ZW0sIFwiSGVsdmV0aWNhIE5ldWVcIiwgUm9ib3RvLCBcIlNlZ29lIFVJXCIsIHNhbnMtc2VyaWYnO1xuICAgICAgICBfY3R4LmZpbGxUZXh0KGxhYmVsLCB4ICsgdyAvIDIsIHkgKyBoIC8gMiArIDYpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIHZhbFxuICAgIGlmIChoYXNWYWwodmFsKSkge1xuICAgICAgX2N0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICAgIF9jdHguZmlsbFN0eWxlID0gdmFsQ29sb3I7XG4gICAgICBfY3R4LmZvbnQgPSAnMTZweCAtYXBwbGUtc3lzdGVtLCBcIkhlbHZldGljYSBOZXVlXCIsIFJvYm90bywgXCJTZWdvZSBVSVwiLCBzYW5zLXNlcmlmJztcbiAgICAgIF9jdHguZmlsbFRleHQodmFsLCB4ICsgdyAvIDIsIHkgKyBoIC8gMiArIDYpO1xuICAgIH1cbiAgfVxuXG4gIC8vIOe7mOWItumUruebmFxuICBmdW5jdGlvbiBfZHJhd0tleWJvcmFkKCkge1xuICAgIHZhciBsaWdodFBvaW50ID0gX2dldExpZ2h0UG9pbnQoKTtcblxuICAgIC8vIOmUruebmOWwuuWvuFxuICAgIHZhciB3ID0gMjQwLFxuICAgICAgaCA9IDE4MDtcbiAgICAvLyDlnIbop5LljYrlvoRcbiAgICB2YXIgciA9IDY7XG5cbiAgICAvLyDplK7nm5jotbflp4vkvY3nva5cbiAgICB2YXIga2V5Ym9yYWRQb3MgPSBfZ2V0S2V5Ym9yYWRQb3MoKTtcbiAgICB2YXIgeCA9IGtleWJvcmFkUG9zLngsXG4gICAgICB5ID0ga2V5Ym9yYWRQb3MueTtcblxuICAgIHZhciBraTtcblxuICAgIGlmIChsaWdodFBvaW50ICYmIGlzS2V5Ym9hcmRTaG93ICYmIGxpZ2h0SW5wdXRJbmRleCAhPT0gbnVsbCkge1xuICAgICAgLy8g57uY5Yi26IOM5pmvXG4gICAgICBfY3R4LnNoYWRvd0JsdXIgPSA1O1xuICAgICAgX2N0eC5zaGFkb3dDb2xvciA9ICcjOTk5JztcblxuICAgICAgX2N0eC5maWxsU3R5bGUgPSAnI2ZmZmZmZic7XG4gICAgICBfY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICBfY3R4LmFyYyh4ICsgciwgeSArIHIsIHIsIE1hdGguUEksIE1hdGguUEkgKiAxLjUpO1xuICAgICAgX2N0eC5saW5lVG8odyArIHggLSByLCB5KTtcbiAgICAgIF9jdHguYXJjKHggKyB3IC0gciwgeSArIHIsIHIsIE1hdGguUEkgKiAxLjUsIDApO1xuICAgICAgX2N0eC5saW5lVG8oeCArIHcsIHkgKyBoIC0gcik7XG4gICAgICBfY3R4LmFyYyh4ICsgdyAtIHIsIHkgKyBoIC0gciwgciwgMCwgTWF0aC5QSSAqIDAuNSk7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgciwgeSArIGgpO1xuICAgICAgX2N0eC5hcmMoeCArIHIsIHkgKyBoIC0gciwgciwgTWF0aC5QSSAqIDAuNSwgTWF0aC5QSSk7XG4gICAgICBfY3R4LmxpbmVUbyh4LCB5ICsgcik7XG5cbiAgICAgIF9jdHguY2xvc2VQYXRoKCk7XG4gICAgICBfY3R4LmZpbGwoKTtcblxuICAgICAgX2N0eC5zaGFkb3dCbHVyID0gMDtcbiAgICAgIF9jdHguc2hhZG93Q29sb3IgPSAndHJhbnNwYXJlbnQnO1xuXG4gICAgICAvLyDnu5jliLbpq5jkuq5cbiAgICAgIGZvciAoa2kgaW4ga2V5Ym9yYWRBY3Rpb25EYXRhKSB7XG4gICAgICAgIGtpID0gcGFyc2VJbnQoa2kpO1xuXG4gICAgICAgIF9jdHguZmlsbFN0eWxlID0gJyNmMmYyZjInOyAvLyDngrnlh7vnirbmgIHkuK3nmoTmjInplK7og4zmma/oibJcbiAgICAgICAgX2N0eC5iZWdpblBhdGgoKTtcblxuICAgICAgICAvLyDlt6bkuIrlnIbop5JcbiAgICAgICAgaWYgKGtpID09PSAwKSB7XG4gICAgICAgICAgX2N0eC5hcmMoXG4gICAgICAgICAgICB4ICsgKGtpICUgNCkgKiA2MCArIHIsXG4gICAgICAgICAgICB5ICsgTWF0aC5mbG9vcihraSAvIDQpICogNDUgKyByLFxuICAgICAgICAgICAgcixcbiAgICAgICAgICAgIE1hdGguUEksXG4gICAgICAgICAgICBNYXRoLlBJICogMS41XG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfY3R4Lm1vdmVUbyh4ICsgKGtpICUgNCkgKiA2MCwgeSArIE1hdGguZmxvb3Ioa2kgLyA0KSAqIDQ1KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOWPs+S4iuWchuinklxuICAgICAgICBpZiAoa2kgPT09IDMpIHtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKChraSAlIDQpICsgMSkgKiA2MCAtIHIsIHkgKyBNYXRoLmZsb29yKGtpIC8gNCkgKiA0NSk7XG4gICAgICAgICAgX2N0eC5hcmMoXG4gICAgICAgICAgICB4ICsgKChraSAlIDQpICsgMSkgKiA2MCAtIHIsXG4gICAgICAgICAgICB5ICsgTWF0aC5mbG9vcihraSAvIDQpICogNDUgKyByLFxuICAgICAgICAgICAgcixcbiAgICAgICAgICAgIE1hdGguUEkgKiAxLjUsXG4gICAgICAgICAgICAwXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKChraSAlIDQpICsgMSkgKiA2MCwgeSArIE1hdGguZmxvb3Ioa2kgLyA0KSAqIDQ1KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOWPs+S4i+WchuinklxuICAgICAgICBpZiAoa2kgPT09IDE1KSB7XG4gICAgICAgICAgX2N0eC5saW5lVG8oeCArICgoa2kgJSA0KSArIDEpICogNjAsIHkgKyAoTWF0aC5mbG9vcihraSAvIDQpICsgMSkgLSByKTtcbiAgICAgICAgICBfY3R4LmFyYyhcbiAgICAgICAgICAgIHggKyAoKGtpICUgNCkgKyAxKSAqIDYwIC0gcixcbiAgICAgICAgICAgIHkgKyAoTWF0aC5mbG9vcihraSAvIDQpICsgMSkgKiA0NSAtIHIsXG4gICAgICAgICAgICByLFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIE1hdGguUEkgKiAwLjVcbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF9jdHgubGluZVRvKHggKyAoKGtpICUgNCkgKyAxKSAqIDYwLCB5ICsgKE1hdGguZmxvb3Ioa2kgLyA0KSArIDEpICogNDUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5bem5LiL5ZyG6KeSXG4gICAgICAgIGlmIChraSA9PT0gMTIpIHtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKGtpICUgNCkgKiA2MCArIHIsIHkgKyAoTWF0aC5mbG9vcihraSAvIDQpICsgMSkgKiA0NSk7XG4gICAgICAgICAgX2N0eC5hcmMoXG4gICAgICAgICAgICB4ICsgKGtpICUgNCkgKiA2MCArIHIsXG4gICAgICAgICAgICB5ICsgKE1hdGguZmxvb3Ioa2kgLyA0KSArIDEpICogNDUgLSByLFxuICAgICAgICAgICAgcixcbiAgICAgICAgICAgIE1hdGguUEkgKiAwLjUsXG4gICAgICAgICAgICBNYXRoLlBJXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgKGtpICUgNCkgKiA2MCwgeSArIChNYXRoLmZsb29yKGtpIC8gNCkgKyAxKSAqIDQ1KTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9jdHguY2xvc2VQYXRoKCk7XG4gICAgICAgIF9jdHguZmlsbCgpO1xuICAgICAgfVxuXG4gICAgICAvLyDnu5jliLbmoLzlrZBcbiAgICAgIF9jdHguc3Ryb2tlU3R5bGUgPSAnI2Q5ZDlkOSc7XG4gICAgICBfY3R4LmxpbmVXaWR0aCA9IDAuNTtcblxuICAgICAgX2N0eC5iZWdpblBhdGgoKTtcbiAgICAgIF9jdHgubW92ZVRvKHgsIHkgKyA0NS4yNSk7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgdywgeSArIDQ1LjI1KTtcbiAgICAgIF9jdHgubW92ZVRvKHgsIHkgKyA5MC4yNSk7XG4gICAgICBfY3R4LmxpbmVUbyh4ICsgdywgeSArIDkwLjI1KTtcbiAgICAgIF9jdHgubW92ZVRvKHgsIHkgKyAxMzUuMjUpO1xuICAgICAgX2N0eC5saW5lVG8oeCArIHcsIHkgKyAxMzUuMjUpO1xuXG4gICAgICBfY3R4Lm1vdmVUbyh4ICsgNjAuMjUsIHkpO1xuICAgICAgX2N0eC5saW5lVG8oeCArIDYwLjI1LCB5ICsgaCk7XG4gICAgICBfY3R4Lm1vdmVUbyh4ICsgMTIwLjI1LCB5KTtcbiAgICAgIF9jdHgubGluZVRvKHggKyAxMjAuMjUsIHkgKyBoKTtcbiAgICAgIF9jdHgubW92ZVRvKHggKyAxODAuMjUsIHkpO1xuICAgICAgX2N0eC5saW5lVG8oeCArIDE4MC4yNSwgeSArIGgpO1xuICAgICAgX2N0eC5jbG9zZVBhdGgoKTtcbiAgICAgIF9jdHguc3Ryb2tlKCk7XG5cbiAgICAgIC8vIF9jdHgudHJhbnNsYXRlKDAsIDApO1xuXG4gICAgICAvLyDnu5jliLbmloflrZdcbiAgICAgIF9jdHgudGV4dEFsaWduID0gJ2NlbnRlcic7XG5cbiAgICAgIGtleWJvYXJkVGV4dC5mb3JFYWNoKGZ1bmN0aW9uKHRleHQsIGluZGV4KSB7XG4gICAgICAgIHZhciByb3cgPSBNYXRoLmZsb29yKGluZGV4IC8gNCksXG4gICAgICAgICAgY29sID0gaW5kZXggJSA0O1xuXG4gICAgICAgIGlmIChpbmRleCA9PT0gMykge1xuICAgICAgICAgIC8vIOWIoOmZpOaMiemSru+8jOS9v+eUqOWbvuagh1xuXG4gICAgICAgICAgX2N0eC5maWxsU3R5bGUgPSAnIzk5OTk5OSc7XG5cbiAgICAgICAgICBfY3R4LmJlZ2luUGF0aCgpO1xuXG4gICAgICAgICAgX2N0eC5tb3ZlVG8oeCArIGNvbCAqIDYwICsgMTgsIHkgKyByb3cgKiA0NSArIDIyLjUpO1xuICAgICAgICAgIF9jdHgubGluZVRvKHggKyBjb2wgKiA2MCArIDI1LCB5ICsgcm93ICogNDUgKyAxNC41KTtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgY29sICogNjAgKyA0MCwgeSArIHJvdyAqIDQ1ICsgMTQuNSk7XG4gICAgICAgICAgX2N0eC5hcmMoeCArIGNvbCAqIDYwICsgNDAsIHkgKyByb3cgKiA0NSArIDE2LjUsIDIsIE1hdGguUEkgKiAxLjUsIDApO1xuICAgICAgICAgIF9jdHgubGluZVRvKHggKyBjb2wgKiA2MCArIDQyLCB5ICsgcm93ICogNDUgKyAyOC41KTtcbiAgICAgICAgICBfY3R4LmFyYyh4ICsgY29sICogNjAgKyA0MCwgeSArIHJvdyAqIDQ1ICsgMjguNSwgMiwgMCwgTWF0aC5QSSAqIDAuNSk7XG4gICAgICAgICAgX2N0eC5saW5lVG8oeCArIGNvbCAqIDYwICsgMjUsIHkgKyByb3cgKiA0NSArIDMwLjUpO1xuXG4gICAgICAgICAgX2N0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgICBfY3R4LmZpbGwoKTtcblxuICAgICAgICAgIC8vIOe7mOWItuWPieWPieWbvuagh1xuICAgICAgICAgIF9jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgX2N0eC5zdHJva2VTdHlsZSA9ICcjZmZmZmZmJztcbiAgICAgICAgICBfY3R4LmxpbmVXaWR0aCA9IDI7XG4gICAgICAgICAgX2N0eC5tb3ZlVG8oeCArIGNvbCAqIDYwICsgMjgsIHkgKyByb3cgKiA0NSArIDE4KTtcbiAgICAgICAgICBfY3R4LmxpbmVUbyh4ICsgY29sICogNjAgKyAzNywgeSArIHJvdyAqIDQ1ICsgMjcpO1xuICAgICAgICAgIF9jdHgubW92ZVRvKHggKyBjb2wgKiA2MCArIDM3LCB5ICsgcm93ICogNDUgKyAxOCk7XG4gICAgICAgICAgX2N0eC5saW5lVG8oeCArIGNvbCAqIDYwICsgMjgsIHkgKyByb3cgKiA0NSArIDI3KTtcbiAgICAgICAgICBfY3R4LnN0cm9rZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIOWFtuS7luaMiemSrlxuICAgICAgICAgIC8vIOS4reaWh+Wtl+WPt+Wwj+S4gOS6m1xuICAgICAgICAgIF9jdHguZmlsbFN0eWxlID0gJyMxMTExMTEnO1xuICAgICAgICAgIGlmIChpbmRleCA9PT0gMyB8fCBpbmRleCA9PT0gMTIgfHwgaW5kZXggPT09IDE0IHx8IGluZGV4ID09PSAxNSkge1xuICAgICAgICAgICAgX2N0eC5mb250ID0gJzE0cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF9jdHguZm9udCA9ICcxOHB4IC1hcHBsZS1zeXN0ZW0sIFwiSGVsdmV0aWNhIE5ldWVcIiwgUm9ib3RvLCBcIlNlZ29lIFVJXCIsIHNhbnMtc2VyaWYnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOWFs+mXrVxuICAgICAgICAgIGlmIChpbmRleCA9PT0gMTUpIHtcbiAgICAgICAgICAgIF9jdHguZmlsbFN0eWxlID0gJyM0Mjc1ZTgnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIOS4iuS4gOmhuSDlkowg5LiL5LiA6aG5XG4gICAgICAgICAgaWYgKChpbmRleCA9PT0gMTIgJiYgIWhhc1ByZXZJbnB1dCkgfHwgKGluZGV4ID09PSAxNCAmJiAhaGFzTmV4dElucHV0KSkge1xuICAgICAgICAgICAgX2N0eC5maWxsU3R5bGUgPSAnI2IyYjJiMic7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX2N0eC5maWxsVGV4dCh0ZXh0LCB4ICsgY29sICogNjAgKyAzMCwgeSArIHJvdyAqIDQ1ICsgMjkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfZ2V0SW5wdXRQb3B1cFNpemUoKSB7XG4gICAgLyoqXG4gICAgICogdG9kbyBtZWFzdXJlIGVuZFxuICAgICAqIOabv+aNouaWueazlSBfZ2V0SW5wdXRQb3B1cFNpemVcbiAgICAgcmV0dXJuIGRyYXdTZXJ2ZXIuX2dldElucHV0UG9wdXBTaXplKGNvbWJvTGVuZ3RoKTtcbiAgICAgKiAqL1xuICAgIHJldHVybiBkcmF3U2VydmVyLl9nZXRJbnB1dFBvcHVwU2l6ZShjb21ib0xlbmd0aCk7XG5cbiAgICB2YXIgcHcsIHBoO1xuICAgIGlmIChwYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgIC8vIOagh+WHhueul+azlVxuICAgICAgcHcgPSA4MCAqIGNvbWJvTGVuZ3RoO1xuICAgICAgcGggPSA0NDtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgLy8g5p6B5beu566X5rOVXG4gICAgICBwdyA9IDIxODtcbiAgICAgIHBoID0gMTEwO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAzKSB7XG4gICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICBwdyA9IDE0OTtcbiAgICAgIHBoID0gNDQ7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gNSkge1xuICAgICAgLy8g6auY5a69566X5rOVXG4gICAgICBwdyA9IDI2MztcbiAgICAgIHBoID0gODg7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDYgfHwgcGFzc3JhdGVNb2RlID09PSAxNSkge1xuICAgICAgLy8g5byA6Ze06L+b5rex44CB5byA6Ze06L+b5rex77yI5bim5p6B5beu77yJXG4gICAgICBwdyA9IDI2MztcbiAgICAgIHBoID0gODg7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgIC8vIOaWueato+aAp+eul+azlVxuICAgICAgcHcgPSAyMTg7XG4gICAgICBwaCA9IDQ0O1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICAvLyDop4LmhJ/nrpfms5VcbiAgICAgIGlmIChpc0VkaXRNb2RlKSB7XG4gICAgICAgIHB3ID0gMTYwO1xuICAgICAgICBwaCA9IDQ0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHcgPSA4MDtcbiAgICAgICAgcGggPSA0NDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTIpIHtcbiAgICAgIC8vIOaWueato+aAp+eul+azlVxuICAgICAgcHcgPSAyMTg7XG4gICAgICBwaCA9IDQ0O1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgLy8g6Zeo5qGG566X5rOVXG4gICAgICBwdyA9IDE0OTtcbiAgICAgIHBoID0gNDQ7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE0KSB7XG4gICAgICAvLyDpq5jlrr3ljppcbiAgICAgIHB3ID0gMjYzO1xuICAgICAgcGggPSAxMzI7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE2KSB7XG4gICAgICAvLyDlh4Dpq5jvvIjmnIDlpKflgY/lt67lgLwr5p6B5beu5YC877yJXG4gICAgICBwdyA9IDIxODtcbiAgICAgIHBoID0gMTUwO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxNykge1xuICAgICAgLy8g5Z2h5bqmXG4gICAgICBwdyA9IDIxODtcbiAgICAgIHBoID0gODY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHc6IHB3LFxuICAgICAgaDogcGgsXG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9nZXRJbnB1dFBvcHVwUG9zKCkge1xuICAgIHZhciBsaWdodFBvaW50ID0gX2dldExpZ2h0UG9pbnQoKSxcbiAgICAgIHBTaXplID0gX2dldElucHV0UG9wdXBTaXplKCk7XG5cbiAgICBpZiAobGlnaHRQb2ludCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgeDogKGxpZ2h0UG9pbnQueCAqIF9zY2FsZSkgLyBfcGl4ZWxSYXRpbyArIF94IC8gX3BpeGVsUmF0aW8gLSBwU2l6ZS53IC8gMixcbiAgICAgICAgeTpcbiAgICAgICAgICAobGlnaHRQb2ludC55ICogX3NjYWxlKSAvIF9waXhlbFJhdGlvICtcbiAgICAgICAgICBfeSAvIF9waXhlbFJhdGlvIC1cbiAgICAgICAgICBwU2l6ZS5oIC1cbiAgICAgICAgICBfZGVmYXVsdHMucG9pbnRSYWRpdXMgLVxuICAgICAgICAgIDEwLFxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgeDogbnVsbCwgeTogbnVsbCB9O1xuICAgIH1cbiAgfVxuXG4gIC8vIOiOt+WPlumUruebmOeahOS9jee9ru+8jOi/lOWbnuW3puS4iuinkueahOWdkOagh++8jOmUruebmOWwuuWvuOWbuuWumu+8mjI0MCAqIDE4MFxuICAvLyDov5nph4zkuI3liKTmlq3plK7nm5jmmK/lkKbmiZPlvIDnirbmgIFcbiAgZnVuY3Rpb24gX2dldEtleWJvcmFkUG9zKCkge1xuICAgIHZhciBsaWdodFBvaW50ID0gX2dldExpZ2h0UG9pbnQoKTtcblxuICAgIGlmIChsaWdodFBvaW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB4OiBNYXRoLnJvdW5kKChsaWdodFBvaW50LnggKiBfc2NhbGUpIC8gX3BpeGVsUmF0aW8gKyBfeCAvIF9waXhlbFJhdGlvIC0gMjQwIC8gMiksXG4gICAgICAgIHk6IE1hdGgucm91bmQoXG4gICAgICAgICAgKGxpZ2h0UG9pbnQueSAqIF9zY2FsZSkgLyBfcGl4ZWxSYXRpbyArIF95IC8gX3BpeGVsUmF0aW8gKyBfZGVmYXVsdHMucG9pbnRSYWRpdXMgKyAxMFxuICAgICAgICApLFxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgeDogbnVsbCwgeTogbnVsbCB9O1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9iaW5kVG91Y2hFdmVudCgpIHtcbiAgICBfY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBvblRvdWNoc3RhcnQpO1xuICAgIF9jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgb25Ub3VjaG1vdmUpO1xuICAgIF9jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBvblRvdWNoZW5kKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF91bmJpbmRUb3VjaEV2ZW50KCkge1xuICAgIF9jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uVG91Y2hzdGFydCk7XG4gICAgX2NhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBvblRvdWNobW92ZSk7XG4gICAgX2NhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIG9uVG91Y2hlbmQpO1xuICB9XG5cbiAgLy8g5piv5ZCm5Zyo57yp5pS+XG4gIGZ1bmN0aW9uIF9pc1BpbmNoaW5nKGUpIHtcbiAgICB2YXIgY2hhbmdlZCA9IGUuY2hhbmdlZFRvdWNoZXMubGVuZ3RoLFxuICAgICAgdG91Y2hpbmcgPSBlLnRvdWNoZXMubGVuZ3RoO1xuXG4gICAgcmV0dXJuIGNoYW5nZWQgPT09IDEgfHwgY2hhbmdlZCA9PT0gMiB8fCB0b3VjaGluZyA9PT0gMjtcbiAgfVxuXG4gIC8vIOaYr+WQpuWcqOaLluWKqFxuICBmdW5jdGlvbiBfaXNEcmFnZ2luZyhlKSB7XG4gICAgcmV0dXJuIGUudG91Y2hlcy5sZW5ndGggPT09IDE7XG4gIH1cblxuICAvLyDojrflj5bmi5bmi73nmoTmlrnlkJFcbiAgZnVuY3Rpb24gX2dldERyYWdnaW5nRGlyZWN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgeERyaWZ0ID0gc3RhcnQuY3ggLSBlbmQucGFnZVgsXG4gICAgICB5RHJpZnQgPSBzdGFydC5jeSAtIGVuZC5wYWdlWTtcblxuICAgIGlmIChNYXRoLmFicyh4RHJpZnQpID4gTWF0aC5hYnMoeURyaWZ0KSkge1xuICAgICAgLy8g5qiq5ZCR55qE5L2N56e75aSnXG4gICAgICBpZiAoeERyaWZ0ID4gMCkge1xuICAgICAgICByZXR1cm4gJ3InO1xuICAgICAgfSBlbHNlIGlmICh4RHJpZnQgPCAwKSB7XG4gICAgICAgIHJldHVybiAnbCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIOe6teWQkeeahOS9jeenu+Wkp1xuICAgICAgaWYgKHlEcmlmdCA+IDApIHtcbiAgICAgICAgcmV0dXJuICdiJztcbiAgICAgIH0gZWxzZSBpZiAoeURyaWZ0IDwgMCkge1xuICAgICAgICByZXR1cm4gJ3QnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIOWIpOaWreaLluaLveeahOaXtuWAmeaYr+WQpuWIsOi+vui+ueeVjO+8jOaWueWQke+8miB0ICwgciAsIGIgLCBsXG4gIGZ1bmN0aW9uIF9pc0JvdW5kYXJ5KGRpcikge1xuICAgIHN3aXRjaCAoZGlyKSB7XG4gICAgICBjYXNlICd0JzpcbiAgICAgICAgaWYgKF95ID49IF95UmFuZ2VbMV0pIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3InOlxuICAgICAgICBpZiAoX3ggPD0gX3hSYW5nZVswXSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYic6XG4gICAgICAgIGlmIChfeSA8PSBfeVJhbmdlWzBdKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdsJzpcbiAgICAgICAgaWYgKF94ID49IF94UmFuZ2VbMV0pIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gb25Ub3VjaHN0YXJ0KGUpIHtcbiAgICBpZiAodGhhdC5kcmF3TW9kZSAhPT0gJ2ltZycpIHtcbiAgICB9XG5cbiAgICBfaXNQaW5jaCA9IGZhbHNlO1xuXG4gICAgaWYgKF9pc0RyYWdnaW5nKGUpKSB7XG4gICAgICBfdG91Y2hTdGFydEhhbmRsZXIoZSk7XG4gICAgfSBlbHNlIGlmIChfaXNQaW5jaGluZyhlKSkge1xuICAgICAgdmFyIHRvdWNoMSA9IGUudG91Y2hlc1swXSxcbiAgICAgICAgdG91Y2gyID0gZS50b3VjaGVzWzFdLFxuICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgcG9pbnQxID0gd2luVG9DYW52YXModG91Y2gxLmNsaWVudFgsIHRvdWNoMS5jbGllbnRZKSxcbiAgICAgICAgcG9pbnQyID0gd2luVG9DYW52YXModG91Y2gyLmNsaWVudFgsIHRvdWNoMi5jbGllbnRZKTtcblxuICAgICAgLy8gX2lzUGluY2ggPSB0cnVlO1xuICAgICAgZGlzdGFuY2UgPSBNYXRoLnNxcnQoTWF0aC5wb3cocG9pbnQyLnggLSBwb2ludDEueCwgMikgKyBNYXRoLnBvdyhwb2ludDIueSAtIHBvaW50MS55LCAyKSk7XG5cbiAgICAgIF9waW5jaFJhdGlvID0gX3NjYWxlIC8gZGlzdGFuY2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25Ub3VjaG1vdmUoZSkge1xuICAgIGlmICh0aGF0LmRyYXdNb2RlID09PSAnaW1nJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0b3VjaCA9IGUudG91Y2hlc1swXTtcblxuICAgIC8vIOaYr+WQpuaLluaLveWIsOS6hui+ueeVjFxuICAgIHZhciBpc0JvdW5kYXJ5O1xuICAgIHZhciBkcmFnZ2luZ0RpcmVjdGlvbjtcblxuICAgIGlmIChfaXNEcmFnZ2luZyhlKSkge1xuICAgICAgaWYgKCFfdG91Y2hTdGFydCkge1xuICAgICAgICBfdG91Y2hTdGFydEhhbmRsZXIoZSk7XG4gICAgICB9XG4gICAgICBkcmFnZ2luZ0RpcmVjdGlvbiA9IF9nZXREcmFnZ2luZ0RpcmVjdGlvbihfdG91Y2hTdGFydCwgdG91Y2gpO1xuXG4gICAgICBpc0JvdW5kYXJ5ID1cbiAgICAgICAgKGRyYWdnaW5nRGlyZWN0aW9uID09PSAnYicgJiYgX2lzQm91bmRhcnkoJ2InKSkgfHxcbiAgICAgICAgKGRyYWdnaW5nRGlyZWN0aW9uID09PSAndCcgJiYgX2lzQm91bmRhcnkoJ3QnKSkgfHxcbiAgICAgICAgKGRyYWdnaW5nRGlyZWN0aW9uID09PSAncicgJiYgX2lzQm91bmRhcnkoJ3InKSkgfHxcbiAgICAgICAgKGRyYWdnaW5nRGlyZWN0aW9uID09PSAnbCcgJiYgX2lzQm91bmRhcnkoJ2wnKSk7XG5cbiAgICAgIGlmICghaXNCb3VuZGFyeSB8fCBfZGVmYXVsdHMuaGFzQm91bmNpbmcpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyDmi5bmi71cbiAgICAgIGlmIChcbiAgICAgICAgTWF0aC5hYnModG91Y2guY2xpZW50WCAtIF90b3VjaFN0YXJ0LmN4KSA+IDMgfHxcbiAgICAgICAgTWF0aC5hYnModG91Y2guY2xpZW50WSAtIF90b3VjaFN0YXJ0LmN5KSA+IDNcbiAgICAgICkge1xuICAgICAgICBfdG91Y2hNb3ZlSGFuZGxlcihlKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKF9pc1BpbmNoaW5nKGUpKSB7XG4gICAgICAvLyDnvKnmlL5cbiAgICAgIF90b3VjaFBpbmNoSGFuZGxlcihlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvblRvdWNoZW5kKGUpIHtcbiAgICBfdG91Y2hFbmRIYW5kbGVyKGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3RvdWNoU3RhcnRIYW5kbGVyKGUpIHtcbiAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF0sXG4gICAgICBwb3MgPSB3aW5Ub0NhbnZhcyh0b3VjaC5jbGllbnRYLCB0b3VjaC5jbGllbnRZKTtcblxuICAgIF90b3VjaFN0YXJ0ID0ge1xuICAgICAgeDogcG9zLngsXG4gICAgICB5OiBwb3MueSxcbiAgICAgIGN4OiB0b3VjaC5jbGllbnRYLFxuICAgICAgY3k6IHRvdWNoLmNsaWVudFksXG4gICAgICB0aW1lOiBEYXRlLm5vdygpLFxuICAgIH07XG4gIH1cblxuICAvLyDmi5bmi71cbiAgZnVuY3Rpb24gX3RvdWNoTW92ZUhhbmRsZXIoZSkge1xuICAgIHZhciB0b3VjaCA9IGUudG91Y2hlc1swXSxcbiAgICAgIHBvcyA9IHdpblRvQ2FudmFzKHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpLFxuICAgICAgb2Zmc2V0WCA9IChwb3MueCAtIF90b3VjaFN0YXJ0LngpICogX3BpeGVsUmF0aW8sXG4gICAgICBvZmZzZXRZID0gKHBvcy55IC0gX3RvdWNoU3RhcnQueSkgKiBfcGl4ZWxSYXRpbyxcbiAgICAgIG92ZXJmbG93U2l6ZSA9IGdldE1vdmVPdmVyZmxvdygpLFxuICAgICAgZXhwZWN0WCA9IF94ICsgb2Zmc2V0WCxcbiAgICAgIGV4cGVjdFkgPSBfeSArIG9mZnNldFk7XG5cbiAgICBpZiAoIV9pc1BpbmNoKSB7XG4gICAgICBfdG91Y2hTdGFydC54ID0gcG9zLng7XG4gICAgICBfdG91Y2hTdGFydC55ID0gcG9zLnk7XG5cbiAgICAgIC8vIOawtOW5s+aWueWQkei2heWHuuaLluaLveiMg+WbtFxuICAgICAgaWYgKGV4cGVjdFggPD0gX3hSYW5nZVswXSB8fCBleHBlY3RYID49IF94UmFuZ2VbMV0pIHtcbiAgICAgICAgaWYgKF9kZWZhdWx0cy5oYXNCb3VuY2luZyA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBpZiAoZXhwZWN0WCA8PSBfeFJhbmdlWzBdKSB7XG4gICAgICAgICAgICBfeCA9IF94UmFuZ2VbMF07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF94ID0gX3hSYW5nZVsxXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8g5aaC5p6c5pyJ5by55oCn5pWI5p6c77yM5YiZ5re75Yqg5LiA5Liq4oCc6Zi75Yqb4oCdXG4gICAgICAgICAgX3ggKz0gKG9mZnNldFggKiBNYXRoLmFicyhfY2FudmFzLndpZHRoIC8gMiAtIG92ZXJmbG93U2l6ZS54KSkgLyBfY2FudmFzLndpZHRoIC8gMjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3ggKz0gb2Zmc2V0WDtcbiAgICAgIH1cblxuICAgICAgLy8g5Z6C55u05pa55ZCR6LaF5Ye65ouW5ou96IyD5Zu0XG4gICAgICBpZiAoZXhwZWN0WSA8PSBfeVJhbmdlWzBdIHx8IGV4cGVjdFkgPj0gX3lSYW5nZVsxXSkge1xuICAgICAgICBpZiAoX2RlZmF1bHRzLmhhc0JvdW5jaW5nID09PSBmYWxzZSkge1xuICAgICAgICAgIGlmIChleHBlY3RZIDw9IF95UmFuZ2VbMF0pIHtcbiAgICAgICAgICAgIF95ID0gX3lSYW5nZVswXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX3kgPSBfeVJhbmdlWzFdO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDlpoLmnpzmnInlvLnmgKfmlYjmnpzvvIzliJnmt7vliqDkuIDkuKrigJzpmLvlipvigJ1cbiAgICAgICAgICBfeSArPSAob2Zmc2V0WSAqIE1hdGguYWJzKF9jYW52YXMuaGVpZ2h0IC8gMiAtIG92ZXJmbG93U2l6ZS55KSkgLyBfY2FudmFzLmhlaWdodCAvIDI7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF95ICs9IG9mZnNldFk7XG4gICAgICB9XG5cbiAgICAgIF9kcmF3KCk7XG4gICAgfVxuICB9XG5cbiAgLy8g57yp5pS+XG4gIGZ1bmN0aW9uIF90b3VjaFBpbmNoSGFuZGxlcihlKSB7XG4gICAgLy9cbiAgICB2YXIgdG91Y2gxID0gZS50b3VjaGVzWzBdLFxuICAgICAgdG91Y2gyID0gZS50b3VjaGVzWzFdLFxuICAgICAgcG9pbnQxID0gd2luVG9DYW52YXModG91Y2gxLmNsaWVudFgsIHRvdWNoMS5jbGllbnRZKSxcbiAgICAgIHBvaW50MiA9IHdpblRvQ2FudmFzKHRvdWNoMi5jbGllbnRYLCB0b3VjaDIuY2xpZW50WSksXG4gICAgICBzY2FsZSxcbiAgICAgIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHBvaW50Mi54IC0gcG9pbnQxLngsIDIpICsgTWF0aC5wb3cocG9pbnQyLnkgLSBwb2ludDEueSwgMikpLFxuICAgICAgY2VudGVyO1xuXG4gICAgdmFyIHNjYWxlT3ZlcmZsb3csIC8vIOe8qeaUvueahOi2heWHuumHj++8jOWmguaenOS4uiAwIO+8jOivtOaYjue8qeaUvuayoeaciei2heWHuiBfc2NhbGVCZXR3ZWVuXG4gICAgICBzY2FsZU92ZXJmbG93TWF4LCAvLyDnvKnmlL7lhYHorrjnmoTmnIDlpKfotoXlh7rph49cbiAgICAgIG92ZXJmbG93UmF0aW87IC8vIOW9k+e8qeaUvui2heWHuiBfc2NhbGVCZXR3ZWVuIOaXtu+8jOe7mee8qeaUvuS4gOS4qua2iOWHj+mHj++8jOS7pei+vuWIsOW8ueaAp+aViOaenFxuXG4gICAgX2lzUGluY2ggPSB0cnVlOyAvLyDpmLLmraLnvKnmlL7lkI7mlL7lvIDmiYvmjIfvvIzkuIDmoLnmiYvmjIflhYjmlL7lvIDvvIznhLblkI7op6blj5Hmi5bliqggLS0+IOWPkeeUn+WBj+enu1xuXG4gICAgc2NhbGUgPSBfcGluY2hSYXRpbyAqIGRpc3RhbmNlO1xuXG4gICAgc2NhbGVPdmVyZmxvdyA9IGdldFNjYWxlT3ZlcmZsb3coc2NhbGUpO1xuICAgIHNjYWxlT3ZlcmZsb3dNYXggPSBfc2NhbGVCZXR3ZWVuWzBdIC8gMjtcbiAgICBvdmVyZmxvd1JhdGlvID1cbiAgICAgIChNYXRoLmFicyhzY2FsZU92ZXJmbG93KSA+IHNjYWxlT3ZlcmZsb3dNYXhcbiAgICAgICAgPyAxXG4gICAgICAgIDogTWF0aC5hYnMoc2NhbGVPdmVyZmxvdykgLyBzY2FsZU92ZXJmbG93TWF4KSAvIDI7XG5cbiAgICBzY2FsZSA9XG4gICAgICBzY2FsZSAtXG4gICAgICAoX2RlZmF1bHRzLmhhc0JvdW5jaW5nID8gKHNjYWxlT3ZlcmZsb3cgPyBzY2FsZU92ZXJmbG93ICogb3ZlcmZsb3dSYXRpbyA6IDApIDogc2NhbGVPdmVyZmxvdyk7XG5cbiAgICAvLyAy5omL5oyH57yp5pS+55qE5Lit5b+D54K5XG4gICAgcGluY2hDZW50ZXIgPSBjZW50ZXIgPSB7XG4gICAgICB4OiAoKHBvaW50MS54ICsgcG9pbnQyLngpIC8gMikgKiBfcGl4ZWxSYXRpbyxcbiAgICAgIHk6ICgocG9pbnQxLnkgKyBwb2ludDIueSkgLyAyKSAqIF9waXhlbFJhdGlvLFxuICAgIH07XG5cbiAgICAvLyDlm7rlrprkuK3lv4PngrlcbiAgICBfeCA9IGNlbnRlci54IC0gKHNjYWxlIC8gX3NjYWxlKSAqIChjZW50ZXIueCAtIF94KTtcbiAgICBfeSA9IGNlbnRlci55IC0gKHNjYWxlIC8gX3NjYWxlKSAqIChjZW50ZXIueSAtIF95KTtcblxuICAgIC8vIOacgOWQjumHjee7mFxuICAgIGlmIChzY2FsZSAhPT0gX3NjYWxlKSB7XG4gICAgICBfc2NhbGUgPSBzY2FsZTsgLy8g6YeN5paw6K6+572u5q+U5L6LXG4gICAgICBzZXRNb3ZlUmFuZ2UoKTsgLy8g6K6+572u5ouW5ou955qE6IyD5Zu0XG4gICAgICBfZHJhdygpOyAvLyDph43nu5hcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfdG91Y2hFbmRIYW5kbGVyKGUpIHtcbiAgICB2YXIgdG91Y2ggPSBlLmNoYW5nZWRUb3VjaGVzWzBdO1xuXG4gICAgaWYgKFxuICAgICAgX3RvdWNoU3RhcnQgJiZcbiAgICAgIERhdGUubm93KCkgLSBfdG91Y2hTdGFydC50aW1lIDwgX2RlZmF1bHRzLmNsaWNrRGVsYXkgJiZcbiAgICAgIE1hdGguYWJzKHRvdWNoLmNsaWVudFggLSBfdG91Y2hTdGFydC5jeCkgPCA2ICYmXG4gICAgICBNYXRoLmFicyh0b3VjaC5jbGllbnRZIC0gX3RvdWNoU3RhcnQuY3kpIDwgNlxuICAgICkge1xuICAgICAgLy8g54K55Ye7XG4gICAgICBfY2xpY2tIYW5kbGVyKGUpO1xuICAgIH1cblxuICAgIC8vIOWbnuS9jVxuICAgIHN0cmFpZ2h0ZW4oZSk7XG4gIH1cblxuICAvLyDngrnlh7vkuovku7blpITnkIZcbiAgLy8g6L+U5Zue55qE5Z2Q5qCH5piv55u45a+55LqO5Zu+54mH5bem5LiK6KeS55qE5Z2Q5qCHXG4gIGZ1bmN0aW9uIF9jbGlja0hhbmRsZXIoZSkge1xuICAgIHZhciB0b3VjaCA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XG4gICAgdmFyIHBvcyA9IHdpblRvQ2FudmFzKHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpO1xuXG4gICAgLy8g6L2s5o2i55yf5q2j55qE5Z2Q5qCH77yM6KaB6K6h566X4oCc5YGP56e76YeP77yM57yp5pS+5q+U5ZKM5YOP57Sg5q+U4oCdXG4gICAgdmFyIGNvb3JkaW5hdGUgPSB7XG4gICAgICB4OiAoKChwb3MueCAtIF94IC8gX3BpeGVsUmF0aW8pIC8gX3NjYWxlKSAqIF9waXhlbFJhdGlvKS50b0ZpeGVkKDEpLFxuICAgICAgeTogKCgocG9zLnkgLSBfeSAvIF9waXhlbFJhdGlvKSAvIF9zY2FsZSkgKiBfcGl4ZWxSYXRpbykudG9GaXhlZCgxKSxcbiAgICB9O1xuXG4gICAgdmFyIGNsaWNrUG9pbnQgPSBnZXRDbGlja1BvaW50KGNvb3JkaW5hdGUpO1xuXG4gICAgLy8g6L6T5YWl5qGG5by556qX55qE5Y+C5pWwXG4gICAgdmFyIGlucHV0UG9wdXBTaXplID0gaXNJbnB1dFNob3cgPyBfZ2V0SW5wdXRQb3B1cFNpemUoKSA6IG51bGwsXG4gICAgICBpbnB1dFBvcHVwUG9zID0gaXNJbnB1dFNob3cgPyBfZ2V0SW5wdXRQb3B1cFBvcygpIDogbnVsbCwgLy8g6L6T5YWl5qGG5by556qX55qE5L2N572uXG4gICAgICBpbnB1dFBvcHVwRGlmZiA9IGlzSW5wdXRTaG93XG4gICAgICAgID8geyB4OiBwb3MueCAtIGlucHV0UG9wdXBQb3MueCwgeTogcG9zLnkgLSBpbnB1dFBvcHVwUG9zLnkgfVxuICAgICAgICA6IG51bGwsIC8vIOeCueWHu+eahOW8ueeql+S9jee9rlxuICAgICAgY2xpY2tJbnB1dEluZGV4OyAvLyDngrnlh7vnmoTovpPlhaXmoYYgaW5kZXhcblxuICAgIC8vIOmUruebmOeahOWPguaVsFxuICAgIHZhciBrZXlib3JhZFNpemUgPSB7IHc6IDI0MCwgaDogMTgwIH0sXG4gICAgICBrZXlib3JhZFBvcyA9IGlzS2V5Ym9hcmRTaG93ID8gX2dldEtleWJvcmFkUG9zKCkgOiBudWxsLCAvLyDplK7nm5jnmoTkvY3nva5cbiAgICAgIGtleWJvcmFkRGlmZiA9IGlzS2V5Ym9hcmRTaG93ID8geyB4OiBwb3MueCAtIGtleWJvcmFkUG9zLngsIHk6IHBvcy55IC0ga2V5Ym9yYWRQb3MueSB9IDogbnVsbCwgLy8g54K55Ye755qE5Z2Q5qCH55u45a+55LqO6ZSu55uY55qE5L2N572uXG4gICAgICBjbGlja0tleWJvcmFkSW5kZXg7IC8vIOeCueWHu+eahOmUruebmOaMiemSruW6j+WPt1xuXG4gICAgdmFyIGJ0blIgPSAzMjsgLy8g5oyJ6ZKu55u05b6EXG5cbiAgICB2YXIgcG9pbnRzQXJyLCBpc1BvaW50RW1wdHk7XG5cbiAgICB2YXIgY2xpY2tUeXBlO1xuXG4gICAgdmFyIHJlc3VsdDtcblxuICAgIC8vIOWIpOaWreeCueWHu+eahOWGheWuue+8jOenu+mZpOWSjOS/neWtmOaMiemSrueahOeDreWMuuavlOWunumZheeahOaMiemSruWkpzEw5YOP57SgXG4gICAgaWYgKFxuICAgICAgaW5wdXRQb3B1cFNpemUgJiZcbiAgICAgIGlucHV0UG9wdXBEaWZmLnggPiA1ICYmXG4gICAgICBpbnB1dFBvcHVwRGlmZi54IDwgaW5wdXRQb3B1cFNpemUudyAtIDUgJiZcbiAgICAgIGlucHV0UG9wdXBEaWZmLnkgPiAwICYmXG4gICAgICBpbnB1dFBvcHVwRGlmZi55IDwgaW5wdXRQb3B1cFNpemUuaFxuICAgICkge1xuICAgICAgY2xpY2tUeXBlID0gJ2lucHV0JztcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgaW5wdXRQb3B1cERpZmYgJiZcbiAgICAgIGlucHV0UG9wdXBEaWZmLnggPiAtYnRuUiAtIDIwICYmXG4gICAgICBpbnB1dFBvcHVwRGlmZi54IDwgMCAmJlxuICAgICAgaW5wdXRQb3B1cERpZmYueSA+IChpbnB1dFBvcHVwU2l6ZS5oIC0gYnRuUiAtIDEwKSAvIDIgJiZcbiAgICAgIGlucHV0UG9wdXBEaWZmLnkgPCAoaW5wdXRQb3B1cFNpemUuaCArIGJ0blIgKyAxMCkgLyAyXG4gICAgKSB7XG4gICAgICBjbGlja1R5cGUgPSAncmVtb3ZlJztcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgaW5wdXRQb3B1cERpZmYgJiZcbiAgICAgIGlucHV0UG9wdXBEaWZmLnggPiBpbnB1dFBvcHVwU2l6ZS53ICYmXG4gICAgICBpbnB1dFBvcHVwRGlmZi54IDwgaW5wdXRQb3B1cFNpemUudyArIDIwICsgYnRuUiAmJlxuICAgICAgaW5wdXRQb3B1cERpZmYueSA+IChpbnB1dFBvcHVwU2l6ZS5oIC0gYnRuUiAtIDEwKSAvIDIgJiZcbiAgICAgIGlucHV0UG9wdXBEaWZmLnkgPCAoaW5wdXRQb3B1cFNpemUuaCArIGJ0blIgKyAxMCkgLyAyXG4gICAgKSB7XG4gICAgICBjbGlja1R5cGUgPSAnc2F2ZSc7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIGtleWJvcmFkRGlmZiAmJlxuICAgICAga2V5Ym9yYWREaWZmLnggPiAwICYmXG4gICAgICBrZXlib3JhZERpZmYueCA8IGtleWJvcmFkU2l6ZS53ICYmXG4gICAgICBrZXlib3JhZERpZmYueSA+IDAgJiZcbiAgICAgIGtleWJvcmFkRGlmZi55IDwga2V5Ym9yYWRTaXplLmhcbiAgICApIHtcbiAgICAgIGNsaWNrVHlwZSA9ICdrZXlib3JhZCc7XG4gICAgfSBlbHNlIGlmICghXy5pc0VtcHR5KGNsaWNrUG9pbnQpKSB7XG4gICAgICBjbGlja1R5cGUgPSAncG9pbnQnO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBjb29yZGluYXRlLnggPj0gMCAmJlxuICAgICAgY29vcmRpbmF0ZS54IDw9IF9pbWcud2lkdGggJiZcbiAgICAgIGNvb3JkaW5hdGUueSA+PSAwICYmXG4gICAgICBjb29yZGluYXRlLnkgPD0gX2ltZy5oZWlnaHRcbiAgICApIHtcbiAgICAgIGNsaWNrVHlwZSA9ICdpbWcnO1xuICAgIH1cblxuICAgIC8qXG4gICAgICog54K55Ye75LqL5Lu26KeE5YiZ77yaXG4gICAgICog57yW6L6R5qih5byP77yaXG4gICAgICogMS4g6ZSu55uY5omT5byA55qE5pe25YCZ77yM54K55Ye74oCc6ZSu55uY4oCd77yM4oCc6L6T5YWl5qGG4oCd5ZKM4oCc5pON5L2c5oyJ6ZKu4oCd77yI56e76Zmk5ZKM5L+d5a2Y77yM5LiL5ZCM77yJ5omN5pyJ5Y+N5bqUXG4gICAgICogMi4g6ZSu55uY5YWz6Zet55qE5pe25YCZ77yaXG4gICAgICogICDngrnlh7vigJzovpPlhaXmoYbigJ3lj6/ku6XogZrnhKbor6XovpPlhaXmoYbvvIzlubbmiZPlvIDplK7nm5hcbiAgICAgKiAgIOeCueWHu+KAnOaTjeS9nOaMiemSruKAne+8jOaJp+ihjOaTjeS9nO+8iOenu+mZpOaIluS/neWtmO+8ie+8jOWQjuivpeeCueWkseWOu+eEpueCuVxuICAgICAqICAg54K55Ye74oCc5qCH6K6w54K54oCd5YiZ6K+l54K56I635Y+W54Sm54K577yM54K55Ye74oCc56m655m94oCd5YiZ5paw5bu654K544CC5Y6f5pyJ55qE6auY5Lqu54K55aSx5Y6754Sm54K577yM5aaC5p6c5piv56m654K577yI5LiA5Liq5YC86YO95rKh6L6T5YWl77yJ77yM5YiZ56e76Zmk6K+l54K5XG4gICAgICpcbiAgICAgKiDmn6XnnIvmqKHlvI/vvJpcbiAgICAgKiAxLiDngrnlh7vigJzmoIforrDngrnigJ3nmoTml7blgJnvvIzpq5jkuq7or6XngrnvvIzlvLnlh7rmlbDlgLzlvLnnqpdcbiAgICAgKiAyLiDngrnlh7vigJznqbrnmb3igJ3vvIzlvZPliY3igJzpq5jkuq7ngrnigJ3np7vpmaTpq5jkuq7nirbmgIFcbiAgICAgKi9cblxuICAgIGlmICh0aGF0LmRyYXdNb2RlICE9PSAnaW1nJykge1xuICAgICAgaWYgKGlzRWRpdE1vZGUpIHtcbiAgICAgICAgLy8g57yW6L6R5qih5byPXG5cbiAgICAgICAgLy8g5Yik5pat54K55Ye755qE5piv5ZCm5piv5by556qXXG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdpbnB1dCcpIHtcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiB0b2RvIG1lYXN1cmUgZW5kXG4gICAgICAgICAgICog55So5pa55rOV6I635Y+WIGNsaWNrSW5wdXRJbmRleFxuICAgICAgICAgICBjbGlja0lucHV0SW5kZXggPSBkcmF3U2VydmVyLl9jbGlja0hhbmRsZXJfZ2V0SW5wdXRJbmRleChkcmF3UG9pbnRJbmRleCwgaW5wdXRQb3B1cERpZmYpXG4gICAgICAgICAgICogKi9cbiAgICAgICAgICBjbGlja0lucHV0SW5kZXggPSBkcmF3U2VydmVyLl9jbGlja0hhbmRsZXJfZ2V0SW5wdXRJbmRleChkcmF3UG9pbnRJbmRleCwgaW5wdXRQb3B1cERpZmYpO1xuXG4gICAgICAgICAgLy8gaWYgKHBhc3NyYXRlTW9kZSA9PT0gMSkge1xuICAgICAgICAgIC8vICAgY2xpY2tJbnB1dEluZGV4ID0gTWF0aC5mbG9vcigoaW5wdXRQb3B1cERpZmYueCAtIDUpIC8gODApO1xuICAgICAgICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAyKSB7XG4gICAgICAgICAgLy8gICAvLyDmnoHlt67nrpfms5VcbiAgICAgICAgICAvLyAgIGNsaWNrSW5wdXRJbmRleCA9XG4gICAgICAgICAgLy8gICAgIChNYXRoLmZsb29yKGlucHV0UG9wdXBEaWZmLnggLyA2OSkgKyBNYXRoLmZsb29yKGlucHV0UG9wdXBEaWZmLnkgLyAzMykgKiAzKSAlIDJcbiAgICAgICAgICAvLyAgICAgICA/ICcnXG4gICAgICAgICAgLy8gICAgICAgOiAoTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi54IC8gNjkpICsgTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi55IC8gMzMpICogMykgLyAyO1xuICAgICAgICAgIC8vICAgY2xpY2tJbnB1dEluZGV4ID0gY2xpY2tJbnB1dEluZGV4IDwgMCB8fCBjbGlja0lucHV0SW5kZXggPiA0ID8gJycgOiBjbGlja0lucHV0SW5kZXg7XG4gICAgICAgICAgLy8gfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDMpIHtcbiAgICAgICAgICAvLyAgIGNsaWNrSW5wdXRJbmRleCA9IE1hdGguZmxvb3IoKGlucHV0UG9wdXBEaWZmLnggLSA1KSAvIDY5KTtcbiAgICAgICAgICAvLyB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgICAgIC8vICAgLy8g5pqC5LiN5pSv5oyB5p6B5beuK+iuvuiuoeWAvFxuICAgICAgICAgIC8vIH0gZWxzZSBpZiAoXG4gICAgICAgICAgLy8gICBwYXNzcmF0ZU1vZGUgPT09IDUgfHxcbiAgICAgICAgICAvLyAgIHBhc3NyYXRlTW9kZSA9PT0gNiB8fFxuICAgICAgICAgIC8vICAgcGFzc3JhdGVNb2RlID09PSAxNCB8fFxuICAgICAgICAgIC8vICAgcGFzc3JhdGVNb2RlID09PSAxNVxuICAgICAgICAgIC8vICkge1xuICAgICAgICAgIC8vICAgLy8g6auY5a6977yM5byA6Ze06L+b5rexXG4gICAgICAgICAgLy8gICBpZiAoaW5wdXRQb3B1cERpZmYueCA+IDUwKSB7XG4gICAgICAgICAgLy8gICAgIGNsaWNrSW5wdXRJbmRleCA9XG4gICAgICAgICAgLy8gICAgICAgTWF0aC5mbG9vcigoaW5wdXRQb3B1cERpZmYueCAtIDUwKSAvIDY5KSArIE1hdGguZmxvb3IoaW5wdXRQb3B1cERpZmYueSAvIDQ0KSAqIDM7XG4gICAgICAgICAgLy8gICB9XG4gICAgICAgICAgLy8gfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgICAgICAvLyAgIC8vIOaWueato+aAp1xuICAgICAgICAgIC8vICAgY2xpY2tJbnB1dEluZGV4ID0gTWF0aC5mbG9vcigoaW5wdXRQb3B1cERpZmYueCAtIDUpIC8gNjkpO1xuICAgICAgICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICAgICAgLy8gICAvKipcbiAgICAgICAgICAvLyAgICAqIHRvZG8gbWVhc3VyZVxuICAgICAgICAgIC8vICAgICog5Li65LuA5LmI6KeC5oSf6ZyA6KaB6L+Z5qC35aSE55CGXG4gICAgICAgICAgLy8gICAgKiAqL1xuICAgICAgICAgIC8vICAgLy8g5oSf5a6YXG4gICAgICAgICAgLy8gICBjbGlja0lucHV0SW5kZXggPSBNYXRoLmZsb29yKChpbnB1dFBvcHVwRGlmZi54IC0gNSkgLyA3NSkgPyAwIDogMTtcbiAgICAgICAgICAvLyAgIF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWxbZHJhd1BvaW50SW5kZXhdLnZhbCA9IGNsaWNrSW5wdXRJbmRleDtcbiAgICAgICAgICAvL1xuICAgICAgICAgIC8vICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyAgICAgaW5wdXRCbHVyKGxpZ2h0SW5wdXRJbmRleCk7XG4gICAgICAgICAgLy8gICAgIHBvaW50Qmx1cigpO1xuICAgICAgICAgIC8vXG4gICAgICAgICAgLy8gICAgIF9kcmF3KCk7XG4gICAgICAgICAgLy8gICB9LCAyMDApO1xuICAgICAgICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxMiB8fCBwYXNzcmF0ZU1vZGUgPT09IDEzKSB7XG4gICAgICAgICAgLy8gICBjbGlja0lucHV0SW5kZXggPSBNYXRoLmZsb29yKChpbnB1dFBvcHVwRGlmZi54IC0gNSkgLyA2OSk7XG4gICAgICAgICAgLy8gfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE2KSB7XG4gICAgICAgICAgLy8gICAvLyDlh4Dpq5jvvIjmnIDlpKflgY/lt67lgLwr5p6B5beu5YC877yJXG4gICAgICAgICAgLy8gICBpZiAoaW5wdXRQb3B1cERpZmYueSA+IDExMCkge1xuICAgICAgICAgIC8vICAgICBjbGlja0lucHV0SW5kZXggPSA1O1xuICAgICAgICAgIC8vICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyAgICAgY2xpY2tJbnB1dEluZGV4ID1cbiAgICAgICAgICAvLyAgICAgICAoTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi54IC8gNjkpICsgTWF0aC5mbG9vcihpbnB1dFBvcHVwRGlmZi55IC8gMzMpICogMykgJSAyXG4gICAgICAgICAgLy8gICAgICAgICA/ICcnXG4gICAgICAgICAgLy8gICAgICAgICA6IChNYXRoLmZsb29yKGlucHV0UG9wdXBEaWZmLnggLyA2OSkgKyBNYXRoLmZsb29yKGlucHV0UG9wdXBEaWZmLnkgLyAzMykgKiAzKSAvIDI7XG4gICAgICAgICAgLy8gICAgIGNsaWNrSW5wdXRJbmRleCA9IGNsaWNrSW5wdXRJbmRleCA8IDAgfHwgY2xpY2tJbnB1dEluZGV4ID4gNSA/ICcnIDogY2xpY2tJbnB1dEluZGV4O1xuICAgICAgICAgIC8vICAgfVxuICAgICAgICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxNykge1xuICAgICAgICAgIC8vICAgaWYgKGlucHV0UG9wdXBEaWZmLnkgPiA1MCkge1xuICAgICAgICAgIC8vICAgICBjbGlja0lucHV0SW5kZXggPSAzO1xuICAgICAgICAgIC8vICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyAgICAgY2xpY2tJbnB1dEluZGV4ID0gTWF0aC5mbG9vcigoaW5wdXRQb3B1cERpZmYueCAtIDUpIC8gODApO1xuICAgICAgICAgIC8vICAgfVxuICAgICAgICAgIC8vIH1cbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBlbmRcbiAgICAgICAgICAgKiAqL1xuICAgICAgICAgIGlmIChoYXNWYWwoY2xpY2tJbnB1dEluZGV4KSkge1xuICAgICAgICAgICAgaW5wdXRGb2N1cyhjbGlja0lucHV0SW5kZXgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOeCueWHu+enu+mZpOaMiemSrlxuICAgICAgICBpZiAoY2xpY2tUeXBlID09PSAncmVtb3ZlJykge1xuICAgICAgICAgIGlucHV0Qmx1cihsaWdodElucHV0SW5kZXgsIHRydWUpO1xuICAgICAgICAgIF9kZWZhdWx0cy5kYXRhID0gTWVhc3VyZURldGFpbE1vZGVsLmRlbFBvaW50KF9kZWZhdWx0cy5kYXRhLCBkcmF3UG9pbnRJbmRleCk7XG4gICAgICAgICAgcG9pbnRCbHVyKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDngrnlh7vkv53lrZjmjInpkq5cbiAgICAgICAgaWYgKGNsaWNrVHlwZSA9PT0gJ3NhdmUnKSB7XG4gICAgICAgICAgaW5wdXRCbHVyKGxpZ2h0SW5wdXRJbmRleCk7XG4gICAgICAgICAgcG9pbnRCbHVyKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDliKTmlq3ngrnlh7vnmoTmmK/lkKbmmK/plK7nm5hcbiAgICAgICAgaWYgKGNsaWNrVHlwZSA9PT0gJ2tleWJvcmFkJykge1xuICAgICAgICAgIGNsaWNrS2V5Ym9yYWRJbmRleCA9XG4gICAgICAgICAgICBNYXRoLmZsb29yKGtleWJvcmFkRGlmZi54IC8gNjApICsgTWF0aC5mbG9vcihrZXlib3JhZERpZmYueSAvIDQ1KSAqIDQ7XG4gICAgICAgICAgc2V0UG9pbnRWYWwoY2xpY2tLZXlib3JhZEluZGV4KTtcbiAgICAgICAgICBzZXRLZXlib3JhZEFjdGlvbihjbGlja0tleWJvcmFkSW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g54K55Ye75qCH6K6w54K5XG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdwb2ludCcpIHtcbiAgICAgICAgICBpbnB1dEJsdXIobGlnaHRJbnB1dEluZGV4KTtcblxuICAgICAgICAgIC8vIOWmguaenOW9k+WJjemrmOS6rueCueayoeaciei+k+WFpeS7u+S9leWAvO+8jOWImeWIoOmZpOivpeeCuVxuICAgICAgICAgIHBvaW50c0FyciA9IGdldFRhcmdldFBvaW50cyhkcmF3UG9pbnRJbmRleCk7XG4gICAgICAgICAgaXNQb2ludEVtcHR5ID0gIV8uc29tZShwb2ludHNBcnIsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgICAgICByZXR1cm4gaGFzVmFsKHBvaW50LnZhbCkgfHwgaGFzVmFsKHBvaW50LnNldFZhbCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoaXNQb2ludEVtcHR5ICYmIGhhc1ZhbChkcmF3UG9pbnRJbmRleCkpIHtcbiAgICAgICAgICAgIF9kZWZhdWx0cy5kYXRhID0gTWVhc3VyZURldGFpbE1vZGVsLmRlbFBvaW50KF9kZWZhdWx0cy5kYXRhLCBkcmF3UG9pbnRJbmRleCk7XG4gICAgICAgICAgICBfZGVmYXVsdHMucG9pbnRzID0gZ2V0RHJhd1BvaW50cyhfZGVmYXVsdHMuZGF0YSk7XG4gICAgICAgICAgICBjbGlja1BvaW50ID0gZ2V0Q2xpY2tQb2ludChjb29yZGluYXRlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyDlpoLmnpzngrnlh7vnmoTmmK/kuKrmoIforrDngrnvvIzogZrnhKZcbiAgICAgICAgICBwb2ludEZvY3VzKGNsaWNrUG9pbnQuaW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g54K55Ye755qE5piv56m655m95Zyw5pa577yM5re75Yqg5qCH6K6w54K577yM5bm26IGa54SmXG4gICAgICAgIGlmIChjbGlja1R5cGUgPT09ICdpbWcnKSB7XG4gICAgICAgICAgaW5wdXRCbHVyKGxpZ2h0SW5wdXRJbmRleCk7XG5cbiAgICAgICAgICAvLyDlpoLmnpzlvZPliY3pq5jkuq7ngrnmsqHmnInovpPlhaXku7vkvZXlgLzvvIzliJnliKDpmaTor6XngrlcbiAgICAgICAgICBwb2ludHNBcnIgPSBnZXRUYXJnZXRQb2ludHMoZHJhd1BvaW50SW5kZXgpO1xuICAgICAgICAgIGlzUG9pbnRFbXB0eSA9ICFfLnNvbWUocG9pbnRzQXJyLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICAgICAgcmV0dXJuIGhhc1ZhbChwb2ludC52YWwpIHx8IGhhc1ZhbChwb2ludC5zZXRWYWwpO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYgKGlzUG9pbnRFbXB0eSAmJiBoYXNWYWwoZHJhd1BvaW50SW5kZXgpKSB7XG4gICAgICAgICAgICBfZGVmYXVsdHMuZGF0YSA9IE1lYXN1cmVEZXRhaWxNb2RlbC5kZWxQb2ludChfZGVmYXVsdHMuZGF0YSwgZHJhd1BvaW50SW5kZXgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9kZWZhdWx0cy5kYXRhID0gTWVhc3VyZURldGFpbE1vZGVsLmFkZFBvaW50KF9kZWZhdWx0cy5kYXRhLCB7XG4gICAgICAgICAgICB4OiBjb29yZGluYXRlLngsXG4gICAgICAgICAgICB5OiBjb29yZGluYXRlLnksXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgX2RlZmF1bHRzLnBvaW50cyA9IGdldERyYXdQb2ludHMoX2RlZmF1bHRzLmRhdGEpO1xuXG4gICAgICAgICAgcG9pbnRGb2N1cyhfZGVmYXVsdHMucG9pbnRzLmxlbmd0aCAtIDEsIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDmn6XnnIvmqKHlvI9cblxuICAgICAgICAvLyDlpoLmnpzngrnlh7vnmoTmmK/kuKrmoIforrDngrnvvIzogZrnhKZcbiAgICAgICAgaWYgKGNsaWNrVHlwZSA9PT0gJ3BvaW50Jykge1xuICAgICAgICAgIGNsaWNrUG9pbnQgPSBnZXRDbGlja1BvaW50KGNvb3JkaW5hdGUpO1xuXG4gICAgICAgICAgaWYgKGNsaWNrUG9pbnQucG9pbnRJZCkge1xuICAgICAgICAgICAgX2RlZmF1bHRzLm9uQ2xpY2tQb2ludCAmJiBfZGVmYXVsdHMub25DbGlja1BvaW50KGNsaWNrUG9pbnQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwb2ludEZvY3VzKGNsaWNrUG9pbnQuaW5kZXgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOeCueWHu+epuueZve+8jOWOu+aOieW9k+WJjemrmOS6rlxuICAgICAgICBpZiAoY2xpY2tUeXBlID09PSAnaW1nJykge1xuICAgICAgICAgIHBvaW50Qmx1cigpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8g54K55Ye755qE5Zue6LCD5Ye95pWw77yM5rKh5pyJ5a6e6ZmF5L2c55So77yM5pqC55WZXG4gICAgcmVzdWx0ID0ge1xuICAgICAgdHlwZTogIV8uaXNFbXB0eShjbGlja1BvaW50KSA/ICdwb2ludCcgOiAnJyxcbiAgICAgIHBvczogcG9zLFxuICAgICAgeDogY29vcmRpbmF0ZS54LFxuICAgICAgeTogY29vcmRpbmF0ZS55LFxuICAgICAgcG9pbnQ6IGNsaWNrUG9pbnQsXG4gICAgICBidG46ICcnLFxuICAgIH07XG4gICAgX2RlZmF1bHRzLmNsaWNrQ2FsbGJhY2sgJiYgX2RlZmF1bHRzLmNsaWNrQ2FsbGJhY2socmVzdWx0KTtcblxuICAgIF9kcmF3KCk7XG4gIH1cblxuICAvLyDmoIfngrnojrflj5bnhKbngrlcbiAgZnVuY3Rpb24gcG9pbnRGb2N1cyhpbmRleCwgb3BlbktleWJvYXJkKSB7XG4gICAgdmFyIG1vdmVYLCBtb3ZlWTtcblxuICAgIHZhciBpbnB1dFBvcHVwUG9zLCBpbnB1dFBvcHVwU2l6ZTtcblxuICAgIHZhciBpbnB1dFBvcHVwV2lkdGhQbHVzID0gaGFzT3BlcmFCdG4gPyA0MiA6IDA7XG5cbiAgICB2YXIgbWFya1BvaW50cztcblxuICAgIC8vIOiuvue9rumrmOS6rueCuVxuICAgIGRyYXdQb2ludEluZGV4ID0gaW5kZXg7XG4gICAgbGlnaHRSaXBwbGVUaW1lcyA9IDA7XG5cbiAgICBtYXJrUG9pbnRzID0gZ2V0TWFya1BvaW50cyhkcmF3UG9pbnRJbmRleCk7XG5cbiAgICAvLyDnp7vpmaQgd2FybmluZyDmlYjmnpxcbiAgICBfLmVhY2gobWFya1BvaW50cywgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgIGRlbGV0ZSBwb2ludC5pc1dhcm5pbmc7XG4gICAgfSk7XG4gICAgLy8g6YeN5paw6K6h566X5piv5ZCm5pyJ6K2m56S654K5XG4gICAgaGFzV2FybmluZyA9IF8uc29tZShfZGVmYXVsdHMucG9pbnRzLCB7IGlzV2FybmluZzogdHJ1ZSB9KTtcblxuICAgIGlucHV0UG9wdXBQb3MgPSBfZ2V0SW5wdXRQb3B1cFBvcygpO1xuICAgIGlucHV0UG9wdXBTaXplID0gX2dldElucHV0UG9wdXBTaXplKCk7XG5cbiAgICBpZiAoaW5wdXRQb3B1cFBvcy54IC0gaW5wdXRQb3B1cFdpZHRoUGx1cyA8IDApIHtcbiAgICAgIG1vdmVYID0gKGlucHV0UG9wdXBQb3MueCAtIGlucHV0UG9wdXBXaWR0aFBsdXMpICogX3BpeGVsUmF0aW87XG4gICAgfSBlbHNlIGlmIChpbnB1dFBvcHVwUG9zLnggKyBpbnB1dFBvcHVwU2l6ZS53ICsgaW5wdXRQb3B1cFdpZHRoUGx1cyA+IF9kZWZhdWx0cy53aWR0aCkge1xuICAgICAgbW92ZVggPVxuICAgICAgICAoaW5wdXRQb3B1cFBvcy54ICsgaW5wdXRQb3B1cFNpemUudyArIGlucHV0UG9wdXBXaWR0aFBsdXMgLSBfZGVmYXVsdHMud2lkdGgpICogX3BpeGVsUmF0aW87XG4gICAgfVxuXG4gICAgaWYgKGlucHV0UG9wdXBQb3MueSA8IDApIHtcbiAgICAgIG1vdmVZID0gaW5wdXRQb3B1cFBvcy55ICogX3BpeGVsUmF0aW87XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHRvZG8gbWVhc3VyZSBlbmRcbiAgICAgKiDmm7/mjaIgZ2V0SW5wdXRMZW5ndGhcbiAgICAgZ2V0SW5wdXRMZW5ndGggPSBkcmF3U2VydmVyLmdldElucHV0TGVuZ3RoKCk7XG4gICAgICogKi9cbiAgICBpbnB1dExlbmd0aCA9IGRyYXdTZXJ2ZXIuZ2V0SW5wdXRMZW5ndGgoX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGEpO1xuXG4gICAgLy8gaWYgKHBhc3NyYXRlTW9kZSA9PT0gMSkge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSBfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YS5sZW5ndGg7XG4gICAgLy8gfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDIpIHtcbiAgICAvLyAgIGlucHV0TGVuZ3RoID0gNTtcbiAgICAvLyB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSAyO1xuICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSA0KSB7XG4gICAgLy8gICBpbnB1dExlbmd0aCA9IDA7XG4gICAgLy8gfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDUpIHtcbiAgICAvLyAgIGlucHV0TGVuZ3RoID0gNjtcbiAgICAvLyB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gNiB8fCBwYXNzcmF0ZU1vZGUgPT09IDE1KSB7XG4gICAgLy8gICAvLyDlvIDpl7Tov5vmt7HjgIHlvIDpl7Tov5vmt7HvvIjluKbmnoHlt67vvIlcbiAgICAvLyAgIGlucHV0TGVuZ3RoID0gNjtcbiAgICAvLyB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gNykge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSAzO1xuICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxMikge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSAzO1xuICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSAyO1xuICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxNCkge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSA5O1xuICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxNikge1xuICAgIC8vICAgaW5wdXRMZW5ndGggPSA2O1xuICAgIC8vIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxNykge1xuICAgIC8vICAgLy8g5Z2h5bqmXG4gICAgLy8gICBpbnB1dExlbmd0aCA9IDQ7XG4gICAgLy8gfVxuICAgIC8qKlxuICAgICAqIGVuZFxuICAgICAqICovXG4gICAgaXNJbnB1dFNob3cgPSB0cnVlO1xuICAgIF9tb3ZlVG8oX3ggLSAobW92ZVggfHwgMCksIF95IC0gKG1vdmVZIHx8IDApKTtcblxuICAgIGlmIChpc0VkaXRNb2RlICYmIG9wZW5LZXlib2FyZCAmJiBwYXNzcmF0ZU1vZGUgIT09IDgpIHtcbiAgICAgIGlucHV0Rm9jdXMobGlnaHRJbnB1dEluZGV4IHx8IDApO1xuICAgIH1cblxuICAgIHNldE1vdmVSYW5nZSgpO1xuICB9XG5cbiAgLy8g5qCH54K55aSx5Y6754Sm54K5XG4gIGZ1bmN0aW9uIHBvaW50Qmx1cigpIHtcbiAgICBkcmF3UG9pbnRJbmRleCA9IG51bGw7XG5cbiAgICBpc0lucHV0U2hvdyA9IGZhbHNlO1xuICAgIGlzS2V5Ym9hcmRTaG93ID0gZmFsc2U7XG5cbiAgICAvLyDorqHnrpflsZ7mgKdcbiAgICBpZiAoX2RlZmF1bHRzLmRhdGEubW9kZSAhPT0gJ3ZpZXcnKSB7XG4gICAgICBfLmVhY2goX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGEsIGZ1bmN0aW9uKHByb2JsZW0pIHtcbiAgICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnByb2JsZW1IYW5kbGUocHJvYmxlbSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgX2RlZmF1bHRzLnBvaW50cyA9IGdldERyYXdQb2ludHMoX2RlZmF1bHRzLmRhdGEpO1xuICAgIF9kZWZhdWx0cy5vbkNoYW5nZSAmJiBfZGVmYXVsdHMub25DaGFuZ2UoKTtcbiAgfVxuXG4gIC8vIOi+k+WFpeahhuiOt+WPlueEpueCuVxuICBmdW5jdGlvbiBpbnB1dEZvY3VzKGluZGV4KSB7XG4gICAgdmFyIG1vdmVYLCBtb3ZlWTtcblxuICAgIHZhciBrZXlib3JhZFBvcyA9IF9nZXRLZXlib3JhZFBvcygpLFxuICAgICAga2V5Ym9yYWRTaXplID0geyB3OiAyNDAsIGg6IDE4MCB9O1xuXG4gICAgaWYgKGtleWJvcmFkUG9zLnggPCAwKSB7XG4gICAgICBtb3ZlWCA9IGtleWJvcmFkUG9zLnggKiBfcGl4ZWxSYXRpbztcbiAgICB9IGVsc2UgaWYgKGtleWJvcmFkUG9zLnggKyBrZXlib3JhZFNpemUudyA+IF9kZWZhdWx0cy53aWR0aCkge1xuICAgICAgbW92ZVggPSAoa2V5Ym9yYWRQb3MueCArIGtleWJvcmFkU2l6ZS53IC0gX2RlZmF1bHRzLndpZHRoKSAqIF9waXhlbFJhdGlvO1xuICAgIH1cblxuICAgIGlmIChrZXlib3JhZFBvcy55ICsga2V5Ym9yYWRTaXplLmggPiBfZGVmYXVsdHMuaGVpZ2h0KSB7XG4gICAgICBtb3ZlWSA9IChrZXlib3JhZFBvcy55ICsga2V5Ym9yYWRTaXplLmggLSBfZGVmYXVsdHMuaGVpZ2h0KSAqIF9waXhlbFJhdGlvO1xuICAgIH1cblxuICAgIGxpZ2h0SW5wdXRJbmRleCA9IGluZGV4O1xuXG4gICAgaGFzUHJldklucHV0ID0gaW5kZXggPiAwO1xuICAgIGhhc05leHRJbnB1dCA9IGluZGV4IDwgaW5wdXRMZW5ndGggLSAxO1xuXG4gICAgaWYgKGlzRWRpdE1vZGUgJiYgcGFzc3JhdGVNb2RlICE9PSA4KSB7XG4gICAgICBpc0tleWJvYXJkU2hvdyA9IHRydWU7XG4gICAgICBfbW92ZVRvKF94IC0gKG1vdmVYIHx8IDApLCBfeSAtIChtb3ZlWSB8fCAwKSk7XG4gICAgfVxuXG4gICAgLy8g6Ieq5Yqo6KGl5YWo6K6+6K6h5YC8XG4gICAgYXV0b0lucHV0U2V0VmFsKCk7XG4gICAgc2V0TW92ZVJhbmdlKCk7XG4gIH1cblxuICAvLyDovpPlhaXmoYblpLHljrvnhKbngrlcbiAgZnVuY3Rpb24gaW5wdXRCbHVyKGluZGV4LCBub0NoYW5nZSkge1xuICAgIGluZGV4ID0gaW5kZXggPT09IHVuZGVmaW5lZCA/IGxpZ2h0SW5wdXRJbmRleCA6IGluZGV4O1xuICAgIHZhciB0YXJnZXRQb2ludCA9IGdldFRhcmdldFBvaW50KGRyYXdQb2ludEluZGV4LCBpbmRleCk7XG4gICAgdmFyIHJhbmdlID0gWy05OTk5OTk5Ljk5OTk5LCA5OTk5OTk5Ljk5OTk5XTtcbiAgICAvKipcbiAgICAgKiB0b2RvIG1lYXN1cmUgZW5kXG4gICAgICog5pu/5o2i5aSE55CG6L+H56iLIOi/memHjOacrOadpeS4jeW6lOivpeWGmTE255qE5aSE55CGIOWQjue7reS8mOWMliB0b2RvIG9wdGltaXplXG4gICAgIGRyYXdTZXJ2ZXIuaW5wdXRCbHVyKCk7XG4gICAgICogKi9cbiAgICBkcmF3U2VydmVyLmlucHV0Qmx1cigpO1xuXG4gICAgLy8gaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTYpIHtcbiAgICAvLyAgIC8vIOWHgOmrmO+8iOacgOWkp+WBj+W3ruWAvCvmnoHlt67lgLzvvIkg6ZyA6KaBIOe7n+S4gOiuvuiuoeWAvFxuICAgIC8vICAgXy5lYWNoKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhLCBmdW5jdGlvbihwcm9ibGVtKSB7XG4gICAgLy8gICAgIC8vIOe7n+S4gOiuvuiuoeWAvFxuICAgIC8vICAgICBsZXQgaW5wdXRNYXAgPSBfLmdyb3VwQnkocHJvYmxlbS5yZWFsaXR5VmFsIHx8IFtdLCBmdW5jdGlvbihwb2ludCkge1xuICAgIC8vICAgICAgIHJldHVybiBwb2ludC5hcmVhO1xuICAgIC8vICAgICB9KTtcbiAgICAvLyAgICAgZm9yIChsZXQga2V5IGluIGlucHV0TWFwKSB7XG4gICAgLy8gICAgICAgaWYgKGlucHV0TWFwLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAvLyAgICAgICAgIF8uZWFjaChpbnB1dE1hcFtrZXldLCBmdW5jdGlvbihhcmVhSW5wdXQsIGluZGV4KSB7XG4gICAgLy8gICAgICAgICAgIGlmICghYXJlYUlucHV0LmlzRmljdCAmJiBpbmRleCAhPT0gMCkge1xuICAgIC8vICAgICAgICAgICAgIC8vIOmdnuepuuWAvFxuICAgIC8vICAgICAgICAgICAgIGFyZWFJbnB1dC5zZXRWYWwgPSBpbnB1dE1hcFtrZXldWzBdLnNldFZhbDtcbiAgICAvLyAgICAgICAgICAgfVxuICAgIC8vICAgICAgICAgfSk7XG4gICAgLy8gICAgICAgfVxuICAgIC8vICAgICB9XG4gICAgLy8gICB9KTtcbiAgICAvLyB9XG4gICAgLyoqXG4gICAgICogZW5kXG4gICAgICogKi9cbiAgICAvLyDpqozor4HovpPlhaXojIPlm7RcbiAgICBpZiAodGFyZ2V0UG9pbnQgJiYgdGFyZ2V0UG9pbnQucG9pbnRzKSB7XG4gICAgICBfLmVhY2godGFyZ2V0UG9pbnQucG9pbnRzLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICBwb2ludC5zZXRWYWwgPSBpc05hTihwb2ludC5zZXRWYWwpXG4gICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICA6IGhhc1ZhbChwb2ludC5zZXRWYWwpXG4gICAgICAgICAgICA/IGZvcm1hdEZsb2F0VmFsRGlzcGxheShwb2ludC5zZXRWYWwpXG4gICAgICAgICAgICA6ICcnO1xuXG4gICAgICAgICAgaWYgKHBvaW50LnNldFZhbCA9PT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAocG9pbnQuc2V0VmFsIDwgcmFuZ2VbMF0pIHtcbiAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IHJhbmdlWzBdO1xuICAgICAgICAgIH0gZWxzZSBpZiAocG9pbnQuc2V0VmFsID4gcmFuZ2VbMV0pIHtcbiAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IHJhbmdlWzFdO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwb2ludC52YWwgPSBpc05hTihwb2ludC52YWwpXG4gICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICA6IGhhc1ZhbChwb2ludC52YWwpXG4gICAgICAgICAgICA/IGZvcm1hdEZsb2F0VmFsRGlzcGxheShwb2ludC52YWwpXG4gICAgICAgICAgICA6ICcnO1xuXG4gICAgICAgICAgaWYgKHBvaW50LnZhbCA9PT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAocG9pbnQudmFsIDwgcmFuZ2VbMF0pIHtcbiAgICAgICAgICAgIHBvaW50LnZhbCA9IHJhbmdlWzBdO1xuICAgICAgICAgIH0gZWxzZSBpZiAocG9pbnQudmFsID4gcmFuZ2VbMV0pIHtcbiAgICAgICAgICAgIHBvaW50LnZhbCA9IHJhbmdlWzFdO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8g6K6h566X5bGe5oCnXG4gICAgXy5lYWNoKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhLCBmdW5jdGlvbihwcm9ibGVtKSB7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucG9pbnRzSGFuZGxlKHByb2JsZW0pO1xuICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnByb2JsZW1IYW5kbGUocHJvYmxlbSk7XG4gICAgfSk7XG5cbiAgICBsaWdodElucHV0SW5kZXggPSBudWxsO1xuICAgIGlzS2V5Ym9hcmRTaG93ID0gZmFsc2U7XG5cbiAgICAhbm9DaGFuZ2UgJiYgX2RlZmF1bHRzLm9uQ2hhbmdlICYmIF9kZWZhdWx0cy5vbkNoYW5nZSgpO1xuICB9XG5cbiAgLy8g5qC55o2u54K55Ye755qE6ZSu55uY5oyJ6ZKu77yM5p2l5aSE55CG5qCH6K6w54K5XG4gIGZ1bmN0aW9uIHNldFBvaW50VmFsKGtleWJvcmFkSW5kZXgpIHtcbiAgICB2YXIgY3VySW5kZXggPSBsaWdodElucHV0SW5kZXg7XG5cbiAgICBpZiAoIWhhc1ZhbChkcmF3UG9pbnRJbmRleCkgfHwgIWhhc1ZhbChsaWdodElucHV0SW5kZXgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFBvaW50ID0gZ2V0VGFyZ2V0UG9pbnQoZHJhd1BvaW50SW5kZXgsIGxpZ2h0SW5wdXRJbmRleCk7XG5cbiAgICB2YXIgYnRuVGV4dCA9IGtleWJvYXJkVGV4dFtrZXlib3JhZEluZGV4XTtcblxuICAgIGlmICh0YXJnZXRQb2ludCAmJiB0YXJnZXRQb2ludC5wb2ludHMpIHtcbiAgICAgIF8uZWFjaCh0YXJnZXRQb2ludC5wb2ludHMsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIGlmIChpc05hTihidG5UZXh0KSkge1xuICAgICAgICAgIGlmIChidG5UZXh0ID09PSAn5Yig6ZmkJykge1xuICAgICAgICAgICAgaWYgKHRhcmdldFBvaW50LmlzU2V0VmFsKSB7XG4gICAgICAgICAgICAgIC8vIHBvaW50LnNldFZhbCA9ICcnO1xuICAgICAgICAgICAgICBwb2ludC5zZXRWYWwgPSBwb2ludC5zZXRWYWwudG9TdHJpbmcoKS5zdWJzdHIoMCwgcG9pbnQuc2V0VmFsLnRvU3RyaW5nKCkubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvLyBwb2ludC52YWwgPSAnJztcbiAgICAgICAgICAgICAgcG9pbnQudmFsID0gcG9pbnQudmFsLnRvU3RyaW5nKCkuc3Vic3RyKDAsIHBvaW50LnZhbC50b1N0cmluZygpLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoYnRuVGV4dCA9PT0gJy0nKSB7XG4gICAgICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICAgICAgaWYgKCFoYXNWYWwocG9pbnQuc2V0VmFsKSkge1xuICAgICAgICAgICAgICAgIHBvaW50LnNldFZhbCA9ICctJztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKCFoYXNWYWwocG9pbnQudmFsKSkge1xuICAgICAgICAgICAgICAgIHBvaW50LnZhbCA9ICctJztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoYnRuVGV4dCA9PT0gJy4nKSB7XG4gICAgICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICAgICAgaWYgKGhhc1ZhbChwb2ludC5zZXRWYWwpICYmIHBhcnNlRmxvYXQocG9pbnQuc2V0VmFsKSA9PT0gcGFyc2VJbnQocG9pbnQuc2V0VmFsKSkge1xuICAgICAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IHBvaW50LnNldFZhbCArIGJ0blRleHQ7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChoYXNWYWwocG9pbnQudmFsKSAmJiBwYXJzZUZsb2F0KHBvaW50LnZhbCkgPT09IHBhcnNlSW50KHBvaW50LnZhbCkpIHtcbiAgICAgICAgICAgICAgICBwb2ludC52YWwgPSBwb2ludC52YWwgKyBidG5UZXh0O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChidG5UZXh0ID09PSAn5LiK5LiA6aG5Jykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coaGFzUHJldklucHV0LCAnaGFzUHJldklucHV0Jyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjdXJJbmRleCAtIDEsICdjdXJJbmRleCAtIDFjdXJJbmRleCAtIDFjdXJJbmRleCAtIDEnKTtcbiAgICAgICAgICAgIGlmIChoYXNQcmV2SW5wdXQpIHtcbiAgICAgICAgICAgICAgaW5wdXRCbHVyKGxpZ2h0SW5wdXRJbmRleCk7XG4gICAgICAgICAgICAgIGlucHV0Rm9jdXMoY3VySW5kZXggLSAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKGJ0blRleHQgPT09ICfkuIvkuIDpobknKSB7XG4gICAgICAgICAgICBpZiAoaGFzTmV4dElucHV0KSB7XG4gICAgICAgICAgICAgIGlucHV0Qmx1cihsaWdodElucHV0SW5kZXgpO1xuICAgICAgICAgICAgICBpbnB1dEZvY3VzKGN1ckluZGV4ICsgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChidG5UZXh0ID09PSAn5YWz6ZetJykge1xuICAgICAgICAgICAgaW5wdXRCbHVyKGxpZ2h0SW5wdXRJbmRleCk7XG5cbiAgICAgICAgICAgIGlzS2V5Ym9hcmRTaG93ID0gZmFsc2U7XG4gICAgICAgICAgICBsaWdodElucHV0SW5kZXggPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwpIHtcbiAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IChoYXNWYWwocG9pbnQuc2V0VmFsKSA/IHBvaW50LnNldFZhbCA6ICcnKSArIGJ0blRleHQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBvaW50LnZhbCA9IHBvaW50LnZhbCArIGJ0blRleHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8g5aaC5p6c6L6T5YWl55qE5LqL6K6+6K6h5YC877yM5YiZ6KaB6K6w5L2P6L6T5YWl55qE57uT5p6cXG4gICAgICBpZiAodGFyZ2V0UG9pbnQuaXNTZXRWYWwgJiYgdGFyZ2V0UG9pbnQucG9pbnRzICYmIHRhcmdldFBvaW50LnBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgc2F2ZUlucHV0U2V0VmFsKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8g6ZSu55uY5oyJ6ZKu5pi+56S654K55Ye754q25oCBXG4gIGZ1bmN0aW9uIHNldEtleWJvcmFkQWN0aW9uKGtleWJvcmFkSW5kZXgpIHtcbiAgICBpZiAoa2V5Ym9yYWRBY3Rpb25EYXRhW2tleWJvcmFkSW5kZXhdKSB7XG4gICAgICBjbGVhclRpbWVvdXQoa2V5Ym9yYWRBY3Rpb25EYXRhW2tleWJvcmFkSW5kZXhdKTtcbiAgICB9XG5cbiAgICBrZXlib3JhZEFjdGlvbkRhdGFba2V5Ym9yYWRJbmRleF0gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgZGVsZXRlIGtleWJvcmFkQWN0aW9uRGF0YVtrZXlib3JhZEluZGV4XTtcbiAgICAgIF9kcmF3KCk7XG4gICAgfSwgMzAwKTtcblxuICAgIF9kcmF3KCk7XG4gIH1cblxuICAvLyDkv53lrZjovpPlhaXnmoTorr7orqHlgLxcbiAgZnVuY3Rpb24gc2F2ZUlucHV0U2V0VmFsKCkge1xuICAgIC8qKlxuICAgICAqIHRvZG8gbWVhc3VyZVxuICAgICAqIOaWueazleabv+aNoiBzYXZlSW5wdXRTZXRWYWxcbiAgICAgKiByZXR1cm4gZHJhd1NlcnZlci5zYXZlSW5wdXRTZXRWYWwoZHJhd1BvaW50SW5kZXgsIHByZXZTZXRWYWwpO1xuICAgICAqICovXG4gICAgcmV0dXJuIGRyYXdTZXJ2ZXIuc2F2ZUlucHV0U2V0VmFsKGRyYXdQb2ludEluZGV4LCBwcmV2U2V0VmFsKTtcblxuICAgIHZhciBwb2ludHMgPSBnZXRUYXJnZXRQb2ludHMoZHJhd1BvaW50SW5kZXgpLFxuICAgICAgY2hlY2tpdGVtX2lkID0gX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0uY2hlY2tJdGVtLmlkLFxuICAgICAgbWVhc3VyZV9pdGVtID0gX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ubWVhc3VyZV9pdGVtO1xuXG4gICAgaWYgKFszLCA0XS5zb21lKGl0ZW0gPT4gaXRlbSA9PT0gcGFzc3JhdGVNb2RlKSkge1xuICAgICAgLy8g5qCH5YeGK+iuvuiuoeWAvO+8jOaegeW3rivorr7orqHlgLxcbiAgICAgIHByZXZTZXRWYWxbY2hlY2tpdGVtX2lkXSA9IHtcbiAgICAgICAgdmFsOiBwb2ludHNbMF0uc2V0VmFsLFxuICAgICAgfTtcbiAgICB9IGVsc2UgaWYgKFs1LCA2LCAxNCwgMTVdLnNvbWUoaXRlbSA9PiBpdGVtID09PSBwYXNzcmF0ZU1vZGUpKSB7XG4gICAgICAvLyDpq5jlrr3jgIHlvIDpl7Tov5vmt7HjgIHpq5jlrr3ljprjgIHlvIDpl7Tov5vmt7HvvIjluKbmnoHlt67vvIlcbiAgICAgIHByZXZTZXRWYWxbY2hlY2tpdGVtX2lkXSA9IHt9O1xuXG4gICAgICBfLmVhY2gobWVhc3VyZV9pdGVtLCBmdW5jdGlvbihsYWJlbCkge1xuICAgICAgICB2YXIgZmlyc3RQb2ludCA9IF8uZmluZChwb2ludHMsIHsgbGFiZWw6IGxhYmVsIH0pIHx8IHt9LFxuICAgICAgICAgIGl0ZW1TZXRWYWwgPSBmaXJzdFBvaW50LnNldFZhbDtcblxuICAgICAgICBwcmV2U2V0VmFsW2NoZWNraXRlbV9pZF1bJ3ZhbC0nICsgbGFiZWxdID0gaXRlbVNldFZhbDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIOi+k+WFpeahhuiOt+WPlueEpueCue+8jOWIpOaWreaYr+WQpumcgOimgeiHquWKqOWhq+WGmeW9k+WJjea1i+WMuueahOiuvuiuoeWAvOS4uuKAnOS4iuS4gOasoei+k+WFpeeahOKAneiuvuiuoeWAvFxuICBmdW5jdGlvbiBhdXRvSW5wdXRTZXRWYWwoKSB7XG4gICAgLyoqXG4gICAgICogdG9kbyBtZWFzdXJlIGVuZFxuICAgICAqIOabv+aNouaWueazlSBhdXRvSW5wdXRTZXRWYWxcbiAgICAgcmV0dXJuIGRyYXdTZXJ2ZXIuYXV0b0lucHV0U2V0VmFsKGRyYXdQb2ludEluZGV4LCBwcmV2U2V0VmFsKTtcbiAgICAgKiAqL1xuICAgIHJldHVybiBkcmF3U2VydmVyLmF1dG9JbnB1dFNldFZhbChkcmF3UG9pbnRJbmRleCwgcHJldlNldFZhbCk7XG5cbiAgICB2YXIgY2hlY2tpdGVtX2lkID0gX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0uY2hlY2tJdGVtLmlkLFxuICAgICAgcG9pbnRzID0gZ2V0VGFyZ2V0UG9pbnRzKGRyYXdQb2ludEluZGV4KTtcblxuICAgIC8vIOS4iuS4gOasoei+k+WFpeeahOiuvuiuoeWAvFxuICAgIHZhciBwU2V0VmFsID0gcHJldlNldFZhbFtjaGVja2l0ZW1faWRdLFxuICAgICAgbmVlZFNldFZhbCA9IFszLCA0LCA1LCA2LCAxNCwgMTVdLnNvbWUoaXRlbSA9PiBpdGVtID09PSBwYXNzcmF0ZU1vZGUpLFxuICAgICAgLy8g5p+l5om+5piv5ZCm5pyJ5Li656m655qE6K6+6K6h5YC8XG4gICAgICBoYXNFbXB0eVNldFZhbCA9IF8uc29tZShwb2ludHMsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiAhaGFzVmFsKHBvaW50LnNldFZhbCk7XG4gICAgICB9KTtcblxuICAgIGlmIChuZWVkU2V0VmFsICYmIGhhc0VtcHR5U2V0VmFsICYmIHBTZXRWYWwgJiYgIV8uaXNFbXB0eShwU2V0VmFsKSkge1xuICAgICAgaWYgKFszLCA0XS5zb21lKGl0ZW0gPT4gaXRlbSA9PT0gcGFzc3JhdGVNb2RlKSkge1xuICAgICAgICAvLyDmma7pgJrmqKHlvI/vvIjmoIflh4Yr6K6+6K6h5YC877yM5p6B5beuK+iuvuiuoeWAvO+8iVxuICAgICAgICBpZiAoaGFzVmFsKHBTZXRWYWwudmFsKSkge1xuICAgICAgICAgIF8uZWFjaChwb2ludHMsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgICAgICBwb2ludC5zZXRWYWwgPSBwU2V0VmFsLnZhbDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8g6auY5a6944CB5byA6Ze06L+b5rex44CB6auY5a695Y6a44CB5byA6Ze06L+b5rex77yI5bim5p6B5beu77yJIOaooeW8j++8jOmcgOimgeWIhuWIq+WPluiuvuiuoeWAvFxuICAgICAgICBfLmVhY2gocG9pbnRzLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICAgIHZhciBpdGVtU2V0VmFsID0gcFNldFZhbFsndmFsJyArICctJyArIHBvaW50LmxhYmVsXTtcblxuICAgICAgICAgIGlmIChoYXNWYWwoaXRlbVNldFZhbCkpIHtcbiAgICAgICAgICAgIHBvaW50LnNldFZhbCA9IGl0ZW1TZXRWYWw7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKiDojrflj5blvZPliY3moIforrDngrnlr7nlupTnmoTmiYDmnInmmK/mtYvngrkgKi9cbiAgZnVuY3Rpb24gZ2V0TWFya1BvaW50cyhwSW5kZXgpIHtcbiAgICAvKipcbiAgICAgKiB0b2RvIG1lYXN1cmUgZW5kXG4gICAgICog5pu/5o2i5pa55rOVIGdldE1hcmtQb2ludHNcbiAgICAgcmV0dXJuIGRyYXdTZXJ2ZXIuZ2V0TWFya1BvaW50cyhwSW5kZXgpO1xuICAgICAqICovXG4gICAgcmV0dXJuIGRyYXdTZXJ2ZXIuZ2V0TWFya1BvaW50cyhwSW5kZXgpO1xuXG4gICAgdmFyIGxpZ2h0UG9pbnRzID0gW107IC8vIOW9k+WJjeaTjeS9nOeahOeCuVxuICAgIHZhciBwb2ludEFyZWE7XG5cbiAgICBpZiAoIWhhc1ZhbChwSW5kZXgpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBwb2ludEFyZWEgPSBfZGVmYXVsdHMucG9pbnRzW3BJbmRleF0uYXJlYTtcblxuICAgIGlmIChwYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgIC8vIGxpZ2h0UG9pbnRzID0gX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbaUluZGV4XS5yZWFsaXR5VmFsW3BJbmRleF07XG4gICAgICBfLmVhY2goX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGEsIGZ1bmN0aW9uKHByb2JsZW0pIHtcbiAgICAgICAgbGlnaHRQb2ludHMucHVzaChwcm9ibGVtLnJlYWxpdHlWYWxbcEluZGV4XSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgLy8g5p6B5beuXG4gICAgICBsaWdodFBvaW50cyA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgLy8g5qCH5YeGK+iuvuiuoeWAvFxuICAgICAgbGlnaHRQb2ludHMgPSBfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsW3BJbmRleF07XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGFzc3JhdGVNb2RlID09PSA1IHx8XG4gICAgICBwYXNzcmF0ZU1vZGUgPT09IDYgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTQgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTUgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTdcbiAgICApIHtcbiAgICAgIC8vIOmrmOWuve+8jOW8gOmXtOi/m+a3se+8jOmrmOWuveWOmuOAgeW8gOmXtOi/m+a3se+8iOW4puaegeW3ru+8iVxuICAgICAgbGlnaHRQb2ludHMgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgIGxpZ2h0UG9pbnRzID0gXy5maWx0ZXIoX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbCwgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50QXJlYTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICBsaWdodFBvaW50cyA9IF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWxbcEluZGV4XTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTIgfHwgcGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgbGlnaHRQb2ludHMgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE2KSB7XG4gICAgICAvLyDlh4Dpq5jvvIjmnIDlpKflgY/lt67lgLwr5p6B5beu5YC877yJXG4gICAgICBsaWdodFBvaW50cyA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAobGlnaHRQb2ludHMgJiYgIV8uaXNBcnJheShsaWdodFBvaW50cykpIHtcbiAgICAgIGxpZ2h0UG9pbnRzID0gW2xpZ2h0UG9pbnRzXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbGlnaHRQb2ludHM7XG4gIH1cblxuICAvKlxuICAgKiDojrflj5blvZPliY3mk43kvZznmoTlrp7mtYvngrlcbiAgICogcEluZGV4OiDpq5jkuq7moIforrDngrnnmoQgaW5kZXhcbiAgICogaUluZGV4OiDpq5jkuq7ovpPlhaXmoYbnmoQgaW5kZXhcbiAgICovXG4gIGZ1bmN0aW9uIGdldFRhcmdldFBvaW50KHBJbmRleCwgaUluZGV4KSB7XG4gICAgLyoqXG4gICAgICogdG9kbyBtZWFzdXJlIGVuZFxuICAgICAqIOaWueazleabv+aNoiBnZXRUYXJnZXRQb2ludFxuICAgICByZXR1cm4gZHJhd1NlcnZlci5nZXRUYXJnZXRQb2ludChwSW5kZXgsIGlJbmRleClcbiAgICAgKiAqL1xuICAgIHJldHVybiBkcmF3U2VydmVyLmdldFRhcmdldFBvaW50KHBJbmRleCwgaUluZGV4KTtcblxuICAgIHZhciBwb2ludHNBcnI7XG4gICAgdmFyIGxpZ2h0UG9pbnRzOyAvLyDlvZPliY3mk43kvZznmoTngrlcbiAgICB2YXIgcG9pbnRBcmVhO1xuICAgIHZhciBpc1NldFZhbElucHV0ID0gZmFsc2U7XG4gICAgdmFyIGxhYmVsQXJyO1xuXG4gICAgaWYgKCFoYXNWYWwocEluZGV4KSB8fCAhaGFzVmFsKGlJbmRleCkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGlmIChwYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgIGxpZ2h0UG9pbnRzID0gX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbaUluZGV4XS5yZWFsaXR5VmFsW3BJbmRleF07XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDIpIHtcbiAgICAgIC8vIOaegeW3rlxuICAgICAgcG9pbnRBcmVhID0gX2RlZmF1bHRzLnBvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICBwb2ludHNBcnIgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgICBsaWdodFBvaW50cyA9IHBvaW50c0FycltpSW5kZXhdO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAzKSB7XG4gICAgICAvLyDmoIflh4Yr6K6+6K6h5YC8XG4gICAgICBsaWdodFBvaW50cyA9IF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWxbcEluZGV4XTtcbiAgICAgIGlmIChpSW5kZXggPT09IDEpIHtcbiAgICAgICAgaXNTZXRWYWxJbnB1dCA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpc1NldFZhbElucHV0ID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGFzc3JhdGVNb2RlID09PSA1IHx8XG4gICAgICBwYXNzcmF0ZU1vZGUgPT09IDYgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTQgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTVcbiAgICApIHtcbiAgICAgIC8vIGlJbmRleFxuICAgICAgaWYgKHBhc3NyYXRlTW9kZSA9PT0gNSkge1xuICAgICAgICBsYWJlbEFyciA9IFsn6auYJywgJ+WuvSddO1xuICAgICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDYgfHwgcGFzc3JhdGVNb2RlID09PSAxNSkge1xuICAgICAgICBsYWJlbEFyciA9IFsn5byA6Ze0JywgJ+i/m+a3sSddO1xuICAgICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE0KSB7XG4gICAgICAgIGxhYmVsQXJyID0gWyfpq5gnLCAn5a69JywgJ+WOmiddO1xuICAgICAgfVxuXG4gICAgICBwb2ludEFyZWEgPSBfZGVmYXVsdHMucG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICB9KTtcblxuICAgICAgLy8g6K6+6K6h5YC855qEaW5kZXjntKLlvJVcbiAgICAgIHZhciBkZXNpZ25JbmRleEJvb2wgPSBpSW5kZXggPT09IDIgfHwgaUluZGV4ID09PSA1IHx8IGlJbmRleCA9PT0gODtcbiAgICAgIGlmIChkZXNpZ25JbmRleEJvb2wpIHtcbiAgICAgICAgaXNTZXRWYWxJbnB1dCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGxpZ2h0UG9pbnRzID0gXy5maWx0ZXIocG9pbnRzQXJyLCBmdW5jdGlvbihwb2ludCwgaW5kZXgpIHtcbiAgICAgICAgdmFyIGxhYmVsQm9vbCA9IGxhYmVsQXJyW01hdGguZmxvb3IoaUluZGV4IC8gMyldID09PSBwb2ludC5sYWJlbDtcbiAgICAgICAgcmV0dXJuIGxhYmVsQm9vbCAmJiAoZGVzaWduSW5kZXhCb29sIHx8IChpSW5kZXggJSAzKSAlIDIgPT09IGluZGV4ICUgMik7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gNykge1xuICAgICAgcG9pbnRBcmVhID0gX2RlZmF1bHRzLnBvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICBwb2ludHNBcnIgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG5cbiAgICAgIGxpZ2h0UG9pbnRzID0gcG9pbnRzQXJyW2lJbmRleF07XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDgpIHtcbiAgICAgIGxpZ2h0UG9pbnRzID0gX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbFtwSW5kZXhdO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSAxMiB8fCBwYXNzcmF0ZU1vZGUgPT09IDEzKSB7XG4gICAgICBwb2ludEFyZWEgPSBfZGVmYXVsdHMucG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICB9KTtcblxuICAgICAgbGlnaHRQb2ludHMgPSBwb2ludHNBcnJbaUluZGV4XTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTYpIHtcbiAgICAgIC8vICDlh4Dpq5jvvIjmnIDlpKflgY/lt67lgLwr5p6B5beu5YC877yJXG4gICAgICBwb2ludEFyZWEgPSBfZGVmYXVsdHMucG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgIHBvaW50c0FyciA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICB9KTtcbiAgICAgIGxpZ2h0UG9pbnRzID0gcG9pbnRzQXJyW2lJbmRleCA9PT0gNSA/IDAgOiBpSW5kZXhdO1xuICAgICAgaWYgKGlJbmRleCA9PT0gNSkge1xuICAgICAgICBpc1NldFZhbElucHV0ID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlzU2V0VmFsSW5wdXQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTcpIHtcbiAgICAgIC8vIOWdoeW6plxuICAgICAgcG9pbnRBcmVhID0gX2RlZmF1bHRzLnBvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICBwb2ludHNBcnIgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgICAvLyDorr7orqHlgLznmoRpbmRleOe0ouW8lVxuICAgICAgbGV0IGRlc2lnbkluZGV4Qm9vbCA9IGlJbmRleCA9PT0gMztcbiAgICAgIC8vIOWmguaenOaYr+i+k+WFpeiuvuiuoeWAvO+8jOWImei/lOWbnuWJjTPkuKrovpPlhaXmoYbvvIzlkKbliJnov5Tlm57lvZPliY3ovpPlhaXmoYZcbiAgICAgIGxpZ2h0UG9pbnRzID0gZGVzaWduSW5kZXhCb29sID8gcG9pbnRzQXJyIDogcG9pbnRzQXJyW2lJbmRleF07XG4gICAgICAvLyDliKTmlq3mmK/lkKbkuLrorr7orqHlgLxcbiAgICAgIGlmIChkZXNpZ25JbmRleEJvb2wpIHtcbiAgICAgICAgaXNTZXRWYWxJbnB1dCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGxpZ2h0UG9pbnRzICYmICFfLmlzQXJyYXkobGlnaHRQb2ludHMpKSB7XG4gICAgICBsaWdodFBvaW50cyA9IFtsaWdodFBvaW50c107XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBvaW50czogbGlnaHRQb2ludHMsXG4gICAgICBpc1NldFZhbDogaXNTZXRWYWxJbnB1dCxcbiAgICB9O1xuICB9XG5cbiAgLy8g6I635Y+W5b2T5YmN5pON5L2c55qE5LiA57uE54K5XG4gIGZ1bmN0aW9uIGdldFRhcmdldFBvaW50cyhwSW5kZXgpIHtcbiAgICAvKipcbiAgICAgKiB0b2RvIG1lYXN1cmUgZW5kXG4gICAgICog5pu/5o2i5pa55rOVIGdldFRhcmdldFBvaW50c1xuICAgICByZXR1cm4gZHJhd1NlcnZlci5nZXRUYXJnZXRQb2ludHMocEluZGV4KVxuICAgICAqICovXG4gICAgcmV0dXJuIGRyYXdTZXJ2ZXIuZ2V0VGFyZ2V0UG9pbnRzKHBJbmRleCk7XG5cbiAgICB2YXIgcG9pbnRBcmVhO1xuICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgIHBJbmRleCA9IGhhc1ZhbChwSW5kZXgpID8gcEluZGV4IDogZHJhd1BvaW50SW5kZXg7XG5cbiAgICBpZiAoIWhhc1ZhbChwSW5kZXgpKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIGlmIChwYXNzcmF0ZU1vZGUgPT09IDEpIHtcbiAgICAgIF8uZWFjaChfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YSwgZnVuY3Rpb24ocHJvYmxlbSkge1xuICAgICAgICBfLmVhY2gocHJvYmxlbS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCwgaW5kZXgpIHtcbiAgICAgICAgICBpZiAocEluZGV4ID09PSBpbmRleCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2gocG9pbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMikge1xuICAgICAgLy8g5p6B5beuXG4gICAgICBwb2ludEFyZWEgPSBfZGVmYXVsdHMucG9pbnRzW3BJbmRleF0uYXJlYTtcbiAgICAgIHJlc3VsdCA9IF8uZmlsdGVyKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnJlYWxpdHlWYWwsIGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC5hcmVhID09PSBwb2ludEFyZWE7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMykge1xuICAgICAgLy8g5qCH5YeGK+iuvuiuoeWAvFxuICAgICAgcmVzdWx0ID0gXy5maWx0ZXIoX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbCwgZnVuY3Rpb24ocG9pbnQsIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBwSW5kZXggPT09IGluZGV4O1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDQpIHtcbiAgICAgIC8vIOaegeW3rivorr7orqHlgLxcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGFzc3JhdGVNb2RlID09PSA1IHx8XG4gICAgICBwYXNzcmF0ZU1vZGUgPT09IDYgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTQgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTUgfHxcbiAgICAgIHBhc3NyYXRlTW9kZSA9PT0gMTdcbiAgICApIHtcbiAgICAgIC8vIOmrmOWuve+8jOW8gOmXtOi/m+a3se+8jOmrmOWuveWOmu+8jOW8gOmXtOi/m+a3se+8iOW4puaegeW3ru+8iVxuICAgICAgcG9pbnRBcmVhID0gX2RlZmF1bHRzLnBvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICByZXN1bHQgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDcpIHtcbiAgICAgIHBvaW50QXJlYSA9IF9kZWZhdWx0cy5wb2ludHNbcEluZGV4XS5hcmVhO1xuICAgICAgcmVzdWx0ID0gXy5maWx0ZXIoX2RlZmF1bHRzLmRhdGEucHJvYmxlbURhdGFbMF0ucmVhbGl0eVZhbCwgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHBvaW50LmFyZWEgPT09IHBvaW50QXJlYTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocGFzc3JhdGVNb2RlID09PSA4KSB7XG4gICAgICByZXN1bHQgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCwgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHBJbmRleCA9PT0gaW5kZXg7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHBhc3NyYXRlTW9kZSA9PT0gMTIgfHwgcGFzc3JhdGVNb2RlID09PSAxMykge1xuICAgICAgcG9pbnRBcmVhID0gX2RlZmF1bHRzLnBvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICByZXN1bHQgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChwYXNzcmF0ZU1vZGUgPT09IDE2KSB7XG4gICAgICAvLyAg5YeA6auY77yI5pyA5aSn5YGP5beu5YC8K+aegeW3ruWAvO+8iVxuICAgICAgcG9pbnRBcmVhID0gX2RlZmF1bHRzLnBvaW50c1twSW5kZXhdLmFyZWE7XG4gICAgICByZXN1bHQgPSBfLmZpbHRlcihfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YVswXS5yZWFsaXR5VmFsLCBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gcG9pbnQuYXJlYSA9PT0gcG9pbnRBcmVhO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8vIOenu+WKqOinhuWbvlxuICBmdW5jdGlvbiBfbW92ZVRvKHgsIHkpIHtcbiAgICBpZiAobW92ZURlc3QueCA9PT0gbnVsbCAmJiBtb3ZlRGVzdC55ID09PSBudWxsKSB7XG4gICAgICBtb3ZlRGVzdCA9IHsgeDogeCwgeTogeSB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAvKlxuICAgICAgICogbW92ZURlc3Qg5pyJ5YC86K+05piO5pyJ5LiA5LiqIG1vdmUg5Lu75Yqh5q2j5Zyo6L+b6KGM77yM5aaC5p6c5ZKM5paw55qE5paw55qE5Lu75Yqh5LiN5ZCM77yIeCx55LiN562J77yJ5YiZ6ZyA6KaB5ZCI5bm25Lu75Yqh77yM5ZCI5bm26KeE5YiZ77yaXG4gICAgICAgKiDlpoLmnpzmsLTlubPnp7vliqjmlrnlkJHnm7jlkIzvvIjlt6bmiJblj7PvvInvvIzliJnlj5bnp7vliqjot53nprvlpKfnmoTngrlcbiAgICAgICAqIOaWueWQkeS4jeWQjO+8jOWImeWPluaWsOeahOS7u+WKoVxuICAgICAgICog5Z6C55u05pa55ZCR5ZCM55CGXG4gICAgICAgKi9cblxuICAgICAgaWYgKG1vdmVEZXN0LnggIT09IHggfHwgbW92ZURlc3QueSAhPT0geSkge1xuICAgICAgICBpZiAobW92ZURlc3QueCA8IHgpIHtcbiAgICAgICAgICBtb3ZlRGVzdC54ID0geCA8PSBfeCA/IG1vdmVEZXN0LnggOiB4O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG1vdmVEZXN0LnggPSB4ID49IF94ID8gbW92ZURlc3QueCA6IHg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobW92ZURlc3QueSA8IHkpIHtcbiAgICAgICAgICBtb3ZlRGVzdC55ID0geSA8PSBfeSA/IG1vdmVEZXN0LnkgOiB5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG1vdmVEZXN0LnkgPSB5ID49IF95ID8gbW92ZURlc3QueSA6IHk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgeCA9IG1vdmVEZXN0Lng7XG4gICAgICB5ID0gbW92ZURlc3QueTtcbiAgICB9XG5cbiAgICBpZiAoeCAhPT0gX3ggfHwgeSAhPT0gX3kpIHtcbiAgICAgIGlzTW92aW5nID0gdHJ1ZTtcblxuICAgICAgY2xlYXJUaW1lb3V0KG1vdmVUaW1lcik7XG5cbiAgICAgIG1vdmVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIOebruagh+WAvFxuICAgICAgICB2YXIgZGlzY291bnQgPSAwLjUsXG4gICAgICAgICAgaGFzQ2hhbmdlID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKE1hdGguYWJzKHggLSBfeCkgPCAxKSB7XG4gICAgICAgICAgX3ggPSB4O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF94ICs9ICh4IC0gX3gpICogZGlzY291bnQ7XG4gICAgICAgICAgaGFzQ2hhbmdlID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChNYXRoLmFicyh5IC0gX3kpIDwgMSkge1xuICAgICAgICAgIF95ID0geTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfeSArPSAoeSAtIF95KSAqIGRpc2NvdW50O1xuICAgICAgICAgIGhhc0NoYW5nZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFzQ2hhbmdlKSB7XG4gICAgICAgICAgX21vdmVUbyh4LCB5KTtcbiAgICAgICAgICBfZHJhdygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlzTW92aW5nID0gZmFsc2U7XG4gICAgICAgICAgbW92ZURlc3QgPSB7IHg6IG51bGwsIHk6IG51bGwgfTtcbiAgICAgICAgfVxuICAgICAgfSwgMjApO1xuICAgIH1cbiAgfVxuXG4gIC8vIOiOt+WPlueCueWHu+eahOagh+eCuVxuICBmdW5jdGlvbiBnZXRDbGlja1BvaW50KGNvb3JkaW5hdGUpIHtcbiAgICB2YXIgcmVzdWx0ID0ge30sXG4gICAgICBuZWFyZXN0ID0gX2RlZmF1bHRzLnBvaW50UmFkaXVzICogX2RlZmF1bHRzLnBvaW50UmF0aW8gKyAxO1xuXG4gICAgX2RlZmF1bHRzLnBvaW50cy5mb3JFYWNoKGZ1bmN0aW9uKHYpIHtcbiAgICAgIHZhciBkaXN0YW5jZSA9IE1hdGguc3FydChcbiAgICAgICAgTWF0aC5wb3coTWF0aC5hYnMoY29vcmRpbmF0ZS54IC0gdi54KSwgMikgKyBNYXRoLnBvdyhNYXRoLmFicyhjb29yZGluYXRlLnkgLSB2LnkpLCAyKVxuICAgICAgKTtcbiAgICAgIHZhciByZWFsRGlzdGFuY2UgPSAoZGlzdGFuY2UgKiBfc2NhbGUpIC8gX3BpeGVsUmF0aW87XG4gICAgICB2YXIgaXNJblJhbmdlID0gcmVhbERpc3RhbmNlIDw9IF9kZWZhdWx0cy5wb2ludFJhZGl1cyAqIF9kZWZhdWx0cy5wb2ludFJhdGlvO1xuXG4gICAgICBpZiAoaXNJblJhbmdlICYmIHJlYWxEaXN0YW5jZSA8IG5lYXJlc3QpIHtcbiAgICAgICAgcmVzdWx0ID0gdjtcbiAgICAgICAgbmVhcmVzdCA9IGRpc3RhbmNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8vIOiuoeeulyBfeFJhbmdlIOWSjCBfeVJhbmdlXG4gIGZ1bmN0aW9uIHNldE1vdmVSYW5nZSgpIHtcbiAgICB2YXIgbW92ZVJhbmdlID0gZ2V0TW92ZVJhbmdlKF9zY2FsZSk7XG5cbiAgICBfeFJhbmdlID0gbW92ZVJhbmdlLng7XG4gICAgX3lSYW5nZSA9IG1vdmVSYW5nZS55O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TW92ZVJhbmdlKHNjYWxlKSB7XG4gICAgdmFyIHhNaW4sIHhNYXgsIHlNaW4sIHlNYXg7XG5cbiAgICAvLyDmuqLlh7rlgY/np7vph49cbiAgICB2YXIgb3ZlcmZsb3dULCBvdmVyZmxvd1IsIG92ZXJmbG93Qiwgb3ZlcmZsb3dMO1xuXG4gICAgdmFyIGlucHV0UG9wdXBQb3MgPSBfZ2V0SW5wdXRQb3B1cFBvcygpLFxuICAgICAgaW5wdXRQb3B1cFNpemUgPSBfZ2V0SW5wdXRQb3B1cFNpemUoKSxcbiAgICAgIGtleWJvcmFkUG9zID0gX2dldEtleWJvcmFkUG9zKCksXG4gICAgICBrZXlib3JhZFNpemUgPSB7IHc6IDI0MCwgaDogMTgwIH07XG5cbiAgICB2YXIgaW5wdXRQb3B1cFdpZHRoUGx1cyA9IGhhc09wZXJhQnRuID8gNDIgOiAwO1xuXG4gICAgdmFyIGlucHV0T3ZlcmZsb3dBbW91bnQsIGtleWJvYXJkT3ZlcmZsb3dBbW91bnQ7XG5cbiAgICBzY2FsZSA9IHNjYWxlIHx8IF9zY2FsZTtcblxuICAgIHhNaW4gPSBfZGVmYXVsdHMud2lkdGggKiBfcGl4ZWxSYXRpbyAtIF9pbWcud2lkdGggKiBzY2FsZTtcbiAgICB5TWluID0gX2RlZmF1bHRzLmhlaWdodCAqIF9waXhlbFJhdGlvIC0gX2ltZy5oZWlnaHQgKiBzY2FsZTtcblxuICAgIGlmICh4TWluID4gMCkge1xuICAgICAgeE1pbiA9IHhNaW4gLyAyO1xuICAgICAgeE1heCA9IHhNaW47XG4gICAgfSBlbHNlIHtcbiAgICAgIHhNYXggPSAwO1xuICAgIH1cblxuICAgIGlmICh5TWluID4gMCkge1xuICAgICAgeU1pbiA9IHlNaW4gLyAyO1xuICAgICAgeU1heCA9IHlNaW47XG4gICAgfSBlbHNlIHtcbiAgICAgIHlNYXggPSAwO1xuICAgIH1cblxuICAgIC8vIOmhtumDqOa6ouWHuumHj1xuICAgIGlmIChpc0lucHV0U2hvdykge1xuICAgICAgb3ZlcmZsb3dUID0gX3kgLSBpbnB1dFBvcHVwUG9zLnkgKiBfcGl4ZWxSYXRpbztcbiAgICAgIG92ZXJmbG93VCA9IG92ZXJmbG93VCA+IDAgPyAob3ZlcmZsb3dUID4geU1heCA/IG92ZXJmbG93VCAtIHlNYXggOiAwKSA6IDA7XG4gICAgICB5TWF4ID0geU1heCArIG92ZXJmbG93VDtcbiAgICB9XG5cbiAgICAvLyDlj7PkvqfmuqLlh7rph49cbiAgICBpZiAoaXNJbnB1dFNob3cgfHwgaXNLZXlib2FyZFNob3cpIHtcbiAgICAgIGlucHV0T3ZlcmZsb3dBbW91bnQgPSBpc0lucHV0U2hvd1xuICAgICAgICA/IChpbnB1dFBvcHVwUG9zLnggKyBpbnB1dFBvcHVwU2l6ZS53ICsgaW5wdXRQb3B1cFdpZHRoUGx1cykgKiBfcGl4ZWxSYXRpb1xuICAgICAgICA6IDA7XG4gICAgICBrZXlib2FyZE92ZXJmbG93QW1vdW50ID0gaXNLZXlib2FyZFNob3cgPyAoa2V5Ym9yYWRQb3MueCArIGtleWJvcmFkU2l6ZS53KSAqIF9waXhlbFJhdGlvIDogMDtcblxuICAgICAgb3ZlcmZsb3dSID0gX3ggKyBfaW1nLndpZHRoICogX3NjYWxlIC0gTWF0aC5tYXgoaW5wdXRPdmVyZmxvd0Ftb3VudCwga2V5Ym9hcmRPdmVyZmxvd0Ftb3VudCk7XG4gICAgICBvdmVyZmxvd1IgPSBvdmVyZmxvd1IgPCAwID8gKG92ZXJmbG93UiA8IC14TWF4ID8gb3ZlcmZsb3dSICsgeE1heCA6IDApIDogMDtcbiAgICAgIHhNaW4gPSB4TWluICsgb3ZlcmZsb3dSO1xuICAgIH1cblxuICAgIC8vIOW6lemDqOa6ouWHuumHj1xuICAgIGlmIChpc0tleWJvYXJkU2hvdykge1xuICAgICAgb3ZlcmZsb3dCID0gX3kgKyBfaW1nLmhlaWdodCAqIF9zY2FsZSAtIChrZXlib3JhZFBvcy55ICsga2V5Ym9yYWRTaXplLmgpICogX3BpeGVsUmF0aW87XG4gICAgICBvdmVyZmxvd0IgPSBvdmVyZmxvd0IgPCAwID8gKG92ZXJmbG93QiA8IC15TWF4ID8gb3ZlcmZsb3dCICsgeU1heCA6IDApIDogMDtcbiAgICAgIHlNaW4gPSB5TWluICsgb3ZlcmZsb3dCO1xuICAgIH1cblxuICAgIC8vIOW3puS+p+a6ouWHuumHj1xuICAgIGlmIChpc0lucHV0U2hvdyB8fCBpc0tleWJvYXJkU2hvdykge1xuICAgICAgaW5wdXRPdmVyZmxvd0Ftb3VudCA9IGlzSW5wdXRTaG93XG4gICAgICAgID8gKGlucHV0UG9wdXBQb3MueCAtIGlucHV0UG9wdXBXaWR0aFBsdXMpICogX3BpeGVsUmF0aW9cbiAgICAgICAgOiBJbmZpbml0eTtcbiAgICAgIGtleWJvYXJkT3ZlcmZsb3dBbW91bnQgPSBpc0tleWJvYXJkU2hvdyA/IGtleWJvcmFkUG9zLnggKiBfcGl4ZWxSYXRpbyA6IEluZmluaXR5O1xuXG4gICAgICBvdmVyZmxvd0wgPSBfeCAtIE1hdGgubWluKGlucHV0T3ZlcmZsb3dBbW91bnQsIGtleWJvYXJkT3ZlcmZsb3dBbW91bnQpO1xuICAgICAgb3ZlcmZsb3dMID0gb3ZlcmZsb3dMID4gMCA/IChvdmVyZmxvd0wgPiB4TWF4ID8gb3ZlcmZsb3dMIC0geE1heCA6IDApIDogMDtcbiAgICAgIHhNYXggPSB4TWF4ICsgb3ZlcmZsb3dMO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICB4OiBbeE1pbiwgeE1heF0sXG4gICAgICB5OiBbeU1pbiwgeU1heF0sXG4gICAgfTtcbiAgfVxuXG4gIC8vIOiHquWKqOWbnuS9jeOAguWIpOaWreWbvueJh+eahOS9jee9ruWSjOe8qeaUvu+8jOWmguaenOi2heWHuuiMg+WbtO+8iF9zY2FsZUJldHdlZW4sIF94UmFuZ2UsIF95UmFuZ2XvvInvvIzliJnnp7vliqjliLDlhYHorrjnmoTojIPlm7TlhoVcbiAgZnVuY3Rpb24gc3RyYWlnaHRlbihlLCB0YXJnZXRTY2FsZSkge1xuICAgIC8vIOe8qeaUvueahOaXtuWAme+8jOWIpOaWreS4pOS4quaJi+aMh+mDveemu+W8gOinpuaRuOWxj+aJjeaJp+ihjOS6i+S7tlxuICAgIGlmIChlICYmIGUudHlwZSA9PT0gJ3RvdWNoZW5kJyAmJiBlLnRvdWNoZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpc01vdmluZykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIOebruagh+WAvFxuICAgIHZhciBzY2FsZSA9XG4gICAgICAgIHRhcmdldFNjYWxlIHx8XG4gICAgICAgIChfc2NhbGUgPCBfc2NhbGVCZXR3ZWVuWzBdXG4gICAgICAgICAgPyBfc2NhbGVCZXR3ZWVuWzBdXG4gICAgICAgICAgOiBfc2NhbGUgPiBfc2NhbGVCZXR3ZWVuWzFdXG4gICAgICAgICAgPyBfc2NhbGVCZXR3ZWVuWzFdXG4gICAgICAgICAgOiBfc2NhbGUpLFxuICAgICAgbW92ZVJhbmdlID0gZ2V0TW92ZVJhbmdlKHNjYWxlKSxcbiAgICAgIHhSYW5nZSA9IG1vdmVSYW5nZS54LFxuICAgICAgeVJhbmdlID0gbW92ZVJhbmdlLnk7XG5cbiAgICBpZiAoXG4gICAgICBfeCA8IHhSYW5nZVswXSB8fFxuICAgICAgX3ggPiB4UmFuZ2VbMV0gfHxcbiAgICAgIF95IDwgeVJhbmdlWzBdIHx8XG4gICAgICBfeSA+IHlSYW5nZVsxXSB8fFxuICAgICAgX3NjYWxlIDwgX3NjYWxlQmV0d2VlblswXSB8fFxuICAgICAgX3NjYWxlID4gX3NjYWxlQmV0d2VlblsxXVxuICAgICkge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgLy8g5L+d5oyB5Lit5b+D54K5XG4gICAgICAgIC8vIOWujOWFqOWbnuS9jeWQjueahCB4IOWdkOagh1xuICAgICAgICB2YXIgeCA9IHBpbmNoQ2VudGVyLnggPyBwaW5jaENlbnRlci54IC0gKHNjYWxlICogKHBpbmNoQ2VudGVyLnggLSBfeCkpIC8gX3NjYWxlIDogX3gsXG4gICAgICAgICAgLy8g5a6M5YWo5Zue5L2N5ZCO55qEIHkg5Z2Q5qCHXG4gICAgICAgICAgeSA9IHBpbmNoQ2VudGVyLnkgPyBwaW5jaENlbnRlci55IC0gKHNjYWxlICogKHBpbmNoQ2VudGVyLnkgLSBfeSkpIC8gX3NjYWxlIDogX3ksXG4gICAgICAgICAgZGlzY291bnQgPSAwLjUsXG4gICAgICAgICAgaGFzQ2hhbmdlID0gZmFsc2U7XG5cbiAgICAgICAgeCA9IHggPCB4UmFuZ2VbMF0gPyB4UmFuZ2VbMF0gOiB4ID4geFJhbmdlWzFdID8geFJhbmdlWzFdIDogeDtcbiAgICAgICAgeSA9IHkgPCB5UmFuZ2VbMF0gPyB5UmFuZ2VbMF0gOiB5ID4geVJhbmdlWzFdID8geVJhbmdlWzFdIDogeTtcblxuICAgICAgICBpZiAoTWF0aC5hYnMoeCAtIF94KSA8IDEpIHtcbiAgICAgICAgICBfeCA9IHg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3ggKz0gKHggLSBfeCkgKiBkaXNjb3VudDtcbiAgICAgICAgICBoYXNDaGFuZ2UgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKE1hdGguYWJzKHkgLSBfeSkgPCAxKSB7XG4gICAgICAgICAgX3kgPSB5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF95ICs9ICh5IC0gX3kpICogZGlzY291bnQ7XG4gICAgICAgICAgaGFzQ2hhbmdlID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChNYXRoLmFicyhzY2FsZSAtIF9zY2FsZSkgKiBfaW1nLndpZHRoICogX2ltZy5oZWlnaHQgPCA1KSB7XG4gICAgICAgICAgX3NjYWxlID0gc2NhbGU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3NjYWxlICs9IChzY2FsZSAtIF9zY2FsZSkgKiBkaXNjb3VudDtcbiAgICAgICAgICBoYXNDaGFuZ2UgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhhc0NoYW5nZSkge1xuICAgICAgICAgIHN0cmFpZ2h0ZW4oJycsIHRhcmdldFNjYWxlKTtcbiAgICAgICAgICBfZHJhdygpO1xuICAgICAgICB9XG4gICAgICB9LCAyMCk7XG4gICAgfVxuICB9XG5cbiAgLy8g6I635Y+W5ouW5ou955qE6LaF5Ye66YePXG4gIGZ1bmN0aW9uIGdldE1vdmVPdmVyZmxvdygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogX3ggPCBfeFJhbmdlWzBdID8gX3ggLSBfeFJhbmdlWzBdIDogX3ggPiBfeFJhbmdlWzFdID8gX3ggLSBfeFJhbmdlWzFdIDogMCxcbiAgICAgIHk6IF95IDwgX3lSYW5nZVswXSA/IF95IC0gX3lSYW5nZVswXSA6IF95ID4gX3lSYW5nZVsxXSA/IF95IC0gX3lSYW5nZVsxXSA6IDAsXG4gICAgfTtcbiAgfVxuXG4gIC8qIOiOt+WPlue8qeaUvueahOi2heWHuumHj1xuICAgKiDnvKnmlL7mr5Tkvovlv4XpnIDlnKggX3NjYWxlQmV0d2VlbiDkuYvpl7TvvIxcbiAgICog5aaC5p6c5q+U5L6L5bCP5LqOIF9zY2FsZUJldHdlZW4g5Yy66Ze077yM5YiZ6K+l5Ye95pWw6L+U5Zue6LSf5pWw77yMXG4gICAqIOWmguaenOavlOS+i+Wkp+S6jiBfc2NhbGVCZXR3ZWVuIOWMuumXtO+8jOWImeivpeWHveaVsOi/lOWbnuato+aVsO+8jFxuICAgKiDlnKjljLrpl7TkuK3vvIzov5Tlm54gMFxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0U2NhbGVPdmVyZmxvdyhzY2FsZSkge1xuICAgIHNjYWxlID0gc2NhbGUgfHwgX3NjYWxlO1xuXG4gICAgcmV0dXJuIHNjYWxlIDwgX3NjYWxlQmV0d2VlblswXVxuICAgICAgPyBzY2FsZSAtIF9zY2FsZUJldHdlZW5bMF1cbiAgICAgIDogc2NhbGUgPiBfc2NhbGVCZXR3ZWVuWzFdXG4gICAgICA/IHNjYWxlIC0gX3NjYWxlQmV0d2VlblsxXVxuICAgICAgOiAwO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFzVmFsKHZhbCkge1xuICAgIGlmICh2YWwgPT09ICcnIHx8IHZhbCA9PT0gdW5kZWZpbmVkIHx8IHZhbCA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICAvLyDojrflj5bmoIforrDngrlcbiAgZnVuY3Rpb24gZ2V0RHJhd1BvaW50cyhkYXRhKSB7XG4gICAgdmFyIHBvaW50cyA9IFtdO1xuICAgIHZhciBwb2ludFN0YXR1c09iaiA9IHt9O1xuXG4gICAgcG9pbnRzID0gbWVhc3VyZVBvaW50c0hhbmRsZS5nZXREcmF3UG9pbnRzKGRhdGEpO1xuXG4gICAgLy8g5qCH6K6w54K554q25oCB6aKc6ImyXG4gICAgaWYgKCFfLmlzRW1wdHkoZGF0YS5wb2ludFN0YXR1cykpIHtcbiAgICAgIF8uZWFjaChkYXRhLnBvaW50U3RhdHVzLCBmdW5jdGlvbih2KSB7XG4gICAgICAgIHBvaW50U3RhdHVzT2JqW3YuaWRdID0gdi5zdGF0dXM7XG4gICAgICB9KTtcblxuICAgICAgXy5lYWNoKHBvaW50cywgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgdmFyIHN0YXR1cyA9IHBvaW50LnBvaW50SWQgPyBwb2ludFN0YXR1c09ialtwb2ludC5wb2ludElkXSA6ICcnO1xuXG4gICAgICAgIGlmIChzdGF0dXMpIHtcbiAgICAgICAgICBwb2ludC5jb2xvciA9IHtcbiAgICAgICAgICAgIOW+heaVtOaUuTogJyNGRjNDNDYnLFxuICAgICAgICAgICAg5b6F5aSN6aqMOiAnI0ZGOEUyNCcsXG4gICAgICAgICAgICDlt7LpgJrov4c6ICcjMEJDNjY2JyxcbiAgICAgICAgICAgIOmdnuato+W4uOWFs+mXrTogJyM2NjY2NjYnLFxuICAgICAgICAgIH1bc3RhdHVzXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBvaW50cztcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldERldGFpbERhdGEoZGF0YSwgZHJhdykge1xuICAgIF9kZWZhdWx0cy5kYXRhID0gZGF0YTtcbiAgICBfZGVmYXVsdHMucG9pbnRzID0gZ2V0RHJhd1BvaW50cyhfZGVmYXVsdHMuZGF0YSk7XG5cbiAgICAvLyDliJ3lp4vljJbnirbmgIFcbiAgICBwcm9ibGVtTW9kZSA9IF9kZWZhdWx0cy5kYXRhLm1vZGU7XG4gICAgaXNFZGl0TW9kZSA9IHByb2JsZW1Nb2RlID09PSAnZWRpdCcgfHwgcHJvYmxlbU1vZGUgPT09ICdyZWVkaXQnIHx8IHByb2JsZW1Nb2RlID09PSAncmVkbyc7XG4gICAgaXNJbnB1dFNob3cgPSBmYWxzZTtcbiAgICBpc0tleWJvYXJkU2hvdyA9IGZhbHNlO1xuICAgIGlucHV0TGVuZ3RoID0gMDtcblxuICAgIHBhc3NyYXRlTW9kZSA9IF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhWzBdLnBhc3NyYXRlX21vZGU7XG4gICAgY29tYm9MZW5ndGggPSBfZGVmYXVsdHMuZGF0YS5wcm9ibGVtRGF0YS5sZW5ndGg7XG4gICAgaGFzT3BlcmFCdG4gPSBpc0VkaXRNb2RlO1xuXG4gICAgZHJhd1BvaW50SW5kZXggPSBudWxsO1xuICAgIGxpZ2h0SW5wdXRJbmRleCA9IG51bGw7XG5cbiAgICBoYXNXYXJuaW5nID0gXy5zb21lKF9kZWZhdWx0cy5wb2ludHMsIHsgaXNXYXJuaW5nOiB0cnVlIH0pO1xuICAgIC8qKlxuICAgICAqIHRvZG8gbWVhc3VyZSBlbmQg5Yid5aeL5YyWIGdldERyYXdTZXJ2ZXJcbiAgICAgKiDnpLrkvovku6PnoIFcbiAgICAgbGV0IERyYXdTZXJ2ZXIgPSBnZXREcmF3U2VydmVyKHBhc3NyYXRlTW9kZSk7XG4gICAgIGxldCBvcHRpb25zID0ge2RlZmF1bHRzLCBpc0VkaXRNb2RlLCBoYXNPcGVyYUJ0biwgcGFzc3JhdGVNb2RlfTtcbiAgICAgZHJhd1NlcnZlciA9IG5ldyBEcmF3U2VydmVyKF9jdHgsIG9wdGlvbnMpO1xuICAgICAqICovXG4gICAgbGV0IERyYXdTZXJ2ZXIgPSBnZXREcmF3U2VydmVyKHBhc3NyYXRlTW9kZSk7XG4gICAgbGV0IG9wdGlvbnMgPSB7IF9kZWZhdWx0cywgaXNFZGl0TW9kZSwgaGFzT3BlcmFCdG4sIHBhc3NyYXRlTW9kZSB9O1xuICAgIGRyYXdTZXJ2ZXIgPSBuZXcgRHJhd1NlcnZlcihfY3R4LCBvcHRpb25zKTtcblxuICAgIGlmIChkcmF3ICE9PSBmYWxzZSkge1xuICAgICAgX2RyYXcoKTtcbiAgICB9XG4gIH1cblxuICB0aGlzLmluaXQgPSBmdW5jdGlvbihhcmdzKSB7XG4gICAgLy8gdGhpcy5yZXNldCgpO1xuICAgIGZvciAodmFyIGkgaW4gYXJncykge1xuICAgICAgaWYgKGFyZ3MuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgX2RlZmF1bHRzW2ldID0gYXJnc1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGF0LmRyYXdNb2RlID0gYXJncy5kcmF3TW9kZSB8fCAnZWRpdCc7XG5cbiAgICBfY2FudmFzID0gX2RlZmF1bHRzLmNhbnZhcztcblxuICAgIGlmICghX2NhbnZhcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIF9jYW52YXMuY2xhc3NOYW1lID0gX2NhbnZhcy5jbGFzc05hbWUgKyAnIGNhbnZhcy1kaWFncmFtJztcblxuICAgIF9jYW52YXMud2lkdGggPSBfZGVmYXVsdHMud2lkdGg7XG4gICAgX2NhbnZhcy5oZWlnaHQgPSBfZGVmYXVsdHMuaGVpZ2h0O1xuXG4gICAgX2N0eCA9IF9jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICBfY3R4LnN0cm9rZVN0eWxlID0gJ3RyYW5zcGFyZW50JztcbiAgICBfY3R4LmZpbGxTdHlsZSA9ICd0cmFuc3BhcmVudCc7XG4gICAgX3BpeGVsUmF0aW8gPSBnZXRQaXhlbFJhdGlvKF9jdHgpO1xuXG4gICAgaWYgKF9waXhlbFJhdGlvID4gMSkge1xuICAgICAgX2NhbnZhcy5zdHlsZS5oZWlnaHQgPSBfY2FudmFzLmhlaWdodCArICdweCc7XG4gICAgICBfY2FudmFzLnN0eWxlLndpZHRoID0gX2NhbnZhcy53aWR0aCArICdweCc7XG4gICAgICBfY2FudmFzLndpZHRoICo9IF9waXhlbFJhdGlvO1xuICAgICAgX2NhbnZhcy5oZWlnaHQgKj0gX3BpeGVsUmF0aW87XG4gICAgfVxuXG4gICAgIV9jdHguZXh0ZW5kZWQgJiYgRXh0ZW5kQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKF9jdHgpO1xuXG4gICAgX2N0eC5jbGVhclJlY3QoMCwgMCwgX2NhbnZhcy53aWR0aCwgX2NhbnZhcy5oZWlnaHQpO1xuXG4gICAgX2N0eC5maWxsU3R5bGUgPSAnIzk5OSc7XG4gICAgX2N0eC5mb250ID0gJzE4cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG4gICAgX2N0eC5maWxsVGV4dCgn5Yqg6L295LitLi4uJywgKF9kZWZhdWx0cy53aWR0aCAtIDcwKSAvIDIsIChfZGVmYXVsdHMuaGVpZ2h0ICsgMTgpIC8gMik7XG5cbiAgICBzZXREZXRhaWxEYXRhKF9kZWZhdWx0cy5kYXRhLCBmYWxzZSk7XG5cbiAgICBfYmluZFRvdWNoRXZlbnQoKTtcblxuICAgIF9pbWcgPSBfZGVmYXVsdHMuaW1nO1xuICAgIF9jYWxjKCk7XG4gICAgX2RyYXcoKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB0aGlzLnJlc2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgX3ggPSAwO1xuICAgIF95ID0gMDtcbiAgICBfc2NhbGUgPSBfc2NhbGVCZXR3ZWVuWzBdO1xuICAgIGlmIChfY2FudmFzKSB7XG4gICAgICBfdW5iaW5kVG91Y2hFdmVudCgpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB0aGlzLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICBfZGVmYXVsdHMgPSBudWxsO1xuICAgIF9jYW52YXMud2lkdGggPSAwO1xuICAgIF9jYW52YXMuaGVpZ2h0ID0gMDtcbiAgICBfY2FudmFzID0gbnVsbDtcbiAgICBfY3R4ID0gbnVsbDtcbiAgfTtcblxuICB0aGlzLnNob3dMb2FkaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgX2N0eC5jbGVhclJlY3QoMCwgMCwgX2NhbnZhcy53aWR0aCwgX2NhbnZhcy5oZWlnaHQpO1xuXG4gICAgX2N0eC5maWxsU3R5bGUgPSAnIzk5OSc7XG4gICAgX2N0eC5mb250ID0gJzE4cHggLWFwcGxlLXN5c3RlbSwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBSb2JvdG8sIFwiU2Vnb2UgVUlcIiwgc2Fucy1zZXJpZic7XG4gICAgX2N0eC5maWxsVGV4dCgn5Yqg6L295LitLi4uJywgKF9kZWZhdWx0cy53aWR0aCAtIDcwKSAvIDIsIChfZGVmYXVsdHMuaGVpZ2h0ICsgMTgpIC8gMik7XG4gIH07XG5cbiAgdGhpcy5zZXRQb2ludERhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgX2RlZmF1bHRzLnBvaW50cyA9IGRhdGE7XG4gICAgX2RyYXcoKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB0aGlzLnNldERldGFpbERhdGEgPSBzZXREZXRhaWxEYXRhO1xuXG4gIC8vIOiOt+WPluaVsOaNrlxuICB0aGlzLmdldERldGFpbERhdGEgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaW5wdXRJbmRleCA9IGxpZ2h0SW5wdXRJbmRleDtcblxuICAgIGlmIChoYXNWYWwoaW5wdXRJbmRleCkpIHtcbiAgICAgIGlucHV0Qmx1cihpbnB1dEluZGV4KTtcbiAgICAgIGlucHV0Rm9jdXMoaW5wdXRJbmRleCk7XG4gICAgfVxuXG4gICAgXy5lYWNoKF9kZWZhdWx0cy5kYXRhLnByb2JsZW1EYXRhLCBmdW5jdGlvbihwcm9ibGVtKSB7XG4gICAgICBNZWFzdXJlRGV0YWlsTW9kZWwucG9pbnRzSGFuZGxlKHByb2JsZW0pO1xuICAgICAgTWVhc3VyZURldGFpbE1vZGVsLnByb2JsZW1IYW5kbGUocHJvYmxlbSk7XG4gICAgfSk7XG5cbiAgICBfZHJhdygpO1xuXG4gICAgcmV0dXJuIF9kZWZhdWx0cy5kYXRhO1xuICB9O1xuXG4gIC8qIOW8gOWQr+itpuekuuaViOaenO+8iOapmeiJsumXqueDge+8iSAqL1xuICB0aGlzLnN0YXJ0V2FybmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIGhhc1dhcm5pbmcgPSB0cnVlO1xuICB9O1xuXG4gIC8qIOWFs+mXreitpuekuuaViOaenO+8iOapmeiJsumXqueDge+8iSAqL1xuICB0aGlzLmVuZFdhcm5pbmcgPSBmdW5jdGlvbigpIHtcbiAgICBoYXNXYXJuaW5nID0gZmFsc2U7XG4gIH07XG5cbiAgLyog6K6+572u5qih5byPXG4gICAqIGltZzog57G75Ly85LqO5LiA5byg5Zu+54mH77yM5LiN6IO95YGa5Lu75L2V5pON5L2cXG4gICAqIHZpZXc6IOafpeeci+aooeW8j1xuICAgKiBlZGl0OiDnvJbovpHmqKHlvI9cbiAgICovXG4gIHRoaXMuc2V0TW9kZSA9IGZ1bmN0aW9uKG1vZGUpIHtcbiAgICB0aGF0LmRyYXdNb2RlID0gbW9kZTtcblxuICAgIGlmIChtb2RlID09PSAnaW1nJykge1xuICAgICAgc3RyYWlnaHRlbignJywgX3NjYWxlQmV0d2VlblswXSk7XG4gICAgfVxuXG4gICAgX2RlZmF1bHRzLm9uU2V0TW9kZSAmJiBfZGVmYXVsdHMub25TZXRNb2RlKG1vZGUpO1xuICB9O1xuXG4gIHRoaXMuaW5wdXRCbHVyID0gaW5wdXRCbHVyO1xuICB0aGlzLnBvaW50Qmx1ciA9IHBvaW50Qmx1cjtcbn1cblxuX3NlbGYgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uKGFyZ3MpIHtcbiAgICB2YXIgZHJhdyA9IG5ldyBNZWFzdXJlRHJhdygpO1xuXG4gICAgZHJhdy5pbml0KGFyZ3MpO1xuXG4gICAgcmV0dXJuIGRyYXc7XG4gIH0sXG59O1xuXG5mdW5jdGlvbiBFeHRlbmRDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQocHJvdG90eXBlKSB7XG4gIGxldCBwaXhlbFJhdGlvID0gKGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgICB2YXIgYmFja2luZ1N0b3JlID1cbiAgICAgIGNvbnRleHQuYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJELndlYmtpdEJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgIGNvbnRleHQubW96QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgY29udGV4dC5tc0JhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgIGNvbnRleHQub0JhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgIGNvbnRleHQuYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fFxuICAgICAgMTtcblxuICAgIHJldHVybiAod2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMSkgLyBiYWNraW5nU3RvcmU7XG4gIH0pKHByb3RvdHlwZSk7XG4gIGxldCBmb3JFYWNoID0gZnVuY3Rpb24ob2JqLCBmdW5jKSB7XG4gICAgZm9yICh2YXIgcCBpbiBvYmopIHtcbiAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgZnVuYyhvYmpbcF0sIHApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgbGV0IHJhdGlvQXJncyA9IHtcbiAgICBmaWxsUmVjdDogJ2FsbCcsXG4gICAgY2xlYXJSZWN0OiAnYWxsJyxcbiAgICBzdHJva2VSZWN0OiAnYWxsJyxcbiAgICBtb3ZlVG86ICdhbGwnLFxuICAgIGxpbmVUbzogJ2FsbCcsXG4gICAgYXJjOiBbMCwgMSwgMl0sXG4gICAgYXJjVG86ICdhbGwnLFxuICAgIGJlemllckN1cnZlVG86ICdhbGwnLFxuICAgIGlzUG9pbnRpblBhdGg6ICdhbGwnLFxuICAgIGlzUG9pbnRpblN0cm9rZTogJ2FsbCcsXG4gICAgcXVhZHJhdGljQ3VydmVUbzogJ2FsbCcsXG4gICAgcmVjdDogJ2FsbCcsXG4gICAgdHJhbnNsYXRlOiAnYWxsJyxcbiAgICBjcmVhdGVSYWRpYWxHcmFkaWVudDogJ2FsbCcsXG4gICAgY3JlYXRlTGluZWFyR3JhZGllbnQ6ICdhbGwnLFxuICB9O1xuXG4gIGlmIChwaXhlbFJhdGlvID09PSAxKSByZXR1cm47XG5cbiAgZm9yRWFjaChyYXRpb0FyZ3MsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICBwcm90b3R5cGVba2V5XSA9IChmdW5jdGlvbihfc3VwZXIpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IGk7XG4gICAgICAgIGxldCBsZW47XG4gICAgICAgIGxldCBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgICAgICBpZiAodmFsdWUgPT09ICdhbGwnKSB7XG4gICAgICAgICAgYXJncyA9IGFyZ3MubWFwKGZ1bmN0aW9uKGEpIHtcbiAgICAgICAgICAgIHJldHVybiBhICogcGl4ZWxSYXRpbztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW3ZhbHVlW2ldXSAqPSBwaXhlbFJhdGlvO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICB9O1xuICAgIH0pKHByb3RvdHlwZVtrZXldKTtcbiAgfSk7XG5cbiAgLy8gU3Ryb2tlIGxpbmVXaWR0aCBhZGp1c3RtZW50XG4gIHByb3RvdHlwZS5zdHJva2UgPSAoZnVuY3Rpb24oX3N1cGVyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5saW5lV2lkdGggKj0gcGl4ZWxSYXRpbztcbiAgICAgIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgdGhpcy5saW5lV2lkdGggLz0gcGl4ZWxSYXRpbztcbiAgICB9O1xuICB9KShwcm90b3R5cGUuc3Ryb2tlKTtcblxuICAvLyBUZXh0XG4gIC8vXG4gIHByb3RvdHlwZS5maWxsVGV4dCA9IChmdW5jdGlvbihfc3VwZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICAgIGFyZ3NbMV0gKj0gcGl4ZWxSYXRpbzsgLy8geFxuICAgICAgYXJnc1syXSAqPSBwaXhlbFJhdGlvOyAvLyB5XG5cbiAgICAgIHRoaXMuZm9udCA9IHRoaXMuZm9udC5yZXBsYWNlKC8oXFxkKykocHh8ZW18cmVtfHB0KS9nLCBmdW5jdGlvbih3LCBtLCB1KSB7XG4gICAgICAgIHJldHVybiBtICogcGl4ZWxSYXRpbyArIHU7XG4gICAgICB9KTtcblxuICAgICAgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuXG4gICAgICB0aGlzLmZvbnQgPSB0aGlzLmZvbnQucmVwbGFjZSgvKFxcZCspKHB4fGVtfHJlbXxwdCkvZywgZnVuY3Rpb24odywgbSwgdSkge1xuICAgICAgICByZXR1cm4gbSAvIHBpeGVsUmF0aW8gKyB1O1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSkocHJvdG90eXBlLmZpbGxUZXh0KTtcblxuICBwcm90b3R5cGUuc3Ryb2tlVGV4dCA9IChmdW5jdGlvbihfc3VwZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICAgIGFyZ3NbMV0gKj0gcGl4ZWxSYXRpbzsgLy8geFxuICAgICAgYXJnc1syXSAqPSBwaXhlbFJhdGlvOyAvLyB5XG5cbiAgICAgIHRoaXMuZm9udCA9IHRoaXMuZm9udC5yZXBsYWNlKC8oXFxkKykocHh8ZW18cmVtfHB0KS9nLCBmdW5jdGlvbih3LCBtLCB1KSB7XG4gICAgICAgIHJldHVybiBtICogcGl4ZWxSYXRpbyArIHU7XG4gICAgICB9KTtcblxuICAgICAgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuXG4gICAgICB0aGlzLmZvbnQgPSB0aGlzLmZvbnQucmVwbGFjZSgvKFxcZCspKHB4fGVtfHJlbXxwdCkvZywgZnVuY3Rpb24odywgbSwgdSkge1xuICAgICAgICByZXR1cm4gbSAvIHBpeGVsUmF0aW8gKyB1O1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSkocHJvdG90eXBlLnN0cm9rZVRleHQpO1xuXG4gIHByb3RvdHlwZS5leHRlbmRlZCA9IHRydWU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IF9zZWxmO1xuIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kcmF3aW5nLXdpdGgtcG9pbnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzFjZTdmZWMmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NDMwNDJmMGQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==