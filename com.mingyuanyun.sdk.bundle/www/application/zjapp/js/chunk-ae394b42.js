(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-ae394b42","chunk-0b5b35be","chunk-b1eec014","chunk-2709989a"],{"0732":function(t,e,i){var a=i("81f2");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("1b5b07de",a,!0,{sourceMap:!1,shadowMode:!1})},"0aac":function(t,e,i){"use strict";i("2814")},"0aeb":function(t,e,i){"use strict";i("eebd")},"0cb6":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .problem-detail-header[data-v-0901aadd]{display:flex;align-items:center;justify-content:center;height:40px;padding:0 15px;line-height:40px;background-color:#f2f2f2}.zjapp .problem-detail-header .status[data-v-0901aadd]{flex:1;height:16px;line-height:16px;border-left:5px solid #ddd;padding-left:5px;color:#111;font-size:16px}.zjapp .problem-detail-header .status-red[data-v-0901aadd]{border-color:#ff3d3d}.zjapp .problem-detail-header .status-blue[data-v-0901aadd]{border-color:#4275e8}.zjapp .problem-detail-header .status-green[data-v-0901aadd]{border-color:#0bc666}.zjapp .problem-detail-header .status-orange[data-v-0901aadd]{border-color:#fc8b01}.zjapp .problem-detail-header .status-black[data-v-0901aadd]{border-color:#333}.zjapp .problem-detail-header .status-gray[data-v-0901aadd]{border-color:#999}.zjapp .problem-detail-header .return[data-v-0901aadd],.zjapp .problem-detail-header .timeout[data-v-0901aadd],.zjapp .problem-detail-header .urgent[data-v-0901aadd]{display:block;padding:0 5px;margin-left:6px;height:16px;line-height:16px;color:#fff;font-size:12px;border-radius:2px;-webkit-border-radius:2px}.zjapp .problem-detail-header .urgent[data-v-0901aadd]{background-color:#ff3d3d}.zjapp .problem-detail-header .timeout[data-v-0901aadd]{background-color:#954cfe}.zjapp .problem-detail-header .return[data-v-0901aadd]{background-color:#fc8b01}.zjapp .problem-detail-header .operat[data-v-0901aadd]{height:40px;line-height:40px;white-space:nowrap;font-size:16px;color:#6b7ba9}",""])},"1f63":function(t,e,i){"use strict";i("7434")},2814:function(t,e,i){var a=i("5033");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("9db19832",a,!0,{sourceMap:!1,shadowMode:!1})},2939:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .page-scroll[data-v-74102c05]{flex:1;overflow:auto;padding-bottom:100px;transform:translateZ(0)}.zjapp .sublist[data-v-74102c05]{padding-left:25px;padding-top:1px;background-color:#fff}.zjapp .sublist>.sublist[data-v-74102c05]{padding-left:10px;padding-top:0}",""])},"29be":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),r=(i("cc57"),i("163d"),i("07d2")),n=i("a5c6"),o=i("6144");function s(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function c(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?s(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"SingleSelect",components:{Item:r.a},props:{title:{type:String,default:""},pageTitle:{type:String,default:""},placeholder:{type:String,default:""},value:{type:Object,default:function(){return{}}},options:{type:Array,default:function(){return[]}},optionsDisabled:{type:Array,default:function(){return[]}},required:{type:Boolean,default:!0},mode:{type:String,default:"edit"},editabled:{type:Boolean,default:!0},memory:{type:Boolean,default:!1},autoSelect:{type:Boolean,default:!1},beforeOpen:{type:Function,default:function(){}},searchBar:{type:Boolean,default:!0},grouping:{type:String,default:""},autoOpen:{type:Boolean,default:!1},rightBtn:{type:String,default:""},rightBtnEvent:{type:Function,default:function(){return 0}},ifToggle:{type:Boolean,default:!1},formCheck:{type:Boolean,default:!1},editorAddData:{type:Boolean,default:!1},lineLimit:{type:[Number,String],default:1}},data:function(){return{memoryKey:this.$route.name+encodeURI(this.title)}},watch:{options:function(){this.setSelected()}},mounted:function(){this.setSelected()},methods:{openSelect:function(){var e=this;if(this.editabled){var i=this.beforeOpen();i&&i.then&&t.isFunction(i.then)?i.then((function(t){!1!==t&&e.openPopup()})):!1!==i&&this.openPopup()}},openPopup:function(){var e=this;if(this.optionsDisabled&&this.optionsDisabled.length){var i={};t.each(this.optionsDisabled,(function(t){t.id&&(i[t.id]=t)})),t.each(this.options,(function(t,a){i[t.id]?e.options[a].disabled=!0:e.options[a].disabled=!1}))}n.a.openPopup({title:this.pageTitle||"选择"+this.title,selected:this.value,options:this.options,required:this.required,searchBar:this.searchBar,grouping:this.grouping,autoOpen:this.autoOpen,rightBtn:this.rightBtn,ifToggle:this.ifToggle,lineLimit:this.lineLimit,editorAddData:this.editorAddData,onSelect:function(i){var a=t.cloneDeep(e.value);i=t.isArray(i)?t.map(i,(function(t){return c({},t)})):c({},i),e.$emit("input",i,a),e.$emit("onSelect",i,a)},rightBtnEvent:function(i){var a=t.cloneDeep(e.value);e.$emit("rightBtnEvent",i,a)}})},closePopup:function(){n.a.closePopup()},onSelect:function(t){o.a.saveObject(this.memoryKey,t,o.a.level.user),this.$emit("input",t[0]),this.$emit("onSelect",t[0])},setSelected:function(){var e=o.a.getObject(this.memoryKey,o.a.level.user);!1===this.editabled||t.isEmpty(this.options)||(t.isEmpty(this.value)?this.memory&&!t.isEmpty(e)&&t.some(this.options,{id:e.id})&&(this.$emit("input",e),this.autoSelect&&this.$emit("onSelect",e)):this.autoSelect&&this.$emit("onSelect",this.value))}}}}).call(this,i("391c"))},"2a54":function(t,e,i){var a=i("d77c");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("a2ffe54e",a,!0,{sourceMap:!1,shadowMode:!1})},"2c76":function(t,e,i){"use strict";i("c070")},"2dd6":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .single-item[data-v-6920dde7]{min-height:44px}.zjapp .single-item>div[data-v-6920dde7]{display:flex}.zjapp .single-item>div>span[data-v-6920dde7]{flex:1;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical}.zjapp .single-item>div>span[data-v-6920dde7] label{color:#4174e9}.zjapp .single-item i[data-v-6920dde7]{line-height:24px;font-size:24px;color:#4275e8}.zjapp .single-item .disabled-item[data-v-6920dde7]{color:#aaa}",""])},"2ddb":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .supplier-editor[data-v-e465319c]{margin-bottom:10px;padding:8px;display:flex;justify-content:space-between;align-items:center;height:52px;color:#4275e8;background-color:#fff}.zjapp .supplier-editor .icon[data-v-e465319c]{border-left:1px solid #c8c8c8;padding-left:12px}.zjapp .supplier-editor .icon-edit[data-v-e465319c]{color:#c8c8c8;font-size:18px}.zjapp .supplier-editor .icon-qualified[data-v-e465319c]{color:#4275e8}.zjapp .supplier-editor .margin-r[data-v-e465319c]{margin-right:10px}.zjapp .list-title[data-v-e465319c]{position:relative;top:0;color:#888;font-size:14px;line-height:30px;min-height:40px;margin-bottom:0;margin-top:0;padding:8px 16px 2px}.zjapp .search-item>div[data-v-e465319c]{padding-right:35px}.zjapp .search-item i[data-v-e465319c]{position:absolute;color:#ccc;font-size:26px;right:0;top:50%;transform:translateY(-50%)}.zjapp .van-popup--right[data-v-e465319c]{width:100%;height:100%}[data-v-e465319c] .van-cell__title{color:#4174e9;font-weight:700}[data-v-e465319c] .van-collapse-item__content{transform:translateZ(0);padding:0 0 0 25px}[data-v-e465319c] .van-collapse-item__content .van-cell{padding-left:0}",""])},"3156b":function(t,e,i){"use strict";i("163d");var a={name:"SingleSelectItem",props:{item:{type:Object,default:function(){return{id:"",name:""}}},checked:{type:Boolean,default:!1},renderField:{type:String,default:"name"},lineLimit:{type:[Number,String],default:1}},methods:{selectItem:function(t){t.disabled||this.$emit("click",t)}}},r=(i("9788"),i("17cc")),n=Object(r.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("van-cell",{staticClass:"single-item",attrs:{clickable:!0},on:{click:function(e){t.selectItem(t.item)}}},[i("span",{class:{"disabled-item":t.item.disabled},style:{"-webkit-line-clamp":"unlimited"===t.lineLimit?"initial":t.lineLimit},domProps:{innerHTML:t._s(t.item[t.renderField])}}),t.checked?i("van-icon",{attrs:{name:"success"}}):t._e()],1)}),[],!1,null,"6920dde7",null);e.a=n.exports},3480:function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),r=i("e2a7"),n=i("e89f"),o=i("07d2"),s=i("3c64"),c=i("e68e");function l(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}e.a={name:"ProblemBack",components:{Item:o.a,ItemTextarea:s.a,ItemImgList:c.a},mixins:[n.a],props:{},data:function(){return{show:!1,multiple:!1,reasonList:[],reason:{},remark:"",images:[],placeholder:"补充说明",isBack:!1,photoRequest:"",allowSelectAlbum:void 0,allowBuildinAlbum:void 0}},methods:{openPopup:function(e){e.reasonList?this.reasonList=t.clone(e.reasonList):this.reasonList=[{id:1,text:"整改不合格"},{id:2,text:"其它",remarkRequire:!0}],this.isBack=e.isBack||!1,this.reason=t.clone(e.reason)||{},this.images=t.map(e.images,(function(t){return function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?l(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},t)})),this.remark=e.remark||"",this.placeholder=e.placeholder?e.placeholder:"补充说明",this.multiple=e.multiple,t.isEmpty(e.reasonList)||(this.reasonList=t.clone(e.reasonList)),this.callback=e.callback,this.beforeCallback=e.beforeCallback,this.photoRequest=e.photoRequest||"",e.allowSelectAlbum&&(this.allowSelectAlbum=Boolean(e.allowSelectAlbum)),e.allowBuildinAlbum&&(this.allowBuildinAlbum=Boolean(e.allowBuildinAlbum)),this.value=!0,this.show=!0,this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},selectItem:function(t){this.multiple?this.$set(t,"checked",!t.checked):this.reason=t},submit:function(){var e=this;if(this.multiple){if(this.reason=t.filter(this.reasonList,{checked:!0}),t.isEmpty(this.remark))return void r.a.alert("补充说明必填")}else{if(t.isUndefined(this.reason.id))return void r.a.alert("请填写退回原因");if(this.reason.remarkRequire&&t.isEmpty(this.remark))return void r.a.alert("补充说明必填");if(this.photoRequest&&t.isEmpty(this.images))return void r.a.alert("请拍摄退回照片")}var i={reason:this.reason,remark:this.remark,images:this.images},a=!this.beforeCallback||this.beforeCallback(i);a&&a.then&&t.isFunction(a.then)?a.then((function(t){!1!==t&&(e.callback&&e.callback(i),e.closePopup())})):!1!==a&&(this.callback&&this.callback(i),this.closePopup())}}}}).call(this,i("391c"))},"3c64":function(t,e,i){"use strict";i("163d");var a={name:"ItemTextarea",components:{},props:{value:{type:String,default:""},placeholder:{type:String,default:""},maxlength:{type:Number,default:200},borderBottom:{type:Boolean,default:!0}},data:function(){return{textareaHeight:40,isLock:!1,blurTime:null}},computed:{lastLength:function(){var t=this.value&&this.value.length||0,e=this.maxlength-t;return e>0?e:0}},mounted:function(){var t=this;this.$nextTick((function(){t.textareaHeight=t.$refs.rule&&t.$refs.rule.offsetHeight||40}))},methods:{onfocus:function(){var t=(new Date).getTime();this.blurTime&&t-this.blurTime<300&&window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(this.$refs.input.blur(),window.cordova.plugins.Keyboard.close()),this.blurTime=null,this.$emit("focus")},onblur:function(){this.blurTime=(new Date).getTime(),this.$emit("blur")},setStatus:function(t){console.log(t),this.isLock=t},oninput:function(t){var e=this;setTimeout((function(){if(!e.isLock){var i=t.target.value;i.length>e.maxlength&&(i=i.substring(0,e.maxlength),e.$refs.input.value=i),e.$refs.rule.innerText=i,e.textareaHeight=e.$refs.rule&&e.$refs.rule.offsetHeight+20,e.$emit("input",i),e.$emit("change",i)}}),0)}}},r=(i("2c76"),i("17cc")),n=Object(r.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"item-textarea",class:{"border-bottom":t.borderBottom}},[i("div",{staticClass:"item-textarea-content"},[i("textarea",{ref:"input",style:{height:t.textareaHeight+"px"},attrs:{placeholder:t.placeholder},domProps:{value:t.value},on:{focus:t.onfocus,blur:t.onblur,compositionstart:function(e){t.setStatus(!0)},compositionend:function(e){t.setStatus(!1)},input:t.oninput}}),i("div",{ref:"rule",staticClass:"rule"},[t._v("\n      "+t._s(t.value)+"\n    ")]),t.maxlength!==1/0?i("p",{staticClass:"counter"},[t._v("\n      "+t._s(t.lastLength)+"\n    ")]):t._e()])])}),[],!1,null,null,null);e.a=n.exports},"3cd8":function(t,e,i){var a=i("5c19");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("67c16200",a,!0,{sourceMap:!1,shadowMode:!1})},"3ec5":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),r=(i("e697"),i("cc57"),i("f369")),n=i("da1c"),o=i("07d2"),s=i("e68e"),c=i("5e1b"),l=i("3c64"),d=i("5a71"),p=i("cd05"),u=i("6bf2"),h=i.n(u),m=i("e2a7"),f=i("3bd5"),g=i("d3aa"),b=i("37d5"),_=i("5ff0"),v=i("75ca"),y=i("59a7"),x=i("b6da"),k=i("06f6"),w=i("6144"),D=i("9864"),P=i("6f9e");function j(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function C(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?j(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):j(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"FlyInspectDetail",components:{CheckGuide:r.a,ProblemDetailHeader:n.a,Item:o.a,ItemImgList:s.a,ItemTextarea:l.a,SingleSelect:d.a,UserSelect:p.a,CheckUserContact:D.a},data:function(){return{isLoading:!0,comeFrom:"",user:f.a.getUser(),problemData:{},repairOptions:[],reinspectOptions:[],contractorOptions:[],ccOptions:[],allowChangeRepair:!1,allowChangeCC:!1,allowRepair:!1,allowChangeContractor:!1,allowClose:!1,allowChangeReinspect:!1,allowReinspectReject:!1,allowReinspectPass:!1,allowChangeRepairDeadline:!1,allowView:!1}},computed:{isNeedRepair:function(){return"检查完毕"!==this.problemData.status}},created:function(){var t=this;Object(P.d)((function(e){e.id===t.problemData.id&&t.loadData()}))},activated:function(){this.loadData(this.$route.params.id)},methods:{fomatDate:function(t){return h()(t).format("YYYY-MM-DD HH:mm")},loadData:function(e){var i=this;if(e=e||this.$route.params.id||"",!t.isEmpty(e))return this.isLoading=!0,g.a.getCheckProblemInfo(e).then((function(t){i.problemData={id:t.id,status:t.status,status_text:t.status,proj_id:t.proj_id,proj_name:t.proj_name,place:{full_name:t.place},batch_id:t.batch_id,checkItem:{id:t.item_id,name:t.item_name,full_name:t.item_full_name},description:{id:t.desc_id,name:t.desc},image_file:JSON.parse(t.image_file||"[]"),remark:t.remark,level:t.emergency_degree||"一般",deadline:t.deadline||7,regist:t.regist,regist_date:t.regist_date,sent_back:{id:t.sent_back.id,name:t.sent_back.name,mobile:t.sent_back.mobile},sent_back_date:t.sent_back_date,sent_back_times:t.sent_back_times,sent_back_remark:t.sent_back_remark,sent_back_image_file:JSON.parse(t.sent_back_image_file||"[]"),repair:t.repair,repair_remark:t.repair_remark,repair_set:t.repair_set,repair_deadline:h()(t.repair_deadline).format("YYYY-MM-DD"),repair_date:t.repair_date,repair_image_file:JSON.parse(t.repair_image_file||"[]"),contractor:{id:t.contractor_id,name:t.contractor_name},cc_set:t.cc_set_array,cc_set_all_id_array:t.cc_set_all_id_array,reinspect:t.reinspect,reinspectBy:t.reinspectBy,reinspect_set:t.reinspect_set,reinspect_complete_date:t.reinspect_complete_date?h()(t.reinspect_complete_date).format("YYYY-MM-DD HH:mm"):"",close_date:t.close_date?h()(t.close_date).format("YYYY-MM-DD HH:mm"):"",close_reason:t.close_reason,created_by:t.created_by,place_point:JSON.parse(t.problem_values||"[]"),room_id:t.room_id,drawing_file:JSON.parse(t.drawing_file||"[]"),has_read:t.has_read,deduction:t.deduction}})).then((function(){i.problemData.currentReinspectBy=t.find(t.clone(i.problemData.reinspectBy),(function(t){return t.id===i.user.user_id}))||{reinspect_image_file:[]}})).then((function(){i.reloadActionPermissions()})).then((function(){if(i.problemData.repair_set&&i.problemData.repair_set.id===i.user.user_id&&0===i.problemData.has_read&&"待整改"===i.problemData.status)return i.problemData.has_read=1,g.a.problemRead(i.problemData.id)})).then((function(){return b.default.getProjectUsers(i.problemData.proj_id,[31,32,33]).then((function(e){i.repairOptions=t.clone(e),i.reinspectOptions=t.clone(e),i.ccOptions=t.clone(e)}))})).then((function(){return i.loadContractor()})).then((function(){return g.a.getLeaderComments(i.problemData.id).then((function(t){i.problemData.leaderComments=t.map((function(t){return C(C({},t),{},{comment_on:h()(t.comment_on).format("YYYY-MM-DD HH:mm")})}))}))})).catch((function(t){$log.error(t)})).finally((function(){i.isLoading=!1}))},reloadActionPermissions:function(){var e=this;this.allowView=this.user.user_id===this.problemData.created_by||"待整改"===this.problemData.status&&this.user.user_id===this.problemData.repair_set.id||"待复验"===this.problemData.status&&this.user.user_id===this.problemData.reinspect_set.id||t.some(this.problemData.cc_set_all_id_array,(function(t){return t.id===e.user.user_id})),this.allowChangeRepair="待整改"===this.problemData.status&&(this.user.user_id===this.problemData.repair_set.id||this.user.user_id===this.problemData.created_by),this.allowChangeRepairDeadline="待整改"===this.problemData.status&&this.user.user_id===this.problemData.created_by&&this.$store.state.global.allowModifyRepairDeadline,this.allowRepair="待整改"===this.problemData.status&&this.user.user_id===this.problemData.repair_set.id,this.allowClose="待整改"===this.problemData.status&&this.user.user_id===this.problemData.created_by,this.allowChangeReinspect="待整改"===this.problemData.status&&this.user.user_id===this.problemData.created_by||"待复验"===this.problemData.status&&(this.user.user_id===this.problemData.created_by||this.user.user_id===this.problemData.reinspect_set.id)&&t.isEmpty(this.problemData.reinspect),this.allowReinspectPass="待复验"===this.problemData.status&&this.user.user_id===this.problemData.reinspect_set.id,this.allowReinspectReject="待复验"===this.problemData.status&&this.user.user_id===this.problemData.reinspect_set.id,this.allowChangeCC="待整改"===this.problemData.status&&this.user.user_id===this.problemData.created_by||"待复验"===this.problemData.status&&this.user.user_id===this.problemData.reinspect_set.id,this.allowChangeContractor="待整改"===this.problemData.status&&this.user.user_id===this.problemData.created_by||"待复验"===this.problemData.status&&this.user.user_id===this.problemData.reinspect_set.id,this.problemData.is_timeout="待整改"===e.problemData.status?e.problemData.repair_deadline<h()().format("YYYY-MM-DD"):"已关闭"===e.problemData.status?e.problemData.repair_deadline<h()(e.problemData.close_date).format("YYYY-MM-DD"):e.problemData.repair_deadline<h()(e.problemData.repair_date).format("YYYY-MM-DD"),this.refreshProblemStatusText()},refreshProblemStatusText:function(){var t=this;this.problemData.status_text=this.problemData.status,g.a.getProblemLocalStatus({status:this.problemData.status}).then((function(e){t.problemData.status_text=e.status_text}))},showHuxingMark:function(){var e=this;t.isEmpty(this.problemData.drawing_file)?k.default.getRoomTypeDiagram(this.problemData.room_id).then((function(t){x.a.openPopup({mode:"view",url:t.url,points:e.problemData.place_point})})):x.a.openPopup({mode:"view",url:this.problemData.drawing_file[0]?this.problemData.drawing_file[0].url:"",points:this.problemData.place_point})},loadContractor:function(e){var i=this,a=this.problemData.repair_set&&this.problemData.repair_set.id||"";return _.a.getContractorListByUser(a,this.problemData.bidsection_id).then((function(a){i.contractorOptions=a.list,!t.isEmpty(a.list)&&e&&a.isGroupList&&(i.problemData.contractor=a.list[0])}))},selectDeadline:function(){var t=this;this.allowChangeRepairDeadline&&c.a.openPopup({from:h()().toDate(),inputDate:h()(this.problemData.repair_deadline).toDate(),callback:function(e){t.problemData.repair_deadline=h()(e).format("YYYY-MM-DD"),t.changeRepairDeadline()}})},changeRepairDeadline:function(){var t=this;this.allowChangeRepairDeadline&&(m.a.loading("正在修改..."),g.a.changeRepairDeadline(this.problemData).then((function(){t.reloadActionPermissions(),m.a.hideLoading(),m.a.alert("修改成功")})).catch((function(t){m.a.hideLoading(),m.a.alert(t)})))},beforeChangeRepair:function(t){return this.problemData.repair_set_old=this.problemData.repair_set,m.a.confirm("确定将整改人修改为【"+t.name+"】吗？")},changeRepair:function(t){var e=this;if(this.allowChangeRepair&&t&&t.id&&t.name){var i=this.problemData.contractor?this.problemData.contractor.id:"";m.a.loading("正在提交..."),this.problemData.repair_set=t,this.loadContractor(!0).then((function(){var t=i!==e.problemData.contractor?e.problemData.contractor.id:"";return g.a.changeRepair(e.problemData,t)})).then((function(){e.problemData.cc_set_all_id_array.push({id:f.a.getUser().user_id}),m.a.hideLoading(),m.a.alert("修改成功"),e.reloadActionPermissions(e.problemData),t.id===e.user.user_id?e.problemData.has_read=1:(e.problemData.has_read=0,e.$set(e.problemData,"repair_image_file",[]),e.repairRemarkUpdate())})).catch((function(t){m.a.hideLoading(),m.a.alert(t)}))}},beforeChangeReinspect:function(){return this.problemData.reinspect_set_old=this.problemData.reinspect_set,m.a.confirm("确定修改复验人吗？")},changeReinspect:function(t){var e=this;m.a.loading("正在提交..."),g.a.changeReinspect(this.problemData).then((function(){e.problemData.cc_set_all_id_array.push({id:f.a.getUser().user_id}),e.reloadActionPermissions(e.problemData),m.a.hideLoading(),m.a.alert("修改成功")})).catch((function(t){m.a.hideLoading(),m.a.alert(t)}))},repairRemarkUpdate:function(){g.a.saveRepairInfo(this.problemData.id,this.problemData.repair_remark,this.problemData.repair_image_file)},repairSubmit:function(){var t=this;return this.allowRepair?(m.a.loading("处理中"),g.a.repair(this.problemData).then((function(){t.problemData.cc_set_all_id_array.push({id:f.a.getUser().user_id}),m.a.hideLoading(),m.a.alert("提交成功"),t.loadData()})).catch((function(t){m.a.hideLoading(),m.a.alert(t)}))):_invalidOperation("CheckProblemDetailCtrl->repair")},reinspectSubmit:function(){var e=this;if(this.allowReinspectPass){if(!this.problemData.contractor.id)return m.a.alert("请指定责任单位");if(t.isEmpty(this.problemData.reinspect_set))return m.a.alert("请选择复验人"),!1;if(!this.$store.state.global.isPhotoRequired.SECURITY_CHECK_REVIEW||!t.isEmpty(this.problemData.currentReinspectBy.reinspect_image_file))return t.each(this.problemData.reinspectBy,(function(t,i){t.id===e.user.user_id&&(e.problemData.reinspectBy[i]=e.problemData.currentReinspectBy)})),m.a.popBox({title:"确定通过吗？",cancelText:"取消",okText:"通过"}).then((function(t){t&&(m.a.loading("正在提交..."),g.a.reinspectPass(e.problemData,"check-safety").then((function(){e.problemData.reinspect_complete_date=h()().format("YYYY-MM-DD HH:mm:ss"),e.problemData.cc_set_all_id_array.push({id:e.user.user_id}),m.a.hideLoading(),m.a.alert("提交成功"),e.loadData()})).catch((function(t){m.a.hideLoading(),m.a.alert(t)})))}));m.a.alert("请拍摄复验照片")}},changeCC:function(e){var i=this;this.allowChangeCC&&t.isArray(e)&&(m.a.loading("正在提交..."),this.problemData.cc_set=e,g.a.changeCC(this.problemData).then((function(){m.a.hideLoading(),m.a.alert("修改成功"),i.reloadActionPermissions(i.problemData)})).catch((function(t){m.a.hideLoading(),m.a.alert(t)})))},changeContractor:function(e){var i=this;this.allowChangeContractor&&(t.isEmpty(e)||(m.a.loading("正在提交..."),this.problemData.contractor={id:e.id,name:e.name},g.a.changeContractor(this.problemData).then((function(){m.a.hideLoading(),m.a.alert("修改成功"),i.reloadActionPermissions(i.problemData)})).catch((function(t){m.a.hideLoading(),m.a.alert(t)}))))},back:function(){var e=this;v.a.openPopup({callback:function(i){if(e.allowReinspectReject){var a=[];i&&i.reason&&i.reason.id&&(1===i.reason.id&&a.push(i.reason.text),i.remark&&a.push(i.remark),e.problemData.sent_back_remark=a.join(";")),t.isEmpty(i.images)?e.problemData.sent_back_image_file=[]:e.problemData.sent_back_image_file=i.images,m.a.loading("正在提交..."),g.a.reinspectReject(e.problemData).then((function(){e.problemData.cc_set_all_id_array.push({id:f.a.getUser().user_id}),m.a.hideLoading(),m.a.alert("提交成功"),e.reloadActionPermissions(e.problemData)})).catch((function(t){m.a.hideLoading(),m.a.alert(t)}))}}})},close:function(){var t=this;y.a.openPopup({callback:function(e){t.allowClose&&(t.problemData.close_reason=e,m.a.loading("正在提交..."),g.a.close(t.problemData).then((function(){t.problemData.close_date=h()(t.problemData.close_date).format("YYYY-MM-DD HH:mm"),t.problemData.cc_set_all_id_array.push({id:f.a.getUser().user_id}),m.a.hideLoading(),m.a.alert("提交成功"),t.reloadActionPermissions(t.problemData)})).catch((function(t){m.a.hideLoading(),m.a.alert(t)})))}})},copyProblem:function(){var t=this;$log.log("复制问题"),g.a.copyProblem(this.problemData.id).then((function(){w.a.saveString("fly-inspect-index-tab-index","0"),m.a.alert("复制成功").then((function(){t.$router.go(-1)}))})).catch((function(t){$log.error(t),m.a.alert("发生了错误")}))},_invalidOperation:function(t){$log.error("非法操作："+t)}}}}).call(this,i("391c"))},"409b":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),r=i("e2a7"),n=i("e89f"),o=i("07d2"),s=i("3c64"),c=i("e68e");function l(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}e.a={name:"ProblemBack",components:{Item:o.a,ItemTextarea:s.a,ItemImgList:c.a},mixins:[n.a],props:{},data:function(){return{show:!1,reasonList:[],hasImages:!1,fixedRemark:!1,reason:{id:"",text:""},images:[],remark:""}},methods:{openPopup:function(e){t.isEmpty(e.reasonList)?this.reasonList=[{id:1,text:"问题登记错误"},{id:2,text:"已整改并复验通过"},{id:4,text:"无法整改"},{id:5,text:"延误整改窗口期"},{id:6,text:"留待后期整改"},{id:3,text:"其它",remarkRequire:!0}]:this.reasonList=t.clone(e.reasonList),this.callback=e.callback,this.beforeCallback=e.beforeCallback,this.value=!0,this.show=!0,t.isEmpty(e.reason)?(this.reason.id="",this.reason.text=""):(this.reason.id=e.reason.id,this.reason.text=e.reason.text),this.images=t.map(e.images,(function(t){return function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?l(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},t)})),this.remark=e.remark||"",this.hasImages=!!e.hasImages,this.fixedRemark=!!e.fixedRemark,this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},selectItem:function(t){this.reason=t},submit:function(){var e,i=this,a="";if(this.reason&&this.reason.id)a=this.reason.text;else if(""===this.remark)return void r.a.alert("请选择关闭原因");if(this.reason.remarkRequire){if(""===this.remark)return void r.a.alert("请输入关闭原因");a=this.remark}e=this.hasImages?{reason:this.reason,remark:this.remark,images:this.images}:a;var n=!this.beforeCallback||this.beforeCallback(e);n&&n.then&&t.isFunction(n.then)?n.then((function(t){!1!==t&&(i.callback&&i.callback(e),i.closePopup())})):!1!==n&&(this.callback&&this.callback(e),this.closePopup())}}}}).call(this,i("391c"))},5033:function(t,e,i){var a=i("5454");(t.exports=i("690e")(!1)).push([t.i,".zjapp .drawing-con[data-v-fba5990a]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;font-size:0;line-height:0}.zjapp .drawing-con canvas[data-v-fba5990a]{display:block;height:100%;width:100%;background:url("+a(i("eb66"))+") #fff;background-size:4px 4px}.zjapp .loading-text[data-v-fba5990a]{margin-top:15px;color:#aaa}.zjapp .error-text[data-v-fba5990a],.zjapp .loading-text[data-v-fba5990a]{padding:0 15px;line-height:20px;text-align:center;font-size:16px}.zjapp .error-text[data-v-fba5990a]{color:#ff3d3d}",""])},"515e":function(t,e,i){"use strict";var a=i("329b"),r=i("f1e4").a,n=(i("fe9e"),i("17cc")),o=Object(n.a)(r,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{class:{"content-not-empty":t.content.length},attrs:{mode:"dialog",title:"检查指引","on-close":t.closePopup}},[t.isLoading?t._e():i("div",{staticClass:"check-guide-detail-hd border-bottom"},[i("h2",{staticClass:"check-guide-detail-title pb10"},[t._v(t._s(t.title))])]),!t.isLoading&&t.content.length?i("div",{staticClass:"check-guide-detail-content"},t._l(t.content,(function(e,a){return i("p",{key:a},[e.isImg&&e.src?i("img",{class:{"img-not-ready":!e.ready,error:"rejected"===e.status},attrs:{src:t.getThumbnail(e)},on:{error:function(i){t.imgError(e,a)},click:function(i){t.imgClick(e)}}}):t._e(),e.isImg?t._e():i("span",[t._v("\n          "+t._s(e.val)+"\n        ")])])}))):t._e(),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.content.length,"empty-text":"PC端未设置检查指引"}})],1):t._e()],1)}),[],!1,null,"43042f0d",null).exports,s=!1;s||(s=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));e.a=s},"542f":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .layout-main[data-v-29e0b631] .layout-content{overflow:auto}[data-v-29e0b631] .item .icon{color:#4275e8}.zjapp .item-con[data-v-29e0b631] .item-img-list{margin-top:-8px}",""])},"574c":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .item-textarea{background-color:#fff;padding:5px 15px}.zjapp .item-textarea-content{position:relative}.zjapp .item-textarea .rule,.zjapp .item-textarea textarea{width:100%;min-height:40px;line-height:20px;font-size:16px;padding:0;border:none}.zjapp .item-textarea .rule{position:absolute;top:0;left:0;visibility:hidden;word-break:break-all}.zjapp .item-textarea .counter{text-align:right;margin:0 0 -5px 0;height:15px;line-height:15px;color:#b2b2b2;font-size:12px}",""])},"59a7":function(t,e,i){"use strict";var a=i("329b"),r=i("409b").a,n=(i("d2d4"),i("17cc")),o=Object(n.a)(r,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"选择非正常关闭原因","on-close":t.closePopup}},[t._l(t.reasonList,(function(e,a){return i("item",{key:a,staticStyle:{"min-height":"46px","align-items":"center"},attrs:{mode:"view",border:"bottom",text:e.text,"icon-right":e.id===t.reason.id?"qualified":"","icon-right-color":"color-theme"},on:{click:function(i){t.selectItem(e)}}})})),i("div",{staticClass:"mt10"},[t.hasImages?i("item",{staticClass:"p15"},[i("item-img-list",{model:{value:t.images,callback:function(e){t.images=e},expression:"images"}})],1):t._e(),t.reason.remarkRequire||t.fixedRemark?i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"补充说明"},model:{value:t.remark,callback:function(e){t.remark=e},expression:"remark"}}):t._e()],1),i("app-button-group",[i("app-button",{on:{click:t.submit}},[t._v("提交")])],1)],2):t._e()],1)}),[],!1,null,"e24c0d3a",null).exports,s=!1;s||(s=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));e.a=s},"5a71":function(t,e,i){"use strict";var a=i("29be").a,r=i("17cc"),n=Object(r.a)(a,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("item",{class:t.required,attrs:{label:t.title,text:t.value&&t.value.id?t.value.name:"view"===t.mode?"无":"",mode:t.mode,editabled:t.editabled,placeholder:t.required?t.placeholder||"请选择":"选填","form-check":t.formCheck},on:{click:t.openSelect}})}),[],!1,null,null,null);e.a=n.exports},"5c19":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .content-not-empty[data-v-43042f0d] .layout-content{display:auto;overflow:auto;padding-bottom:100px}.zjapp .check-guide-detail-hd[data-v-43042f0d]{margin-left:30px;padding:25px 30px 5px 0}.zjapp .check-guide-detail-title[data-v-43042f0d]{margin:0;line-height:20px;font-size:18px;color:#111;font-weight:700;word-break:break-all}.zjapp .check-guide-detail-info[data-v-43042f0d]{line-height:20px;font-size:14px;color:#8c8c8c}.zjapp .check-guide-detail-content[data-v-43042f0d]{padding:30px;line-height:30px;color:#333;font-size:16px}.zjapp .check-guide-detail-content p[data-v-43042f0d]{margin-bottom:30px;min-height:1em}.zjapp .check-guide-detail-content img[data-v-43042f0d]{max-width:100%}.zjapp .check-guide-detail-content .img-not-ready[data-v-43042f0d]{width:80px;height:auto}.zjapp .error[data-v-43042f0d]{max-width:50%}",""])},"5e1b":function(t,e,i){"use strict";var a=i("329b"),r=(i("6d57"),i("e10e"),i("6bf2")),n=i.n(r);var o={name:"DatepickerDialog",components:{},mixins:[i("e89f").a],props:{},data:function(){return{show:!1,isLoading:!0,today:"",currentYear:"",currentMonth:"",currentDate:"",yearsList:[],monthsList:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],weeksList:["日","一","二","三","四","五","六"],showYearSelect:!1,showMonthSelect:!1,dayList:[]}},methods:{openPopup:function(t){this.value=!0,this.show=!0,this.from=t.from,this.to=t.to,this.inputDate=n()(t.inputDate).isValid()?n()(n()(t.inputDate).format("YYYY-MM-DD")):n()(n()().format("YYYY-MM-DD")),this.callback=t.callback,this.today=n()(n()().format("YYYY-MM-DD")).valueOf(),this.from?this.fromDate=n()(n()(this.from).format("YYYY-MM-DD")).valueOf():this.fromDate=0,this.to?this.toDate=n()(n()(this.to).format("YYYY-MM-DD")).valueOf():this.toDate=1/0,this.selctedDateEpoch=n()(n()(this.inputDate).format("YYYY-MM-DD")).valueOf(),this.refreshDateList(this.inputDate),this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},closeSelectList:function(){this.showYearSelect=!1,this.showMonthSelect=!1},prevMonth:function(){this.currentDate=n()(this.currentDate).subtract(1,"month"),this.currentMonth=this.monthsList[this.currentDate.month()],this.currentYear=this.currentDate.year(),this.refreshDateList(this.currentDate)},nextMonth:function(){this.currentDate=n()(this.currentDate).add(1,"month"),this.currentMonth=this.monthsList[this.currentDate.month()],this.currentYear=this.currentDate.year(),this.refreshDateList(this.currentDate)},selectYear:function(){this.showYearSelect=!this.showYearSelect,this.showMonthSelect=!1},setYear:function(t){this.currentYear=t,this.yearChanged(t),this.showYearSelect=!1},selectMonth:function(){this.showYearSelect=!1,this.showMonthSelect=!this.showMonthSelect},setMonth:function(t){this.currentMonth=t,this.monthChanged(t),this.showMonthSelect=!1},dateSelected:function(t){t&&0!==Object.keys(t).length&&(this.selctedDateEpoch=t.epoch,this.callback(this.selctedDateEpoch),this.closePopup())},monthChanged:function(t){var e=this.monthsList.indexOf(t);this.currentDate.month(e),this.refreshDateList(this.currentDate)},yearChanged:function(t){this.currentDate.year(t),this.refreshDateList(this.currentDate)},refreshDateList:function(t){var e=[];this.isLoading=!0,t=n()(n()(t).format("YYYY-MM-DD")),this.currentDate=t,this.currentYear="",this.currentMonth="";var i,a,r=this.currentDate.daysInMonth();this.yearsList=function(t,e){var i=[],a=2015,r=2100;a=t?n()(t).year():a,r=e?n()(e).year():r;for(var o=a;o<=r;o++)i.push(o);return i}(),this.dayList=[];var o=n()(this.currentDate).startOf("month").day();this.firstDayEpoch=n()(this.currentDate).startOf("month").valueOf(),this.lastDayEpoch=n()(this.currentDate).endOf("month").startOf("day").valueOf();for(var s=1;s<=r;s++)a=(i=n()(this.currentDate).date(s)).valueOf()<this.fromDate||i.valueOf()>this.toDate,e.push({date:i.date(),month:i.month(),year:i.year(),day:i.day(),epoch:i.valueOf(),disabled:a}),this.dayList=e;for(var c=0;c<o;c++)this.dayList.unshift({});this.rows=[0,7,14,21,28,35],this.cols=[0,1,2,3,4,5,6],this.currentMonth=this.monthsList[t.month()],this.currentYear=this.currentDate.year(),this.numColumns=7,this.isLoading=!1}}},s=(i("80d8"),i("17cc")),c=Object(s.a)(o,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"选择日期","on-close":t.closePopup},on:{click:function(e){t.closeSelectList()}}},[t.isLoading?t._e():i("div",{staticClass:"datepicker-hd"},[i("div",{class:{"datepicker-prev":!0,disabled:t.firstDayEpoch-864e5<t.fromDate},on:{click:t.prevMonth}},[i("icon",{attrs:{name:"arrow-left"}})],1),i("div",{staticClass:"datepicker-hd-center"},[i("div",{staticClass:"datepicker-year",on:{click:function(e){return e.stopPropagation(),t.selectYear(e)}}},[t._v("\n          "+t._s(t.currentYear)+"\n\n          "),i("transition",{attrs:{name:"spread"}},[t.showYearSelect?i("div",{staticClass:"select-list",on:{click:function(t){t.stopPropagation()}}},t._l(t.yearsList,(function(e,a){return i("div",{key:a,class:{"select-item":!0,"item-selected":t.currentYear===e},on:{click:function(i){t.setYear(e)}}},[t._v("\n                "+t._s(e)+"\n              ")])}))):t._e()])],1),i("div",{staticClass:"datepicker-month",on:{click:function(e){e.stopPropagation(),t.selectMonth()}}},[t._v("\n          "+t._s(t.currentMonth)+"\n          "),i("transition",{attrs:{name:"spread"}},[t.showMonthSelect?i("div",{staticClass:"select-list",on:{click:function(t){t.stopPropagation()}}},t._l(t.monthsList,(function(e,a){return i("div",{key:a,class:{"select-item":!0,"item-selected":t.currentMonth===e},on:{click:function(i){t.setMonth(e)}}},[t._v("\n                "+t._s(e)+"\n              ")])}))):t._e()])],1)]),i("div",{class:{"datepicker-next":!0,disabled:t.lastDayEpoch+864e5>t.toDate},on:{click:t.nextMonth}},[i("icon",{attrs:{name:"arrow-right"}})],1)]),t.isLoading?t._e():i("div",{staticClass:"calendar"},[i("div",{staticClass:"weeks-row"},t._l(t.weeksList,(function(e,a){return i("div",{key:a,staticClass:"weeks-cell"},[t._v("\n          "+t._s(e)+"\n        ")])}))),t._l(t.rows,(function(e,a){return i("div",{key:a,staticClass:"date-row"},t._l(t.cols,(function(a,r){return i("div",{key:r,staticClass:"date-cell",class:{"date-cell-selected":t.dayList[e+a]&&t.dayList[e+a].epoch===t.selctedDateEpoch,today:t.dayList[e+a]&&t.dayList[e+a].epoch===t.today,disabled:t.dayList[e+a]&&t.dayList[e+a].disabled},on:{click:function(i){t.dateSelected(t.dayList[e+a])}}},[t._v("\n          "+t._s(t.dayList[e+a]&&t.dayList[e+a].date)+"\n        ")])})))}))],2)]):t._e()],1)}),[],!1,null,"0a266c44",null).exports,l=!1;l||(l=new(a.default.extend(c))({el:document.createElement("div")}),document.body.appendChild(l.$el));e.a=l},7434:function(t,e,i){var a=i("0cb6");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("f6a1180a",a,!0,{sourceMap:!1,shadowMode:!1})},"75ca":function(t,e,i){"use strict";var a=i("329b"),r=i("3480").a,n=(i("d6fa"),i("17cc")),o=Object(n.a)(r,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:(t.multiple?"":"选择")+"退回原因","on-close":t.closePopup}},[t.multiple?t._e():i("div",[i("div",{staticClass:"list"},t._l(t.reasonList,(function(e,a){return i("item",{key:a,attrs:{mode:"edit","icon-right":e.id===t.reason.id?"qualified":"","icon-right-color":"color-theme"},on:{click:function(i){t.selectItem(e)}}},[i("div",{staticClass:"item-text"},[t._v("\n            "+t._s(e.text)+"\n          ")])])}))),i("item-textarea",{staticClass:"mt10",attrs:{placeholder:t.placeholder},model:{value:t.remark,callback:function(e){t.remark=e},expression:"remark"}}),i("item",{staticClass:"p15"},[i("item-img-list",{attrs:{maxlength:15,"allow-select-album":t.allowSelectAlbum,"allow-buildin-album":t.allowBuildinAlbum},model:{value:t.images,callback:function(e){t.images=e},expression:"images"}})],1),i("app-button-group",[i("app-button",{on:{click:t.submit}},[t._v("提交")])],1)],1),t.multiple?i("div",[i("div",{staticClass:"list"},t._l(t.reasonList,(function(e,a){return i("item",{key:a,attrs:{mode:"edit","icon-back":t.isBack,"icon-left":e.checked?"qualified":""},on:{click:function(i){t.selectItem(e)}}},[i("div",{staticClass:"item-text"},[t._v("\n            "+t._s(e.text)+"\n          ")])])}))),i("div",{staticClass:"list mt10"},[i("item",{staticClass:"p15"},[i("item-img-list",{attrs:{maxlength:15,"allow-select-album":t.allowSelectAlbum,"allow-buildin-album":t.allowBuildinAlbum},model:{value:t.images,callback:function(e){t.images=e},expression:"images"}})],1),i("item-textarea",{staticClass:"mt10",attrs:{placeholder:t.placeholder},model:{value:t.remark,callback:function(e){t.remark=e},expression:"remark"}})],1),i("app-button-group",[i("app-button",{on:{click:t.submit}},[t._v("确认退回")])],1)],1):t._e()]):t._e()],1)}),[],!1,null,"29e0b631",null).exports,s=!1;s||(s=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));e.a=s},"80d8":function(t,e,i){"use strict";i("e60b")},"81f2":function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .main[data-v-2cac8864]{position:fixed;width:100%;bottom:0}.zjapp .arrow[data-v-2cac8864]{position:absolute;top:-7px;right:18px;width:0;height:0;border-bottom:7px solid #fff;border-right:7px solid transparent;border-left:7px solid transparent}.zjapp .content[data-v-2cac8864]{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-2cac8864]{display:flex;flex-direction:column;background-color:#fff;overflow:auto}.zjapp .box-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1}.zjapp .detail-hd[data-v-2cac8864]{display:flex;padding:6px 15px}.zjapp .detail-arrow-right[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-right[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:12px;border:5px solid transparent;border-left:5px solid #c8c8c8}.zjapp .detail-arrow-down[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-down[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:15px;border:5px solid transparent;border-top:5px solid #c8c8c8}.zjapp .detail-title[data-v-2cac8864]{flex:1;line-height:34px;color:#111;font-size:16px}.zjapp .detail-bd[data-v-2cac8864]{padding:8px 15px 8px 35px;background-color:#fafafa}.zjapp .text-line[data-v-2cac8864]{font-size:14px;color:#666;line-height:30px;margin-bottom:30px}.zjapp .detail-hd-single[data-v-2cac8864]{padding:6px 0;margin:0 15px}.zjapp .detail-bd-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1;padding:8px 15px;background-color:#fff}',""])},9120:function(t,e,i){var a=i("2ddb");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("cb55f532",a,!0,{sourceMap:!1,shadowMode:!1})},"91c1":function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e"),i("9a33");var a=i("28f8"),r=i("e68e"),n=i("6f9e"),o=i("bcc7"),s=i("e89f");function c(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function l(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?c(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):c(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"CheckGuideDetailDrop",components:{ItemImgList:r.a},mixins:[s.a],data:function(){return{show:!1,showList:!1,isLoading:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,module:"",itemIds:[],data:[],target:""}},watch:{show:function(t){var e=this;t&&this.$nextTick((function(){e.showList=!0}))}},created:function(){n.a.$on("routerBeforeEach",this.closePopup),n.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){n.a.$off("routerBeforeEach",this.closePopup),n.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(e){this.show=!0,this.$emit("open"),this.module=e.module,this.itemIds=e.itemIds,this.options=e.options;var i=document.querySelector(".layout-main .layout-header");if(this.contentTop=i.offsetHeight,e.el){var a=e.el.getBoundingClientRect();this.contentTop=a.bottom}this.target=e.el,this.listHeight=t.minBy([window.innerHeight-this.contentTop-50,510]),this.getData()},closePopup:function(){var t=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(e){t.$on("afterClosePopup",e)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(t){t&&t.target&&t.target!==this.target&&this.show&&this.closePopup()},getData:function(){var e=this;return this.options&&this.options.length?(this.data=t.map(this.options,(function(t){return l(l({},t),{},{isOpen:!1})})),Promise.resolve()):o.a.getMeasureCheckItem(this.itemIds).then((function(i){e.data=t.map(i,(function(e){var i=e.content?e.content.trim():"",a=i?i.split("\n"):[],r=e.content_image?JSON.parse(e.content_image):[],n=t.filter(a,(function(t){return!/<img([\s\S]*)>/gm.test(t)}));return t.each(r,(function(t){t.url=t.url.split("@")[0]})),{id:e.id,name:e.full_name,textArr:n,contentImage:r,isOpen:!1}}))})).catch((function(t){console.error(t)}))},toggleItem:function(t){this.data.length>1&&this.$set(t,"isOpen",!t.isOpen)}}}}).call(this,i("391c"))},9446:function(t,e,i){var a=i("2dd6");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("2192cd00",a,!0,{sourceMap:!1,shadowMode:!1})},9788:function(t,e,i){"use strict";i("9446")},"9ab7":function(t,e,i){var a=i("542f");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("8c69df94",a,!0,{sourceMap:!1,shadowMode:!1})},"9b25":function(t,e,i){"use strict";i("b09a")},a093:function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e"),i("f548");var a=i("28f8"),r=(i("9dd9"),i("cc57"),i("e204"),i("9eea")),n=i("3156b"),o=i("774b"),s=i("e89f"),c=i("6f9e");function l(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function d(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?l(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"AppSingleSelect",components:{appSearchBar:r.a,item:n.a,Scroller:o.a},mixins:[s.a],props:{},data:function(){return{activeTab:[],storageKey:encodeURI(this.title||"singleSelectMark"),storageVal:[],keyword:"",searchStatus:!1,checkedItem:{},show:!1,searchData:[],options:[],optionsLimit:20,pagingOptions:!1,searchBar:!0,category:[],ifToggle:!1,editorAddData:!1,lineLimit:1}},computed:{optionsShow:function(){return this.options&&this.options.length?this.grouping?this.getGroupData():this.options.slice(0,this.optionsLimit):[]}},watch:{keyword:function(t){var e=this;this.$nextTick((function(){e.filterList(t)}))}},methods:{openPopup:function(e){if(console.log(e),this.value=!0,this.show=!0,this.category=[],c.a.$on("closeDialog",this.closePopup),this.title=e.title,this.selected=e.selected,this.checkedItem=e.selected,this.options=e.options,this.onSelect=e.onSelect,this.searchBar=e.searchBar,this.grouping=e.grouping,this.rightBtn=e.rightBtn,this.rightBtnEvent=e.rightBtnEvent,this.ifToggle=e.ifToggle,this.lineLimit=e.lineLimit,this.editorAddData=e.editorAddData,e.grouping&&e.autoOpen){var i=t.uniqBy(t.map(this.options,e.grouping));this.activeTab=t.map(i,(function(t,e){return e}))}this.storageKey=encodeURI(this.title||"singleSelectMark"),this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},closeEvent:function(){c.a.$off("closeDialog",this.closePopup),this.value=!1,this.show=!1,this.keyword="",this.searchStatus=!1,this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].cancelSearch()},customAddSupplier:function(t){return this.options.findIndex((function(e){return e.name===t}))},selectItem:function(t){var e=this;this.ifToggle&&this.checkedItem.id===t.id?this.checkedItem={}:this.checkedItem=t,this.onSelect(this.checkedItem),this.$refs["app-search-bar"]&&this.$refs["app-search-bar"].saveHistory(),window.setTimeout((function(){e.closeEvent()}),300)},onSearchTypeChange:function(t){this.searchStatus=t},filterList:function(t){var e,i,a=this,r=new RegExp("("+t+")","gmi");if(this.category=[],this.keyword=t,this.searchData=[],!t)return!1;this.options.map((function(t){return r.test(t.name)&&(i=d(d({},t),{},{rename:t.name.replace(r,"<label>$1</label>")}),a.grouping?-1===(e=a.category.indexOf(i[a.grouping]))?(a.category.push(i[a.grouping]),a.searchData.push({name:i[a.grouping],children:[i]})):a.searchData[e].children.push(i):a.searchData.push(i)),t}))},pageOptions:function(){this.optionsLimit=this.optionsLimit+20,this.pagingOptions=!1},getGroupData:function(){var t,e=this,i=[];return this.category=[],this.options.map((function(a){return-1===(t=e.category.indexOf(a[e.grouping]))?(e.category.push(a[e.grouping]),i.push({name:a[e.grouping],children:[a]})):i[t].children.push(a),a})),i}}}}).call(this,i("391c"))},a300:function(t,e,i){"use strict";(function(t){i("5ab2"),i("6d57"),i("e10e");var a=i("28f8"),r=i("e89f"),n=i("e2a7"),o=i("4360"),s=i("e223");function c(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}e.a={name:"DrawingDialog",store:o.a,components:{Drawing:s.a},mixins:[r.a],data:function(){return{show:!1,mode:"",url:"",points:[],folder:"",maxMarks:1/0,onmark:function(){}}},methods:{openPopup:function(t){return this.mode=t.mode,this.url=t.url,this.points=t.points,this.folder=t.folder,this.maxMarks=isNaN(t.maxMarks)?1/0:t.maxMarks,this.onmark=t.onmark,this.show=!0,this.$emit("open"),this},closePopup:function(){this.show=!1,this.$emit("close")},undo:function(){this.points.pop()},sure:function(){this.points.length?(this.closePopup(),this.onmark&&this.onmark(this.points)):n.a.alert("请先在户型图标记位置")},pointLight:function(e){this.points=t.map(this.points,(function(t,i){var r=function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?c(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):c(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},t);return e===i?r.color="#4275e8":r.found?r.color="#14ff56":r.color="#ff4546",r}))},onclick:function(t){var e=this;if("view"===this.mode){if(t.clickPoint&&"points"===t.clickPoint.tag){var i=t.clickPoint.index;this.pointLight(i)}}else if("mark-val-group"===this.mode){if(this.points.length>=maxMarks)return void n.a.alert("爆点个数不能大于实测点数");this.points.push({x:t.x,y:t.y})}else if("multiple-remark"===this.mode)this.points.push({x:t.x,y:t.y});else{var a={x:t.x,y:t.y};this.points=[a],setTimeout((function(){e.closePopup(),e.onmark&&e.onmark(a)}),200)}}}}}).call(this,i("391c"))},a5c6:function(t,e,i){"use strict";var a=i("329b"),r=i("a093").a,n=(i("f3d7"),i("17cc")),o=Object(n.a)(r,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{title:t.title,mode:"dialog","on-close":t.closeEvent}},[t.rightBtn&&!t.editorAddData||t.rightBtn&&t.editorAddData&&(!t.selected.name||t.customAddSupplier(t.selected.name)>-1)?i("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:function(e){t.rightBtnEvent(t.category)}},slot:"header-bar-right"},[t._v("\n      "+t._s(t.rightBtn)+"\n    ")]):t._e(),i("scroller",{attrs:{"has-next":!t.searchStatus&&!t.grouping&&t.optionsLimit<t.options.length,"end-text":"","is-empty":0===t.optionsShow.length},on:{loadNext:t.pageOptions}},[t.searchBar?i("app-search-bar",{ref:"app-search-bar",attrs:{placeholder:"搜索","history-key":t.storageKey},on:{changeSearchStatus:t.onSearchTypeChange},model:{value:t.keyword,callback:function(e){t.keyword=e},expression:"keyword"}}):t._e(),t.searchStatus?[t.keyword?[t.grouping?i("van-collapse",{model:{value:t.activeTab,callback:function(e){t.activeTab=e},expression:"activeTab"}},t._l(t.searchData,(function(e,a){return i("van-collapse-item",{key:a,attrs:{title:e.name,name:a}},t._l(e.children,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit,"render-field":"rename"},on:{click:t.selectItem}})})))}))):t._e(),t.grouping&&!t.searchData.length?i("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容","show-style":"search"}}):t._e(),t.grouping?t._e():[t._l(t.searchData,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit,"render-field":"rename"},on:{click:t.selectItem}})})),t.searchData.length?t._e():i("loading-status",{attrs:{"is-empty":!0,"empty-text":"没有内容","show-style":"search"}})]]:t._e()]:["-1"===t.selected.id&&t.customAddSupplier(t.selected.name)<0&&t.editorAddData?i("div",{staticClass:"supplier-editor",on:{click:t.closePopup}},[i("span",{staticClass:"title"},[t._v(t._s(t.selected.name))]),i("span",{staticClass:"icon"},[i("i",{staticClass:"iconfont icon-edit margin-r",on:{click:t.rightBtnEvent}}),i("i",{staticClass:"iconfont icon-qualified"})])]):t._e(),t.grouping?i("van-collapse",{model:{value:t.activeTab,callback:function(e){t.activeTab=e},expression:"activeTab"}},t._l(t.optionsShow,(function(e,a){return i("van-collapse-item",{key:a,attrs:{title:e.name,name:a}},t._l(e.children,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit},on:{click:t.selectItem}})})))}))):t._l(t.optionsShow,(function(e,a){return i("item",{key:a,attrs:{checked:t.checkedItem.id===e.id,item:e,"line-limit":t.lineLimit},on:{click:t.selectItem}})})),t.optionsShow.length?t._e():i("loading-status",{attrs:{"is-empty":!0,"empty-text":"暂无数据","show-style":"search"}})]],2)],1):t._e()],1)}),[],!1,null,"e465319c",null).exports,s=!1;s||(s=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));e.a=s},b09a:function(t,e,i){var a=i("2939");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("65170d73",a,!0,{sourceMap:!1,shadowMode:!1})},b6da:function(t,e,i){"use strict";var a=i("329b"),r=i("a300").a,n=i("17cc"),o=Object(n.a)(r,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"户型图","on-close":t.closePopup}},[i("drawing",{staticStyle:{flex:"1"},attrs:{url:t.url,points:t.points,folder:t.folder},on:{onclick:t.onclick}}),"multiple-remark"===t.mode?i("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[i("app-button",{staticStyle:{width:"50%"},attrs:{type:t.points.length?"warning":"normal",plain:""},on:{click:t.undo}},[t._v("\n        撤销\n      ")]),i("app-button",{on:{click:t.sure}},[t._v(" 确定 ")])],1):t._e()],1):t._e()],1)}),[],!1,null,null,null).exports,s=!1;s||(s=new(a.default.extend(o))({el:document.createElement("div")}),document.body.appendChild(s.$el));e.a=s},c070:function(t,e,i){var a=i("574c");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("35590dcb",a,!0,{sourceMap:!1,shadowMode:!1})},c40a:function(t,e,i){"use strict";(function(t){i("cc57"),i("6d57"),i("6f84"),i("163d");var a=i("a32d"),r=i.n(a),n=i("e900"),o=i("3122"),s=i("4ad6"),c=i("3bd5"),l=i("1b7e");function d(t){var e=t.changedTouches.length,i=t.touches.length;return 1===e||2===e||2===i}function p(t){return 1===t.touches.length}e.a={name:"Drawing",props:{url:{type:String},points:{type:Array,default:function(){return[]}},regions:{type:Array,default:function(){return[]}},pointColor:{type:String,default:"#ff4546"},pointRadius:{type:Number,default:7},scaleMax:{type:Number,default:4},clickDelay:{type:Number,default:500},folder:{type:String,default:"house-image"},onlineMode:{type:Boolean,default:!1},contentScroll:{type:Boolean,default:!0}},data:function(){return{isDownloading:!1,error:"",canvas:null,ctx:null,img:null,src:"",width:0,height:0,x:0,y:0,scale:1,defaultScale:1,pixelRatio:1,markPosition:null,markPositionImageData:[],markCoordinates:[],pinchRatio:0,scaleBetween:[],isPinch:!1,clickPoints:[],touchStart:{x:0,y:0,cx:0,cy:0,time:0}}},watch:{url:function(){this.getImage()},points:function(t){this.ctx&&this.draw()},regions:function(t){this.ctx&&this.draw()}},mounted:function(){this.getImage()},destroyed:function(){this.canvas&&(this.canvas.width=0,this.canvas.height=0)},methods:{getImage:function(){var e=this;if(this.isDownloading=!0,this.url){var i=c.a.getUser().user_id,a=r.a.replaceAll(this.url,"\\?x-oss-process=image\\/resize,","@"),n=r.a.strRightBack(a,"/");if(!n)return this.error="户型图地址错误",void(this.isDownloading=!1);this.error="";var d=[s.a.appImagePath()+i+"/"+this.folder+"/"+n,s.a.appImagePath()+i+"/house-image/"+n,s.a.appImagePath()+i+"/drawing/"+n,s.a.appImagePath()+i+"/location-image/"+n,s.a.appImagePath()+i+"/images/"+n,s.a.appDataPath()+i+"/"+this.folder+"/"+n,s.a.appDataPath()+i+"/house-image/"+n,s.a.appDataPath()+i+"/drawing/"+n,s.a.appDataPath()+i+"/location-image/"+n,s.a.appDataPath()+i+"/images/"+n],p=Promise.resolve();return"dev"===APP_ENV||this.onlineMode?p=p.then((function(){return e.url})):t.each(d,(function(t){p=p.then((function(e){return e||s.a.isFileExists(t).then((function(e){if(e)return o.a._fixPath(t)}))}))})),p.then((function(t){if(!t)return l.a.getHasNetwork().then((function(t){return t?o.a.download(e.url,!0,e.folder).then((function(t){e.src=t})):Promise.reject("当前无网络")}));e.src=t})).then((function(){e.src?(e.img=new Image,e.img.onload=function(){e.img.complete?(e.isDownloading=!1,e.$nextTick(e.init)):(e.error="加载图片失败",e.isDownloading=!1)},e.img.onerror=function(){e.error="加载图片失败",e.isDownloading=!1},e.img.src=e.src):(e.error="下载户型图失败",e.isDownloading=!1)})).catch((function(i){e.error=t.isString(i)?i:"下载户型图失败",e.isDownloading=!1}))}this.error="户型图地址错误",this.isDownloading=!1},init:function(){if(this.$refs["drawing-canvas"]){var t=this.$refs.content;this.canvas=this.$refs["drawing-canvas"],this.ctx=this.canvas.getContext("2d"),this.width=t.offsetWidth,this.height=t.offsetHeight,this.pixelRatio=this.getPixelRatio(this.ctx),this.canvas.style.height=this.height+"px",this.canvas.style.width=this.width+"px",this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,!this.ctx.extended&&Object(n.a)(this.ctx),this.bindTouchEvent(),this.calc(),this.draw()}},getPixelRatio:function(t){var e=t.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/e},calc:function(t){var e=this.width/this.img.width,i=this.img.height*e,a=this.height||i;i>this.height&&(e*=a/i),this.scale=e*this.pixelRatio,this.defaultScale=this.scale,this.scaleBetween=[this.scale,this.scale*this.scaleMax]},winToCanvas:function(t,e){var i=this.canvas.getBoundingClientRect();return{x:t-i.left*(this.canvas.width/(i.width*this.pixelRatio)),y:e-i.top*(this.canvas.height/(i.height*this.pixelRatio))}},isBoundary:function(t){switch(t){case"t":if(0===this.y)return!0;break;case"r":if(this.x<=this.canvas.width-this.img.width*this.scale)return!0;break;case"b":if(this.y<=this.img.height*this.scaleBetween[0]-this.img.height*this.scale)return!0;break;case"l":if(0===this.x)return!0}return!1},bindTouchEvent:function(){this.canvas.addEventListener("touchstart",this.onTouchstart),this.canvas.addEventListener("touchmove",this.onTouchmove),this.canvas.addEventListener("touchend",this.touchMoveAndEndHandler)},unbindTouchEvent:function(){this.canvas.removeEventListener("touchstart",this.onTouchstart),this.canvas.removeEventListener("touchmove",this.onTouchmove),this.canvas.removeEventListener("touchend",this.touchMoveAndEndHandler)},onTouchstart:function(t){if(this.isPinch=!1,p(t)){var e=t.touches[0],i=this.winToCanvas(e.clientX,e.clientY);this.touchStart={x:i.x,y:i.y,cx:e.clientX,cy:e.clientY,time:Date.now()}}else if(d(t)){var a,r=t.touches[0],n=t.touches[1],o=this.winToCanvas(r.clientX,r.clientY),s=this.winToCanvas(n.clientX,n.clientY);a=Math.sqrt(Math.pow(s.x-o.x,2)+Math.pow(s.y-o.y,2)),this.pinchRatio=this.scale/a}},onTouchmove:function(t){if(!1===this.contentScroll&&(t.preventDefault(),t.stopPropagation()),p(t))this.touchStart.cy>t.pageY&&this.isBoundary("b")||this.touchStart.cy<t.pageY&&this.isBoundary("t")||this.touchStart.cx>t.pageX&&this.isBoundary("r")||this.touchStart.cx<t.pageX&&this.isBoundary("l")||t.stopPropagation(),this.touchMoveAndEndHandler(t);else if(d(t)){t.stopPropagation();var e,i,a,r,n,o=t.touches[0],s=t.touches[1],c=this.winToCanvas(o.clientX,o.clientY),l=this.winToCanvas(s.clientX,s.clientY);i=Math.sqrt(Math.pow(l.x-c.x,2)+Math.pow(l.y-c.y,2)),this.isPinch=!0,(e=this.pinchRatio*i)>this.scaleBetween[0]&&e<this.scaleBetween[1]&&(r={x:((a={x:(c.x+l.x)/2*this.pixelRatio,y:(c.y+l.y)/2*this.pixelRatio}).x-this.x)/(this.img.width*this.scale),y:(a.y-this.y)/(this.img.height*this.scale)},a.newX=this.x+this.img.width*e*r.x,a.newY=this.y+this.img.height*e*r.y,n={x:a.newX-a.x,y:a.newY-a.y},e<this.scale&&this.setRange(this.x-n.x,this.y-n.y,e),e>this.scale&&(this.x=this.x-n.x,this.y=this.y-n.y),e!==this.scale&&(this.scale=e,this.draw()))}},touchMoveAndEndHandler:function(t){var e,i,a=t.type,r={touchmove:t.touches[0],touchend:t.changedTouches[0]}[a],n=this.winToCanvas(r.clientX,r.clientY);e=(n.x-this.touchStart.x)*this.pixelRatio,i=(n.y-this.touchStart.y)*this.pixelRatio,"touchend"===a&&Date.now()-this.touchStart.time<this.clickDelay&&Math.abs(r.clientX-this.touchStart.cx)<6&&Math.abs(r.clientY-this.touchStart.cy)<6?this.clickHandler(t):"touchmove"!==a||this.isPinch||(this.touchStart.x=n.x,this.touchStart.y=n.y,this.setRange(this.x+e,this.y+i,this.scale),this.draw())},isCanClick:function(t){for(var e=!1,i=0;i<this.markPosition.length;i++)if(parseFloat(t.x)>parseFloat(this.markPosition[i].x)&&parseFloat(t.x)<parseFloat(this.markPosition[i].x)+parseFloat(this.markPosition[i].w)&&parseFloat(t.y)>parseFloat(this.markPosition[i].y)&&parseFloat(t.y)<parseFloat(this.markPosition[i].y)+parseFloat(this.markPosition[i].h)){e=!0;break}return e},clickHandler:function(t){var e=t.changedTouches[0];if(this.mark){var i=this.winToCanvas(e.clientX,e.clientY),a={x:(i.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),y:(i.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio)};if(i={x:a.x*this.img.width,y:a.y*this.img.height},this.isCanClick(i)){this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(i.x*this.scale/this.pixelRatio+this.x/this.pixelRatio,i.y*this.scale/this.pixelRatio+this.y/this.pixelRatio,this.scale===this.defaultScale?this.pointRadius:this.pointRadius*(1+(this.scale-this.defaultScale)/this.pixelRatio),0,2*Math.PI,!1),this.ctx.fill(),this.ctx.restore();var r={x:i.x,y:i.y};this.markCoordinates.push(r),this.points.push(r)}return!1}this.redraw(t,this.winToCanvas(e.clientX,e.clientY))},setRange:function(t,e,i){var a=this.img.width*i,r=this.img.height*i,n=this.canvas.width,o=this.canvas.height,s=this.img.height*this.scaleBetween[0];t=a<n?(n-a)/2:(t=t+a<n?n-a:t)>0?0:t,e=r<o?(o-r)/2:(e=e+r<s?s-r:e)>0?0:e,this.x=t,this.y=e},draw:function(){this.setRange(this.x,this.y,this.scale),this.drawImage(),this.drawPoints(),this.drawRegions()},redraw:function(t,e){this.clickPoints=[],this.drawImage(),this.drawPoints(e),this.drawRegions(e),this.clickCallback(t,this.clickPoints)},clickCallback:function(t,e){var i;e.some((function(t,e){return"points"===t.tag?(i=t,!0):(i=t,!1)}));var a=t.changedTouches[0],r=this.winToCanvas(a.clientX,a.clientY),n=(r.x-this.x/this.pixelRatio)/(this.img.width*this.scale/this.pixelRatio),o=(r.y-this.y/this.pixelRatio)/(this.img.height*this.scale/this.pixelRatio);(r={x:parseFloat((n*this.img.width).toFixed(2)),y:parseFloat((o*this.img.height).toFixed(2))}).y>=0&&r.x>=0&&r.y<=this.img.height&&r.x<=this.img.width&&this.$emit("onclick",{type:i?"point":"",points:this.points,point:i,clickPoint:i,x:r.x,y:r.y,scale:this.scale/this.pixelRatio})},drawImage:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.img,0,0,this.img.width,this.img.height,this.x,this.y,this.img.width*this.scale,this.img.height*this.scale)},drawPoints:function(t){var e=this;this.points.forEach((function(i,a){e.drawPoint(i.x*e.scale/e.pixelRatio+e.x/e.pixelRatio,i.y*e.scale/e.pixelRatio+e.y/e.pixelRatio,e.pointRadius,a,t,i.color)}))},drawPoint:function(t,e,i,a,r,n){this.ctx.save(),this.ctx.beginPath(),this.ctx.shadowBlur=i/2,this.ctx.shadowColor="black",this.ctx.fillStyle=n||this.pointColor,this.ctx.arc(t,e,i,0,2*Math.PI,!1),this.ctx.fill(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.ctx.restore(),i*=2,this.ctx.save(),this.ctx.beginPath(),this.ctx.strokeStyle="transparent",this.ctx.fillStyle="transparent",this.ctx.rect(t-i,e-i,2*i,2*i),this.ctx.stroke(),this.ctx.restore(),r&&this.ctx.isPointInPath(r.x*this.pixelRatio,r.y*this.pixelRatio)&&this.clickPoints.push({tag:"points",pos:r,index:a})},drawRegions:function(t){var e=this;this.regions&&this.regions.length&&this.regions.forEach((function(i,a){var r,n,o,s;e.ctx.beginPath(),i.area.forEach((function(t,i){var a=t[0]*e.scale/e.pixelRatio+e.x/e.pixelRatio,c=t[1]*e.scale/e.pixelRatio+e.y/e.pixelRatio;i?e.ctx.lineTo(a,c):e.ctx.moveTo(a,c),r=void 0===r?a:r<a?r:a,n=void 0===n?a:n>a?n:a,o=void 0===o?c:o<c?o:c,s=void 0===s?c:s>c?s:c})),e.ctx.closePath(),e.ctx.fillStyle="rgba(255, 144, 0, 0.4)",e.ctx.fill(),e.ctx.lineWidth=3,e.ctx.strokeStyle="#feda8e",e.ctx.stroke(),e.ctx.lineWidth=2,e.ctx.strokeStyle="rgba(0, 0, 0, 0.8)",e.ctx.stroke(),t&&e.ctx.isPointInPath(t.x*e.pixelRatio,t.y*e.pixelRatio)&&e.clickPoints.push({tag:"region",pos:t,index:a,regionData:i}),e.ctx.font='18px bold -apple-system, "Helvetica Neue", Roboto, "Segoe UI", sans-serif',e.ctx.textAlign="center",e.ctx.lineWidth=4,e.ctx.strokeStyle="#ffffff",e.ctx.strokeText(i.name,(n+r)/2,(s+o)/2+10),e.ctx.fillStyle="#111111",e.ctx.fillText(i.name,(n+r)/2,(s+o)/2+10)}))}}}}).call(this,i("391c"))},cf0d:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,'.zjapp .layout-main[data-v-0a266c44] .layout-content{overflow:auto}.zjapp .datepicker-hd[data-v-0a266c44]{display:flex;text-align:center;padding:5px 5px 15px 5px}.zjapp .datepicker-hd-center[data-v-0a266c44]{flex:1;display:flex;padding:10px 5px}.zjapp .datepicker-month[data-v-0a266c44],.zjapp .datepicker-year[data-v-0a266c44]{position:relative;flex:1;border:none;border-bottom:1px solid #4374ea;padding:0;line-height:26px;font-size:14px;text-align:center}.zjapp .datepicker-month[data-v-0a266c44]{margin-left:10px}.zjapp .datepicker-month[data-v-0a266c44]:after,.zjapp .datepicker-year[data-v-0a266c44]:after{position:absolute;top:50%;right:5px;margin-top:-3px;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;content:"";pointer-events:none;color:#4374ea}.zjapp .datepicker-next[data-v-0a266c44],.zjapp .datepicker-prev[data-v-0a266c44]{width:10%;padding:10px 5px;font-size:24px;color:#4374ea}.zjapp .select-list[data-v-0a266c44]{position:absolute;top:27px;left:0;width:100%;max-height:380px;overflow:auto;background-color:#fff;box-shadow:0 0 5px #333}.zjapp .select-item[data-v-0a266c44]{padding:5px;height:38px;line-height:28px}.zjapp .item-selected[data-v-0a266c44]{background-color:#4374ea;color:#fff}.zjapp .weeks-row[data-v-0a266c44]{padding:5px;display:flex}.zjapp .weeks-cell[data-v-0a266c44]{flex:1;line-height:20px;text-align:center;font-size:14px;font-weight:700}.zjapp .date-row[data-v-0a266c44]{padding:0 5px;display:flex}.zjapp .date-cell[data-v-0a266c44]{flex:1;height:50px;line-height:50px;text-align:center;font-size:14px}.zjapp .date-cell-selected[data-v-0a266c44]{background-color:#4374ea;color:#fff;font-weight:700}.zjapp .date-cell.today[data-v-0a266c44]{border:1px solid #4374ea}.zjapp .disabled[data-v-0a266c44]{pointer-events:none;color:#aaa}',""])},d0fb:function(t,e,i){"use strict";(function(t){var a=i("fd50"),r=i("bcc7"),n=i("515e"),o=i("e89f"),s=i("07d2"),c=i("7bac"),l=i("a7c3"),d=i("4360");e.a={name:"CheckGuideList",components:{Item:s.a},mixins:[o.a],store:d.a,props:{data:{type:String,default:""}},data:function(){return{show:!1,isLoading:!0,listData:[],module:"",itemId:"",batchId:"",sectionId:"",options:""}},computed:{moduleAttribute:function(){return this.$store.state.global.moduleAttribute}},mounted:function(){this.data=[]},methods:{openPopup:function(e){var i,r=this;for(var n in this.value=!0,this.show=!0,this.module=e.module,this.itemId=e.itemId,this.batchId=e.batchId,this.sectionId=e.sectionId,this.options=e.options,this.$emit("open"),e)this[n]=e[n];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module];var o=!1;t.isEmpty(this.itemId)?!t.isEmpty(this.checkType)&&t.isEmpty(this.sectionId)?i=this.initByType():t.isEmpty(this.batchId)?t.isEmpty(this.options)?t.isEmpty(this.sectionId)?i=a.a.when():(o=!0,i=this.initByBidsection()):i=this.initByOptions():i=this.initByBatch():i=this.initById(),this.isLoading=!0,i.then((function(e){var i=r.moduleAttribute[r.module]||{};!t.isEmpty(i)&&i.setUsualItems&&o?c.a.getUserKey(r.mmkvCode()).then((function(t){t=null===t?e:r.mergeArray(r.deepClone(e),t),r.listData=t||[],r.isLoading=!1})):(r.listData=e||[],r.isLoading=!1)}))},mmkvCode:function(){var t=this.moduleAttribute[this.module]||{};return l.a[t.mmkv_item]+"_"+this.sectionId},mergeArray:function(e,i){var a=this;return t.filter(e,(function(e){var r=i[e.id];return t.isEmpty(e.subitem)||(e.subitem=a.mergeArray(e.subitem,i)),!t.isEmpty(r)||"desc"===e.type}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},clickItem:function(t){t.subitem&&t.subitem.length?this.$set(t,"isOpen",!t.isOpen):"special-inspect"===this.module?n.a.openPopup({itemId:t.id,module:this.module}):n.a.openPopup({itemId:t.item_id,module:this.module})},initById:function(){var t=this;if("special-inspect"!==this.module)return r.a.getCheckItem(this.itemId,this.checkType).then((function(e){return e?t.sectionId?r.a.getBidSectionCheckItemListByCode(t.sectionId,e.code):r.a.getCheckItemTreeByCode(e.code):a.a.when()}))},initByType:function(){return r.a.getCheckItemGuidelineList(this.checkType)},initByBatch:function(){return a.a.when()},initByBidsection:function(){return r.a.getBidSectionCheckItemTreeByType(this.sectionId,this.checkType)},initByOptions:function(){return a.a.resolve(this.options)},deepClone:function(t){return JSON.parse(JSON.stringify(t))}}}}).call(this,i("391c"))},d2d4:function(t,e,i){"use strict";i("2a54")},d3aa:function(t,e,i){"use strict";(function(t){i("e697");var a,r=i("fd50"),n=i("3bd5"),o=i("ed08"),s=i("4ad6"),c=i("3122"),l=i("3516"),d=i("37d5"),u=i("f2d3"),h=i("48f4"),m=i("6bf2"),f=i.n(m),g=i("334f"),b=i("b725"),_=i("6b81"),v=i("2f02"),y=i("7364"),x=i("ab59"),k=i("59f8"),w=i("0136"),D=function(e){if(!e.checkItem.id)return r.a.reject("请先选择检查项");if(!e.repair_set||!e.repair_set.id)return r.a.reject("请选择问题的整改人");if(!e.contractor||!e.contractor.id)return r.a.reject("请选择问题的责任单位");if(t.isEmpty(e.reinspect_set))return r.a.reject("请选择问题的复验人");var i=n.a.getUser();e.status="待整改";var a=new Date;return a.setDate(a.getDate()+parseInt(e.deadline)),e.repair_deadline=f()(a).format("YYYY-MM-DD"),e.regist_by=i.user_id,e.regist_date=o.a.getNowDate(),e.created_by=i.user_id,e.created_on=o.a.getNowDate(),e.image_file=JSON.stringify(e.image_file),e.drawing_file&&(e.drawing_file=JSON.stringify(e.drawing_file)),$log.log("飞检&专项--\x3e提交问题",e),x.a.submit(e).then((function(){return y.a.saveProblemStatusLog(e.proj_id,e.bidsection_id,e.batch_id,e.id,"已提交","","",e.image_file)})).then((function(){return P(e.id,"登记人")})).then((function(){var t=2;e.repair_set.id&&e.repair_set.id===i.user_id&&(t=1);var a=w.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"fly-inspect");return w.a.insertTodoData(i.user_id,e.id,"fly-inspect",t,a)})).then((function(){return _.a.getReinspectByList(e.id)})).then((function(i){return h.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_repair",e.id],["checkquality_reinspect",e.id],["checkquality_reinspect_by",t.map(i,"id")],["checkquality_cc",e.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))},P=function(e,i){var a=n.a.getUser();return g.a.getProblemCCAllColumn(e).then((function(r){if(t.some(r,(function(t){return t.cc===a.user_id&&t.type===i})))return g.a.updateProblemReadingTime(e);var n={id:a.user_id,name:a.user_name,type:i,reading_time:o.a.getNowDate()};return g.a.appendCC(e,n).then((function(){return g.a.updateProblemReadingTime(e)}))}))};a={getCheckProblemDraftList:function(t){return x.a.getCheckProblemDraftList(t).catch((function(t){return $log.error(t),r.a.reject(t)}))},getCheckProblemList:function(e,i){var o=n.a.getUser().user_id;return x.a.getCheckProblemList(e,o,i).then((function(i){return t.map(i,(function(t){a.getProblemLocalStatus({status:t.status}).then((function(e){t.status_text=e.status_text}))})),x.a.getCheckProblemCount(e,o).then((function(t){return r.a.resolve({data:i,total:t.count})}))})).catch((function(t){return $log.error(t),r.a.reject(t)}))},getCheckProblemInfo:function(e){return e?r.a.all([x.a.getCheckProblem(e),x.a.getRepair(e),x.a.getMutliReinspect(e),x.a.getCC(e),x.a.getProblemCCAllColumn(e),x.a.getReinspectByList(e)]).then((function(e){var i=e[0],a=e[5],n=e[1];n&&(i.repair_set=n,i.has_read=n.has_read);var o=e[2];o&&(i.reinspect_set=o);var s=e[3];s&&s.length>0&&(i.cc_set_id_array=t.map(s,(function(t){return{id:t.user_id}})),i.cc_set_name_array=t.map(s,(function(t){return{name:t.user_name}})),i.cc_set_array=t.map(s,(function(t){return{id:t.user_id,name:t.user_name,mobile:t.mobile,is_im_user:t.is_im_user}})));var c=e[4];return c&&c.length>0&&(i.cc_set_all_id_array=t.map(c,(function(t){return{id:t.cc}}))),i.regist_by||i.sent_back_by||i.repair_by||i.reinspect_by?d.default.getAllProjectUsers(i.proj_id).then((function(e){if(i.regist_by){var r=t.find(e,(function(t){return t.user_id===i.regist_by}));r&&(i.regist=r)}if(i.sent_back_by){var n=t.find(e,(function(t){return t.user_id===i.sent_back_by}));n&&(i.sent_back={id:n.user_id,name:n.user_name,mobile:n.mobile,is_im_user:n.is_im_user})}if(i.repair_by){var o=t.find(e,(function(t){return t.user_id===i.repair_by}));o&&(i.repair=o)}return t.isEmpty(a)||(i.reinspectBy=t.map(a,(function(i){var a=t.find(e,(function(t){return t.user_id===i.reinspect}));return a?{id:a.user_id,name:a.user_name,mobile:a.mobile,is_im_user:a.is_im_user,reinspect_date:i.reinspect_date,reinspect_remark:i.reinspect_remark,reinspect_image_file:JSON.parse(i.reinspect_image_file||"[]"),reinspectById:i.id}:{id:i.reinspect,name:"该用户已被删除",mobile:"",is_im_user:null,reinspect_date:i.reinspect_date,reinspect_remark:"",reinspect_image_file:[],reinspectById:i.id}})),i.reinspectBy=t.filter(i.reinspectBy,(function(t){return!!t})),i.reinspect=t.filter(i.reinspectBy,(function(t){return!!t.reinspect_date}))),i.regist=i.regist||{},i.sent_back=i.sent_back||{},i.repair=i.repair||{},i.reinspect=i.reinspect||[],i})):(i.regist={},i.sent_back={},i.repair={},i.reinspect=[],r.a.resolve(i))})).catch((function(t){$log.log(t)})):r.a.resolve({})},getCheckItemDesc:function(t){return x.a.getCheckItemDesc(t)},submit:function(t,e){if(e)return D(t);if(!t.checkItem.id)return r.a.reject("请先选择检查项");var i=n.a.getUser();return t.status="检查完毕",t.regist_by=i.user_id,t.regist_date=o.a.getNowDate(),t.created_by=i.user_id,t.created_on=o.a.getNowDate(),t.image_file=JSON.stringify(t.image_file),t.drawing_file&&(t.drawing_file=JSON.stringify(t.drawing_file)),x.a.submit(t).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id]])})).then((function(){return w.a.saveTodo({biz_id:t.id,proj_id:t.proj_id,module_code:"fly-inspect",type:2})})).catch((function(t){return $log.error(t),r.a.reject(t)}))},save:function(t){if("待提交"!==t.status&&"草稿"!==t.status)return r.a.reject("问题单状态异常。");var e={id:t.id,remark:t.remark,image_file:t.image_file,batch_id:t.batch_id,batch_type:t.batch_type,biz_id:t.biz_id||"",proj_id:t.proj_id,created_by:t.created_by,created_on:o.a.getNowDate(),status:t.status,room_id:t.room_id||"",building_id:t.building_id||"",unit:t.unit||"",floor:t.floor||"",deduction:t.deduction,repair_deadline:t.repair_deadline,deadline:t.deadline};return t.checkItem&&t.checkItem.id&&(e.item_id=t.checkItem.id,e.item_name=t.checkItem.item_name,e.item_full_name=t.checkItem.full_name),t.place&&t.place.full_name&&(e.place=t.place.full_name),t.description&&t.description.id?e.desc_id=t.description.id:e.desc_id="",t.contractor&&t.contractor.id&&(e.contractor_id=t.contractor.id),e.emergency_degree=t.level,t.place_point&&(e.problem_values=JSON.stringify(t.place_point)),e.image_file=JSON.stringify(t.image_file),t.drawing_file&&(e.drawing_file=JSON.stringify(t.drawing_file)),t.id?x.a.update(e,t.cc_set,t.repair_set,t.reinspect_set).then((function(){return r.a.resolve(t.id)})).catch((function(t){return $log.error(t),r.a.reject(t)})):(e.id=o.a.uuid(),x.a.insert(e).then((function(){return x.a.update(e,t.cc_set,t.repair_set,t.reinspect_set)})).then((function(){return r.a.resolve(e.id)})).catch((function(t){return $log.error(t),r.a.reject(t)})))},delete:function(t){return x.a.getCheckProblem(t).then((function(e){return"待提交"===e.status||"草稿"===e.status?x.a.delete(t).catch((function(t){return $log.error(t),r.a.reject(t)})):($log.log("问题单状态异常："+t),r.a.reject("问题单状态异常"))}))},getProblemLocalStatusById:function(t){return _getProblemLocalStatus({status:p.status})},changeRepairDeadline:function(t){if(!/^(\d+)-(\d{1,2})-(\d{1,2})$/.test(t.repair_deadline))return r.a.reject("整改期限需要一个日期格式的值");var e=f()(t.repair_deadline).format("YYYY-MM-DD"),i=f()().format("YYYY-MM-DD");return t.is_timeout=e<i,$log.log("飞检&专项--\x3e修改整改期限",t),x.a.updateProblemRepairDeadline(t.id,t.repair_deadline).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))},saveRepairInfo:function(t,e,i){return i=JSON.stringify(i),x.a.saveRepairInfo(t,e,i).then((function(){return x.a.getCheckProblemDraft(t).then((function(e){return u.a.backUpDraft(t,e.proj_id,"checkquality_problem",e)}))}))},changeContractor:function(t){return t.contractor&&t.contractor.id?($log.log("飞检&专项--\x3e修改责任单位",t),x.a.updateProblemContractor(t.id,t.contractor.id).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))):r.a.reject("请指定责任单位")},changeCC:function(t){return $log.log("飞检&专项--\x3e修改抄送人",t),x.a.updateProblemModifiedBy(t.id).then((function(){return x.a.saveProblemCC(t.id,t.cc_set)})).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))},takePictureAndSave:function(t){var e={shootVideo:!0};return c.a.takePicture(e).then((function(e){if(e)return l.a.getBatch(t).then((function(t){var i={proj_id:t.proj_id,biz_id:t.template_id,batch_id:t.id,repair_deadline:t.repair_deadline,batch_type:t.batch_type,created_by:n.a.getUser().user_id,created_on:o.a.now(),image_file:[e],status:"待提交"};return a.save(i)}))})).catch((function(t){return $log.error(t),r.a.reject(t)}))},takePicture:function(){return c.a.takePicture()},allowSelectPicture:function(){return k.a.getValue("upload_from_phone_albums").then((function(t){return"1"===t}))},removeLocalInvalidProblem:function(e){var i=r.a.when();return e.problem_repair&&(i=i.then((function(){return b.a.removeInvalidData(e.problem.id,t.map(e.problem_repair,"id"))}))),e.problem_reinspect&&(i=i.then((function(){return _.a.removeInvalidData(e.problem.id,t.map(e.problem_reinspect,"id"))}))),e.problem_cc&&(i=i.then((function(){return g.a.removeInvalidData(e.problem.id,t.map(e.problem_cc,"id"))}))),e.children_Problem&&(i=i.then((function(){return x.a.removeInvalidChildProblem(e.problem.id,e.children_Problem)}))),i},removeLocalInvalidProblem1:function(e,i){var a=i.checkquality_problem;return r.a.when().then((function(){if(i.checkquality_problem)return x.a.deleteProblemById(a.id)})).then((function(){if(i.checkquality_repair)return b.a.removeInvalidData(a.id,t.map(i.checkquality_repair,"id"))})).then((function(){if(i.checkquality_cc)return g.a.removeInvalidData(a.id,t.map(i.checkquality_cc,"id"))}))},removeClosedBatchProblem:function(){return l.a.getClosedBatchIdList().then((function(t){return a.deleteBatchProblems(t)}))},deleteBatchProblems:function(e){return $log.log("删除已关闭批次的问题"),x.a.getProblemsByBatch(e).then((function(e){var i=r.a.when(),a=["image_file","repair_image_file","sent_back_image_file"],n=[];return t.each(e,(function(e){for(var i=0;i<a.length;++i){var r=e[a[i]]=JSON.parse(e[a[i]]||"[]");t.each(r,(function(t){t.local&&n.push(t.local),t.thumbnail&&n.push(t.thumbnail),t.temp&&n.push(t.temp)}))}})),t.each(n,(function(t){i=i.then((function(){return s.a.isFileExists(t)})).then((function(e){if(e)return s.a.deleteFile(t)}))})),i})).then((function(){return x.a.deleteProblemByBatch(e)}))},getLeaderComments:function(e){return x.a.getLeaderComments(e).then((function(e){return t.each(e,(function(t){t.user={id:t.user_id,name:t.user_name,mobile:t.mobile,is_im_user:t.is_im_user},t.image_file&&(t.image_file=JSON.parse(t.image_file))})),e}))},repair:function(t){if("待整改"!==t.status)return r.a.reject("问题单状态异常");var e=n.a.getUser();t.status="待复验",t.repair_by=e.user_id,t.repair_date=o.a.getNowDate();var i=JSON.stringify(t.repair_image_file);return x.a.getCheckProblem(t.id).then((function(e){if(!e||"待整改"===e.status)return $log.log("飞检&专项--\x3e完成整改",t),x.a.repairProblem(t.id,t.status,t.repair_by,t.repair_remark,t.repair_date,i).then((function(){return y.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已整改","",t.repair_remark,i)})).then((function(){return P(t.id,"操作人")})).then((function(){var e=2;t.reinspect_set.id===t.repair_by&&(e=1);var i=w.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"fly-inspect");return w.a.insertTodoData(t.repair_by,t.id,"fly-inspect",e,i)})).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]])}));$log.log("提交整改时数据已变为",e)})).catch((function(t){return $log.error(t),r.a.reject(t)}))},changeRepair:function(t,e){if(!t.repair_set||!t.repair_set.id)return r.a.reject("请指定一个整改人");var i=n.a.getUser();return $log.log("飞检&专项--\x3e修改整改人",t),x.a.updateProblemModifiedBy(t.id).then((function(){if(e){var i=t.contractor&&t.contractor.id||"";return x.a.updateProblemContractor(t.id,i)}})).then((function(){return x.a.changeProblemRepairer(t)})).then((function(){return x.a.saveProblemFpInfo(t.proj_id,t.bidsection_id,t.batch_id,t.id,t.repair_set.id,t.repair_set_old.id,"分配整改人")})).then((function(){return P(t.id,"操作人")})).then((function(){var e=2;t.repair_set.id&&t.repair_set.id===i.user_id&&(e=1);var a=w.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"fly-inspect");return w.a.insertTodoData(i.user_id,t.id,"fly-inspect",e,a)})).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_repair",t.id],["checkquality_cc",t.id],["checkquality_problem_fpinfo",t.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))},close:function(t){if("待整改"!==t.status)return r.a.reject("问题单状态异常");if(!t.close_reason)return r.a.reject("请填写关闭原因");var e=n.a.getUser();return t.close_date=o.a.getNowDate(),t.status="已关闭",$log.log("飞检&专项--\x3e非正常关闭",t),x.a.closeProblem(t.id,t.status,t.close_date,t.close_reason).then((function(){return y.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已关闭",t.close_reason,"","")})).then((function(){return P(t.id,"操作人")})).then((function(){var i=w.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"fly-inspect");return w.a.insertTodoData(e.user_id,t.id,"fly-inspect",2,i)})).then((function(){return h.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))},changeReinspect:function(e){if(t.isEmpty(e.reinspect_set))return r.a.reject("请指定一个复验人");var i=n.a.getUser();return $log.log("飞检&专项--\x3e修改复验人",e),x.a.updateProblemModifiedBy(e.id).then((function(){return x.a.changeProblemReinspect(e.id,e.reinspect_set,!0)})).then((function(){var i=t.map(e.reinspect_set,(function(t){return t.id})).join(","),a=t.map(e.reinspect_set_old,(function(t){return t.id})).join(",");return v.a.saveProblemFpInfo(e.proj_id,e.bidsection_id,e.batch_id,e.id,i,a,"分配复验人")})).then((function(){return P(e.id,"操作人")})).then((function(){var t=2;e.reinspect_set.user_id===i.user_id&&"待复验"===e.status&&(t=1);var a=w.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"fly-inspect");return w.a.insertTodoData(i.user_id,e.id,"fly-inspect",t,a)})).then((function(){return x.a.getReinspectByList(e.id)})).then((function(i){return h.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_reinspect",e.id],["checkquality_reinspect_by",t.map(i,"id")],["checkquality_cc",e.id],["checkquality_problem_fpinfo",e.id]])})).catch((function(t){return $log.error(t),r.a.reject(t)}))},reinspectPass:function(e,i){if("待复验"!==e.status)return r.a.reject("问题单状态异常");e.currentReinspectBy=e.currentReinspectBy||{};var a=n.a.getUser(),s="",c=t.isEmpty(e.currentReinspectBy.reinspect_image_file)?"":JSON.stringify(e.currentReinspectBy.reinspect_image_file);return x.a.getCheckProblem(e.id).then((function(i){if(!i||"待复验"===i.status)return $log.log("飞检&专项--\x3e复验通过",e),x.a.reinspectPass(e.id,a.user_id,o.a.now(),c,e.currentReinspectBy.reinspect_remark||"").then((function(){return x.a.getReinspectByList(e.id).then((function(i){var n=t.every(i,(function(t){return!!t.reinspect_date})),c=t.find(i,{reinspect:a.user_id});return c?(s=c.id,n?(e.status="已通过",e.respect_by=a.user_id,e.reinspect_completed_date=o.a.getNowDate(),x.a.reinspectProblemPass(e.id,e.status,e.reinspect_completed_date,e.respect_by).then((function(){return y.a.saveProblemStatusLog(e.proj_id,e.bidsection_id,e.batch_id,e.id,"已复验","","","")}))):void 0):r.a.reject("问题单复验人异常")}))})).then((function(){return P(e.id,"操作人")})).then((function(){var t=w.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"fly-inspect");return w.a.insertTodoData(a.user_id,e.id,"fly-inspect",2,t)})).then((function(){return h.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_reinspect_by",s],["checkquality_cc",e.id]])}));$log.log("提交复验时数据已变为",i)})).catch((function(t){return $log.error(t),r.a.reject(t)}))},reinspectReject:function(e){var i=[["checkquality_problem",e.id],["checkquality_cc",e.id]];if("待复验"!==e.status)return r.a.reject("问题单状态异常");if(!e.sent_back_remark)return r.a.reject("请填写退回原因");var a=n.a.getUser();e.sent_back_times?e.sent_back_times++:e.sent_back_times=1,e.status="待整改",e.sent_back_date=o.a.getNowDate(),e.sent_back_by=a.user_id;var s=JSON.stringify(e.sent_back_image_file);return $log.log("飞检&专项--\x3e复验退回",e),x.a.reinspectProblemReject(e.id,e.status,e.sent_back_date,e.sent_back_remark,s,e.sent_back_by,e.sent_back_times).then((function(){return y.a.saveProblemStatusLog(e.proj_id,e.bidsection_id,e.batch_id,e.id,"已退回",e.sent_back_remark,"",s)})).then((function(){return x.a.clearReinspectByData(e.id)})).then((function(){return P(e.id,"操作人")})).then((function(){var t=2;e.repair_set.id&&e.repair_set.id===a.user_id&&(t=1);var i=w.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"fly-inspect");return w.a.insertTodoData(a.user_id,e.id,"fly-inspect",t,i)})).then((function(){return x.a.getReinspectByList(e.id).then((function(e){i.push(["checkquality_reinspect_by",t.map(e,"id")])}))})).then((function(){if(1===e.has_read)return b.a.update({has_read:0},{checkquality_problem_id:e.id}).then((function(){i.push(["checkquality_repair",e.id])}))})).then((function(){return h.default.addSyncGroup(i)})).catch((function(t){return $log.error(t),r.a.reject(t)}))},getProblemLocalStatus:function(t){var e=t.status;return"已关闭"===t.status&&(e="非正常关闭"),r.a.resolve({status_text:e})},noConflict:function(e,i){var a=i.checkquality_problem.id;return x.a.deleteCheckqualityProblem(a).then((function(){return w.a.removeTodo(a)})).then((function(){var i=[];return t.each(e.data,(function(e,a){t.isArray(e)?t.each(e,(function(t,e){i.push(localDB.delete(a,{id:t.id}).then((function(){return localDB.insertObject(a,t)})))})):t.isObject(e)&&i.push(localDB.delete(a,{id:e.id}).then((function(){return localDB.insertObject(a,e)})))})),r.a.all(i)}))},problemRead:function(t){return x.a.updateRepair({has_read:1},{checkquality_problem_id:t}).then((function(){return h.default.addSyncGroup([["checkquality_problem",t],["checkquality_repair",t]])}))}},e.a=a}).call(this,i("391c"))},d605:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .page-scroll[data-v-bfa4f008]{flex:1;overflow:auto;padding-bottom:100px}.zjapp .page-scroll[data-v-bfa4f008] .item-text{line-height:normal}.zjapp .leader-comment[data-v-bfa4f008]{padding:3px 0}.zjapp .leader-comment .comment-time[data-v-bfa4f008]{color:#bbb}.zjapp .leader-comment .comment-item[data-v-bfa4f008]{margin-bottom:15px}.zjapp .leader-comment p[data-v-bfa4f008]{margin:5px 0}",""])},d6fa:function(t,e,i){"use strict";i("9ab7")},d77c:function(t,e,i){(t.exports=i("690e")(!1)).push([t.i,".zjapp .layout-main[data-v-e24c0d3a] .layout-content{overflow:auto}[data-v-e24c0d3a] .item .icon{color:#4275e8}",""])},da1c:function(t,e,i){"use strict";i("163d");var a=i("65a8"),r={name:"ProblemHeader",props:{status:{type:String,default:""},statusText:{type:String,default:""},level:{type:String,default:""},isTimeout:{type:Boolean,default:!1},sentBackTimes:{type:[Number,String],default:0}},data:function(){return{edOptions:{}}},created:function(){var t=this;a.a.getOptions("紧急程度").then((function(e){t.edOptions=e}))}},n=(i("1f63"),i("17cc")),o=Object(n.a)(r,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",t._g({staticClass:"problem-detail-header border-bottom"},t.$listeners),[i("div",{staticClass:"status",class:{"待整改":"status-red","不合格":"status-red","已退回":"status-red","待复验":"status-orange","已放水待验收":"status-orange","检查中":"status-orange","待验收":"status-orange","已通过":"status-green","已整改":"status-green","已提交":"status-green","合格":"status-green","检查完毕":"status-green","已验收":"status-green","已关闭":"status-black","进度正常":"status-green","进度滞后":"status-red","验收中":"status-orange","已抽验":"status-green"}[t.status]},[t._v(t._s(t.statusText||t.status))]),"紧急"===t.level||"特急"===t.level?i("span",{staticClass:"urgent"},[t._v(t._s(t.edOptions[t.level]))]):t._e(),t.isTimeout?i("span",{staticClass:"timeout"},[t._v("超时")]):t._e(),t.sentBackTimes>0?i("span",{staticClass:"return"},[t._v("退回"+t._s(t.sentBackTimes)+"次")]):t._e(),t._t("operat")],2)}),[],!1,null,"0901aadd",null);e.a=o.exports},dc98:function(t,e,i){"use strict";i("0732")},e223:function(t,e,i){"use strict";var a=i("c40a").a,r=(i("0aac"),i("17cc")),n=Object(r.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",t._g({ref:"content",staticClass:"drawing-con"},t.$listeners),[t.isDownloading?[i("p",[i("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[i("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]),i("p",{staticClass:"loading-text"},[t._v("正在下载...")])]:[t.error?t._e():i("canvas",{ref:"drawing-canvas"}),t.error?i("p",{staticClass:"error-text"},[t._v(t._s(t.error))]):t._e()]],2)}),[],!1,null,"fba5990a",null);e.a=n.exports},e60b:function(t,e,i){var a=i("cf0d");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("1be2b028",a,!0,{sourceMap:!1,shadowMode:!1})},e900:function(t,e,i){"use strict";i.d(e,"a",(function(){return a})),i.d(e,"b",(function(){return r}));i("f548");function a(t){var e,i,a,r=(i=(e=t).backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1,(window.devicePixelRatio||1)/i);1!==r&&(!function(t,e){for(var i in t)t.hasOwnProperty(i)&&e(t[i],i)}({fillRect:"all",clearRect:"all",strokeRect:"all",moveTo:"all",lineTo:"all",arc:[0,1,2],arcTo:"all",bezierCurveTo:"all",isPointinPath:"all",isPointinStroke:"all",quadraticCurveTo:"all",rect:"all",translate:"all",createRadialGradient:"all",createLinearGradient:"all"},(function(e,i){var a;t[i]=(a=t[i],function(){var t,i,n=Array.prototype.slice.call(arguments);if("all"===e)n=n.map((function(t){return t*r}));else if(Array.isArray(e))for(t=0,i=e.length;t<i;t++)n[e[t]]*=r;return a.apply(this,n)})})),t.stroke=(a=t.stroke,function(){this.lineWidth*=r,a.apply(this,arguments),this.lineWidth/=r}),t.fillText=function(t){return function(){var e=Array.prototype.slice.call(arguments);e[1]*=r,e[2]*=r,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e*r+i})),t.apply(this,e),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e/r+i}))}}(t.fillText),t.strokeText=function(t){return function(){var e=Array.prototype.slice.call(arguments);e[1]*=r,e[2]*=r,this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e*r+i})),t.apply(this,e),this.font=this.font.replace(/(\d+)(px|em|rem|pt)/g,(function(t,e,i){return e/r+i}))}}(t.strokeText),t.extended=!0)}var r=function(t){var e,i;(e=t).getContext=(i=e.getContext,function(t){var e,r,n=i.call(this,t);return"2d"===t&&(e=n.backingStorePixelRatio||CanvasRenderingContext2D.webkitBackingStorePixelRatio||n.mozBackingStorePixelRatio||n.msBackingStorePixelRatio||n.oBackingStorePixelRatio||n.backingStorePixelRatio||1,(r=(window.devicePixelRatio||1)/e)>1&&(this.style.height=this.height+"px",this.style.width=this.width+"px",this.width*=r,this.height*=r)),a(n),n})}},eebd:function(t,e,i){var a=i("d605");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,i("85cb").default)("308b2e29",a,!0,{sourceMap:!1,shadowMode:!1})},f0bb:function(t,e,i){"use strict";i.r(e);var a=i("3ec5").a,r=(i("0aeb"),i("17cc")),n=Object(r.a)(a,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("page-content",{attrs:{title:"问题详情","show-go-root":!0}},[t.problemData.checkItem&&t.problemData.checkItem.id?i("check-guide",{attrs:{slot:"header-bar-right",module:"fly-inspect","item-id":t.problemData.checkItem.id},slot:"header-bar-right"}):t._e(),t.isLoading||"检查完毕"===t.problemData.status_text?t._e():i("problem-detail-header",{attrs:{status:t.problemData.status,"status-text":t.problemData.status_text,level:t.problemData.level,"is-timeout":t.problemData.is_timeout,"sent-back-times":t.problemData.sent_back_times}}),t.isLoading?t._e():i("div",{staticClass:"page-scroll"},[i("div",{staticClass:"list mb10"},[i("item",{attrs:{label:"项目",text:t.problemData.proj_name}}),t.problemData.place&&t.problemData.place.full_name?i("item",{attrs:{label:"部位"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[t._v("\n          "+t._s(t.problemData.place.full_name)+"\n          "),t.problemData.place_point.length?i("span",{staticClass:"icon-huxing-mark ml10",on:{click:t.showHuxingMark}},[t._v("图")]):t._e()])]):t._e(),i("item",{attrs:{label:"检查项",text:t.problemData.checkItem.full_name}}),t.problemData.description.name?i("item",{attrs:{label:"描述"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[i("p",[t._v(t._s(t.problemData.description.name))])])]):t._e(),t.problemData.remark?i("item",{attrs:{label:"备注"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[i("p",[t._v(t._s(t.problemData.remark))])])]):t._e(),t.problemData.level&&"检查完毕"===t.problemData.status_text?i("item",{attrs:{label:"严重程度",text:t.problemData.level}}):t._e(),t.problemData.deduction||0===t.problemData.deduction?i("item",{attrs:{label:"拟扣",text:t.problemData.level}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[i("p",[t._v(t._s(t.problemData.deduction||0)+"分")])])]):t._e(),t.problemData.image_file&&t.problemData.image_file.length?i("item",{attrs:{label:"问题照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("item-img-list",{attrs:{editabled:!1},model:{value:t.problemData.image_file,callback:function(e){t.$set(t.problemData,"image_file",e)},expression:"problemData.image_file"}})],1)]):t._e(),i("user-select",{attrs:{title:"提交人",date:t._f("formatDate")(t.problemData.regist_date),mode:"view",editabled:!1},model:{value:t.problemData.regist,callback:function(e){t.$set(t.problemData,"regist",e)},expression:"problemData.regist"}}),t.isNeedRepair?[i("item",{staticClass:"mt10",attrs:{label:"整改期限",text:t.problemData.repair_deadline,editabled:t.allowChangeRepairDeadline},on:{click:function(e){t.selectDeadline()}}}),t.problemData.repair_set&&t.problemData.repair_set.id?t._e():i("user-select",{attrs:{options:t.repairOptions,title:"整改人",date:t._f("formatDate")(t.problemData.repair_date),mode:"view",editabled:t.allowChangeRepair,"is-read":t.problemData.repair.id===t.user.user_id?"":1===t.problemData.has_read||0!==t.problemData.has_read&&"","before-select":t.beforeChangeRepair},on:{onSelect:t.changeRepair},model:{value:t.problemData.repair,callback:function(e){t.$set(t.problemData,"repair",e)},expression:"problemData.repair"}}),t.problemData.repair_set&&t.problemData.repair_set.id?i("user-select",{attrs:{options:t.repairOptions,title:"整改人",date:t._f("formatDate")(t.problemData.repair_date),mode:"view",editabled:t.allowChangeRepair,"is-read":t.problemData.repair_set.id===t.user.user_id?"":1===t.problemData.has_read||0!==t.problemData.has_read&&"","before-select":t.beforeChangeRepair},on:{onSelect:t.changeRepair},model:{value:t.problemData.repair_set,callback:function(e){t.$set(t.problemData,"repair_set",e)},expression:"problemData.repair_set"}}):t._e(),t.problemData.repair_image_file&&t.problemData.repair_image_file.length>0||t.allowRepair?i("item",{attrs:{label:"整改照片"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[t.problemData.repair_remark&&!t.allowRepair?i("p",{staticClass:"mb10"},[t._v(t._s(t.problemData.repair_remark))]):t._e(),i("item-img-list",{attrs:{editabled:t.allowRepair,maxlength:15,"allow-select-album":!0,"allow-buildin-album":!0},on:{callback:t.repairRemarkUpdate},model:{value:t.problemData.repair_image_file,callback:function(e){t.$set(t.problemData,"repair_image_file",e)},expression:"problemData.repair_image_file"}})],1)]):t._e(),t.problemData.repair_image_file.length||!t.problemData.repair_remark||t.allowRepair?t._e():i("item",{attrs:{label:"整改补充说明",text:t.problemData.repair_remark}}),t.allowRepair?i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"整改补充说明"},on:{blur:t.repairRemarkUpdate},model:{value:t.problemData.repair_remark,callback:function(e){t.$set(t.problemData,"repair_remark",e)},expression:"problemData.repair_remark"}}):t._e(),t.allowChangeReinspect?i("user-select",{staticClass:"mt10",attrs:{options:t.reinspectOptions,multi:!1,title:"复验人",mode:"view",editabled:t.allowChangeReinspect,"before-select":t.beforeChangeReinspect},on:{onSelect:t.changeReinspect},model:{value:t.problemData.reinspect_set,callback:function(e){t.$set(t.problemData,"reinspect_set",e)},expression:"problemData.reinspect_set"}}):t._e(),t.allowChangeReinspect?t._e():i("div",{staticClass:"mt10"},t._l(t.problemData.reinspectBy,(function(e,a){return i("div",{key:a},[i("user-select",{attrs:{value:e,title:"复验人",date:e.reinspect_date?t.fomatDate(e.reinspect_date):"",mode:"view",editabled:!1,note:!e.reinspect_date&&t.problemData.reinspectBy.length>1?"尚未复验":""}}),(e.reinspect_remark||e.reinspect_image_file.length>0)&&e.reinspect_date?i("item",[i("div",{staticClass:"item-label"}),i("div",{staticClass:"item-con"},[e.reinspect_remark?i("p",[t._v(t._s(e.reinspect_remark))]):t._e(),e.reinspect_image_file.length>0?i("item-img-list",{attrs:{editabled:!1,"allow-select-album":!0,"allow-buildin-album":!0},model:{value:e.reinspect_image_file,callback:function(i){t.$set(e,"reinspect_image_file",i)},expression:"reinspect.reinspect_image_file"}}):t._e()],1)]):t._e()],1)}))),t.allowReinspectPass?i("item",{attrs:{label:"复验照片"}},[i("div",{staticClass:"item-con",attrs:{slot:"right"},slot:"right"},[i("item-img-list",{attrs:{maxlength:15,"allow-select-album":!0,"allow-buildin-album":!0},model:{value:t.problemData.currentReinspectBy.reinspect_image_file,callback:function(e){t.$set(t.problemData.currentReinspectBy,"reinspect_image_file",e)},expression:"problemData.currentReinspectBy.reinspect_image_file"}})],1)]):t._e(),t.allowReinspectPass?i("item-textarea",{staticClass:"border-tb",attrs:{placeholder:"复验补充说明（选填）"},model:{value:t.problemData.currentReinspectBy.reinspect_remark,callback:function(e){t.$set(t.problemData.currentReinspectBy,"reinspect_remark",e)},expression:"problemData.currentReinspectBy.reinspect_remark"}}):t._e(),t.problemData.sent_back_remark?i("item",{attrs:{label:"退回原因"}},[i("div",{staticClass:"item-text",attrs:{slot:"right"},slot:"right"},[i("p",{class:{pb10:t.problemData.sent_back_image_file.length}},[t._v(t._s(t.problemData.sent_back_remark))]),t.problemData.sent_back_image_file.length?i("item-img-list",{attrs:{editabled:!1,"allow-select-album":!0,"allow-buildin-album":!0},model:{value:t.problemData.sent_back_image_file,callback:function(e){t.$set(t.problemData,"sent_back_image_file",e)},expression:"problemData.sent_back_image_file"}}):t._e()],1)]):t._e(),i("user-select",{attrs:{options:t.ccOptions,title:"抄送人",multi:!0,mode:"view",editabled:t.allowChangeCC},on:{onSelect:t.changeCC},model:{value:t.problemData.cc_set,callback:function(e){t.$set(t.problemData,"cc_set",e)},expression:"problemData.cc_set"}}),i("single-select",{attrs:{"if-toggle":!0,options:t.contractorOptions,title:"责任单位",mode:"view",editabled:t.allowChangeContractor},on:{onSelect:t.changeContractor},model:{value:t.problemData.contractor,callback:function(e){t.$set(t.problemData,"contractor",e)},expression:"problemData.contractor"}}),t.problemData.close_date?i("item",{staticClass:"mt10",attrs:{label:"关闭时间",text:t.problemData.close_date}}):t._e(),t.problemData.close_reason?i("item",{attrs:{label:"关闭原因",text:t.problemData.close_reason}}):t._e()]:t._e()],2),i("app-button-group",{attrs:{direction:"column"}},[t.allowView&&t.allowReinspectPass?i("app-button",{on:{click:t.reinspectSubmit}},[t._v("通过")]):t._e(),t.allowView&&t.allowRepair?i("app-button",{on:{click:t.repairSubmit}},[t._v("完成整改")]):t._e(),t.allowView&&t.allowReinspectReject?i("app-button",{attrs:{type:"warning",plain:"",rimless:""},on:{click:t.back}},[t._v("退回")]):t._e(),t.allowView&&t.allowClose?i("app-button",{attrs:{type:"warning",plain:"",rimless:""},on:{click:t.close}},[t._v("非正常关闭")]):t._e()],1)],1),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.problemData.id,"empty-text":"加载问题失败"}})],1)}),[],!1,null,"bfa4f008",null);e.default=n.exports},f1e4:function(t,e,i){"use strict";(function(t){i("5ab2"),i("e10e");var a=i("28f8"),r=(i("9e76"),i("6d57"),i("9a33"),i("f548"),i("cc57"),i("4ad6")),n=i("e89f"),o=i("bcc7"),s=i("3122"),c=i("6e1b"),l=i("c130"),d=i("0636");function p(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function u(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?p(Object(i),!0).forEach((function(e){Object(a.a)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):p(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}e.a={name:"CheckGuideDetail",components:{},mixins:[n.a],data:function(){return{show:!1,isLoading:!0,isImageDownloading:!1,title:"",content:[],module:"",itemId:""}},methods:{openPopup:function(e){var i=this;for(var a in this.value=!0,this.show=!0,this.module=e.module,this.itemId=e.itemId,this.$emit("open"),e)this[a]=e[a];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module],this.isLoading=!0,("special-inspect"===this.module?c.a.getSpecialInspectCheckItemDetail(this.itemId):"templet-plan"===this.module?l.a.getTempletDetail(this.itemId):"material"===this.module?d.a.getMaterialDetail(this.itemId):o.a.getCheckItem(this.itemId,this.checkType)).then((function(e){console.log("checkitemData",e),i.checkitemData=e,i.title=e.full_name||e.name,"special-inspect"!==i.module&&"inspect"!==i.module&&"fly-inspect"!==i.module&&"material"!==i.module||(e.content=e.guideline||e.content);var a=e.content?e.content.trim():"";if(a=(a=(a=(a=(a=a.replace(/<\/p><p>/gm,"\n")).replace(/<p>/gm,"")).replace(/<\/p>/gm,"")).replace(/<br>/gm,"")).replace(/<br \/>/gm,""),/(<img[^\>]*>)/gm.test(a)){var r=a.split(/(<img[^\>]*>)/gm);(r=r.filter((function(t){return!!t}))).forEach((function(t,e){t&&!/^\s*\n/.test(t)&&e&&!/\n\s*$/.test(r[e-1])&&(r[e]="\n"+t)})),a=r.join("")}var n=a?a.split("\n"):[];i.content=t.map(n,(function(t,e){var i;if(/<img([\s\S]*)>/gm.test(t)){var a=t.split(/\ssrc="([^"]*)"/gm)[1],r=a?a.match(/[\w|-]{36}/gm)[0]:(new Date).getTime()+"-"+e;i={isImg:!0,src:"",url:a,status:"pending",id:r,ready:!0}}else i={isImg:!1,val:t};return i})),i.downloadImage(),i.isLoading=!1})).catch((function(t){$log.log(t)}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},getThumbnail:function(t){return"pending"===t.status?s.a.IMAGE_LOADING:"rejected"===t.status?s.a.IMAGE_RELOAD:"dev"===APP_ENV?t.url:"fulfilled"===t.status?t.src:($log.log("检查指引-显示图片：",t),s.a.IMAGE_PLACEHOLD)},imgError:function(t,e){$log.error("检查指引-加载图片出现错误：",t);var i=u({},t);i.status="rejected",this.$set(this.content,e,i)},downloadImage:function(e){var i=this;e=e?[e]:this.imageList(),t.each(e,(function(e){var a=u({},e),r=t.map(i.content,(function(t){return t.id})).indexOf(e.id);s.a.isNeedDownload(e.url).then((function(t){t?s.a.download(e.url).then((function(t){a.status="fulfilled",a.src=s.a.fixUrl(t),i.$set(i.content,r,a)})).catch((function(t){$log.error("检查指引-下载图片：",t)})):(a.status="fulfilled",a.src=s.a.fixUrl(s.a.getPathFromUrl(e.url)),i.$set(i.content,r,a))}))}))},imageList:function(){return t.filter(this.content,(function(t){return t.isImg}))},imgClick:function(e){var i=this;if("pending"===e.status)return!1;if("rejected"===e.status)return this.downloadImage(e),$log.log("检查指引-点击重新加载-重新下载图片：",e),!1;var a=this.imageList(),n=t.map(a,(function(t){return t.id})).indexOf(e.id);a=t.map(a,(function(t){return i.getThumbnail(t)})),r.a.openImageBrowser(a,n)}}}}).call(this,i("391c"))},f369:function(t,e,i){"use strict";var a=i("fd50"),r=i("bcc7"),n=i("329b"),o=i("d0fb").a,s=(i("9b25"),i("17cc")),c=Object(s.a)(o,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("transition",{attrs:{name:"slide-right"}},[t.show?i("page-content",{attrs:{mode:"dialog",title:"检查指引","on-close":t.closePopup}},[!t.isLoading&&t.listData.length?i("div",{staticClass:"page-scroll"},t._l(t.listData,(function(e,a){return i("div",{key:a},[i("item",{attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text fw-b color-blue one-line"},[t._v(t._s(e.item_name))])]),e.isOpen?t._l(e.subitem,(function(e,a){return i("div",{key:a,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[t._v(t._s(e.item_name))])]),e.isOpen?t._l(e.subitem,(function(e,a){return i("div",{key:a,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[t._v(t._s(e.item_name))])]),e.isOpen?t._l(e.subitem,(function(e,a){return i("div",{key:a,staticClass:"sublist"},[i("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":e.subitem&&e.subitem.length?e.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(i){t.clickItem(e)}}},[i("div",{staticClass:"item-text checkitem-list-name"},[t._v(t._s(e.item_name))])])],1)})):t._e()],2)})):t._e()],2)})):t._e()],2)}))):t._e(),i("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.listData.length,"empty-text":"没有检查项"}})],1):t._e()],1)}),[],!1,null,"74102c05",null).exports,l=!1;l||(l=new(n.default.extend(c))({el:document.createElement("div")}),document.body.appendChild(l.$el));var d=l,p=i("515e"),u=i("91c1").a,h=(i("dc98"),Object(s.a)(u,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.show?i("div",{staticClass:"main",style:{top:t.contentTop+"px"}},[i("i",{staticClass:"arrow"}),i("div",{staticClass:"content",on:{click:function(e){return e.target!==e.currentTarget?null:t.closePopup(e)}}},[i("transition",{attrs:{name:"slide-down"},on:{enter:function(e){t.isOpening=!0},"after-enter":function(e){t.isOpening=!1},leave:function(e){t.isClosing=!0},"after-leave":t.afterClose}},[t.showList?i("div",{staticClass:"box",style:{height:t.listHeight+"px"}},t._l(t.data,(function(e,a){return i("div",{key:a,class:{"border-bottom":t.data.length>1,"box-single":1===t.data.length}},[i("div",{staticClass:"detail-hd",class:{"border-bottom":t.data.length<=1,"detail-hd-single":t.data.length<=1},on:{click:function(i){t.toggleItem(e)}}},[t.data.length>1?i("i",{class:{"detail-arrow-right":!e.isOpen,"detail-arrow-down":e.isOpen}}):t._e(),i("div",{staticClass:"detail-title"},[t._v(t._s(e.name))])]),t.data.length<=1||e.isOpen?i("div",{staticClass:"detail-bd",class:{"detail-bd-single":t.data.length<=1}},[t._l(e.textArr,(function(e,a){return i("p",{key:a,staticClass:"text-line"},[t._v("\n              "+t._s(e)+"\n            ")])})),i("item-img-list",{attrs:{editabled:!1},model:{value:e.contentImage,callback:function(i){t.$set(e,"contentImage",i)},expression:"item.contentImage"}}),i("loading-status",{attrs:{"is-empty":!e.textArr.length&&!e.contentImage.length,"empty-text":"PC端未设置检查指引"}})],2):t._e()])}))):t._e()])],1)]):t._e()}),[],!1,null,"2cac8864",null).exports),m=!1;m||(m=new(n.default.extend(h))({el:document.createElement("div")}),document.body.appendChild(m.$el));var f=m,g={name:"CheckGuide",components:{},props:{module:{type:String,default:""},mode:{type:String,default:"page"},itemId:{type:String,default:""},itemIds:{type:Array,default:function(){return[]}},batchId:{type:String,default:""},sectionId:{type:String,default:""},options:{type:Array,default:function(){return[]}},optionsPromise:{type:Function,default:function(){}},beforeOpen:{type:Function,default:function(){}}},data:function(){return{isLoading:!1}},methods:{openCheckGuide:function(){var t=this,e=this.beforeOpen&&this.beforeOpen();e instanceof Promise||(e=Promise.resolve(e)),e.then((function(e){!1!==e&&("drop"===t.mode?f.openPopup({itemIds:t.itemIds,el:t.$refs["check-guide-btn"],options:t.options}):("templet-plan"===t.module?a.a.when(!1):t.itemId&&t.sectionId?r.a.hasChildSectionCheckItem(t.itemId,t.sectionId):t.itemId?r.a.hasChildCheckItem(t.itemId):a.a.when(!0)).then((function(e){e?d.openPopup({module:t.module,itemId:t.itemId,batchId:t.batchId,sectionId:t.sectionId,options:t.options}):p.a.openPopup({itemId:t.itemId,module:t.module})})))}))}}},b=Object(s.a)(g,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{ref:"check-guide-btn",staticClass:"header-btn",on:{click:function(e){t.openCheckGuide()}}},[i("icon",{attrs:{name:"nav-info"}})],1)}),[],!1,null,null,null);e.a=b.exports},f3d7:function(t,e,i){"use strict";i("9120")},fe9e:function(t,e,i){"use strict";i("3cd8")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,