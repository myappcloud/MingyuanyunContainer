(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["report-overview"],{"31ff":function(t,e,r){(t.exports=r("690e")(!1)).push([t.i,'.zjapp .item-checkbox-radius[data-v-4db8b04d]{display:inline-block;height:32px;line-height:20px;min-width:60px;padding:5px 15px;margin-left:10px;border:1px solid #dcdcdc;border-radius:16px;text-align:center;color:#666;font-size:16px;box-sizing:border-box}.zjapp .item-checkbox-radius.selected[data-v-4db8b04d]{color:#4275e8;border-color:#4275e8}.zjapp .item-checkbox-radius[data-v-4db8b04d]:first-child{margin-left:0}.zjapp .scroll-y[data-v-4db8b04d]{flex:1;overflow-y:auto;position:relative}.zjapp .scroll-x[data-v-4db8b04d]{max-width:100%;overflow-x:auto;position:relative}.zjapp .table-content[data-v-4db8b04d]{position:relative;display:flex;flex-direction:column;flex:1;overflow:hidden}.zjapp .fixed-head[data-v-4db8b04d]{position:absolute;left:0;top:0;z-index:2}.zjapp .fixed-slide[data-v-4db8b04d]{position:absolute;left:0;top:0;z-index:1}.zjapp .fixed-nook[data-v-4db8b04d]{position:absolute;left:0;top:0;z-index:3}.zjapp .table[data-v-4db8b04d]{border-collapse:collapse}.zjapp .table td[data-v-4db8b04d],.zjapp .table th[data-v-4db8b04d]{min-width:100px;height:50px;max-height:50px;padding:5px 10px;line-height:16px;font-size:14px;text-align:center;box-sizing:border-box;border:none;overflow:hidden}.zjapp .table th[data-v-4db8b04d]{color:#888}.zjapp .table td[data-v-4db8b04d]:first-child,.zjapp .table th[data-v-4db8b04d]:first-child{position:relative;width:145px;min-width:145px;padding-left:35px;text-align:left}.zjapp .table tr[data-v-4db8b04d]{background-color:#fafafa}.zjapp .name[data-v-4db8b04d]{display:inline-block;line-height:16px;max-height:32px;overflow:hidden}.zjapp .icon-dropdown[data-v-4db8b04d]{position:absolute;top:22px;left:11.5px}.zjapp .icon-dropright[data-v-4db8b04d]{position:absolute;top:19px;left:14.5px}.zjapp .icon-dropdown[data-v-4db8b04d]:before,.zjapp .icon-dropright[data-v-4db8b04d]:before{display:block;content:"";width:0;height:0;border:6px solid #c8c8c8}.zjapp .icon-dropdown[data-v-4db8b04d]:before{border-left-color:transparent}.zjapp .icon-dropdown[data-v-4db8b04d]:before,.zjapp .icon-dropright[data-v-4db8b04d]:before{border-right-color:transparent;border-bottom-color:transparent}.zjapp .icon-dropright[data-v-4db8b04d]:before{border-top-color:transparent}',""])},"40b1":function(t,e,r){"use strict";r.r(e);var a=r("b05c").a,n=(r("6a03"),r("17cc")),o=Object(n.a)(a,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("page-content",{attrs:{title:"报表-项目综合概览"}},[r("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:t.markCont},slot:"header-bar-right"},[r("icon",{attrs:{name:"yiwen"}})],1),!t.isLoading&&t.reportData&&t.reportData.length&&!t.errorTips?r("item",{attrs:{border:"bottom"}},[r("div",{staticClass:"item-con align-c"},t._l(t.tabs,(function(e){return r("div",{key:e.key,staticClass:"item-checkbox-radius",class:{selected:e.key===t.curTab},on:{click:function(){return t.curTab=e.key}}},[t._v("\n        "+t._s(e.name)+"\n      ")])})))]):t._e(),!t.isLoading&&t.reportData&&t.reportData.length&&!t.errorTips?r("div",{staticClass:"table-content"},[r("div",{staticClass:"scroll-y",on:{scroll:t.onScrollY}},[r("div",{staticClass:"scroll-x",on:{scroll:t.onScrollX}},[r("table",{staticClass:"table"},[r("thead",[r("tr",{staticClass:"border-bottom"},[r("th",{staticClass:"border-right"},[t._v("项目")]),t.hasCheck?r("th",{staticClass:"border-right"},[t._v("现场检查"),r("br"),t._v("问题总数")]):t._e(),t.hasCheckSafety?r("th",{staticClass:"border-right"},[t._v("安全检查"),r("br"),t._v("问题总数")]):t._e(),t.hasCheckQuality?r("th",{staticClass:"border-right"},[t._v("质量检查"),r("br"),t._v("问题总数")]):t._e(),r("th",{staticClass:"border-right"},[t._v("材料验收"),r("br"),t._v("批数")]),t.hasProcess?r("th",{staticClass:"border-right"},[t._v("工序移交"),r("br"),t._v("次数")]):t._e(),t.hasProcessAccept?r("th",{staticClass:"border-right"},[t._v("工序验收"),r("br"),t._v("次数")]):t._e(),r("th",{staticClass:"border-right"},[t._v("实测实量"),r("br"),t._v("测点数")]),r("th",{staticClass:"border-right"},[t._v("形象进度"),r("br"),t._v("次数")])])]),r("tbody",[t._l(t.reportData,(function(e,a){return[r("tr",{key:a,staticClass:"border-bottom bg-white",on:{click:function(r){t.toggleItem(e)}}},[r("td",{staticClass:"border-right color-black fw-b"},[r("i",{class:{"icon-dropdown":e.open,"icon-dropright":!e.open}}),r("span",{staticClass:"name"},[t._v(t._s(e.name))])]),t.hasCheck?r("td",{staticClass:"border-right"},[t._v("\n                  "+t._s(t.abbNumber(e[t.curTab].problemCount))+"\n                ")]):t._e(),t.hasCheckSafety?r("td",{staticClass:"border-right"},[t._v("\n                  "+t._s(t.abbNumber(e[t.curTab].safetyCheckCount))+"\n                ")]):t._e(),t.hasCheckQuality?r("td",{staticClass:"border-right"},[t._v("\n                  "+t._s(t.abbNumber(e[t.curTab].qualityCheckCount))+"\n                ")]):t._e(),r("td",{staticClass:"border-right"},[t._v(t._s(t.abbNumber(e[t.curTab].materialCount)))]),t.hasProcess?r("td",{staticClass:"border-right"},[t._v("\n                  "+t._s(t.abbNumber(e[t.curTab].processCheckCount))+"\n                ")]):t._e(),t.hasProcessAccept?r("td",{staticClass:"border-right"},[t._v("\n                  "+t._s(t.abbNumber(e[t.curTab].processAcceptCount))+"\n                ")]):t._e(),r("td",{staticClass:"border-right"},[t._v(t._s(t.abbNumber(e[t.curTab].measurementCount)))]),r("td",{staticClass:"border-right"},[t._v(t._s(t.abbNumber(e[t.curTab].imageProcessCount)))])]),e.open?t._l(e.children,(function(e,n){return r("tr",{key:a+"-"+n,staticClass:"border-bottom"},[r("td",{staticClass:"border-right"},[r("span",{staticClass:"name"},[t._v(t._s(e.first_project_name))])]),t.hasCheck?r("td",{staticClass:"border-right"},[t._v("\n                    "+t._s(t.abbNumber(e[t.curTab].problemCount))+"\n                  ")]):t._e(),t.hasCheckSafety?r("td",{staticClass:"border-right"},[t._v("\n                    "+t._s(t.abbNumber(e[t.curTab].safetyCheckCount))+"\n                  ")]):t._e(),t.hasCheckQuality?r("td",{staticClass:"border-right"},[t._v("\n                    "+t._s(t.abbNumber(e[t.curTab].qualityCheckCount))+"\n                  ")]):t._e(),r("td",{staticClass:"border-right"},[t._v(t._s(t.abbNumber(e[t.curTab].materialCount)))]),t.hasProcess?r("td",{staticClass:"border-right"},[t._v("\n                    "+t._s(t.abbNumber(e[t.curTab].processCheckCount))+"\n                  ")]):t._e(),t.hasProcessAccept?r("td",{staticClass:"border-right"},[t._v("\n                    "+t._s(t.abbNumber(e[t.curTab].processAcceptCount))+"\n                  ")]):t._e(),r("td",{staticClass:"border-right"},[t._v(t._s(t.abbNumber(e[t.curTab].measurementCount)))]),r("td",{staticClass:"border-right"},[t._v(t._s(t.abbNumber(e[t.curTab].imageProcessCount)))])])})):t._e()]}))],2)]),r("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedHead&&!t.showFixedHeadPatch,expression:"showFixedHead && !showFixedHeadPatch"}],staticClass:"table fixed-head",style:{transform:"translateY("+t.fixedHeadTop+"px)"}},[r("thead",[r("tr",{staticClass:"border-bottom"},[r("th",{staticClass:"border-right"},[t._v("项目")]),t.hasCheck?r("th",{staticClass:"border-right"},[t._v("现场检查"),r("br"),t._v("问题总数")]):t._e(),t.hasCheckSafety?r("th",{staticClass:"border-right"},[t._v("安全检查"),r("br"),t._v("问题总数")]):t._e(),t.hasCheckQuality?r("th",{staticClass:"border-right"},[t._v("质量检查"),r("br"),t._v("问题总数")]):t._e(),r("th",{staticClass:"border-right"},[t._v("材料验收"),r("br"),t._v("批数")]),t.hasProcess?r("th",{staticClass:"border-right"},[t._v("工序移交"),r("br"),t._v("次数")]):t._e(),t.hasProcessAccept?r("th",{staticClass:"border-right"},[t._v("工序验收"),r("br"),t._v("次数")]):t._e(),r("th",{staticClass:"border-right"},[t._v("实测实量"),r("br"),t._v("测点数")]),r("th",{staticClass:"border-right"},[t._v("形象进度"),r("br"),t._v("次数")])])])])]),r("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedSlide,expression:"showFixedSlide"}],staticClass:"table fixed-slide"},[r("thead",[r("tr",{staticClass:"border-bottom"},[r("th",{staticClass:"border-right"},[t._v("项目")])])]),r("tbody",[t._l(t.reportData,(function(e,a){return[r("tr",{key:a,staticClass:"border-bottom bg-white",on:{click:function(r){t.toggleItem(e)}}},[r("td",{staticClass:"border-right color-black fw-b"},[r("i",{class:{"icon-dropdown":e.open,"icon-dropright":!e.open}}),r("span",{staticClass:"name"},[t._v(t._s(e.name))])])]),e.open?t._l(e.children,(function(e,n){return r("tr",{key:a+"-"+n,staticClass:"border-bottom"},[r("td",{staticClass:"border-right"},[r("span",{staticClass:"name"},[t._v(t._s(e.first_project_name))])])])})):t._e()]}))],2)])]),r("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedHeadPatch,expression:"showFixedHeadPatch"}],staticClass:"table fixed-head",style:{transform:"translateX("+-t.fixedHeadLeft+"px)"}},[r("thead",[r("tr",{staticClass:"border-bottom"},[r("th",{staticClass:"border-right"},[t._v("项目")]),t.hasCheck?r("th",{staticClass:"border-right"},[t._v("现场检查"),r("br"),t._v("问题总数")]):t._e(),t.hasCheckSafety?r("th",{staticClass:"border-right"},[t._v("安全检查"),r("br"),t._v("问题总数")]):t._e(),t.hasCheckQuality?r("th",{staticClass:"border-right"},[t._v("质量检查"),r("br"),t._v("问题总数")]):t._e(),r("th",{staticClass:"border-right"},[t._v("材料验收"),r("br"),t._v("批数")]),t.hasProcess?r("th",{staticClass:"border-right"},[t._v("工序移交"),r("br"),t._v("次数")]):t._e(),t.hasProcessAccept?r("th",{staticClass:"border-right"},[t._v("工序验收"),r("br"),t._v("次数")]):t._e(),r("th",{staticClass:"border-right"},[t._v("实测实量"),r("br"),t._v("测点数")]),r("th",{staticClass:"border-right"},[t._v("形象进度"),r("br"),t._v("次数")])])])]),r("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedNook,expression:"showFixedNook"}],staticClass:"table fixed-nook"},[r("thead",[r("tr",{staticClass:"border-bottom"},[r("th",{staticClass:"border-right"},[t._v("项目")])])])])]):t._e(),r("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.reportData||!t.reportData.length||!!t.errorTips,"empty-text":t.errorTips?t.errorTips:"没有报表数据",type:t.errorTips?"error":"report"}})],1)}),[],!1,null,"4db8b04d",null);e.default=o.exports},5685:function(t,e,r){"use strict";(function(t){var a=r("162a"),n=r("6144"),o=r("9cd1"),s=r("da2f"),i=r("c77f");function c(t,e){return t?(t-e)/t*100:0}var u={getProcessCheckNewBuilding:function(t){var e=n.a.getString("reportDateType",n.a.level.user)||"month";return Object(s.d)({proj_id:t,query_type:e})},getProjTotalData:function(){return a.a.request("/report/project-over-view")},getDailyCheckData:function(t,e,r,n,o){var s={proj_id:t,bidsection_id:e,begin_date:r,end_date:n};return o&&(s.module=o),a.a.request("/report/check",s)},getReportCheckList:function(t){return a.a.request("/report/check-batch-problem-list",{batch_id:t.batchId,begin_date:t.dateStart,end_date:t.dateEnd})},getReportCheckTimeoutList:function(t,e,r){return a.a.request("/report/get-over-due-check",{proj_id:t,key:e,page:r,pageSize:15})},getOverDueCheckConfig:function(t){return a.a.request("/report/get-over-due-check-config",{proj_id:t})},getReportCheckDetail:function(t){return a.a.request("/report/check-batch-problem-detail",{id:t})},postReportCheckUpdate:function(t){return a.a.post("/checkquality-comment/upload",{},t)},postReportCheckSendBack:function(t){return a.a.post("/checkquality-comment/send-back",{},t)},measureProjectData:[],waterPercolationData:[],getMeasureData:function(e){return a.a.request("/report/measure",{proj_id:e}).then((function(e){return t.each(e,(function(e){e.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},e.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},e.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(e.buildings,(function(r){r.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},r.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},r.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(r.check_items,(function(a){a.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},a.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},a.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(a.children,(function(n){e.repair_data.measurement_points_num+=n.measure_data[0].measurement_points,e.repair_data.problem_points_num+=n.measure_data[0].problem_points,e.repair_data.checkitem_num+=n.measure_data[0].measurement_points?1:0,e.supervision_data.measurement_points_num+=n.measure_data[1].measurement_points,e.supervision_data.problem_points_num+=n.measure_data[1].problem_points,e.supervision_data.checkitem_num+=n.measure_data[1].measurement_points?1:0,e.construct_data.measurement_points_num+=n.measure_data[2].measurement_points,e.construct_data.problem_points_num+=n.measure_data[2].problem_points,e.construct_data.checkitem_num+=n.measure_data[2].measurement_points?1:0,r.repair_data.measurement_points_num+=n.measure_data[0].measurement_points,r.repair_data.problem_points_num+=n.measure_data[0].problem_points,r.repair_data.checkitem_num+=n.measure_data[0].measurement_points?1:0,r.supervision_data.measurement_points_num+=n.measure_data[1].measurement_points,r.supervision_data.problem_points_num+=n.measure_data[1].problem_points,r.supervision_data.checkitem_num+=n.measure_data[1].measurement_points?1:0,r.construct_data.measurement_points_num+=n.measure_data[2].measurement_points,r.construct_data.problem_points_num+=n.measure_data[2].problem_points,r.construct_data.checkitem_num+=n.measure_data[2].measurement_points?1:0,a.repair_data.measurement_points_num+=n.measure_data[0].measurement_points,a.repair_data.problem_points_num+=n.measure_data[0].problem_points,a.repair_data.checkitem_num+=n.measure_data[0].measurement_points?1:0,a.supervision_data.measurement_points_num+=n.measure_data[1].measurement_points,a.supervision_data.problem_points_num+=n.measure_data[1].problem_points,a.supervision_data.checkitem_num+=n.measure_data[1].measurement_points?1:0,a.construct_data.measurement_points_num+=n.measure_data[2].measurement_points,a.construct_data.problem_points_num+=n.measure_data[2].problem_points,a.construct_data.checkitem_num+=n.measure_data[2].measurement_points?1:0,t.each(n.measure_data,(function(t){t.measurement_points?t.passport=(t.measurement_points-t.problem_points)/t.measurement_points*100:t.passport=0}))})),a.repair_data.passport=c(a.repair_data.measurement_points_num,a.repair_data.problem_points_num),a.supervision_data.passport=c(a.supervision_data.measurement_points_num,a.supervision_data.problem_points_num),a.construct_data.passport=c(a.construct_data.measurement_points_num,a.construct_data.problem_points_num)})),r.repair_data.passport=c(r.repair_data.measurement_points_num,r.repair_data.problem_points_num),r.supervision_data.passport=c(r.supervision_data.measurement_points_num,r.supervision_data.problem_points_num),r.construct_data.passport=c(r.construct_data.measurement_points_num,r.construct_data.problem_points_num)})),e.repair_data.passport=c(e.repair_data.measurement_points_num,e.repair_data.problem_points_num),e.supervision_data.passport=c(e.supervision_data.measurement_points_num,e.supervision_data.problem_points_num),e.construct_data.passport=c(e.construct_data.measurement_points_num,e.construct_data.problem_points_num)})),e}))},measureBuildData:{},setMeasureBuildData:function(t){u.measureBuildData=t},getMeasureBuildData:function(e){return t.isEmpty(u.measureBuildData)?u.getMeasureData(e).then((function(t){return t[0]})):Promise.resolve(u.measureBuildData)},getCheckAcceptData:function(t){return a.a.request("/report/check-accept",{proj_id:t})},getCheckAcceptDataOfBuilding:function(t,e,r){return a.a.request("/report/check-accept-detail",{section_id:t,building_id:e,unit:r||""})},getProcessCheckData:function(t,e){return a.a.request("/report/processcheck",{building_id:t,unit:e})},getProcessCheckData2:function(t){return Object(s.g)({building_id:t})},getMaterialData:function(t,e,r){return a.a.request("/report/material",{proj_id:t,begin_date:e,end_date:r})},getProcessAcceptBuilding:function(t){var e=n.a.getString("reportDateType",n.a.level.user)||"month";return Object(i.m)({proj_id:t,query_type:e})},getWaterPercolation:function(t){return a.a.request("/report/close-water-test",{proj_id:t})},getProcessAcceptData:function(t,e,r,a){return Object(i.n)({building_id:t,unit:e,start:r||"",end:a||""})},getProcessAcceptPileItem:function(t){return a.a.request("/report/get-pile-check-items",{bidsection_id:t})},getProcessAcceptPileData:function(t,e){return a.a.request("/report/process-accept-with-pile",{building_id:t,item_id:e})},getMeasureCheckedData:function(){return a.a.request("/report/leader-measure")},getSchedulePlanData:function(){return Object(o.i)()},getSchedulePlanProjectData:function(t){return Object(o.a)({proj_id:t})},getCheckProblemStatisticsData:function(t){return a.a.request("/report/leader-secure",t)},getProcessCheckStatisticsData:function(){return Object(s.k)()},schedulePlanNodeList:function(t){return Object(o.e)({plan_id:t})}};e.a=u}).call(this,r("391c"))},"6a03":function(t,e,r){"use strict";r("980d")},"774b":function(t,e,r){"use strict";var a=r("d18d").a,n=(r("b225"),r("17cc")),o=Object(n.a)(a,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?r("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[r("div",{staticClass:"pull-refresh"},[r("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?r("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?r("div",{staticClass:"page-loading"},[r("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[r("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?r("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=o.exports},"980d":function(t,e,r){var a=r("31ff");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,r("85cb").default)("79d3e357",a,!0,{sourceMap:!1,shadowMode:!1})},"9cd1":function(t,e,r){"use strict";r.d(e,"h",(function(){return s})),r.d(e,"m",(function(){return i})),r.d(e,"g",(function(){return c})),r.d(e,"f",(function(){return u})),r.d(e,"d",(function(){return l})),r.d(e,"l",(function(){return d})),r.d(e,"k",(function(){return p})),r.d(e,"j",(function(){return h})),r.d(e,"b",(function(){return m})),r.d(e,"e",(function(){return b})),r.d(e,"c",(function(){return _})),r.d(e,"i",(function(){return f})),r.d(e,"a",(function(){return g}));var a=r("5e8d"),n=r("162a"),o=r("bcc78");function s(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanTaskInfo.url;return n.a.request(e,t)}))}function i(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanSaveTask.url;return n.a.post(e,null,t)}))}function c(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanPlanList.url;return n.a.request(e,t)}))}function u(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanNodeList.url;return n.a.request(e,t)}))}function l(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanNodeInfo.url;return n.a.request(e,t)}))}function d(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanSaveReport.url;return n.a.post(e,null,t)}))}function p(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanSaveCompleteTime.url;return n.a.post(e,null,t)}))}function h(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanSaveChecker.url;return n.a.post(e,null,t)}))}function m(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanCheckerLogList.url;return n.a.request(e,t)}))}function b(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanNodeLevel.url;return n.a.request(e,t)}))}function _(){return Object(a.a)().then((function(){var t=o.a.schedulePlanCompletedTimeSetting.url;return n.a.request(t)}))}function f(){return Object(a.a)().then((function(){var t=o.a.schedulePlanLeaderSchedulePlan.url;return n.a.request(t)}))}function g(t){return Object(a.a)().then((function(){var e=o.a.schedulePlanGetByFirstProject.url;return n.a.request(e,t)}))}},"9d55":function(t,e,r){(t.exports=r("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},b05c:function(t,e,r){"use strict";(function(t){r("ed63"),r("8cf2");var a,n=r("07d2"),o=r("774b"),s=r("e2a7"),i=r("5685"),c=r("c745");e.a={name:"Report",components:{Item:n.a,Scroller:o.a},data:function(){return{isLoading:!0,errorTips:"",tabs:[{key:"total",name:"累计"},{key:"thisMonth",name:"本月"}],curTab:"total",hasCheck:!1,hasCheckSafety:!1,hasCheckQuality:!1,hasProcessAccept:!1,hasProcess:!1,reportData:[],fixedHeadTop:0,fixedHeadLeft:0,showFixedHead:!0,showFixedHeadPatch:!1,showFixedSlide:!0,showFixedNook:!0}},activated:function(){this.$router.isBack||this.getReportData()},methods:{getReportData:function(){var e=this;this.isLoading=!0,this.errorTips="",i.a.getProjTotalData().then((function(r){t.each(r,(function(e){e.open=!0,t.each(e.children,(function(t){t.sum&&(t.total=t.sum)}))})),e.reportData=r})).then((function(){return c.a.getGreyModulePermisssions().then((function(t){t=t.map((function(t){return t.code})),e.hasCheck=t.includes("check"),e.hasCheckSafety=t.includes("check-safety"),e.hasCheckQuality=t.includes("check-quality"),e.hasProcessAccept=t.includes("process-accept"),e.hasProcess=t.includes("process"),e.isLoading=!1}))})).catch((function(r){$log.log("report_overview_leader-index，error => ",r),e.errorTips=t.isString(r)?r:"获取数据失败",e.reportData=[],e.isLoading=!1}))},abbNumber:function(e){return t.isNumber(e)&&e>1e4?(e/1e4).toFixed(1)+"万":e},toggleItem:function(t){this.$set(t,"open",!t.open)},onScrollX:function(t){var e=t&&t.target?t.target.scrollLeft:0;e>=0?(this.fixedHeadLeft=e,this.showFixedSlide=!0,this.showFixedNook=!0):(this.fixedHeadLeft=0,this.showFixedSlide=!1,this.showFixedNook=!1),this.showFixedHeadPatch=!1},onScrollY:function(t){var e=this,r=t&&t.target?t.target.scrollTop:0;r>=0?(this.fixedHeadTop=r,this.showFixedHead=!0,this.showFixedNook=!0,this.showFixedHeadPatch=!0,clearTimeout(a),a=setTimeout((function(){e.showFixedHeadPatch=!1}),500)):(this.fixedHeadTop=0,this.showFixedHead=!1,this.showFixedNook=!1,this.showFixedHeadPatch=!1)},markCont:function(){s.a.notify("本报表数据每天5点定时刷新","知道了")}}}}).call(this,r("391c"))},b225:function(t,e,r){"use strict";r("ef48")},c77f:function(t,e,r){"use strict";r.d(e,"i",(function(){return i})),r.d(e,"h",(function(){return c})),r.d(e,"a",(function(){return u})),r.d(e,"f",(function(){return l})),r.d(e,"g",(function(){return d})),r.d(e,"e",(function(){return p})),r.d(e,"m",(function(){return h})),r.d(e,"n",(function(){return m})),r.d(e,"b",(function(){return b})),r.d(e,"j",(function(){return _})),r.d(e,"k",(function(){return f})),r.d(e,"c",(function(){return g})),r.d(e,"d",(function(){return v})),r.d(e,"l",(function(){return C})),r.d(e,"o",(function(){return x}));var a=r("5e8d"),n=r("162a"),o=r("bcc78"),s=r("da71");function i(t){return Object(a.a)().then((function(){var e=o.a.commonGetProblemClassTree.url;return n.a.request(e,t)}))}function c(t){return Object(a.a)().then((function(){var e=o.a.pileAcceptGetPileBuildingSummary.url;return n.a.request(e,t)}))}function u(t){return Object(a.a)().then((function(){var e=o.a.pileAcceptGetBidsectionBuildingTree.url;return n.a.request(e,t)}))}function l(){return Object(a.a)().then((function(){var t=o.a.pileAcceptGetPileAcceptItems.url;return n.a.request(t)}))}function d(t){return Object(a.a)().then((function(){var e=o.a.pileAcceptGetPileAcceptList.url;return n.a.request(e,t)}))}function p(t){return Object(a.a)().then((function(){var e=o.a.pileAcceptGetPileAcceptInfo.url;return n.a.request(e,t)}))}function h(t){return Object(a.a)().then((function(){var e=o.a.processAcceptBuilding.url;return n.a.request(e,t)}))}function m(t){return Object(a.a)().then((function(){var e=o.a.processAcceptCollect.url;return n.a.request(e,t)}))}function b(t){return Object(a.a)().then((function(){var e=o.a.processAcceptv3GetBuildingList.url;return n.a.request(e,t)}))}function _(t){return Object(a.a)().then((function(){var e=o.a.processAcceptv3GetProcessAcceptv3List.url;return n.a.request(e,t)}))}function f(t){return Object(a.a)().then((function(){var e=s.a.getReportOrgTree.url;return n.a.request(e,t)}))}function g(t){return Object(a.a)().then((function(){var e=s.a.getHomeReports.url;return n.a.request(e,t)}))}function v(t){return Object(a.a)().then((function(){var e=s.a.getMyReports.url;return n.a.request(e,t)}))}function C(t){return Object(a.a)().then((function(){var e=s.a.getReportPools.url;return n.a.request(e,t)}))}function x(t){return Object(a.a)().then((function(){var e=s.a.saveMyReportsSetting.url;return n.a.post(e,null,t)}))}},d18d:function(t,e,r){"use strict";(function(t){r("2b45");var a,n=r("4360"),o=r("48f4"),s=r("162a"),i=r("e2a7"),c=r("a500"),u=r("6f9e"),l={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return n.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return n.a.state.global.isNumberInputOpen?n.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;u.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var r=e&&e.target,a=r&&r.tagName&&r.tagName.toLowerCase();if("input"===a||"textarea"===a){window.addEventListener("resize",(function e(){var a=r.getBoundingClientRect(),n=t.$el.getBoundingClientRect(),o=a.bottom-n.bottom;o>0&&t.scrollBy(o),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){u.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,r=this.$refs["scroll-warp"].scrollTop,a=this.$refs["scroll-warp"].scrollHeight;if(r+this.$refs["scroll-warp"].clientHeight>=a-5&&!this.loading&&this.hasNext){this.loading=!0;var n=this.$listeners.loadNext();n&&n.then&&"function"==typeof n.then?n.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(l&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,r=t.touches[0].clientY;return Math.abs(r-l.y)>Math.abs(e-l.x)&&Math.abs(r-l.y)>=3?r>l.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(l={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,r=t.touches[0].clientY,a=r-l.y,n=this.getTouchDiretion(t);"down"===n?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(a-l.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===n?this.pullDist>0&&(this.pullDist=l.pullDist-(l.y-r),t.preventDefault()):this.pullDist=l.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(l={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,r=this.pullDist,a=t,n=a-r,o=r;return r===a?Promise.resolve():new Promise((function(t){!function s(){window.requestAnimationFrame((function(){o+=n/6,e.pullDist=o,r<a&&o<a||r>a&&o>a?s():(e.pullDist=a,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=o.default.getCurrentModuleCode(),r=o.default.getCurrentRoute(),a=r.meta&&r.meta.isTodo;if(o.default.isModuleNeedBuilding(e)&&!a){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return c.a.addTrack("公共-手动下拉刷新","",""),s.a.beginManualUpdate(),o.default.checkSync(t).then((function(t){return s.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?i.a.alert("当前网络无法同步数据"):i.a.alert(t),s.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,n=this.getScrollTop(),o=n+t,s=Math.round(r/16.7),i=t/s,c=n,u=a=+new Date;return n===o?Promise.resolve():new Promise((function(t){!function r(){window.requestAnimationFrame((function(){u===a&&(c+=i,e.$refs["scroll-warp"].scrollTop=c,n<o&&c<o||n>o&&c>o?r():(e.$refs["scroll-warp"].scrollTop=o,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,r=this.getScrollTop(),a=t-r;return this.scrollBy(a,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,r=(t=t.$el?t.$el:t).getBoundingClientRect(),a=this.$refs["scroll-warp"].getBoundingClientRect();if(r&&a){var o=document.documentElement.clientHeight-(n.a.state.global.isNumberInputOpen?e:0),s=a.bottom<o?a.bottom:o,i=a.top-r.top,c=r.bottom-s;i>0?this.scrollBy(-i-10):c>0&&this.scrollBy(c+10)}},isCurrent:function(e,r){var a=this;e.length&&t.each(e,(function(t){t._uid===r?a.isCurrKeyboard=!0:a.isCurrent(t.$children,r)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,r("391c"))},ef48:function(t,e,r){var a=r("9d55");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,r("85cb").default)("a1a65c0c",a,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,