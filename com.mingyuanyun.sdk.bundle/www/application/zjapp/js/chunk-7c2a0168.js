(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-7c2a0168","chunk-55bf535c","chunk-b1eec014","chunk-05a7fae9","chunk-2d0d2f53"],{"05ac":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name,\n\t\t(select count(*) from checkquality_problem cp where cp.biz_id = si.id ) as problemNum,\n\t\t(select sum(deduction) from checkquality_problem cp1 \n      where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' and cp1.status != '已关闭') as deduction \n\t\tfrom special_inspect si \n\t\twhere si.batch_id = '".concat(e,"' order by si.checkitem_code");return s.a.query(t)}}]),r}(r("29f8").a)},"0732":function(e,t,r){var n=r("81f2");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("1b5b07de",n,!0,{sourceMap:!1,shadowMode:!1})},"0784":function(e,t,r){"use strict";r("8a83e")},"09ae":function(e,t,r){"use strict";(function(e){r.d(t,"c",(function(){return j})),r.d(t,"a",(function(){return I})),r.d(t,"d",(function(){return S})),r.d(t,"b",(function(){return D}));r("5ab2"),r("cc57");var n=r("28f8"),a=(r("163d"),r("6a61"),r("e697"),r("2e91")),i=(r("e10e"),r("f548"),r("6d57"),r("a044")),c=r("2b66"),o=r("82c5"),s=r("b26e"),u=r("1b7e"),l=r("7bac"),d=r("a7c3"),p=r("6bf2"),m=r.n(p);function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function h(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(Object(r),!0).forEach((function(t){Object(n.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var b=r("8625"),g={};b.keys().forEach((function(e){var t=b(e).default,r=e.replace(/(\.\/|\.js)/g,"");g[r]=t}));var _=Object.keys(g).map((function(e){return e.replace("mode-","")}));function y(){return v.apply(this,arguments)}function v(){return(v=Object(a.a)(regeneratorRuntime.mark((function e(){var t,r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u.a.getHasNetwork();case 2:if(e.sent){e.next=5;break}return e.abrupt("return",!1);case 5:return e.next=7,l.a.getUserKey(d.a.CUSTOM_TIME_SPECIAL_INSPECT);case 7:if(t=e.sent){e.next=10;break}return e.abrupt("return",!0);case 10:if(r=Number(t),!isNaN(r)){e.next=15;break}return e.next=14,l.a.setUserKey(d.a.CUSTOM_TIME_SPECIAL_INSPECT,"");case 14:return e.abrupt("return",!0);case 15:return n=m()(r),e.abrupt("return",m()().diff(n,i.c)>i.b);case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function k(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.reduce((function(e,t){var r=t.value;if(r&&"string"==typeof r)try{r=JSON.parse(r)}catch(e){r=null}return e[t.code]=r,e}),{})}function x(){return w.apply(this,arguments)}function w(){return(w=Object(a.a)(regeneratorRuntime.mark((function e(){var t,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y();case 2:if(e.sent){e.next=11;break}return e.next=6,l.a.getUserKey(d.a.CUSTOM_LAYOUT_SPECIAL_INSPECT);case 6:if(e.t0=e.sent,e.t0){e.next=9;break}e.t0={};case 9:return t=e.t0,e.abrupt("return",t);case 11:return e.next=13,Object(s.b)({codes:_.map((function(e){return i.d+"_"+e}))}).catch((function(){return null}));case 13:if((r=e.sent)&&Array.isArray(r)){e.next=22;break}return e.next=17,l.a.getUserKey(d.a.CUSTOM_LAYOUT_SPECIAL_INSPECT);case 17:if(e.t1=e.sent,e.t1){e.next=20;break}e.t1={};case 20:return t=e.t1,e.abrupt("return",t);case 22:return t=k(r),e.next=25,l.a.setUserKey(d.a.CUSTOM_LAYOUT_SPECIAL_INSPECT,t);case 25:return e.next=27,l.a.setUserKey(d.a.CUSTOM_TIME_SPECIAL_INSPECT,(new Date).getTime());case 27:return e.abrupt("return",t);case 28:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function j(e){return O.apply(this,arguments)}function O(){return(O=Object(a.a)(regeneratorRuntime.mark((function t(r){var n,a,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=i.d+"_"+r,t.next=3,x();case 3:return c=t.sent,a=c[n],((a=h(h({},e.cloneDeep(g["mode-".concat(r)])),a))&&a.tree&&a.tree.btns||[]).forEach((function(e,t){e.index=t})),t.abrupt("return",a);case 8:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function I(e,t){return R.apply(this,arguments)}function R(){return(R=Object(a.a)(regeneratorRuntime.mark((function t(r,n){var a,i,c,s,u,l,d,p,m=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=m.length>2&&void 0!==m[2]?m[2]:"edit",t.next=3,j(r);case 3:if(i=t.sent,c={edit:"detailEditForm",view:"detailViewForm"}[a]){t.next=8;break}return t.abrupt("return",[]);case 8:if(s=i&&i[c],u=i&&i.tree&&i.tree.btns||[],l=u[n]&&u[n].formConfig,d={edit:o.a,view:o.b},p=d[a]){t.next=15;break}return t.abrupt("return",[]);case 15:return t.abrupt("return",p.map((function(t){var r=t.name,n=s&&s.find((function(e){return e.name===r})),a=l&&l.find((function(e){return e.name===r})),i=e.mergeWith({},t,n,a,(function(e,t){if(Array.isArray(e))return t}));return e.cloneDeep(i)})));case 16:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function S(t){return e.cloneDeep(c.a.find((function(e){return e.mode===t})))}function D(e){return P.apply(this,arguments)}function P(){return(P=Object(a.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,j(t);case 2:return r=e.sent,e.abrupt("return",r&&r.navMenu||[]);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}).call(this,r("391c"))},"09d6":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return m}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a044"),d=r("e2a7");function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var m=function(e){Object(c.a)(o,e);var t,r=p(o);function o(){return Object(a.a)(this,o),r.apply(this,arguments)}return Object(i.a)(o,[{key:"onClickEndNode",value:function(e,t,r){e.status===l.y?this.routeToOldSetPass(e):(e.status!==l.v||e.temporary_storage)&&this.routeToOldProblemList(e,r)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"changeSpecialInspectStatus",value:function(e){this.routeToOldSetPass(e)}},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:8})}},{key:"finishBatchConfirm",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r||[]).some((function(e){return!e.treeNodeIsFirst&&e.treeNodeIsEnd&&e.temporary_storage}))){e.next=3;break}return e.abrupt("return",d.a.confirm("有暂存数据未提交，继续操作将清除所有暂存数据，是否确定提交？"));case 3:case"end":return e.stop()}}),e)}))),function(e,r,n){return t.apply(this,arguments)})}]),o}(u.a)},1059:function(e,t,r){"use strict";var n=r("ebf1").a,a=(r("9dea"),r("17cc")),i=Object(a.a)(n,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"redio-box-group",class:"align-"+e.align+" "+e.customClass},e._l(e.options,(function(t,n){return r("span",{key:n,staticClass:"radio-box",class:{selected:"array"===e.optionsType?e.value===t:"object"===e.optionsType&&e.value===n},on:{click:function(t){e.onSelect(n)}}},[e._v("\n    "+e._s(t)+"\n  ")])})))}),[],!1,null,"b0a30924",null);t.a=i.exports},1079:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return u}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703");function s(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var u=function(e){Object(i.a)(r,e);var t=s(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name,\n    (select count(*) from checkquality_problem cp \n      where cp.biz_id = si.id and cp.status !='草稿' ) as problem_num,\n\t  (select count(*) from checkquality_problem cp \n      where cp.biz_id = si.id and cp.status ='草稿' ) as temporary_storage,\n    (select deduction from checkquality_problem cp1 \n      where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' ORDER BY deduction desc, created_on desc limit 1) as deduction,\n    (select redline_deduction from checkquality_problem cp1 \n      where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' ORDER BY deduction desc, created_on desc limit 1) as redline_deduction,\n    (select deduction_level from checkquality_problem cp1 \n      where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' ORDER BY deduction desc, created_on desc limit 1) as deduction_level,\n\t\t(select id from checkquality_problem cp where cp.biz_id = si.id order by cp.download_time desc limit 1) as problem_id\n\t\tfrom special_inspect si \n\t\twhere si.batch_id = '".concat(e,"' order by si.checkitem_code");return localDB.query(t)}}]),r}(r("29f8").a)},1522:function(e,t,r){"use strict";r.d(t,"b",(function(){return c}));r("f548"),r("6d57");var n=new(r("29f8").a);t.a=n;var a=r("9dfb"),i={};function c(e){return i["mode-".concat(e)]||n}a.keys().forEach((function(e){var t=a(e).default,r=e.replace(/(\.\/|\.js)/g,"");i[r]=new t}))},"17b9":function(e,t,r){"use strict";r.r(t),t.default={mode:4,name:'可打分，按"权重+得分率"计算总分',navMenu:[{name:"全部问题",code:"allProblem"},{name:"展示描述",code:"toggleDesc"}],totalMode:"batch.template_extension.mode4_passrate_mode",defaultTotalMode:1,tree:{style:"no-point",attrs:[{key:"hasData",name:"有检查数据-末级",type:"boolean",method:"some",pattern:"computed",match:"treeNodeIsEnd",result:'status === "合格" || status === "不合格"'},{key:"hasData",name:"有检查数据-非末级",type:"boolean",method:"some",pattern:"transmit",match:"!treeNodeIsEnd",result:"hasData"},{key:"score",name:"满分汇总-末级算法",type:"number",pattern:"transmit",totalMode:1,match:"!treeNodeIsEnd",filter:"hasData",result:"score || 0"},{key:"score",name:"满分汇总-二级算法",type:"number",pattern:"transmit",totalMode:2,match:"treeNodeIsFirst",filter:"hasData",result:"score || 0"},{key:"deduction",name:"扣分汇总-末级算法，取末级的扣分时，要判断不能超过满分",type:"number",pattern:"transmit",totalMode:1,match:"!treeNodeIsEnd",result:"treeNodeIsEnd ? Math.min(deduction || 0, score || 0) : deduction"},{key:"deduction",name:"扣分上限处理-二级算法",type:"number",pattern:"computed",totalMode:2,match:"treeNodeIsEnd && isNumber(checkitem_extension.deduction_limit)",result:"Math.min(deduction || 0, checkitem_extension.deduction_limit)"},{key:"deduction",name:"扣分汇总-二级算法",type:"number",pattern:"transmit",totalMode:2,match:"!treeNodeIsEnd",result:"deduction || 0"},{key:"deduction",name:"扣分汇总-二级算法，二级检查项满分判断",type:"number",pattern:"computed",totalMode:2,match:"treeNodeLevel === 1",result:"isNumber(score) ? Math.min(deduction || 0, score) : (deduction || 0)"},{key:"scoreRate",name:"一级检查项得分率",type:"number",pattern:"computed",match:"treeNodeIsFirst",result:"(score - deduction) / score"},{key:"problemNum",name:"问题总数",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"problemNum || 0"},{key:"weight",name:"权重",type:"number",pattern:"computed",result:"parseFloat(weight) || 0"}],notes:[{text:"({{ weight || 0 }}%)",color:"balck",show:"treeNodeIsFirst"},{text:"({{ score || 0 }}分)",color:"gray3",show:"!treeNodeIsFirst && treeNodeIsEnd",totalMode:1},{text:"({{ score || 0 }}分)",color:"gray3",show:"treeNodeLevel === 1",totalMode:2}],infos:[{text:"未检",color:"gray3",show:"treeNodeIsFirst && !hasData"},{text:"-{{ deduction }}分",color:"red",show:"treeNodeIsFirst && hasData"},{text:"{{ percent(scoreRate, 2) }}",color:"red",show:"treeNodeIsFirst && hasData"},{text:"{{ status }}",type:"status",show:'status === "合格"'},{text:"-{{ deduction || 0 }}分",color:"red",show:'status === "不合格"',totalMode:1},{text:"{{ problemNum }}个问题",color:"gray3",show:'treeNodeIsEnd && problemNum && status !== "合格"',totalMode:1},{text:"-{{ deduction || 0 }}分",color:"red",show:'!treeNodeIsFirst && hasData && status !== "合格"',totalMode:2},{text:"{{ problemNum }}个问题",color:"gray3",show:'!treeNodeIsFirst && hasData && status !== "合格"',totalMode:2}],icons:[{name:"mark",show:"treeNodeIsEnd && is_redline_deduction",totalMode:2}],btns:[{name:"扣分",show:'!treeNodeIsFirst && treeNodeIsEnd && status !== "合格" && !problemNum',operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]},{name:"合格",show:'!treeNodeIsFirst && treeNodeIsEnd && status !== "合格" && !problemNum',operate:"change-status",value:"合格"}]},total:{title:"当前综合得分",note:"",calc:[{key:"scoreWeightSum",name:"得分率*权重之和",match:"treeNodeIsFirst && hasData",value:"scoreRate * weight",text:"{{percent(scoreRate, 2)}} * {{weight || 0}}%"},{key:"weightSum",name:"权重之和",match:"treeNodeIsFirst && hasData",value:"weight",text:"{{weight || 0}}%"},{key:"redlineDeduction",name:"红线扣分",match:"treeNodeIsEnd && hasData",value:"redline_deduction",text:"{{redline_deduction}}"},{key:"doneCount",name:"已检数量",match:"treeNodeIsEnd && hasData",value:"1"}],result:"Math.max((weightSum.value ? scoreWeightSum.value / weightSum.value : 0) - redlineDeduction.value * 0.01, 0)",hasResult:'batch.status === "检查完毕" || Boolean(doneCount.value)',resultType:"percent",formula:"综合得分=(已检查的一级检查项得分率的加权平均-红线扣分*0.01)*100%",formulaCalc:"=(({{scoreWeightSum.text}})/({{weightSum.text}})-{{redlineDeduction.value}}*0.01)*100%={{result}}",formulaText:"{{formula}}{{formulaCalc}}"}}},"19a7":function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .redio-box-group[data-v-b0a30924]{font-size:0;margin-top:-10px}.zjapp .redio-box-group.align-l[data-v-b0a30924]{text-align:left}.zjapp .redio-box-group.align-r[data-v-b0a30924]{text-align:right}.zjapp .radio-box[data-v-b0a30924]{display:inline-block;height:34px;line-height:32px;min-width:60px;padding:0 5px;margin:10px 0 0 10px;border:1px solid #d9d9d9;background:#fff;color:#666;vertical-align:top;font-size:14px;text-align:center;border-radius:3px}.zjapp .radio-box[data-v-b0a30924]:first-child{margin-left:0}.zjapp .radio-box.selected[data-v-b0a30924]{border-color:#4275e8;color:#4275e8}",""])},"19a9":function(e,t,r){"use strict";r("7d4e")},"1def":function(e,t,r){"use strict";r.r(t),t.default={mode:5,name:"可打分，按满分减扣分计算总分",navMenu:[{name:"全部问题",code:"allProblem"}],tree:{attrs:[{key:"hasData",name:"有检查数据-末级",type:"boolean",method:"some",pattern:"computed",match:"treeNodeIsEnd",result:'status === "合格" || status === "不合格"'},{key:"hasData",name:"有检查数据-非末级",type:"boolean",method:"some",pattern:"transmit",match:"!treeNodeIsEnd",result:"hasData"},{key:"deduction",name:"扣分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"deduction || 0"},{key:"problemNum",name:"问题数量-非末级",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"problemNum"}],infos:[{text:"-{{ deduction > score ? score : deduction }}分",color:"red",show:"treeNodeIsFirst && (problemNum || hasData)"},{text:"满分{{ score || 0 }}",color:"gray3",show:{treeNodeIsFirst:!0}},{text:"{{ status }}",type:"status",show:{status:"合格"}},{text:"-{{ deduction || 0 }}分",color:"red",show:{status:"不合格"}},{text:"{{ problemNum }}个问题",color:"gray3",show:'!treeNodeIsFirst && treeNodeIsEnd && problemNum && status !== "不合格"'}],btns:[{name:"合格",show:'!treeNodeIsFirst && treeNodeIsEnd && !problemNum && status !== "合格"',operate:"change-status",value:"合格"},{name:"扣分",show:'!treeNodeIsFirst && treeNodeIsEnd && !problemNum && status !== "合格"',operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]}]},total:{title:"当前综合得分",note:"",calc:[{key:"scoreSum",name:"总满分",match:"treeNodeIsFirst",value:"score",text:"{{score }}"},{key:"deductionSum",name:"总扣分",match:"treeNodeIsFirst && hasData",value:"deduction > score ? score : deduction",text:"{{deduction > score ? score : deduction}}"}],result:"scoreSum.value - deductionSum.value",hasResult:"Boolean(scoreSum.value)",resultType:"number",numberFixed:!1,formula:"得分=总满分-总扣分",formulaCalc:"=({{scoreSum.text}})-({{deductionSum.text || 0}})={{result}}",formulaText:"{{formula}}{{formulaCalc}}\n需至少检查一项，记录合格或扣分，批次创建人才能最终结束并提交"},finishBatchCheck:[{isFilterFirst:!1,statusTotalConfig:[{status:"合格",key:"a"},{status:"不合格",key:"b"}],match:"a + b <= 0",msg:"您未录入任何检查项的检查记录，请录入后再提交"}]}},"1e33":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return b}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("90ce"),o=r("76ff"),s=r("4b67"),u=r("d703"),l=r("937e"),d=(r("48f4"),r("1b7e")),p=r("162a"),m=r("fc9f"),f=(r("4360"),r("a044"));function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(u.a)(e);if(t){var a=Object(u.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(s.a)(this,r)}}var b=function(e){Object(o.a)(l,e);var t,r,s=h(l);function l(){return Object(a.a)(this,l),s.apply(this,arguments)}return Object(i.a)(l,[{key:"onClickEndNode",value:function(e,t,r){e.status===f.y?this.routeToOldSetPass(e):e.problemNum&&this.routeToOldProblemList(e,r)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"changeSpecialInspectStatus",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r===f.y?this.routeToOldSetPass(t):Object(c.a)(Object(u.a)(l.prototype),"changeSpecialInspectStatus",this).call(this,t,r,n);case 1:case"end":return e.stop()}}),e,this)}))),function(e,t,n){return r.apply(this,arguments)})},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:this.mode})}},{key:"finishBatch",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n,a,i,o,s,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("UsingSpecialInspectMode3DefaultOk"!==r.grayKey){e.next=27;break}return n=t.id,t.status=f.u,e.next=5,d.a.getHasNetwork();case 5:if(e.sent){e.next=8;break}return e.abrupt("return",Promise.reject("当前网络无法同步数据"));case 8:return e.next=10,p.a.post("/batch/upload",null,{data:{batch:t}});case 10:if(!("ex_data"in(a=e.sent))){e.next=14;break}return e.next=14,p.a.importData({result:a.ex_data});case 14:return e.next=16,m.a.update("batch",a.batch,{id:n});case 16:return i={status:f.v,deduction:0,image_file:"[]"},o={batch_id:t.id,status:f.w},e.next=20,this.Repositories.updateSpecialInspectAll(o,i);case 20:return e.next=22,this.Repositories.getDraftProblemByBatchId(n);case 22:return s=e.sent,h=(s||[]).map((function(e){return e.id})),e.abrupt("return",this.Repositories.deleteProblemById(h));case 27:return e.next=29,Object(c.a)(Object(u.a)(l.prototype),"finishBatch",this).call(this,t);case 29:case"end":return e.stop()}}),e,this)}))),function(e,r){return t.apply(this,arguments)})}]),l}(l.a)},2150:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return b}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("90ce"),o=r("76ff"),s=r("4b67"),u=r("d703"),l=r("937e"),d=r("a18c"),p=r("e2a7"),m=r("7cb8"),f=r("a044");function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(u.a)(e);if(t){var a=Object(u.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(s.a)(this,r)}}var b=function(e){Object(o.a)(l,e);var t,r,s=h(l);function l(){return Object(a.a)(this,l),s.apply(this,arguments)}return Object(i.a)(l,[{key:"onClickEndNode",value:function(e,t,r){d.a.push({path:"/special-inspect-measure-problem-detail",query:{bizId:e.id}})}},{key:"batchCheck",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n,a){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(c.a)(Object(u.a)(l.prototype),"batchCheck",this).call(this,t,r,n,a);case 2:if(!(i=e.sent)){e.next=5;break}return e.abrupt("return",i);case 5:if(t.place&&t.place.trim()){e.next=8;break}return e.abrupt("return",{code:1,msg:"检查部位必填"});case 8:case"end":return e.stop()}}),e,this)}))),function(e,t,n,a){return r.apply(this,arguments)})},{key:"finishBatchConfirm",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n){var a,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=Object(m.g)(n,"status",[f.v]),!((i=a[f.v])>0)){e.next=6;break}if(c=p.a.popBox({title:'有<span class="color-orange pl5 pr5">'+i+"</span>项无记录，是否正常提交？",cancelText:"取消",okText:"提交"})){e.next=6;break}return e.abrupt("return",c);case 6:return e.abrupt("return",p.a.confirm("请确保所有检查人已上传数据，提交后不可修改，确认提交？"));case 7:case"end":return e.stop()}}),e)}))),function(e,r,n){return t.apply(this,arguments)})}]),l}(l.a)},"264e":function(e,t,r){"use strict";r.d(t,"a",(function(){return n})),r.d(t,"c",(function(){return a})),r.d(t,"b",(function(){return i})),r.d(t,"d",(function(){return c}));var n="检查完毕",a="未设置",i="草稿",c=[a,i]},"266f":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return m}));r("2b45"),r("fc58"),r("6d57"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a044"),d=(r("e2a7"),r("7cb8"));function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var m=function(e){Object(c.a)(o,e);var t,r=p(o);function o(){return Object(a.a)(this,o),r.apply(this,arguments)}return Object(i.a)(o,[{key:"getIndexList",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getIndexList(t);case 2:return((r=e.sent)||[]).forEach((function(e){e.template_extension=Object(d.l)(e.template_extension)||{}})),n=Object(d.c)(r,{key:"id",relationKey:"parent_id",setLevel:!0}),e.abrupt("return",{tree:n,list:r});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"batchCheck",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=t.some((function(e){return e.status===l.u}));if(!r)return{code:1,msg:"请完成至少一个末级模板再提交"}}}]),o}(u.a)},"26e9":function(e,t,r){"use strict";t.a={CHECK_NAME:"现场检查",CHECK_SAFETY_NAME:"安全检查",CHECK_QUALITY_NAME:"质量检查",MEASURE_V3_NAME:"实测实量",LASER_SCANNING_MEASURE_NAME:"激光扫描实测",PROCESS_NEW_INDEX_NAME:"工序移交",PILE_ACCEPT_NAME:"桩基验收",PROCESS_ACCEPT_NAME:"工序验收",PROCESS_ACCEPT_V2_NAME:"工序验收",PROCESS_ACCEPT_V3_NAME:"工序验收",MATERIAL_NAME:"材料验收",INVENTORY_NAME:"材料盘点",TEMPLET_PLAN_NAME:"样板管理",TEMPLET_PLAN_V2_NAME:"样板管理",TEMPLATE_MANAGE_NAME:"常用文档",IMAGE_PROCESS_NAME:"形象进度",SCHEDULE_PLAN_NAME:"进度管理",CLOSED_WATER_TEST_NAME:"闭水试验",WATER_POURING_TEST_NAME:"淋水试验",SPECIAL_INSPECT_NAME:"专项巡检",MEASURE_INSPECT_NAME:"实测巡检",FLY_INSPECT_NAME:"飞检&专项",MONITOR_NAME:"视频监控",PROJECT_HIGHLIGHT_NAME:"工程案例",MEETING_NAME:"安全晨会",PHOTOS_NAME:"APP相册",NCOV_ANTI_EPIDEMIC_NAME:"防疫宝",TRACEABILITY_NAME:"材料溯源"}},2757:function(e,t,r){"use strict";r.d(t,"a",(function(){return g})),r.d(t,"c",(function(){return k})),r.d(t,"d",(function(){return x}));r("6a61");var n=r("2e91"),a=(r("9e76"),r("f548"),r("6d57"),r("5ab2"),r("e10e"),r("28f8")),i=r("0e4d"),c=r("94ef"),o=r("1522"),s=r("3bd5"),u=r("7bac"),l=r("4360"),d=r("3516"),p=r("7cb8");function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(Object(r),!0).forEach((function(t){Object(a.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var h=function(){function e(){Object(i.a)(this,e),this.batchTemplateModeCache={},this.specialInspectTemplateModeCache={}}var t,r,a,m,h,b,g;return Object(c.a)(e,[{key:"getDefaultBatch",value:(g=Object(n.a)(regeneratorRuntime.mark((function e(){var t,r,n,a,i,c=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=c.length>0&&void 0!==c[0]?c[0]:l.a.state.global.currentProject.id,r="SpecialInspectBatchStorageKey-".concat(t),e.next=4,u.a.getUserKey(r);case 4:return n=e.sent,a=n&&n.id,e.next=8,this.getBatchById(a);case 8:return i=e.sent,e.abrupt("return",i);case 10:case"end":return e.stop()}}),e,this)}))),function(){return g.apply(this,arguments)})},{key:"setDefaultBatch",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l.a.state.global.currentProject.id,r="SpecialInspectBatchStorageKey-".concat(t);return u.a.setUserKey(r,e)}},{key:"getBatchList",value:(b=Object(n.a)(regeneratorRuntime.mark((function e(){var t,r,n,a=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.length>0&&void 0!==a[0]?a[0]:l.a.state.global.currentProject.id,r=a.length>1&&void 0!==a[1]?a[1]:s.a.getUser().user_id,e.next=4,o.a.getBatchList(t,r);case 4:return n=e.sent,e.abrupt("return",(n||[]).map((function(e){return f(f({},e),{},{template_extension:Object(p.l)(e.template_extension)||{}})})));case 6:case"end":return e.stop()}}),e)}))),function(){return b.apply(this,arguments)})},{key:"getFirstBatch",value:(h=Object(n.a)(regeneratorRuntime.mark((function e(){var t,r,n,a=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.length>0&&void 0!==a[0]?a[0]:l.a.state.global.currentProject.id,r=a.length>1&&void 0!==a[1]?a[1]:s.a.getUser().user_id,e.next=4,o.a.getFirstBatch(t,r);case 4:return(n=e.sent)&&(n.template_extension=Object(p.l)(n&&n.template_extension)||{}),e.abrupt("return",n);case 7:case"end":return e.stop()}}),e)}))),function(){return h.apply(this,arguments)})},{key:"getBatchById",value:(m=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,o.a.getBatchById(t);case 2:return(r=e.sent)&&(r.template_extension=Object(p.l)(r&&r.template_extension)||{}),e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)}))),function(e){return m.apply(this,arguments)})},{key:"getCurrentBatch",value:(a=Object(n.a)(regeneratorRuntime.mark((function e(){var t,r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.length>0&&void 0!==n[0]?n[0]:l.a.state.global.currentProject.id,e.next=3,this.getDefaultBatch(t);case 3:if(r=e.sent){e.next=8;break}return e.next=7,this.getFirstBatch(t);case 7:r=e.sent;case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e,this)}))),function(){return a.apply(this,arguments)})},{key:"getBatchContracts",value:function(e){return o.a.getBatchContracts(e)}},{key:"getBatchWillUploadNum",value:function(){return Promise.resolve()}},{key:"finishCheckBatch",value:function(){return Promise.resolve()}},{key:"getTemplateList",value:function(){return o.a.getTemplateList()}},{key:"getContractList",value:function(e){return o.a.getContractList(e)}},{key:"getBatchUsers",value:function(e){return d.a.getBatchUsers(e)}},{key:"getBatchTemplateMode",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=2;break}return e.abrupt("return");case 2:if(void 0===this.batchTemplateModeCache[t]){e.next=6;break}return e.abrupt("return",this.batchTemplateModeCache[t]);case 6:return e.next=8,o.a.getBatchTemplateMode(t);case 8:return r=e.sent,void 0!==(n=r&&r.mode)&&(this.batchTemplateModeCache[t]=n),e.abrupt("return",n);case 12:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"getSpecialInspectTemplateMode",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0===this.specialInspectTemplateModeCache[t]){e.next=4;break}return e.abrupt("return",this.specialInspectTemplateModeCache[t]);case 4:return e.next=6,o.a.getSpecialInspectBatchId(t);case 6:return r=e.sent,n=r&&r.batch_id,e.next=10,this.getBatchTemplateMode(n);case 10:return void 0!==(a=e.sent)&&(this.specialInspectTemplateModeCache[t]=a),e.abrupt("return",a);case 13:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})}]),e}(),b=r("937e"),g=new h,_=new b.a,y=(t.b=_,r("ae0f")),v={};function k(e){return v["mode-".concat(e)]||_}function x(e){return w.apply(this,arguments)}function w(){return(w=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g.getSpecialInspectTemplateMode(t);case 2:return r=e.sent,e.abrupt("return",k(r));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}y.keys().forEach((function(e){var t=y(e).default,r=e.replace(/(\.\/|\.js)/g,""),n=e.match(/mode\-(\d+)\.js$/),a=n&&n[1];v[r]=new t(a)}))},2939:function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .page-scroll[data-v-74102c05]{flex:1;overflow:auto;padding-bottom:100px;transform:translateZ(0)}.zjapp .sublist[data-v-74102c05]{padding-left:25px;padding-top:1px;background-color:#fff}.zjapp .sublist>.sublist[data-v-74102c05]{padding-left:10px;padding-top:0}",""])},"29f8":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("fc9f"),o=function(){function e(){Object(a.a)(this,e)}var t;return Object(i.a)(e,[{key:"getBatchTemplateMode",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="select t.mode from batch b \n      join special_inspect_template t on t.id = ifnull(b.template_id,'')\n      where b.id = '".concat(e,"'");return c.a.queryOne(t)}},{key:"getSpecialInspectBatchId",value:function(e){var t="select batch_id from special_inspect where id = '".concat(e,"'");return c.a.queryOne(t)}},{key:"getBatchSql",value:function(e,t){return"select b.*, \n      ifnull(temp.mode, '1') as mode,\n      u.name as created_by_name\n      from batch b\n      join special_inspect_template temp on temp.id = ifnull(b.template_id,'')\n\t\t\tjoin user u on u.id = b.created_by\n      where b.proj_id = '".concat(e,"' and ifnull(b.template_id,'') <> '' \n      and (b.is_closed is null or b.is_closed != 1) \n      and b.batch_type = '专项巡检' \n      and (\n        exists (select 1 from batch_user bu where bu.batch_id = b.id and bu.user_id = '").concat(t,"')\n        or exists (select 1 from batch_cc bc where bc.batch_id = b.id and bc.user_id = '").concat(t,"')\n        or exists (select value from global_storage where key= 'is-company-leader' and value = 1)\n      )\n      order by created_on desc")}},{key:"getBatchList",value:function(e,t){var r=this.getBatchSql(e,t);return c.a.query(r)}},{key:"getFirstBatch",value:function(e,t){var r=this.getBatchSql(e,t);return c.a.queryOne(r)}},{key:"getBatchById",value:function(e){var t="select b.*, up.name as proj_name, \n      sit.id as temp_id, sit.name as temp_name, sit.mode as temp_mode, sit.mode as mode, \n\t\t\tu.name as created_by_name, u.mobile as created_by_mobile, u.is_im_user as is_im_user \n      from batch b \n\t\t\tleft join user_project up on b.proj_id = up.id \n\t\t\tleft join special_inspect_template sit on b.template_id = sit.id\n\t\t\tleft join user u on u.id = b.created_by \n\t\t\twhere b.id = '".concat(e,"'");return c.a.queryOne(t)}},{key:"getBatchContracts",value:function(e){var t="select cc.id as id, cc.name as name, cc.code as code, sc.remark as remark, \n\t\t\t(select count(*) from checkquality_problem cp where cp.batch_id = sc.batch_id and cp.contract_id = cc.id ) as problemNum \n\t\t\tfrom special_inspect_batch_contracts sc \n\t\t\tleft join contractor_contracts cc on cc.id = sc.contract_id \n\t\t\twhere sc.batch_id = '".concat(e,"' \n      order by sc.sort");return c.a.query(t)}},{key:"getTemplateList",value:function(){return c.a.query("select * from special_inspect_template \n      where is_display != 0 \n      order by update_timestamp desc")}},{key:"getContractList",value:function(e){var t="select ccs.* from section s\n\t\t\tjoin section_contractor sc on sc.bidsection_id = s.id\n\t\t\tjoin contractor c on c.id = sc.contractor_id\n\t\t\tjoin contractor_contracts ccs on ccs.contractor_id = c.id\n\t\t\twhere s.proj_id = '".concat(e,"'\n\t\t\tgroup by ccs.id order by c.name_py, ccs.sort");return c.a.query(t)}},{key:"getIndexList",value:function(e){var t="select * from special_inspect\n\t\t  where batch_id = '".concat(e,"' \n      order by checkitem_code");return c.a.query(t)}},{key:"getSpecialInspectDescs",value:function(e){var t="select * from special_inspect_checkitem_desc where checkitem_id in \n    (select checkitem_id from special_inspect where batch_id = '".concat(e,"')\n    order by sort");return c.a.query(t)}},{key:"getSpecialInspectData",value:function(e){var t="select si.*, \n      u.name as checker_name, u.mobile as checker_mobile, u.is_im_user as check_is_im_user\n      from special_inspect si\n      left join user u on u.id = si.checker\n      where si.id = '".concat(e,"'");return c.a.queryOne(t)}},{key:"updateSpecialInspectData",value:function(e){return c.a.update("special_inspect",e,{id:e.id})}},{key:"getDraftProblemByBatchId",value:function(e){if(void 0===e)return $q.reject("批次id不能为空");Array.isArray(e)||(e=[e]);var t="'"+e.join("','")+"'",r='select a.id from checkquality_problem a \n\t\tjoin special_inspect si on a.biz_id = si.id \n\t\tjoin batch b on b.id = si.batch_id and b.status = "检查完毕" \n\t\twhere a.batch_id in ('.concat(t,") and a.status in ('草稿', '合格草稿', '不合格草稿')");return c.a.query(r)}},{key:"deleteProblemById",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:Array.isArray(t)||(t=[t]),r="'"+t.join("','")+"'",n=["delete from checkquality_problem_fpinfo where checkquality_problem_id in (".concat(r,")"),"delete from checkquality_problem_log where checkquality_problem_id in (".concat(r,")"),"delete from checkquality_cc where checkquality_problem_id in (".concat(r,")"),"delete from checkquality_repair where checkquality_problem_id in (".concat(r,")"),"delete from checkquality_reinspect where checkquality_problem_id in (".concat(r,")"),"delete from checkquality_problem where id in (".concat(r,")")],a=0;case 4:if(!(a<n.length)){e.next=10;break}return e.next=7,c.a.executeSql(n[a]);case 7:a++,e.next=4;break;case 10:case"end":return e.stop()}}),e)}))),function(e){return t.apply(this,arguments)})},{key:"filterIdsByBatchId",value:function(e,t,r){Array.isArray(t)||(t=[t]);var n="'"+t.join("','")+"'",a="select id from ".concat(e," where batch_id = '").concat(r,"' and id in (").concat(n,")");return c.a.query(a)}},{key:"getOldRouteQuery",value:function(e){var t="select si.batch_id, si.id as special_inspect_id, si.checkitem_id, \n      (select mode from special_inspect_template sit where sit.id = b.template_id) as mode,\n      (select id from checkquality_problem cp where cp.biz_id = '".concat(e,"' order by cp.download_time desc limit 1) as problem_id\n      from special_inspect si \n      join batch b on b.id = si.batch_id\n      where si.id = '").concat(e,"'");return c.a.queryOne(t)}},{key:"getRootSpecialInspectId",value:function(e){var t="SELECT id,checkitem_parent_id FROM special_inspect si\n      WHERE EXISTS (\n        SELECT 1 FROM special_inspect si2 \n        WHERE si2.id = '".concat(e,"' AND si.checkitem_id = si2.checkitem_parent_id AND si.batch_id = si2.batch_id\n      )");return c.a.queryOne(t)}},{key:"updateSpecialInspectAll",value:function(e,t){return c.a.update("special_inspect",t,e)}},{key:"selectSpecialInspect",value:function(e){return c.a.queryOne("select * from special_inspect where id = ?",[e])}},{key:"selectSpecialInspectPlaceCheckitem",value:function(e){return c.a.queryOne("select * from special_inspect_place_checkitem where id = ?",[e])}}]),e}()},"2bec":function(e,t,r){"use strict";r.r(t),t.default={mode:9,name:"得分率（打分制）",navMenu:[{name:"全部问题",code:"allProblem"}],tree:{style:"no-point",infos:[{text:"{{ level }}",color:"gray",show:{treeNodeIsEnd:!0,status:"检查完毕"}},{text:"{{ reward }}分",color:"gray",show:{treeNodeIsEnd:!0,status:"检查完毕"}},{text:"{{ status }}",type:"status",show:'treeNodeIsEnd && status !== "检查完毕" && status !== "未设置" && status !== "已甩项"'},{text:"{{ status }}",type:"status",show:'treeNodeIsEnd && status === "已甩项" && !editable'}],btns:[{name:"登记",show:{treeNodeIsEnd:!0,status:"未设置"},operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]},{name:"甩项",show:{treeNodeIsEnd:!0,status:"未设置"},operate:"change-status",value:"已甩项"},{name:"取消甩项",show:{treeNodeIsEnd:!0,status:"已甩项"},operate:"change-status",value:"未设置"}]},total:{title:"当前综合得分",calc:[{key:"rewardSum",name:"已检项的实得分之和",match:'treeNodeIsEnd && status === "检查完毕"',value:"reward || 0"},{key:"scoreSum",name:"已检项应得满分之和",match:'treeNodeIsEnd && status === "检查完毕"',value:"score || 0"},{key:"doneCount",name:"已测数量",match:'treeNodeIsEnd && status === "检查完毕"',value:"1"}],result:"scoreSum.value ? rewardSum.value / scoreSum.value : 0",hasResult:'batch.status === "检查完毕" || Boolean(doneCount.value)',resultType:"percent",formula:"综合得分 =（已检项的实得分之和 / 已检项应得满分之和）*100%",formulaCalc:"=({{rewardSum.value}}/{{scoreSum.value}})*100%={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"},finishBatchCheck:[{isFilterFirst:!1,statusTotalConfig:[{status:"未设置",key:"a"},{status:"草稿",key:"b"}],match:"a + b > 0",type:"notify",msg:"有未检查的检查项，请检查完之后重试"}]}},"2c76":function(e,t,r){"use strict";r("c070")},3822:function(e,t,r){var n=r("c599");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("4e2cdccf",n,!0,{sourceMap:!1,shadowMode:!1})},"391cb":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return p}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a044");r("e2a7");function d(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var p=function(e){Object(c.a)(o,e);var t,r=d(o);function o(){return Object(a.a)(this,o),r.apply(this,arguments)}return Object(i.a)(o,[{key:"getIndexList",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getIndexList(t);case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"batchCheck",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=t.some((function(e){return e.status===l.u}));if(!r)return{code:1,msg:"请至少完成一个评分表数据录入"}}}]),o}(u.a)},"3abd":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return w}));r("5ab2"),r("e10e"),r("2b45"),r("fc58"),r("cc57");var n=r("4c09"),a=r("28f8"),i=(r("163d"),r("6d57"),r("6a61"),r("2e91")),c=r("0e4d"),o=r("94ef"),s=r("76ff"),u=r("4b67"),l=r("d703"),d=r("48f4"),p=r("ed08"),m=r("937e"),f=r("966e"),h=r("7cb8"),b=r("3bd5"),g=r("1b7e"),_=r("162a"),y=r("a18c");function v(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function k(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?v(Object(r),!0).forEach((function(t){Object(a.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):v(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function x(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(l.a)(e);if(t){var a=Object(l.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(u.a)(this,r)}}var w=function(e){Object(s.a)(R,e);var t,r,a,u,l,m,v,w,j,O,I=x(R);function R(){return Object(c.a)(this,R),I.apply(this,arguments)}return Object(o.a)(R,[{key:"getIndexList",value:(O=Object(i.a)(regeneratorRuntime.mark((function e(t){var r,n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getBatchPlaces(t);case 2:return r=e.sent,e.next=5,this.getMode11PlacesEndItemTotal(t);case 5:return n=e.sent,a={},(n||[]).forEach((function(e){a[e.id]=e})),(r||[]).forEach((function(e){var t=a[e.id];e.count=t&&t.count||0,e.done=t&&t.done||0,e.unqualified=t&&t.unqualified||0,e.draft=t&&t.draft||0})),e.abrupt("return",r);case 10:case"end":return e.stop()}}),e,this)}))),function(e){return O.apply(this,arguments)})},{key:"getBatchPlaces",value:function(e){return this.Repositories.getBatchPlaces(e)}},{key:"getMode11PlacesEndItemTotal",value:function(e){return this.Repositories.getMode11EndItems(e).then((function(e){var t=[],r={};return(e||[]).forEach((function(e){r[e.place_id]||(r[e.place_id]={id:e.place_id,name:e.place_name,count:0,done:0,unqualified:0,draft:0},t.push(r[e.place_id])),r[e.place_id].count+=1,"合格"===e.status&&(r[e.place_id].done+=1),"不合格"===e.status&&(r[e.place_id].done+=1,r[e.place_id].unqualified+=1),"草稿"===e.status&&(r[e.place_id].draft+=1)})),t}))}},{key:"hasBatchCheckitem",value:function(e){return this.Repositories.hasBatchCheckitem(e).then((function(e){return!!e}))}},{key:"addBatchPlace",value:(j=Object(i.a)(regeneratorRuntime.mark((function e(t,r,n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&r&&n){e.next=2;break}return e.abrupt("return",new Error("addBatchPlace 缺少参数"));case 2:return e.next=4,this.hasBatchCheckitem(r);case 4:if(e.sent){e.next=7;break}return e.abrupt("return",Promise.reject("批次缺少检查项"));case 7:return a={id:p.a.uuid(),name:t.fullname||"",batch_id:r,proj_id:n,building_id:t.building&&t.building.id||"",unit:t.unit&&t.unit.id||"",floor:t.floor&&t.floor.id||"",room_id:t.room&&t.room.id||"",regist_date:p.a.now()},e.next=10,this.Repositories.addBatchPlace(a);case 10:return e.next=12,this.addBatchPlaceCheckitem(a.id,r,n);case 12:return e.next=14,d.default.addSyncGroup([["special_inspect_place",a.id],["special_inspect_place_checkitem",a.id]]);case 14:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return j.apply(this,arguments)})},{key:"updateBatchPlace",value:(w=Object(i.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.updateBatchPlace(t);case 2:return e.next=4,d.default.addSyncGroup([["special_inspect_place",t.id]]);case 4:case"end":return e.stop()}}),e,this)}))),function(e){return w.apply(this,arguments)})},{key:"deleteBatchPlace",value:(v=Object(i.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t||!t.download_time){e.next=8;break}if(g.a.getHasNetwork()){e.next=4;break}return e.abrupt("return",Promise.reject("当前网络无法同步数据"));case 4:return e.next=6,_.a.post("/special-inspect-place/delete",null,{id:t.id});case 6:e.next=9;break;case 8:return e.abrupt("return");case 9:return e.next=11,this.Repositories.deleteBatchPlace(t.id);case 11:return e.next=13,d.default.removeSyncGroup(t.id);case 13:case"end":return e.stop()}}),e,this)}))),function(e){return v.apply(this,arguments)})},{key:"addBatchPlaceCheckitem",value:(m=Object(i.a)(regeneratorRuntime.mark((function e(t,r,n){var a,i,c,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getBatchAllSpecialInspect(r);case 2:if((a=e.sent)&&a.length){e.next=5;break}return e.abrupt("return",new Error("批次没有专项巡检检查项"));case 5:i=0;case 6:if(!(i<a.length)){e.next=14;break}return c=a[i],o={id:p.a.uuid(),batch_id:r,proj_id:n,place_id:t,special_inspect_id:c.id,status:"未设置",deduction:"",remark:"",image_file:"",checker:"",check_time:""},e.next=11,this.Repositories.addBatchPlaceCheckitem(o);case 11:i++,e.next=6;break;case 14:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return m.apply(this,arguments)})},{key:"getTotalData",value:function(e,t,r){var n=r&&r.id;switch(r&&r.template_extension&&r.template_extension.mode11_passrate_mode||1){case 2:return this.getMode2TotalData(n);default:return this.getMode1TotalData(n)}}},{key:"getMode1TotalData",value:(l=Object(i.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,o,s,u,l,d,p,m=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getAllDoneData(t);case 2:for(i in r=e.sent,n={},(r||[]).forEach((function(e){n[e.special_inspect_id]||(n[e.special_inspect_id]={total:0,score:e.score,deduction:0,qualified:0}),n[e.special_inspect_id].total+=1,n[e.special_inspect_id].deduction+=Number(e.deduction)||0,"合格"===e.status&&(n[e.special_inspect_id].qualified+=1)})),a=[],n)a.push(k(k({},n[i]),{},{id:i}));return c=0,o=0,s=Boolean(a.length),l="",a.forEach((function(e){var t=e.qualified/e.total;c+=t*e.score-e.deduction,o+=e.score})),u=o?Object(f.a)(c/o,2):"",s&&(d=[],p=[],a.forEach((function(e){var t=Object(f.a)(e.qualified/e.total,2);d.push("(".concat(t,"*").concat(e.score,"-").concat(m.formatFloat(e.deduction),")")),p.push(e.score)})),l+="=(".concat(d.join("+"),")/(").concat(p.join("+"),")=").concat(u)),e.abrupt("return",{title:"当前综合得分",note:"",result:u,hasResult:s,formulaText:"当前综合得分=∑（已检项的合格率*满分值-倒扣分）/∑（已检项的满分值）"+l});case 15:case"end":return e.stop()}}),e,this)}))),function(e){return l.apply(this,arguments)})},{key:"getMode2TotalData",value:(u=Object(i.a)(regeneratorRuntime.mark((function e(t){var r,a,i,c,o,s,u,l,d,p,m,b,g,_=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getAllItems(t);case 2:return r=e.sent,e.next=5,this.Repositories.getAllDoneData(t);case 5:return a=e.sent,i={},(r||[]).forEach((function(e){try{var t=JSON.parse(e.checkitem_extension);e.isDeductionItem=!!t.is_deduction_item}catch(t){e.isDeductionItem=!1}i[e.checkitem_id]=e})),(a||[]).forEach((function(e){i[e.checkitem_id]&&(i[e.checkitem_id].problems||(i[e.checkitem_id].problems=[]),i[e.checkitem_id].problems.push(e))})),((c=Object(h.c)(r,{key:"checkitem_id",relationKey:"checkitem_parent_id"}))||[]).forEach((function(e){var t=_.getItemAllProblems(e,(function(e){return!e.isDeductionItem})),r=t.filter((function(e){return"合格"===e.status})),a=t.filter((function(e){return"不合格"===e.status})).reduce((function(e,t){return e+(t.deduction||0)}),0),i=_.getItemAllProblems(e,(function(e){return e.isDeductionItem})),c=i.reduce((function(e,t){return e+(t.deduction||0)}),0);e.allProblems=[].concat(Object(n.a)(t),Object(n.a)(i)),t&&t.length?(e.rejection=!1,e.passrate=r.length/t.length,e.deductionTotal=_.formatFloat(a),e.ducuctionItemTotal=_.formatFloat(c),e.result=e.score*e.passrate-e.deductionTotal-e.ducuctionItemTotal):e.rejection=!0})),o=(c||[]).filter((function(e){return!e.rejection})),s=0,u=0,l=Boolean(o.length),p="",m=c.some((function(e){return e.allProblems&&e.allProblems.length})),o.forEach((function(e){s+=e.result,u+=e.score})),d=l?Object(f.a)(s/u,2):m?"0.00%":"",l&&(b=[],g=[],o.forEach((function(e){var t=Object(f.a)(e.passrate,2);b.push("(".concat(t,"*").concat(e.score,"-").concat(e.deductionTotal,"-").concat(e.ducuctionItemTotal,")")),g.push(e.score)})),p+="=(".concat(b.join("+"),")/(").concat(g.join("+"),")=").concat(d)),e.abrupt("return",{title:"综合扣分",note:"",result:d,hasResult:l,formulaText:"综合扣分=Σ（已检查一级项合格率*已检一级项满分值-Σ已检一级项内末级项倒扣分-Σ已检一级项内带星末级项倒扣分）/Σ（已检查一级项满分）"+p});case 21:case"end":return e.stop()}}),e,this)}))),function(e){return u.apply(this,arguments)})},{key:"getItemAllProblems",value:function(e,t){var r=this,n=[];return e.children&&e.children.length?e.children.forEach((function(e){n=n.concat(r.getItemAllProblems(e,t))})):t?t(e)&&(n=e.problems||[]):n=e.problems||[],n}},{key:"getBatchPlace",value:function(e){return this.Repositories.getBatchPlace(e)}},{key:"getBatchPlaceCheckitems",value:function(e){return this.Repositories.getBatchPlaceCheckitems(e).then((function(e){if(!e||!e.length)return[];var t={};e.forEach((function(e){try{e.checkitem_extension=JSON.parse(e.checkitem_extension||"{}")}catch(t){e.checkitem_extension={}}e.rule=e.checkitem_extension.rating_rule||"",e.isDeductionItem=e.checkitem_extension.is_deduction_item||0,t[e.checkitem_id]=e})),e.forEach((function(e){var r=e&&e.checkitem_parent_id;r&&t[r]&&(t[r].children||(t[r].children=[]),t[r].children.push(e),t[r].unqualifiedNum||(t[r].unqualifiedNum=0),"不合格"===e.status&&(t[r].unqualifiedNum+=1))}));var r=e.filter((function(e){return!e.checkitem_parent_id}));return Object(h.n)(r),r}))}},{key:"getSpecialInspectData",value:(a=Object(i.a)(regeneratorRuntime.mark((function e(t,r){var n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getSpecialInspectData(t,r);case 2:if(n=e.sent){e.next=5;break}return e.abrupt("return",{});case 5:return a=Object(h.l)(n.checkitem_extension)||{},i=Object(h.l)(n.image_file)||[],e.abrupt("return",k(k({},n),{},{checkitem:{id:n.checkitem_id,name:n.checkitem_name,code:n.checkitem_code,parentId:n.checkitem_parent_id,fullname:n.checkitem_full_name,extension:a},images:i,checker:{id:n.checker,name:n.checker_name,mobile:n.checker_mobile,is_im_user:n.checker_is_im_user}}));case 8:case"end":return e.stop()}}),e,this)}))),function(e,t){return a.apply(this,arguments)})},{key:"updateSpecialInspectData",value:function(e){if(!e||!e.id)return Promise.reject("保存测区检查项数据，参数错误");var t={id:e.id};return void 0!==e.status&&(t.status=e.status||""),void 0!==e.checker&&(t.checker=e.checker||""),void 0!==e.check_time&&(t.check_time=e.check_time||""),void 0!==e.deduction&&(t.deduction=e.deduction),void 0!==e.images&&(t.image_file=Object(h.m)(e.images)||"[]"),void 0!==e.remark&&(t.remark=e.remark||""),"草稿"===t.status?this.saveDraftToMmkv(t,"special_inspect_place_checkitem"):this.removeDraftFromMmkv(t,"special_inspect_place_checkitem"),this.Repositories.updateSpecialInspectData(t)}},{key:"submitSpecialInspectData",value:(r=Object(i.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&t.id){e.next=2;break}return e.abrupt("return",new Error("提交测区检查项数据，参数错误"));case 2:return t.checker=b.a.getUser().user_id,t.check_time=p.a.now(),e.next=6,this.updateSpecialInspectData(t);case 6:return e.next=8,d.default.addSyncGroup([["special_inspect_place_checkitem",t.id,"id"]]);case 8:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"batchCheck",value:(t=Object(i.a)(regeneratorRuntime.mark((function e(t,r){var n,a,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getWaitUploadCount(t.id);case 2:if(!e.sent){e.next=5;break}return e.abrupt("return",{code:1,msg:"还有问题正在上传，请等待问题上传完毕"});case 5:if(n=r.filter((function(e){return 0===e.done})),a=r.filter((function(e){return 0!==e.draft})),!n.length){e.next=10;break}return i=n.map((function(e){return e.name})).join("、"),e.abrupt("return",{code:1,msg:"".concat(i,"未检查，请先处理再提交")});case 10:if(!a.length){e.next=13;break}return c=a.map((function(e){return e.name})).join("、"),e.abrupt("return",{code:1,msg:"".concat(c,"有草稿数据，请先处理再提交")});case 13:case"end":return e.stop()}}),e,this)}))),function(e,r){return t.apply(this,arguments)})},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batchId:e,placeId:r})}},{key:"gotoOldProblemList",value:function(e){y.a.push({path:"special-inspect-problem-pure-list",query:{batchId:e.batchId,placeId:e.placeId}})}}]),R}(m.a)},"3c16e":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return f}));r("2b45"),r("fc58"),r("6d57"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a044"),d=r("7bac"),p=r("7cb8");function m(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var f=function(e){Object(c.a)(o,e);var t,r=m(o);function o(){return Object(a.a)(this,o),r.apply(this,arguments)}return Object(i.a)(o,[{key:"getIndexList",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getIndexList(t);case 2:return r=e.sent,n=[],e.next=6,d.a.getUserKey(l.a);case 6:if(!e.sent){e.next=12;break}return e.next=10,this.getSpecialInspectDescs(t);case 10:(n=e.sent)&&n.length&&(a={},r.forEach((function(e){a[e.checkitem_id]=e})),n.forEach((function(e){var t=a[e.checkitem_id];t&&(t.siblings||(t.siblings=[]),t.siblings.push(e))})));case 12:return i=Object(p.c)(r,{key:"checkitem_id",relationKey:"checkitem_parent_id",setLevel:!0}),e.abrupt("return",{tree:i,list:r});case 14:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"onClickEndNode",value:function(e,t,r){e.status===l.y?this.routeToOldSetPass(e):e.problemNum&&this.routeToOldProblemList(e,r)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"changeSpecialInspectStatus",value:function(e,t){t===l.y&&this.routeToOldSetPass(e)}},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:this.mode})}}]),o}(u.a)},"3c64":function(e,t,r){"use strict";r("163d");var n={name:"ItemTextarea",components:{},props:{value:{type:String,default:""},placeholder:{type:String,default:""},maxlength:{type:Number,default:200},borderBottom:{type:Boolean,default:!0}},data:function(){return{textareaHeight:40,isLock:!1,blurTime:null}},computed:{lastLength:function(){var e=this.value&&this.value.length||0,t=this.maxlength-e;return t>0?t:0}},mounted:function(){var e=this;this.$nextTick((function(){e.textareaHeight=e.$refs.rule&&e.$refs.rule.offsetHeight||40}))},methods:{onfocus:function(){var e=(new Date).getTime();this.blurTime&&e-this.blurTime<300&&window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(this.$refs.input.blur(),window.cordova.plugins.Keyboard.close()),this.blurTime=null,this.$emit("focus")},onblur:function(){this.blurTime=(new Date).getTime(),this.$emit("blur")},setStatus:function(e){console.log(e),this.isLock=e},oninput:function(e){var t=this;setTimeout((function(){if(!t.isLock){var r=e.target.value;r.length>t.maxlength&&(r=r.substring(0,t.maxlength),t.$refs.input.value=r),t.$refs.rule.innerText=r,t.textareaHeight=t.$refs.rule&&t.$refs.rule.offsetHeight+20,t.$emit("input",r),t.$emit("change",r)}}),0)}}},a=(r("2c76"),r("17cc")),i=Object(a.a)(n,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"item-textarea",class:{"border-bottom":e.borderBottom}},[r("div",{staticClass:"item-textarea-content"},[r("textarea",{ref:"input",style:{height:e.textareaHeight+"px"},attrs:{placeholder:e.placeholder},domProps:{value:e.value},on:{focus:e.onfocus,blur:e.onblur,compositionstart:function(t){e.setStatus(!0)},compositionend:function(t){e.setStatus(!1)},input:e.oninput}}),r("div",{ref:"rule",staticClass:"rule"},[e._v("\n      "+e._s(e.value)+"\n    ")]),e.maxlength!==1/0?r("p",{staticClass:"counter"},[e._v("\n      "+e._s(e.lastLength)+"\n    ")]):e._e()])])}),[],!1,null,null,null);t.a=i.exports},"3cd8":function(e,t,r){var n=r("5c19");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("67c16200",n,!0,{sourceMap:!1,shadowMode:!1})},"3ddc":function(e,t,r){"use strict";r.d(t,"a",(function(){return l}));r("5ab2"),r("6d57"),r("e10e"),r("163d");var n=r("28f8"),a=(r("6a61"),r("2e91")),i=r("0e4d"),c=r("94ef"),o=r("a18c");function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){Object(n.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var l=function(){function e(){Object(i.a)(this,e)}var t,r,n,s,l;return Object(c.a)(e,[{key:"routeToOldProblemEdit",value:(l=Object(a.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,s,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.batch_id,i=n.special_inspect_id,c=n.checkitem_id,s=n.mode,u=n.root_id,o.a.push({path:"/special-inspect-problem-edit",query:{batchId:a,specialInspectId:i,checkItemId:c,mode:s,rootId:u}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return l.apply(this,arguments)})},{key:"routeToOldProblemView",value:(s=Object(a.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.special_inspect_id,i=n.checkitem_id,c=n.mode,s=n.problem_id,o.a.push({path:"/special-inspect-problem-detail",query:{specialInspectId:a,problem_id:s,checkItemId:i,mode:c}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return s.apply(this,arguments)})},{key:"routeToOldSetPass",value:(n=Object(a.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,s,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.batch_id,i=n.special_inspect_id,c=n.checkitem_id,s=n.mode,u=n.root_id,o.a.push({path:"/special-inspect-pass",query:{batchId:a,specialInspectId:i,checkItemId:c,mode:s,rootId:u}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return n.apply(this,arguments)})},{key:"routeToOldProblemList",value:(r=Object(a.a)(regeneratorRuntime.mark((function e(t,r){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t&&t.id,e.next=3,this.getOldRouteQuery(n);case 3:a=e.sent,this.gotoOldProblemList(u(u({},a),{},{editable:r}));case 5:case"end":return e.stop()}}),e,this)}))),function(e,t){return r.apply(this,arguments)})},{key:"gotoOldProblemList",value:function(e){o.a.push({path:"/special-inspect-problem-list",query:{batchId:e.batch_id||"",specialInspectId:e.special_inspect_id||"",checkItemId:e.checkitem_id||"",mode:e.mode||"",rootId:e.root_id||"",editable:Number(e.editable||"")}})}},{key:"getOldRouteQuery",value:(t=Object(a.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getOldRouteQuery(t);case 2:r=e.sent,a=t;case 4:if(n){e.next=11;break}return e.next=7,this.Repositories.getRootSpecialInspectId(a);case 7:(i=e.sent)&&i.id?i.checkitem_parent_id?a=i.id:n=i.id:n=a,e.next=4;break;case 11:return e.abrupt("return",u(u({},r),{},{root_id:n}));case 12:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})}]),e}()},"47a3":function(e,t,r){"use strict";r.r(t);var n,a,i,c,o,s,u,l,d,p=r("3e83"),m=(r("6d57"),r("e697"),r("6a61"),r("2e91")),f=(r("cc57"),r("f369")),h=r("774b"),b=r("07d2"),g=r("e68e"),_=r("3c64"),y=r("1059"),v=r("6948"),k=r("fa4f"),x=r("eb36"),w=r.n(x),j=r("6bf2"),O=r.n(j),I={name:"ProblemList",components:{ItemList:k.a},props:{edit:{type:Boolean,default:function(){return!1}},list:{type:Array,default:function(){return[]}}},data:function(){return{png_empty:w.a}},computed:{},methods:{createProblem:function(){this.$emit("add")},openProblemDetail:function(e){this.$emit("clickItem",e)},formatDate:function(e){return O()(e).format("YYYY-MM-DD HH:mm")}}},R=(r("0784"),r("17cc")),S=Object(R.a)(I,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"problem-wrap"},[r("div",{staticClass:"problem-wrap-title"},[r("div",{staticClass:"problem-title"},[e._v("问题列表("+e._s(e.list.length)+")")]),e.edit?r("div",{staticClass:"problem-btn",on:{click:e.createProblem}},[e._v("新增")]):e._e()]),r("div",{staticClass:"problem-list"},[e.list&&e.list.length?e._l(e.list,(function(t,n){return r("item-list",{key:n,attrs:{"is-unread":t.unread,"is-timeout":t.is_timeout,"is-urgent":"紧急"==t.emergency_degree||"特急"==t.emergency_degree,"is-return":t.sent_back_times>0,img:t.thumbnail,title:t.item_full_name,detail:t.desc||""+t.remark||"",footer:e.formatDate(t.created_on)+" "+(t.place||""),status:t.status,"status-text":t.status},on:{click:function(r){e.openProblemDetail(t)}}})})):[r("div",{staticClass:"empty"},[r("img",{attrs:{src:e.png_empty,alt:""}}),r("span",[e._v("暂无新增问题")])])]],2)])}),[],!1,null,"a4bd2078",null).exports,D=r("e2a7"),P=r("3bd5"),C=r("2757"),E=(r("7bac"),r("6f9e")),N=(r("7cb8"),r("e88b")),T=r("a044"),B=r("09ae"),L={name:"SpecialInspectDetailEdit",components:{CheckGuide:f.a,Scroller:h.a,Item:b.a,ItemImgList:g.a,ItemTextarea:_.a,RadioBox:y.a,NumberInput:v.a,ProblemList:S},data:function(){return{isLoading:!0,specialInspectId:"",placeId:"",btnIndex:"",resultOptions:[],detailData:{},batchData:{},problemList:[],editable:!1,appFormData:[],problemStatus:!0,problemService:null}},computed:{title:function(){return this.detailData&&this.detailData.checkitem&&this.detailData.checkitem.name||""},checkitemRule:function(){var e=this.detailData&&this.detailData.checkitem&&this.detailData.checkitem.extension||{};return e.rating_rule&&e.rating_rule.value||""}},created:function(){var e=this;Object(E.e)((function(){e.init()}))},activated:function(){this.specialInspectId=this.$route.query.specialInspectId,this.placeId=this.$route.query.placeId,this.btnIndex=this.$route.query.btn,this.problemService=new N.a(this.specialInspectId,this.placeId),this.$router.isBack||(this.isLoading=!0),this.init()},methods:{init:(d=Object(m.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.isLoading=!0,e.prev=1,e.next=4,Object(C.d)(this.specialInspectId);case 4:return n=e.sent,e.next=7,this.getDetailData();case 7:return e.next=9,this.getBatchData(this.detailData.batch_id);case 9:return e.next=11,this.getProblemList();case 11:return e.next=13,Object(B.a)(this.batchData.mode,this.btnIndex,"edit");case 13:this.appFormData=e.sent,this.setDefaultFormValue(this.appFormData),e.next=21;break;case 17:e.prev=17,e.t0=e.catch(1),$log.error(e.t0),this.detailData={};case 21:return e.prev=21,this.isLoading=!1,e.finish(21);case 24:case"end":return e.stop()}}),e,this,[[1,17,21,24]])}))),function(){return d.apply(this,arguments)}),afterChangeHook:function(e){this.saveDraft()},getDetailData:(l=Object(m.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.specialInspectId){e.next=2;break}return e.abrupt("return",new Error("缺少参数"));case 2:return e.next=4,n.getDetail(this.specialInspectId,this.placeId);case 4:this.detailData=e.sent;case 5:case"end":return e.stop()}}),e,this)}))),function(){return l.apply(this,arguments)}),getBatchData:(u=Object(m.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=2;break}return e.abrupt("return",new Error("缺少批次id"));case 2:return e.next=4,C.a.getBatchById(t);case 4:return this.batchData=e.sent,r=this.batchData.root_id||this.batchData.parent_id||this.batchData.id,e.next=8,C.a.getBatchUsers(r);case 8:n=e.sent,a=P.a.getUser(),i=(n||[]).some((function(e){return e.user_id===a.user_id})),this.editable="检查完毕"!==this.batchData.status&&i;case 12:case"end":return e.stop()}}),e,this)}))),function(e){return u.apply(this,arguments)}),getProblemList:(s=Object(m.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.problemService.getProblemList(this.specialInspectId,this.placeId);case 2:this.problemList=e.sent;case 3:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)}),setDefaultFormValue:function(e){var t=this.detailData.statusShow,r=this.appFormData.find((function(e){return"status"===e.name})),n=t===T.v?r&&r.value:t,a={};e.forEach((function(e){a[e.name]=e})),a.title&&(a.title.value=this.title),a.rule&&(a.rule.value=this.checkitemRule),a.status&&(a.status.value=n),a.deduction&&(a.deduction.value=this.detailData.deduction),a.images&&(a.images.value=this.detailData.images),a.remark&&(a.remark.value=this.detailData.remark)},getFormValue:function(){var e=this.$refs.form.getFormValue(),t="object"===Object(p.a)(e.status)?e.status[0]&&e.status[0].key:e.status;return{id:this.detailData.id,status:this.detailData.status,statusShow:t,deduction:e.deduction,images:e.images,remark:e.remark}},checkForm:function(){return this.$refs.form.checkForm()},saveDraft:(o=Object(m.a)(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((t=this.getFormValue()).status===T.v||t.status===T.w){e.next=3;break}return e.abrupt("return");case 3:return t.status=T.w,e.next=6,n.saveDetail(t,this.batchData.mode);case 6:this.detailData.status=T.w;case 7:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)}),deleteDraft:(c=Object(m.a)(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t={id:this.detailData.id,status:T.v,deduction:"",images:[],remark:""},e.next=3,n.saveDetail(t,this.batchData.mode);case 3:this.$router.go(-1);case 4:case"end":return e.stop()}}),e,this)}))),function(){return c.apply(this,arguments)}),saveDraftAndBack:(i=Object(m.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.saveDraft();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),$log.error(e.t0);case 8:return e.next=10,D.a.alert("保存成功",500);case 10:this.$router.go(-1);case 11:case"end":return e.stop()}}),e,this,[[0,5]])}))),function(){return i.apply(this,arguments)}),submit:(a=Object(m.a)(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.checkForm();case 2:if(e.sent){e.next=5;break}return e.abrupt("return");case 5:return(t=this.getFormValue()).status=t.statusShow,t.status===T.y&&(t.deduction=""),D.a.loading("正在提交"),e.prev=9,e.next=12,n.submitDetail(t,this.batchData.mode);case 12:D.a.hideLoading(),D.a.alert("提交成功"),this.$router.go(-1),e.next=22;break;case 17:e.prev=17,e.t0=e.catch(9),$log.error(e.t0),D.a.hideLoading(),D.a.alert("提交失败");case 22:case"end":return e.stop()}}),e,this,[[9,17]])}))),function(){return a.apply(this,arguments)}),createProblem:function(){this.$router.push({name:T.p,query:{specialInspectId:this.specialInspectId,placeId:this.placeId}})},openProblemDetail:function(e){var t;t=e.status===T.w?T.p:T.r,this.$router.push({name:t,query:{problemId:e.id}})}}},q=(r("d073"),Object(R.a)(L,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page-content",{attrs:{title:"检查项登记","show-go-root":!0}},[e.isLoading?e._e():r("check-guide",{directives:[{name:"track",rawName:"v-track",value:"专项巡检-检查指引",expression:"'专项巡检-检查指引'"}],attrs:{slot:"header-bar-right","item-id":e.specialInspectId,module:"special-inspect"},slot:"header-bar-right"}),r("scroller",[!e.isLoading&&e.detailData&&e.detailData.id?r("app-mform",{ref:"form",attrs:{"form-data":e.appFormData,hooks:{afterChangeHook:e.afterChangeHook}}}):e._e(),e.problemStatus?r("problem-list",{attrs:{list:e.problemList,edit:e.editable},on:{add:e.createProblem,clickItem:e.openProblemDetail}}):e._e(),!e.isLoading&&e.detailData&&e.detailData.id?["草稿"===e.detailData.status?r("app-button-group",[r("app-button",{attrs:{type:"text"},on:{click:e.deleteDraft}},[e._v("\n          删除此草稿\n        ")])],1):e._e()]:e._e()],2),!e.isLoading&&e.detailData&&e.detailData.id?["合格"===e.detailData.status||"不合格"===e.detailData.status?r("app-button-group",{attrs:{"fixed-bottom":""}},[r("app-button",{on:{click:e.submit}},[e._v("\n        提交\n      ")])],1):r("app-button-group",{attrs:{"fixed-bottom":"",seamless:""}},[r("app-button",{staticStyle:{width:"50%"},attrs:{plain:""},on:{click:e.saveDraftAndBack}},[e._v("\n        暂存\n      ")]),r("app-button",{on:{click:e.submit}},[e._v("\n        提交\n      ")])],1)]:e._e(),r("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.detailData||!e.detailData.id,"empty-text":"获取数据失败"}})],2)}),[],!1,null,"174bb60e",null));t.default=q.exports},"4aef":function(e,t,r){"use strict";var n=r("dd16").a,a=r("17cc"),i=Object(a.a)(n,(function(){var e=this.$createElement;return(this._self._c||e)("span",{class:this.classSet[this.status]},[this._v(this._s(this.text||this.status))])}),[],!1,null,null,null);t.a=i.exports},"4b2e":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return d}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("937e"),u=r("a044");function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var d=function(e){Object(i.a)(r,e);var t=l(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"onClickEndNode",value:function(e,t,r){e.status===u.y?this.routeToOldSetPass(e):e.problemNum&&this.routeToOldProblemList(e,r)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"changeSpecialInspectStatus",value:function(e,t){t===u.y&&this.routeToOldSetPass(e)}},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:this.mode})}}]),r}(s.a)},"4ebf":function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .problem-wrap-title[data-v-a4bd2078]{display:flex;justify-content:space-between;align-items:center;font-size:14px;color:#666;padding-left:15px;height:43px}.zjapp .problem-wrap-title .problem-btn[data-v-a4bd2078]{padding:13px 15px;color:#4275e8}.zjapp .problem-wrap .problem-list[data-v-a4bd2078]{background:#fff}.zjapp .problem-wrap .problem-list .problem-item[data-v-a4bd2078]{display:flex;border-bottom:1px solid #ececec;padding:12px 15px}.zjapp .problem-wrap .problem-list .problem-item img[data-v-a4bd2078]{width:70px;height:70px;background:coral;margin-right:10px}.zjapp .problem-wrap .problem-list .problem-item .content[data-v-a4bd2078]{margin-right:10px;flex:1;display:flex;flex-direction:column;justify-content:space-between}.zjapp .problem-wrap .problem-list .problem-item .content .desc[data-v-a4bd2078]{font-size:16px;color:#333;line-height:22px}.zjapp .problem-wrap .problem-list .problem-item .content .date[data-v-a4bd2078]{color:#999;line-height:20px}.zjapp .problem-wrap .problem-list .problem-item .status[data-v-a4bd2078]{display:flex;align-items:center;color:#0bc666}.zjapp .problem-wrap .problem-list .empty[data-v-a4bd2078]{padding:40px 0;display:flex;flex-direction:column;align-items:center;color:#999}.zjapp .problem-wrap .problem-list .empty img[data-v-a4bd2078]{width:150px;margin-bottom:24px}",""])},"515e":function(e,t,r){"use strict";var n=r("329b"),a=r("f1e4").a,i=(r("fe9e"),r("17cc")),c=Object(i.a)(a,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("transition",{attrs:{name:"slide-right"}},[e.show?r("page-content",{class:{"content-not-empty":e.content.length},attrs:{mode:"dialog",title:"检查指引","on-close":e.closePopup}},[e.isLoading?e._e():r("div",{staticClass:"check-guide-detail-hd border-bottom"},[r("h2",{staticClass:"check-guide-detail-title pb10"},[e._v(e._s(e.title))])]),!e.isLoading&&e.content.length?r("div",{staticClass:"check-guide-detail-content"},e._l(e.content,(function(t,n){return r("p",{key:n},[t.isImg&&t.src?r("img",{class:{"img-not-ready":!t.ready,error:"rejected"===t.status},attrs:{src:e.getThumbnail(t)},on:{error:function(r){e.imgError(t,n)},click:function(r){e.imgClick(t)}}}):e._e(),t.isImg?e._e():r("span",[e._v("\n          "+e._s(t.val)+"\n        ")])])}))):e._e(),r("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.content.length,"empty-text":"PC端未设置检查指引"}})],1):e._e()],1)}),[],!1,null,"43042f0d",null).exports,o=!1;o||(o=new(n.default.extend(c))({el:document.createElement("div")}),document.body.appendChild(o.$el));t.a=o},"55dc":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name,\n\t\t(select count(*) from checkquality_problem cp where cp.biz_id = si.id ) as problemNum,\n\t\t(select sum(deduction) from checkquality_problem cp1 \n      where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' and cp1.status != '已关闭') as deduction \n\t\tfrom special_inspect si \n\t\twhere si.batch_id = '".concat(e,"' order by si.checkitem_code");return s.a.query(t)}}]),r}(r("29f8").a)},"574c":function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .item-textarea{background-color:#fff;padding:5px 15px}.zjapp .item-textarea-content{position:relative}.zjapp .item-textarea .rule,.zjapp .item-textarea textarea{width:100%;min-height:40px;line-height:20px;font-size:16px;padding:0;border:none}.zjapp .item-textarea .rule{position:absolute;top:0;left:0;visibility:hidden;word-break:break-all}.zjapp .item-textarea .counter{text-align:right;margin:0 0 -5px 0;height:15px;line-height:15px;color:#b2b2b2;font-size:12px}",""])},"5b5e":function(e,t,r){"use strict";(function(e){r("9e76"),r("163d"),r("e697");var n,a=r("fd50"),i=r("3bd5"),c=r("ed08"),o=r("4ad6"),s=r("3122"),u=r("3516"),l=r("37d5"),d=r("f2d3"),m=r("48f4"),f=r("6bf2"),h=r.n(f),b=r("4360"),g=r("4921"),_=r("334f"),y=r("b725"),v=r("6b81"),k=r("2f02"),x=r("7364"),w=r("59f8"),j=r("c745"),O=r("0136"),I=function(t,r){var n=i.a.getUser();return _.a.getProblemCCAllColumn(t).then((function(a){if(e.some(a,(function(e){return e.cc===n.user_id&&e.type===r})))return _.a.updateProblemReadingTime(t);var i={id:n.user_id,name:n.user_name,type:r,reading_time:c.a.getNowDate()};return _.a.appendCC(t,i).then((function(){return _.a.updateProblemReadingTime(t)}))}))},R=function(e){var t=e.status;return"已关闭"===e.status&&(t="非正常关闭"),a.a.resolve({status_text:t})};n={getCheckProblemDraftList:function(e){return g.a.getCheckProblemDraftList(e).catch((function(e){return $log.error(e),a.a.reject(e)}))},getCheckProblemList:function(t){var r=i.a.getUser().user_id;return g.a.getCheckProblemList(t,r).then((function(i){return e.map(i,(function(e){n.getProblemLocalStatus({status:e.status}).then((function(t){e.status_text=t.status_text}))})),g.a.getCheckProblemCount(t,r).then((function(e){return a.a.resolve({data:i,total:e.count})}))})).catch((function(e){return $log.error(e),a.a.reject(e)}))},getCheckProblemInfo:function(t){return t?a.a.all([g.a.getCheckProblem(t),y.a.getRepair(t),v.a.getMutliReinspect(t),_.a.getCC(t),_.a.getProblemCCAllColumn(t),v.a.getReinspectByList(t)]).then((function(t){var r=t[0],n=t[5],i=t[1];i&&(r.repair_set=i,r.has_read=i.has_read);var c=t[2];e.isEmpty(c)?r.reinspect_set=[]:r.reinspect_set=c;var o=t[3];o&&o.length>0&&(r.cc_set_id_array=e.map(o,(function(e){return{id:e.user_id}})),r.cc_set_name_array=e.map(o,(function(e){return{name:e.user_name}})),r.cc_set_array=e.map(o,(function(e){return{id:e.user_id,name:e.user_name,mobile:e.mobile,is_im_user:e.is_im_user}})));var s=t[4];return s&&s.length>0&&(r.cc_set_all_id_array=e.map(s,(function(e){return{id:e.cc}}))),r.regist_by||r.sent_back_by||r.repair_by||r.reinspect_by?l.default.getAllProjectUsers(r.proj_id).then((function(t){if(r.regist_by){var a=e.find(t,(function(e){return e.user_id===r.regist_by}));a&&(r.regist=a)}if(r.sent_back_by){var i=e.find(t,(function(e){return e.user_id===r.sent_back_by}));i&&(r.sent_back={id:i.user_id,name:i.user_name,mobile:i.mobile,is_im_user:i.is_im_user})}if(r.repair_by){var c=e.find(t,(function(e){return e.user_id===r.repair_by}));c&&(r.repair=c)}return e.isEmpty(n)||(r.reinspectBy=e.map(n,(function(r){var n=e.find(t,(function(e){return e.user_id===r.reinspect}));return n?{id:n.user_id,name:n.user_name,mobile:n.mobile,is_im_user:n.is_im_user,reinspect_date:r.reinspect_date,reinspect_remark:r.reinspect_remark,reinspect_image_file:JSON.parse(r.reinspect_image_file||"[]"),reinspectById:r.id}:{id:r.reinspect,name:"该用户已被删除",mobile:"",is_im_user:null,reinspect_date:r.reinspect_date,reinspect_remark:"",reinspect_image_file:[],reinspectById:r.id}})),r.reinspectBy=e.filter(r.reinspectBy,(function(e){return!!e})),r.reinspect=e.filter(r.reinspectBy,(function(e){return!!e.reinspect_date}))),r.regist=r.regist||{},r.sent_back=r.sent_back||{},r.repair=r.repair||{},r.reinspect=r.reinspect||[],r})):(r.regist={},r.sent_back={},r.repair={},r.reinspect=[],a.a.resolve(r))})).catch((function(e){$log.log(e)})):a.a.resolve({})},submit:function(t,r,n){if(!1===n)return function(e,t){var r=i.a.getUser();return e.repair_deadline="",e.regist_by=r.user_id,e.regist_date=c.a.getNowDate(),e.created_by=r.user_id,e.created_on=c.a.getNowDate(),e.image_file=JSON.stringify(e.image_file),e.drawing_file&&(e.drawing_file=JSON.stringify(e.drawing_file)),$log.log("专项巡检--\x3e不通知整改",e),g.a.submit(e).then((function(){return x.a.saveProblemStatusLog(e.proj_id,"",e.batch_id,e.id,"已提交","","",e.image_file)})).then((function(){return I(e.id,"登记人")})).then((function(t){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).then((function(){if("special-inspect-problem"!==t)return O.a.saveTodo({biz_id:e.id,proj_id:e.proj_id,module_code:t||"",type:2})})).catch((function(e){return $log.error(e),a.a.reject(e)}))}(t,r);if("待提交"!==t.status&&"草稿"!==t.status&&"合格草稿"!==t.status&&"不合格草稿"!==t.status)return a.a.reject("问题单状态异常");if(!t.checkItem.id)return a.a.reject("请先选择检查项");if(!t.repair_set||!t.repair_set.id)return a.a.reject("请选择问题的整改人");if(e.isEmpty(t.reinspect_set))return a.a.reject("请选择问题的复验人");var o=i.a.getUser();t.status="待整改";var s=new Date;return s.setDate(s.getDate()+Number(t.deadline)),t.repair_deadline=h()(s).format("YYYY-MM-DD"),"special-inspect-problem"===r&&t.regist_by&&t.regist_date&&t.created_by&&t.created_on||(t.regist_by=o.user_id,t.regist_date=c.a.getNowDate(),t.created_by=o.user_id,t.created_on=c.a.getNowDate()),t.image_file=JSON.stringify(t.image_file),t.drawing_file&&(t.drawing_file=JSON.stringify(t.drawing_file)),$log.log("现场检查--\x3e提交问题",t),g.a.submit(t).then((function(){return x.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已提交","","",t.image_file)})).then((function(){return I(t.id,"登记人")})).then((function(){if("special-inspect-problem"!==r){var e=t.created_by===t.repair_set.id?1:2;return O.a.insertTodoData(t.created_by,t.id,r,e,0)}})).then((function(){return v.a.getReinspectByList(t.id)})).then((function(r){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_repair",t.id],["checkquality_reinspect",t.id],["checkquality_reinspect_by",e.map(r,"id")],["checkquality_cc",t.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},save:function(e){if("待提交"!==e.status&&"草稿"!==e.status&&"合格草稿"!==e.status&&"不合格草稿"!==e.status)return a.a.reject("问题单状态异常。");if(!/^\+?[0-9]*$/.test(e.deadline))return a.a.reject("整改期限必须是正整数");var t={id:e.id,remark:e.remark,image_file:e.image_file,batch_id:e.batch_id,batch_type:e.batch_type,bidsection_id:e.bidsection_id||"",proj_id:e.proj_id,created_by:e.created_by,created_on:c.a.getNowDate(),status:e.status,room_id:e.room_id||"",building_id:e.building_id||"",unit:e.unit||"",floor:e.floor||"",biz_id:e.biz_id||"",biz_children_id:e.biz_children_id||"",deduction:void 0===e.deduction?"":e.deduction,redline_deduction:4===e.mode||8===e.mode?e.redline_deduction:0,contract_id:e.contract&&e.contract.id?e.contract.id:""};return e.repair_requirements&&(t.repair_requirements=e.repair_requirements||""),e.checkItem&&e.checkItem.id&&(t.item_id=e.checkItem.id),e.place&&e.place.full_name&&(t.place=e.place.full_name),e.contractor&&e.contractor.id&&(t.contractor_id=e.contractor.id),e.description&&e.description.id?t.desc_id=e.description.id:t.desc_id="",t.emergency_degree=e.level,e.deadline&&(t.deadline=e.deadline),e.place_point&&(t.problem_values=JSON.stringify(e.place_point)),t.image_file=JSON.stringify(e.image_file),e.drawing_file&&(t.drawing_file=JSON.stringify(e.drawing_file)),(e.process_mode||null===e.process_mode)&&(t.process_mode=e.process_mode),8===e.mode&&(t.deduction_level=e.deduction_level),e.id?g.a.update(t,e.cc_set,e.repair_set,e.reinspect_set).then((function(){return a.a.resolve(e.id)})).catch((function(e){return $log.error(e),a.a.reject(e)})):(t.id=c.a.uuid(),g.a.insert(t).then((function(){return g.a.update(t,e.cc_set,e.repair_set,e.reinspect_set)})).then((function(){return a.a.resolve(t.id)})).catch((function(e){return $log.error(e),a.a.reject(e)})))},delete:function(e){return g.a.getCheckProblem(e).then((function(t){return"待提交"===t.status||"草稿"===t.status||"合格草稿"===t.status||"不合格草稿"===t.status?g.a.delete(e).catch((function(e){return $log.error(e),a.a.reject(e)})):($log.log("问题单状态异常："+e),a.a.reject("问题单状态异常"))}))},repair:function(t,r){if("待整改"!==t.status)return a.a.reject("问题单状态异常");var n=i.a.getUser();t.status="待复验",t.repair_by=n.user_id,t.repair_date=c.a.getNowDate();var o=JSON.stringify(t.repair_image_file);return g.a.getCheckProblem(t.id).then((function(n){if(!n||"待整改"===n.status)return $log.log("现场检查--\x3e完成整改",t),g.a.repairProblem(t.id,t.status,t.repair_by,t.repair_remark,t.repair_date,o).then((function(){return x.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已整改","",t.repair_remark,o)})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==r){var n=2;e.filter(t.reinspect_set,{user_id:t.repair_by}).length&&(n=1);var a=O.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return O.a.insertTodoData(t.repair_by,t.id,"check",n,a)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_cc",t.id]])}));$log.log("提交整改时数据已变为",n)})).catch((function(e){return $log.error(e),a.a.reject(e)}))},reinspectPass:function(t,r){if("待复验"!==t.status)return a.a.reject("问题单状态异常");t.currentReinspectBy=t.currentReinspectBy||{};var n=i.a.getUser(),o="",s=e.isEmpty(t.currentReinspectBy.reinspect_image_file)?"":JSON.stringify(t.currentReinspectBy.reinspect_image_file);return g.a.getCheckProblem(t.id).then((function(i){if(!i||"待复验"===i.status)return v.a.reinspectPass(t.id,n.user_id,c.a.now(),s,t.currentReinspectBy.reinspect_remark||"").then((function(){return v.a.getReinspectByList(t.id).then((function(r){var i=e.every(r,(function(e){return!!e.reinspect_date})),s=e.find(r,{reinspect:n.user_id});return s?(o=s.id,i?(t.status="已通过",t.respect_by=n.user_id,t.reinspect_completed_date=c.a.getNowDate(),g.a.reinspectProblemPass(t.id,t.status,t.reinspect_completed_date,t.respect_by).then((function(){return x.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已复验","","","")}))):void 0):a.a.reject("问题单复验人异常")}))})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==r){var e=O.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return O.a.insertTodoData(n.user_id,t.id,r||"check",2,e)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_reinspect_by",o],["checkquality_cc",t.id]])}))})).catch((function(e){return $log.error(e),a.a.reject(e)}))},reinspectReject:function(t,r){var n=[["checkquality_problem",t.id],["checkquality_cc",t.id]];if("待复验"!==t.status)return a.a.reject("问题单状态异常");if(!t.sent_back_remark)return a.a.reject("请填写退回原因");var o=i.a.getUser();t.sent_back_times?t.sent_back_times++:t.sent_back_times=1,t.status="待整改",t.sent_back_date=c.a.getNowDate(),t.sent_back_by=o.user_id;var s=JSON.stringify(t.sent_back_image_file);return $log.log("现场检查--\x3e复验退回",t),g.a.reinspectProblemReject(t.id,t.status,t.sent_back_date,t.sent_back_remark,s,t.sent_back_by,t.sent_back_times).then((function(){return x.a.saveProblemStatusLog(t.proj_id,t.bidsection_id,t.batch_id,t.id,"已退回",t.sent_back_remark,"",s)})).then((function(){return v.a.clearReinspectByData(t.id)})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==r){var e=2;t.repair_set.id&&t.repair_set.id===o.user_id&&(e=1);var n=O.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return O.a.insertTodoData(o.user_id,t.id,"check",e,n)}})).then((function(){return v.a.getReinspectByList(t.id).then((function(t){n.push(["checkquality_reinspect_by",e.map(t,"id")])}))})).then((function(){if(1===t.has_read)return y.a.update({has_read:0},{checkquality_problem_id:t.id}).then((function(){n.push(["checkquality_repair",t.id])}))})).then((function(){return m.default.addSyncGroup(n)})).catch((function(e){return $log.error(e),a.a.reject(e)}))},close:function(e,t){if("待整改"!==e.status)return a.a.reject("问题单状态异常");if(!e.close_reason)return a.a.reject("请填写关闭原因");var r=i.a.getUser();return e.close_date=c.a.getNowDate(),e.status="已关闭",$log.log("现场检查--\x3e非正常关闭",e),g.a.closeProblem(e.id,e.status,e.close_date,e.close_reason).then((function(){return x.a.saveProblemStatusLog(e.proj_id,e.bidsection_id,e.batch_id,e.id,"已关闭",e.close_reason,"","")})).then((function(){return I(e.id,"操作人")})).then((function(){if("special-inspect-problem"!==t){var n=O.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"check");return O.a.insertTodoData(r.user_id,e.id,"check",2,n)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeRepair:function(e,t,r){if(!e.repair_set||!e.repair_set.id)return a.a.reject("请指定一个整改人");var n=i.a.getUser();return $log.log("现场检查--\x3e修改整改人",e),g.a.updateProblemModifiedBy(e.id).then((function(){if(t)return g.a.updateProblemContractor(e.id,e.contractor.id)})).then((function(){if(t){var r=e.contractor&&e.contractor.id||"";return g.a.updateProblemContractor(e.id,r)}})).then((function(){return y.a.changeProblemRepairer(e)})).then((function(){return k.a.saveProblemFpInfo(e.proj_id,e.bidsection_id,e.batch_id,e.id,e.repair_set.id,e.repair_set_old.id,"分配整改人")})).then((function(){return I(e.id,"操作人")})).then((function(){if("special-inspect-problem"!==r){var t=2;e.repair_set.id&&e.repair_set.id===n.user_id&&(t=1);var a=O.a.getTodoSort(e.status,e.repair_deadline,e.close_date,e.repair_date,e.sent_back_times,e.emergency_degree,"check");return O.a.insertTodoData(n.user_id,e.id,"check",t,a)}})).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_repair",e.id],["checkquality_cc",e.id],["checkquality_problem_fpinfo",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeReinspect:function(t,r){if(e.isEmpty(t.reinspect_set))return a.a.reject("请指定一个复验人");var n=i.a.getUser();return $log.log("现场检查--\x3e修改复验人",t),g.a.updateProblemModifiedBy(t.id).then((function(){return v.a.changeProblemReinspect(t.id,t.reinspect_set,!0)})).then((function(){var r=e.map(t.reinspect_set,(function(e){return e.id})).join(","),n=e.map(t.reinspect_set_old,(function(e){return e.id})).join(",");return k.a.saveProblemFpInfo(t.proj_id,t.bidsection_id,t.batch_id,t.id,r,n,"分配复验人")})).then((function(){return I(t.id,"操作人")})).then((function(){if("special-inspect-problem"!==r){var a=2;e.filter(t.reinspect_set,{user_id:n.user_id}).length&&"待复验"===t.status&&(a=1);var i=O.a.getTodoSort(t.status,t.repair_deadline,t.close_date,t.repair_date,t.sent_back_times,t.emergency_degree,"check");return O.a.insertTodoData(n.user_id,t.id,"check",a,i)}})).then((function(){return v.a.getReinspectByList(t.id)})).then((function(r){return m.default.addSyncGroup([["checkquality_problem",t.id],["checkquality_reinspect",t.id],["checkquality_reinspect_by",e.map(r,"id")],["checkquality_cc",t.id],["checkquality_problem_fpinfo",t.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeCC:function(e){return $log.log("现场检查--\x3e修改抄送人",e),g.a.updateProblemModifiedBy(e.id).then((function(){return _.a.saveProblemCC(e.id,e.cc_set)})).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id],["checkquality_cc",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},changeContractor:function(e){return e.contractor&&e.contractor.id?($log.log("现场检查--\x3e修改责任单位",e),g.a.updateProblemContractor(e.id,e.contractor.id).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))):a.a.reject("请指定责任单位")},changeRepairDeadline:function(e){if(!/^(\d+)-(\d{1,2})-(\d{1,2})$/.test(e.repair_deadline))return a.a.reject("整改期限需要一个日期格式的值");var t=h()(e.repair_deadline).format("YYYY-MM-DD"),r=h()().format("YYYY-MM-DD");return e.is_timeout=t<r,$log.log("现场检查--\x3e修改整改期限",e),g.a.updateProblemRepairDeadline(e.id,e.repair_deadline).then((function(){return m.default.addSyncGroup([["checkquality_problem",e.id]])})).catch((function(e){return $log.error(e),a.a.reject(e)}))},getProblemLocalStatusById:function(e){return R({status:p.status})},getProblemLocalStatus:R,saveRepairInfo:function(e,t,r){return r=JSON.stringify(r),g.a.saveRepairInfo(e,t,r).then((function(){return g.a.getCheckProblemDraft(e).then((function(t){return d.a.backUpDraft(e,t.proj_id,"checkquality_problem",t)}))}))},problemRead:function(e){return y.a.update({has_read:1},{checkquality_problem_id:e}).then((function(){return m.default.addSyncGroup([["checkquality_problem",e],["checkquality_repair",e]])}))},takePictureAndSave:function(e){var t={shootVideo:!0};return s.a.takePicture(t).then((function(t){if(t)return u.a.getBatch(e).then((function(e){var r={proj_id:e.proj_id,bidsection_id:e.bidsection_id,batch_id:e.id,deadline:e.repair_deadline,batch_type:e.batch_type,created_by:i.a.getUser().user_id,created_on:c.a.now(),image_file:[t],status:"待提交"};return n.save(r)}))})).catch((function(e){return $log.error(e),a.a.reject(e)}))},saveByPicture:function(e,t){return e?u.a.getBatch(t).then((function(t){var r={proj_id:t.proj_id,bidsection_id:t.bidsection_id,batch_id:t.id,deadline:t.repair_deadline,batch_type:t.batch_type,created_by:i.a.getUser().user_id,created_on:c.a.now(),image_file:[{temp:e}],status:"待提交"};return n.save(r)})).catch((function(e){return $log.error(e),a.a.reject(e)})):a.a.when()},createProblem:function(e,t){return u.a.getBatch(t).then((function(t){var r={proj_id:t.proj_id,bidsection_id:t.bidsection_id,batch_id:t.id,deadline:t.repair_deadline,batch_type:t.batch_type,created_by:i.a.getUser().user_id,created_on:c.a.now(),image_file:[{temp:e}],status:"待提交"};return n.save(r)}))},takePicture:function(){return s.a.takePicture()},allowSelectPicture:function(){return w.a.getValue("upload_from_phone_albums").then((function(e){return"1"===e}))},reinspectByConflict:function(t){return e.isEmpty(t.reinspectBy)?a.a.when():v.a.removeProblemReinspectBy(t.reinspectBy[0].checkquality_problem_id).then((function(){return v.a.insertReinspectByList(t.reinspectBy)})).then((function(){return TodoRepository.removeProblemTodo(t.reinspectBy[0].checkquality_problem_id)})).then((function(){return TodoRepository.insertTodoList(t.todo)}))},copyProblem:function(t){return a.a.all([g.a.getProblemAllColumn(t),y.a.getRepairAllColumn(t),v.a.getReinspectAllColumn(t),v.a.getReinspectByList(t),_.a.getProblemCCAllColumn(t)]).then((function(t){var r=t[0],n=t[1],o=t[2],s=t[3],u=t[4];if(r.id=c.a.uuid(),r.status="待提交",r.regist_by="",r.repair_by="",r.repair_remark="",r.repair_date="",r.repair_image_file="",r.sent_back_by="",r.sent_back_date="",r.sent_back_times=0,r.sent_back_remark="",r.sent_back_image_file="",r.reinspect_by="",r.reinspect_completed_date="",r.close_date="",r.close_reason="",r.created_by=i.a.getUser().user_id,r.created_on=c.a.now(),r.modified_by=i.a.getUser().user_id,r.download_time="",r.update_timestamp="",r.repair_deadline&&!r.deadline&&r.regist_date){for(var l=r.repair_deadline.match(/\d+/g),d=0;d<l.length;d++)l[d]=parseInt(l[d]);for(var p=new Date(l[0],l[1]-1,l[2],l[3]||0,l[4]||0,l[5]||0),m=r.regist_date.match(/\d+/g),f=0;f<m.length;f++)m[f]=parseInt(m[f]);var h=new Date(m[0],m[1]-1,m[2],m[3]||0,m[4]||0,m[5]||0);r.deadline=Math.ceil((p.getTime()-h.getTime())/864e5)}r.regist_date="",r.repair_deadline="",e.each(n,(function(e){e.id=c.a.uuid(),e.checkquality_problem_id=r.id,e.download_time=""})),e.each(o,(function(e){e.id=c.a.uuid(),e.checkquality_problem_id=r.id,e.download_time=""})),e.each(s,(function(e){e.id=c.a.uuid(),e.checkquality_problem_id=r.id,e.reinspect_date="",n.reinspect_remark="",n.reinspect_image_file="",e.download_time=""}));var b=e.filter(u,(function(e){return"默认"===e.type}));return b=e.map(b,(function(e){return{id:e.cc}})),u=e.filter(u,(function(e){return"被抄送"===e.type})),u=e.map(u,(function(e){return{id:e.cc}})),a.a.all([g.a.insert(r),y.a.insert(n),v.a.insertReinspect(o),v.a.insertReinspectByList(s),_.a.saveProblemCC(r.id,u),_.a.saveDefaultCc(r.id,b)])}))},removeLocalInvalidProblem:function(t){var r=a.a.when();return t.problem_repair&&(r=r.then((function(){return y.a.removeInvalidData(t.problem.id,e.map(t.problem_repair,"id"))}))),t.problem_reinspect&&(r=r.then((function(){return v.a.removeInvalidData(t.problem.id,e.map(t.problem_reinspect,"id"))}))),t.problem_cc&&(r=r.then((function(){return _.a.removeInvalidData(t.problem.id,e.map(t.problem_cc,"id"))}))),t.children_Problem&&(r=r.then((function(){return g.a.removeInvalidChildProblem(t.problem.id,t.children_Problem)}))),r},removeLocalInvalidProblem1:function(t,r){var n=r.checkquality_problem;return a.a.when().then((function(){if(r.checkquality_problem)return g.a.deleteProblemById(n.id)})).then((function(){if(r.checkquality_repair)return y.a.removeInvalidData(n.id,e.map(r.checkquality_repair,"id"))})).then((function(){if(r.checkquality_cc)return _.a.removeInvalidData(n.id,e.map(r.checkquality_cc,"id"))}))},removeClosedBatchProblem:function(){return u.a.getClosedBatchIdList().then((function(e){return n.deleteBatchProblems(e)}))},deleteBatchProblems:function(t){return $log.log("删除已关闭批次的问题"),g.a.getProblemsByBatch(t).then((function(t){var r=a.a.when(),n=["image_file","repair_image_file","sent_back_image_file"],i=[];return e.each(t,(function(t){for(var r=0;r<n.length;++r){var a=t[n[r]]=JSON.parse(t[n[r]]||"[]");e.each(a,(function(e){e.local&&i.push(e.local),e.thumbnail&&i.push(e.thumbnail),e.temp&&i.push(e.temp)}))}})),e.each(i,(function(e){r=r.then((function(){return o.a.isFileExists(e)})).then((function(t){if(t)return o.a.deleteFile(e)}))})),r})).then((function(){return g.a.deleteProblemByBatch(t)}))},getLeaderComments:function(t){return g.a.getLeaderComments(t).then((function(t){return e.each(t,(function(e){e.user={id:e.user_id,name:e.user_name,mobile:e.mobile,is_im_user:e.is_im_user},e.image_file&&(e.image_file=JSON.parse(e.image_file))})),t}))},getPhotoRequired:function(e,t){var r=b.a.state.global.allGrayRelease.UsingProjectParameter;return j.a.getProjParameter(e,"is_photo_required",t).then((function(e){return r&&e&&e.length?Number(e[0].value):b.a.state.global.isPhotoRequired[t]})).catch((function(e){console.log("error",e)}))}},t.a=n}).call(this,r("391c"))},"5c19":function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .content-not-empty[data-v-43042f0d] .layout-content{display:auto;overflow:auto;padding-bottom:100px}.zjapp .check-guide-detail-hd[data-v-43042f0d]{margin-left:30px;padding:25px 30px 5px 0}.zjapp .check-guide-detail-title[data-v-43042f0d]{margin:0;line-height:20px;font-size:18px;color:#111;font-weight:700;word-break:break-all}.zjapp .check-guide-detail-info[data-v-43042f0d]{line-height:20px;font-size:14px;color:#8c8c8c}.zjapp .check-guide-detail-content[data-v-43042f0d]{padding:30px;line-height:30px;color:#333;font-size:16px}.zjapp .check-guide-detail-content p[data-v-43042f0d]{margin-bottom:30px;min-height:1em}.zjapp .check-guide-detail-content img[data-v-43042f0d]{max-width:100%}.zjapp .check-guide-detail-content .img-not-ready[data-v-43042f0d]{width:80px;height:auto}.zjapp .error[data-v-43042f0d]{max-width:50%}",""])},6268:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return d}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("937e"),u=r("a044");function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var d=function(e){Object(i.a)(r,e);var t=l(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"onClickEndNode",value:function(e,t,r){e.status===u.y?this.routeToOldSetPass(e):e.problemNum&&this.routeToOldProblemList(e,r)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"changeSpecialInspectStatus",value:function(e,t){t===u.y&&this.routeToOldSetPass(e)}},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:this.mode})}}]),r}(s.a)},"66f5":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name,\n\t\t(select sum(cp.redline_deduction) from checkquality_problem cp \n      where batch_type = '专项巡检' and cp.biz_id = si.id and cp.status != '草稿' and cp.status != '已关闭' ) as redline_deduction, \n\t\t(select count(*) from checkquality_problem cp where cp.biz_id = si.id ) as problemNum,\n\t\t(select sum(deduction) from checkquality_problem cp1 \n      where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' and cp1.status != '已关闭') as deduction \n\t\tfrom special_inspect si \n\t\twhere si.batch_id = '".concat(e,"' order by si.checkitem_code");return s.a.query(t)}}]),r}(r("29f8").a)},"743d":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return s}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("76ff"),i=r("4b67"),c=r("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(c.a)(e);if(t){var a=Object(c.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(i.a)(this,r)}}var s=function(e){Object(a.a)(r,e);var t=o(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return r}(r("29f8").a)},7647:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return d}));r("2b45"),r("fc58"),r("06a2"),r("6d57"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("fc9f");function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var d=function(e){Object(c.a)(s,e);var t,r,o=l(s);function s(){return Object(a.a)(this,s),o.apply(this,arguments)}return Object(i.a)(s,[{key:"getBatchPlaces",value:function(e){var t="select * from special_inspect_place where batch_id = '".concat(e,"'\n      order by regist_date");return u.a.query(t)}},{key:"getMode11EndItems",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getBatchEndSpecialInspectIds(t);case 2:return r=e.sent,n=r&&r.length?" and sipc.special_inspect_id in ('".concat(r.join("','"),"')"):"",a="select sipc.*, sip.name as place_name\n      from special_inspect_place_checkitem sipc\n      join special_inspect_place sip on sip.id = sipc.place_id\n      where sipc.batch_id = ? ".concat(n),e.abrupt("return",u.a.query(a,[t]));case 6:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"getBatchEndSpecialInspectIds",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r="select * from special_inspect where batch_id = '".concat(t,"'"),e.next=3,u.a.query(r);case 3:if((n=e.sent)&&n.length){e.next=6;break}return e.abrupt("return",[]);case 6:return a={},n.forEach((function(e){e.checkitem_parent_id&&(a[e.checkitem_parent_id]=1)})),i=n.filter((function(e){return!a[e.checkitem_id]})),e.abrupt("return",i.map((function(e){return e.id})));case 10:case"end":return e.stop()}}),e)}))),function(e){return t.apply(this,arguments)})},{key:"hasBatchCheckitem",value:function(e){var t="select 1 from special_inspect where batch_id = '".concat(e,"'");return u.a.queryOne(t)}},{key:"addBatchPlace",value:function(e){return u.a.insertObject("special_inspect_place",e)}},{key:"updateBatchPlace",value:function(e){return u.a.update("special_inspect_place",e,{id:e.id})}},{key:"getBatchPlace",value:function(e){return u.a.queryOne("select * from special_inspect_place where id = ?",[e])}},{key:"deleteBatchPlace",value:function(e){return Promise.all([u.a.executeSql("delete from special_inspect_place where id = ?",[e]),u.a.executeSql("delete from checkquality_problem where biz_children_id in\n      (select id from special_inspect_place_checkitem where place_id = ?)",[e]),u.a.executeSql("delete from special_inspect_place_checkitem where place_id = ?",[e])])}},{key:"addBatchPlaceCheckitem",value:function(e){return u.a.insertObject("special_inspect_place_checkitem",e)}},{key:"getBatchAllSpecialInspect",value:function(e){var t="select * from special_inspect where batch_id = '".concat(e,"'");return u.a.query(t)}},{key:"getBatchPlaceCheckitems",value:function(e){return u.a.query("select sipc.*, si.checkitem_name as name,\n      si.checkitem_id,\n      si.checkitem_code,\n      si.checkitem_name,\n      si.checkitem_full_name,\n      si.checkitem_parent_id,\n      si.checkitem_extension\n      from special_inspect_place_checkitem sipc\n      join special_inspect si on si.id = sipc.special_inspect_id\n      where sipc.place_id = ?\n      order by si.checkitem_code",[e])}},{key:"getAllDoneData",value:function(e){var t="select sipc.*,\n      si.checkitem_id, si.checkitem_parent_id, si.score \n      from special_inspect_place_checkitem sipc\n      join special_inspect si on si.id = sipc.special_inspect_id\n      where (sipc.status = '合格' or sipc.status = '不合格') and sipc.batch_id = '".concat(e,"'\n      order by si.checkitem_code");return u.a.query(t)}},{key:"getAllItems",value:function(e){var t="select * from special_inspect \n      where batch_id = '".concat(e,"'\n      order by checkitem_code");return u.a.query(t)}},{key:"getNotEndItems",value:function(e){var t="select * from special_inspect\n      where checkitem_id in (select checkitem_parent_id from special_inspect where batch_id = '".concat(e,"')\n        or (ifnull(checkitem_parent_id, '') = '' and batch_id = '").concat(e,"')\n      order by checkitem_code");return u.a.query(t)}},{key:"getSpecialInspectData",value:function(e,t){var r="select sipc.*,\n      si.checkitem_id,\n      si.checkitem_code,\n      si.checkitem_name,\n      si.checkitem_full_name,\n      si.checkitem_parent_id,\n      si.checkitem_extension,\n      u.name as checker_name, u.mobile as checker_mobile, u.is_im_user as check_is_im_user\n      from special_inspect_place_checkitem sipc\n      join special_inspect si on si.id = sipc.special_inspect_id\n      left join user u on u.id = sipc.checker\n      where sipc.special_inspect_id = '".concat(e,"' and sipc.place_id = '").concat(t,"'");return u.a.queryOne(r)}},{key:"updateSpecialInspectData",value:function(e){return u.a.update("special_inspect_place_checkitem",e,{id:e.id})}},{key:"getPlaceSpecialInspectData",value:function(e,t){return u.a.queryOne("select sipc.*,\n      si.checkitem_id,\n      si.checkitem_code,\n      si.checkitem_name,\n      si.checkitem_full_name,\n      si.checkitem_parent_id,\n      si.checkitem_extension,\n      u.name as checker_name,\n      u.mobile as checker_mobile,\n      u.is_im_user as check_is_im_user\n      from special_inspect_place_checkitem sipc\n      join special_inspect si on si.id = sipc.special_inspect_id\n      left join user u on u.id = sipc.checker\n      where sipc.special_inspect_id = ? and sipc.place_id = ?",[e,t])}},{key:"updatePlaceSpecialInspectData",value:function(e){return u.a.update("special_inspect_place_checkitem",e,{id:e.id})}}]),s}(r("29f8").a)},7965:function(e,t,r){"use strict";r.r(t),t.default={mode:8,name:"质量风险",navMenu:[{name:"全部问题",code:"allProblem"}],tree:{style:"no-point",attrs:[{key:"hasData",name:"有检查数据-末级",type:"boolean",method:"some",pattern:"computed",match:"treeNodeIsEnd",result:'status === "合格" || status === "不合格"'},{key:"hasData",name:"有检查数据-非末级",type:"boolean",method:"some",pattern:"transmit",match:"!treeNodeIsEnd",result:"hasData"},{key:"temporary_storage",name:"暂存的问题数量",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"temporary_storage || 0"},{key:"deduction",name:"扣分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"deduction || 0"},{key:"scoreCount",name:"参与计算的总分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"treeNodeIsEnd ? (hasData ? score : 0) : (scoreCount || 0)"},{key:"scoreRate",name:"得分率",type:"number",pattern:"computed",match:"treeNodeIsFirst",result:'hasData ? (scoreCount - deduction) / scoreCount : ""'}],notes:[{text:"({{score}}分)",color:"gray3",show:{treeNodeIsEnd:!0,treeNodeIsFirst:!1}}],infos:[{text:"暂存",color:"orange",show:"!!temporary_storage"},{text:"-{{deduction}}分",color:"red",show:"treeNodeIsFirst && hasData && !temporary_storage"},{text:"{{ percent(scoreRate, 2) }}",color:"gray3",show:"treeNodeIsFirst && hasData && !temporary_storage"},{text:"未检",color:"gray3",show:"treeNodeIsFirst && !hasData && !temporary_storage"},{text:"-{{deduction}}分",color:"red",show:'treeNodeIsEnd && status === "不合格" && !temporary_storage'},{text:"{{problem_num}}个问题",color:"gray3",show:'treeNodeIsEnd && status === "不合格" && !temporary_storage'},{text:"{{ status }}",type:"status",show:'treeNodeIsEnd && status === "合格" && !temporary_storage'}],icons:[{name:"mark",show:"treeNodeIsEnd && is_redline_deduction"}],btns:[{name:"合格",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"未设置",temporary_storage:0},operate:"change-status",value:"合格"},{name:"扣分",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"未设置",temporary_storage:0},operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]}]},total:{title:"当前综合得分",calc:[{key:"scoreSum",name:"已检项的应得分",match:"treeNodeIsFirst && hasData",value:"scoreCount"},{key:"deductionSum",name:"扣分值",match:"treeNodeIsFirst && hasData",value:"deduction"},{key:"redlineDeductionACount",name:"星标项A级扣分的数量",match:'treeNodeIsEnd && hasData && is_redline_deduction && deduction_level === "A"',value:"1"},{key:"redlineDeductionBCount",name:"星标项B级扣分的数量",match:'treeNodeIsEnd && hasData && is_redline_deduction && deduction_level === "B"',value:"1"},{key:"redlineDeductionCCount",name:"星标项C级扣分的数量",match:'treeNodeIsEnd && hasData && is_redline_deduction && deduction_level === "C"',value:"1"}],result:"(scoreSum.value - deductionSum.value) / scoreSum.value - (((redlineDeductionACount.value < (batch.template_extension.A_valid_min || -Infinity) ? 0 : Math.min(redlineDeductionACount.value, batch.template_extension.A_valid_max || Infinity)) * (batch.template_extension.A || 0)) + ((redlineDeductionBCount.value < (batch.template_extension.B_valid_min || -Infinity) ? 0 : Math.min(redlineDeductionBCount.value, batch.template_extension.B_valid_max || Infinity)) * (batch.template_extension.B || 0)) + ((redlineDeductionCCount.value < (batch.template_extension.C_valid_min || -Infinity) ? 0 : Math.min(redlineDeductionCCount.value, batch.template_extension.C_valid_max || Infinity)) * (batch.template_extension.C || 0))) * 0.01",hasResult:"Boolean(scoreSum.value)",resultType:"percent",formula:"综合得分 =（（已检项的应得分-扣分值）/应得分-星标项的加扣分值*0.01）*100%",formulaCalc:"=(({{scoreSum.value}}-{{deductionSum.value}})/{{scoreSum.value}}-{{((redlineDeductionACount.value < (batch.template_extension.A_valid_min || -Infinity) ? 0 : Math.min(redlineDeductionACount.value, batch.template_extension.A_valid_max || Infinity)) * (batch.template_extension.A || 0)) + ((redlineDeductionBCount.value < (batch.template_extension.B_valid_min || -Infinity) ? 0 : Math.min(redlineDeductionBCount.value, batch.template_extension.B_valid_max || Infinity)) * (batch.template_extension.B || 0)) + ((redlineDeductionCCount.value < (batch.template_extension.C_valid_min || -Infinity) ? 0 : Math.min(redlineDeductionCCount.value, batch.template_extension.C_valid_max || Infinity)) * (batch.template_extension.C || 0))}}*0.01)*100%={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"},finishBatchCheck:[{isFilterFirst:!1,statusTotalConfig:[{status:"合格",key:"a"},{status:"不合格",key:"b"}],match:"a + b <= 0",msg:"您未录入任何检查项的检查记录，请录入后再提交"}]}},"7a42":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*,\n      (select count(*) from checkquality_problem cp where cp.biz_id = si.id ) as problemNum,\n      (select sum(deduction) from checkquality_problem cp1 \n        where batch_type = '专项巡检' and cp1.biz_id = si.id and cp1.status != '草稿' and cp1.status != '已关闭') as deduction \n      from special_inspect si \n      where si.batch_id = '".concat(e,"' order by si.checkitem_code");return s.a.query(t)}}]),r}(r("29f8").a)},"7d4e":function(e,t,r){var n=r("c59b");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("62c5f5a2",n,!0,{sourceMap:!1,shadowMode:!1})},"81f2":function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,'.zjapp .main[data-v-2cac8864]{position:fixed;width:100%;bottom:0}.zjapp .arrow[data-v-2cac8864]{position:absolute;top:-7px;right:18px;width:0;height:0;border-bottom:7px solid #fff;border-right:7px solid transparent;border-left:7px solid transparent}.zjapp .content[data-v-2cac8864]{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);overflow:hidden}.zjapp .box[data-v-2cac8864]{display:flex;flex-direction:column;background-color:#fff;overflow:auto}.zjapp .box-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1}.zjapp .detail-hd[data-v-2cac8864]{display:flex;padding:6px 15px}.zjapp .detail-arrow-right[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-right[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:12px;border:5px solid transparent;border-left:5px solid #c8c8c8}.zjapp .detail-arrow-down[data-v-2cac8864]{width:13px;height:34px;overflow:hidden}.zjapp .detail-arrow-down[data-v-2cac8864]:before{display:block;content:"";width:0;height:0;margin-top:15px;border:5px solid transparent;border-top:5px solid #c8c8c8}.zjapp .detail-title[data-v-2cac8864]{flex:1;line-height:34px;color:#111;font-size:16px}.zjapp .detail-bd[data-v-2cac8864]{padding:8px 15px 8px 35px;background-color:#fafafa}.zjapp .text-line[data-v-2cac8864]{font-size:14px;color:#666;line-height:30px;margin-bottom:30px}.zjapp .detail-hd-single[data-v-2cac8864]{padding:6px 0;margin:0 15px}.zjapp .detail-bd-single[data-v-2cac8864]{display:flex;flex-direction:column;flex:1;padding:8px 15px;background-color:#fff}',""])},"82c5":function(e,t,r){"use strict";r.d(t,"a",(function(){return n})),r.d(t,"b",(function(){return a}));var n=[{id:"title",name:"title",type:"text",isExtend:!0,display:!0,label:"",value:"检查项名称",extendOptions:{border:"bottom",fontSize:16,color:"#333",weight:500}},{id:"rule",name:"rule",isExtend:!0,type:"text",label:"",value:"检查项规则",display:!1,extendOptions:{border:"bottom",fontSize:14,color:"#999"}},{id:"status",type:"radio",label:"检查结果",name:"status",display:!0,disabled:!1,require:!1,direction:"horizontal",value:[{key:"不合格",label:"不合格"}],itemLayout:"horizontal",options:[{key:"不合格",label:"不合格"},{key:"合格",label:"合格"}],relations:[]},{id:"divider",type:"divider",label:"分割线",name:"divider",display:!0,height:"10"},{id:"deduction",name:"deduction",label:"扣分",value:"",isExtend:!0,type:"number-input",extendOptions:{decimal:2,range:[0,999999.99],unit:"分",mode:"edit"},display:!0,required:!0,rules:[{pattern:/^[+-]?(0|([1-9]\d*))(\.\d+)?$/,message:"请输入扣分"}],relations:[{type:"formula",func:"DISPLAY([#{status},不合格,=])"}]},{id:"images",name:"images",label:"",value:[],isExtend:!0,type:"images",extendOptions:{maxlength:15},display:!0},{id:"remark",name:"remark",label:"",value:"",isExtend:!0,type:"textarea",extendOptions:{placeholder:"补充说明"},display:!0}],a=[{id:"title",name:"title",type:"text",isExtend:!0,display:!0,label:"",value:"检查项名称",extendOptions:{border:"bottom",fontSize:16,color:"#333",weight:500}},{id:"rule",name:"rule",isExtend:!0,type:"text",label:"",value:"检查项规则",display:!1,extendOptions:{border:"bottom",fontSize:14,color:"#999"},relations:[{type:"formula",func:"DISPLAY([#{rule},,=])"}]},{id:"status",name:"status",isExtend:!0,type:"text",label:"检查结果",extendOptions:{mode:"edit"},display:!0,value:""},{id:"divider",type:"divider",label:"分割线",name:"divider",display:!0,height:"10"},{id:"deduction",name:"deduction",label:"扣分",value:"",isExtend:!0,type:"text",display:!0,extendOptions:{mode:"edit"},relations:[{type:"formula",func:"DISPLAY([#{status},不合格, =])"}]},{id:"images",name:"images",label:"",value:[],isExtend:!0,type:"images",disabled:!0,extendOptions:{maxlength:15},display:!0},{id:"remark",name:"remark",label:"补充说明",value:"",isExtend:!0,type:"text",display:!0}]},8625:function(e,t,r){var n={"./mode-1.js":"b464","./mode-10.js":"def6","./mode-100.js":"b48c","./mode-11.js":"c1d9","./mode-2.js":"bfb1","./mode-3.js":"a2fc","./mode-4.js":"17b9","./mode-5.js":"1def","./mode-6.js":"879f","./mode-7.js":"f6b4f","./mode-8.js":"7965","./mode-9.js":"2bec","./mode-99.js":"e8cb"};function a(e){var t=i(e);return r(t)}function i(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id="8625"},"879f":function(e,t,r){"use strict";r.r(t),t.default={mode:6,name:"合同巡检",navMenu:[{name:"全部问题",code:"allProblem"}],tree:{attrs:[{key:"unqualifiedItemNum",name:"不合格的项数",type:"number",pattern:"computed",match:"treeNodeIsEnd",result:'status === "不合格" ? 1 : 0'},{key:"unqualifiedItemNum",name:"不合格的项数",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"unqualifiedItemNum || 0"},{key:"status",name:"状态 status 处理，保存草稿时，没有修改 speical_inspect 表的状态",type:"string",pattern:"computed",match:"treeNodeIsEnd",result:'{{status === "未设置" && problem_id ? "草稿" : status }}'}],infos:[{text:"{{ unqualifiedItemNum }}项不合格",color:"gray3",show:{treeNodeIsFirst:!0}},{text:"{{ status }}",type:"status",show:'treeNodeIsEnd && status !== "未设置"'}],btns:[{name:"合格",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"未设置"},operate:"change-status",value:"合格"},{name:"不合格",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"未设置"},operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]}]},total:{title:'{{batch.status === "检查中" ? "当前" : ""}}合格率',note:"{{unqualifiedCount.value}}项不合格",calc:[{key:"unqualifiedCount",name:"不合格项数",match:'treeNodeIsEnd && status === "不合格"',value:"1"},{key:"qualifiedCount",name:"参与检查的合格项数",match:'treeNodeIsEnd && status === "合格"',value:"1"},{key:"count",name:"参与检查的全部项数",match:'treeNodeIsEnd && (status === "合格" || status === "不合格")',value:"1"}],result:"qualifiedCount.value / count.value",hasResult:"Boolean(count.value)",resultType:"percent",formula:"合格率=参与检查的合格项数/参与检查的全部项数*100%",formulaCalc:"={{qualifiedCount.value}}/{{count.value}}*100%={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"},finishBatchCheck:[{isFilterFirst:!0,statusTotalConfig:[{status:"合格",key:"a"},{status:"不合格",key:"b"}],match:"a + b <= 0",type:"notify",msg:"至少有一项检查记录"}]}},"87d0":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select b.*, t.name as template_name, t.mode as template_mode, bc.weight\n      from batch b\n      left join special_inspect_template t on t.id = b.template_id\n      left join special_inspect_template_batch_combo bc on bc.batch_id = b.id and bc.template_id = t.id\n      where b.root_id = '".concat(e,"' and ifnull(b.parent_id, '') != ''\n      order by bc.sort");return s.a.query(t)}}]),r}(r("29f8").a)},"8a83e":function(e,t,r){var n=r("4ebf");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("011f3530",n,!0,{sourceMap:!1,shadowMode:!1})},"90ce":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("d703");function a(e,t,r){return(a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var a=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Object(n.a)(e)););return e}(e,t);if(a){var i=Object.getOwnPropertyDescriptor(a,t);return i.get?i.get.call(r):i.value}})(e,t,r||e)}},"91c1":function(e,t,r){"use strict";(function(e){r("5ab2"),r("6d57"),r("e10e"),r("9a33");var n=r("28f8"),a=r("e68e"),i=r("6f9e"),c=r("bcc7"),o=r("e89f");function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){Object(n.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}t.a={name:"CheckGuideDetailDrop",components:{ItemImgList:a.a},mixins:[o.a],data:function(){return{show:!1,showList:!1,isLoading:!1,isOpening:!1,isClosing:!1,contentTop:64,listHeight:510,module:"",itemIds:[],data:[],target:""}},watch:{show:function(e){var t=this;e&&this.$nextTick((function(){t.showList=!0}))}},created:function(){i.a.$on("routerBeforeEach",this.closePopup),i.a.$on("pageContentClick",this.onClickOther)},destroyed:function(){i.a.$off("routerBeforeEach",this.closePopup),i.a.$off("pageContentClick",this.onClickOther)},methods:{openPopup:function(t){this.show=!0,this.$emit("open"),this.module=t.module,this.itemIds=t.itemIds,this.options=t.options;var r=document.querySelector(".layout-main .layout-header");if(this.contentTop=r.offsetHeight,t.el){var n=t.el.getBoundingClientRect();this.contentTop=n.bottom}this.target=t.el,this.listHeight=e.minBy([window.innerHeight-this.contentTop-50,510]),this.getData()},closePopup:function(){var e=this;if(!this.isOpening)return this.showList=!1,this.$emit("close"),new Promise((function(t){e.$on("afterClosePopup",t)}))},afterClose:function(){this.show=!1,this.isClosing=!1,this.$emit("afterClosePopup")},onClickOther:function(e){e&&e.target&&e.target!==this.target&&this.show&&this.closePopup()},getData:function(){var t=this;return this.options&&this.options.length?(this.data=e.map(this.options,(function(e){return u(u({},e),{},{isOpen:!1})})),Promise.resolve()):c.a.getMeasureCheckItem(this.itemIds).then((function(r){t.data=e.map(r,(function(t){var r=t.content?t.content.trim():"",n=r?r.split("\n"):[],a=t.content_image?JSON.parse(t.content_image):[],i=e.filter(n,(function(e){return!/<img([\s\S]*)>/gm.test(e)}));return e.each(a,(function(e){e.url=e.url.split("@")[0]})),{id:t.id,name:t.full_name,textArr:i,contentImage:a,isOpen:!1}}))})).catch((function(e){console.error(e)}))},toggleItem:function(e){this.data.length>1&&this.$set(e,"isOpen",!e.isOpen)}}}}).call(this,r("391c"))},"937e":function(e,t,r){"use strict";(function(e){r.d(t,"a",(function(){return P}));r("309f"),r("0b53"),r("06a2"),r("ec25"),r("cc57"),r("5ab2"),r("e10e"),r("2b45"),r("fc58"),r("9e76"),r("6d57"),r("e204"),r("6a61");var n=r("2e91"),a=r("3e83"),i=r("28f8"),c=r("0e4d"),o=r("94ef"),s=r("76ff"),u=r("4b67"),l=r("d703"),d=r("1522"),p=r("3bd5"),m=r("ed08"),f=r("48f4"),h=r("7cb8"),b=r("966e"),g=r("a044"),_=r("7bac"),y=r("a7c3"),v=r("a18c"),k=r("1b7e"),x=r("fc9f"),w=r("162a"),j=r("e2a7");function O(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return I(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return I(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,c=!0,o=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return c=e.done,e},e:function(e){o=!0,i=e},f:function(){try{c||null==r.return||r.return()}finally{if(o)throw i}}}}function I(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function R(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function S(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?R(Object(r),!0).forEach((function(t){Object(i.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):R(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function D(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(l.a)(e);if(t){var a=Object(l.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(u.a)(this,r)}}var P=function(t){Object(s.a)(W,t);var r,i,u,l,I,R,P,C,E,N,T,B,L,q,M,A,F,z,$,U,V=D(W);function W(e){var t;return Object(c.a)(this,W),(t=V.call(this)).mode=e,t.Repositories=Object(d.b)(e),t}return Object(o.a)(W,[{key:"eval",value:function(e,t){return Object(h.d)(e,S(S({},t),{},{percent:b.a,isNumber:h.j,hasVal:h.i}))}},{key:"compileStr",value:function(e,t){return Object(h.b)(e,S(S({},t),{},{percent:b.a,isNumber:h.j,hasVal:h.i}))}},{key:"isMatch",value:function(t,r){return"object"===Object(a.a)(t)?e.isMatch(r,t):this.eval(t,r)}},{key:"formatFloat",value:function(e){return isNaN(e)?e:Math.round(1e5*e)/1e5}},{key:"getTemplateList",value:function(){return this.Repositories.getTemplateList()}},{key:"getContractList",value:function(e){return this.Repositories.getContractList(e)}},{key:"getDraftFromMmkv",value:(U=Object(n.a)(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,_.a.getUserObject(y.a.SPECIAL_INSPECT_DRAFT);case 2:return t=e.sent,e.abrupt("return",t||{});case 4:case"end":return e.stop()}}),e)}))),function(){return U.apply(this,arguments)})},{key:"saveDraftToMmkv",value:($=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&r){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,_.a.getUserObject(y.a.SPECIAL_INSPECT_DRAFT);case 4:return!(n=e.sent)&&(n={}),!n[r]&&(n[r]=[]),(a=n[r].findIndex((function(e){return e.id===t.id})))<0?n[r].push(t):n[r].splice(a,1,t),e.next=11,_.a.saveUserObject(y.a.SPECIAL_INSPECT_DRAFT,n);case 11:case"end":return e.stop()}}),e)}))),function(e,t){return $.apply(this,arguments)})},{key:"removeDraftFromMmkv",value:(z=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&r){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,_.a.getUserObject(y.a.SPECIAL_INSPECT_DRAFT);case 4:if(e.t0=e.sent,e.t0){e.next=7;break}e.t0={};case 7:if(!(n=e.t0)[r]&&(n[r]=[]),!((a=n[r].findIndex((function(e){return e.id===t.id})))>=0)){e.next=14;break}return n[r].splice(a,1),e.next=14,_.a.saveUserObject(y.a.SPECIAL_INSPECT_DRAFT,n);case 14:case"end":return e.stop()}}),e)}))),function(e,t){return z.apply(this,arguments)})},{key:"recoverDraftFromMmkv",value:(F=Object(n.a)(regeneratorRuntime.mark((function e(){var t,r,n,a,i,c,o,s,u,l,d,p,m,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,_.a.getUserObject(y.a.SPECIAL_INSPECT_DRAFT);case 2:if(e.t0=e.sent,e.t0){e.next=5;break}e.t0={};case 5:t=e.t0,n=(r=t||{}).special_inspect,a=void 0===n?[]:n,i=r.special_inspect_place_checkitem,c=void 0===i?[]:i,$log.log("开始恢复专项巡检草稿",t),o=O(a),e.prev=9,o.s();case 11:if((s=o.n()).done){e.next=22;break}if(!(u=s.value)||!u.id){e.next=20;break}return e.next=16,this.Repositories.selectSpecialInspect(u.id);case 16:if(!(l=e.sent)||l.status!==g.v){e.next=20;break}return e.next=20,this.Repositories.updateSpecialInspectData(u);case 20:e.next=11;break;case 22:e.next=27;break;case 24:e.prev=24,e.t1=e.catch(9),o.e(e.t1);case 27:return e.prev=27,o.f(),e.finish(27);case 30:d=O(c),e.prev=31,d.s();case 33:if((p=d.n()).done){e.next=44;break}if(!(m=p.value)||!m.id){e.next=42;break}return e.next=38,this.Repositories.selectSpecialInspectPlaceCheckitem(m.id);case 38:if(!(f=e.sent)||f.status!==g.v){e.next=42;break}return e.next=42,this.Repositories.updatePlaceSpecialInspectData(m);case 42:e.next=33;break;case 44:e.next=49;break;case 46:e.prev=46,e.t2=e.catch(31),d.e(e.t2);case 49:return e.prev=49,d.f(),e.finish(49);case 52:_.a.saveUserObject(y.a.SPECIAL_INSPECT_DRAFT,{});case 53:case"end":return e.stop()}}),e,this,[[9,24,27,30],[31,46,49,52]])}))),function(){return F.apply(this,arguments)})},{key:"getStatus",value:(A=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,_.a.getUserObject(y.a.SPECIAL_INSPECT_DETAIL_DRAFT_STATUS);case 2:return r=e.sent,e.abrupt("return",r&&r[t]);case 4:case"end":return e.stop()}}),e)}))),function(e){return A.apply(this,arguments)})},{key:"saveStatus",value:(M=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,_.a.getUserObject(y.a.SPECIAL_INSPECT_DETAIL_DRAFT_STATUS);case 2:if(e.t0=e.sent,e.t0){e.next=5;break}e.t0={};case 5:return(n=e.t0)[t]=r,e.next=9,_.a.saveUserObject(y.a.SPECIAL_INSPECT_DETAIL_DRAFT_STATUS,n);case 9:case"end":return e.stop()}}),e)}))),function(e,t){return M.apply(this,arguments)})},{key:"removeStatus",value:(q=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,_.a.getUserObject(y.a.SPECIAL_INSPECT_DETAIL_DRAFT_STATUS);case 2:if(e.t0=e.sent,e.t0){e.next=5;break}e.t0={};case 5:return delete(r=e.t0)[t],e.next=9,_.a.saveUserObject(y.a.SPECIAL_INSPECT_DETAIL_DRAFT_STATUS,r);case 9:case"end":return e.stop()}}),e)}))),function(e){return q.apply(this,arguments)})},{key:"getSpecialInspectDescs",value:function(e){return this.Repositories.getSpecialInspectDescs(e)}},{key:"getIndexList",value:(L=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getIndexList(t);case 2:return r=e.sent,n=Object(h.c)(r,{key:"checkitem_id",relationKey:"checkitem_parent_id",setLevel:!0}),e.abrupt("return",{tree:n,list:r});case 5:case"end":return e.stop()}}),e,this)}))),function(e){return L.apply(this,arguments)})},{key:"getTotalMode",value:function(e,t){var r=e&&e.totalMode,n=e&&e.defaultTotalMode,a=r&&this.eval(r,{batch:t});return!Object(h.i)(a)&&Object(h.i)(n)&&(a=e.defaultTotalMode),a}},{key:"getTreeOptions",value:function(t,r,n){var a,i=r&&r.tree&&r.tree[t]||[],c=this.getTotalMode(r,n);return a=Object(h.i)(c)?i.filter((function(e){return!Object(h.i)(e.totalMode)||e.totalMode===c})):i,e.cloneDeep(a)}},{key:"getTreeUi",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"default",r=arguments.length>1?arguments[1]:void 0,n=this.compileStr(t,{batch:r}),a=g.B[n];return a?e.merge({},g.A,a):g.A}},{key:"treeAttrsHandle",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(e&&e.length){var n=function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];n.forEach((function(n){n.children&&n.children.length&&e(n.children),r.forEach((function(e){if(!e.match||t.isMatch(e.match,n)){var r=e.key,a=e.type,i=void 0===a?"number":a,c=e.method,o=void 0===c?"some":c,s=e.result,u=e.pattern,l=void 0===u?"computed":u,d=e.filter;if("computed"===l)n[r]="string"===i?t.compileStr(s,n):t.eval(s,n);else if("transmit"===l){if(!n.children||!n.children.length)return $log.error(r,l,"没有子级，无法汇总"),void(n[r]=void 0);var p=d?n.children.filter((function(e){return t.isMatch(d,e)})):n.children;if(!p.length)return void(n[r]=void 0);if("number"===i)n[r]=p.reduce((function(e,r){return e+t.eval(s,r)}),0);else if("boolean"===i){var m=p.map((function(e){return t.eval(s,e)}));"some"===o?n[r]=m.some((function(e){return e})):"all"===o&&(n[r]=!m.some((function(e){return!e})))}else"string"===i&&(n[r]=p.reduce((function(e,r){return e+t.compileStr(s,r)}),""))}}}))}))};n(e)}}},{key:"getTreeMap",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,a={};return t.forEach((function(t){var i=S(S({},t),n),c=r.filter((function(t){return!t.show||e.isMatch(t.show,i)})).map((function(t){return S(S({},t),{},{text:e.compileStr(t.text,i),color:e.compileStr(t.color,i)})}));t.id&&(a[t.id]=c)})),a}},{key:"getTotalData",value:function(e,t,r){var n=this,a={};if(!t)return a;(t&&t.calc||[]).forEach((function(t){!Object(h.i)(a[t.key])&&(a[t.key]={value:0,text:""});var r=e.filter((function(e){return!t.match||n.isMatch(t.match,e)})),i=[];r.forEach((function(e){a[t.key].value+=n.eval(t.value,e),t.text&&i.push(n.compileStr(t.text,e))})),i.length&&(a[t.key].text=i.join("+")),"number"==typeof a[t.key].value&&(a[t.key].value=n.formatFloat(a[t.key].value))}));var i=this.eval(t.hasResult,S(S({},a),{},{batch:r}));return a.hasResult=i,i?(a.result=this.eval(t.result,S(S({},a),{},{batch:r})),"percent"===t.resultType?a.result=Object(b.a)(a.result,2):!1!==t.numberFixed&&(a.result=a.result.toFixed(2))):a.result="",a.formula=t.formula,a.formulaCalc=i?this.compileStr(t.formulaCalc,S(S({},a),{},{batch:r})):"",a.formulaText=this.compileStr(t.formulaText,S(S({},a),{},{batch:r})),a.title=this.compileStr(t.title,S(S({},a),{},{batch:r}))||"",a.note=this.compileStr(t.note,S(S({},a),{},{batch:r})),a}},{key:"getSpecialInspectData",value:(B=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Repositories.getSpecialInspectData(t);case 2:if(r=e.sent){e.next=5;break}return e.abrupt("return",{});case 5:return n=Object(h.l)(r.checkitem_extension)||{},a=Object(h.l)(r.image_file)||[],e.abrupt("return",S(S({},r),{},{checkitem:{id:r.checkitem_id,name:r.checkitem_name,code:r.checkitem_code,parentId:r.checkitem_parent_id,fullname:r.checkitem_full_name,extension:n},images:a,checker:{id:r.checker,name:r.checker_name,mobile:r.checker_mobile,is_im_user:r.checker_is_im_user}}));case 8:case"end":return e.stop()}}),e,this)}))),function(e){return B.apply(this,arguments)})},{key:"getDetail",value:(T=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getSpecialInspectData(t,r);case 2:if((n=e.sent).status!==g.w){e.next=10;break}return e.next=6,this.getStatus(n.id);case 6:a=e.sent,n.statusShow=a,e.next=11;break;case 10:n.statusShow=n.status;case 11:return e.abrupt("return",n);case 12:case"end":return e.stop()}}),e,this)}))),function(e,t){return T.apply(this,arguments)})},{key:"saveDetail",value:(N=Object(n.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.updateSpecialInspectData(t);case 2:if(t.status!==g.v){e.next=7;break}return e.next=5,this.removeStatus(t.id);case 5:e.next=10;break;case 7:if(t.status!==g.w){e.next=10;break}return e.next=10,this.saveStatus(t.id,t.statusShow);case 10:case"end":return e.stop()}}),e,this)}))),function(e){return N.apply(this,arguments)})},{key:"submitDetail",value:(E=Object(n.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.submitSpecialInspectData(t));case 1:case"end":return e.stop()}}),e,this)}))),function(e){return E.apply(this,arguments)})},{key:"updateSpecialInspectData",value:(C=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&t.id){e.next=2;break}return e.abrupt("return",new Error("保存检查项数据，参数错误"));case 2:if(r={id:t.id},void 0!==t.status&&(r.status=t.status||""),void 0!==t.checker&&(r.checker=t.checker||""),void 0!==t.check_time&&(r.check_time=t.check_time||""),void 0!==t.deduction&&(r.deduction=t.deduction),void 0!==t.images&&(r.image_file=Object(h.m)(t.images)||"[]"),void 0!==t.remark&&(r.remark=t.remark||""),"草稿"!==r.status){e.next=14;break}return e.next=12,this.saveDraftToMmkv(r,"special_inspect");case 12:e.next=16;break;case 14:return e.next=16,this.removeDraftFromMmkv(r,"special_inspect");case 16:return e.abrupt("return",this.Repositories.updateSpecialInspectData(r));case 17:case"end":return e.stop()}}),e,this)}))),function(e){return C.apply(this,arguments)})},{key:"submitSpecialInspectData",value:(P=Object(n.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&t.id){e.next=2;break}return e.abrupt("return",new Error("提交检查项数据，参数错误"));case 2:return t.checker=p.a.getUser().user_id,t.check_time=m.a.now(),e.next=6,this.updateSpecialInspectData(t);case 6:return e.next=8,f.default.addSyncGroup([["special_inspect",t.id]]);case 8:case"end":return e.stop()}}),e,this)}))),function(e){return P.apply(this,arguments)})},{key:"onClickEndNode",value:function(e,t,r){r?this.routeToEdit(e):this.routeToView(e)}},{key:"runBtnOperate",value:(R=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n,a,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.operate,a=void 0===n?"":n,i=t.value,c=t.tips,"route-to-edit"!==a){e.next=5;break}this.routeToEdit(r,t),e.next=12;break;case 5:if("route-to-view"!==a){e.next=9;break}this.routeToView(r,t),e.next=12;break;case 9:if("change-status"!==a){e.next=12;break}return e.next=12,this.changeSpecialInspectStatus(r,i,c);case 12:case"end":return e.stop()}}),e,this)}))),function(e,t){return R.apply(this,arguments)})},{key:"routeToEdit",value:function(e,t){v.a.push({name:g.k,query:{specialInspectId:e.id,btn:t&&t.index}})}},{key:"routeToView",value:function(e,t){v.a.push({name:g.m,query:{specialInspectId:e.id,btn:t&&t.index}})}},{key:"changeSpecialInspectStatus",value:(I=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,f.default.removeSyncGroup(t.id);case 2:return e.next=4,this.saveDetail({id:t.id,status:r});case 4:return e.next=6,f.default.addSyncGroup([["special_inspect",t.id]]);case 6:t.status=r,n&&j.a.alert(n);case 8:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return I.apply(this,arguments)})},{key:"gotoProblemList",value:function(e,t,r){v.a.push({name:g.q,query:{batchId:e,specialInspectId:t,placeId:r}})}},{key:"getWaitUploadQueryTables",value:function(e){var t=["special_inspect","special_inspect_place_checkitem"];return e&&t.push("checkquality_problem"),t}},{key:"getWaitUploadCount",value:(l=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,o,s,u,l=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=l.length>1&&void 0!==l[1]&&l[1],n=this.getWaitUploadQueryTables(r),e.next=4,f.default.getUploadQueue();case 4:a=e.sent,i={},n.forEach((function(e){i[e]=(a||[]).filter((function(t){return t.relation_table_name===e})).map((function(e){return e.relation_id}))})),c=0,e.t0=regeneratorRuntime.keys(i);case 9:if((e.t1=e.t0()).done){e.next=18;break}return o=e.t1.value,s=i[o],e.next=14,this.Repositories.filterIdsByBatchId(o,s,t);case 14:u=e.sent,c+=u.length,e.next=9;break;case 18:return e.abrupt("return",c);case 19:case"end":return e.stop()}}),e,this)}))),function(e){return l.apply(this,arguments)})},{key:"batchCheck",value:(u=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n,i){var c,o,s,u,l=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n&&n.finishBatchCheck&&Array.isArray(n.finishBatchCheck)&&n.finishBatchCheck.length){e.next=2;break}return e.abrupt("return");case 2:c=O(n.finishBatchCheck),e.prev=3,s=function(){var e=o.value;if(!(e.match&&e.statusTotalConfig&&Array.isArray(e.statusTotalConfig)&&e.statusTotalConfig.length))return"continue";var t=i||[];e.isFilterFirst&&(t=t.filter((function(e){return e.children&&e.children.length})));var r=e.statusTotalConfig.map((function(e){return e.status})),n=Object(h.g)(t,"status",r),a=e.statusTotalConfig.reduce((function(e,t){return e[t.key]=n[t.status],e}),{});return l.eval(e.match,a)?{v:{code:2,msg:l.compileStr(e.msg,a),type:e.type||"alert"}}:void 0},c.s();case 6:if((o=c.n()).done){e.next=14;break}if("continue"!==(u=s())){e.next=10;break}return e.abrupt("continue",12);case 10:if("object"!==Object(a.a)(u)){e.next=12;break}return e.abrupt("return",u.v);case 12:e.next=6;break;case 14:e.next=19;break;case 16:e.prev=16,e.t0=e.catch(3),c.e(e.t0);case 19:return e.prev=19,c.f(),e.finish(19);case 22:return e.next=24,this.getWaitUploadCount(t.id);case 24:if(!e.sent){e.next=27;break}return e.abrupt("return",{code:1,msg:"还有问题正在上传，请等待问题上传完毕",type:"alert"});case 27:case"end":return e.stop()}}),e,this,[[3,16,19,22]])}))),function(e,t,r,n){return u.apply(this,arguments)})},{key:"finishBatchConfirm",value:(i=Object(n.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",j.a.confirm("请确保所有检查人已上传数据，提交后不可修改，确认提交？"));case 1:case"end":return e.stop()}}),e)}))),function(){return i.apply(this,arguments)})},{key:"finishBatch",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.id,t.status=g.u,e.next=4,k.a.getHasNetwork();case 4:if(e.sent){e.next=7;break}return e.abrupt("return",Promise.reject("当前网络无法同步数据"));case 7:return e.next=9,w.a.post("/batch/upload",null,{data:{batch:t}});case 9:return n=e.sent,e.next=12,x.a.update("batch",n.batch,{id:r});case 12:return a={status:g.v,deduction:0,image_file:"[]"},i={batch_id:t.id,status:g.w},e.next=16,this.Repositories.updateSpecialInspectAll(i,a);case 16:return e.next=18,this.Repositories.getDraftProblemByBatchId(r);case 18:return c=e.sent,o=(c||[]).map((function(e){return e.id})),e.abrupt("return",this.Repositories.deleteProblemById(o));case 21:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})}]),W}(r("3ddc").a)}).call(this,r("391c"))},"967a":function(e,t,r){"use strict";var n=r("8d95");t.a={REPAIR_DEADLINE_STATUS:{name:"repair_deadline_status",status:["待整改"],module:[n.a.CHECK]}}},"9b25":function(e,t,r){"use strict";r("b09a")},"9dea":function(e,t,r){"use strict";r("fda1")},"9dfb":function(e,t,r){var n={"./mode-1.js":"7a42","./mode-10.js":"743d","./mode-100.js":"87d0","./mode-11.js":"7647","./mode-2.js":"a833","./mode-3.js":"55dc","./mode-4.js":"66f5","./mode-5.js":"05ac","./mode-6.js":"fd1b","./mode-7.js":"d899","./mode-8.js":"1079","./mode-9.js":"dd2f","./mode-99.js":"dc5e"};function a(e){var t=i(e);return r(t)}function i(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id="9dfb"},a2fc:function(e,t,r){"use strict";r.r(t),t.default={mode:3,name:"可打分，按得分率计算总分",navMenu:[{name:"全部问题",code:"allProblem"}],tree:{attrs:[{key:"hasData",name:"有检查数据-末级",type:"boolean",method:"some",pattern:"computed",match:"treeNodeIsEnd",result:'status === "合格" || status === "不合格"'},{key:"hasData",name:"有检查数据-非末级",type:"boolean",method:"some",pattern:"transmit",match:"!treeNodeIsEnd",result:"hasData"},{key:"problemNum",name:"问题数量-非末级",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"problemNum"},{key:"score",name:"满分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",filter:"hasData",result:"score || 0"},{key:"deduction",name:"扣分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"Math.min(deduction, score)"},{key:"scoreRate",name:"得分率",type:"number",pattern:"computed",match:"treeNodeIsFirst",result:'hasData ? (score - deduction) / score : ""'}],notes:[{text:"({{ score || 0 }}分)",color:"gray3",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0}}],infos:[{text:"-{{ deduction > score ? score : deduction }}分",color:"red",show:"treeNodeIsFirst && (problemNum || hasData)"},{text:"{{ percent(scoreRate, 2) }}",color:"red",show:"treeNodeIsFirst && (problemNum || hasData)"},{text:"未检",color:"gray3",show:"treeNodeIsFirst && !problemNum && !hasData"},{text:"{{ status }}",type:"status",show:{status:"合格"}},{text:"-{{ deduction || 0 }}分",color:"red",show:{status:"不合格"}},{text:"{{ problemNum }}个问题",color:"gray3",show:'!treeNodeIsFirst && treeNodeIsEnd && problemNum && status !== "合格"'}],btns:[{name:"合格",show:'!treeNodeIsFirst && treeNodeIsEnd && !problemNum && status !== "合格"',operate:"change-status",value:"合格"},{name:"扣分",show:'!treeNodeIsFirst && treeNodeIsEnd && !problemNum && status !== "合格"',operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]}]},total:{title:"当前综合得分",note:"",calc:[{key:"numerator",name:"得分之和（分子）",match:"treeNodeIsFirst && hasData",value:"score - deduction",text:"{{score - deduction}}"},{key:"denominator",name:"满分之和（分母）",match:"treeNodeIsFirst && hasData",value:"score",text:"{{score}}"}],result:"denominator.value ? numerator.value / denominator.value : 0",hasResult:'batch.status === "检查完毕" || Boolean(denominator.value)',resultType:"percent",formula:"得分＝检查过的项目得分之和/检查过的项目满分之和*100%",formulaCalc:"=\n{{numerator.value}}/{{denominator.value}}*100%={{result}}",formulaText:"{{formula}}{{formulaCalc}}"}}},a833:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return u}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703");function s(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var u=function(e){Object(i.a)(r,e);var t=s(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name,\n\t\t  (select id from checkquality_problem cp where cp.biz_id = si.id order by cp.download_time desc limit 1) as problem_id\n\t\tfrom special_inspect si \n\t\twhere si.batch_id = '".concat(e,"' order by si.checkitem_code");return localDB.query(t)}}]),r}(r("29f8").a)},a96c:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return m}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a044"),d=r("a18c");function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var m=function(e){Object(c.a)(s,e);var t,r,o=p(s);function s(){return Object(a.a)(this,s),o.apply(this,arguments)}return Object(i.a)(s,[{key:"onClickEndNode",value:function(e,t,r){r?this.routeToOldProblemEdit(e):e.status===l.x&&this.routeToOldProblemView(e)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"routeToOldProblemEdit",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.special_inspect_id,i=n.checkitem_id,c=n.mode,d.a.push({path:"/special-inspect-get-score",query:{specialInspectId:a,checkItemId:i,mode:c}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"routeToOldProblemView",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.special_inspect_id,i=n.checkitem_id,c=n.mode,d.a.push({path:"/special-inspect-get-score-detail",query:{specialInspectId:a,checkItemId:i,mode:c}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:9})}}]),s}(u.a)},ae0f:function(e,t,r){var n={"./mode-1.js":"6268","./mode-10.js":"fe91","./mode-100.js":"266f","./mode-11.js":"3abd","./mode-2.js":"b376","./mode-3.js":"1e33","./mode-4.js":"3c16e","./mode-5.js":"4b2e","./mode-6.js":"fb29","./mode-7.js":"2150","./mode-8.js":"09d6","./mode-9.js":"a96c","./mode-99.js":"391cb"};function a(e){var t=i(e);return r(t)}function i(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id="ae0f"},b09a:function(e,t,r){var n=r("2939");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("65170d73",n,!0,{sourceMap:!1,shadowMode:!1})},b376:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return m}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a044"),d=r("a18c");function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var m=function(e){Object(c.a)(o,e);var t,r=p(o);function o(){return Object(a.a)(this,o),r.apply(this,arguments)}return Object(i.a)(o,[{key:"onClickEndNode",value:function(e,t,r){e.status===l.y?this.routeToOldSetPass(e):e.status===l.z?this.routeToOldProblemView(e):e.status===l.w&&this.routeToOldProblemEdit(e)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"routeToOldSetPass",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.special_inspect_id,i=n.mode,d.a.push({path:"/special-inspect-problem-detail-pass",query:{specialInspectId:a,mode:i}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})}]),o}(u.a)},b464:function(e,t,r){"use strict";r.r(t),t.default={mode:1,name:"可打分，按权重计算总分",navMenu:[{name:"全部问题",code:"allProblem"}],tree:{attrs:[{key:"hasData",name:"有检查数据-末级",type:"boolean",method:"some",pattern:"computed",match:"treeNodeIsEnd",result:'status === "合格" || status === "不合格"'},{key:"hasData",name:"有检查数据-非末级",type:"boolean",method:"some",pattern:"transmit",match:"!treeNodeIsEnd",result:"hasData"},{key:"deduction",name:"扣分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"deduction || 0"},{key:"deduction",name:"扣分，不超总分",type:"number",pattern:"computed",totalMode:1,match:"treeNodeIsFirst",result:"Math.min(deduction || 0, score || 0)"},{key:"problemNum",name:"问题数量-非末级",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"problemNum"}],infos:[{text:"-{{ deduction > score ? score : deduction }}分",color:"red",show:"treeNodeIsFirst && (problemNum || hasData)"},{text:"满分{{ score || 0 }}",color:"gray3",show:{treeNodeIsFirst:!0}},{text:"{{ status }}",type:"status",show:{status:"合格"}},{text:"-{{ deduction || 0 }}分",color:"red",show:{status:"不合格"}},{text:"{{ problemNum }}个问题",color:"gray3",show:'!treeNodeIsFirst && treeNodeIsEnd && problemNum && status !== "合格"'}],btns:[{name:"合格",show:'!treeNodeIsFirst && treeNodeIsEnd && !problemNum && status !== "合格"',operate:"change-status",value:"合格"},{name:"扣分",show:'!treeNodeIsFirst && treeNodeIsEnd && !problemNum && status !== "合格"',operate:"route-to-edit",formConfig:[{name:"status",value:"不合格"}]}]},total:{title:"当前综合得分",note:"",calc:[{key:"numerator",name:"得分*权重（分子）",match:"treeNodeIsFirst && hasData",value:"(score - deduction) * weight / 100",text:"{{score - deduction}}*{{weight}}%"},{key:"denominator",name:"权重（分母）",match:"treeNodeIsFirst && hasData",value:"weight / 100",text:"{{weight}}%"}],result:"numerator.value / denominator.value",hasResult:"Boolean(denominator.value)",resultType:"number",formula:"得分=∑（有记录的一级检查项得分*该项权重）/∑（有记录的一级检查项权重）",formulaCalc:"=({{numerator.text}})/({{denominator.text}})={{result}}",formulaText:"{{formula}}{{formulaCalc}}"},detailEditForm:[{name:"deduction",label:"倒扣分"}],detailViewForm:[],problemForm:[]}},b48c:function(e,t,r){"use strict";r.r(t),t.default={mode:100,name:"组合嵌套模板",totalMode:"batch.template_extension.total_score_algorithm",defaultTotalMode:1,tree:{attrs:[{key:"algorithm",name:"当前层级算法",pattern:"computed",match:"template_mode === 100",result:"template_extension && template_extension.total_score_algorithm || 1"},{key:"scoreWeightSum",name:"子级“得分*权重”总和",type:"number",pattern:"transmit",match:"template_mode === 100",filter:"hasVal(score)",result:"parseFloat(score) / 100 * parseFloat(weight) / 100"},{key:"scoreWeightSumText",name:"子级“得分*权重”总和，文本",type:"string",pattern:"transmit",match:"template_mode === 100",filter:"hasVal(score)",result:"{{percent(parseFloat(score) / 100, 2)}} * {{weight}}%"},{key:"weightSum",name:"子级“权重”总和",type:"number",pattern:"transmit",match:"template_mode === 100 && algorithm === 2",filter:"hasVal(score)",result:"parseFloat(weight) / 100"},{key:"weightSumText",name:"子级“权重”总和，文本",type:"string",pattern:"transmit",match:"template_mode === 100 && algorithm === 2",filter:"hasVal(score)",result:"{{weight}}%"},{key:"score",name:"当前层级得分-加权",pattern:"computed",match:"template_mode === 100 && algorithm === 1",result:"percent(scoreWeightSum, 2)"},{key:"score",name:"当前层级得分-加权平均",pattern:"computed",match:"template_mode === 100 && algorithm === 2",result:"percent(scoreWeightSum / weightSum, 2)"},{key:"score",name:"得分，百分比显示规范",pattern:"computed",match:'template_mode !== 100 && hasVal(score) && socre.substr(-1) === "%"',result:"percent(parseFloat(score) / 100, 2)"},{key:"formula",name:"得分公式-加权",type:"string",pattern:"computed",match:"template_mode === 100 && algorithm === 1",result:"得分=组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n"},{key:"formulaClac",name:"得分公式-加权，计算过程",type:"string",pattern:"computed",match:"template_mode === 100 && algorithm === 1 && hasVal(score)",result:"={{scoreWeightSumText}}={{score}}"},{key:"formula",name:"得分公式-加权平均",type:"string",pattern:"computed",match:"template_mode === 100 && algorithm === 2",result:"得分=（组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n）/（权重1+权重2+...+权重n）"},{key:"formulaClac",name:"得分公式-加权平均，计算过程",type:"string",pattern:"computed",match:"template_mode === 100 && algorithm === 2 && hasVal(score)",result:"=({{scoreWeightSumText}})/{{weightSumText}}={{score}}"}]},total:[{totalMode:1,title:"总得分",calc:[{key:"scoreWeightSum",name:"得分*权重总和",match:"treeNodeIsFirst && hasVal(score)",value:"parseFloat(score) / 100 * parseFloat(weight) / 100",text:"{{percent(parseFloat(score) / 100, 2)}} * {{weight}}%"},{key:"doneCount",name:"完成检查的数量",match:"treeNodeIsFirst && hasVal(score)",value:"1"}],result:"scoreWeightSum.value",hasResult:"Boolean(doneCount)",resultType:"percent",formula:"得分=组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n",formulaCalc:"={{scoreWeightSum.text}}={{result}}",formulaText:"{{formula}}{{formulaCalc}}"},{totalMode:2,title:"总得分",calc:[{key:"scoreWeightSum",name:"得分*权重总和",match:"treeNodeIsFirst && hasVal(score)",value:"parseFloat(score) / 100 * parseFloat(weight) / 100",text:"{{percent(parseFloat(score) / 100, 2)}} * {{weight}}%"},{key:"weightSum",name:"权重总和",match:"treeNodeIsFirst && hasVal(score)",value:"parseFloat(weight) / 100",text:"{{weight}}%"},{key:"doneCount",name:"完成检查的数量",match:"treeNodeIsFirst && hasVal(score)",value:"1"}],result:"scoreWeightSum.value / weightSum.value",hasResult:"Boolean(doneCount)",resultType:"percent",formula:"得分=（组合评分表1*权重1+组合评分表2*权重2+...+组合评分表n*权重n）/（权重1+权重2+...+权重n）",formulaCalc:"=({{scoreWeightSum.text}})/({{weightSum.text}})={{result}}",formulaText:"{{formula}}{{formulaCalc}}"}]}},bfb1:function(e,t,r){"use strict";r.r(t),t.default={mode:2,name:"无打分，仅记录是否合格，计算合格率",tree:{attrs:[{key:"status",name:"草稿状态处理，不合格的草稿状态保存在 problem，没有存在检查项",type:"string",pattern:"computed",match:'treeNodeIsEnd && status === "未设置" && problem_id',result:"草稿"},{key:"qualifiedNum",name:"合格的数量-末级",type:"number",pattern:"computed",match:"treeNodeIsEnd",result:'status === "合格" ? 1 : 0'},{key:"qualifiedNum",name:"合格的数量-非末级",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"qualifiedNum"},{key:"unqualifiedNum",name:"不合格的数量",type:"number",pattern:"computed",match:"treeNodeIsEnd",result:'status === "不合格" ? 1 : 0'},{key:"unqualifiedNum",name:"不合格的数量",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"unqualifiedNum"}],infos:[{text:"{{ unqualifiedNum || 0 }}项不合格",color:"gray3",show:{treeNodeIsFirst:!0}},{text:"{{ status }}",type:"status",show:'status !== "未设置" && status !== "已甩项"'},{text:"{{ status }}",type:"status",show:'!editable && status === "已甩项"'}],btns:[{name:"登记",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"未设置"},operate:"route-to-edit"},{name:"甩项",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"未设置"},operate:"change-status",value:"已甩项",tips:"甩项成功"},{name:"取消甩项",show:{treeNodeIsFirst:!1,treeNodeIsEnd:!0,status:"已甩项"},operate:"change-status",value:"未设置",tips:"取消甩项"}]},total:{title:"当前合格率",note:"{{ unqualifiedNum.value }}项不合格",calc:[{key:"qualifiedNum",name:"合格项总数",match:"treeNodeIsFirst",value:"qualifiedNum",text:"{{qualifiedNum}}"},{key:"unqualifiedNum",name:"不合格项数",match:"treeNodeIsFirst",value:"unqualifiedNum",text:"{{unqualifiedNum}}"}],result:"Boolean(qualifiedNum.value + unqualifiedNum.value) ? qualifiedNum.value / (qualifiedNum.value + unqualifiedNum.value) : 0",hasResult:'batch.status === "检查完毕" ? true : Boolean(qualifiedNum.value + unqualifiedNum.value)',resultType:"percent",formula:"合格率=合格项总数/（合格项数+不合格项数）*100%",formulaCalc:"={{qualifiedNum.value}}/{{qualifiedNum.value + unqualifiedNum.value}}*100%={{result}}",formulaText:"{{formula}}{{formulaCalc}}"},detailEditForm:[{name:"deduction",display:!1,relations:[]}],finishBatchCheck:[{isFilterFirst:!0,statusTotalConfig:[{status:"未设置",key:"a"},{status:"草稿",key:"b"}],match:"a + b > 0",msg:"有未检查的检查项，请检查完之后重试"}],detailViewForm:[],problemForm:[]}},c070:function(e,t,r){var n=r("574c");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("35590dcb",n,!0,{sourceMap:!1,shadowMode:!1})},c1d9:function(e,t,r){"use strict";r.r(t),t.default={mode:11,name:"观感效果",navMenu:[{name:"全部问题",code:"allProblem"}],detailEditForm:[{name:"rule",display:!0}],detailViewForm:[{name:"rule",display:!0}]}},c599:function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .title[data-v-174bb60e]{padding:10px 15px;line-height:26px;font-size:16px;color:#333;font-weight:500;background-color:#fff}.zjapp .rule[data-v-174bb60e]{padding:13px 15px;line-height:20px;font-size:14px;color:#999;background-color:#fff}[data-v-174bb60e] .item-textarea textarea{min-height:130px}.zjapp .problem-list-title[data-v-174bb60e]{padding:13px 15px;line-height:20px;font-size:14px;color:#666}.zjapp .tips-box[data-v-174bb60e]{padding:40px 0;background-color:#fff}",""])},c59b:function(e,t,r){(e.exports=r("690e")(!1)).push([e.i,".zjapp .item-list{position:relative;padding:10px;display:flex;align-items:center;background-color:#fff;min-height:100px}.zjapp .item-list .img{display:block;width:80px;height:80px;background:no-repeat 50%;background-size:cover;background-color:#ddd}.zjapp .item-list .item-list-con{flex:1;padding:0 15px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.zjapp .item-list .item-list-con .title{height:30px;line-height:24px;color:#111;font-size:16px;padding-top:6px;margin:0;padding-right:10px;margin-right:-10px;white-space:nowrap!important;overflow:hidden!important;text-overflow:ellipsis!important;font-weight:400}.zjapp .item-list .item-list-con .title .type-tag{display:inline-block;height:16px;line-height:16px;padding:0 4px;border-radius:2px;border:1px solid #4275e8;color:#4275e8;font-size:12px;zoom:.8;margin:3px 0 0 0;vertical-align:text-top}.zjapp .item-list .item-list-con .text{height:30px;line-height:24px;color:#8c8c8c;padding-bottom:6px;padding-right:11px;margin-right:-10px}.zjapp .item-list .item-list-con .text,.zjapp .item-list .item-list-con .time{font-size:14px;white-space:nowrap!important;overflow:hidden!important;text-overflow:ellipsis!important}.zjapp .item-list .item-list-con .time{height:20px;line-height:20px;color:#b3b3b3;padding-right:11px!important;margin-right:-10px!important}.zjapp .item-list .item-list-con .time .ion{color:#a6a6a6;font-size:20px;font-weight:700;margin-right:5px;vertical-align:top}.zjapp .item-list .item-list-r{width:60px;line-height:18px;text-align:center}.zjapp .item-list .item-list-status{min-width:4em;line-height:18px;text-align:center;white-space:normal;font-size:14px}.zjapp .item-list .icon-unread{display:inline-block;text-align:center;width:12px;height:12px;border-radius:6px;background-color:red}.zjapp .item-list .icon-return,.zjapp .item-list .icon-timeout,.zjapp .item-list .icon-urgent{display:inline-block;width:16px;height:16px;text-align:center;line-height:16px;font-size:12px;font-style:normal;color:#fff;border-radius:2px;-webkit-border-radius:2px;vertical-align:top;margin-top:4px;margin-right:5px}.zjapp .item-list .icon-timeout{background:#964bfe}.zjapp .item-list .icon-return{background:#fe8b00}.zjapp .item-list .icon-urgent{background:#ff3c3d}.zjapp .item-list .icon-return:last-child,.zjapp .item-list .icon-timeout:last-child,.zjapp .item-list .icon-urgent:last-child{margin-right:0}.zjapp .item-list-tip{height:70px;line-height:60px;color:#b4b4b4;text-align:center}.zjapp .status-new-tag{position:absolute;right:0;top:0;width:50px;height:50px;overflow:hidden;z-index:10}.zjapp .status-new-tag>.tag{position:absolute;right:-32px;bottom:22px;height:20px;line-height:20px;width:100px;color:#fff;font-size:12px;transform:rotate(45deg);text-align:center;border-width:1px;border-style:solid}.zjapp .time-status{font-size:10px;color:#999}",""])},d073:function(e,t,r){"use strict";r("3822")},d0fb:function(e,t,r){"use strict";(function(e){var n=r("fd50"),a=r("bcc7"),i=r("515e"),c=r("e89f"),o=r("07d2"),s=r("7bac"),u=r("a7c3"),l=r("4360");t.a={name:"CheckGuideList",components:{Item:o.a},mixins:[c.a],store:l.a,props:{data:{type:String,default:""}},data:function(){return{show:!1,isLoading:!0,listData:[],module:"",itemId:"",batchId:"",sectionId:"",options:""}},computed:{moduleAttribute:function(){return this.$store.state.global.moduleAttribute}},mounted:function(){this.data=[]},methods:{openPopup:function(t){var r,a=this;for(var i in this.value=!0,this.show=!0,this.module=t.module,this.itemId=t.itemId,this.batchId=t.batchId,this.sectionId=t.sectionId,this.options=t.options,this.$emit("open"),t)this[i]=t[i];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module];var c=!1;e.isEmpty(this.itemId)?!e.isEmpty(this.checkType)&&e.isEmpty(this.sectionId)?r=this.initByType():e.isEmpty(this.batchId)?e.isEmpty(this.options)?e.isEmpty(this.sectionId)?r=n.a.when():(c=!0,r=this.initByBidsection()):r=this.initByOptions():r=this.initByBatch():r=this.initById(),this.isLoading=!0,r.then((function(t){var r=a.moduleAttribute[a.module]||{};!e.isEmpty(r)&&r.setUsualItems&&c?s.a.getUserKey(a.mmkvCode()).then((function(e){e=null===e?t:a.mergeArray(a.deepClone(t),e),a.listData=e||[],a.isLoading=!1})):(a.listData=t||[],a.isLoading=!1)}))},mmkvCode:function(){var e=this.moduleAttribute[this.module]||{};return u.a[e.mmkv_item]+"_"+this.sectionId},mergeArray:function(t,r){var n=this;return e.filter(t,(function(t){var a=r[t.id];return e.isEmpty(t.subitem)||(t.subitem=n.mergeArray(t.subitem,r)),!e.isEmpty(a)||"desc"===t.type}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},clickItem:function(e){e.subitem&&e.subitem.length?this.$set(e,"isOpen",!e.isOpen):"special-inspect"===this.module?i.a.openPopup({itemId:e.id,module:this.module}):i.a.openPopup({itemId:e.item_id,module:this.module})},initById:function(){var e=this;if("special-inspect"!==this.module)return a.a.getCheckItem(this.itemId,this.checkType).then((function(t){return t?e.sectionId?a.a.getBidSectionCheckItemListByCode(e.sectionId,t.code):a.a.getCheckItemTreeByCode(t.code):n.a.when()}))},initByType:function(){return a.a.getCheckItemGuidelineList(this.checkType)},initByBatch:function(){return n.a.when()},initByBidsection:function(){return a.a.getBidSectionCheckItemTreeByType(this.sectionId,this.checkType)},initByOptions:function(){return n.a.resolve(this.options)},deepClone:function(e){return JSON.parse(JSON.stringify(e))}}}}).call(this,r("391c"))},d899:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name, sm.measurement_points, sm.problem_points , sm.passrate_mode \n\t\t\tfrom special_inspect si \n\t\t\tleft join special_inspect_measure_item sm on sm.special_inspect_id = si.id \n\t\t\twhere batch_id = '".concat(e,"' \n      order by si.checkitem_code");return s.a.query(t)}}]),r}(r("29f8").a)},dc5e:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return l}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("fc9f");function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var l=function(e){Object(i.a)(r,e);var t=u(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select b.*, b.id as batch_id, \n      st.id as template_id, st.name as template_name, \n      sc.weight as weight\n\t\t\tfrom batch b\n\t\t\tleft join special_inspect_template st on st.id = b.template_id \n\t\t\tleft join special_inspect_template_batch_combo sc on sc.batch_id = b.parent_id and sc.template_id = st.id \n\t\t\twhere b.parent_id = '".concat(e,"' order by sc.sort");return s.a.query(t)}}]),r}(r("29f8").a)},dc98:function(e,t,r){"use strict";r("0732")},dd16:function(e,t,r){"use strict";(function(e){t.a={name:"StatusText",props:{status:{type:String},text:{type:String},extend:{type:Object,default:function(){return{}}}},data:function(){return{classSet:e.extend({"草稿":"color-gray","暂存":"color-gray","检查中":"color-orange","待整改":"color-red","待复验":"color-orange","待验收":"color-red","待报验":"color-red","待申请进场":"color-red","待初验":"color-red","待送检":"color-red","待上传报告":"color-red","待退场":"color-red","待建设单位验收":"color-red","待区域验收":"color-red","供应链退回":"color-red","预创建":"color-status-blue","已提交":"color-green","已整改":"color-green","已验收":"color-green","已通过":"color-green","已退场":"color-gray","已关闭":"color-gray","非正常关闭":"color-gray","已退回":"color-red","已完成":"color-green","已甩项":"color-gray","检查完毕":"color-green","送检合格":"color-green","复验合格":"color-green","验收合格":"color-green","验收不合格":"color-red","未验收":"color-orange","待点评":"color-orange","已点评":"color-green","合格":"color-green","不合格":"color-red","进度正常":"color-green","进度滞后":"color-red","施工单位验收合格":"color-green","监理单位验收合格":"color-green","建设单位验收合格":"color-green","施工单位验收不合格":"color-red","监理单位验收不合格":"color-red","建设单位验收不合格":"color-red"},this.extend)}},mounted:function(){}}}).call(this,r("391c"))},dd2f:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return s}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("76ff"),i=r("4b67"),c=r("d703");function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(c.a)(e);if(t){var a=Object(c.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(i.a)(this,r)}}var s=function(e){Object(a.a)(r,e);var t=o(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return r}(r("29f8").a)},def6:function(e,t,r){"use strict";r.r(t),t.default={mode:10,name:"加/扣分",navMenu:[{name:"全部问题",code:"allProblem",match:"batch.template_extension.score_mode === 2"}],totalMode:"batch.template_extension.score_mode",defaultTotalMode:1,tree:{attrs:[{key:"deduction",name:"扣分/加分",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"deduction || 0"}],infos:[{text:"{{ status }}",type:"status",show:'status === "草稿"'},{totalMode:1,text:'{{deduction ? "+" : ""}}{{ deduction }}',color:"gray",show:"treeNodeIsFirst && !treeNodeIsEnd"},{totalMode:2,text:'{{deduction ? "-" : ""}}{{ deduction }}',color:"gray",show:"treeNodeIsFirst && !treeNodeIsEnd"},{totalMode:1,text:"+{{ deduction }}",color:"green",show:'treeNodeIsEnd && status !== "草稿" && status !== "未设置"'},{totalMode:2,text:"-{{ deduction }}",color:"red",show:'treeNodeIsEnd && status !== "草稿" && status !== "未设置"'}],btns:[{name:"打分",show:{treeNodeIsEnd:!0,status:"未设置"},operate:"route-to-edit"}]},total:[{totalMode:1,title:"当前综合得分",calc:[{key:"deductionSum",name:"加分值之和",match:'treeNodeIsEnd && status !== "未设置" && status !== "草稿"',value:"deduction"},{key:"doneCount",name:"已测的数量",match:'status !== "未设置" && status !== "草稿"',value:"1"}],result:"deductionSum.value",hasResult:'batch.status === "检查完毕" || Boolean(doneCount.value)',resultType:"number",numberFixed:!1,formula:"当前综合得分=加分值之和",formulaCalc:"={{result}}",formulaText:"{{formula}}{{formulaCalc}}"},{totalMode:2,title:"当前综合得分",calc:[{key:"deductionSum",name:"扣分值之和",match:'treeNodeIsEnd && status !== "未设置" && status !== "草稿"',value:"deduction"},{key:"doneCount",name:"已测的数量",match:'status !== "未设置" && status !== "草稿"',value:"1"}],result:"-deductionSum.value",hasResult:'batch.status === "检查完毕" || Boolean(doneCount.value)',resultType:"number",numberFixed:!1,formula:"当前综合得分=扣分值之和",formulaCalc:"={{result}}",formulaText:"{{formula}}{{formulaCalc}}"}]}},e88b:function(e,t,r){"use strict";(function(e){r("5ab2"),r("e10e"),r("6d57"),r("cc57"),r("163d"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("28f8"),o=r("5b5e"),s=r("8693"),u=r("3516"),l=r("6144"),d=r("06f6"),p=r("242b"),m=r("6e1b"),f=r("26e9"),h=r("3bd5"),b=r("2757"),g=r("3122");function _(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function y(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?_(Object(r),!0).forEach((function(t){Object(c.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):_(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var v=h.a.getUser(),k=function(){function t(e,r,n){Object(a.a)(this,t),Object(c.a)(this,"inspectData",{}),Object(c.a)(this,"problemData",{}),Object(c.a)(this,"contractOptions",[]),Object(c.a)(this,"descriptionData",[]),Object(c.a)(this,"batchData",{}),this.data={},this.specialInspectId=e,this.placeId=r,this.problemId=n}var r,h,_,k,x,w,j,O;return Object(i.a)(t,[{key:"getDiagram",value:(O=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=2;break}return e.abrupt("return");case 2:if(r=t.building_id,n=t.unit_id,a=t.floor,!(i=t.room_id)){e.next=7;break}return e.abrupt("return",d.default.getRoomTypeDiagram(i));case 7:if(!n||!a){e.next=11;break}return e.abrupt("return",p.a.getDiagram(r,n,a,1));case 11:if(!a){e.next=13;break}return e.abrupt("return",p.a.getDiagram(r,"",a,2));case 13:case"end":return e.stop()}}),e)}))),function(e){return O.apply(this,arguments)})},{key:"_getProblemData",value:(j=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,l,d,p,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,o.a.getCheckProblemInfo(t);case 2:if(r=e.sent,n=y(y({},r),{},{id:r.id,status:r.status,proj_id:r.proj_id,place:{building_id:r.building_id,unit_id:r.unit,floor:r.floor,room_id:r.room_id,full_name:r.place},bidsection_id:r.bidsection_id,batch_id:r.batch_id,batch_type:r.batch_type,created_by:r.created_by,checkItem:{id:r.item_id,name:r.item_name,full_name:r.item_full_name,parentId:r.item_parent_id},description:{id:r.desc_id,name:r.desc},image_file:JSON.parse(r.image_file||"[]"),remark:r.remark,repair_requirements:r.repair_requirements,level:r.emergency_degree||"一般",deadline:void 0===r.deadline||null===r.deadline?7:Number(r.deadline),building_id:r.building_id,unit:r.unit,floor:r.floor,room_id:r.room_id,place_point:JSON.parse(r.problem_values||"[]"),drawing_file:JSON.parse(r.drawing_file||"[]"),repair_set:r.repair_set,process_mode:r.process_mode,repair:r.repair&&r.repair.id?y({},r.repair):r.repair_set&&r.repair_set.id?y({},r.repair_set):{},repair_image_file:JSON.parse(r.repair_image_file||"[]"),contractor:{id:r.contractor_id,name:r.contractor_name},reinspect_set:r.reinspect_set,cc_set:r.cc_set_array||[],sent_back:r.sent_back&&r.sent_back.id?y({},r.sent_back):{},sent_back_image_file:JSON.parse(r.sent_back_image_file||"[]"),regist:{id:r.regist.id,name:r.regist.name,mobile:r.regist.mobile,is_im_user:r.regist.is_im_user}}),!(a=n&&n.biz_id||"")){e.next=12;break}return e.next=8,s.a.getSpecialInspectData(a);case 8:i=e.sent,this.inspectData=i,n.checkItem={id:i.checkitem_id,name:i.checkitem_name,full_name:i.checkitem_full_name,parentId:i.checkitem_parent_id},n.specialInspectId=i.id;case 12:if(11!==n.mode||n.batch_type!==f.a.SPECIAL_INSPECT_NAME){e.next=22;break}return c=u.a.getBatch(n.batch_id),l=c.root_id||c.parent_id||c.id,d=c.status,e.next=18,u.a.getBatchUsers(l);case 18:p=e.sent,m=(p||[]).map((function(e){return{name:e.name,user_id:e.user_id}})),n.batchStatus=d,n.inspector=m;case 22:return e.abrupt("return",n);case 23:case"end":return e.stop()}}),e,this)}))),function(e){return j.apply(this,arguments)})},{key:"createNewData",value:(w=Object(n.a)(regeneratorRuntime.mark((function e(t,r){var n,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!r){e.next=6;break}return e.next=3,s.a.getPlaceSpecialInspectData(t,r);case 3:this.inspectData=e.sent,e.next=9;break;case 6:return e.next=8,s.a.getSpecialInspectCheckItemDetail(t);case 8:this.inspectData=e.sent;case 9:if(n=this.inspectData,!r){e.next=16;break}return e.next=13,s.a.getBatchPlace(r);case 13:(a=e.sent).building_id&&(i={building_id:a.building_id,unit_id:a.unit,floor:a.floor,room_id:a.room_id,full_name:a.name}),n.defaultPlace=i||l.a.getObject("special-inspect-prolbem-pure-default-place",l.a.level.user)||{};case 16:return e.abrupt("return",{status:"",proj_id:n.proj_id,place:n.defaultPlace||{},batch_id:n.batch_id,batch_type:"专项巡检",checkItem:{id:n.item_id||n.checkitem_id,name:n.item_name||n.checkitem_name,full_name:n.full_name||n.checkitem_full_name},description:{},image_file:[],remark:"",level:"一般",deadline:7,repair_set:{},contractor:{},cc_set:[],reinspect_set:[],bidsection_id:"",building_id:n.defaultPlace&&n.defaultPlace.building_id||"",unit:n.defaultPlace&&n.defaultPlace.unit_id||"",floor:n.defaultPlace&&n.defaultPlace.floor||"",room_id:n.defaultPlace&&n.defaultPlace.room_id||"",place_point:[],deduction:1,redline_deduction:0,biz_id:t,biz_children_id:n.id,created_by:v.user_id,checkitem_extension:JSON.parse(n.checkitem_extension||"{}")});case 17:case"end":return e.stop()}}),e,this)}))),function(e,t){return w.apply(this,arguments)})},{key:"getCheckItemDescList",value:(x=Object(n.a)(regeneratorRuntime.mark((function t(){var r,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=e.get(this.problemData,"checkItem.id"),(n=m.a.getCheckItemDescList(r))&&n.length>0?this.descriptionData=n:this.descriptionData=[];case 3:case"end":return t.stop()}}),t,this)}))),function(){return x.apply(this,arguments)})},{key:"getContractListData",value:(k=Object(n.a)(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s.a.getBatchContractList(t);case 2:r=e.sent,this.contractOptions=r;case 4:case"end":return e.stop()}}),e,this)}))),function(e){return k.apply(this,arguments)})},{key:"getBatchData",value:(_=Object(n.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=2;break}return e.abrupt("return",new Error("缺少批次id"));case 2:return e.next=4,b.b.getBatchById(t);case 4:this.batchData=e.sent;case 5:case"end":return e.stop()}}),e,this)}))),function(e){return _.apply(this,arguments)})},{key:"getProblemData",value:(h=Object(n.a)(regeneratorRuntime.mark((function t(){var r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!this.problemId){t.next=6;break}return t.next=3,this._getProblemData(this.problemId);case 3:this.problemData=t.sent,t.next=9;break;case 6:return t.next=8,this.createNewData(this.specialInspectId,this.placeId);case 8:this.problemData=t.sent;case 9:return t.next=11,this.getDiagram(this.problemData.place);case 11:return r=t.sent,this.problemData.drawing_file=e.isEmpty(r)?[]:[r],t.next=15,this.getCheckItemDescList();case 15:return t.next=17,this.getBatchData(this.problemData.batch_id);case 17:return t.next=19,this.getContractListData(this.problemData.batch_id);case 19:case"end":return t.stop()}}),t,this)}))),function(){return h.apply(this,arguments)})},{key:"getProblemList",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(){var t,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=Array.isArray(this.specialInspectId)?this.specialInspectId:[this.specialInspectId],e.next=3,s.a.getProblemList(t,this.placeId);case 3:return(r=(r=e.sent)||[]).forEach((function(e){e.thumbnail=g.a.getDefaultThumbnailFromList(e.image_file,"专项巡检"),"检查完毕"===e.status&&(e.status="已提交")})),e.abrupt("return",r);case 7:case"end":return e.stop()}}),e,this)}))),function(){return r.apply(this,arguments)})}]),t}();t.a=k}).call(this,r("391c"))},e89f:function(e,t,r){"use strict";var n=r("04f3"),a=r("cf09"),i=r("4360"),c=0;t.a={name:"PopupMixin",data:function(){return{backButtonEvent:null}},watch:{show:function(e){var t=this;if(e){if(this.$nextTick((function(){t.$el&&t.$el.style&&(t.$el.style.zIndex=++a.a.zIndex,c++,i.a.commit("app/SET_HAS_POPUP",!!c))})),!this.backButtonEvent){var r=this.close||this.closePopup;this.backButtonEvent=Object(n.a)(r)}}else--c<0&&(c=0),i.a.commit("app/SET_HAS_POPUP",!!c),this.backButtonEvent&&(Object(n.c)(this.backButtonEvent),this.backButtonEvent=null)}},methods:{}}},e8cb:function(e,t,r){"use strict";r.r(t),t.default={mode:99,name:"组合模板",totalMode:"batch.template_extension.total_score_algorithm",defaultTotalMode:1,total:[{totalMode:1,title:"总得分",note:'{{hasResult ? "" : "未检查完毕"}}',calc:[{key:"scoreWeight",name:"得分*权重总和",match:'status === "检查完毕"',value:"(parseFloat(score) || 0) / 100 * weight / 100",text:'{{(score.includes("%") ? score : score + "%")}}*{{weight}}%'},{key:"finishCount",name:"检查完毕的数量",match:'status === "检查完毕"',value:"1"}],result:"scoreWeight.value",hasResult:"Boolean(finishCount.value)",resultType:"percent",formula:"总分=得分1*权重1+...+得分n*权重n",formulaCalc:"=({{scoreWeight.text}})={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"},{totalMode:2,title:"总得分",note:'{{hasResult ? "" : "未检查完毕"}}',calc:[{key:"scoreWeight",name:"得分*权重总和",match:'status === "检查完毕"',value:"(parseFloat(score) || 0) / 100 * weight / 100",text:'{{(score.includes("%") ? score : score + "%")}}*{{weight}}%'},{key:"weightSum",name:"权重总和",match:'status === "检查完毕"',value:"weight / 100",text:"{{weight}}%"},{key:"finishCount",name:"检查完毕的数量",match:'status === "检查完毕"',value:"1"}],result:"scoreWeight.value / weightSum.value",hasResult:"Boolean(finishCount.value)",resultType:"percent",formula:"总分 = (得分1*权重1+...+得分n*权重n) / (权重1+…+权重n)",formulaCalc:"=({{scoreWeight.text}}) / ({{weightSum.text}})={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"}]}},ebf1:function(e,t,r){"use strict";(function(e){t.a={name:"RadioBox",props:{options:{type:[Array,Object],default:function(){return[]}},value:{type:String,default:""},align:{type:String,default:"r"},customClass:{type:String,default:""}},data:function(){return{}},computed:{optionsType:function(){return e.isArray(this.options)?"array":e.isObject(this.options)?"object":""}},methods:{onSelect:function(e){var t;"array"===this.optionsType?t=this.options[e]:"object"===this.optionsType&&(t=e),this.$emit("input",t),this.$emit("onSelect",t)}}}}).call(this,r("391c"))},f1e4:function(e,t,r){"use strict";(function(e){r("5ab2"),r("e10e");var n=r("28f8"),a=(r("9e76"),r("6d57"),r("9a33"),r("f548"),r("cc57"),r("4ad6")),i=r("e89f"),c=r("bcc7"),o=r("3122"),s=r("6e1b"),u=r("c130"),l=r("0636");function d(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?d(Object(r),!0).forEach((function(t){Object(n.a)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}t.a={name:"CheckGuideDetail",components:{},mixins:[i.a],data:function(){return{show:!1,isLoading:!0,isImageDownloading:!1,title:"",content:[],module:"",itemId:""}},methods:{openPopup:function(t){var r=this;for(var n in this.value=!0,this.show=!0,this.module=t.module,this.itemId=t.itemId,this.$emit("open"),t)this[n]=t[n];this.checkType={check:31,"check-safety":36,"check-quality":37,"measure-v3":41,process:32,"fly-inspect":101}[this.module],this.isLoading=!0,("special-inspect"===this.module?s.a.getSpecialInspectCheckItemDetail(this.itemId):"templet-plan"===this.module?u.a.getTempletDetail(this.itemId):"material"===this.module?l.a.getMaterialDetail(this.itemId):c.a.getCheckItem(this.itemId,this.checkType)).then((function(t){console.log("checkitemData",t),r.checkitemData=t,r.title=t.full_name||t.name,"special-inspect"!==r.module&&"inspect"!==r.module&&"fly-inspect"!==r.module&&"material"!==r.module||(t.content=t.guideline||t.content);var n=t.content?t.content.trim():"";if(n=(n=(n=(n=(n=n.replace(/<\/p><p>/gm,"\n")).replace(/<p>/gm,"")).replace(/<\/p>/gm,"")).replace(/<br>/gm,"")).replace(/<br \/>/gm,""),/(<img[^\>]*>)/gm.test(n)){var a=n.split(/(<img[^\>]*>)/gm);(a=a.filter((function(e){return!!e}))).forEach((function(e,t){e&&!/^\s*\n/.test(e)&&t&&!/\n\s*$/.test(a[t-1])&&(a[t]="\n"+e)})),n=a.join("")}var i=n?n.split("\n"):[];r.content=e.map(i,(function(e,t){var r;if(/<img([\s\S]*)>/gm.test(e)){var n=e.split(/\ssrc="([^"]*)"/gm)[1],a=n?n.match(/[\w|-]{36}/gm)[0]:(new Date).getTime()+"-"+t;r={isImg:!0,src:"",url:n,status:"pending",id:a,ready:!0}}else r={isImg:!1,val:e};return r})),r.downloadImage(),r.isLoading=!1})).catch((function(e){$log.log(e)}))},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},getThumbnail:function(e){return"pending"===e.status?o.a.IMAGE_LOADING:"rejected"===e.status?o.a.IMAGE_RELOAD:"dev"===APP_ENV?e.url:"fulfilled"===e.status?e.src:($log.log("检查指引-显示图片：",e),o.a.IMAGE_PLACEHOLD)},imgError:function(e,t){$log.error("检查指引-加载图片出现错误：",e);var r=p({},e);r.status="rejected",this.$set(this.content,t,r)},downloadImage:function(t){var r=this;t=t?[t]:this.imageList(),e.each(t,(function(t){var n=p({},t),a=e.map(r.content,(function(e){return e.id})).indexOf(t.id);o.a.isNeedDownload(t.url).then((function(e){e?o.a.download(t.url).then((function(e){n.status="fulfilled",n.src=o.a.fixUrl(e),r.$set(r.content,a,n)})).catch((function(e){$log.error("检查指引-下载图片：",e)})):(n.status="fulfilled",n.src=o.a.fixUrl(o.a.getPathFromUrl(t.url)),r.$set(r.content,a,n))}))}))},imageList:function(){return e.filter(this.content,(function(e){return e.isImg}))},imgClick:function(t){var r=this;if("pending"===t.status)return!1;if("rejected"===t.status)return this.downloadImage(t),$log.log("检查指引-点击重新加载-重新下载图片：",t),!1;var n=this.imageList(),i=e.map(n,(function(e){return e.id})).indexOf(t.id);n=e.map(n,(function(e){return r.getThumbnail(e)})),a.a.openImageBrowser(n,i)}}}}).call(this,r("391c"))},f369:function(e,t,r){"use strict";var n=r("fd50"),a=r("bcc7"),i=r("329b"),c=r("d0fb").a,o=(r("9b25"),r("17cc")),s=Object(o.a)(c,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("transition",{attrs:{name:"slide-right"}},[e.show?r("page-content",{attrs:{mode:"dialog",title:"检查指引","on-close":e.closePopup}},[!e.isLoading&&e.listData.length?r("div",{staticClass:"page-scroll"},e._l(e.listData,(function(t,n){return r("div",{key:n},[r("item",{attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(r){e.clickItem(t)}}},[r("div",{staticClass:"item-text fw-b color-blue one-line"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,n){return r("div",{key:n,staticClass:"sublist"},[r("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(r){e.clickItem(t)}}},[r("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,n){return r("div",{key:n,staticClass:"sublist"},[r("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(r){e.clickItem(t)}}},[r("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])]),t.isOpen?e._l(t.subitem,(function(t,n){return r("div",{key:n,staticClass:"sublist"},[r("item",{staticClass:"pl0",attrs:{border:"bottom","icon-right":t.subitem&&t.subitem.length?t.isOpen?"arrow-up":"arrow-down":"arrow-right"},on:{click:function(r){e.clickItem(t)}}},[r("div",{staticClass:"item-text checkitem-list-name"},[e._v(e._s(t.item_name))])])],1)})):e._e()],2)})):e._e()],2)})):e._e()],2)}))):e._e(),r("loading-status",{attrs:{"is-loading":e.isLoading,"is-empty":!e.listData.length,"empty-text":"没有检查项"}})],1):e._e()],1)}),[],!1,null,"74102c05",null).exports,u=!1;u||(u=new(i.default.extend(s))({el:document.createElement("div")}),document.body.appendChild(u.$el));var l=u,d=r("515e"),p=r("91c1").a,m=(r("dc98"),Object(o.a)(p,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return e.show?r("div",{staticClass:"main",style:{top:e.contentTop+"px"}},[r("i",{staticClass:"arrow"}),r("div",{staticClass:"content",on:{click:function(t){return t.target!==t.currentTarget?null:e.closePopup(t)}}},[r("transition",{attrs:{name:"slide-down"},on:{enter:function(t){e.isOpening=!0},"after-enter":function(t){e.isOpening=!1},leave:function(t){e.isClosing=!0},"after-leave":e.afterClose}},[e.showList?r("div",{staticClass:"box",style:{height:e.listHeight+"px"}},e._l(e.data,(function(t,n){return r("div",{key:n,class:{"border-bottom":e.data.length>1,"box-single":1===e.data.length}},[r("div",{staticClass:"detail-hd",class:{"border-bottom":e.data.length<=1,"detail-hd-single":e.data.length<=1},on:{click:function(r){e.toggleItem(t)}}},[e.data.length>1?r("i",{class:{"detail-arrow-right":!t.isOpen,"detail-arrow-down":t.isOpen}}):e._e(),r("div",{staticClass:"detail-title"},[e._v(e._s(t.name))])]),e.data.length<=1||t.isOpen?r("div",{staticClass:"detail-bd",class:{"detail-bd-single":e.data.length<=1}},[e._l(t.textArr,(function(t,n){return r("p",{key:n,staticClass:"text-line"},[e._v("\n              "+e._s(t)+"\n            ")])})),r("item-img-list",{attrs:{editabled:!1},model:{value:t.contentImage,callback:function(r){e.$set(t,"contentImage",r)},expression:"item.contentImage"}}),r("loading-status",{attrs:{"is-empty":!t.textArr.length&&!t.contentImage.length,"empty-text":"PC端未设置检查指引"}})],2):e._e()])}))):e._e()])],1)]):e._e()}),[],!1,null,"2cac8864",null).exports),f=!1;f||(f=new(i.default.extend(m))({el:document.createElement("div")}),document.body.appendChild(f.$el));var h=f,b={name:"CheckGuide",components:{},props:{module:{type:String,default:""},mode:{type:String,default:"page"},itemId:{type:String,default:""},itemIds:{type:Array,default:function(){return[]}},batchId:{type:String,default:""},sectionId:{type:String,default:""},options:{type:Array,default:function(){return[]}},optionsPromise:{type:Function,default:function(){}},beforeOpen:{type:Function,default:function(){}}},data:function(){return{isLoading:!1}},methods:{openCheckGuide:function(){var e=this,t=this.beforeOpen&&this.beforeOpen();t instanceof Promise||(t=Promise.resolve(t)),t.then((function(t){!1!==t&&("drop"===e.mode?h.openPopup({itemIds:e.itemIds,el:e.$refs["check-guide-btn"],options:e.options}):("templet-plan"===e.module?n.a.when(!1):e.itemId&&e.sectionId?a.a.hasChildSectionCheckItem(e.itemId,e.sectionId):e.itemId?a.a.hasChildCheckItem(e.itemId):n.a.when(!0)).then((function(t){t?l.openPopup({module:e.module,itemId:e.itemId,batchId:e.batchId,sectionId:e.sectionId,options:e.options}):d.a.openPopup({itemId:e.itemId,module:e.module})})))}))}}},g=Object(o.a)(b,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{ref:"check-guide-btn",staticClass:"header-btn",on:{click:function(t){e.openCheckGuide()}}},[r("icon",{attrs:{name:"nav-info"}})],1)}),[],!1,null,null,null);t.a=g.exports},f6b4f:function(e,t,r){"use strict";r.r(t),t.default={mode:7,name:"实测实量",totalMode:"batch.template_extension.pass_rate_mode",defaultTotalMode:1,tree:{style:'{{batch.status === "检查完毕" ? "finished" : "default"}}',attrs:[{key:"weight",name:"权重",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:"weight || 0",totalMode:3},{key:"measurement_points",name:"实测点数",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:'treeNodeIsEnd && status !== "检查完毕" ? 0 : measurement_points || 0'},{key:"problem_points",name:"问题点数",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",result:'treeNodeIsEnd && status !== "检查完毕" ? 0 : problem_points || 0'},{key:"passrate",name:"合格率",type:"number",pattern:"computed",result:'measurement_points ? (measurement_points - problem_points) / measurement_points : ""'},{key:"passrateWeightSum",name:"合格率*权重 汇总",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",filter:"measurement_points",result:"passrate * (weight || 0) / 100",totalMode:3},{key:"weightSum",name:"权重 汇总",type:"number",pattern:"transmit",match:"!treeNodeIsEnd",filter:"measurement_points",result:"(weight || 0) / 100",totalMode:3}],notes:[{text:"({{ weight || 0 }}%)",color:"black",show:"treeNodeIsFirst",totalMode:2},{text:"({{ weight || 0 }}%)",color:'{{batch.status === "检查中" || treeNodeIsFirst ? "black" : "gray"}}',totalMode:3}],infos:[{text:"{{ percent(passrate, 2) }}",color:'{{batch.status === "检查中" ? "gray" : "black"}}',show:"treeNodeIsFirst",totalMode:1},{text:"{{ percent(passrate, 2) }}",color:'{{batch.status === "检查中" ? "gray" : "black"}}',show:"treeNodeIsFirst",totalMode:2},{text:"{{ percent(passrateWeightSum / weightSum, 2) }}",color:'{{batch.status === "检查中" ? "gray" : "black"}}',show:"treeNodeIsFirst && measurement_points",totalMode:3},{text:"暂存",color:"orange",show:'treeNodeIsEnd && status === "检查中"'},{text:"{{percent(passrate, 2)}}",color:'{{batch.status === "检查中" ? "gray" : "black"}}',show:'treeNodeIsEnd && status === "检查完毕"'}]},total:[{totalMode:1,title:'{{batch.status === "检查中" ? "当前" : ""}}合格率',calc:[{key:"measurement_points",name:"总实测点数",match:'treeNodeIsEnd && status === "检查完毕"',value:"measurement_points",text:"{{measurement_points}}"},{key:"qualified_points",name:"总合格点数",match:'treeNodeIsEnd && status === "检查完毕"',value:"measurement_points - problem_points",text:"{{measurement_points - problem_points}}"}],result:"qualified_points.value / measurement_points.value",hasResult:"Boolean(measurement_points.value)",resultType:"percent",formula:"总合格率=总合格点数/总实测点数*100%",formulaCalc:"={{qualified_points.value}}/{{measurement_points.value}}*100%={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"},{totalMode:2,title:'{{batch.status === "检查中" ? "当前" : ""}}合格率',calc:[{key:"passrateWeightSum",name:"一级检查项合格率*权重和",match:"treeNodeIsFirst && measurement_points",value:"passrate * (weight || 0) / 100",text:"{{percent(passrate, 2)}}*{{weight || 0}}%"},{key:"weightSum",name:"一级检查项权重总和",match:"treeNodeIsFirst && measurement_points",value:"(weight || 0) / 100",text:"{{weight || 0}}%"}],result:"passrateWeightSum.value / weightSum.value",hasResult:"Boolean(weightSum.value)",resultType:"percent",formula:"总合格率 = ( 一级检查项1合格率*一级检查项1权重+一级检查项2合格率*一级检查项2权重+...+一级检查项n合格率*一级检查项n权重) / (一级检查项1权重+一级检查项2权重+...+一级检查项n权重)",formulaCalc:"=({{passrateWeightSum.text}})/({{weightSum.text}})={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"},{totalMode:3,title:'{{batch.status === "检查中" ? "当前" : ""}}合格率',calc:[{key:"passrateWeightSum",name:"末级检查项合格率*权重和",match:"treeNodeIsEnd && measurement_points",value:"passrate * (weight || 0) / 100",text:"{{percent(passrate, 2)}}*{{ (weight || 0)}}%"},{key:"weightSum",name:"末级检查项权重总和",match:"treeNodeIsEnd && measurement_points",value:"(weight || 0) / 100",text:"{{ (weight || 0)}}%"}],result:"passrateWeightSum.value / weightSum.value",hasResult:"Boolean(weightSum.value)",resultType:"percent",formula:"总合格率 = ( 末级检查项1合格率*末级检查项1权重+末级检查项2合格率*末级检查项2权重+...+末级检查项n合格率*末级检查项n权重) / (末级检查项1权重+末级检查项2权重+...+末级检查项n权重)",formulaCalc:"=({{passrateWeightSum.text}})/({{weightSum.text}})={{result}}",formulaText:"{{formula}}\n{{formulaCalc}}"}],finishBatchCheck:[{isFilterFirst:!1,statusTotalConfig:[{status:"检查完毕",key:"a"},{status:"不合格",key:"b"}],match:"a <= 0",type:"alert",msg:"至少1项有记录"},{isFilterFirst:!1,statusTotalConfig:[{status:"检查中",key:"a"}],calc:"a > 0",type:"notify",msg:'有<span class="color-orange pl5 pr5">{{a}}</span>项暂存，请先填写完整或删除草稿后再提交'}]}},fa4f:function(e,t,r){"use strict";var n=r("4aef"),a=r("967a"),i={name:"ItemList",components:{StatusText:n.a},props:{img:{type:String,default:""},title:{type:String,default:""},detail:{type:String,default:""},footer:{type:String,default:""},status:{type:String,default:""},isShowNewStatus:{type:Boolean,default:!1},statusText:{type:String,default:""},statusClassSet:{type:Object,default:function(){return{}}},typeTag:{type:String,default:""},isUnread:{type:Boolean,default:!1},isTimeout:{type:Boolean,default:!1},isUrgent:{type:Boolean,default:!1},isReturn:{type:Boolean,default:!1},repairDeadline:{type:String,default:null}},data:function(){return{repairDeadlineStatus:a.a.REPAIR_DEADLINE_STATUS.status}},computed:{bgNewClass:function(){return{"草稿":"bg-gray7 b-color","暂存":"bg-gray b-color","检查中":"bg-orange b-color","待整改":"bg-red2 b-color ","待复验":"bg-purple b-color","待验收":"bg-red b-color","待报验":"bg-red b-color","待申请进场":"bg-red b-color","待初验":"bg-red b-color","待送检":"bg-red b-color","待上传报告":"bg-red b-color","待退场":"bg-red b-color","待建设单位验收":"bg-red b-color","待区域验收":"bg-red b-color","已提交":"bg-green b-color","已整改":"bg-green b-color","已验收":"bg-green b-color","已通过":"bg-green2 b-color","已退场":"bg-gray b-color","已关闭":"bg-gray7 b-color","非正常关闭":"bg-gray b-color","已退回":"bg-red b-color","已完成":"bg-green b-color","已甩项":"bg-gray b-color","检查完毕":"bg-green b-color","送检合格":"bg-green b-color","复验合格":"bg-green b-color","验收合格":"bg-green b-color","验收不合格":"bg-red b-color","未验收":"bg-orange b-color","待点评":"bg-orange b-color","已点评":"bg-green b-color","合格":"bg-green b-color","不合格":"bg-red b-color","进度正常":"bg-green2 b-color","进度滞后":"bg-red2 b-color","施工单位验收合格":"bg-green b-color","监理单位验收合格":"bg-green b-color","建设单位验收合格":"bg-green b-color","施工单位验收不合格":"bg-red b-color","监理单位验收不合格":"bg-red b-color","建设单位验收不合格":"bg-red b-color"}}},activated:function(){}},c=(r("19a9"),r("17cc")),o=Object(c.a)(i,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",e._g({staticClass:"item-list border-bottom"},e.$listeners),[e.isShowNewStatus?r("div",{staticClass:"status-new-tag"},[r("div",{staticClass:"tag",class:e.bgNewClass[e.status]},[e._v("\n      "+e._s(e.status)+"\n    ")])]):e._e(),e.img?r("div",{staticClass:"img",style:{"background-image":"url("+e.img+")"}}):e._e(),r("div",{staticClass:"item-list-con"},[r("h2",{staticClass:"title"},[e.isUnread?r("i",{staticClass:"icon-unread"}):e._e(),e.isTimeout?r("i",{staticClass:"icon-timeout"},[e._v("\n        超\n      ")]):e._e(),e.isUrgent?r("i",{staticClass:"icon-urgent"},[e._v("\n        急\n      ")]):e._e(),e.isReturn?r("i",{staticClass:"icon-return"},[e._v("\n        退\n      ")]):e._e(),e.$slots.title?e._t("title"):[e.typeTag?r("span",{staticClass:"type-tag"},[e._v(e._s(e.typeTag))]):e._e(),e._v("\n        "+e._s(e.title||"")+"\n      ")]],2),r("p",{staticClass:"text"},[e._v(e._s(e.detail||""))]),e.$slots.footer?e._t("footer"):r("p",{staticClass:"time",domProps:{innerHTML:e._s(e.footer||"")}})],2),e.status&&!e.isShowNewStatus?r("div",{staticClass:"item-list-status"},[r("status-text",{attrs:{status:e.status,text:e.statusText,extend:e.statusClassSet}}),e.repairDeadline&&e.repairDeadlineStatus.includes(e.status)?r("p",{staticClass:"time-status"},[e._v("\n      "+e._s(e._f("timeStatus")(e.repairDeadline))+"\n    ")]):e._e()],1):e._e()])}),[],!1,null,null,null);t.a=o.exports},fb29:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return d}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703"),s=r("937e"),u=r("a18c");function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var d=function(e){Object(i.a)(r,e);var t=l(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"onClickEndNode",value:function(e,t,r){e.problem_id&&this.routeToOldProblemDetail(e)}},{key:"routeToEdit",value:function(e){u.a.push({path:"/special-inspect-contract-problem-detail",query:{bizId:e.id,type:0}})}},{key:"routeToView",value:function(e){this.routeToOldProblemDetail(e)}},{key:"routeToOldProblemDetail",value:function(e){u.a.push({path:"/special-inspect-contract-problem-detail",query:{problemId:e.problem_id}})}},{key:"changeSpecialInspectStatus",value:function(e){u.a.push({path:"/special-inspect-contract-problem-detail",query:{bizId:e.id,type:1}})}},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:6})}}]),r}(s.a)},fd1b:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return u}));r("2b45"),r("fc58");var n=r("0e4d"),a=r("94ef"),i=r("76ff"),c=r("4b67"),o=r("d703");function s(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(o.a)(e);if(t){var a=Object(o.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var u=function(e){Object(i.a)(r,e);var t=s(r);function r(){return Object(n.a)(this,r),t.apply(this,arguments)}return Object(a.a)(r,[{key:"getIndexList",value:function(e){var t="select si.*, si.checkitem_name as name,\n\t\t(select id from checkquality_problem cp where cp.biz_id = si.id order by cp.download_time desc limit 1) as problem_id\n\t\tfrom special_inspect si \n\t\twhere si.batch_id = '".concat(e,"' order by si.checkitem_code");return localDB.query(t)}}]),r}(r("29f8").a)},fda1:function(e,t,r){var n=r("19a7");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,r("85cb").default)("cb2469e8",n,!0,{sourceMap:!1,shadowMode:!1})},fe91:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return h}));r("2b45"),r("fc58"),r("6a61");var n=r("2e91"),a=r("0e4d"),i=r("94ef"),c=r("76ff"),o=r("4b67"),s=r("d703"),u=r("937e"),l=r("a18c"),d=r("7cb8"),p=r("e2a7"),m=r("a044");r("264e");function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(s.a)(e);if(t){var a=Object(s.a)(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Object(o.a)(this,r)}}var h=function(e){Object(c.a)(u,e);var t,r,o,s=f(u);function u(){return Object(a.a)(this,u),s.apply(this,arguments)}return Object(i.a)(u,[{key:"onClickEndNode",value:function(e,t,r){this.routeToEdit(e)}},{key:"routeToEdit",value:function(e){this.routeToOldProblemEdit(e)}},{key:"routeToView",value:function(e){this.routeToOldProblemView(e)}},{key:"routeToOldProblemEdit",value:(o=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.batch_id,i=n.special_inspect_id,c=n.checkitem_id,o=n.mode,s=n.root_id,l.a.push({path:"/special-inspect-jfkf-edit",query:{batchId:a,specialInspectId:i,checkItemId:c,mode:o,rootId:s}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return o.apply(this,arguments)})},{key:"routeToOldProblemView",value:(r=Object(n.a)(regeneratorRuntime.mark((function e(t){var r,n,a,i,c,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t&&t.id,e.next=3,this.getOldRouteQuery(r);case 3:n=e.sent,a=n.special_inspect_id,i=n.checkitem_id,c=n.mode,o=n.problem_id,l.a.push({path:"/special-inspect-jfkf-edit",query:{specialInspectId:a,problem_id:o,checkItemId:i,mode:c}});case 6:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"gotoProblemList",value:function(e,t,r){this.gotoOldProblemList({batch_id:e,mode:10})}},{key:"finishBatchConfirm",value:(t=Object(n.a)(regeneratorRuntime.mark((function e(t,r,n){var a,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=Object(d.g)(n,"status",[m.w]),!((i=a[m.w])>0)){e.next=6;break}if(c=p.a.popBox({title:'有<span class="color-orange pl5 pr5">'+i+"</span>项草稿记录未提交，继续操作将清除所有暂存数据，是否正常提交？",cancelText:"取消",okText:"提交"})){e.next=6;break}return e.abrupt("return",c);case 6:return e.abrupt("return",p.a.confirm("请确保所有检查人已上传数据，提交后不可修改，确认提交？"));case 7:case"end":return e.stop()}}),e)}))),function(e,r,n){return t.apply(this,arguments)})}]),u}(u.a)},fe9e:function(e,t,r){"use strict";r("3cd8")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,