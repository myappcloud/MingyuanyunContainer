(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["report-check-quality"],{"1ab4":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .display-flex[data-v-27cb9c5a]{display:-moz-flex;display:flex;-moz-align-items:center;align-items:center;-webkit-box-align:center;-moz-box-align:center;-ms-flex-align:center;-moz-justify-content:center;justify-content:center}.zjapp .flex[data-v-27cb9c5a]{-moz-flex:1;flex:1}.zjapp .align-item-start[data-v-27cb9c5a]{-moz-align-items:flex-start;align-items:flex-start;-webkit-box-align:flex-start;-moz-box-align:flex-start;-ms-flex-align:flex-start;-moz-justify-content:flex-start;justify-content:flex-start}.zjapp .align-item-center[data-v-27cb9c5a]{-moz-align-items:center;align-items:center;-webkit-box-align:center;-moz-box-align:center;-ms-flex-align:center;-moz-justify-content:center;justify-content:center}.zjapp .justify-content-start[data-v-27cb9c5a]{-webkit-box-align:flex-start;-moz-box-align:flex-start;-ms-flex-align:flex-start;-moz-justify-content:flex-start;justify-content:flex-start;-webkit-box-pack:flex-start;-moz-box-pack:flex-start;-ms-flex-pack:flex-start;align-items:flex-start}.zjapp .justify-content-center[data-v-27cb9c5a]{-webkit-box-align:center;-moz-box-align:center;-ms-flex-align:center;-moz-justify-content:center;justify-content:center;-webkit-box-pack:center;-moz-box-pack:center;-ms-flex-pack:center;align-items:center}.zjapp .report-date-item[data-v-27cb9c5a]{padding:0 6px;background-color:#fff;font-size:15px;border:1px solid #d2d2d2;border-radius:4px}.zjapp .report-date-item[data-v-27cb9c5a],.zjapp .report-date-split[data-v-27cb9c5a]{display:inline-block;vertical-align:top;height:30px;line-height:30px;color:#111}.zjapp .report-date-split[data-v-27cb9c5a]{margin:0 5px;font-size:12px}.zjapp .report-date-item-circle[data-v-27cb9c5a]{line-height:26px;padding:0 8px;background-color:#fff;font-size:14px;border:1px solid #d7e0f7;border-radius:14px}.zjapp .report-date-item-circle[data-v-27cb9c5a],.zjapp .report-date-split-circle[data-v-27cb9c5a]{display:inline-block;vertical-align:top;margin-top:3px;height:28px;color:#666}.zjapp .report-date-split-circle[data-v-27cb9c5a]{line-height:28px;font-size:12px}.zjapp .report-check-ytg[data-v-27cb9c5a]{background-color:#34dba6}.zjapp .report-check-dfy[data-v-27cb9c5a]{background-color:#29b992}.zjapp .report-check-dzg[data-v-27cb9c5a]{background-color:#ff8459}.zjapp .report-check-fzcgb[data-v-27cb9c5a]{background-color:#d9d9d9}.zjapp .report-check-title[data-v-27cb9c5a]{position:relative;margin-left:15px;line-height:50px;font-size:16px;color:#111}.zjapp .report-check-title .con-right[data-v-27cb9c5a]{position:absolute;top:0;right:15px;line-height:50px;font-size:16px;color:#999}.zjapp .report-check-data[data-v-27cb9c5a]{padding:15px 50px 0 15px}.zjapp .report-check-total[data-v-27cb9c5a]{padding:21px 0;width:105px;padding-right:15px;text-align:center;color:#000}.zjapp .report-check-total .num[data-v-27cb9c5a]{font-size:30px;line-height:28px}.zjapp .report-check-total .label[data-v-27cb9c5a]{font-size:12px}.zjapp .report-check-dis[data-v-27cb9c5a]{position:relative}.zjapp .report-check-dis .passport[data-v-27cb9c5a]{position:absolute;top:-25px;color:#111;width:100px;text-align:center;margin-left:-50px}.zjapp .report-check-dis .passport .arrowline[data-v-27cb9c5a]{position:absolute;top:20px;left:50%;width:2px;height:20px;margin-left:-1px;background-color:#29b992;border-radius:1px}.zjapp .report-check-dis .dis[data-v-27cb9c5a]{height:10px;overflow:hidden;border-radius:5px}.zjapp .report-check-dis .dis-item[data-v-27cb9c5a]{float:left;height:10px}.zjapp .report-check-dis .dis-empty[data-v-27cb9c5a]{height:10px;border:1px solid #d9d9d9;border-radius:5px}.zjapp .report-check-detail[data-v-27cb9c5a]{padding:0 15px 25px 15px;-moz-align-items:flex-start;align-items:flex-start;-webkit-box-align:flex-start;-moz-box-align:flex-start;-ms-flex-align:flex-start;-moz-justify-content:flex-start;justify-content:flex-start}.zjapp .report-check-detail .flex[data-v-27cb9c5a]:last-child{-moz-flex:1.2;flex:1.2}.zjapp .report-check-detail .num[data-v-27cb9c5a]{color:#111;font-size:18px;line-height:22px}.zjapp .report-check-detail .underline[data-v-27cb9c5a]{margin:0 auto;width:10px;height:3px;border-radius:1.5px}.zjapp .report-check-detail .label[data-v-27cb9c5a]{color:#666;font-size:12px;line-height:18px;padding:2px 0}.zjapp .report-check-ft[data-v-27cb9c5a]{padding:13px 15px 13px 0;line-height:24px;margin-left:15px;font-size:14px}.zjapp .report-check-ft .data-label[data-v-27cb9c5a]{width:80px;color:#8c8c8c}.zjapp .report-check-ft .data-con[data-v-27cb9c5a]{color:#111}.zjapp .report-project-check-option[data-v-27cb9c5a]{padding:10px 15px}.zjapp .item-select-project>div[data-v-27cb9c5a]{pointer-events:none}",""])},"21a6":function(t,e,a){var n=a("1ab4");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,a("85cb").default)("4759ad6e",n,!0,{sourceMap:!1,shadowMode:!1})},"55cd":function(t,e,a){"use strict";a.r(e);var n=a("9897").a,r=(a("ef94"),a("17cc")),i=Object(r.a)(n,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"报表-质量检查"}},[a("scroller",{staticClass:"report-process-accept-wrap",attrs:{"is-empty":t.isLoading||!t.list.length||!!t.errorTips}},[a("item",{staticClass:"bg-sub-theme",attrs:{border:"bottom"}},[a("div",{staticClass:"item-label",staticStyle:{width:"100px"}},[t._v("登记时间")]),a("div",{staticClass:"item-con align-r"},[a("div",{staticClass:"report-date-item",on:{click:function(e){t.selectDate("start")}}},[t._v(t._s(t.dateRange.start))]),a("span",{staticClass:"report-date-split"},[t._v("至")]),a("div",{staticClass:"report-date-item",on:{click:function(e){t.selectDate("end")}}},[t._v(t._s(t.dateRange.end))])])]),a("div",{directives:[{name:"show",rawName:"v-show",value:!t.isLoading,expression:"!isLoading"}]},t._l(t.list,(function(e){return a("div",{key:e.id,staticClass:"list bg-white border-tb mt10",attrs:{"data-track":"报表-质量检查批次列表-查看批次详情"},on:{click:function(a){t.problemList(e)}}},[a("div",{staticClass:"item-base ml15 border-bottom pl0"},[a("div",{staticClass:"item-text pl0 pr10"},[t._v(t._s(e.batch_name))]),a("div",{staticClass:"item-font color-gray"},[t._v("详情")]),a("i",{staticClass:"icon ion-ios-arrow-right"})]),a("div",{staticClass:"report-check-data display-flex"},[a("div",{staticClass:"report-check-total"},[a("p",{staticClass:"num"},[t._v(t._s(e.problems))]),a("p",{staticClass:"label"},[t._v("问题总数")])]),e.problems?a("div",{staticClass:"report-check-dis flex"},[a("div",{staticClass:"passport",style:{left:t.toFixed((e.status["已通过"]+e.status["待复验"])/e.problems*100)+"%"}},[t._v("\n              "+t._s(t.toFixed((e.status["已通过"]+e.status["待复验"])/e.problems*100))+"% 已整改\n              "),a("i",{staticClass:"arrowline"})]),a("div",{staticClass:"dis"},[e.status["已通过"]?a("div",{staticClass:"dis-item report-check-ytg",style:{width:e.status["已通过"]/e.problems*100+"%"}}):t._e(),e.status["待复验"]?a("div",{staticClass:"dis-item report-check-dfy",style:{width:e.status["待复验"]/e.problems*100+"%"}}):t._e(),e.status["待整改"]?a("div",{staticClass:"dis-item report-check-dzg",style:{width:e.status["待整改"]/e.problems*100+"%"}}):t._e(),e.status["非正常关闭"]?a("div",{staticClass:"dis-item report-check-fzcgb",style:{width:e.status["非正常关闭"]/e.problems*100+"%"}}):t._e()])]):t._e(),e.problems?t._e():a("div",{staticClass:"report-check-dis flex"},[a("div",{staticClass:"dis-empty"})])]),a("div",{staticClass:"report-check-detail display-flex align-c"},[a("div",{staticClass:"flex"},[a("p",{staticClass:"num"},[t._v(t._s(e.status["已通过"]))]),a("div",{staticClass:"underline report-check-ytg"}),a("p",{staticClass:"label"},[t._v("已通过"+t._s(t.toFixed(e.status["已通过"]/e.problems*100||0))+"%")])]),a("div",{staticClass:"flex"},[a("p",{staticClass:"num"},[t._v(t._s(e.status["待复验"]))]),a("div",{staticClass:"underline report-check-dfy"}),a("p",{staticClass:"label"},[t._v("待复验"+t._s(t.toFixed(e.status["待复验"]/e.problems*100||0))+"%")])]),a("div",{staticClass:"flex"},[a("p",{staticClass:"num"},[t._v(t._s(e.status["待整改"]))]),a("div",{staticClass:"underline report-check-dzg"}),a("p",{staticClass:"label"},[t._v("待整改"+t._s(t.toFixed(e.status["待整改"]/e.problems*100||0))+"%")])]),a("div",{staticClass:"flex"},[a("p",{staticClass:"num"},[t._v(t._s(e.status["非正常关闭"]))]),a("div",{staticClass:"underline report-check-fzcgb"}),a("p",{staticClass:"label"},[t._v("非正常关闭"+t._s(t.toFixed(e.status["非正常关闭"]/e.problems*100||0))+"%")])])])])}))),a("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.isLoading&&!t.list.length,type:t.errorTips?"error":"report","empty-text":t.errorTips||"没有报表数据"}})],1)],1)}),[],!1,null,"27cb9c5a",null);e.default=i.exports},5685:function(t,e,a){"use strict";(function(t){var n=a("162a"),r=a("6144"),i=a("9cd1"),s=a("da2f"),o=a("c77f");function c(t,e){return t?(t-e)/t*100:0}var l={getProcessCheckNewBuilding:function(t){var e=r.a.getString("reportDateType",r.a.level.user)||"month";return Object(s.d)({proj_id:t,query_type:e})},getProjTotalData:function(){return n.a.request("/report/project-over-view")},getDailyCheckData:function(t,e,a,r,i){var s={proj_id:t,bidsection_id:e,begin_date:a,end_date:r};return i&&(s.module=i),n.a.request("/report/check",s)},getReportCheckList:function(t){return n.a.request("/report/check-batch-problem-list",{batch_id:t.batchId,begin_date:t.dateStart,end_date:t.dateEnd})},getReportCheckTimeoutList:function(t,e,a){return n.a.request("/report/get-over-due-check",{proj_id:t,key:e,page:a,pageSize:15})},getOverDueCheckConfig:function(t){return n.a.request("/report/get-over-due-check-config",{proj_id:t})},getReportCheckDetail:function(t){return n.a.request("/report/check-batch-problem-detail",{id:t})},postReportCheckUpdate:function(t){return n.a.post("/checkquality-comment/upload",{},t)},postReportCheckSendBack:function(t){return n.a.post("/checkquality-comment/send-back",{},t)},measureProjectData:[],waterPercolationData:[],getMeasureData:function(e){return n.a.request("/report/measure",{proj_id:e}).then((function(e){return t.each(e,(function(e){e.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},e.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},e.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(e.buildings,(function(a){a.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},a.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},a.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(a.check_items,(function(n){n.repair_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},n.supervision_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},n.construct_data={measurement_points_num:0,problem_points_num:0,checkitem_num:0,passport:0},t.each(n.children,(function(r){e.repair_data.measurement_points_num+=r.measure_data[0].measurement_points,e.repair_data.problem_points_num+=r.measure_data[0].problem_points,e.repair_data.checkitem_num+=r.measure_data[0].measurement_points?1:0,e.supervision_data.measurement_points_num+=r.measure_data[1].measurement_points,e.supervision_data.problem_points_num+=r.measure_data[1].problem_points,e.supervision_data.checkitem_num+=r.measure_data[1].measurement_points?1:0,e.construct_data.measurement_points_num+=r.measure_data[2].measurement_points,e.construct_data.problem_points_num+=r.measure_data[2].problem_points,e.construct_data.checkitem_num+=r.measure_data[2].measurement_points?1:0,a.repair_data.measurement_points_num+=r.measure_data[0].measurement_points,a.repair_data.problem_points_num+=r.measure_data[0].problem_points,a.repair_data.checkitem_num+=r.measure_data[0].measurement_points?1:0,a.supervision_data.measurement_points_num+=r.measure_data[1].measurement_points,a.supervision_data.problem_points_num+=r.measure_data[1].problem_points,a.supervision_data.checkitem_num+=r.measure_data[1].measurement_points?1:0,a.construct_data.measurement_points_num+=r.measure_data[2].measurement_points,a.construct_data.problem_points_num+=r.measure_data[2].problem_points,a.construct_data.checkitem_num+=r.measure_data[2].measurement_points?1:0,n.repair_data.measurement_points_num+=r.measure_data[0].measurement_points,n.repair_data.problem_points_num+=r.measure_data[0].problem_points,n.repair_data.checkitem_num+=r.measure_data[0].measurement_points?1:0,n.supervision_data.measurement_points_num+=r.measure_data[1].measurement_points,n.supervision_data.problem_points_num+=r.measure_data[1].problem_points,n.supervision_data.checkitem_num+=r.measure_data[1].measurement_points?1:0,n.construct_data.measurement_points_num+=r.measure_data[2].measurement_points,n.construct_data.problem_points_num+=r.measure_data[2].problem_points,n.construct_data.checkitem_num+=r.measure_data[2].measurement_points?1:0,t.each(r.measure_data,(function(t){t.measurement_points?t.passport=(t.measurement_points-t.problem_points)/t.measurement_points*100:t.passport=0}))})),n.repair_data.passport=c(n.repair_data.measurement_points_num,n.repair_data.problem_points_num),n.supervision_data.passport=c(n.supervision_data.measurement_points_num,n.supervision_data.problem_points_num),n.construct_data.passport=c(n.construct_data.measurement_points_num,n.construct_data.problem_points_num)})),a.repair_data.passport=c(a.repair_data.measurement_points_num,a.repair_data.problem_points_num),a.supervision_data.passport=c(a.supervision_data.measurement_points_num,a.supervision_data.problem_points_num),a.construct_data.passport=c(a.construct_data.measurement_points_num,a.construct_data.problem_points_num)})),e.repair_data.passport=c(e.repair_data.measurement_points_num,e.repair_data.problem_points_num),e.supervision_data.passport=c(e.supervision_data.measurement_points_num,e.supervision_data.problem_points_num),e.construct_data.passport=c(e.construct_data.measurement_points_num,e.construct_data.problem_points_num)})),e}))},measureBuildData:{},setMeasureBuildData:function(t){l.measureBuildData=t},getMeasureBuildData:function(e){return t.isEmpty(l.measureBuildData)?l.getMeasureData(e).then((function(t){return t[0]})):Promise.resolve(l.measureBuildData)},getCheckAcceptData:function(t){return n.a.request("/report/check-accept",{proj_id:t})},getCheckAcceptDataOfBuilding:function(t,e,a){return n.a.request("/report/check-accept-detail",{section_id:t,building_id:e,unit:a||""})},getProcessCheckData:function(t,e){return n.a.request("/report/processcheck",{building_id:t,unit:e})},getProcessCheckData2:function(t){return Object(s.g)({building_id:t})},getMaterialData:function(t,e,a){return n.a.request("/report/material",{proj_id:t,begin_date:e,end_date:a})},getProcessAcceptBuilding:function(t){var e=r.a.getString("reportDateType",r.a.level.user)||"month";return Object(o.m)({proj_id:t,query_type:e})},getWaterPercolation:function(t){return n.a.request("/report/close-water-test",{proj_id:t})},getProcessAcceptData:function(t,e,a,n){return Object(o.n)({building_id:t,unit:e,start:a||"",end:n||""})},getProcessAcceptPileItem:function(t){return n.a.request("/report/get-pile-check-items",{bidsection_id:t})},getProcessAcceptPileData:function(t,e){return n.a.request("/report/process-accept-with-pile",{building_id:t,item_id:e})},getMeasureCheckedData:function(){return n.a.request("/report/leader-measure")},getSchedulePlanData:function(){return Object(i.i)()},getSchedulePlanProjectData:function(t){return Object(i.a)({proj_id:t})},getCheckProblemStatisticsData:function(t){return n.a.request("/report/leader-secure",t)},getProcessCheckStatisticsData:function(){return Object(s.k)()},schedulePlanNodeList:function(t){return Object(i.e)({plan_id:t})}};e.a=l}).call(this,a("391c"))},"5e1b":function(t,e,a){"use strict";var n=a("329b"),r=(a("6d57"),a("e10e"),a("6bf2")),i=a.n(r);var s={name:"DatepickerDialog",components:{},mixins:[a("e89f").a],props:{},data:function(){return{show:!1,isLoading:!0,today:"",currentYear:"",currentMonth:"",currentDate:"",yearsList:[],monthsList:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],weeksList:["日","一","二","三","四","五","六"],showYearSelect:!1,showMonthSelect:!1,dayList:[]}},methods:{openPopup:function(t){this.value=!0,this.show=!0,this.from=t.from,this.to=t.to,this.inputDate=i()(t.inputDate).isValid()?i()(i()(t.inputDate).format("YYYY-MM-DD")):i()(i()().format("YYYY-MM-DD")),this.callback=t.callback,this.today=i()(i()().format("YYYY-MM-DD")).valueOf(),this.from?this.fromDate=i()(i()(this.from).format("YYYY-MM-DD")).valueOf():this.fromDate=0,this.to?this.toDate=i()(i()(this.to).format("YYYY-MM-DD")).valueOf():this.toDate=1/0,this.selctedDateEpoch=i()(i()(this.inputDate).format("YYYY-MM-DD")).valueOf(),this.refreshDateList(this.inputDate),this.$emit("open")},closePopup:function(){this.value=!1,this.show=!1,this.$emit("close")},closeSelectList:function(){this.showYearSelect=!1,this.showMonthSelect=!1},prevMonth:function(){this.currentDate=i()(this.currentDate).subtract(1,"month"),this.currentMonth=this.monthsList[this.currentDate.month()],this.currentYear=this.currentDate.year(),this.refreshDateList(this.currentDate)},nextMonth:function(){this.currentDate=i()(this.currentDate).add(1,"month"),this.currentMonth=this.monthsList[this.currentDate.month()],this.currentYear=this.currentDate.year(),this.refreshDateList(this.currentDate)},selectYear:function(){this.showYearSelect=!this.showYearSelect,this.showMonthSelect=!1},setYear:function(t){this.currentYear=t,this.yearChanged(t),this.showYearSelect=!1},selectMonth:function(){this.showYearSelect=!1,this.showMonthSelect=!this.showMonthSelect},setMonth:function(t){this.currentMonth=t,this.monthChanged(t),this.showMonthSelect=!1},dateSelected:function(t){t&&0!==Object.keys(t).length&&(this.selctedDateEpoch=t.epoch,this.callback(this.selctedDateEpoch),this.closePopup())},monthChanged:function(t){var e=this.monthsList.indexOf(t);this.currentDate.month(e),this.refreshDateList(this.currentDate)},yearChanged:function(t){this.currentDate.year(t),this.refreshDateList(this.currentDate)},refreshDateList:function(t){var e=[];this.isLoading=!0,t=i()(i()(t).format("YYYY-MM-DD")),this.currentDate=t,this.currentYear="",this.currentMonth="";var a,n,r=this.currentDate.daysInMonth();this.yearsList=function(t,e){var a=[],n=2015,r=2100;n=t?i()(t).year():n,r=e?i()(e).year():r;for(var s=n;s<=r;s++)a.push(s);return a}(),this.dayList=[];var s=i()(this.currentDate).startOf("month").day();this.firstDayEpoch=i()(this.currentDate).startOf("month").valueOf(),this.lastDayEpoch=i()(this.currentDate).endOf("month").startOf("day").valueOf();for(var o=1;o<=r;o++)n=(a=i()(this.currentDate).date(o)).valueOf()<this.fromDate||a.valueOf()>this.toDate,e.push({date:a.date(),month:a.month(),year:a.year(),day:a.day(),epoch:a.valueOf(),disabled:n}),this.dayList=e;for(var c=0;c<s;c++)this.dayList.unshift({});this.rows=[0,7,14,21,28,35],this.cols=[0,1,2,3,4,5,6],this.currentMonth=this.monthsList[t.month()],this.currentYear=this.currentDate.year(),this.numColumns=7,this.isLoading=!1}}},o=(a("80d8"),a("17cc")),c=Object(o.a)(s,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("transition",{attrs:{name:"slide-right"}},[t.show?a("page-content",{attrs:{mode:"dialog",title:"选择日期","on-close":t.closePopup},on:{click:function(e){t.closeSelectList()}}},[t.isLoading?t._e():a("div",{staticClass:"datepicker-hd"},[a("div",{class:{"datepicker-prev":!0,disabled:t.firstDayEpoch-864e5<t.fromDate},on:{click:t.prevMonth}},[a("icon",{attrs:{name:"arrow-left"}})],1),a("div",{staticClass:"datepicker-hd-center"},[a("div",{staticClass:"datepicker-year",on:{click:function(e){return e.stopPropagation(),t.selectYear(e)}}},[t._v("\n          "+t._s(t.currentYear)+"\n\n          "),a("transition",{attrs:{name:"spread"}},[t.showYearSelect?a("div",{staticClass:"select-list",on:{click:function(t){t.stopPropagation()}}},t._l(t.yearsList,(function(e,n){return a("div",{key:n,class:{"select-item":!0,"item-selected":t.currentYear===e},on:{click:function(a){t.setYear(e)}}},[t._v("\n                "+t._s(e)+"\n              ")])}))):t._e()])],1),a("div",{staticClass:"datepicker-month",on:{click:function(e){e.stopPropagation(),t.selectMonth()}}},[t._v("\n          "+t._s(t.currentMonth)+"\n          "),a("transition",{attrs:{name:"spread"}},[t.showMonthSelect?a("div",{staticClass:"select-list",on:{click:function(t){t.stopPropagation()}}},t._l(t.monthsList,(function(e,n){return a("div",{key:n,class:{"select-item":!0,"item-selected":t.currentMonth===e},on:{click:function(a){t.setMonth(e)}}},[t._v("\n                "+t._s(e)+"\n              ")])}))):t._e()])],1)]),a("div",{class:{"datepicker-next":!0,disabled:t.lastDayEpoch+864e5>t.toDate},on:{click:t.nextMonth}},[a("icon",{attrs:{name:"arrow-right"}})],1)]),t.isLoading?t._e():a("div",{staticClass:"calendar"},[a("div",{staticClass:"weeks-row"},t._l(t.weeksList,(function(e,n){return a("div",{key:n,staticClass:"weeks-cell"},[t._v("\n          "+t._s(e)+"\n        ")])}))),t._l(t.rows,(function(e,n){return a("div",{key:n,staticClass:"date-row"},t._l(t.cols,(function(n,r){return a("div",{key:r,staticClass:"date-cell",class:{"date-cell-selected":t.dayList[e+n]&&t.dayList[e+n].epoch===t.selctedDateEpoch,today:t.dayList[e+n]&&t.dayList[e+n].epoch===t.today,disabled:t.dayList[e+n]&&t.dayList[e+n].disabled},on:{click:function(a){t.dateSelected(t.dayList[e+n])}}},[t._v("\n          "+t._s(t.dayList[e+n]&&t.dayList[e+n].date)+"\n        ")])})))}))],2)]):t._e()],1)}),[],!1,null,"0a266c44",null).exports,l=!1;l||(l=new(n.default.extend(c))({el:document.createElement("div")}),document.body.appendChild(l.$el));e.a=l},"774b":function(t,e,a){"use strict";var n=a("d18d").a,r=(a("b225"),a("17cc")),i=Object(r.a)(n,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?a("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[a("div",{staticClass:"pull-refresh"},[a("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?a("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?a("div",{staticClass:"page-loading"},[a("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[a("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?a("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=i.exports},"80d8":function(t,e,a){"use strict";a("e60b")},9897:function(t,e,a){"use strict";(function(t){a("163d"),a("9e76");var n=a("3e83"),r=a("07d2"),i=a("774b"),s=a("5685"),o=a("5e1b"),c=a("6bf2"),l=a.n(c),u=a("1b7e"),p=a("6144");e.a={name:"ReportCheckQualityProjectIndex",components:{item:r.a,Scroller:i.a},data:function(){return{isLoading:!0,errorTips:"",list:[],dateRange:{start:null,end:null},defaultData:{},bidsection_id:"",module:"check-quality"}},computed:{projectSelected:function(){return this.$store.state.global.currentReportProject}},activated:function(){this.$router.isBack||(this.bidsection_id=this.$route.query.bidsection_id||"",this.startingTime(),this.getReportData())},methods:{getReportData:function(e){var a=this;this.isLoading=!0,this.errorTips="",e=e||this.projectSelected.id,u.a.getHasNetwork().then((function(t){if(!t)return Promise.reject("当前网络无法同步数据")})).then((function(){return s.a.getDailyCheckData(e,a.bidsection_id,a.dateRange.start,a.dateRange.end,a.module).then((function(e){a.list=!t.isEmpty(e)&&e.batch_data?e.batch_data:[],a.isLoading=!1}))})).catch((function(e){a.errorTips=t.isString(e)?e:"获取数据失败",a.list=[],a.isLoading=!1}))},startingTime:function(){var t=this.$route.query,e=t.start_date,a=t.end_date,n=new Date,r=n.getFullYear(),i=r,s=n.getMonth()+1,o=n.getDate(),c=p.a.getString("reportDateType",p.a.level.user),u=l()(r+"-"+s+"-"+o,"YYYY-MM-DD").format("E"),d=l()().subtract(u-1,"days").format("YYYY-MM-DD");o<10&&(o="0"+o),s<10&&(s="0"+s);var h=n.getMonth()+1;0===h&&(h=12,i-=1),h<10&&(h="0"+h),this.defaultData.start="week"===c?d:i+"-"+h+"-01",this.defaultData.end=r+"-"+s+"-"+o,this.dateRange={start:e||this.defaultData.start||("week"===c?d:i+"-"+h+"-01"),end:a||this.defaultData.end||r+"-"+s+"-"+o}},selectDate:function(t){var e,a=this,n={from:"",to:""};"end"===t?(e=this.newDate(this.dateRange.end),n.from=this.newDate(this.dateRange.start)||"",n.to=""):(e=this.newDate(this.dateRange.start),n.from="",n.to=this.newDate(this.dateRange.end)||""),o.a.openPopup({inputDate:e,from:n.from,to:n.to,callback:function(e){"end"===t?(a.dateRange.end=l()(e).format("YYYY-MM-DD"),a.defaultData.end=a.dateRange.end):(a.dateRange.start=l()(e).format("YYYY-MM-DD"),a.defaultData.start=a.dateRange.start),a.getReportData()}})},newDate:function(t){if(!t)return new Date;if("object"===Object(n.a)(t))return t instanceof Date?t:new Date;var e=t.match(/\d+/g);if(e.length<3)return"";for(var a=0;a<e.length;a++)e[a]=parseInt(e[a]);return new Date(e[0],e[1]-1,e[2],e[3]||0,e[4]||0,e[5]||0)},problemList:function(t){var e={batchId:t.batch_id,dateStart:this.dateRange.start,dateEnd:this.dateRange.end,batchName:t.batch_name};this.$router.push({name:"ReportCheckQualityProjectList",query:e})},toFixed:function(t,e){return(t=Number(t)).toFixed(e||1)}}}}).call(this,a("391c"))},"9cd1":function(t,e,a){"use strict";a.d(e,"h",(function(){return s})),a.d(e,"m",(function(){return o})),a.d(e,"g",(function(){return c})),a.d(e,"f",(function(){return l})),a.d(e,"d",(function(){return u})),a.d(e,"l",(function(){return p})),a.d(e,"k",(function(){return d})),a.d(e,"j",(function(){return h})),a.d(e,"b",(function(){return m})),a.d(e,"e",(function(){return f})),a.d(e,"c",(function(){return _})),a.d(e,"i",(function(){return b})),a.d(e,"a",(function(){return g}));var n=a("5e8d"),r=a("162a"),i=a("bcc78");function s(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanTaskInfo.url;return r.a.request(e,t)}))}function o(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanSaveTask.url;return r.a.post(e,null,t)}))}function c(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanPlanList.url;return r.a.request(e,t)}))}function l(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanNodeList.url;return r.a.request(e,t)}))}function u(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanNodeInfo.url;return r.a.request(e,t)}))}function p(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanSaveReport.url;return r.a.post(e,null,t)}))}function d(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanSaveCompleteTime.url;return r.a.post(e,null,t)}))}function h(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanSaveChecker.url;return r.a.post(e,null,t)}))}function m(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanCheckerLogList.url;return r.a.request(e,t)}))}function f(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanNodeLevel.url;return r.a.request(e,t)}))}function _(){return Object(n.a)().then((function(){var t=i.a.schedulePlanCompletedTimeSetting.url;return r.a.request(t)}))}function b(){return Object(n.a)().then((function(){var t=i.a.schedulePlanLeaderSchedulePlan.url;return r.a.request(t)}))}function g(t){return Object(n.a)().then((function(){var e=i.a.schedulePlanGetByFirstProject.url;return r.a.request(e,t)}))}},"9d55":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},b225:function(t,e,a){"use strict";a("ef48")},c77f:function(t,e,a){"use strict";a.d(e,"i",(function(){return o})),a.d(e,"h",(function(){return c})),a.d(e,"a",(function(){return l})),a.d(e,"f",(function(){return u})),a.d(e,"g",(function(){return p})),a.d(e,"e",(function(){return d})),a.d(e,"m",(function(){return h})),a.d(e,"n",(function(){return m})),a.d(e,"b",(function(){return f})),a.d(e,"j",(function(){return _})),a.d(e,"k",(function(){return b})),a.d(e,"c",(function(){return g})),a.d(e,"d",(function(){return v})),a.d(e,"l",(function(){return x})),a.d(e,"o",(function(){return k}));var n=a("5e8d"),r=a("162a"),i=a("bcc78"),s=a("da71");function o(t){return Object(n.a)().then((function(){var e=i.a.commonGetProblemClassTree.url;return r.a.request(e,t)}))}function c(t){return Object(n.a)().then((function(){var e=i.a.pileAcceptGetPileBuildingSummary.url;return r.a.request(e,t)}))}function l(t){return Object(n.a)().then((function(){var e=i.a.pileAcceptGetBidsectionBuildingTree.url;return r.a.request(e,t)}))}function u(){return Object(n.a)().then((function(){var t=i.a.pileAcceptGetPileAcceptItems.url;return r.a.request(t)}))}function p(t){return Object(n.a)().then((function(){var e=i.a.pileAcceptGetPileAcceptList.url;return r.a.request(e,t)}))}function d(t){return Object(n.a)().then((function(){var e=i.a.pileAcceptGetPileAcceptInfo.url;return r.a.request(e,t)}))}function h(t){return Object(n.a)().then((function(){var e=i.a.processAcceptBuilding.url;return r.a.request(e,t)}))}function m(t){return Object(n.a)().then((function(){var e=i.a.processAcceptCollect.url;return r.a.request(e,t)}))}function f(t){return Object(n.a)().then((function(){var e=i.a.processAcceptv3GetBuildingList.url;return r.a.request(e,t)}))}function _(t){return Object(n.a)().then((function(){var e=i.a.processAcceptv3GetProcessAcceptv3List.url;return r.a.request(e,t)}))}function b(t){return Object(n.a)().then((function(){var e=s.a.getReportOrgTree.url;return r.a.request(e,t)}))}function g(t){return Object(n.a)().then((function(){var e=s.a.getHomeReports.url;return r.a.request(e,t)}))}function v(t){return Object(n.a)().then((function(){var e=s.a.getMyReports.url;return r.a.request(e,t)}))}function x(t){return Object(n.a)().then((function(){var e=s.a.getReportPools.url;return r.a.request(e,t)}))}function k(t){return Object(n.a)().then((function(){var e=s.a.saveMyReportsSetting.url;return r.a.post(e,null,t)}))}},cf0d:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'.zjapp .layout-main[data-v-0a266c44] .layout-content{overflow:auto}.zjapp .datepicker-hd[data-v-0a266c44]{display:flex;text-align:center;padding:5px 5px 15px 5px}.zjapp .datepicker-hd-center[data-v-0a266c44]{flex:1;display:flex;padding:10px 5px}.zjapp .datepicker-month[data-v-0a266c44],.zjapp .datepicker-year[data-v-0a266c44]{position:relative;flex:1;border:none;border-bottom:1px solid #4374ea;padding:0;line-height:26px;font-size:14px;text-align:center}.zjapp .datepicker-month[data-v-0a266c44]{margin-left:10px}.zjapp .datepicker-month[data-v-0a266c44]:after,.zjapp .datepicker-year[data-v-0a266c44]:after{position:absolute;top:50%;right:5px;margin-top:-3px;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;content:"";pointer-events:none;color:#4374ea}.zjapp .datepicker-next[data-v-0a266c44],.zjapp .datepicker-prev[data-v-0a266c44]{width:10%;padding:10px 5px;font-size:24px;color:#4374ea}.zjapp .select-list[data-v-0a266c44]{position:absolute;top:27px;left:0;width:100%;max-height:380px;overflow:auto;background-color:#fff;box-shadow:0 0 5px #333}.zjapp .select-item[data-v-0a266c44]{padding:5px;height:38px;line-height:28px}.zjapp .item-selected[data-v-0a266c44]{background-color:#4374ea;color:#fff}.zjapp .weeks-row[data-v-0a266c44]{padding:5px;display:flex}.zjapp .weeks-cell[data-v-0a266c44]{flex:1;line-height:20px;text-align:center;font-size:14px;font-weight:700}.zjapp .date-row[data-v-0a266c44]{padding:0 5px;display:flex}.zjapp .date-cell[data-v-0a266c44]{flex:1;height:50px;line-height:50px;text-align:center;font-size:14px}.zjapp .date-cell-selected[data-v-0a266c44]{background-color:#4374ea;color:#fff;font-weight:700}.zjapp .date-cell.today[data-v-0a266c44]{border:1px solid #4374ea}.zjapp .disabled[data-v-0a266c44]{pointer-events:none;color:#aaa}',""])},d18d:function(t,e,a){"use strict";(function(t){a("2b45");var n,r=a("4360"),i=a("48f4"),s=a("162a"),o=a("e2a7"),c=a("a500"),l=a("6f9e"),u={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return r.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return r.a.state.global.isNumberInputOpen?r.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;l.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var a=e&&e.target,n=a&&a.tagName&&a.tagName.toLowerCase();if("input"===n||"textarea"===n){window.addEventListener("resize",(function e(){var n=a.getBoundingClientRect(),r=t.$el.getBoundingClientRect(),i=n.bottom-r.bottom;i>0&&t.scrollBy(i),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){l.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,a=this.$refs["scroll-warp"].scrollTop,n=this.$refs["scroll-warp"].scrollHeight;if(a+this.$refs["scroll-warp"].clientHeight>=n-5&&!this.loading&&this.hasNext){this.loading=!0;var r=this.$listeners.loadNext();r&&r.then&&"function"==typeof r.then?r.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(u&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,a=t.touches[0].clientY;return Math.abs(a-u.y)>Math.abs(e-u.x)&&Math.abs(a-u.y)>=3?a>u.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(u={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,a=t.touches[0].clientY,n=a-u.y,r=this.getTouchDiretion(t);"down"===r?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(n-u.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===r?this.pullDist>0&&(this.pullDist=u.pullDist-(u.y-a),t.preventDefault()):this.pullDist=u.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(u={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,a=this.pullDist,n=t,r=n-a,i=a;return a===n?Promise.resolve():new Promise((function(t){!function s(){window.requestAnimationFrame((function(){i+=r/6,e.pullDist=i,a<n&&i<n||a>n&&i>n?s():(e.pullDist=n,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=i.default.getCurrentModuleCode(),a=i.default.getCurrentRoute(),n=a.meta&&a.meta.isTodo;if(i.default.isModuleNeedBuilding(e)&&!n){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return c.a.addTrack("公共-手动下拉刷新","",""),s.a.beginManualUpdate(),i.default.checkSync(t).then((function(t){return s.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?o.a.alert("当前网络无法同步数据"):o.a.alert(t),s.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,r=this.getScrollTop(),i=r+t,s=Math.round(a/16.7),o=t/s,c=r,l=n=+new Date;return r===i?Promise.resolve():new Promise((function(t){!function a(){window.requestAnimationFrame((function(){l===n&&(c+=o,e.$refs["scroll-warp"].scrollTop=c,r<i&&c<i||r>i&&c>i?a():(e.$refs["scroll-warp"].scrollTop=i,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,a=this.getScrollTop(),n=t-a;return this.scrollBy(n,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,a=(t=t.$el?t.$el:t).getBoundingClientRect(),n=this.$refs["scroll-warp"].getBoundingClientRect();if(a&&n){var i=document.documentElement.clientHeight-(r.a.state.global.isNumberInputOpen?e:0),s=n.bottom<i?n.bottom:i,o=n.top-a.top,c=a.bottom-s;o>0?this.scrollBy(-o-10):c>0&&this.scrollBy(c+10)}},isCurrent:function(e,a){var n=this;e.length&&t.each(e,(function(t){t._uid===a?n.isCurrKeyboard=!0:n.isCurrent(t.$children,a)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,a("391c"))},e60b:function(t,e,a){var n=a("cf0d");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,a("85cb").default)("1be2b028",n,!0,{sourceMap:!1,shadowMode:!1})},e89f:function(t,e,a){"use strict";var n=a("04f3"),r=a("cf09"),i=a("4360"),s=0;e.a={name:"PopupMixin",data:function(){return{backButtonEvent:null}},watch:{show:function(t){var e=this;if(t){if(this.$nextTick((function(){e.$el&&e.$el.style&&(e.$el.style.zIndex=++r.a.zIndex,s++,i.a.commit("app/SET_HAS_POPUP",!!s))})),!this.backButtonEvent){var a=this.close||this.closePopup;this.backButtonEvent=Object(n.a)(a)}}else--s<0&&(s=0),i.a.commit("app/SET_HAS_POPUP",!!s),this.backButtonEvent&&(Object(n.c)(this.backButtonEvent),this.backButtonEvent=null)}},methods:{}}},ef48:function(t,e,a){var n=a("9d55");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,a("85cb").default)("a1a65c0c",n,!0,{sourceMap:!1,shadowMode:!1})},ef94:function(t,e,a){"use strict";a("21a6")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3JlcG9ydC9jaGVjay1xdWFsaXR5L3Byb2plY3QtaW5kZXgudnVlPzdmNjMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9yZXBvcnQvY2hlY2stcXVhbGl0eS9wcm9qZWN0LWluZGV4LnZ1ZT84MjhiIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvcmVwb3J0L2NoZWNrLXF1YWxpdHkvcHJvamVjdC1pbmRleC52dWU/NGEzOSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3ZpZXdzL3JlcG9ydC9jaGVjay1xdWFsaXR5L3Byb2plY3QtaW5kZXgudnVlPzQzM2YiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy92aWV3cy9yZXBvcnQvY2hlY2stcXVhbGl0eS9wcm9qZWN0LWluZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL3NlcnZpY2UvcmVwb3J0L3JlcG9ydC1zZXJ2aWNlLmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXgudnVlPzJhNTYiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kYXRlcGlja2VyL2luZGV4LnZ1ZT81MmJhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kYXRlcGlja2VyL2luZGV4LmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zY3JvbGxlci9pbmRleC52dWU/ZDk4NCIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2Nyb2xsZXIvaW5kZXgudnVlP2UzNmMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3Njcm9sbGVyL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC52dWU/ZjgyMSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fL3NyYy92aWV3cy9yZXBvcnQvY2hlY2stcXVhbGl0eS9wcm9qZWN0LWluZGV4LnZ1ZSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2FwaS9zY2hlZHVsZS1wbGFuL2luZGV4LmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9zY3JvbGxlci9pbmRleC52dWU/YmZkYSIsIndlYnBhY2s6Ly9fX21vZHVsZV9lbnRyeV96amFwcF9fLy4vc3JjL2NvbXBvbmVudHMvc2Nyb2xsZXIvaW5kZXgudnVlPzk3ZmEiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9hcGkvcmVwb3J0L2luZGV4LmpzIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kYXRlcGlja2VyL2luZGV4LnZ1ZT9mNTZhIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vc3JjL2NvbXBvbmVudHMvc2Nyb2xsZXIvaW5kZXgudnVlIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvY29tcG9uZW50cy9kYXRlcGlja2VyL2luZGV4LnZ1ZT84ODQ2Iiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdXRpbHMvcG9wdXAtbWl4aW4uanMiLCJ3ZWJwYWNrOi8vX19tb2R1bGVfZW50cnlfemphcHBfXy8uL3NyYy9jb21wb25lbnRzL3Njcm9sbGVyL2luZGV4LnZ1ZT81YmFiIiwid2VicGFjazovL19fbW9kdWxlX2VudHJ5X3pqYXBwX18vLi9zcmMvdmlld3MvcmVwb3J0L2NoZWNrLXF1YWxpdHkvcHJvamVjdC1pbmRleC52dWU/NzRhOCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicHVzaCIsImkiLCJjb250ZW50IiwibG9jYWxzIiwiYWRkIiwiZGVmYXVsdCIsImNvbXBvbmVudCIsIl92bSIsInRoaXMiLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsImF0dHJzIiwic3RhdGljQ2xhc3MiLCJpc0xvYWRpbmciLCJsaXN0IiwibGVuZ3RoIiwiZXJyb3JUaXBzIiwic3RhdGljU3R5bGUiLCJfdiIsIm9uIiwiJGV2ZW50Iiwic2VsZWN0RGF0ZSIsIl9zIiwiZGF0ZVJhbmdlIiwic3RhcnQiLCJlbmQiLCJkaXJlY3RpdmVzIiwibmFtZSIsInJhd05hbWUiLCJ2YWx1ZSIsImV4cHJlc3Npb24iLCJfbCIsImJhdGNoIiwia2V5IiwiaWQiLCJwcm9ibGVtTGlzdCIsImJhdGNoX25hbWUiLCJwcm9ibGVtcyIsInN0eWxlIiwibGVmdCIsInRvRml4ZWQiLCJzdGF0dXMiLCJ3aWR0aCIsIl9lIiwiZ2V0UGFzc3BvcnQiLCJtZWFzdXJlbWVudF9wb2ludHNfbnVtIiwicHJvYmxlbV9wb2ludHNfbnVtIiwiZ2V0UHJvY2Vzc0NoZWNrTmV3QnVpbGRpbmciLCJwcm9qSWQiLCJyZXBvcnREYXRlVHlwZSIsImxvY2FsU3RvcmFnZSIsImdldFN0cmluZyIsImxldmVsIiwidXNlciIsImdldEJ1aWxkaW5nTGlzdCIsInByb2pfaWQiLCJxdWVyeV90eXBlIiwiZ2V0UHJvalRvdGFsRGF0YSIsIldlYlNlcnZpY2UiLCJyZXF1ZXN0IiwiZ2V0RGFpbHlDaGVja0RhdGEiLCJiaWRzZWN0aW9uX2lkIiwiYmVnaW5fZGF0ZSIsImVuZF9kYXRlIiwicGFyYW1zIiwiZ2V0UmVwb3J0Q2hlY2tMaXN0IiwicHJvaiIsImJhdGNoX2lkIiwiYmF0Y2hJZCIsImRhdGVTdGFydCIsImRhdGVFbmQiLCJnZXRSZXBvcnRDaGVja1RpbWVvdXRMaXN0IiwicGFnZSIsInBhZ2VTaXplIiwiZ2V0T3ZlckR1ZUNoZWNrQ29uZmlnIiwiZ2V0UmVwb3J0Q2hlY2tEZXRhaWwiLCJwb3N0UmVwb3J0Q2hlY2tVcGRhdGUiLCJwb3N0IiwicG9zdFJlcG9ydENoZWNrU2VuZEJhY2siLCJtZWFzdXJlUHJvamVjdERhdGEiLCJ3YXRlclBlcmNvbGF0aW9uRGF0YSIsImdldE1lYXN1cmVEYXRhIiwidGhlbiIsInJlc3VsdCIsIl8iLCJlYWNoIiwiYmlkIiwicmVwYWlyX2RhdGEiLCJjaGVja2l0ZW1fbnVtIiwicGFzc3BvcnQiLCJzdXBlcnZpc2lvbl9kYXRhIiwiY29uc3RydWN0X2RhdGEiLCJidWlsZGluZ3MiLCJidWlsZCIsImNoZWNrX2l0ZW1zIiwiaXRlbSIsImNoaWxkcmVuIiwic3ViaXRlbSIsIm1lYXN1cmVfZGF0YSIsIm1lYXN1cmVtZW50X3BvaW50cyIsInByb2JsZW1fcG9pbnRzIiwibURhdGEiLCJtZWFzdXJlQnVpbGREYXRhIiwic2V0TWVhc3VyZUJ1aWxkRGF0YSIsImdldE1lYXN1cmVCdWlsZERhdGEiLCJpc0VtcHR5IiwiUHJvbWlzZSIsInJlc29sdmUiLCJnZXRDaGVja0FjY2VwdERhdGEiLCJnZXRDaGVja0FjY2VwdERhdGFPZkJ1aWxkaW5nIiwic2VjdGlvbklkIiwiYnVpbGRpbmdJZCIsInVuaXRJZCIsInNlY3Rpb25faWQiLCJidWlsZGluZ19pZCIsInVuaXQiLCJnZXRQcm9jZXNzQ2hlY2tEYXRhIiwiZ2V0UHJvY2Vzc0NoZWNrRGF0YTIiLCJnZXRJZ25vcmVVbml0TGlzdCIsImdldE1hdGVyaWFsRGF0YSIsImJlZ2luRGF0ZSIsImVuZERhdGUiLCJnZXRQcm9jZXNzQWNjZXB0QnVpbGRpbmciLCJwcm9jZXNzQWNjZXB0TmV3QnVpbGRpbmciLCJnZXRXYXRlclBlcmNvbGF0aW9uIiwiZ2V0UHJvY2Vzc0FjY2VwdERhdGEiLCJwcm9jZXNzQWNjZXB0TmV3Q29sbGVjdCIsImdldFByb2Nlc3NBY2NlcHRQaWxlSXRlbSIsImdldFByb2Nlc3NBY2NlcHRQaWxlRGF0YSIsIml0ZW1JZCIsIml0ZW1faWQiLCJnZXRNZWFzdXJlQ2hlY2tlZERhdGEiLCJnZXRTY2hlZHVsZVBsYW5EYXRhIiwibGVhZGVyU2NoZWR1bGVQbGFuIiwiZ2V0U2NoZWR1bGVQbGFuUHJvamVjdERhdGEiLCJnZXRCeUZpcnN0UHJvamVjdCIsImdldENoZWNrUHJvYmxlbVN0YXRpc3RpY3NEYXRhIiwiZ2V0UHJvY2Vzc0NoZWNrU3RhdGlzdGljc0RhdGEiLCJsZWFkZXJQcm9jZXNzQ2hlY2siLCJzY2hlZHVsZVBsYW5Ob2RlTGlzdCIsInBsYW5JZCIsImdldE5vZGVMZXZlbCIsInBsYW5faWQiLCJjb21wb25lbnRzIiwibWl4aW5zIiwicHJvcHMiLCJkYXRhIiwic2hvdyIsInRvZGF5IiwiY3VycmVudFllYXIiLCJjdXJyZW50TW9udGgiLCJjdXJyZW50RGF0ZSIsInllYXJzTGlzdCIsIm1vbnRoc0xpc3QiLCJ3ZWVrc0xpc3QiLCJzaG93WWVhclNlbGVjdCIsInNob3dNb250aFNlbGVjdCIsImRheUxpc3QiLCJtZXRob2RzIiwib3BlblBvcHVwIiwiZnJvbSIsInRvIiwiaW5wdXREYXRlIiwiY2FsbGJhY2siLCJmcm9tRGF0ZSIsInRvRGF0ZSIsIkluZmluaXR5Iiwic2VsY3RlZERhdGVFcG9jaCIsInJlZnJlc2hEYXRlTGlzdCIsIiRlbWl0IiwiY2xvc2VQb3B1cCIsImNsb3NlU2VsZWN0TGlzdCIsInByZXZNb250aCIsIm1vbnRoIiwieWVhciIsIm5leHRNb250aCIsInNlbGVjdFllYXIiLCJzZXRZZWFyIiwieWVhckNoYW5nZWQiLCJzZWxlY3RNb250aCIsInNldE1vbnRoIiwibW9udGhDaGFuZ2VkIiwiZGF0ZVNlbGVjdGVkIiwic2VsZWN0ZWREYXRlIiwiT2JqZWN0Iiwia2V5cyIsImVwb2NoIiwibW9udGhOdW1iZXIiLCJ0ZW1wRGF0ZSIsImRpc2FibGVkIiwibGFzdERheSIsImRheXNJbk1vbnRoIiwibWluWWVhciIsIm1heFllYXIiLCJnZXRZZWFyc0xpc3QiLCJmaXJzdERheUVwb2NoIiwibGFzdERheUVwb2NoIiwidmFsdWVPZiIsImRhdGUiLCJkYXkiLCJqIiwibW9udGhGaXJzdERheSIsInVuc2hpZnQiLCJyb3dzIiwiY29scyIsIm51bUNvbHVtbnMiLCJjbGFzcyIsInN0b3BQcm9wYWdhdGlvbiIsInllYXJLZXkiLCJtb250aEtleSIsIndlZWtOYW1lIiwicm93IiwiY29sIiwiY29sS2V5IiwiaW5zdGFuY2UiLCJWdWUiLCJleHRlbmQiLCJkaWFsb2ciLCJlbCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsIiRlbCIsInJlZiIsInB1bGxpbmciLCJoYXNOZXh0IiwibnVtYmVyS2V5Ym9hcmRDb3ZlckhlaWdodCIsIm9uU2Nyb2xsIiwib25Ub3VjaHN0YXJ0Iiwib25Ub3VjaG1vdmUiLCJvblRvdWNoZW5kIiwiaGVpZ2h0IiwicHVsbERpc3QiLCJyZWZyZXNoaW5nIiwidXBkYXRlVGltZSIsIl90IiwiJHNsb3RzIiwiZW5kVGV4dCIsIlNjcm9sbGVyIiwiZGVmYXVsdERhdGEiLCJjb21wdXRlZCIsInByb2plY3RTZWxlY3RlZCIsIiRzdG9yZSIsInN0YXRlIiwiZ2xvYmFsIiwiY3VycmVudFJlcG9ydFByb2plY3QiLCJhY3RpdmF0ZWQiLCIkcm91dGVyIiwiaXNCYWNrIiwiJHJvdXRlIiwicXVlcnkiLCJzdGFydGluZ1RpbWUiLCJnZXRSZXBvcnREYXRhIiwiYmVmb3JlTW9udGgiLCJiZWZvcmVZZWFyIiwidHlwZSIsImRlZnVsdERhdGUiLCJuZXdEYXRlIiwicmFuZ2UiLCJEYXRlIiwiYXJyIiwibWF0Y2giLCJwYXJzZUludCIsImJhdGNoTmFtZSIsIm51bSIsIk51bWJlciIsImRpZ2l0cyIsImdldFRhc2tJbmZvIiwiZ2V0SGFzTmV0d29yayIsInVybCIsIkVTQVBJIiwic2NoZWR1bGVQbGFuVGFza0luZm8iLCJzYXZlVGFza1JlcG9ydCIsImFjY2VwdERhdGEiLCJzY2hlZHVsZVBsYW5TYXZlVGFzayIsImdldFBsYW5MaXN0Iiwic2NoZWR1bGVQbGFuUGxhbkxpc3QiLCJnZXROb2RlTGlzdCIsImdldE5vZGVJbmZvIiwic2NoZWR1bGVQbGFuTm9kZUluZm8iLCJzYXZlUmVwb3J0Iiwic2NoZWR1bGVQbGFuU2F2ZVJlcG9ydCIsInNhdmVDb21wbGV0ZVRpbWUiLCJzY2hlZHVsZVBsYW5TYXZlQ29tcGxldGVUaW1lIiwic2F2ZUNoZWNrZXIiLCJzY2hlZHVsZVBsYW5TYXZlQ2hlY2tlciIsImdldENoZWNrZXJMb2dMaXN0Iiwic2NoZWR1bGVQbGFuQ2hlY2tlckxvZ0xpc3QiLCJzY2hlZHVsZVBsYW5Ob2RlTGV2ZWwiLCJnZXRDb21wbGV0ZWRUaW1lU2V0dGluZyIsInNjaGVkdWxlUGxhbkNvbXBsZXRlZFRpbWVTZXR0aW5nIiwic2NoZWR1bGVQbGFuTGVhZGVyU2NoZWR1bGVQbGFuIiwic2NoZWR1bGVQbGFuR2V0QnlGaXJzdFByb2plY3QiLCJnZXRQcm9ibGVtQ2xhc3NUcmVlIiwiY29tbW9uR2V0UHJvYmxlbUNsYXNzVHJlZSIsImdldFBpbGVCdWlsZGluZ1N1bW1hcnkiLCJwaWxlQWNjZXB0R2V0UGlsZUJ1aWxkaW5nU3VtbWFyeSIsImdldEJpZHNlY3Rpb25CdWlsZGluZ1RyZWUiLCJwaWxlQWNjZXB0R2V0Qmlkc2VjdGlvbkJ1aWxkaW5nVHJlZSIsImdldFBpbGVBY2NlcHRJdGVtcyIsInBpbGVBY2NlcHRHZXRQaWxlQWNjZXB0SXRlbXMiLCJnZXRQaWxlQWNjZXB0TGlzdCIsInBpbGVBY2NlcHRHZXRQaWxlQWNjZXB0TGlzdCIsImdldFBpbGVBY2NlcHRJbmZvIiwicGlsZUFjY2VwdEdldFBpbGVBY2NlcHRJbmZvIiwicHJvY2Vzc0FjY2VwdEJ1aWxkaW5nIiwicHJvY2Vzc0FjY2VwdENvbGxlY3QiLCJwcm9jZXNzQWNjZXB0djNHZXRCdWlsZGluZ0xpc3QiLCJnZXRQcm9jZXNzQWNjZXB0djNMaXN0IiwicHJvY2Vzc0FjY2VwdHYzR2V0UHJvY2Vzc0FjY2VwdHYzTGlzdCIsImdldFJlcG9ydE9yZ1RyZWUiLCJBUEkiLCJnZXRIb21lUmVwb3J0cyIsImdldE15UmVwb3J0cyIsImdldFJlcG9ydFBvb2xzIiwic2F2ZU15UmVwb3J0c1NldHRpbmciLCJTdHJpbmciLCJCb29sZWFuIiwiaXNTeW5jIiwibWVtb3J5U2Nyb2xsVG9wIiwia2VlcFNjcm9sbFRvcCIsImhhc1B1bGxEb3duIiwib25QdWxsRG93biIsIkZ1bmN0aW9uIiwibG9hZGluZyIsInNjcm9sbFRvcCIsImlzQ3VycktleWJvYXJkIiwiZ2FwQm90dG9tIiwiYWxsb3dQdWxsRG93biIsIiRsaXN0ZW5lcnMiLCJwdWxsRG93biIsIm1vdW50ZWQiLCIkbmV4dFRpY2siLCJjbGllbnQiLCJkZXN0cm95ZWQiLCJyZXN1bWVTY3JvbGxUb3AiLCIkcmVmcyIsImRlYWN0aXZhdGVkIiwic2Nyb2xsSGVpZ2h0IiwibG9hZE5leHRSZXMiLCJlIiwiZ2V0VG91Y2hEaXJldGlvbiIsIl9zdGFydCIsInRvdWNoZXMiLCJNYXRoIiwiYWJzIiwieSIsIngiLCJjbGllbnRYIiwiY2xpZW50WSIsImRlcmljdGlvbiIsInN0IiwieURpc3QiLCJwcmV2ZW50RGVmYXVsdCIsIm1ha2VQdWxsVG8iLCJyZXMiLCJmaW5hbGx5Iiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY3VycmVudCIsImRpc3QiLCJyZW5kZXIiLCJkYXRhU3luYyIsInNldFRpbWVvdXQiLCJnZXRTY3JvbGxIZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJnZXRTY3JvbGxUb3AiLCJzZXRTY3JvbGxUb3AiLCJzY3JvbGxCeSIsInNjcm9sbFZlcnNpb24iLCJfc2Nyb2xsVmVyc2lvbiIsImZyYW1lRGlzdCIsInNjcm9sbFRvIiwidGltZSIsInNjcm9sbFRvRWxlIiwiZWxCb3VuZGluZyIsInNjcm9sbGVyQm91bmRpbmciLCJ0b3BPdmVyZmxvdyIsImJvdHRvbU92ZXJmbG93IiwiaXNDdXJyZW50IiwiYXJyYXkiLCJ2IiwiX3VpZCIsIm9uTnVtYmVyS2V5Ym9hcmRPcGVuIiwiJGNoaWxkcmVuIiwiaW5wdXQiLCJwb3B1cENvdW50IiwiYmFja0J1dHRvbkV2ZW50Iiwid2F0Y2giLCJ6SW5kZXgiLCJjb250ZXh0Iiwic3RvcmUiLCJjb21taXQiLCJjbG9zZUZuIiwiY2xvc2UiLCJhZGRCYWNrRXZlbnRRdWV1ZSIsImNsZWFyQmFja0J1dHRvbkV2ZW50Il0sIm1hcHBpbmdzIjoiOElBQVVBLEVBQU9DLFFBQVUsRUFBUSxPQUFSLEVBQWlGLElBS3BHQyxLQUFLLENBQUNGLEVBQU9HLEVBQUksa2hKQUFtaEosTSx1QkNGNWlKLElBQUlDLEVBQVUsRUFBUSxRQUNBLGlCQUFaQSxJQUFzQkEsRUFBVSxDQUFDLENBQUNKLEVBQU9HLEVBQUlDLEVBQVMsTUFDN0RBLEVBQVFDLFNBQVFMLEVBQU9DLFFBQVVHLEVBQVFDLFNBRy9CQyxFQURILEVBQVEsUUFBNkZDLFNBQzlGLFdBQVlILEdBQVMsRUFBTSxDQUFDLFdBQVksRUFBTSxZQUFhLEssMkNDUjVFLElDQXlkLEUsVUFBRyxFLHdCQ1F4ZEksRUFBWSxZQUNkLEdGVFcsV0FBYSxJQUFJQyxFQUFJQyxLQUFTQyxFQUFHRixFQUFJRyxlQUFtQkMsRUFBR0osRUFBSUssTUFBTUQsSUFBSUYsRUFBRyxPQUFPRSxFQUFHLGVBQWUsQ0FBQ0UsTUFBTSxDQUFDLE1BQVEsWUFBWSxDQUFDRixFQUFHLFdBQVcsQ0FBQ0csWUFBWSw2QkFBNkJELE1BQU0sQ0FBQyxXQUFXTixFQUFJUSxZQUFjUixFQUFJUyxLQUFLQyxVQUFZVixFQUFJVyxZQUFZLENBQUNQLEVBQUcsT0FBTyxDQUFDRyxZQUFZLGVBQWVELE1BQU0sQ0FBQyxPQUFTLFdBQVcsQ0FBQ0Ys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SixFQUFPRyxFQUFJQyxFQUFTLE1BQzdEQSxFQUFRQyxTQUFRTCxFQUFPQyxRQUFVRyxFQUFRQyxTQUcvQkMsRUFESCxFQUFRLFFBQTBGQyxTQUMzRixXQUFZSCxHQUFTLEVBQU0sQ0FBQyxXQUFZLEVBQU0sWUFBYSxLLGtDQ1I1RSIsImZpbGUiOiJqcy9yZXBvcnQtY2hlY2stcXVhbGl0eS5qcz92MTYwODcxNDQ1MTE5NSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMS4wLjFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnpqYXBwIC5kaXNwbGF5LWZsZXhbZGF0YS12LTI3Y2I5YzVhXXtkaXNwbGF5Oi1tb3otZmxleDtkaXNwbGF5OmZsZXg7LW1vei1hbGlnbi1pdGVtczpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstbW96LWJveC1hbGlnbjpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyOy1tb3otanVzdGlmeS1jb250ZW50OmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS56amFwcCAuZmxleFtkYXRhLXYtMjdjYjljNWFdey1tb3otZmxleDoxO2ZsZXg6MX0uemphcHAgLmFsaWduLWl0ZW0tc3RhcnRbZGF0YS12LTI3Y2I5YzVhXXstbW96LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstd2Via2l0LWJveC1hbGlnbjpmbGV4LXN0YXJ0Oy1tb3otYm94LWFsaWduOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246ZmxleC1zdGFydDstbW96LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS56amFwcCAuYWxpZ24taXRlbS1jZW50ZXJbZGF0YS12LTI3Y2I5YzVhXXstbW96LWFsaWduLWl0ZW1zOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy1tb3otYm94LWFsaWduOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7LW1vei1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9LnpqYXBwIC5qdXN0aWZ5LWNvbnRlbnQtc3RhcnRbZGF0YS12LTI3Y2I5YzVhXXstd2Via2l0LWJveC1hbGlnbjpmbGV4LXN0YXJ0Oy1tb3otYm94LWFsaWduOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246ZmxleC1zdGFydDstbW96LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0Oy13ZWJraXQtYm94LXBhY2s6ZmxleC1zdGFydDstbW96LWJveC1wYWNrOmZsZXgtc3RhcnQ7LW1zLWZsZXgtcGFjazpmbGV4LXN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnR9LnpqYXBwIC5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyW2RhdGEtdi0yN2NiOWM1YV17LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy1tb3otYm94LWFsaWduOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7LW1vei1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LW1vei1ib3gtcGFjazpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS56amFwcCAucmVwb3J0LWRhdGUtaXRlbVtkYXRhLXYtMjdjYjljNWFde3BhZGRpbmc6MCA2cHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2ZvbnQtc2l6ZToxNXB4O2JvcmRlcjoxcHggc29saWQgI2QyZDJkMjtib3JkZXItcmFkaXVzOjRweH0uemphcHAgLnJlcG9ydC1kYXRlLWl0ZW1bZGF0YS12LTI3Y2I5YzVhXSwuemphcHAgLnJlcG9ydC1kYXRlLXNwbGl0W2RhdGEtdi0yN2NiOWM1YV17ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Y29sb3I6IzExMX0uemphcHAgLnJlcG9ydC1kYXRlLXNwbGl0W2RhdGEtdi0yN2NiOWM1YV17bWFyZ2luOjAgNXB4O2ZvbnQtc2l6ZToxMnB4fS56amFwcCAucmVwb3J0LWRhdGUtaXRlbS1jaXJjbGVbZGF0YS12LTI3Y2I5YzVhXXtsaW5lLWhlaWdodDoyNnB4O3BhZGRpbmc6MCA4cHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2ZvbnQtc2l6ZToxNHB4O2JvcmRlcjoxcHggc29saWQgI2Q3ZTBmNztib3JkZXItcmFkaXVzOjE0cHh9LnpqYXBwIC5yZXBvcnQtZGF0ZS1pdGVtLWNpcmNsZVtkYXRhLXYtMjdjYjljNWFdLC56amFwcCAucmVwb3J0LWRhdGUtc3BsaXQtY2lyY2xlW2RhdGEtdi0yN2NiOWM1YV17ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO21hcmdpbi10b3A6M3B4O2hlaWdodDoyOHB4O2NvbG9yOiM2NjZ9LnpqYXBwIC5yZXBvcnQtZGF0ZS1zcGxpdC1jaXJjbGVbZGF0YS12LTI3Y2I5YzVhXXtsaW5lLWhlaWdodDoyOHB4O2ZvbnQtc2l6ZToxMnB4fS56amFwcCAucmVwb3J0LWNoZWNrLXl0Z1tkYXRhLXYtMjdjYjljNWFde2JhY2tncm91bmQtY29sb3I6IzM0ZGJhNn0uemphcHAgLnJlcG9ydC1jaGVjay1kZnlbZGF0YS12LTI3Y2I5YzVhXXtiYWNrZ3JvdW5kLWNvbG9yOiMyOWI5OTJ9LnpqYXBwIC5yZXBvcnQtY2hlY2stZHpnW2RhdGEtdi0yN2NiOWM1YV17YmFja2dyb3VuZC1jb2xvcjojZmY4NDU5fS56amFwcCAucmVwb3J0LWNoZWNrLWZ6Y2diW2RhdGEtdi0yN2NiOWM1YV17YmFja2dyb3VuZC1jb2xvcjojZDlkOWQ5fS56amFwcCAucmVwb3J0LWNoZWNrLXRpdGxlW2RhdGEtdi0yN2NiOWM1YV17cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWxlZnQ6MTVweDtsaW5lLWhlaWdodDo1MHB4O2ZvbnQtc2l6ZToxNnB4O2NvbG9yOiMxMTF9LnpqYXBwIC5yZXBvcnQtY2hlY2stdGl0bGUgLmNvbi1yaWdodFtkYXRhLXYtMjdjYjljNWFde3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjE1cHg7bGluZS1oZWlnaHQ6NTBweDtmb250LXNpemU6MTZweDtjb2xvcjojOTk5fS56amFwcCAucmVwb3J0LWNoZWNrLWRhdGFbZGF0YS12LTI3Y2I5YzVhXXtwYWRkaW5nOjE1cHggNTBweCAwIDE1cHh9LnpqYXBwIC5yZXBvcnQtY2hlY2stdG90YWxbZGF0YS12LTI3Y2I5YzVhXXtwYWRkaW5nOjIxcHggMDt3aWR0aDoxMDVweDtwYWRkaW5nLXJpZ2h0OjE1cHg7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6IzAwMH0uemphcHAgLnJlcG9ydC1jaGVjay10b3RhbCAubnVtW2RhdGEtdi0yN2NiOWM1YV17Zm9udC1zaXplOjMwcHg7bGluZS1oZWlnaHQ6MjhweH0uemphcHAgLnJlcG9ydC1jaGVjay10b3RhbCAubGFiZWxbZGF0YS12LTI3Y2I5YzVhXXtmb250LXNpemU6MTJweH0uemphcHAgLnJlcG9ydC1jaGVjay1kaXNbZGF0YS12LTI3Y2I5YzVhXXtwb3NpdGlvbjpyZWxhdGl2ZX0uemphcHAgLnJlcG9ydC1jaGVjay1kaXMgLnBhc3Nwb3J0W2RhdGEtdi0yN2NiOWM1YV17cG9zaXRpb246YWJzb2x1dGU7dG9wOi0yNXB4O2NvbG9yOiMxMTE7d2lkdGg6MTAwcHg7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLWxlZnQ6LTUwcHh9LnpqYXBwIC5yZXBvcnQtY2hlY2stZGlzIC5wYXNzcG9ydCAuYXJyb3dsaW5lW2RhdGEtdi0yN2NiOWM1YV17cG9zaXRpb246YWJzb2x1dGU7dG9wOjIwcHg7bGVmdDo1MCU7d2lkdGg6MnB4O2hlaWdodDoyMHB4O21hcmdpbi1sZWZ0Oi0xcHg7YmFja2dyb3VuZC1jb2xvcjojMjliOTkyO2JvcmRlci1yYWRpdXM6MXB4fS56amFwcCAucmVwb3J0LWNoZWNrLWRpcyAuZGlzW2RhdGEtdi0yN2NiOWM1YV17aGVpZ2h0OjEwcHg7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlci1yYWRpdXM6NXB4fS56amFwcCAucmVwb3J0LWNoZWNrLWRpcyAuZGlzLWl0ZW1bZGF0YS12LTI3Y2I5YzVhXXtmbG9hdDpsZWZ0O2hlaWdodDoxMHB4fS56amFwcCAucmVwb3J0LWNoZWNrLWRpcyAuZGlzLWVtcHR5W2RhdGEtdi0yN2NiOWM1YV17aGVpZ2h0OjEwcHg7Ym9yZGVyOjFweCBzb2xpZCAjZDlkOWQ5O2JvcmRlci1yYWRpdXM6NXB4fS56amFwcCAucmVwb3J0LWNoZWNrLWRldGFpbFtkYXRhLXYtMjdjYjljNWFde3BhZGRpbmc6MCAxNXB4IDI1cHggMTVweDstbW96LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstd2Via2l0LWJveC1hbGlnbjpmbGV4LXN0YXJ0Oy1tb3otYm94LWFsaWduOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246ZmxleC1zdGFydDstbW96LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS56amFwcCAucmVwb3J0LWNoZWNrLWRldGFpbCAuZmxleFtkYXRhLXYtMjdjYjljNWFdOmxhc3QtY2hpbGR7LW1vei1mbGV4OjEuMjtmbGV4OjEuMn0uemphcHAgLnJlcG9ydC1jaGVjay1kZXRhaWwgLm51bVtkYXRhLXYtMjdjYjljNWFde2NvbG9yOiMxMTE7Zm9udC1zaXplOjE4cHg7bGluZS1oZWlnaHQ6MjJweH0uemphcHAgLnJlcG9ydC1jaGVjay1kZXRhaWwgLnVuZGVybGluZVtkYXRhLXYtMjdjYjljNWFde21hcmdpbjowIGF1dG87d2lkdGg6MTBweDtoZWlnaHQ6M3B4O2JvcmRlci1yYWRpdXM6MS41cHh9LnpqYXBwIC5yZXBvcnQtY2hlY2stZGV0YWlsIC5sYWJlbFtkYXRhLXYtMjdjYjljNWFde2NvbG9yOiM2NjY7Zm9udC1zaXplOjEycHg7bGluZS1oZWlnaHQ6MThweDtwYWRkaW5nOjJweCAwfS56amFwcCAucmVwb3J0LWNoZWNrLWZ0W2RhdGEtdi0yN2NiOWM1YV17cGFkZGluZzoxM3B4IDE1cHggMTNweCAwO2xpbmUtaGVpZ2h0OjI0cHg7bWFyZ2luLWxlZnQ6MTVweDtmb250LXNpemU6MTRweH0uemphcHAgLnJlcG9ydC1jaGVjay1mdCAuZGF0YS1sYWJlbFtkYXRhLXYtMjdjYjljNWFde3dpZHRoOjgwcHg7Y29sb3I6IzhjOGM4Y30uemphcHAgLnJlcG9ydC1jaGVjay1mdCAuZGF0YS1jb25bZGF0YS12LTI3Y2I5YzVhXXtjb2xvcjojMTExfS56amFwcCAucmVwb3J0LXByb2plY3QtY2hlY2stb3B0aW9uW2RhdGEtdi0yN2NiOWM1YV17cGFkZGluZzoxMHB4IDE1cHh9LnpqYXBwIC5pdGVtLXNlbGVjdC1wcm9qZWN0PmRpdltkYXRhLXYtMjdjYjljNWFde3BvaW50ZXItZXZlbnRzOm5vbmV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcHJvamVjdC1pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yN2NiOWM1YSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjQ3NTlhZDZlXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3BhZ2UtY29udGVudCcse2F0dHJzOntcInRpdGxlXCI6XCLmiqXooagt6LSo6YeP5qOA5p+lXCJ9fSxbX2MoJ3Njcm9sbGVyJyx7c3RhdGljQ2xhc3M6XCJyZXBvcnQtcHJvY2Vzcy1hY2NlcHQtd3JhcFwiLGF0dHJzOntcImlzLWVtcHR5XCI6X3ZtLmlzTG9hZGluZyB8fCAhX3ZtLmxpc3QubGVuZ3RoIHx8ICEhX3ZtLmVycm9yVGlwc319LFtfYygnaXRlbScse3N0YXRpY0NsYXNzOlwiYmctc3ViLXRoZW1lXCIsYXR0cnM6e1wiYm9yZGVyXCI6XCJib3R0b21cIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWxhYmVsXCIsc3RhdGljU3R5bGU6e1wid2lkdGhcIjpcIjEwMHB4XCJ9fSxbX3ZtLl92KFwi55m76K6w5pe26Ze0XCIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS1jb24gYWxpZ24tclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicmVwb3J0LWRhdGUtaXRlbVwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2VsZWN0RGF0ZSgnc3RhcnQnKX19fSxbX3ZtLl92KF92bS5fcyhfdm0uZGF0ZVJhbmdlLnN0YXJ0KSldKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwicmVwb3J0LWRhdGUtc3BsaXRcIn0sW192bS5fdihcIuiHs1wiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcInJlcG9ydC1kYXRlLWl0ZW1cIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNlbGVjdERhdGUoJ2VuZCcpfX19LFtfdm0uX3YoX3ZtLl9zKF92bS5kYXRlUmFuZ2UuZW5kKSldKV0pXSksX2MoJ2Rpdicse2RpcmVjdGl2ZXM6W3tuYW1lOlwic2hvd1wiLHJhd05hbWU6XCJ2LXNob3dcIix2YWx1ZTooIV92bS5pc0xvYWRpbmcpLGV4cHJlc3Npb246XCIhaXNMb2FkaW5nXCJ9XX0sX3ZtLl9sKChfdm0ubGlzdCksZnVuY3Rpb24oYmF0Y2gpe3JldHVybiBfYygnZGl2Jyx7a2V5OmJhdGNoLmlkLHN0YXRpY0NsYXNzOlwibGlzdCBiZy13aGl0ZSBib3JkZXItdGIgbXQxMFwiLGF0dHJzOntcImRhdGEtdHJhY2tcIjpcIuaKpeihqC3otKjph4/mo4Dmn6XmibnmrKHliJfooagt5p+l55yL5om55qyh6K+m5oOFXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ucHJvYmxlbUxpc3QoYmF0Y2gpfX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJpdGVtLWJhc2UgbWwxNSBib3JkZXItYm90dG9tIHBsMFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaXRlbS10ZXh0IHBsMCBwcjEwXCJ9LFtfdm0uX3YoX3ZtLl9zKGJhdGNoLmJhdGNoX25hbWUpKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIml0ZW0tZm9udCBjb2xvci1ncmF5XCJ9LFtfdm0uX3YoXCLor6bmg4VcIildKSxfYygnaScse3N0YXRpY0NsYXNzOlwiaWNvbiBpb24taW9zLWFycm93LXJpZ2h0XCJ9KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcInJlcG9ydC1jaGVjay1kYXRhIGRpc3BsYXktZmxleFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicmVwb3J0LWNoZWNrLXRvdGFsXCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOlwibnVtXCJ9LFtfdm0uX3YoX3ZtLl9zKGJhdGNoLnByb2JsZW1zKSldKSxfYygncCcse3N0YXRpY0NsYXNzOlwibGFiZWxcIn0sW192bS5fdihcIumXrumimOaAu+aVsFwiKV0pXSksKGJhdGNoLnByb2JsZW1zKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJyZXBvcnQtY2hlY2stZGlzIGZsZXhcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBhc3Nwb3J0XCIsc3R5bGU6KHtcbiAgICAgICAgICAgICAgICBsZWZ0OiAoKF92bS50b0ZpeGVkKFxuICAgICAgICAgICAgICAgICAgKChiYXRjaC5zdGF0dXNbJ+W3sumAmui/hyddICsgYmF0Y2guc3RhdHVzWyflvoXlpI3pqownXSkgLyBiYXRjaC5wcm9ibGVtcykgKiAxMDBcbiAgICAgICAgICAgICAgICApKSArIFwiJVwiKSxcbiAgICAgICAgICAgICAgfSl9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgIFwiK192bS5fcyhfdm0udG9GaXhlZChcbiAgICAgICAgICAgICAgKChiYXRjaC5zdGF0dXNbJ+W3sumAmui/hyddICsgYmF0Y2guc3RhdHVzWyflvoXlpI3pqownXSkgLyBiYXRjaC5wcm9ibGVtcykgKiAxMDBcbiAgICAgICAgICAgICAgKSkrXCIlIOW3suaVtOaUuVxcbiAgICAgICAgICAgICAgXCIpLF9jKCdpJyx7c3RhdGljQ2xhc3M6XCJhcnJvd2xpbmVcIn0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGlzXCJ9LFsoYmF0Y2guc3RhdHVzWyflt7LpgJrov4cnXSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGlzLWl0ZW0gcmVwb3J0LWNoZWNrLXl0Z1wiLHN0eWxlOih7IHdpZHRoOiAoKChiYXRjaC5zdGF0dXNbJ+W3sumAmui/hyddIC8gYmF0Y2gucHJvYmxlbXMpICogMTAwKSArIFwiJVwiKSB9KX0pOl92bS5fZSgpLChiYXRjaC5zdGF0dXNbJ+W+heWkjemqjCddKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkaXMtaXRlbSByZXBvcnQtY2hlY2stZGZ5XCIsc3R5bGU6KHsgd2lkdGg6ICgoKGJhdGNoLnN0YXR1c1sn5b6F5aSN6aqMJ10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDApICsgXCIlXCIpIH0pfSk6X3ZtLl9lKCksKGJhdGNoLnN0YXR1c1sn5b6F5pW05pS5J10pP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRpcy1pdGVtIHJlcG9ydC1jaGVjay1kemdcIixzdHlsZTooeyB3aWR0aDogKCgoYmF0Y2guc3RhdHVzWyflvoXmlbTmlLknXSAvIGJhdGNoLnByb2JsZW1zKSAqIDEwMCkgKyBcIiVcIikgfSl9KTpfdm0uX2UoKSwoYmF0Y2guc3RhdHVzWyfpnZ7mraPluLjlhbPpl60nXSk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGlzLWl0ZW0gcmVwb3J0LWNoZWNrLWZ6Y2diXCIsc3R5bGU6KHsgd2lkdGg6ICgoKGJhdGNoLnN0YXR1c1sn6Z2e5q2j5bi45YWz6ZetJ10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDApICsgXCIlXCIpIH0pfSk6X3ZtLl9lKCldKV0pOl92bS5fZSgpLCghYmF0Y2gucHJvYmxlbXMpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInJlcG9ydC1jaGVjay1kaXMgZmxleFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGlzLWVtcHR5XCJ9KV0pOl92bS5fZSgpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicmVwb3J0LWNoZWNrLWRldGFpbCBkaXNwbGF5LWZsZXggYWxpZ24tY1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZmxleFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcIm51bVwifSxbX3ZtLl92KF92bS5fcyhiYXRjaC5zdGF0dXNbJ+W3sumAmui/hyddKSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ1bmRlcmxpbmUgcmVwb3J0LWNoZWNrLXl0Z1wifSksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImxhYmVsXCJ9LFtfdm0uX3YoXCLlt7LpgJrov4dcIitfdm0uX3MoX3ZtLnRvRml4ZWQoKGJhdGNoLnN0YXR1c1sn5bey6YCa6L+HJ10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDAgfHwgMCkpK1wiJVwiKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZmxleFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcIm51bVwifSxbX3ZtLl92KF92bS5fcyhiYXRjaC5zdGF0dXNbJ+W+heWkjemqjCddKSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ1bmRlcmxpbmUgcmVwb3J0LWNoZWNrLWRmeVwifSksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImxhYmVsXCJ9LFtfdm0uX3YoXCLlvoXlpI3pqoxcIitfdm0uX3MoX3ZtLnRvRml4ZWQoKGJhdGNoLnN0YXR1c1sn5b6F5aSN6aqMJ10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDAgfHwgMCkpK1wiJVwiKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZmxleFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcIm51bVwifSxbX3ZtLl92KF92bS5fcyhiYXRjaC5zdGF0dXNbJ+W+heaVtOaUuSddKSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ1bmRlcmxpbmUgcmVwb3J0LWNoZWNrLWR6Z1wifSksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImxhYmVsXCJ9LFtfdm0uX3YoXCLlvoXmlbTmlLlcIitfdm0uX3MoX3ZtLnRvRml4ZWQoKGJhdGNoLnN0YXR1c1sn5b6F5pW05pS5J10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDAgfHwgMCkpK1wiJVwiKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZmxleFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcIm51bVwifSxbX3ZtLl92KF92bS5fcyhiYXRjaC5zdGF0dXNbJ+mdnuato+W4uOWFs+mXrSddKSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ1bmRlcmxpbmUgcmVwb3J0LWNoZWNrLWZ6Y2diXCJ9KSxfYygncCcse3N0YXRpY0NsYXNzOlwibGFiZWxcIn0sW192bS5fdihcIumdnuato+W4uOWFs+mXrVwiK192bS5fcyhfdm0udG9GaXhlZCgoYmF0Y2guc3RhdHVzWyfpnZ7mraPluLjlhbPpl60nXSAvIGJhdGNoLnByb2JsZW1zKSAqIDEwMCB8fCAwKSkrXCIlXCIpXSldKV0pXSl9KSksX2MoJ2xvYWRpbmctc3RhdHVzJyx7YXR0cnM6e1wiaXMtbG9hZGluZ1wiOl92bS5pc0xvYWRpbmcsXCJpcy1lbXB0eVwiOiFfdm0uaXNMb2FkaW5nICYmICFfdm0ubGlzdC5sZW5ndGgsXCJ0eXBlXCI6X3ZtLmVycm9yVGlwcyA/ICdlcnJvcicgOiAncmVwb3J0JyxcImVtcHR5LXRleHRcIjpfdm0uZXJyb3JUaXBzIHx8ICfmsqHmnInmiqXooajmlbDmja4nfX0pXSwxKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3Byb2plY3QtaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wcm9qZWN0LWluZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vcHJvamVjdC1pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MjdjYjljNWEmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vcHJvamVjdC1pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL3Byb2plY3QtaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3Byb2plY3QtaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MjdjYjljNWEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMjdjYjljNWFcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgV2ViU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL3dlYi1zZXJ2aWNlJztcbmltcG9ydCBsb2NhbFN0b3JhZ2UgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbG9jYWxTdG9yYWdlJztcbmltcG9ydCB7IGxlYWRlclNjaGVkdWxlUGxhbiwgZ2V0Tm9kZUxldmVsLCBnZXRCeUZpcnN0UHJvamVjdCB9IGZyb20gJ0BzcmMvYXBpL3NjaGVkdWxlLXBsYW4nO1xuaW1wb3J0IHsgbGVhZGVyUHJvY2Vzc0NoZWNrLCBnZXRCdWlsZGluZ0xpc3QsIGdldElnbm9yZVVuaXRMaXN0IH0gZnJvbSAnQHNyYy9hcGkvcHJvY2Vzcy1jaGVjayc7XG5pbXBvcnQgeyBwcm9jZXNzQWNjZXB0TmV3QnVpbGRpbmcsIHByb2Nlc3NBY2NlcHROZXdDb2xsZWN0IH0gZnJvbSAnQHNyYy9hcGkvcmVwb3J0JztcblxuLy8gMjAxOS0wOC0zMe+8jOWinuWKoG1vZHVsZe+8jOa3u+WKoOWuieWFqOWSjOi0qOmHj++8jOWmguaenG1vZHVsZeS4uuepuu+8jOWImeihqOekuuS4uueOsOWcuuajgOafpVxudmFyIF9nZXREYWlseUNoZWNrRGF0YSA9IGZ1bmN0aW9uKHByb2pJZCwgYmlkc2VjdGlvbl9pZCwgYmVnaW5fZGF0ZSwgZW5kX2RhdGUsIG1vZHVsZSkge1xuICB2YXIgcGFyYW1zID0geyBwcm9qX2lkOiBwcm9qSWQsIGJpZHNlY3Rpb25faWQsIGJlZ2luX2RhdGUsIGVuZF9kYXRlIH07XG4gIGlmIChtb2R1bGUpIHtcbiAgICBwYXJhbXMubW9kdWxlID0gbW9kdWxlO1xuICB9XG4gIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QoJy9yZXBvcnQvY2hlY2snLCBwYXJhbXMpO1xufTtcblxuLy8gMjAxOS0xMC0yNiDmibnmrKHkuIvpl67popjliJfooahcbmxldCBfZ2V0UmVwb3J0Q2hlY2tMaXN0ID0gZnVuY3Rpb24ocHJvaikge1xuICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KCcvcmVwb3J0L2NoZWNrLWJhdGNoLXByb2JsZW0tbGlzdCcsIHtcbiAgICBiYXRjaF9pZDogcHJvai5iYXRjaElkLFxuICAgIGJlZ2luX2RhdGU6IHByb2ouZGF0ZVN0YXJ0LFxuICAgIGVuZF9kYXRlOiBwcm9qLmRhdGVFbmQsXG4gIH0pO1xufTtcblxuLy8gMjAxOS0xMC0yOCDmibnmrKHkuIvpl67popjor6bmg4VcbmxldCBfZ2V0UmVwb3J0Q2hlY2tEZXRhaWwgPSBmdW5jdGlvbihpZCkge1xuICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KCcvcmVwb3J0L2NoZWNrLWJhdGNoLXByb2JsZW0tZGV0YWlsJywgeyBpZDogaWQgfSk7XG59O1xuXG4vLyAyMDE5LTEwLTI4IOeOsOWcuuajgOafpeetiemXrumimOa3u+WKoOaJueazqFxubGV0IF9wb3N0UmVwb3J0Q2hlY2tVcGRhdGUgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgcmV0dXJuIFdlYlNlcnZpY2UucG9zdCgnL2NoZWNrcXVhbGl0eS1jb21tZW50L3VwbG9hZCcsIHt9LCBwYXJhbXMpO1xufTtcblxuLy8gMjAxOS0xMC0yOCDnjrDlnLrmo4Dmn6XnrYnpl67popjpgIDlm55cbmxldCBfcG9zdFJlcG9ydENoZWNrU2VuZEJhY2sgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgcmV0dXJuIFdlYlNlcnZpY2UucG9zdCgnL2NoZWNrcXVhbGl0eS1jb21tZW50L3NlbmQtYmFjaycsIHt9LCBwYXJhbXMpO1xufTtcblxudmFyIF9nZXRXYXRlclBlcmNvbGF0aW9uID0gZnVuY3Rpb24ocHJvaklkKSB7XG4gIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QoJy9yZXBvcnQvY2xvc2Utd2F0ZXItdGVzdCcsIHsgcHJval9pZDogcHJvaklkIH0pO1xufTtcblxudmFyIF9nZXRNZWFzdXJlRGF0YSA9IGZ1bmN0aW9uKHByb2pJZCkge1xuICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KCcvcmVwb3J0L21lYXN1cmUnLCB7IHByb2pfaWQ6IHByb2pJZCB9KS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgIF8uZWFjaChyZXN1bHQsIGZ1bmN0aW9uKGJpZCkge1xuICAgICAgYmlkLnJlcGFpcl9kYXRhID0ge1xuICAgICAgICBtZWFzdXJlbWVudF9wb2ludHNfbnVtOiAwLFxuICAgICAgICBwcm9ibGVtX3BvaW50c19udW06IDAsXG4gICAgICAgIGNoZWNraXRlbV9udW06IDAsXG4gICAgICAgIHBhc3Nwb3J0OiAwLFxuICAgICAgfTtcblxuICAgICAgYmlkLnN1cGVydmlzaW9uX2RhdGEgPSB7XG4gICAgICAgIG1lYXN1cmVtZW50X3BvaW50c19udW06IDAsXG4gICAgICAgIHByb2JsZW1fcG9pbnRzX251bTogMCxcbiAgICAgICAgY2hlY2tpdGVtX251bTogMCxcbiAgICAgICAgcGFzc3BvcnQ6IDAsXG4gICAgICB9O1xuXG4gICAgICBiaWQuY29uc3RydWN0X2RhdGEgPSB7XG4gICAgICAgIG1lYXN1cmVtZW50X3BvaW50c19udW06IDAsXG4gICAgICAgIHByb2JsZW1fcG9pbnRzX251bTogMCxcbiAgICAgICAgY2hlY2tpdGVtX251bTogMCxcbiAgICAgICAgcGFzc3BvcnQ6IDAsXG4gICAgICB9O1xuXG4gICAgICBfLmVhY2goYmlkLmJ1aWxkaW5ncywgZnVuY3Rpb24oYnVpbGQpIHtcbiAgICAgICAgLy8g5pa95bel5Y2V5L2N5pWw5o2uXG4gICAgICAgIGJ1aWxkLnJlcGFpcl9kYXRhID0ge1xuICAgICAgICAgIG1lYXN1cmVtZW50X3BvaW50c19udW06IDAsIC8vIOalvOagi+aAu+Wunua1i+eCueaVsFxuICAgICAgICAgIHByb2JsZW1fcG9pbnRzX251bTogMCwgLy8g5qW85qCL5oC754iG54K55pWwXG4gICAgICAgICAgY2hlY2tpdGVtX251bTogMCwgLy8g5bey5rWL5qOA5p+l6aG55pWwXG4gICAgICAgICAgcGFzc3BvcnQ6IDAsIC8vIOWQiOagvOeOh1xuICAgICAgICB9O1xuICAgICAgICAvLyDnm5HnkIbljZXkvY3mlbDmja5cbiAgICAgICAgYnVpbGQuc3VwZXJ2aXNpb25fZGF0YSA9IHtcbiAgICAgICAgICBtZWFzdXJlbWVudF9wb2ludHNfbnVtOiAwLCAvLyDmpbzmoIvmgLvlrp7mtYvngrnmlbBcbiAgICAgICAgICBwcm9ibGVtX3BvaW50c19udW06IDAsIC8vIOalvOagi+aAu+eIhueCueaVsFxuICAgICAgICAgIGNoZWNraXRlbV9udW06IDAsIC8vIOW3sua1i+ajgOafpemhueaVsFxuICAgICAgICAgIHBhc3Nwb3J0OiAwLCAvLyDlkIjmoLznjodcbiAgICAgICAgfTtcbiAgICAgICAgLy8g5bu66K6+5Y2V5L2N5pWw5o2uXG4gICAgICAgIGJ1aWxkLmNvbnN0cnVjdF9kYXRhID0ge1xuICAgICAgICAgIG1lYXN1cmVtZW50X3BvaW50c19udW06IDAsIC8vIOalvOagi+aAu+Wunua1i+eCueaVsFxuICAgICAgICAgIHByb2JsZW1fcG9pbnRzX251bTogMCwgLy8g5qW85qCL5oC754iG54K55pWwXG4gICAgICAgICAgY2hlY2tpdGVtX251bTogMCwgLy8g5bey5rWL5qOA5p+l6aG55pWwXG4gICAgICAgICAgcGFzc3BvcnQ6IDAsIC8vIOWQiOagvOeOh1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIOS4gOe6p+ajgOafpemhuVxuICAgICAgICBfLmVhY2goYnVpbGQuY2hlY2tfaXRlbXMsIGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgICBpdGVtLnJlcGFpcl9kYXRhID0ge1xuICAgICAgICAgICAgbWVhc3VyZW1lbnRfcG9pbnRzX251bTogMCxcbiAgICAgICAgICAgIHByb2JsZW1fcG9pbnRzX251bTogMCxcbiAgICAgICAgICAgIGNoZWNraXRlbV9udW06IDAsXG4gICAgICAgICAgICBwYXNzcG9ydDogMCxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgaXRlbS5zdXBlcnZpc2lvbl9kYXRhID0ge1xuICAgICAgICAgICAgbWVhc3VyZW1lbnRfcG9pbnRzX251bTogMCxcbiAgICAgICAgICAgIHByb2JsZW1fcG9pbnRzX251bTogMCxcbiAgICAgICAgICAgIGNoZWNraXRlbV9udW06IDAsXG4gICAgICAgICAgICBwYXNzcG9ydDogMCxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgaXRlbS5jb25zdHJ1Y3RfZGF0YSA9IHtcbiAgICAgICAgICAgIG1lYXN1cmVtZW50X3BvaW50c19udW06IDAsXG4gICAgICAgICAgICBwcm9ibGVtX3BvaW50c19udW06IDAsXG4gICAgICAgICAgICBjaGVja2l0ZW1fbnVtOiAwLFxuICAgICAgICAgICAgcGFzc3BvcnQ6IDAsXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vIOS6jOe6p+ajgOafpemhuVxuICAgICAgICAgIF8uZWFjaChpdGVtLmNoaWxkcmVuLCBmdW5jdGlvbihzdWJpdGVtKSB7XG4gICAgICAgICAgICAvLyDlkITop5LoibLnmoTmoIfmrrXmlbDmja7mlLbpm4ZcbiAgICAgICAgICAgIGJpZC5yZXBhaXJfZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzBdLm1lYXN1cmVtZW50X3BvaW50cztcbiAgICAgICAgICAgIGJpZC5yZXBhaXJfZGF0YS5wcm9ibGVtX3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMF0ucHJvYmxlbV9wb2ludHM7XG4gICAgICAgICAgICBiaWQucmVwYWlyX2RhdGEuY2hlY2tpdGVtX251bSArPSBzdWJpdGVtLm1lYXN1cmVfZGF0YVswXS5tZWFzdXJlbWVudF9wb2ludHMgPyAxIDogMDtcblxuICAgICAgICAgICAgYmlkLnN1cGVydmlzaW9uX2RhdGEubWVhc3VyZW1lbnRfcG9pbnRzX251bSArPVxuICAgICAgICAgICAgICBzdWJpdGVtLm1lYXN1cmVfZGF0YVsxXS5tZWFzdXJlbWVudF9wb2ludHM7XG4gICAgICAgICAgICBiaWQuc3VwZXJ2aXNpb25fZGF0YS5wcm9ibGVtX3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMV0ucHJvYmxlbV9wb2ludHM7XG4gICAgICAgICAgICBiaWQuc3VwZXJ2aXNpb25fZGF0YS5jaGVja2l0ZW1fbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzFdLm1lYXN1cmVtZW50X3BvaW50c1xuICAgICAgICAgICAgICA/IDFcbiAgICAgICAgICAgICAgOiAwO1xuXG4gICAgICAgICAgICBiaWQuY29uc3RydWN0X2RhdGEubWVhc3VyZW1lbnRfcG9pbnRzX251bSArPSBzdWJpdGVtLm1lYXN1cmVfZGF0YVsyXS5tZWFzdXJlbWVudF9wb2ludHM7XG4gICAgICAgICAgICBiaWQuY29uc3RydWN0X2RhdGEucHJvYmxlbV9wb2ludHNfbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzJdLnByb2JsZW1fcG9pbnRzO1xuICAgICAgICAgICAgYmlkLmNvbnN0cnVjdF9kYXRhLmNoZWNraXRlbV9udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMl0ubWVhc3VyZW1lbnRfcG9pbnRzID8gMSA6IDA7XG5cbiAgICAgICAgICAgIC8vIOWQhOinkuiJsueahOalvOagi+aVsOaNruaUtumbhlxuICAgICAgICAgICAgYnVpbGQucmVwYWlyX2RhdGEubWVhc3VyZW1lbnRfcG9pbnRzX251bSArPSBzdWJpdGVtLm1lYXN1cmVfZGF0YVswXS5tZWFzdXJlbWVudF9wb2ludHM7XG4gICAgICAgICAgICBidWlsZC5yZXBhaXJfZGF0YS5wcm9ibGVtX3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMF0ucHJvYmxlbV9wb2ludHM7XG4gICAgICAgICAgICBidWlsZC5yZXBhaXJfZGF0YS5jaGVja2l0ZW1fbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzBdLm1lYXN1cmVtZW50X3BvaW50cyA/IDEgOiAwO1xuXG4gICAgICAgICAgICBidWlsZC5zdXBlcnZpc2lvbl9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0gKz1cbiAgICAgICAgICAgICAgc3ViaXRlbS5tZWFzdXJlX2RhdGFbMV0ubWVhc3VyZW1lbnRfcG9pbnRzO1xuICAgICAgICAgICAgYnVpbGQuc3VwZXJ2aXNpb25fZGF0YS5wcm9ibGVtX3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMV0ucHJvYmxlbV9wb2ludHM7XG4gICAgICAgICAgICBidWlsZC5zdXBlcnZpc2lvbl9kYXRhLmNoZWNraXRlbV9udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMV0ubWVhc3VyZW1lbnRfcG9pbnRzXG4gICAgICAgICAgICAgID8gMVxuICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgIGJ1aWxkLmNvbnN0cnVjdF9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0gKz1cbiAgICAgICAgICAgICAgc3ViaXRlbS5tZWFzdXJlX2RhdGFbMl0ubWVhc3VyZW1lbnRfcG9pbnRzO1xuICAgICAgICAgICAgYnVpbGQuY29uc3RydWN0X2RhdGEucHJvYmxlbV9wb2ludHNfbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzJdLnByb2JsZW1fcG9pbnRzO1xuICAgICAgICAgICAgYnVpbGQuY29uc3RydWN0X2RhdGEuY2hlY2tpdGVtX251bSArPSBzdWJpdGVtLm1lYXN1cmVfZGF0YVsyXS5tZWFzdXJlbWVudF9wb2ludHNcbiAgICAgICAgICAgICAgPyAxXG4gICAgICAgICAgICAgIDogMDtcblxuICAgICAgICAgICAgLy8g5ZCE6KeS6Imy55qE5LiA57qn5qOA5p+l6aG55pWw5o2u5pS26ZuGXG4gICAgICAgICAgICBpdGVtLnJlcGFpcl9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMF0ubWVhc3VyZW1lbnRfcG9pbnRzO1xuICAgICAgICAgICAgaXRlbS5yZXBhaXJfZGF0YS5wcm9ibGVtX3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMF0ucHJvYmxlbV9wb2ludHM7XG4gICAgICAgICAgICBpdGVtLnJlcGFpcl9kYXRhLmNoZWNraXRlbV9udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMF0ubWVhc3VyZW1lbnRfcG9pbnRzID8gMSA6IDA7XG5cbiAgICAgICAgICAgIGl0ZW0uc3VwZXJ2aXNpb25fZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtICs9XG4gICAgICAgICAgICAgIHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzFdLm1lYXN1cmVtZW50X3BvaW50cztcbiAgICAgICAgICAgIGl0ZW0uc3VwZXJ2aXNpb25fZGF0YS5wcm9ibGVtX3BvaW50c19udW0gKz0gc3ViaXRlbS5tZWFzdXJlX2RhdGFbMV0ucHJvYmxlbV9wb2ludHM7XG4gICAgICAgICAgICBpdGVtLnN1cGVydmlzaW9uX2RhdGEuY2hlY2tpdGVtX251bSArPSBzdWJpdGVtLm1lYXN1cmVfZGF0YVsxXS5tZWFzdXJlbWVudF9wb2ludHNcbiAgICAgICAgICAgICAgPyAxXG4gICAgICAgICAgICAgIDogMDtcblxuICAgICAgICAgICAgaXRlbS5jb25zdHJ1Y3RfZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtICs9XG4gICAgICAgICAgICAgIHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzJdLm1lYXN1cmVtZW50X3BvaW50cztcbiAgICAgICAgICAgIGl0ZW0uY29uc3RydWN0X2RhdGEucHJvYmxlbV9wb2ludHNfbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzJdLnByb2JsZW1fcG9pbnRzO1xuICAgICAgICAgICAgaXRlbS5jb25zdHJ1Y3RfZGF0YS5jaGVja2l0ZW1fbnVtICs9IHN1Yml0ZW0ubWVhc3VyZV9kYXRhWzJdLm1lYXN1cmVtZW50X3BvaW50cyA/IDEgOiAwO1xuXG4gICAgICAgICAgICAvLyDorqHnrpfljZXkuKrmo4Dmn6XpobnnmoTlkIjmoLznjofvvIwo5a6e5rWL54K55pWwIC0g54iG54K55pWwKSAvIOWunua1i+eCueaVsFxuICAgICAgICAgICAgXy5lYWNoKHN1Yml0ZW0ubWVhc3VyZV9kYXRhLCBmdW5jdGlvbihtRGF0YSkge1xuICAgICAgICAgICAgICBpZiAobURhdGEubWVhc3VyZW1lbnRfcG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgbURhdGEucGFzc3BvcnQgPVxuICAgICAgICAgICAgICAgICAgKChtRGF0YS5tZWFzdXJlbWVudF9wb2ludHMgLSBtRGF0YS5wcm9ibGVtX3BvaW50cykgLyBtRGF0YS5tZWFzdXJlbWVudF9wb2ludHMpICpcbiAgICAgICAgICAgICAgICAgIDEwMDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtRGF0YS5wYXNzcG9ydCA9IDA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgLy8g5LiA57qn5qOA5p+l6aG55ZCI5qC8546H6K6h566XXG4gICAgICAgICAgaXRlbS5yZXBhaXJfZGF0YS5wYXNzcG9ydCA9IGdldFBhc3Nwb3J0KFxuICAgICAgICAgICAgaXRlbS5yZXBhaXJfZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtLFxuICAgICAgICAgICAgaXRlbS5yZXBhaXJfZGF0YS5wcm9ibGVtX3BvaW50c19udW1cbiAgICAgICAgICApO1xuICAgICAgICAgIGl0ZW0uc3VwZXJ2aXNpb25fZGF0YS5wYXNzcG9ydCA9IGdldFBhc3Nwb3J0KFxuICAgICAgICAgICAgaXRlbS5zdXBlcnZpc2lvbl9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0sXG4gICAgICAgICAgICBpdGVtLnN1cGVydmlzaW9uX2RhdGEucHJvYmxlbV9wb2ludHNfbnVtXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpdGVtLmNvbnN0cnVjdF9kYXRhLnBhc3Nwb3J0ID0gZ2V0UGFzc3BvcnQoXG4gICAgICAgICAgICBpdGVtLmNvbnN0cnVjdF9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0sXG4gICAgICAgICAgICBpdGVtLmNvbnN0cnVjdF9kYXRhLnByb2JsZW1fcG9pbnRzX251bVxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIOalvOagi+iuoeeul+WQiOagvOeOh1xuICAgICAgICBidWlsZC5yZXBhaXJfZGF0YS5wYXNzcG9ydCA9IGdldFBhc3Nwb3J0KFxuICAgICAgICAgIGJ1aWxkLnJlcGFpcl9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0sXG4gICAgICAgICAgYnVpbGQucmVwYWlyX2RhdGEucHJvYmxlbV9wb2ludHNfbnVtXG4gICAgICAgICk7XG4gICAgICAgIGJ1aWxkLnN1cGVydmlzaW9uX2RhdGEucGFzc3BvcnQgPSBnZXRQYXNzcG9ydChcbiAgICAgICAgICBidWlsZC5zdXBlcnZpc2lvbl9kYXRhLm1lYXN1cmVtZW50X3BvaW50c19udW0sXG4gICAgICAgICAgYnVpbGQuc3VwZXJ2aXNpb25fZGF0YS5wcm9ibGVtX3BvaW50c19udW1cbiAgICAgICAgKTtcbiAgICAgICAgYnVpbGQuY29uc3RydWN0X2RhdGEucGFzc3BvcnQgPSBnZXRQYXNzcG9ydChcbiAgICAgICAgICBidWlsZC5jb25zdHJ1Y3RfZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtLFxuICAgICAgICAgIGJ1aWxkLmNvbnN0cnVjdF9kYXRhLnByb2JsZW1fcG9pbnRzX251bVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIC8vIOagh+auteWQiOagvOeOh+iuoeeul1xuICAgICAgYmlkLnJlcGFpcl9kYXRhLnBhc3Nwb3J0ID0gZ2V0UGFzc3BvcnQoXG4gICAgICAgIGJpZC5yZXBhaXJfZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtLFxuICAgICAgICBiaWQucmVwYWlyX2RhdGEucHJvYmxlbV9wb2ludHNfbnVtXG4gICAgICApO1xuICAgICAgYmlkLnN1cGVydmlzaW9uX2RhdGEucGFzc3BvcnQgPSBnZXRQYXNzcG9ydChcbiAgICAgICAgYmlkLnN1cGVydmlzaW9uX2RhdGEubWVhc3VyZW1lbnRfcG9pbnRzX251bSxcbiAgICAgICAgYmlkLnN1cGVydmlzaW9uX2RhdGEucHJvYmxlbV9wb2ludHNfbnVtXG4gICAgICApO1xuICAgICAgYmlkLmNvbnN0cnVjdF9kYXRhLnBhc3Nwb3J0ID0gZ2V0UGFzc3BvcnQoXG4gICAgICAgIGJpZC5jb25zdHJ1Y3RfZGF0YS5tZWFzdXJlbWVudF9wb2ludHNfbnVtLFxuICAgICAgICBiaWQuY29uc3RydWN0X2RhdGEucHJvYmxlbV9wb2ludHNfbnVtXG4gICAgICApO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSk7XG59O1xuXG5mdW5jdGlvbiBnZXRQYXNzcG9ydChtZWFzdXJlbWVudF9wb2ludHNfbnVtLCBwcm9ibGVtX3BvaW50c19udW0pIHtcbiAgcmV0dXJuIG1lYXN1cmVtZW50X3BvaW50c19udW1cbiAgICA/ICgobWVhc3VyZW1lbnRfcG9pbnRzX251bSAtIHByb2JsZW1fcG9pbnRzX251bSkgLyBtZWFzdXJlbWVudF9wb2ludHNfbnVtKSAqIDEwMFxuICAgIDogMDtcbn1cblxudmFyIF9zZXRNZWFzdXJlQnVpbGREYXRhID0gZnVuY3Rpb24oYnVpbGQpIHtcbiAgX3NlbGYubWVhc3VyZUJ1aWxkRGF0YSA9IGJ1aWxkO1xufTtcblxudmFyIF9nZXRNZWFzdXJlQnVpbGREYXRhID0gZnVuY3Rpb24ocHJvaklkKSB7XG4gIGlmIChfLmlzRW1wdHkoX3NlbGYubWVhc3VyZUJ1aWxkRGF0YSkpIHtcbiAgICByZXR1cm4gX3NlbGYuZ2V0TWVhc3VyZURhdGEocHJvaklkKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHJlc3VsdFswXTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKF9zZWxmLm1lYXN1cmVCdWlsZERhdGEpO1xuICB9XG59O1xuXG52YXIgX2dldENoZWNrQWNjZXB0RGF0YSA9IGZ1bmN0aW9uKHByb2pJZCkge1xuICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KCcvcmVwb3J0L2NoZWNrLWFjY2VwdCcsIHsgcHJval9pZDogcHJvaklkIH0pO1xufTtcblxudmFyIF9nZXRQcm9qVG90YWxEYXRhID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QoJy9yZXBvcnQvcHJvamVjdC1vdmVyLXZpZXcnKTtcbn07XG5cbnZhciBfZ2V0Q2hlY2tBY2NlcHREYXRhT2ZCdWlsZGluZyA9IGZ1bmN0aW9uKHNlY3Rpb25JZCwgYnVpbGRpbmdJZCwgdW5pdElkKSB7XG4gIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QoJy9yZXBvcnQvY2hlY2stYWNjZXB0LWRldGFpbCcsIHtcbiAgICBzZWN0aW9uX2lkOiBzZWN0aW9uSWQsXG4gICAgYnVpbGRpbmdfaWQ6IGJ1aWxkaW5nSWQsXG4gICAgdW5pdDogdW5pdElkIHx8ICcnLFxuICB9KTtcbn07XG5cbnZhciBfZ2V0UHJvY2Vzc0NoZWNrTmV3QnVpbGRpbmcgPSBmdW5jdGlvbihwcm9qSWQpIHtcbiAgbGV0IHJlcG9ydERhdGVUeXBlID0gbG9jYWxTdG9yYWdlLmdldFN0cmluZygncmVwb3J0RGF0ZVR5cGUnLCBsb2NhbFN0b3JhZ2UubGV2ZWwudXNlcikgfHwgJ21vbnRoJztcbiAgcmV0dXJuIGdldEJ1aWxkaW5nTGlzdCh7XG4gICAgcHJval9pZDogcHJvaklkLFxuICAgIHF1ZXJ5X3R5cGU6IHJlcG9ydERhdGVUeXBlLFxuICB9KTtcbn07XG5cbnZhciBfZ2V0UHJvY2Vzc0NoZWNrRGF0YSA9IGZ1bmN0aW9uKGJ1aWxkaW5nSWQsIHVuaXQpIHtcbiAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCgnL3JlcG9ydC9wcm9jZXNzY2hlY2snLCB7IGJ1aWxkaW5nX2lkOiBidWlsZGluZ0lkLCB1bml0OiB1bml0IH0pO1xufTtcbnZhciBfZ2V0UHJvY2Vzc0NoZWNrRGF0YTIgPSBmdW5jdGlvbihidWlsZGluZ0lkKSB7XG4gIHJldHVybiBnZXRJZ25vcmVVbml0TGlzdCh7IGJ1aWxkaW5nX2lkOiBidWlsZGluZ0lkIH0pO1xufTtcbnZhciBfZ2V0TWF0ZXJpYWxEYXRhID0gZnVuY3Rpb24ocHJvaklkLCBiZWdpbkRhdGUsIGVuZERhdGUpIHtcbiAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCgnL3JlcG9ydC9tYXRlcmlhbCcsIHtcbiAgICBwcm9qX2lkOiBwcm9qSWQsXG4gICAgYmVnaW5fZGF0ZTogYmVnaW5EYXRlLFxuICAgIGVuZF9kYXRlOiBlbmREYXRlLFxuICB9KTtcbn07XG5cbnZhciBfZ2V0UHJvY2Vzc0FjY2VwdEJ1aWxkaW5nID0gZnVuY3Rpb24ocHJvaklkKSB7XG4gIGxldCByZXBvcnREYXRlVHlwZSA9IGxvY2FsU3RvcmFnZS5nZXRTdHJpbmcoJ3JlcG9ydERhdGVUeXBlJywgbG9jYWxTdG9yYWdlLmxldmVsLnVzZXIpIHx8ICdtb250aCc7XG4gIHJldHVybiBwcm9jZXNzQWNjZXB0TmV3QnVpbGRpbmcoe1xuICAgIHByb2pfaWQ6IHByb2pJZCxcbiAgICBxdWVyeV90eXBlOiByZXBvcnREYXRlVHlwZSxcbiAgfSk7XG59O1xudmFyIF9nZXRQcm9jZXNzQWNjZXB0RGF0YSA9IGZ1bmN0aW9uKGJ1aWxkaW5nSWQsIHVuaXQsIHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIHByb2Nlc3NBY2NlcHROZXdDb2xsZWN0KHtcbiAgICBidWlsZGluZ19pZDogYnVpbGRpbmdJZCxcbiAgICB1bml0OiB1bml0LFxuICAgIHN0YXJ0OiBzdGFydCB8fCAnJyxcbiAgICBlbmQ6IGVuZCB8fCAnJyxcbiAgfSk7XG59O1xuLyoqXG4gKiDmnI3liqHlhazlvIDnmoTlr7nosaFcXOaWueazlVxuICovXG52YXIgX3NlbGYgPSB7XG4gIC8qKlxuICAgKiDojrflj5blt6Xluo/np7vkuqQo5pawKealvOagi+aKpeihqOaVsOaNrlxuICAgKi9cbiAgZ2V0UHJvY2Vzc0NoZWNrTmV3QnVpbGRpbmc6IF9nZXRQcm9jZXNzQ2hlY2tOZXdCdWlsZGluZyxcblxuICAvKipcbiAgICog6I635Y+W6aG555uu57u85ZCI5qaC6KeI5oql6KGo5pWw5o2uXG4gICAqL1xuXG4gIGdldFByb2pUb3RhbERhdGE6IF9nZXRQcm9qVG90YWxEYXRhLFxuXG4gIC8qKlxuICAgKiDojrflj5bnjrDlnLrjgIHlronlhajjgIHotKjph4/mo4Dmn6XmiqXooajmlbDmja5cbiAgICovXG4gIGdldERhaWx5Q2hlY2tEYXRhOiBfZ2V0RGFpbHlDaGVja0RhdGEsXG5cbiAgLyoqIOiOt+WPlueOsOWcuuOAgeWuieWFqOOAgei0qOmHj+ajgOafpeaKpeihqOeahOmXrumimOWIl+ihqCAqL1xuICBnZXRSZXBvcnRDaGVja0xpc3Q6IF9nZXRSZXBvcnRDaGVja0xpc3QsXG5cbiAgZ2V0UmVwb3J0Q2hlY2tUaW1lb3V0TGlzdChwcm9qSWQsIGtleSwgcGFnZSkge1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QoJy9yZXBvcnQvZ2V0LW92ZXItZHVlLWNoZWNrJywge1xuICAgICAgcHJval9pZDogcHJvaklkLFxuICAgICAga2V5OiBrZXksXG4gICAgICBwYWdlOiBwYWdlLFxuICAgICAgcGFnZVNpemU6IDE1LFxuICAgIH0pO1xuICB9LFxuICBnZXRPdmVyRHVlQ2hlY2tDb25maWcocHJvaklkKSB7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCgnL3JlcG9ydC9nZXQtb3Zlci1kdWUtY2hlY2stY29uZmlnJywge1xuICAgICAgcHJval9pZDogcHJvaklkLFxuICAgIH0pO1xuICB9LFxuXG4gIC8qKiDojrflj5bnjrDlnLrjgIHlronlhajjgIHotKjph4/mo4Dmn6XmiqXooajnmoTpl67popjor6bmg4UgKi9cbiAgZ2V0UmVwb3J0Q2hlY2tEZXRhaWw6IF9nZXRSZXBvcnRDaGVja0RldGFpbCxcblxuICAvKiog546w5Zy644CB5a6J5YWo44CB6LSo6YeP5qOA5p+l5oql6KGo55qE6Zeu6aKY5om55rOoICovXG4gIHBvc3RSZXBvcnRDaGVja1VwZGF0ZTogX3Bvc3RSZXBvcnRDaGVja1VwZGF0ZSxcblxuICAvKiog546w5Zy644CB5a6J5YWo44CB6LSo6YeP5qOA5p+l5oql6KGo55qE6Zeu6aKY55qE6YCA5ZueICovXG4gIHBvc3RSZXBvcnRDaGVja1NlbmRCYWNrOiBfcG9zdFJlcG9ydENoZWNrU2VuZEJhY2ssXG5cbiAgLyoqXG4gICAqIOWunua1i+WunumHj+W9k+WJjemhueebruaKpeihqOaVsOaNrlxuICAgKi9cbiAgbWVhc3VyZVByb2plY3REYXRhOiBbXSxcblxuICAvKipcbiAgICog6Zet5rC055+z6aqM5b2T5YmN5oql6KGo5pWw5o2uXG4gICAqL1xuICB3YXRlclBlcmNvbGF0aW9uRGF0YTogW10sXG5cbiAgLyoqXG4gICAqIOiOt+WPluWunua1i+WunumHj+mhueebruaKpeihqOaVsOaNrlxuICAgKi9cbiAgZ2V0TWVhc3VyZURhdGE6IF9nZXRNZWFzdXJlRGF0YSxcblxuICAvKipcbiAgICog5a6e5rWL5a6e6YeP5b2T5YmN5qW85qCL5oql6KGo5pWw5o2uXG4gICAqL1xuICBtZWFzdXJlQnVpbGREYXRhOiB7fSxcblxuICAvKipcbiAgICog6K6+572u5a6e5rWL5a6e6YeP5b2T5YmN5qW85qCL5oql6KGo5pWw5o2uXG4gICAqL1xuICBzZXRNZWFzdXJlQnVpbGREYXRhOiBfc2V0TWVhc3VyZUJ1aWxkRGF0YSxcblxuICAvKipcbiAgICog6I635Y+W5a6e5rWL5a6e6YeP5b2T5YmN5qW85qCL5oql6KGo5pWw5o2uXG4gICAqL1xuICBnZXRNZWFzdXJlQnVpbGREYXRhOiBfZ2V0TWVhc3VyZUJ1aWxkRGF0YSxcblxuICAvKipcbiAgICog6I635Y+W5bel5bqP6aqM5pS25oql6KGo5pWw5o2uXG4gICAqL1xuICBnZXRDaGVja0FjY2VwdERhdGE6IF9nZXRDaGVja0FjY2VwdERhdGEsXG5cbiAgLyoqXG4gICAqIOiOt+WPluW3peW6j+mqjOaUtuafkOagi+alvOaKpeihqOaVsOaNrlxuICAgKi9cbiAgZ2V0Q2hlY2tBY2NlcHREYXRhT2ZCdWlsZGluZzogX2dldENoZWNrQWNjZXB0RGF0YU9mQnVpbGRpbmcsXG5cbiAgLyoqXG4gICAqIOiOt+WPluW3peW6j+enu+S6pOaKpeihqOaVsOaNrlxuICAgKi9cbiAgZ2V0UHJvY2Vzc0NoZWNrRGF0YTogX2dldFByb2Nlc3NDaGVja0RhdGEsXG4gIC8qKlxuICAgKiDojrflj5blt6Xluo/np7vkuqTmiqXooajmlbDmja4yXG4gICAqL1xuICBnZXRQcm9jZXNzQ2hlY2tEYXRhMjogX2dldFByb2Nlc3NDaGVja0RhdGEyLFxuICAvKipcbiAgICog6I635Y+W5p2Q5paZ6aqM5pS25oql6KGo5pWw5o2uXG4gICAqL1xuICBnZXRNYXRlcmlhbERhdGE6IF9nZXRNYXRlcmlhbERhdGEsXG4gIC8qKlxuICAgKiDojrflj5blt6Xluo/pqozmlLbvvIjkuK3mtbfvvInmpbzmoIvmiqXooajmlbDmja5cbiAgICovXG4gIGdldFByb2Nlc3NBY2NlcHRCdWlsZGluZzogX2dldFByb2Nlc3NBY2NlcHRCdWlsZGluZyxcbiAgLyoqXG4gICAqIOiOt+WPlumXreawtOWunumqjOaKpeihqFxuICAgKi9cbiAgZ2V0V2F0ZXJQZXJjb2xhdGlvbjogX2dldFdhdGVyUGVyY29sYXRpb24sXG4gIC8qKlxuICAgKiDojrflj5blt6Xluo/pqozmlLbvvIjkuK3mtbfvvInmiqXooajmlbDmja5cbiAgICovXG4gIGdldFByb2Nlc3NBY2NlcHREYXRhOiBfZ2V0UHJvY2Vzc0FjY2VwdERhdGEsXG5cbiAgZ2V0UHJvY2Vzc0FjY2VwdFBpbGVJdGVtOiBmdW5jdGlvbihzZWN0aW9uSWQpIHtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KCcvcmVwb3J0L2dldC1waWxlLWNoZWNrLWl0ZW1zJywgeyBiaWRzZWN0aW9uX2lkOiBzZWN0aW9uSWQgfSk7XG4gIH0sXG4gIGdldFByb2Nlc3NBY2NlcHRQaWxlRGF0YTogZnVuY3Rpb24oYnVpbGRpbmdJZCwgaXRlbUlkKSB7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCgnL3JlcG9ydC9wcm9jZXNzLWFjY2VwdC13aXRoLXBpbGUnLCB7XG4gICAgICBidWlsZGluZ19pZDogYnVpbGRpbmdJZCxcbiAgICAgIGl0ZW1faWQ6IGl0ZW1JZCxcbiAgICB9KTtcbiAgfSxcbiAgLy8g6I635Y+W5a6e5rWL5a6e6YeP5bey5rWL5pWw5o2uXG4gIGdldE1lYXN1cmVDaGVja2VkRGF0YTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCgnL3JlcG9ydC9sZWFkZXItbWVhc3VyZScpO1xuICB9LFxuICBnZXRTY2hlZHVsZVBsYW5EYXRhOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbGVhZGVyU2NoZWR1bGVQbGFuKCk7XG4gIH0sXG4gIGdldFNjaGVkdWxlUGxhblByb2plY3REYXRhOiBmdW5jdGlvbihwcm9qSWQpIHtcbiAgICByZXR1cm4gZ2V0QnlGaXJzdFByb2plY3QoeyBwcm9qX2lkOiBwcm9qSWQgfSk7XG4gIH0sXG4gIGdldENoZWNrUHJvYmxlbVN0YXRpc3RpY3NEYXRhOiBmdW5jdGlvbihwYXJhbXMpIHtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KCcvcmVwb3J0L2xlYWRlci1zZWN1cmUnLCBwYXJhbXMpO1xuICB9LFxuICAvLyDnjrDlnLrmo4Dmn6Ut5qOA5p+l6aG56Zeu6aKY5pWw5o2uXG4gIGdldFByb2Nlc3NDaGVja1N0YXRpc3RpY3NEYXRhOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbGVhZGVyUHJvY2Vzc0NoZWNrKCk7XG4gIH0sXG4gIC8vIOaKpeihqCAtIOiKgueCueWQjeensFxuICBzY2hlZHVsZVBsYW5Ob2RlTGlzdDogZnVuY3Rpb24ocGxhbklkKSB7XG4gICAgcmV0dXJuIGdldE5vZGVMZXZlbCh7IHBsYW5faWQ6IHBsYW5JZCB9KTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IF9zZWxmO1xuIiwiPHRlbXBsYXRlPlxuICA8dHJhbnNpdGlvbiBuYW1lPVwic2xpZGUtcmlnaHRcIj5cbiAgICA8cGFnZS1jb250ZW50XG4gICAgICB2LWlmPVwic2hvd1wiXG4gICAgICBtb2RlPVwiZGlhbG9nXCJcbiAgICAgIHRpdGxlPVwi6YCJ5oup5pel5pyfXCJcbiAgICAgIDpvbi1jbG9zZT1cImNsb3NlUG9wdXBcIlxuICAgICAgQGNsaWNrPVwiY2xvc2VTZWxlY3RMaXN0KClcIlxuICAgID5cbiAgICAgIDxkaXYgdi1pZj1cIiFpc0xvYWRpbmdcIiBjbGFzcz1cImRhdGVwaWNrZXItaGRcIj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIDpjbGFzcz1cIntcbiAgICAgICAgICAgICdkYXRlcGlja2VyLXByZXYnOiB0cnVlLFxuICAgICAgICAgICAgZGlzYWJsZWQ6IGZpcnN0RGF5RXBvY2ggLSA4NjQwMDAwMCA8IGZyb21EYXRlLFxuICAgICAgICAgIH1cIlxuICAgICAgICAgIEBjbGljaz1cInByZXZNb250aFwiXG4gICAgICAgID5cbiAgICAgICAgICA8aWNvbiBuYW1lPVwiYXJyb3ctbGVmdFwiIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlcGlja2VyLWhkLWNlbnRlclwiPlxuICAgICAgICAgIDwhLS0g5b2T5YmN5bm05Lu9IC0tPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlcGlja2VyLXllYXJcIiBAY2xpY2suc3RvcD1cInNlbGVjdFllYXJcIj5cbiAgICAgICAgICAgIHt7IGN1cnJlbnRZZWFyIH19XG5cbiAgICAgICAgICAgIDwhLS0g6YCJ5oup5bm05Lu9IC0tPlxuICAgICAgICAgICAgPHRyYW5zaXRpb24gbmFtZT1cInNwcmVhZFwiPlxuICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCJzaG93WWVhclNlbGVjdFwiIGNsYXNzPVwic2VsZWN0LWxpc3RcIiBAY2xpY2suc3RvcD5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICB2LWZvcj1cIih5ZWFyLCB5ZWFyS2V5KSBpbiB5ZWFyc0xpc3RcIlxuICAgICAgICAgICAgICAgICAgOmtleT1cInllYXJLZXlcIlxuICAgICAgICAgICAgICAgICAgOmNsYXNzPVwie1xuICAgICAgICAgICAgICAgICAgICAnc2VsZWN0LWl0ZW0nOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAnaXRlbS1zZWxlY3RlZCc6IGN1cnJlbnRZZWFyID09PSB5ZWFyLFxuICAgICAgICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAgICAgICBAY2xpY2s9XCJzZXRZZWFyKHllYXIpXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7eyB5ZWFyIH19XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC90cmFuc2l0aW9uPlxuICAgICAgICAgICAgPCEtLSDpgInmi6nlubTku70gZW5kIC0tPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSDlvZPliY3mnIjku70gLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVwaWNrZXItbW9udGhcIiBAY2xpY2suc3RvcD1cInNlbGVjdE1vbnRoKClcIj5cbiAgICAgICAgICAgIHt7IGN1cnJlbnRNb250aCB9fVxuICAgICAgICAgICAgPCEtLSDpgInmi6nmnIjku70gLS0+XG4gICAgICAgICAgICA8dHJhbnNpdGlvbiBuYW1lPVwic3ByZWFkXCI+XG4gICAgICAgICAgICAgIDxkaXYgdi1pZj1cInNob3dNb250aFNlbGVjdFwiIGNsYXNzPVwic2VsZWN0LWxpc3RcIiBAY2xpY2suc3RvcD5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICB2LWZvcj1cIihtb250aCwgbW9udGhLZXkpIGluIG1vbnRoc0xpc3RcIlxuICAgICAgICAgICAgICAgICAgOmtleT1cIm1vbnRoS2V5XCJcbiAgICAgICAgICAgICAgICAgIDpjbGFzcz1cIntcbiAgICAgICAgICAgICAgICAgICAgJ3NlbGVjdC1pdGVtJzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgJ2l0ZW0tc2VsZWN0ZWQnOiBjdXJyZW50TW9udGggPT09IG1vbnRoLFxuICAgICAgICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAgICAgICBAY2xpY2s9XCJzZXRNb250aChtb250aClcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHt7IG1vbnRoIH19XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC90cmFuc2l0aW9uPlxuICAgICAgICAgICAgPCEtLSDpgInmi6nmnIjku70gZW5kIC0tPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIDpjbGFzcz1cIntcbiAgICAgICAgICAgICdkYXRlcGlja2VyLW5leHQnOiB0cnVlLFxuICAgICAgICAgICAgZGlzYWJsZWQ6IGxhc3REYXlFcG9jaCArIDg2NDAwMDAwID4gdG9EYXRlLFxuICAgICAgICAgIH1cIlxuICAgICAgICAgIEBjbGljaz1cIm5leHRNb250aFwiXG4gICAgICAgID5cbiAgICAgICAgICA8aWNvbiBuYW1lPVwiYXJyb3ctcmlnaHRcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IHYtaWY9XCIhaXNMb2FkaW5nXCIgY2xhc3M9XCJjYWxlbmRhclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwid2Vla3Mtcm93XCI+XG4gICAgICAgICAgPGRpdiB2LWZvcj1cIih3ZWVrTmFtZSwga2V5KSBpbiB3ZWVrc0xpc3RcIiA6a2V5PVwia2V5XCIgY2xhc3M9XCJ3ZWVrcy1jZWxsXCI+XG4gICAgICAgICAgICB7eyB3ZWVrTmFtZSB9fVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiB2LWZvcj1cIihyb3csIGtleSkgaW4gcm93c1wiIDprZXk9XCJrZXlcIiBjbGFzcz1cImRhdGUtcm93XCI+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgdi1mb3I9XCIoY29sLCBjb2xLZXkpIGluIGNvbHNcIlxuICAgICAgICAgICAgOmtleT1cImNvbEtleVwiXG4gICAgICAgICAgICBjbGFzcz1cImRhdGUtY2VsbFwiXG4gICAgICAgICAgICA6Y2xhc3M9XCJ7XG4gICAgICAgICAgICAgICdkYXRlLWNlbGwtc2VsZWN0ZWQnOlxuICAgICAgICAgICAgICAgIGRheUxpc3Rbcm93ICsgY29sXSAmJiBkYXlMaXN0W3JvdyArIGNvbF0uZXBvY2ggPT09IHNlbGN0ZWREYXRlRXBvY2gsXG4gICAgICAgICAgICAgIHRvZGF5OiBkYXlMaXN0W3JvdyArIGNvbF0gJiYgZGF5TGlzdFtyb3cgKyBjb2xdLmVwb2NoID09PSB0b2RheSxcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IGRheUxpc3Rbcm93ICsgY29sXSAmJiBkYXlMaXN0W3JvdyArIGNvbF0uZGlzYWJsZWQsXG4gICAgICAgICAgICB9XCJcbiAgICAgICAgICAgIEBjbGljaz1cImRhdGVTZWxlY3RlZChkYXlMaXN0W3JvdyArIGNvbF0pXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7eyBkYXlMaXN0W3JvdyArIGNvbF0gJiYgZGF5TGlzdFtyb3cgKyBjb2xdLmRhdGUgfX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L3BhZ2UtY29udGVudD5cbiAgPC90cmFuc2l0aW9uPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCBQb3B1cE1peGluIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAtbWl4aW4nO1xuXG5mdW5jdGlvbiBnZXRZZWFyc0xpc3QoZnJvbSwgdG8pIHtcbiAgdmFyIHllYXJzTGlzdCA9IFtdO1xuICB2YXIgbWluWWVhciA9IDIwMTU7XG4gIHZhciBtYXhZZWFyID0gMjEwMDtcblxuICBtaW5ZZWFyID0gZnJvbSA/IG1vbWVudChmcm9tKS55ZWFyKCkgOiBtaW5ZZWFyO1xuICBtYXhZZWFyID0gdG8gPyBtb21lbnQodG8pLnllYXIoKSA6IG1heFllYXI7XG5cbiAgZm9yICh2YXIgaSA9IG1pblllYXI7IGkgPD0gbWF4WWVhcjsgaSsrKSB7XG4gICAgeWVhcnNMaXN0LnB1c2goaSk7XG4gIH1cblxuICByZXR1cm4geWVhcnNMaXN0O1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdEYXRlcGlja2VyRGlhbG9nJyxcbiAgY29tcG9uZW50czoge30sXG4gIG1peGluczogW1BvcHVwTWl4aW5dLFxuICBwcm9wczoge30sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgICAgdG9kYXk6ICcnLFxuXG4gICAgICBjdXJyZW50WWVhcjogJycsXG4gICAgICBjdXJyZW50TW9udGg6ICcnLFxuICAgICAgY3VycmVudERhdGU6ICcnLFxuXG4gICAgICB5ZWFyc0xpc3Q6IFtdLFxuICAgICAgbW9udGhzTGlzdDogW1xuICAgICAgICAn5LiA5pyIJyxcbiAgICAgICAgJ+S6jOaciCcsXG4gICAgICAgICfkuInmnIgnLFxuICAgICAgICAn5Zub5pyIJyxcbiAgICAgICAgJ+S6lOaciCcsXG4gICAgICAgICflha3mnIgnLFxuICAgICAgICAn5LiD5pyIJyxcbiAgICAgICAgJ+WFq+aciCcsXG4gICAgICAgICfkuZ3mnIgnLFxuICAgICAgICAn5Y2B5pyIJyxcbiAgICAgICAgJ+WNgeS4gOaciCcsXG4gICAgICAgICfljYHkuozmnIgnLFxuICAgICAgXSxcbiAgICAgIHdlZWtzTGlzdDogWyfml6UnLCAn5LiAJywgJ+S6jCcsICfkuIknLCAn5ZubJywgJ+S6lCcsICflha0nXSxcblxuICAgICAgc2hvd1llYXJTZWxlY3Q6IGZhbHNlLFxuICAgICAgc2hvd01vbnRoU2VsZWN0OiBmYWxzZSxcblxuICAgICAgZGF5TGlzdDogW10sXG4gICAgfTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9wZW5Qb3B1cChwYXJhbXMpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB0cnVlO1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuZnJvbSA9IHBhcmFtcy5mcm9tO1xuICAgICAgdGhpcy50byA9IHBhcmFtcy50bztcbiAgICAgIHRoaXMuaW5wdXREYXRlID0gbW9tZW50KHBhcmFtcy5pbnB1dERhdGUpLmlzVmFsaWQoKVxuICAgICAgICA/IG1vbWVudChtb21lbnQocGFyYW1zLmlucHV0RGF0ZSkuZm9ybWF0KCdZWVlZLU1NLUREJykpXG4gICAgICAgIDogbW9tZW50KG1vbWVudCgpLmZvcm1hdCgnWVlZWS1NTS1ERCcpKTtcbiAgICAgIHRoaXMuY2FsbGJhY2sgPSBwYXJhbXMuY2FsbGJhY2s7XG5cbiAgICAgIHRoaXMudG9kYXkgPSBtb21lbnQobW9tZW50KCkuZm9ybWF0KCdZWVlZLU1NLUREJykpLnZhbHVlT2YoKTtcblxuICAgICAgaWYgKHRoaXMuZnJvbSkge1xuICAgICAgICB0aGlzLmZyb21EYXRlID0gbW9tZW50KG1vbWVudCh0aGlzLmZyb20pLmZvcm1hdCgnWVlZWS1NTS1ERCcpKS52YWx1ZU9mKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmZyb21EYXRlID0gMDtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnRvKSB7XG4gICAgICAgIHRoaXMudG9EYXRlID0gbW9tZW50KG1vbWVudCh0aGlzLnRvKS5mb3JtYXQoJ1lZWVktTU0tREQnKSkudmFsdWVPZigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50b0RhdGUgPSBJbmZpbml0eTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZWxjdGVkRGF0ZUVwb2NoID0gbW9tZW50KG1vbWVudCh0aGlzLmlucHV0RGF0ZSkuZm9ybWF0KCdZWVlZLU1NLUREJykpLnZhbHVlT2YoKTtcblxuICAgICAgdGhpcy5yZWZyZXNoRGF0ZUxpc3QodGhpcy5pbnB1dERhdGUpO1xuICAgICAgdGhpcy4kZW1pdCgnb3BlbicpO1xuICAgIH0sXG4gICAgY2xvc2VQb3B1cCgpIHtcbiAgICAgIHRoaXMudmFsdWUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTtcbiAgICB9LFxuXG4gICAgY2xvc2VTZWxlY3RMaXN0KCkge1xuICAgICAgdGhpcy5zaG93WWVhclNlbGVjdCA9IGZhbHNlO1xuICAgICAgdGhpcy5zaG93TW9udGhTZWxlY3QgPSBmYWxzZTtcbiAgICB9LFxuXG4gICAgLy8g5LiK5Liq5pyIXG4gICAgcHJldk1vbnRoKCkge1xuICAgICAgdGhpcy5jdXJyZW50RGF0ZSA9IG1vbWVudCh0aGlzLmN1cnJlbnREYXRlKS5zdWJ0cmFjdCgxLCAnbW9udGgnKTtcblxuICAgICAgdGhpcy5jdXJyZW50TW9udGggPSB0aGlzLm1vbnRoc0xpc3RbdGhpcy5jdXJyZW50RGF0ZS5tb250aCgpXTtcbiAgICAgIHRoaXMuY3VycmVudFllYXIgPSB0aGlzLmN1cnJlbnREYXRlLnllYXIoKTtcblxuICAgICAgdGhpcy5yZWZyZXNoRGF0ZUxpc3QodGhpcy5jdXJyZW50RGF0ZSk7XG4gICAgfSxcblxuICAgIC8vIOS4i+S4quaciFxuICAgIG5leHRNb250aCgpIHtcbiAgICAgIHRoaXMuY3VycmVudERhdGUgPSBtb21lbnQodGhpcy5jdXJyZW50RGF0ZSkuYWRkKDEsICdtb250aCcpO1xuXG4gICAgICB0aGlzLmN1cnJlbnRNb250aCA9IHRoaXMubW9udGhzTGlzdFt0aGlzLmN1cnJlbnREYXRlLm1vbnRoKCldO1xuICAgICAgdGhpcy5jdXJyZW50WWVhciA9IHRoaXMuY3VycmVudERhdGUueWVhcigpO1xuXG4gICAgICB0aGlzLnJlZnJlc2hEYXRlTGlzdCh0aGlzLmN1cnJlbnREYXRlKTtcbiAgICB9LFxuXG4gICAgLy8g6YCJ5oup5bm05Lu9XG4gICAgc2VsZWN0WWVhcigpIHtcbiAgICAgIHRoaXMuc2hvd1llYXJTZWxlY3QgPSAhdGhpcy5zaG93WWVhclNlbGVjdDtcbiAgICAgIHRoaXMuc2hvd01vbnRoU2VsZWN0ID0gZmFsc2U7XG4gICAgfSxcbiAgICBzZXRZZWFyKHllYXIpIHtcbiAgICAgIHRoaXMuY3VycmVudFllYXIgPSB5ZWFyO1xuICAgICAgdGhpcy55ZWFyQ2hhbmdlZCh5ZWFyKTtcbiAgICAgIHRoaXMuc2hvd1llYXJTZWxlY3QgPSBmYWxzZTtcbiAgICB9LFxuXG4gICAgc2VsZWN0TW9udGgoKSB7XG4gICAgICB0aGlzLnNob3dZZWFyU2VsZWN0ID0gZmFsc2U7XG4gICAgICB0aGlzLnNob3dNb250aFNlbGVjdCA9ICF0aGlzLnNob3dNb250aFNlbGVjdDtcbiAgICB9LFxuICAgIHNldE1vbnRoKG1vbnRoKSB7XG4gICAgICB0aGlzLmN1cnJlbnRNb250aCA9IG1vbnRoO1xuICAgICAgdGhpcy5tb250aENoYW5nZWQobW9udGgpO1xuICAgICAgdGhpcy5zaG93TW9udGhTZWxlY3QgPSBmYWxzZTtcbiAgICB9LFxuXG4gICAgLy8gRGF0ZSBzZWxlY3RlZFxuICAgIGRhdGVTZWxlY3RlZChzZWxlY3RlZERhdGUpIHtcbiAgICAgIGlmICghc2VsZWN0ZWREYXRlIHx8IE9iamVjdC5rZXlzKHNlbGVjdGVkRGF0ZSkubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICB0aGlzLnNlbGN0ZWREYXRlRXBvY2ggPSBzZWxlY3RlZERhdGUuZXBvY2g7XG5cbiAgICAgIHRoaXMuY2FsbGJhY2sodGhpcy5zZWxjdGVkRGF0ZUVwb2NoKTtcbiAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xuICAgIH0sXG5cbiAgICBtb250aENoYW5nZWQobW9udGgpIHtcbiAgICAgIGxldCBtb250aE51bWJlciA9IHRoaXMubW9udGhzTGlzdC5pbmRleE9mKG1vbnRoKTtcbiAgICAgIHRoaXMuY3VycmVudERhdGUubW9udGgobW9udGhOdW1iZXIpO1xuICAgICAgdGhpcy5yZWZyZXNoRGF0ZUxpc3QodGhpcy5jdXJyZW50RGF0ZSk7XG4gICAgfSxcblxuICAgIC8vIFllYXIgY2hhbmdlZFxuICAgIHllYXJDaGFuZ2VkKHllYXIpIHtcbiAgICAgIHRoaXMuY3VycmVudERhdGUueWVhcih5ZWFyKTtcbiAgICAgIHRoaXMucmVmcmVzaERhdGVMaXN0KHRoaXMuY3VycmVudERhdGUpO1xuICAgIH0sXG5cbiAgICByZWZyZXNoRGF0ZUxpc3QoY3VycmVudERhdGUpIHtcbiAgICAgIGxldCBkYXlMaXN0ID0gW107XG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50RGF0ZSA9IG1vbWVudChtb21lbnQoY3VycmVudERhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCcpKTtcbiAgICAgIHRoaXMuY3VycmVudERhdGUgPSBjdXJyZW50RGF0ZTtcblxuICAgICAgdGhpcy5jdXJyZW50WWVhciA9ICcnO1xuICAgICAgdGhpcy5jdXJyZW50TW9udGggPSAnJztcblxuICAgICAgdmFyIGZpcnN0RGF5ID0gMTtcbiAgICAgIHZhciBsYXN0RGF5ID0gdGhpcy5jdXJyZW50RGF0ZS5kYXlzSW5Nb250aCgpO1xuXG4gICAgICB0aGlzLnllYXJzTGlzdCA9IGdldFllYXJzTGlzdCgpO1xuXG4gICAgICB0aGlzLmRheUxpc3QgPSBbXTtcblxuICAgICAgdmFyIHRlbXBEYXRlLCBkaXNhYmxlZDtcbiAgICAgIGxldCBtb250aEZpcnN0RGF5ID0gbW9tZW50KHRoaXMuY3VycmVudERhdGUpXG4gICAgICAgIC5zdGFydE9mKCdtb250aCcpXG4gICAgICAgIC5kYXkoKTtcbiAgICAgIHRoaXMuZmlyc3REYXlFcG9jaCA9IG1vbWVudCh0aGlzLmN1cnJlbnREYXRlKVxuICAgICAgICAuc3RhcnRPZignbW9udGgnKVxuICAgICAgICAudmFsdWVPZigpO1xuICAgICAgdGhpcy5sYXN0RGF5RXBvY2ggPSBtb21lbnQodGhpcy5jdXJyZW50RGF0ZSlcbiAgICAgICAgLmVuZE9mKCdtb250aCcpXG4gICAgICAgIC5zdGFydE9mKCdkYXknKVxuICAgICAgICAudmFsdWVPZigpO1xuXG4gICAgICBmb3IgKHZhciBpID0gZmlyc3REYXk7IGkgPD0gbGFzdERheTsgaSsrKSB7XG4gICAgICAgIHRlbXBEYXRlID0gbW9tZW50KHRoaXMuY3VycmVudERhdGUpLmRhdGUoaSk7XG4gICAgICAgIGRpc2FibGVkID0gdGVtcERhdGUudmFsdWVPZigpIDwgdGhpcy5mcm9tRGF0ZSB8fCB0ZW1wRGF0ZS52YWx1ZU9mKCkgPiB0aGlzLnRvRGF0ZTtcbiAgICAgICAgZGF5TGlzdC5wdXNoKHtcbiAgICAgICAgICBkYXRlOiB0ZW1wRGF0ZS5kYXRlKCksXG4gICAgICAgICAgbW9udGg6IHRlbXBEYXRlLm1vbnRoKCksXG4gICAgICAgICAgeWVhcjogdGVtcERhdGUueWVhcigpLFxuICAgICAgICAgIGRheTogdGVtcERhdGUuZGF5KCksXG4gICAgICAgICAgZXBvY2g6IHRlbXBEYXRlLnZhbHVlT2YoKSxcbiAgICAgICAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuZGF5TGlzdCA9IGRheUxpc3Q7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbW9udGhGaXJzdERheTsgaisrKSB7XG4gICAgICAgIHRoaXMuZGF5TGlzdC51bnNoaWZ0KHt9KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yb3dzID0gWzAsIDcsIDE0LCAyMSwgMjgsIDM1XTtcbiAgICAgIHRoaXMuY29scyA9IFswLCAxLCAyLCAzLCA0LCA1LCA2XTtcblxuICAgICAgdGhpcy5jdXJyZW50TW9udGggPSB0aGlzLm1vbnRoc0xpc3RbY3VycmVudERhdGUubW9udGgoKV07XG4gICAgICB0aGlzLmN1cnJlbnRZZWFyID0gdGhpcy5jdXJyZW50RGF0ZS55ZWFyKCk7XG4gICAgICB0aGlzLm51bUNvbHVtbnMgPSA3O1xuXG4gICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5sYXlvdXQtbWFpbiAvZGVlcC8gLmxheW91dC1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5kYXRlcGlja2VyLWhkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiA1cHggNXB4IDE1cHggNXB4O1xufVxuLmRhdGVwaWNrZXItaGQtY2VudGVyIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZzogMTBweCA1cHg7XG59XG4uZGF0ZXBpY2tlci15ZWFyLFxuLmRhdGVwaWNrZXItbW9udGgge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsZXg6IDE7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM0Mzc0ZWE7XG4gIHBhZGRpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5kYXRlcGlja2VyLW1vbnRoIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4uZGF0ZXBpY2tlci15ZWFyOjphZnRlcixcbi5kYXRlcGlja2VyLW1vbnRoOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiA1cHg7XG4gIG1hcmdpbi10b3A6IC0zcHg7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIGJvcmRlci10b3A6IDVweCBzb2xpZDtcbiAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgY29sb3I6ICM0Mzc0ZWE7XG59XG4uZGF0ZXBpY2tlci1wcmV2LFxuLmRhdGVwaWNrZXItbmV4dCB7XG4gIHdpZHRoOiAxMCU7XG4gIHBhZGRpbmc6IDEwcHggNXB4O1xuICBmb250LXNpemU6IDI0cHg7XG4gIGNvbG9yOiAjNDM3NGVhO1xufVxuXG4uc2VsZWN0LWxpc3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjdweDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC1oZWlnaHQ6IDM4MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJveC1zaGFkb3c6IDAgMCA1cHggIzMzMztcbn1cbi5zZWxlY3QtaXRlbSB7XG4gIHBhZGRpbmc6IDVweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbn1cbi5pdGVtLXNlbGVjdGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQzNzRlYTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ud2Vla3Mtcm93IHtcbiAgcGFkZGluZzogNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLndlZWtzLWNlbGwge1xuICBmbGV4OiAxO1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uZGF0ZS1yb3cge1xuICBwYWRkaW5nOiAwIDVweDtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5kYXRlLWNlbGwge1xuICBmbGV4OiAxO1xuICBoZWlnaHQ6IDUwcHg7XG4gIGxpbmUtaGVpZ2h0OiA1MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5kYXRlLWNlbGwtc2VsZWN0ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDM3NGVhO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uZGF0ZS1jZWxsLnRvZGF5IHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzQzNzRlYTtcbn1cblxuLmRpc2FibGVkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGNvbG9yOiAjYWFhO1xufVxuPC9zdHlsZT5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEyLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL190aHJlYWQtbG9hZGVyQDIuMS4zQHRocmVhZC1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19iYWJlbC1sb2FkZXJAOC4yLjFAYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGEyNjZjNDQmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MGEyNjZjNDQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMGEyNjZjNDRcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNsaWRlLXJpZ2h0XCJ9fSxbKF92bS5zaG93KT9fYygncGFnZS1jb250ZW50Jyx7YXR0cnM6e1wibW9kZVwiOlwiZGlhbG9nXCIsXCJ0aXRsZVwiOlwi6YCJ5oup5pel5pyfXCIsXCJvbi1jbG9zZVwiOl92bS5jbG9zZVBvcHVwfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmNsb3NlU2VsZWN0TGlzdCgpfX19LFsoIV92bS5pc0xvYWRpbmcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImRhdGVwaWNrZXItaGRcIn0sW19jKCdkaXYnLHtjbGFzczp7XG4gICAgICAgICAgJ2RhdGVwaWNrZXItcHJldic6IHRydWUsXG4gICAgICAgICAgZGlzYWJsZWQ6IF92bS5maXJzdERheUVwb2NoIC0gODY0MDAwMDAgPCBfdm0uZnJvbURhdGUsXG4gICAgICAgIH0sb246e1wiY2xpY2tcIjpfdm0ucHJldk1vbnRofX0sW19jKCdpY29uJyx7YXR0cnM6e1wibmFtZVwiOlwiYXJyb3ctbGVmdFwifX0pXSwxKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkYXRlcGlja2VyLWhkLWNlbnRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZGF0ZXBpY2tlci15ZWFyXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLnNlbGVjdFllYXIoJGV2ZW50KX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgIFwiK192bS5fcyhfdm0uY3VycmVudFllYXIpK1wiXFxuXFxuICAgICAgICAgIFwiKSxfYygndHJhbnNpdGlvbicse2F0dHJzOntcIm5hbWVcIjpcInNwcmVhZFwifX0sWyhfdm0uc2hvd1llYXJTZWxlY3QpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInNlbGVjdC1saXN0XCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTt9fX0sX3ZtLl9sKChfdm0ueWVhcnNMaXN0KSxmdW5jdGlvbih5ZWFyLHllYXJLZXkpe3JldHVybiBfYygnZGl2Jyx7a2V5OnllYXJLZXksY2xhc3M6e1xuICAgICAgICAgICAgICAgICAgJ3NlbGVjdC1pdGVtJzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICdpdGVtLXNlbGVjdGVkJzogX3ZtLmN1cnJlbnRZZWFyID09PSB5ZWFyLFxuICAgICAgICAgICAgICAgIH0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5zZXRZZWFyKHllYXIpfX19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgXCIrX3ZtLl9zKHllYXIpK1wiXFxuICAgICAgICAgICAgICBcIildKX0pKTpfdm0uX2UoKV0pXSwxKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJkYXRlcGlja2VyLW1vbnRoXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtfdm0uc2VsZWN0TW9udGgoKX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgIFwiK192bS5fcyhfdm0uY3VycmVudE1vbnRoKStcIlxcbiAgICAgICAgICBcIiksX2MoJ3RyYW5zaXRpb24nLHthdHRyczp7XCJuYW1lXCI6XCJzcHJlYWRcIn19LFsoX3ZtLnNob3dNb250aFNlbGVjdCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwic2VsZWN0LWxpc3RcIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO319fSxfdm0uX2woKF92bS5tb250aHNMaXN0KSxmdW5jdGlvbihtb250aCxtb250aEtleSl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6bW9udGhLZXksY2xhc3M6e1xuICAgICAgICAgICAgICAgICAgJ3NlbGVjdC1pdGVtJzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICdpdGVtLXNlbGVjdGVkJzogX3ZtLmN1cnJlbnRNb250aCA9PT0gbW9udGgsXG4gICAgICAgICAgICAgICAgfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNldE1vbnRoKG1vbnRoKX19fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgIFwiK192bS5fcyhtb250aCkrXCJcXG4gICAgICAgICAgICAgIFwiKV0pfSkpOl92bS5fZSgpXSldLDEpXSksX2MoJ2Rpdicse2NsYXNzOntcbiAgICAgICAgICAnZGF0ZXBpY2tlci1uZXh0JzogdHJ1ZSxcbiAgICAgICAgICBkaXNhYmxlZDogX3ZtLmxhc3REYXlFcG9jaCArIDg2NDAwMDAwID4gX3ZtLnRvRGF0ZSxcbiAgICAgICAgfSxvbjp7XCJjbGlja1wiOl92bS5uZXh0TW9udGh9fSxbX2MoJ2ljb24nLHthdHRyczp7XCJuYW1lXCI6XCJhcnJvdy1yaWdodFwifX0pXSwxKV0pOl92bS5fZSgpLCghX3ZtLmlzTG9hZGluZyk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY2FsZW5kYXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIndlZWtzLXJvd1wifSxfdm0uX2woKF92bS53ZWVrc0xpc3QpLGZ1bmN0aW9uKHdlZWtOYW1lLGtleSl7cmV0dXJuIF9jKCdkaXYnLHtrZXk6a2V5LHN0YXRpY0NsYXNzOlwid2Vla3MtY2VsbFwifSxbX3ZtLl92KFwiXFxuICAgICAgICAgIFwiK192bS5fcyh3ZWVrTmFtZSkrXCJcXG4gICAgICAgIFwiKV0pfSkpLF92bS5fbCgoX3ZtLnJvd3MpLGZ1bmN0aW9uKHJvdyxrZXkpe3JldHVybiBfYygnZGl2Jyx7a2V5OmtleSxzdGF0aWNDbGFzczpcImRhdGUtcm93XCJ9LF92bS5fbCgoX3ZtLmNvbHMpLGZ1bmN0aW9uKGNvbCxjb2xLZXkpe3JldHVybiBfYygnZGl2Jyx7a2V5OmNvbEtleSxzdGF0aWNDbGFzczpcImRhdGUtY2VsbFwiLGNsYXNzOntcbiAgICAgICAgICAgICdkYXRlLWNlbGwtc2VsZWN0ZWQnOlxuICAgICAgICAgICAgICBfdm0uZGF5TGlzdFtyb3cgKyBjb2xdICYmIF92bS5kYXlMaXN0W3JvdyArIGNvbF0uZXBvY2ggPT09IF92bS5zZWxjdGVkRGF0ZUVwb2NoLFxuICAgICAgICAgICAgdG9kYXk6IF92bS5kYXlMaXN0W3JvdyArIGNvbF0gJiYgX3ZtLmRheUxpc3Rbcm93ICsgY29sXS5lcG9jaCA9PT0gX3ZtLnRvZGF5LFxuICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5kYXlMaXN0W3JvdyArIGNvbF0gJiYgX3ZtLmRheUxpc3Rbcm93ICsgY29sXS5kaXNhYmxlZCxcbiAgICAgICAgICB9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uZGF0ZVNlbGVjdGVkKF92bS5kYXlMaXN0W3JvdyArIGNvbF0pfX19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgXCIrX3ZtLl9zKF92bS5kYXlMaXN0W3JvdyArIGNvbF0gJiYgX3ZtLmRheUxpc3Rbcm93ICsgY29sXS5kYXRlKStcIlxcbiAgICAgICAgXCIpXSl9KSl9KV0sMik6X3ZtLl9lKCldKTpfdm0uX2UoKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBWdWUgZnJvbSAndnVlJztcbmltcG9ydCBkaWFsb2cgZnJvbSAnLi9pbmRleC52dWUnO1xuXG5sZXQgaW5zdGFuY2UgPSBmYWxzZTtcblxuaWYgKCFpbnN0YW5jZSkge1xuICBsZXQgRGlhbG9nQ29tcG9uZW50ID0gVnVlLmV4dGVuZChkaWFsb2cpO1xuICBpbnN0YW5jZSA9IG5ldyBEaWFsb2dDb21wb25lbnQoe1xuICAgIGVsOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgfSk7XG5cbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnN0YW5jZS4kZWwpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnN0YW5jZTtcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtyZWY6XCJzY3JvbGwtd2FycFwiLHN0YXRpY0NsYXNzOlwic2Nyb2xsLXdhcnBcIixjbGFzczp7XG4gICAgJ3Njcm9sbC13YXJwLXB1bGxpbmcnOiBfdm0ucHVsbGluZyxcbiAgICAnc2Nyb2xsLXdhcnAtY29tcGxldGUnOiAhX3ZtLmhhc05leHQgJiYgIV92bS5pc0VtcHR5LFxuICAgICdzY3JvbGwtd2FycC1lbXB0eSc6IF92bS5pc0VtcHR5LFxuICB9LHN0eWxlOih7ICdwYWRkaW5nLWJvdHRvbSc6IChfdm0ubnVtYmVyS2V5Ym9hcmRDb3ZlckhlaWdodCArIFwicHhcIikgfSksb246e1wic2Nyb2xsXCI6X3ZtLm9uU2Nyb2xsLFwidG91Y2hzdGFydFwiOl92bS5vblRvdWNoc3RhcnQsXCJ0b3VjaG1vdmVcIjpfdm0ub25Ub3VjaG1vdmUsXCJ0b3VjaGVuZFwiOl92bS5vblRvdWNoZW5kfX0sWyhfdm0uYWxsb3dQdWxsRG93bik/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicHVsbC1yZWZyZXNoLXdhcnBcIixzdHlsZTooeyBoZWlnaHQ6IF92bS5wdWxsRGlzdCArICdweCcgfSl9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwdWxsLXJlZnJlc2hcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImFuaW1hdGlvbi1yZWZyZXNoZXJcIixjbGFzczp7IHJlZnJlc2hpbmc6IF92bS5yZWZyZXNoaW5nIH19KSwoX3ZtLnVwZGF0ZVRpbWUpP19jKCdwJyx7c3RhdGljQ2xhc3M6XCJwdWxsLXJlZnJlc2gtZGF0ZVwifSxbX3ZtLl92KFwi5pyA5ZCO5oiQ5Yqf5ZCM5q2l77yaXCIrX3ZtLl9zKF92bS51cGRhdGVUaW1lKSldKTpfdm0uX2UoKV0pXSk6X3ZtLl9lKCksX3ZtLl90KFwiZGVmYXVsdFwiKSwoX3ZtLmxvYWRpbmcpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBhZ2UtbG9hZGluZ1wifSxbX2MoJ3N2Zycse3N0YXRpY0NsYXNzOlwic3ZnLWxvYWRpbmdcIixhdHRyczp7XCJ2aWV3Qm94XCI6XCIwIDAgODAgODBcIn19LFtfYygnY2lyY2xlJyx7YXR0cnM6e1wiY3hcIjpcIjQwXCIsXCJjeVwiOlwiNDBcIixcInJcIjpcIjM2XCJ9fSldKV0pOl92bS5fZSgpLCghX3ZtLmhhc05leHQgJiYgIV92bS5pc0VtcHR5KT9bKF92bS4kc2xvdHNbJ2VuZCddKT9fdm0uX3QoXCJlbmRcIik6X3ZtLl9lKCksKCFfdm0uJHNsb3RzWydlbmQnXSAmJiBfdm0uZW5kVGV4dCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZW5kLXRleHRcIn0sW192bS5fdihcIlxcbiAgICAgIFwiK192bS5fcyhfdm0uZW5kVGV4dCkrXCJcXG4gICAgXCIpXSk6X3ZtLl9lKCldOl92bS5fZSgpXSwyKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2NhY2hlLWxvYWRlckAyLjAuMUBjYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3RocmVhZC1sb2FkZXJAMi4xLjNAdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2JhYmVsLWxvYWRlckA4LjIuMUBiYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdGhyZWFkLWxvYWRlckAyLjEuM0B0aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fYmFiZWwtbG9hZGVyQDguMi4xQGJhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yYjFhMzQ2YyZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yYjFhMzQ2YyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS43LjBAdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIyYjFhMzQ2Y1wiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MGEyNjZjNDQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiPHRlbXBsYXRlPlxuICA8cGFnZS1jb250ZW50IHRpdGxlPVwi5oql6KGoLei0qOmHj+ajgOafpVwiPlxuICAgIDxzY3JvbGxlclxuICAgICAgY2xhc3M9XCJyZXBvcnQtcHJvY2Vzcy1hY2NlcHQtd3JhcFwiXG4gICAgICA6aXMtZW1wdHk9XCJpc0xvYWRpbmcgfHwgIWxpc3QubGVuZ3RoIHx8ICEhZXJyb3JUaXBzXCJcbiAgICA+XG4gICAgICA8aXRlbSBjbGFzcz1cImJnLXN1Yi10aGVtZVwiIGJvcmRlcj1cImJvdHRvbVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1sYWJlbFwiIHN0eWxlPVwid2lkdGg6IDEwMHB4XCI+55m76K6w5pe26Ze0PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtLWNvbiBhbGlnbi1yXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInJlcG9ydC1kYXRlLWl0ZW1cIiBAY2xpY2s9XCJzZWxlY3REYXRlKCdzdGFydCcpXCI+e3sgZGF0ZVJhbmdlLnN0YXJ0IH19PC9kaXY+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZXBvcnQtZGF0ZS1zcGxpdFwiPuiHszwvc3Bhbj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVwb3J0LWRhdGUtaXRlbVwiIEBjbGljaz1cInNlbGVjdERhdGUoJ2VuZCcpXCI+e3sgZGF0ZVJhbmdlLmVuZCB9fTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvaXRlbT5cbiAgICAgIDxkaXYgdi1zaG93PVwiIWlzTG9hZGluZ1wiPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3M9XCJsaXN0IGJnLXdoaXRlIGJvcmRlci10YiBtdDEwXCJcbiAgICAgICAgICB2LWZvcj1cImJhdGNoIGluIGxpc3RcIlxuICAgICAgICAgIDprZXk9XCJiYXRjaC5pZFwiXG4gICAgICAgICAgQGNsaWNrPVwicHJvYmxlbUxpc3QoYmF0Y2gpXCJcbiAgICAgICAgICBkYXRhLXRyYWNrPVwi5oql6KGoLei0qOmHj+ajgOafpeaJueasoeWIl+ihqC3mn6XnnIvmibnmrKHor6bmg4VcIlxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tYmFzZSBtbDE1IGJvcmRlci1ib3R0b20gcGwwXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS10ZXh0IHBsMCBwcjEwXCI+e3sgYmF0Y2guYmF0Y2hfbmFtZSB9fTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tZm9udCBjb2xvci1ncmF5XCI+6K+m5oOFPC9kaXY+XG4gICAgICAgICAgICA8aSBjbGFzcz1cImljb24gaW9uLWlvcy1hcnJvdy1yaWdodFwiPjwvaT5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwhLS0g5oC75pWw5o2uIC0tPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXBvcnQtY2hlY2stZGF0YSBkaXNwbGF5LWZsZXhcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXBvcnQtY2hlY2stdG90YWxcIj5cbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJudW1cIj57eyBiYXRjaC5wcm9ibGVtcyB9fTwvcD5cbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJsYWJlbFwiPumXrumimOaAu+aVsDwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVwb3J0LWNoZWNrLWRpcyBmbGV4XCIgdi1pZj1cImJhdGNoLnByb2JsZW1zXCI+XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjbGFzcz1cInBhc3Nwb3J0XCJcbiAgICAgICAgICAgICAgICA6c3R5bGU9XCJ7XG4gICAgICAgICAgICAgICAgICBsZWZ0OiBgJHt0b0ZpeGVkKFxuICAgICAgICAgICAgICAgICAgICAoKGJhdGNoLnN0YXR1c1sn5bey6YCa6L+HJ10gKyBiYXRjaC5zdGF0dXNbJ+W+heWkjemqjCddKSAvIGJhdGNoLnByb2JsZW1zKSAqIDEwMFxuICAgICAgICAgICAgICAgICAgKX0lYCxcbiAgICAgICAgICAgICAgICB9XCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt7XG4gICAgICAgICAgICAgICAgdG9GaXhlZChcbiAgICAgICAgICAgICAgICAoKGJhdGNoLnN0YXR1c1sn5bey6YCa6L+HJ10gKyBiYXRjaC5zdGF0dXNbJ+W+heWkjemqjCddKSAvIGJhdGNoLnByb2JsZW1zKSAqIDEwMFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9fSUg5bey5pW05pS5XG4gICAgICAgICAgICAgICAgPGlcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiYXJyb3dsaW5lXCJcbiAgICAgICAgICAgICAgICA+PC9pPlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlzXCI+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkaXMtaXRlbSByZXBvcnQtY2hlY2steXRnXCJcbiAgICAgICAgICAgICAgICAgIDpzdHlsZT1cInsgd2lkdGg6IGAkeyhiYXRjaC5zdGF0dXNbJ+W3sumAmui/hyddIC8gYmF0Y2gucHJvYmxlbXMpICogMTAwfSVgIH1cIlxuICAgICAgICAgICAgICAgICAgdi1pZj1cImJhdGNoLnN0YXR1c1sn5bey6YCa6L+HJ11cIlxuICAgICAgICAgICAgICAgID48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICBjbGFzcz1cImRpcy1pdGVtIHJlcG9ydC1jaGVjay1kZnlcIlxuICAgICAgICAgICAgICAgICAgOnN0eWxlPVwieyB3aWR0aDogYCR7KGJhdGNoLnN0YXR1c1sn5b6F5aSN6aqMJ10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDB9JWAgfVwiXG4gICAgICAgICAgICAgICAgICB2LWlmPVwiYmF0Y2guc3RhdHVzWyflvoXlpI3pqownXVwiXG4gICAgICAgICAgICAgICAgPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZGlzLWl0ZW0gcmVwb3J0LWNoZWNrLWR6Z1wiXG4gICAgICAgICAgICAgICAgICA6c3R5bGU9XCJ7IHdpZHRoOiBgJHsoYmF0Y2guc3RhdHVzWyflvoXmlbTmlLknXSAvIGJhdGNoLnByb2JsZW1zKSAqIDEwMH0lYCB9XCJcbiAgICAgICAgICAgICAgICAgIHYtaWY9XCJiYXRjaC5zdGF0dXNbJ+W+heaVtOaUuSddXCJcbiAgICAgICAgICAgICAgICA+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJkaXMtaXRlbSByZXBvcnQtY2hlY2stZnpjZ2JcIlxuICAgICAgICAgICAgICAgICAgOnN0eWxlPVwieyB3aWR0aDogYCR7KGJhdGNoLnN0YXR1c1sn6Z2e5q2j5bi45YWz6ZetJ10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDB9JWAgfVwiXG4gICAgICAgICAgICAgICAgICB2LWlmPVwiYmF0Y2guc3RhdHVzWyfpnZ7mraPluLjlhbPpl60nXVwiXG4gICAgICAgICAgICAgICAgPjwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVwb3J0LWNoZWNrLWRpcyBmbGV4XCIgdi1pZj1cIiFiYXRjaC5wcm9ibGVtc1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlzLWVtcHR5XCI+PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwhLS0g5ZCE5Liq54q25oCB5pWw5o2uIC0tPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXBvcnQtY2hlY2stZGV0YWlsIGRpc3BsYXktZmxleCBhbGlnbi1jXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleFwiPlxuICAgICAgICAgICAgICA8cCBjbGFzcz1cIm51bVwiPnt7IGJhdGNoLnN0YXR1c1sn5bey6YCa6L+HJ10gfX08L3A+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgcmVwb3J0LWNoZWNrLXl0Z1wiPjwvZGl2PlxuICAgICAgICAgICAgICA8cCBjbGFzcz1cImxhYmVsXCI+5bey6YCa6L+He3sgdG9GaXhlZCgoYmF0Y2guc3RhdHVzWyflt7LpgJrov4cnXSAvIGJhdGNoLnByb2JsZW1zKSAqIDEwMCB8fCAwKSB9fSU8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4XCI+XG4gICAgICAgICAgICAgIDxwIGNsYXNzPVwibnVtXCI+e3sgYmF0Y2guc3RhdHVzWyflvoXlpI3pqownXSB9fTwvcD5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVuZGVybGluZSByZXBvcnQtY2hlY2stZGZ5XCI+PC9kaXY+XG4gICAgICAgICAgICAgIDxwIGNsYXNzPVwibGFiZWxcIj7lvoXlpI3pqox7eyB0b0ZpeGVkKChiYXRjaC5zdGF0dXNbJ+W+heWkjemqjCddIC8gYmF0Y2gucHJvYmxlbXMpICogMTAwIHx8IDApIH19JTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXhcIj5cbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJudW1cIj57eyBiYXRjaC5zdGF0dXNbJ+W+heaVtOaUuSddIH19PC9wPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidW5kZXJsaW5lIHJlcG9ydC1jaGVjay1kemdcIj48L2Rpdj5cbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJsYWJlbFwiPuW+heaVtOaUuXt7IHRvRml4ZWQoKGJhdGNoLnN0YXR1c1sn5b6F5pW05pS5J10gLyBiYXRjaC5wcm9ibGVtcykgKiAxMDAgfHwgMCkgfX0lPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleFwiPlxuICAgICAgICAgICAgICA8cCBjbGFzcz1cIm51bVwiPnt7IGJhdGNoLnN0YXR1c1sn6Z2e5q2j5bi45YWz6ZetJ10gfX08L3A+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgcmVwb3J0LWNoZWNrLWZ6Y2diXCI+PC9kaXY+XG4gICAgICAgICAgICAgIDxwXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJsYWJlbFwiXG4gICAgICAgICAgICAgID7pnZ7mraPluLjlhbPpl617eyB0b0ZpeGVkKChiYXRjaC5zdGF0dXNbJ+mdnuato+W4uOWFs+mXrSddIC8gYmF0Y2gucHJvYmxlbXMpICogMTAwIHx8IDApIH19JTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8bG9hZGluZy1zdGF0dXNcbiAgICAgICAgOmlzLWxvYWRpbmc9XCJpc0xvYWRpbmdcIlxuICAgICAgICA6aXMtZW1wdHk9XCIhaXNMb2FkaW5nICYmICFsaXN0Lmxlbmd0aFwiXG4gICAgICAgIDp0eXBlPVwiZXJyb3JUaXBzID8gJ2Vycm9yJyA6ICdyZXBvcnQnXCJcbiAgICAgICAgOmVtcHR5LXRleHQ9XCJlcnJvclRpcHMgfHwgJ+ayoeacieaKpeihqOaVsOaNridcIlxuICAgICAgLz5cbiAgICA8L3Njcm9sbGVyPlxuICA8L3BhZ2UtY29udGVudD5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgaXRlbSBmcm9tICdAY29tcG9uZW50cy9pdGVtLyc7XG5pbXBvcnQgU2Nyb2xsZXIgZnJvbSAnQGNvbXBvbmVudHMvc2Nyb2xsZXInO1xuaW1wb3J0IFJlcG9ydFNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL3JlcG9ydC9yZXBvcnQtc2VydmljZSc7XG5pbXBvcnQgRGF0ZXBpY2tlciBmcm9tICdAc3JjL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC5qcyc7XG4vLyBpbXBvcnQgUG9wdXAgZnJvbSAnQHNyYy91dGlscy9wb3B1cCc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgbmV0d29yayBmcm9tICdAc3JjL2ZyYW1ld29yay9uZXR3b3JrJztcbmltcG9ydCBsb2NhbFN0b3JhZ2UgZnJvbSAnQHNyYy9mcmFtZXdvcmsvbG9jYWxTdG9yYWdlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnUmVwb3J0Q2hlY2tRdWFsaXR5UHJvamVjdEluZGV4JyxcbiAgY29tcG9uZW50czoge1xuICAgIGl0ZW0sXG4gICAgU2Nyb2xsZXIsXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIOWKoOi9veS4rVxuICAgICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgICAgZXJyb3JUaXBzOiAnJyxcbiAgICAgIGxpc3Q6IFtdLCAvLyDlrZjmlL7mlbDmja5cbiAgICAgIGRhdGVSYW5nZToge1xuICAgICAgICBzdGFydDogbnVsbCxcbiAgICAgICAgZW5kOiBudWxsLFxuICAgICAgfSwgLy8g5a2Y5YKo5pe26Ze0XG4gICAgICBkZWZhdWx0RGF0YToge30sXG4gICAgICBiaWRzZWN0aW9uX2lkOiAnJyxcbiAgICAgIG1vZHVsZTogJ2NoZWNrLXF1YWxpdHknLFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgLy8g6YCJ5oup55qE6aG555uuaWRcbiAgICBwcm9qZWN0U2VsZWN0ZWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ2xvYmFsLmN1cnJlbnRSZXBvcnRQcm9qZWN0O1xuICAgIH0sXG4gIH0sXG4gIGFjdGl2YXRlZCgpIHtcbiAgICBpZiAoIXRoaXMuJHJvdXRlci5pc0JhY2spIHtcbiAgICAgIHRoaXMuYmlkc2VjdGlvbl9pZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmJpZHNlY3Rpb25faWQgfHwgJyc7XG4gICAgICB0aGlzLnN0YXJ0aW5nVGltZSgpO1xuICAgICAgdGhpcy5nZXRSZXBvcnREYXRhKCk7XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLy8g6I635Y+W5pWw5o2uXG4gICAgZ2V0UmVwb3J0RGF0YShwcm9qX2lkKSB7XG4gICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICB0aGlzLmVycm9yVGlwcyA9ICcnO1xuICAgICAgcHJval9pZCA9IHByb2pfaWQgfHwgdGhpcy5wcm9qZWN0U2VsZWN0ZWQuaWQ7XG5cbiAgICAgIG5ldHdvcmtcbiAgICAgICAgLmdldEhhc05ldHdvcmsoKVxuICAgICAgICAudGhlbihoYXNOZXR3b3JrID0+IHtcbiAgICAgICAgICBpZiAoIWhhc05ldHdvcmspIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgn5b2T5YmN572R57uc5peg5rOV5ZCM5q2l5pWw5o2uJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFJlcG9ydFNlcnZpY2UuZ2V0RGFpbHlDaGVja0RhdGEoXG4gICAgICAgICAgICBwcm9qX2lkLFxuICAgICAgICAgICAgdGhpcy5iaWRzZWN0aW9uX2lkLFxuICAgICAgICAgICAgdGhpcy5kYXRlUmFuZ2Uuc3RhcnQsXG4gICAgICAgICAgICB0aGlzLmRhdGVSYW5nZS5lbmQsXG4gICAgICAgICAgICB0aGlzLm1vZHVsZVxuICAgICAgICAgICkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgdGhpcy5saXN0ID0gIV8uaXNFbXB0eShyZXN1bHQpICYmIHJlc3VsdC5iYXRjaF9kYXRhID8gcmVzdWx0LmJhdGNoX2RhdGEgOiBbXTtcbiAgICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgdGhpcy5lcnJvclRpcHMgPSBfLmlzU3RyaW5nKGVycm9yKSA/IGVycm9yIDogJ+iOt+WPluaVsOaNruWksei0pSc7XG4gICAgICAgICAgdGhpcy5saXN0ID0gW107XG4gICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOW8gOWni+aXtumXtFxuICAgIHN0YXJ0aW5nVGltZSgpIHtcbiAgICAgIGNvbnN0IHsgc3RhcnRfZGF0ZSwgZW5kX2RhdGUgfSA9IHRoaXMuJHJvdXRlLnF1ZXJ5O1xuICAgICAgLy8g5b2T5YmN5bm05pyI5pelXG4gICAgICBsZXQgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgIGxldCB5ZWFyID0gbm93LmdldEZ1bGxZZWFyKCk7XG4gICAgICBsZXQgYmVmb3JlWWVhciA9IHllYXI7XG4gICAgICBsZXQgbW9udGggPSBub3cuZ2V0TW9udGgoKSArIDE7XG4gICAgICBsZXQgZGF5ID0gbm93LmdldERhdGUoKTtcbiAgICAgIGxldCBjdXJyZW50RGF0ZVR5cGUgPSBsb2NhbFN0b3JhZ2UuZ2V0U3RyaW5nKCdyZXBvcnREYXRlVHlwZScsIGxvY2FsU3RvcmFnZS5sZXZlbC51c2VyKTtcbiAgICAgIGxldCBjdXJyZW50V2Vla09mZGF5ID0gbW9tZW50KHllYXIgKyAnLScgKyBtb250aCArICctJyArIGRheSwgJ1lZWVktTU0tREQnKS5mb3JtYXQoJ0UnKTtcbiAgICAgIGxldCBjdXJyZW50Rmlyc3RXZWVrID0gbW9tZW50KClcbiAgICAgICAgLnN1YnRyYWN0KGN1cnJlbnRXZWVrT2ZkYXkgLSAxLCAnZGF5cycpXG4gICAgICAgIC5mb3JtYXQoJ1lZWVktTU0tREQnKTtcblxuICAgICAgaWYgKGRheSA8IDEwKSB7XG4gICAgICAgIGRheSA9ICcwJyArIGRheTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vbnRoIDwgMTApIHtcbiAgICAgICAgbW9udGggPSAnMCcgKyBtb250aDtcbiAgICAgIH1cblxuICAgICAgbGV0IGJlZm9yZU1vbnRoID0gbm93LmdldE1vbnRoKCkgKyAxO1xuICAgICAgaWYgKGJlZm9yZU1vbnRoID09PSAwKSB7XG4gICAgICAgIGJlZm9yZU1vbnRoID0gMTI7XG4gICAgICAgIGJlZm9yZVllYXIgPSBiZWZvcmVZZWFyIC0gMTtcbiAgICAgIH1cbiAgICAgIGlmIChiZWZvcmVNb250aCA8IDEwKSB7XG4gICAgICAgIGJlZm9yZU1vbnRoID0gJzAnICsgYmVmb3JlTW9udGg7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZGVmYXVsdERhdGEuc3RhcnQgPVxuICAgICAgICBjdXJyZW50RGF0ZVR5cGUgPT09ICd3ZWVrJyA/IGN1cnJlbnRGaXJzdFdlZWsgOiBiZWZvcmVZZWFyICsgJy0nICsgYmVmb3JlTW9udGggKyAnLTAxJztcbiAgICAgIHRoaXMuZGVmYXVsdERhdGEuZW5kID0geWVhciArICctJyArIG1vbnRoICsgJy0nICsgZGF5O1xuXG4gICAgICB0aGlzLmRhdGVSYW5nZSA9IHtcbiAgICAgICAgc3RhcnQ6XG4gICAgICAgICAgc3RhcnRfZGF0ZSB8fFxuICAgICAgICAgIHRoaXMuZGVmYXVsdERhdGEuc3RhcnQgfHxcbiAgICAgICAgICAoY3VycmVudERhdGVUeXBlID09PSAnd2VlaycgPyBjdXJyZW50Rmlyc3RXZWVrIDogYmVmb3JlWWVhciArICctJyArIGJlZm9yZU1vbnRoICsgJy0wMScpLFxuICAgICAgICBlbmQ6IGVuZF9kYXRlIHx8IHRoaXMuZGVmYXVsdERhdGEuZW5kIHx8IHllYXIgKyAnLScgKyBtb250aCArICctJyArIGRheSxcbiAgICAgIH07XG4gICAgfSxcblxuICAgIC8vIOmAieaLqeaXtumXtFxuICAgIHNlbGVjdERhdGUodHlwZSkge1xuICAgICAgbGV0IGRlZnVsdERhdGU7XG4gICAgICBsZXQgcmFuZ2UgPSB7XG4gICAgICAgIGZyb206ICcnLFxuICAgICAgICB0bzogJycsXG4gICAgICB9O1xuICAgICAgaWYgKHR5cGUgPT09ICdlbmQnKSB7XG4gICAgICAgIGRlZnVsdERhdGUgPSB0aGlzLm5ld0RhdGUodGhpcy5kYXRlUmFuZ2UuZW5kKTtcbiAgICAgICAgcmFuZ2UuZnJvbSA9IHRoaXMubmV3RGF0ZSh0aGlzLmRhdGVSYW5nZS5zdGFydCkgfHwgJyc7XG4gICAgICAgIHJhbmdlLnRvID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZWZ1bHREYXRlID0gdGhpcy5uZXdEYXRlKHRoaXMuZGF0ZVJhbmdlLnN0YXJ0KTtcbiAgICAgICAgcmFuZ2UuZnJvbSA9ICcnO1xuICAgICAgICByYW5nZS50byA9IHRoaXMubmV3RGF0ZSh0aGlzLmRhdGVSYW5nZS5lbmQpIHx8ICcnO1xuICAgICAgfVxuXG4gICAgICBEYXRlcGlja2VyLm9wZW5Qb3B1cCh7XG4gICAgICAgIGlucHV0RGF0ZTogZGVmdWx0RGF0ZSxcbiAgICAgICAgZnJvbTogcmFuZ2UuZnJvbSxcbiAgICAgICAgdG86IHJhbmdlLnRvLFxuICAgICAgICBjYWxsYmFjazogdmFsID0+IHtcbiAgICAgICAgICBpZiAodHlwZSA9PT0gJ2VuZCcpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0ZVJhbmdlLmVuZCA9IG1vbWVudCh2YWwpLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuICAgICAgICAgICAgdGhpcy5kZWZhdWx0RGF0YS5lbmQgPSB0aGlzLmRhdGVSYW5nZS5lbmQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZGF0ZVJhbmdlLnN0YXJ0ID0gbW9tZW50KHZhbCkuZm9ybWF0KCdZWVlZLU1NLUREJyk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHREYXRhLnN0YXJ0ID0gdGhpcy5kYXRlUmFuZ2Uuc3RhcnQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuZ2V0UmVwb3J0RGF0YSgpO1xuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOaXtumXtOWkhOeQhlxuICAgIG5ld0RhdGUoZGF0ZSkge1xuICAgICAgaWYgKCFkYXRlKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSgpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBkYXRlID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gbmV3IERhdGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2YXIgYXJyID0gZGF0ZS5tYXRjaCgvXFxkKy9nKTtcbiAgICAgIGlmIChhcnIubGVuZ3RoIDwgMykge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICBhcnJbaV0gPSBwYXJzZUludChhcnJbaV0pO1xuICAgICAgfVxuXG4gICAgICB2YXIgcnMgPSBuZXcgRGF0ZShhcnJbMF0sIGFyclsxXSAtIDEsIGFyclsyXSwgYXJyWzNdIHx8IDAsIGFycls0XSB8fCAwLCBhcnJbNV0gfHwgMCk7XG4gICAgICByZXR1cm4gcnM7XG4gICAgfSxcblxuICAgIC8vIOi/m+WFpeivpuaDhVxuICAgIHByb2JsZW1MaXN0KGJhdGNoKSB7XG4gICAgICBjb25zdCBxdWVyeSA9IHtcbiAgICAgICAgYmF0Y2hJZDogYmF0Y2guYmF0Y2hfaWQsXG4gICAgICAgIGRhdGVTdGFydDogdGhpcy5kYXRlUmFuZ2Uuc3RhcnQsXG4gICAgICAgIGRhdGVFbmQ6IHRoaXMuZGF0ZVJhbmdlLmVuZCxcbiAgICAgICAgYmF0Y2hOYW1lOiBiYXRjaC5iYXRjaF9uYW1lLFxuICAgICAgfTtcbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtcbiAgICAgICAgbmFtZTogJ1JlcG9ydENoZWNrUXVhbGl0eVByb2plY3RMaXN0JyxcbiAgICAgICAgcXVlcnksXG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g5Y+W5bCP5pWw54K55ZCO5LiA5L2N77yM5oiWIGRpZ2l0cyDkvY1cbiAgICB0b0ZpeGVkKG51bSwgZGlnaXRzKSB7XG4gICAgICBudW0gPSBOdW1iZXIobnVtKTtcbiAgICAgIHJldHVybiBudW0udG9GaXhlZChkaWdpdHMgfHwgMSk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuQGltcG9ydCAnQHNyYy9zdHlsZXMvcmVwb3J0LWNoZWNrLnNjc3MnO1xuXG4uaXRlbS1zZWxlY3QtcHJvamVjdCA+IGRpdiB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuPC9zdHlsZT5cbiIsIi8qXG4gKiBAQXV0aG9yOiDnjovkvJ/vvIjkupHpk77vvIlcbiAqIEBEYXRlOiAyMDIwLTEwLTEzIDE4OjI0OjIyXG4gKiBATGFzdCBNb2RpZmllZCBieTog546L5Lyf77yI5LqR6ZO+77yJXG4gKiBATGFzdCBNb2RpZmllZCB0aW1lOiAyMDIwLTEwLTE0IDE0OjU5OjEzXG4gKi9cbmltcG9ydCB7IGdldEhhc05ldHdvcmsgfSBmcm9tICdAc3JjL2FwaS9jb21tb24vbmV0d29yayc7XG5pbXBvcnQgV2ViU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL3dlYi1zZXJ2aWNlJztcbmltcG9ydCBFU0FQSSBmcm9tICcuLi9lcy1jb25maWcuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGFza0luZm8ocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkuc2NoZWR1bGVQbGFuVGFza0luZm8udXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVUYXNrUmVwb3J0KGFjY2VwdERhdGEpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5zY2hlZHVsZVBsYW5TYXZlVGFzay51cmw7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucG9zdCh1cmwsIG51bGwsIGFjY2VwdERhdGEpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBsYW5MaXN0KHBhcmFtcykge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEVTQVBJLnNjaGVkdWxlUGxhblBsYW5MaXN0LnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlTGlzdChwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5zY2hlZHVsZVBsYW5Ob2RlTGlzdC51cmw7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCh1cmwsIHBhcmFtcyk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm9kZUluZm8ocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkuc2NoZWR1bGVQbGFuTm9kZUluZm8udXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVSZXBvcnQoYWNjZXB0RGF0YSkge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEVTQVBJLnNjaGVkdWxlUGxhblNhdmVSZXBvcnQudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnBvc3QodXJsLCBudWxsLCBhY2NlcHREYXRhKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlQ29tcGxldGVUaW1lKGFjY2VwdERhdGEpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5zY2hlZHVsZVBsYW5TYXZlQ29tcGxldGVUaW1lLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5wb3N0KHVybCwgbnVsbCwgYWNjZXB0RGF0YSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2F2ZUNoZWNrZXIoYWNjZXB0RGF0YSkge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEVTQVBJLnNjaGVkdWxlUGxhblNhdmVDaGVja2VyLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5wb3N0KHVybCwgbnVsbCwgYWNjZXB0RGF0YSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hlY2tlckxvZ0xpc3QocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkuc2NoZWR1bGVQbGFuQ2hlY2tlckxvZ0xpc3QudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVMZXZlbChwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5zY2hlZHVsZVBsYW5Ob2RlTGV2ZWwudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbXBsZXRlZFRpbWVTZXR0aW5nKCkge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEVTQVBJLnNjaGVkdWxlUGxhbkNvbXBsZXRlZFRpbWVTZXR0aW5nLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGVhZGVyU2NoZWR1bGVQbGFuKCkge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEVTQVBJLnNjaGVkdWxlUGxhbkxlYWRlclNjaGVkdWxlUGxhbi51cmw7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCh1cmwpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ5Rmlyc3RQcm9qZWN0KHBhcmFtcykge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEVTQVBJLnNjaGVkdWxlUGxhbkdldEJ5Rmlyc3RQcm9qZWN0LnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi56amFwcCAuc2Nyb2xsLXdhcnBbZGF0YS12LTJiMWEzNDZjXXtmbGV4OjE7b3ZlcmZsb3c6YXV0bzstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0uemphcHAgLnNjcm9sbC13YXJwLXB1bGxpbmdbZGF0YS12LTJiMWEzNDZjXXtvdmVyZmxvdzpoaWRkZW59LnpqYXBwIC5zY3JvbGwtd2FycC1jb21wbGV0ZVtkYXRhLXYtMmIxYTM0NmNdOmFmdGVye2NvbnRlbnQ6XFxcIlxcXCI7ZGlzcGxheTpibG9jaztoZWlnaHQ6MTAwcHh9LnpqYXBwIC5zY3JvbGwtd2FycC1lbXB0eVtkYXRhLXYtMmIxYTM0NmNde2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LnpqYXBwIC5wdWxsLXJlZnJlc2gtd2FycFtkYXRhLXYtMmIxYTM0NmNde3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDowO292ZXJmbG93OmhpZGRlbn0uemphcHAgLnB1bGwtcmVmcmVzaFtkYXRhLXYtMmIxYTM0NmNde3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDtib3R0b206MDtoZWlnaHQ6NzBweDt3aWR0aDoxMDAlO3BhZGRpbmc6NnB4O3RleHQtYWxpZ246Y2VudGVyfS56amFwcCAucHVsbC1yZWZyZXNoLWRhdGVbZGF0YS12LTJiMWEzNDZjXXttYXJnaW4tdG9wOjRweDtoZWlnaHQ6MTZweDtsaW5lLWhlaWdodDoxNnB4O2ZvbnQtc2l6ZToxMnB4O2NvbG9yOiNiY2JjYmN9LnpqYXBwIC5wYWdlLWxvYWRpbmdbZGF0YS12LTJiMWEzNDZjXXtwYWRkaW5nOjEwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9LnpqYXBwIC5lbmQtdGV4dFtkYXRhLXYtMmIxYTM0NmNde2NvbG9yOiNjOGM4Yzg7YmFja2dyb3VuZDojZjRmNGY0O3Bvc2l0aW9uOnJlbGF0aXZlO2xpbmUtaGVpZ2h0Ojc2cHg7aGVpZ2h0Ojc2cHg7dGV4dC1hbGlnbjpjZW50ZXJ9LnpqYXBwIC5lbmQtdGV4dFtkYXRhLXYtMmIxYTM0NmNdOmFmdGVyLC56amFwcCAuZW5kLXRleHRbZGF0YS12LTJiMWEzNDZjXTpiZWZvcmV7Y29udGVudDpcXFwiXFxcIjtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo0OHB4O2hlaWdodDoxcHg7YmFja2dyb3VuZDojZTRlNGU0O3RvcDo1MCU7bWFyZ2luLXRvcDotMXB4fS56amFwcCAuZW5kLXRleHRbZGF0YS12LTJiMWEzNDZjXTphZnRlcntsZWZ0OjUwJTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgtOTJweCl9LnpqYXBwIC5lbmQtdGV4dFtkYXRhLXYtMmIxYTM0NmNdOmJlZm9yZXtyaWdodDo1MCU7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoOTBweCl9LnpqYXBwIC5lbmQtc2xvdFtkYXRhLXYtMmIxYTM0NmNde3BhZGRpbmc6MzBweDtsaW5lLWhlaWdodDoxOHB4O3RleHQtYWxpZ246Y2VudGVyO2NvbG9yOiNjOGM4Yzh9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yYjFhMzQ2YyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCIvKlxuICogQEF1dGhvcjog546L5Lyf77yI5LqR6ZO+77yJXG4gKiBARGF0ZTogMjAyMC0xMC0xNCAxNToxODozNFxuICogQExhc3QgTW9kaWZpZWQgYnk6IOeOi+S8n++8iOS6kemTvu+8iVxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAyMC0xMC0xNCAxNjoyNzo1MlxuICovXG5pbXBvcnQgeyBnZXRIYXNOZXR3b3JrIH0gZnJvbSAnQHNyYy9hcGkvY29tbW9uL25ldHdvcmsnO1xuaW1wb3J0IFdlYlNlcnZpY2UgZnJvbSAnQHNyYy9zZXJ2aWNlL2NvbW1vbi93ZWItc2VydmljZSc7XG5pbXBvcnQgRVNBUEkgZnJvbSAnLi4vZXMtY29uZmlnLmpzJztcbmltcG9ydCBBUEkgZnJvbSAnLi4vY29uZmlnLmpzJztcblxuLy8g5YWs5YWxXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvYmxlbUNsYXNzVHJlZShwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5jb21tb25HZXRQcm9ibGVtQ2xhc3NUcmVlLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG5cbi8vIOahqeWfuumqjOaUtlxuZXhwb3J0IGZ1bmN0aW9uIGdldFBpbGVCdWlsZGluZ1N1bW1hcnkocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkucGlsZUFjY2VwdEdldFBpbGVCdWlsZGluZ1N1bW1hcnkudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJpZHNlY3Rpb25CdWlsZGluZ1RyZWUocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkucGlsZUFjY2VwdEdldEJpZHNlY3Rpb25CdWlsZGluZ1RyZWUudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBpbGVBY2NlcHRJdGVtcygpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5waWxlQWNjZXB0R2V0UGlsZUFjY2VwdEl0ZW1zLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGlsZUFjY2VwdExpc3QocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkucGlsZUFjY2VwdEdldFBpbGVBY2NlcHRMaXN0LnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQaWxlQWNjZXB0SW5mbyhwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5waWxlQWNjZXB0R2V0UGlsZUFjY2VwdEluZm8udXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuLy8g5bel5bqP6aqM5pS2djFcbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzQWNjZXB0TmV3QnVpbGRpbmcocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkucHJvY2Vzc0FjY2VwdEJ1aWxkaW5nLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzQWNjZXB0TmV3Q29sbGVjdChwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5wcm9jZXNzQWNjZXB0Q29sbGVjdC51cmw7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCh1cmwsIHBhcmFtcyk7XG4gIH0pO1xufVxuXG4vLyDlt6Xluo/pqozmlLZ2M1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1aWxkaW5nTGlzdChwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBFU0FQSS5wcm9jZXNzQWNjZXB0djNHZXRCdWlsZGluZ0xpc3QudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb2Nlc3NBY2NlcHR2M0xpc3QocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gRVNBUEkucHJvY2Vzc0FjY2VwdHYzR2V0UHJvY2Vzc0FjY2VwdHYzTGlzdC51cmw7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucmVxdWVzdCh1cmwsIHBhcmFtcyk7XG4gIH0pO1xufVxuXG4vLyDmiqXooajnu4Tnu4fmnrbmnoTmoJFcbmV4cG9ydCBmdW5jdGlvbiBnZXRSZXBvcnRPcmdUcmVlKHBhcmFtcykge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEFQSS5nZXRSZXBvcnRPcmdUcmVlLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG4vLyDojrflj5bpppbpobXmiqXooajmlbDmja5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIb21lUmVwb3J0cyhwYXJhbXMpIHtcbiAgcmV0dXJuIGdldEhhc05ldHdvcmsoKS50aGVuKCgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBBUEkuZ2V0SG9tZVJlcG9ydHMudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuLy8g6I635Y+W6aaW6aG15oql6KGo5pWw5o2uXG5leHBvcnQgZnVuY3Rpb24gZ2V0TXlSZXBvcnRzKHBhcmFtcykge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEFQSS5nZXRNeVJlcG9ydHMudXJsO1xuICAgIHJldHVybiBXZWJTZXJ2aWNlLnJlcXVlc3QodXJsLCBwYXJhbXMpO1xuICB9KTtcbn1cblxuLy8g6I635Y+W5omA5pyJ55qE5oql6KGoXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVwb3J0UG9vbHMocGFyYW1zKSB7XG4gIHJldHVybiBnZXRIYXNOZXR3b3JrKCkudGhlbigoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gQVBJLmdldFJlcG9ydFBvb2xzLnVybDtcbiAgICByZXR1cm4gV2ViU2VydmljZS5yZXF1ZXN0KHVybCwgcGFyYW1zKTtcbiAgfSk7XG59XG5cbi8vIOS/neWtmOaIkeeahOaKpeihqOiuvue9rlxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVNeVJlcG9ydHNTZXR0aW5nKHBhcmFtcykge1xuICByZXR1cm4gZ2V0SGFzTmV0d29yaygpLnRoZW4oKCkgPT4ge1xuICAgIGNvbnN0IHVybCA9IEFQSS5zYXZlTXlSZXBvcnRzU2V0dGluZy51cmw7XG4gICAgcmV0dXJuIFdlYlNlcnZpY2UucG9zdCh1cmwsIG51bGwsIHBhcmFtcyk7XG4gIH0pO1xufVxuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuemphcHAgLmxheW91dC1tYWluW2RhdGEtdi0wYTI2NmM0NF0gLmxheW91dC1jb250ZW50e292ZXJmbG93OmF1dG99LnpqYXBwIC5kYXRlcGlja2VyLWhkW2RhdGEtdi0wYTI2NmM0NF17ZGlzcGxheTpmbGV4O3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmc6NXB4IDVweCAxNXB4IDVweH0uemphcHAgLmRhdGVwaWNrZXItaGQtY2VudGVyW2RhdGEtdi0wYTI2NmM0NF17ZmxleDoxO2Rpc3BsYXk6ZmxleDtwYWRkaW5nOjEwcHggNXB4fS56amFwcCAuZGF0ZXBpY2tlci1tb250aFtkYXRhLXYtMGEyNjZjNDRdLC56amFwcCAuZGF0ZXBpY2tlci15ZWFyW2RhdGEtdi0wYTI2NmM0NF17cG9zaXRpb246cmVsYXRpdmU7ZmxleDoxO2JvcmRlcjpub25lO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICM0Mzc0ZWE7cGFkZGluZzowO2xpbmUtaGVpZ2h0OjI2cHg7Zm9udC1zaXplOjE0cHg7dGV4dC1hbGlnbjpjZW50ZXJ9LnpqYXBwIC5kYXRlcGlja2VyLW1vbnRoW2RhdGEtdi0wYTI2NmM0NF17bWFyZ2luLWxlZnQ6MTBweH0uemphcHAgLmRhdGVwaWNrZXItbW9udGhbZGF0YS12LTBhMjY2YzQ0XTphZnRlciwuemphcHAgLmRhdGVwaWNrZXIteWVhcltkYXRhLXYtMGEyNjZjNDRdOmFmdGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7cmlnaHQ6NXB4O21hcmdpbi10b3A6LTNweDt3aWR0aDowO2hlaWdodDowO2JvcmRlci10b3A6NXB4IHNvbGlkO2JvcmRlci1yaWdodDo1cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWxlZnQ6NXB4IHNvbGlkIHRyYW5zcGFyZW50O2NvbnRlbnQ6XFxcIlxcXCI7cG9pbnRlci1ldmVudHM6bm9uZTtjb2xvcjojNDM3NGVhfS56amFwcCAuZGF0ZXBpY2tlci1uZXh0W2RhdGEtdi0wYTI2NmM0NF0sLnpqYXBwIC5kYXRlcGlja2VyLXByZXZbZGF0YS12LTBhMjY2YzQ0XXt3aWR0aDoxMCU7cGFkZGluZzoxMHB4IDVweDtmb250LXNpemU6MjRweDtjb2xvcjojNDM3NGVhfS56amFwcCAuc2VsZWN0LWxpc3RbZGF0YS12LTBhMjY2YzQ0XXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MjdweDtsZWZ0OjA7d2lkdGg6MTAwJTttYXgtaGVpZ2h0OjM4MHB4O292ZXJmbG93OmF1dG87YmFja2dyb3VuZC1jb2xvcjojZmZmO2JveC1zaGFkb3c6MCAwIDVweCAjMzMzfS56amFwcCAuc2VsZWN0LWl0ZW1bZGF0YS12LTBhMjY2YzQ0XXtwYWRkaW5nOjVweDtoZWlnaHQ6MzhweDtsaW5lLWhlaWdodDoyOHB4fS56amFwcCAuaXRlbS1zZWxlY3RlZFtkYXRhLXYtMGEyNjZjNDRde2JhY2tncm91bmQtY29sb3I6IzQzNzRlYTtjb2xvcjojZmZmfS56amFwcCAud2Vla3Mtcm93W2RhdGEtdi0wYTI2NmM0NF17cGFkZGluZzo1cHg7ZGlzcGxheTpmbGV4fS56amFwcCAud2Vla3MtY2VsbFtkYXRhLXYtMGEyNjZjNDRde2ZsZXg6MTtsaW5lLWhlaWdodDoyMHB4O3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMH0uemphcHAgLmRhdGUtcm93W2RhdGEtdi0wYTI2NmM0NF17cGFkZGluZzowIDVweDtkaXNwbGF5OmZsZXh9LnpqYXBwIC5kYXRlLWNlbGxbZGF0YS12LTBhMjY2YzQ0XXtmbGV4OjE7aGVpZ2h0OjUwcHg7bGluZS1oZWlnaHQ6NTBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTRweH0uemphcHAgLmRhdGUtY2VsbC1zZWxlY3RlZFtkYXRhLXYtMGEyNjZjNDRde2JhY2tncm91bmQtY29sb3I6IzQzNzRlYTtjb2xvcjojZmZmO2ZvbnQtd2VpZ2h0OjcwMH0uemphcHAgLmRhdGUtY2VsbC50b2RheVtkYXRhLXYtMGEyNjZjNDRde2JvcmRlcjoxcHggc29saWQgIzQzNzRlYX0uemphcHAgLmRpc2FibGVkW2RhdGEtdi0wYTI2NmM0NF17cG9pbnRlci1ldmVudHM6bm9uZTtjb2xvcjojYWFhfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdlxuICAgIHJlZj1cInNjcm9sbC13YXJwXCJcbiAgICBjbGFzcz1cInNjcm9sbC13YXJwXCJcbiAgICA6Y2xhc3M9XCJ7XG4gICAgICAnc2Nyb2xsLXdhcnAtcHVsbGluZyc6IHB1bGxpbmcsXG4gICAgICAnc2Nyb2xsLXdhcnAtY29tcGxldGUnOiAhaGFzTmV4dCAmJiAhaXNFbXB0eSxcbiAgICAgICdzY3JvbGwtd2FycC1lbXB0eSc6IGlzRW1wdHksXG4gICAgfVwiXG4gICAgOnN0eWxlPVwieyAncGFkZGluZy1ib3R0b20nOiBgJHtudW1iZXJLZXlib2FyZENvdmVySGVpZ2h0fXB4YCB9XCJcbiAgICBAc2Nyb2xsPVwib25TY3JvbGxcIlxuICAgIEB0b3VjaHN0YXJ0PVwib25Ub3VjaHN0YXJ0XCJcbiAgICBAdG91Y2htb3ZlPVwib25Ub3VjaG1vdmVcIlxuICAgIEB0b3VjaGVuZD1cIm9uVG91Y2hlbmRcIlxuICA+XG4gICAgPCEtLSDkuIvmi4nliLfmlrAgLS0+XG4gICAgPGRpdiB2LWlmPVwiYWxsb3dQdWxsRG93blwiIGNsYXNzPVwicHVsbC1yZWZyZXNoLXdhcnBcIiA6c3R5bGU9XCJ7IGhlaWdodDogcHVsbERpc3QgKyAncHgnIH1cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwdWxsLXJlZnJlc2hcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImFuaW1hdGlvbi1yZWZyZXNoZXJcIiA6Y2xhc3M9XCJ7IHJlZnJlc2hpbmc6IHJlZnJlc2hpbmcgfVwiIC8+XG4gICAgICAgIDxwIHYtaWY9XCJ1cGRhdGVUaW1lXCIgY2xhc3M9XCJwdWxsLXJlZnJlc2gtZGF0ZVwiPuacgOWQjuaIkOWKn+WQjOatpe+8mnt7IHVwZGF0ZVRpbWUgfX08L3A+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8IS0tIOS4i+aLieWIt+aWsCBlbmQgLS0+XG5cbiAgICA8c2xvdCAvPlxuXG4gICAgPCEtLSDliqDovb3liIbpobUgLS0+XG4gICAgPGRpdiB2LWlmPVwibG9hZGluZ1wiIGNsYXNzPVwicGFnZS1sb2FkaW5nXCI+XG4gICAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgODAgODBcIiBjbGFzcz1cInN2Zy1sb2FkaW5nXCI+XG4gICAgICAgIDxjaXJjbGUgY3g9XCI0MFwiIGN5PVwiNDBcIiByPVwiMzZcIiAvPlxuICAgICAgPC9zdmc+XG4gICAgPC9kaXY+XG5cbiAgICA8dGVtcGxhdGUgdi1pZj1cIiFoYXNOZXh0ICYmICFpc0VtcHR5XCI+XG4gICAgICA8c2xvdCB2LWlmPVwiJHNsb3RzWydlbmQnXVwiIG5hbWU9XCJlbmRcIj48L3Nsb3Q+XG4gICAgICA8ZGl2IHYtaWY9XCIhJHNsb3RzWydlbmQnXSAmJiBlbmRUZXh0XCIgY2xhc3M9XCJlbmQtdGV4dFwiPlxuICAgICAgICB7eyBlbmRUZXh0IH19XG4gICAgICA8L2Rpdj5cbiAgICA8L3RlbXBsYXRlPlxuICAgIDwhLS0g5Yqg6L295YiG6aG1IGVuZCAtLT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHN0b3JlIGZyb20gJ0BzdG9yZSc7XG4vLyBpbXBvcnQgbG9jYWxTdG9yYWdlQXBpIGZyb20gJ0BzcmMvZnJhbWV3b3JrL2xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgRGF0YVN5bmNocm9uaXplciBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL2RhdGEtc3luY2hyb25pemVyJztcbmltcG9ydCBXZWJTZXJ2aWNlIGZyb20gJ0BzcmMvc2VydmljZS9jb21tb24vd2ViLXNlcnZpY2UnO1xuaW1wb3J0IFBvcHVwIGZyb20gJ0BzcmMvdXRpbHMvcG9wdXAnO1xuaW1wb3J0IFRhbGtpbmdEYXRhU2VydmljZSBmcm9tICdAc3JjL3NlcnZpY2UvY29tbW9uL3RhbGtpbmctZGF0YS1zZXJ2aWNlJztcbmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnQGNvbW1vbi9ldmVudC1idXMnO1xuXG5sZXQgX3N0YXJ0ID0ge307XG5sZXQgX3JlZnJlc2hlckhlaWdodCA9IDcwO1xubGV0IF9zY3JvbGxWZXJzaW9uO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdTY3JvbGxlcicsXG4gIHByb3BzOiB7XG4gICAgYnVpbGRpbmdJZDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICAvLyDmmK/lkKbmnInkuIvkuIDpobVcbiAgICBoYXNOZXh0OiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICAvLyDliJfooajmmK/lkKbmmK/nqbrnmoTvvIzkuI3kuLrnqbrml7blupXpg6jkvJrmnIkgcGFkZGluZzogMTAwcHhcbiAgICBpc0VtcHR5OiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSxcbiAgICAvLyDkuIvmi4nmmK/lkKblkIzmraXmlbDmja5cbiAgICBpc1N5bmM6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlLFxuICAgIH0sXG4gICAgLy8g57+75Yiw5pyr6aG15pe255qE5paH5a2X5o+Q56S6XG4gICAgZW5kVGV4dDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsXG4gICAgfSxcbiAgICAvLyDmmK/lkKborrDkvY/mu5rliqjmnaHkvY3nva7vvIzlnKjigJzov5Tlm57igJ3liLDlvZPliY3pobXpnaLml7bvvIzmgaLlpI3kvY3nva5cbiAgICBtZW1vcnlTY3JvbGxUb3A6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlLFxuICAgIH0sXG4gICAgLy8g5L+d5oyB5b2T5YmN5rua5Yqo5p2h55qE5L2N572u5LiN5Y+Y77yM5LiN566h5piv4oCc5YmN6L+b4oCd6L+Y5piv4oCc6L+U5Zue4oCd6aG16Z2iXG4gICAga2VlcFNjcm9sbFRvcDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICB9LFxuICAgIGhhc1B1bGxEb3duOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICAgIG9uUHVsbERvd246IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHB1bGxEaXN0OiAwLFxuXG4gICAgICByZWZyZXNoaW5nOiBmYWxzZSxcbiAgICAgIHB1bGxpbmc6IGZhbHNlLFxuICAgICAgbG9hZGluZzogZmFsc2UsXG5cbiAgICAgIC8vIOiusOS9j+a7muWKqOadoeS9jee9rlxuICAgICAgc2Nyb2xsVG9wOiAwLFxuICAgICAgaXNDdXJyS2V5Ym9hcmQ6IGZhbHNlLFxuXG4gICAgICAvLyDmu5rliqjljLrln5/ot53nprvpobXpnaLlupXpg6jnmoTot53nprtcbiAgICAgIGdhcEJvdHRvbTogMCxcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGFsbG93UHVsbERvd24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5oYXNQdWxsRG93biAmJiAoISF0aGlzLiRsaXN0ZW5lcnMucHVsbERvd24gfHwgISF0aGlzLm9uUHVsbERvd24pO1xuICAgIH0sXG4gICAgdXBkYXRlVGltZSgpIHtcbiAgICAgIHJldHVybiBzdG9yZS5zdGF0ZS5nbG9iYWwuYnVzaW5lc3NEb3dubG9hZFRpbWU7XG4gICAgfSxcblxuICAgIC8vIOW9k+aVsOWtl+mUruebmOaJk+W8gOaXtu+8jOa7muWKqOWMuuWfn+iiq+mBruaMoeeahOmrmOW6pu+8iOeUqCBwYWRkaW5nLWJvdHRvbSDmlrnms5XmirXmtojmjonvvIlcbiAgICBudW1iZXJLZXlib2FyZENvdmVySGVpZ2h0KCkge1xuICAgICAgbGV0IHJlc3VsdCA9IDA7XG5cbiAgICAgIHJlc3VsdCA9IHN0b3JlLnN0YXRlLmdsb2JhbC5pc051bWJlcklucHV0T3BlblxuICAgICAgICA/IHN0b3JlLnN0YXRlLmdsb2JhbC5udW1iZXJLZXlib2FyZEhlaWdodCAtIHRoaXMuZ2FwQm90dG9tXG4gICAgICAgIDogMDtcblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICB9LFxuICBtb3VudGVkKCkge1xuICAgIC8vIOe7keWumuaVsOe7hOmUruebmOS6i+S7tlxuICAgIEV2ZW50QnVzLiRvbignbnVtYmVyS2V5Ym9hcmRPcGVuJywgdGhpcy5vbk51bWJlcktleWJvYXJkT3Blbik7XG5cbiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICBsZXQgY2xpZW50ID1cbiAgICAgICAgdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXSAmJlxuICAgICAgICB0aGlzLiRyZWZzWydzY3JvbGwtd2FycCddLmdldEJvdW5kaW5nQ2xpZW50UmVjdCAmJlxuICAgICAgICB0aGlzLiRyZWZzWydzY3JvbGwtd2FycCddLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgaWYgKGNsaWVudCkge1xuICAgICAgICB0aGlzLmdhcEJvdHRvbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgLSBjbGllbnQuYm90dG9tO1xuICAgICAgfVxuXG4gICAgICAvLyDnm5HlkKznhKbngrnkuovku7ZcbiAgICAgIHRoaXMuJGVsICYmXG4gICAgICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgJ2ZvY3VzJyxcbiAgICAgICAgICBlID0+IHtcbiAgICAgICAgICAgIGxldCB0YXJnZXQgPSBlICYmIGUudGFyZ2V0O1xuICAgICAgICAgICAgbGV0IHRhZ05hbWUgPSB0YXJnZXQgJiYgdGFyZ2V0LnRhZ05hbWUgJiYgdGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgICAgaWYgKHRhZ05hbWUgPT09ICdpbnB1dCcgfHwgdGFnTmFtZSA9PT0gJ3RleHRhcmVhJykge1xuICAgICAgICAgICAgICBsZXQgcmVzaXplSGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgdGFyZ2V0Qm91bmRpbmcgPSB0YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgbGV0IHNjcm9sbEJvdW5kaW5nID0gdGhpcy4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgbGV0IG92ZXJmbG93SCA9IHRhcmdldEJvdW5kaW5nLmJvdHRvbSAtIHNjcm9sbEJvdW5kaW5nLmJvdHRvbTtcblxuICAgICAgICAgICAgICAgIGlmIChvdmVyZmxvd0ggPiAwKSB7XG4gICAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbEJ5KG92ZXJmbG93SCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZXNpemVIYW5kbGVyLCBmYWxzZSk7XG4gICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZUhhbmRsZXIsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHRydWVcbiAgICAgICAgKTtcbiAgICB9KTtcbiAgfSxcbiAgZGVzdHJveWVkKCkge1xuICAgIC8vIOaOpeinpuaVsOWtl+mUruebmOS6i+S7tlxuICAgIEV2ZW50QnVzLiRvZmYoJ251bWJlcktleWJvYXJkT3BlbicsIHRoaXMub25OdW1iZXJLZXlib2FyZE9wZW4pO1xuICB9LFxuICBhY3RpdmF0ZWQoKSB7XG4gICAgLy8g5piv5ZCm5oGi5aSN5rua5Yqo5p2h5L2N572uXG4gICAgbGV0IHJlc3VtZVNjcm9sbFRvcCA9IHRoaXMua2VlcFNjcm9sbFRvcCB8fCAodGhpcy4kcm91dGVyLmlzQmFjayAmJiB0aGlzLm1lbW9yeVNjcm9sbFRvcCk7XG4gICAgaWYgKHRoaXMuc2Nyb2xsVG9wICYmIHJlc3VtZVNjcm9sbFRvcCkge1xuICAgICAgdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5zY3JvbGxUb3AgPSB0aGlzLnNjcm9sbFRvcDtcbiAgICB9XG4gIH0sXG4gIGRlYWN0aXZhdGVkKCkge1xuICAgIGlmICh0aGlzLm1lbW9yeVNjcm9sbFRvcCkge1xuICAgICAgdGhpcy5zY3JvbGxUb3AgPSB0aGlzLiRyZWZzWydzY3JvbGwtd2FycCddLnNjcm9sbFRvcDtcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvblNjcm9sbChlKSB7XG4gICAgICBsZXQgc2Nyb2xsVG9wID0gdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5zY3JvbGxUb3A7XG4gICAgICBsZXQgc2Nyb2xsSGVpZ2h0ID0gdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5zY3JvbGxIZWlnaHQ7XG4gICAgICBsZXQgY2xpZW50SGVpZ2h0ID0gdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5jbGllbnRIZWlnaHQ7XG5cbiAgICAgIC8vIOWIpOaWreaYr+WQpua7muWKqOWIsOW6lemDqFxuICAgICAgaWYgKHNjcm9sbFRvcCArIGNsaWVudEhlaWdodCA+PSBzY3JvbGxIZWlnaHQgLSA1ICYmICF0aGlzLmxvYWRpbmcgJiYgdGhpcy5oYXNOZXh0KSB7XG4gICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICAgIGxldCBsb2FkTmV4dFJlcyA9IHRoaXMuJGxpc3RlbmVycy5sb2FkTmV4dCgpO1xuXG4gICAgICAgIGlmIChsb2FkTmV4dFJlcyAmJiBsb2FkTmV4dFJlcy50aGVuICYmIHR5cGVvZiBsb2FkTmV4dFJlcy50aGVuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgbG9hZE5leHRSZXMudGhlbigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy4kZW1pdCgnc2Nyb2xsJywgZSk7XG4gICAgfSxcblxuICAgIC8vIOiOt+WPluinpuaRuOa7keWKqOeahOaWueWQke+8jOWPqui/lOWbniDigJx1cOKAnSDmiJbogIUg4oCcZG93buKAnVxuICAgIGdldFRvdWNoRGlyZXRpb24oZSkge1xuICAgICAgaWYgKCFfc3RhcnQgfHwgIWUgfHwgIWUudG91Y2hlcyB8fCAhZS50b3VjaGVzWzBdKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICAgIH1cbiAgICAgIGxldCB4ID0gZS50b3VjaGVzWzBdLmNsaWVudFg7XG4gICAgICBsZXQgeSA9IGUudG91Y2hlc1swXS5jbGllbnRZO1xuXG4gICAgICAvLyDnq5blkJHnp7vliqjlpKfkuo7mqKrlkJHnp7vliqjvvIzkuJToh7PlsJHnp7vliqgz5YOP57Sg77yI6YOo5YiG5py65Z6L6L+H5LqO5pWP5oSf77yM6YG/5YWN6L+H5pep6K6h566X5pa55ZCR77yM5Lya5Ye66ZSZ77yJXG4gICAgICBpZiAoTWF0aC5hYnMoeSAtIF9zdGFydC55KSA+IE1hdGguYWJzKHggLSBfc3RhcnQueCkgJiYgTWF0aC5hYnMoeSAtIF9zdGFydC55KSA+PSAzKSB7XG4gICAgICAgIGlmICh5ID4gX3N0YXJ0LnkpIHtcbiAgICAgICAgICByZXR1cm4gJ2Rvd24nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiAndXAnO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfSxcblxuICAgIG9uVG91Y2hzdGFydChlKSB7XG4gICAgICBpZiAoIXRoaXMuYWxsb3dQdWxsRG93bikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIOiusOS9j+WIneWni+WdkOagh1xuICAgICAgaWYgKGUudG91Y2hlcyAmJiBlLnRvdWNoZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIF9zdGFydCA9IHtcbiAgICAgICAgICB4OiBlLnRvdWNoZXNbMF0uY2xpZW50WCxcbiAgICAgICAgICB5OiBlLnRvdWNoZXNbMF0uY2xpZW50WSxcbiAgICAgICAgICBzY3JvbGxUb3A6IHRoaXMuJHJlZnNbJ3Njcm9sbC13YXJwJ10uc2Nyb2xsVG9wLFxuICAgICAgICAgIHB1bGxEaXN0OiB0aGlzLnB1bGxEaXN0LFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBvblRvdWNobW92ZShlKSB7XG4gICAgICBpZiAoIXRoaXMuYWxsb3dQdWxsRG93biB8fCAhZS50b3VjaGVzIHx8IGUudG91Y2hlcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IHN0ID0gdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5zY3JvbGxUb3A7XG4gICAgICBsZXQgeSA9IGUudG91Y2hlc1swXS5jbGllbnRZO1xuICAgICAgbGV0IHlEaXN0ID0geSAtIF9zdGFydC55O1xuICAgICAgbGV0IGRlcmljdGlvbiA9IHRoaXMuZ2V0VG91Y2hEaXJldGlvbihlKTtcblxuICAgICAgaWYgKGRlcmljdGlvbiA9PT0gJ2Rvd24nKSB7XG4gICAgICAgIC8vIOWQkeS4i+a7keWKqFxuICAgICAgICBpZiAoIXRoaXMucmVmcmVzaGluZyAmJiBzdCA8PSAwKSB7XG4gICAgICAgICAgdGhpcy5wdWxsaW5nID0gdHJ1ZTtcbiAgICAgICAgICB0aGlzLnB1bGxEaXN0ID0gKHlEaXN0IC0gX3N0YXJ0LnNjcm9sbFRvcCkgLyAyO1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnB1bGxpbmcgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChkZXJpY3Rpb24gPT09ICd1cCcpIHtcbiAgICAgICAgLy8g5ZCR5LiK5ruR5YqoXG4gICAgICAgIGlmICh0aGlzLnB1bGxEaXN0ID4gMCkge1xuICAgICAgICAgIHRoaXMucHVsbERpc3QgPSBfc3RhcnQucHVsbERpc3QgLSAoX3N0YXJ0LnkgLSB5KTtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucHVsbERpc3QgPSBfc3RhcnQucHVsbERpc3Q7XG4gICAgICB9XG4gICAgfSxcblxuICAgIG9uVG91Y2hlbmQoKSB7XG4gICAgICBpZiAoIXRoaXMuYWxsb3dQdWxsRG93bikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF9zdGFydCA9IHt9O1xuICAgICAgdGhpcy5wdWxsaW5nID0gZmFsc2U7XG5cbiAgICAgIC8vIOinpuaRuOe7k+adn+eahOaXtuWAme+8jOajgOafpSB0aGlzLnB1bGxEaXN0IOeahOS9jee9rlxuICAgICAgaWYgKHRoaXMucHVsbERpc3QgPj0gX3JlZnJlc2hlckhlaWdodCAmJiB0aGlzLmlzU3luYykge1xuICAgICAgICBpZiAodGhpcy5yZWZyZXNoaW5nKSB7XG4gICAgICAgICAgdGhpcy5tYWtlUHVsbFRvKF9yZWZyZXNoZXJIZWlnaHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMubWFrZVB1bGxUbyhfcmVmcmVzaGVySGVpZ2h0KS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaGluZyA9IHRydWU7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLm9uUHVsbERvd24pIHtcbiAgICAgICAgICAgICAgbGV0IHJlcyA9IHRoaXMub25QdWxsRG93bigpO1xuICAgICAgICAgICAgICBpZiAocmVzICYmIHJlcy50aGVuICYmIHR5cGVvZiByZXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXMuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgIHRoaXMubWFrZVB1bGxUbygwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLm1ha2VQdWxsVG8oMCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMuZGF0YVN5bmMoKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgdGhpcy5tYWtlUHVsbFRvKDApO1xuICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgncHVsbERvd24nKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgIHRoaXMubWFrZVB1bGxUbygwKTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3B1bGxEb3duJyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmVmcmVzaGluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLm1ha2VQdWxsVG8oMCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIOiuvue9ruS4i+aLieeahOS9jee9ru+8jHRhcmdldCDnm67moIfnp7vliqjkvY3nva5cbiAgICBtYWtlUHVsbFRvKHRhcmdldCkge1xuICAgICAgbGV0IHN0YXJ0ID0gdGhpcy5wdWxsRGlzdDtcbiAgICAgIGxldCBlbmQgPSB0YXJnZXQ7XG4gICAgICAvLyDmgLvnp7vliqjot53nprtcbiAgICAgIGxldCBkaXN0ID0gZW5kIC0gc3RhcnQ7XG4gICAgICAvLyDlvZPliY3kvY3nva5cbiAgICAgIGxldCBjdXJyZW50ID0gc3RhcnQ7XG5cbiAgICAgIGlmIChzdGFydCA9PT0gZW5kKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgLy8g5Yqo55S75pe26Ze0IDEwMG1z77yM5q+P5bin5pe26Ze0IDE2Ljdtc++8jOWkp+e6puaAu+WFsemcgOimgSA2IOW4p++8jOavj+W4p+enu+WKqOi3neemu++8mmRpc3QgLyA2XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGxldCByZW5kZXIgPSAoKSA9PiB7XG4gICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudCArIGRpc3QgLyA2O1xuICAgICAgICAgICAgdGhpcy5wdWxsRGlzdCA9IGN1cnJlbnQ7XG5cbiAgICAgICAgICAgIGlmIChzdGFydCA8IGVuZCAmJiBjdXJyZW50IDwgZW5kKSB7XG4gICAgICAgICAgICAgIHJlbmRlcigpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzdGFydCA+IGVuZCAmJiBjdXJyZW50ID4gZW5kKSB7XG4gICAgICAgICAgICAgIHJlbmRlcigpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5wdWxsRGlzdCA9IGVuZDtcbiAgICAgICAgICAgICAgdGhpcy5yZWZyZXNoaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICByZW5kZXIoKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvLyDlkIzmraXmlbDmja5cbiAgICBkYXRhU3luYygpIHtcbiAgICAgIC8vIOWmguaenOato+WcqOWQjOatpeaVsOaNru+8jOS4jeaJp+ihjOS4i+aLieWIt+aWsO+8jOS5n+S4jemHjeaWsOivt+axguW9k+WJjeaVsOaNrlxuICAgICAgLyogaWYgKGxvY2FsU3RvcmFnZUFwaS5nZXRTdHJpbmcoJ2lzLWV4ZWN1dGUtc3luYy1kb2luZycpID09PSAnMScpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgIH0pO1xuICAgICAgfSAqL1xuXG4gICAgICBsZXQgYnVpbGRpbmdJZDtcbiAgICAgIGxldCBjdXJyZW50TW9kdWxlQ29kZSA9IERhdGFTeW5jaHJvbml6ZXIuZ2V0Q3VycmVudE1vZHVsZUNvZGUoKTtcbiAgICAgIGxldCBjdXJyZW50Um91dGUgPSBEYXRhU3luY2hyb25pemVyLmdldEN1cnJlbnRSb3V0ZSgpO1xuICAgICAgbGV0IGlzVG9kbyA9IGN1cnJlbnRSb3V0ZS5tZXRhICYmIGN1cnJlbnRSb3V0ZS5tZXRhLmlzVG9kbztcblxuICAgICAgaWYgKERhdGFTeW5jaHJvbml6ZXIuaXNNb2R1bGVOZWVkQnVpbGRpbmcoY3VycmVudE1vZHVsZUNvZGUpICYmICFpc1RvZG8pIHtcbiAgICAgICAgaWYgKCF0aGlzLmJ1aWxkaW5nSWQpIHtcbiAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBidWlsZGluZ0lkID0gdGhpcy5idWlsZGluZ0lkO1xuICAgICAgfVxuXG4gICAgICBUYWxraW5nRGF0YVNlcnZpY2UuYWRkVHJhY2soJ+WFrOWFsS3miYvliqjkuIvmi4nliLfmlrAnLCAnJywgJycpO1xuICAgICAgV2ViU2VydmljZS5iZWdpbk1hbnVhbFVwZGF0ZSgpO1xuICAgICAgcmV0dXJuIERhdGFTeW5jaHJvbml6ZXIuY2hlY2tTeW5jKGJ1aWxkaW5nSWQpXG4gICAgICAgIC50aGVuKGhhc0NoYW5nZWQgPT4ge1xuICAgICAgICAgIFdlYlNlcnZpY2UuZW5kTWFudWFsVXBkYXRlKCk7XG4gICAgICAgICAgcmV0dXJuIGhhc0NoYW5nZWQ7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgJGxvZy5lcnJvcign5LiL5ouJ5Yi35paw6ZSZ6K+vJywgZXJyb3IpO1xuXG4gICAgICAgICAgaWYgKGVycm9yICYmIGVycm9yLnRvU3RyaW5nKCkgPT09ICdFcnJvcjogTmV0d29yayBFcnJvcicpIHtcbiAgICAgICAgICAgIFBvcHVwLmFsZXJ0KCflvZPliY3nvZHnu5zml6Dms5XlkIzmraXmlbDmja4nKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgUG9wdXAuYWxlcnQoZXJyb3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBXZWJTZXJ2aWNlLmVuZE1hbnVhbFVwZGF0ZSgpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLy8g6I635Y+W5rua5Yqo5p2h6auY5bqmXG4gICAgZ2V0U2Nyb2xsSGVpZ2h0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHJlZnNbJ3Njcm9sbC13YXJwJ10ub2Zmc2V0SGVpZ2h0O1xuICAgIH0sXG5cbiAgICAvLyDojrflj5bmu5rliqjmnaHkvY3nva5cbiAgICBnZXRTY3JvbGxUb3AoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5zY3JvbGxUb3A7XG4gICAgfSxcbiAgICAvLyDorr7nva7mu5rliqjmnaHkvY3nva5cbiAgICBzZXRTY3JvbGxUb3AobnVtKSB7XG4gICAgICB0aGlzLiRyZWZzWydzY3JvbGwtd2FycCddLnNjcm9sbFRvcCA9IG51bTtcbiAgICB9LFxuXG4gICAgLyog5rua5Yqo5oyH5a6a6Led56a7XG4gICAgICogZGlzdDog5rua5Yqo55qE6Led56a7XG4gICAgICogdGltZTog5Yqo55S75pe26Ze0XG4gICAgICovXG4gICAgc2Nyb2xsQnkoZGlzdCwgdGltZSA9IDIwMCkge1xuICAgICAgbGV0IHN0YXJ0ID0gdGhpcy5nZXRTY3JvbGxUb3AoKTtcbiAgICAgIGxldCBlbmQgPSBzdGFydCArIGRpc3Q7XG4gICAgICAvLyDorqHnrpfluKfmlbDvvIzmr4/luKfml7bpl7QgMTYuN21zXG4gICAgICBsZXQgZnJhbWVOdW0gPSBNYXRoLnJvdW5kKHRpbWUgLyAxNi43KTtcbiAgICAgIC8vIOavj+W4p+mcgOimgeenu+WKqOeahOi3neemu1xuICAgICAgbGV0IGZyYW1lRGlzdCA9IGRpc3QgLyBmcmFtZU51bTtcbiAgICAgIGxldCBjdXJyZW50ID0gc3RhcnQ7XG4gICAgICAvLyDnlKjkuo7ljLrliKvlkIzml7bpl7TnmoTlpJrkuKrmu5rliqjkuovku7bvvIzlj6rkvJrmiafooYzmnIDmlrDnmoTkuovku7ZcbiAgICAgIGxldCBzY3JvbGxWZXJzaW9uID0gKF9zY3JvbGxWZXJzaW9uID0gK25ldyBEYXRlKCkpO1xuXG4gICAgICBpZiAoc3RhcnQgPT09IGVuZCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgbGV0IHJlbmRlciA9ICgpID0+IHtcbiAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgICAgIGlmIChzY3JvbGxWZXJzaW9uID09PSBfc2Nyb2xsVmVyc2lvbikge1xuICAgICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudCArIGZyYW1lRGlzdDtcbiAgICAgICAgICAgICAgdGhpcy4kcmVmc1snc2Nyb2xsLXdhcnAnXS5zY3JvbGxUb3AgPSBjdXJyZW50O1xuXG4gICAgICAgICAgICAgIGlmIChzdGFydCA8IGVuZCAmJiBjdXJyZW50IDwgZW5kKSB7XG4gICAgICAgICAgICAgICAgcmVuZGVyKCk7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhcnQgPiBlbmQgJiYgY3VycmVudCA+IGVuZCkge1xuICAgICAgICAgICAgICAgIHJlbmRlcigpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbJ3Njcm9sbC13YXJwJ10uc2Nyb2xsVG9wID0gZW5kO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIHJlbmRlcigpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIOa7muWKqOWIsOaMh+WumuS9jee9rlxuICAgIHNjcm9sbFRvKHRhcmdldCwgdGltZSA9IDIwMCkge1xuICAgICAgbGV0IHN0YXJ0ID0gdGhpcy5nZXRTY3JvbGxUb3AoKTtcbiAgICAgIGxldCBkaXN0ID0gdGFyZ2V0IC0gc3RhcnQ7XG5cbiAgICAgIHJldHVybiB0aGlzLnNjcm9sbEJ5KGRpc3QsIHRpbWUpO1xuICAgIH0sXG5cbiAgICAvKiDmu5rliqjliLDlhYPntKDnmoTkvY3nva7vvIzmmL7npLrlh7rlhYPntKDljbPlj69cbiAgICAgKiBlbCDlj6/og73mmK8gZG9t77yM5Lmf5Y+v6IO95pivIHZ1ZSDnu4Tku7ZcbiAgICAgKi9cbiAgICBzY3JvbGxUb0VsZShlbCkge1xuICAgICAgbGV0IGhlaWdodCA9IGVsLmtleWJvYXJkSGVpZ2h0IHx8IDIzMjtcbiAgICAgIGVsID0gZWwuJGVsID8gZWwuJGVsIDogZWw7XG5cbiAgICAgIGxldCBlbEJvdW5kaW5nID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBsZXQgc2Nyb2xsZXJCb3VuZGluZyA9IHRoaXMuJHJlZnNbJ3Njcm9sbC13YXJwJ10uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgIGlmICghZWxCb3VuZGluZyB8fCAhc2Nyb2xsZXJCb3VuZGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyDmlbDlrZfplK7nm5jot53nprvmmL7npLrlsY/pobbpg6jnmoTot53nprvvvIzmlbDlrZfplK7nm5jpq5jluqZcbiAgICAgIGxldCBudW1iZXJLZXlib2FyZExpbmUgPVxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IC0gKHN0b3JlLnN0YXRlLmdsb2JhbC5pc051bWJlcklucHV0T3BlbiA/IGhlaWdodCA6IDApO1xuICAgICAgLy8g5LiL6L6555WMXG4gICAgICBsZXQgYm90dG9tTGluZSA9XG4gICAgICAgIHNjcm9sbGVyQm91bmRpbmcuYm90dG9tIDwgbnVtYmVyS2V5Ym9hcmRMaW5lID8gc2Nyb2xsZXJCb3VuZGluZy5ib3R0b20gOiBudW1iZXJLZXlib2FyZExpbmU7XG5cbiAgICAgIC8vIOS4iui+ueeVjOa6ouWHulxuICAgICAgbGV0IHRvcE92ZXJmbG93ID0gc2Nyb2xsZXJCb3VuZGluZy50b3AgLSBlbEJvdW5kaW5nLnRvcDtcbiAgICAgIC8vIOS4i+i+ueeVjOa6ouWHulxuICAgICAgbGV0IGJvdHRvbU92ZXJmbG93ID0gZWxCb3VuZGluZy5ib3R0b20gLSBib3R0b21MaW5lO1xuXG4gICAgICBpZiAodG9wT3ZlcmZsb3cgPiAwKSB7XG4gICAgICAgIHRoaXMuc2Nyb2xsQnkoLXRvcE92ZXJmbG93IC0gMTApO1xuICAgICAgfSBlbHNlIGlmIChib3R0b21PdmVyZmxvdyA+IDApIHtcbiAgICAgICAgdGhpcy5zY3JvbGxCeShib3R0b21PdmVyZmxvdyArIDEwKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGlzQ3VycmVudChhcnJheSwgaWQpIHtcbiAgICAgIC8vIOa3seW6pumBjeWOhlxuICAgICAgaWYgKCFhcnJheS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgXy5lYWNoKGFycmF5LCB2ID0+IHtcbiAgICAgICAgaWYgKHYuX3VpZCA9PT0gaWQpIHtcbiAgICAgICAgICB0aGlzLmlzQ3VycktleWJvYXJkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmlzQ3VycmVudCh2LiRjaGlsZHJlbiwgaWQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uTnVtYmVyS2V5Ym9hcmRPcGVuKGlucHV0KSB7XG4gICAgICB0aGlzLmlzQ3VycktleWJvYXJkID0gZmFsc2U7XG4gICAgICB0aGlzLmlzQ3VycmVudCh0aGlzLiRjaGlsZHJlbiwgaW5wdXQuX3VpZCk7XG4gICAgICAvLyDmmK/lkKbmmK/lvZPliY0gc2Nyb2xsZXIg57uE5Lu255qE5YaF5a656Kem5Y+R5LqG4oCc5pWw5a2X6ZSu55uY5omT5byA5LqL5Lu24oCdXG4gICAgICAvLyBsZXQgaXNDdXJyZW50ID1cbiAgICAgIC8vICAgaW5wdXQgJiZcbiAgICAgIC8vICAgaW5wdXQuX3VpZCAmJlxuICAgICAgLy8gICBfLnNvbWUodGhpcy4kY2hpbGRyZW4sIHtcbiAgICAgIC8vICAgICBfdWlkOiBpbnB1dC5fdWlkLFxuICAgICAgLy8gICB9KTtcblxuICAgICAgaWYgKHRoaXMuaXNDdXJyS2V5Ym9hcmQpIHtcbiAgICAgICAgdGhpcy5zY3JvbGxUb0VsZShpbnB1dCk7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLnNjcm9sbC13YXJwIHtcbiAgZmxleDogMTtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDsgLyrop6PlhrPnp7vliqjnq6/mu5HliqjljaHpob/pl67popgqL1xufVxuLnNjcm9sbC13YXJwLXB1bGxpbmcge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnNjcm9sbC13YXJwLWNvbXBsZXRlOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDBweDtcbn1cbi5zY3JvbGwtd2FycC1lbXB0eSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5wdWxsLXJlZnJlc2gtd2FycCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnB1bGwtcmVmcmVzaCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDcwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA2cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5wdWxsLXJlZnJlc2gtZGF0ZSB7XG4gIG1hcmdpbi10b3A6IDRweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogI2JjYmNiYztcbn1cblxuLnBhZ2UtbG9hZGluZyB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmVuZC10ZXh0IHtcbiAgY29sb3I6ICNjOGM4Yzg7XG4gIGJhY2tncm91bmQ6ICNmNGY0ZjQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGluZS1oZWlnaHQ6IDc2cHg7XG4gIGhlaWdodDogNzZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICY6OmFmdGVyLFxuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogNDhweDtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kOiAjZTRlNGU0O1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0xcHg7XG4gIH1cbiAgJjo6YWZ0ZXIge1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTkycHgpO1xuICB9XG4gICY6OmJlZm9yZSB7XG4gICAgcmlnaHQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoOTBweCk7XG4gIH1cbn1cblxuLmVuZC1zbG90IHtcbiAgcGFkZGluZzogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNjOGM4Yzg7XG59XG48L3N0eWxlPlxuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAxLjAuMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLWxvYWRlckAxNS45LjVAdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19wb3N0Y3NzLWxvYWRlckAzLjAuMEBwb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19zYXNzLWxvYWRlckA3LjEuMEBzYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fY2FjaGUtbG9hZGVyQDIuMC4xQGNhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjcuMEB2dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MGEyNjZjNDQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1zdHlsZS1sb2FkZXJANC4xLjJAdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIxYmUyYjAyOFwiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pOyIsIi8qIOW8ueeql+eahOa3t+WFpVxuICog5aSE55CG5LiA5LiL5LqL5oOF77yaXG4gKiAxLnotaW5kZXgg6KaG55uW6Zeu6aKYXG4gKiAyLueJqeeQhui/lOWbnumUrlxuICogMy7orr7nva4gc3RvcmUg55qEIGhhc1BvcHVwIOeahOWAvFxuICovXG5cbmltcG9ydCB7IGFkZEJhY2tFdmVudFF1ZXVlLCBjbGVhckJhY2tCdXR0b25FdmVudCB9IGZyb20gJ0BzcmMvY29tbW9uL2JhY2tidXR0b24nO1xuaW1wb3J0IHsgY29udGV4dCB9IGZyb20gJ3ZhbnQvZXMvbWl4aW5zL3BvcHVwL2NvbnRleHQnO1xuaW1wb3J0IHN0b3JlIGZyb20gJ0BzdG9yZSc7XG5cbmxldCBwb3B1cENvdW50ID0gMDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnUG9wdXBNaXhpbicsXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJhY2tCdXR0b25FdmVudDogbnVsbCxcbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIHNob3codikge1xuICAgICAgaWYgKHYpIHtcbiAgICAgICAgLy8g6K6+572uIHotaW5kZXhcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLiRlbCAmJiB0aGlzLiRlbC5zdHlsZSkge1xuICAgICAgICAgICAgdGhpcy4kZWwuc3R5bGUuekluZGV4ID0gKytjb250ZXh0LnpJbmRleDtcbiAgICAgICAgICAgIHBvcHVwQ291bnQrKztcbiAgICAgICAgICAgIHN0b3JlLmNvbW1pdCgnYXBwL1NFVF9IQVNfUE9QVVAnLCAhIXBvcHVwQ291bnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8g5by556qX5omT5byA77yM5rOo5YaM54mp55CG6L+U5Zue6ZSuXG4gICAgICAgIGlmICghdGhpcy5iYWNrQnV0dG9uRXZlbnQpIHtcbiAgICAgICAgICBsZXQgY2xvc2VGbiA9IHRoaXMuY2xvc2UgfHwgdGhpcy5jbG9zZVBvcHVwO1xuICAgICAgICAgIHRoaXMuYmFja0J1dHRvbkV2ZW50ID0gYWRkQmFja0V2ZW50UXVldWUoY2xvc2VGbik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBvcHVwQ291bnQtLTtcbiAgICAgICAgaWYgKHBvcHVwQ291bnQgPCAwKSB7XG4gICAgICAgICAgcG9wdXBDb3VudCA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgc3RvcmUuY29tbWl0KCdhcHAvU0VUX0hBU19QT1BVUCcsICEhcG9wdXBDb3VudCk7XG5cbiAgICAgICAgLy8g5by556qX5YWz6Zet77yM5rOo6ZSA54mp55CG6L+U5Zue6ZSuXG4gICAgICAgIGlmICh0aGlzLmJhY2tCdXR0b25FdmVudCkge1xuICAgICAgICAgIGNsZWFyQmFja0J1dHRvbkV2ZW50KHRoaXMuYmFja0J1dHRvbkV2ZW50KTtcbiAgICAgICAgICB0aGlzLmJhY2tCdXR0b25FdmVudCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7fSxcbn07XG4iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yYjFhMzQ2YyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fdnVlLXN0eWxlLWxvYWRlckA0LjEuMkB2dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcImExYTY1YzBjXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtc3R5bGUtbG9hZGVyQDQuMS4yQHZ1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDEuMC4xQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL192dWUtbG9hZGVyQDE1LjkuNUB2dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Bvc3Rjc3MtbG9hZGVyQDMuMC4wQHBvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Nhc3MtbG9hZGVyQDcuMS4wQHNhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jYWNoZS1sb2FkZXJAMi4wLjFAY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvX3Z1ZS1sb2FkZXJAMTUuNy4wQHZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wcm9qZWN0LWluZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTI3Y2I5YzVhJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiJdLCJzb3VyY2VSb290IjoiIn0=