(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["report-check-safety-problem-statistics"],{c49e:function(t,e,a){"use strict";(function(t){a("5ab2"),a("6d57"),a("e10e");var i=a("28f8"),r=(a("cc57"),a("163d"),a("6bf2")),o=a.n(r),s=a("774b"),n=a("c52d"),c=a("5685"),l=a("de15"),m=a("1b7e"),h=a("e2a7");function d(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,i)}return a}function u(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?d(Object(a),!0).forEach((function(e){Object(i.a)(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}var p=[{itemStyle:{color:"#ffcb34"}},{itemStyle:{color:"#ffa550"}},{itemStyle:{color:"#ff636b"}},{itemStyle:{color:"#6891ed"}},{itemStyle:{color:"#3cd285"}},{itemStyle:{color:"#9489fc"}}],v={sum:[],thisYear:[],lastMonth:[]};e.a={name:"ReportChecSafetykLeaderIndex",components:{Scroller:s.a,reportPie:n.a},data:function(){return{isLoading:!0,viewSize:$rootScope.viewSize,module:"check-safety",noData:null,listData:[],checkProblemChart:null,rowDataChart:v,chartData:[],chartItemColor:p,chartSeriesData:p.slice(0),categoryTimeSecHasNoData:!0,timeSec:"thisYear",timeSec1:"month",chartLegend:[],companyCheckProblem:{year:0,month:0,week:0},checkItemProblem:{sum:0,thisYear:0,lastMonth:0},level:1,load:!0}},activated:function(){this.$router.isBack||(this.rowDataChart=v,this.companyCheckProblem={year:0,month:0,week:0},this.checkItemProblem={sum:0,thisYear:0,lastMonth:0},this.getReportData())},methods:{moment:o.a,getReportData:function(){var e=this;this.isLoading=!0,m.a.getHasNetwork().then((function(a){a?e.getCheck({module:e.module}).then((function(a){if(t.isEmpty(a)||t.isEmpty(a.items))e.noData=!1;else{e.listData=a.proj;var i={year:0,month:0,week:0};t.each(a.proj,(function(t){i.year+=Number(t.problemNum.year),i.month+=Number(t.problemNum.month),i.week+=Number(t.problemNum.week)})),e.companyCheckProblem=i,e.$set(e.rowDataChart,"sum",e.itemMap(a.items.total.list)),e.checkItemProblem.sum=Number(a.items.total.problem_num),e.$set(e.rowDataChart,"lastMonth",e.itemMap(a.items.month.list)),e.checkItemProblem.lastMonth=Number(a.items.month.problem_num),e.$set(e.rowDataChart,"thisYear",e.itemMap(a.items.year.list)),e.checkItemProblem.thisYear=Number(a.items.year.problem_num)}e.isLoading=!1})).then((function(){e.updateChart()})).catch((function(){e.noData=!1,e.isLoading=!1,h.a.alert("获取集团安全检查接口报错 ",error)})):h.a.alert("当前网络无法同步数据")})).catch((function(){h.a.alert("当前网络无法同步数据")}))},getCheck:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return c.a.getCheckProblemStatisticsData(t)},itemMap:function(e){return t.map(e,(function(t){return{name:t.item_name,value:Number(t.rate),id:t.item_id,hasChild:Boolean(t.hasNext)}}))},chartCallback:function(e){var a={date_type:{sum:"累计",thisYear:"今年",lastMonth:"上月"}[this.timeSec],name:e.name,module:this.module};e.id?a.parent_item_id=e.id:(a.is_other=1,a.item_ids=t.map(this.rowDataChart[this.timeSec],"id")),this.loadChildItemData(a)},loadChildItemData:function(e){var a=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return m.a.getHasNetwork().then((function(r){return r?a.getCheck(e).then((function(r){var o={},s=0;o.chartLegend=[],o.chartData=[],t.each(r.items,(function(t,e){s+=Number(t.sum_problem_num),o.chartLegend.push({color:a.chartItemColor[e%6].itemStyle.color,name:t.item_name});var i={name:t.item_name,value:Number(t.rate),itemStyle:{color:a.chartItemColor[e%6].itemStyle.color},sum_problem_num:t.sum_problem_num,id:t.item_id,hasChild:Boolean(t.has_next)};o.chartData.push(i),r.items[e]=i})),t.isEmpty(r.items)?o.categoryTimeSecHasNoData=!0:o.categoryTimeSecHasNoData=!1,o.problemNum=s,o.level=i,o.parentItemName=e.name,o.isOther=Boolean(e.is_other),o.isEnd=Boolean(r.is_end),o.listData=r.items,o.options=e,l.a.openPopup(u(u({},o),{},{penetrate:a.penetrate}))})).catch((function(t){h.a.alert("获取集团安全检查接口报错 ",t)})):(h.a.alert("当前网络无法同步数据"),!1)})).catch((function(){h.a.alert("当前网络无法同步数据")}))},penetrate:function(e,a,i){var r=this,o=this.dialogMapData(e,a,i);t.isEmpty(o)||this.load&&(this.load=!1,this.loadChildItemData(o,a.level+1).then((function(){r.load=!0})).catch((function(){r.load=!0})))},dialogMapData:function(e,a,i){var r={date_type:{sum:"累计",thisYear:"今年",lastMonth:"上月"}[this.timeSec],is_other:Boolean(a.isOther),name:e.name,module:this.module};if(!a.isEnd&&e.hasChild)return e.id?r.parent_item_id=e.id:(r.is_other=1,r.parent_item_id=a.options.parent_item_id,r.item_ids=t.map(a.listData,"id")),r},updateChart:function(){var e=this;this.chartLegend.length=0,t.each(this.rowDataChart[this.timeSec],(function(a,i){e.chartLegend.push({color:e.chartItemColor[i%6].itemStyle.color,name:a.name}),t.extend(e.chartSeriesData[i],a)})),this.rowDataChart[this.timeSec].length?(this.categoryTimeSecHasNoData=!1,this.chartData=this.chartSeriesData.slice(0,this.rowDataChart[this.timeSec].length)):this.categoryTimeSecHasNoData=!0},toggleFold:function(t,e){t.open=!t.open,this.$set(this.listData,e,t)},toggleChart:function(t){this.timeSec=t,this.updateChart()}}}}).call(this,a("391c"))},c869:function(t,e,a){"use strict";a.r(e);var i=a("c49e").a,r=a("17cc"),o=Object(r.a)(i,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"报表-安全检查"}},[a("scroller",{directives:[{name:"show",rawName:"v-show",value:!t.noData&&!t.isLoading,expression:"!noData && !isLoading"}]},[a("div",{staticClass:"measure-pass-rate"},[a("div",{staticClass:"sec"},[a("div",{staticStyle:{"padding-left":"0"}},[a("div",{staticStyle:{"font-size":"18px",margin:"auto 15px"}},[t._v("问题类型分析")])]),a("div",{staticStyle:{"margin-top":"20px",overflow:"hidden"}},[a("div",{staticClass:"fl left-btn-group",staticStyle:{"margin-left":"15px","margin-top":"5px",color:"#333"}},[a("span",[t._v(t._s(t.checkItemProblem[t.timeSec]||0))]),t._v("个问题\n          ")]),a("div",{staticClass:"fr right-btn-group"},[a("a",{class:{selected:"sum"===t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleChart("sum")}}},[t._v("累计")]),a("a",{class:{selected:"thisYear"==t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleChart("thisYear")}}},[t._v("今年")]),a("a",{class:{selected:"lastMonth"==t.timeSec},attrs:{href:"javascript:;"},on:{click:function(e){t.toggleChart("lastMonth")}}},[t._v("上月")])])])]),t.isLoading?t._e():a("report-pie",{attrs:{"chart-data":t.chartData,"chart-callback":t.chartCallback}}),t.categoryTimeSecHasNoData?t._e():a("div",[a("ul",{staticClass:"chart-legend-list"},[a("li",[a("div",t._l(t.chartLegend,(function(e,i){return a("div",{directives:[{name:"show",rawName:"v-show",value:i%2==0,expression:"key % 2 === 0"}],key:i},[a("span",{staticClass:"chart-legend",style:{"background-color":e.color}}),a("span",{staticClass:"chart-legend-text"},[t._v(t._s(e.name))])])})))]),a("li",[a("div",t._l(t.chartLegend,(function(e,i){return a("div",{directives:[{name:"show",rawName:"v-show",value:i%2==1,expression:"key % 2 === 1"}],key:i},[a("span",{staticClass:"chart-legend",style:{"background-color":e.color}}),a("span",{staticClass:"chart-legend-text"},[t._v(t._s(e.name))])])})))])])]),a("div",{staticClass:"sec"},[a("div",{staticStyle:{"padding-left":"0"}},[a("div",{staticStyle:{"font-size":"18px",margin:"auto 15px"}},[t._v("项目数据统计")])]),a("div",{staticStyle:{"margin-top":"20px",overflow:"hidden"}},[a("div",{staticClass:"fl",staticStyle:{"margin-left":"15px","margin-top":"5px",color:"#333"}},[a("span",[t._v(t._s(t.companyCheckProblem[t.timeSec1]||0))]),t._v("个问题\n          ")]),a("div",{staticClass:"fr right-btn-group"},[a("a",{class:{selected:"year"==t.timeSec1},attrs:{href:"javascript:;"},on:{click:function(e){t.timeSec1="year"}}},[t._v("今年")]),a("a",{class:{selected:"month"==t.timeSec1},attrs:{href:"javascript:;"},on:{click:function(e){t.timeSec1="month"}}},[t._v("上月")]),a("a",{class:{selected:"week"==t.timeSec1},attrs:{href:"javascript:;","data-track":"报表-集团安全检查-上周"},on:{click:function(e){t.timeSec1="week"}}},[t._v("上周")])])])]),a("ul",{staticClass:"table-tree-r"},[a("li",{staticClass:"table-title"},[a("div",[t._v("项目")]),a("div",[t._v("问题数")]),a("div",[t._v("按时整改率")])]),t._l(t.listData,(function(e,i){return a("li",{key:i,class:{open:!e.open},on:{click:function(a){a.stopPropagation(),t.toggleFold(e,i)}}},[a("div",[t._v(t._s(e.name))]),a("div",[t._v(t._s(e.problemNum[t.timeSec1]))]),a("div",[t._v(t._s(e.repaired_rate[t.timeSec1]+"%"))]),a("ul",t._l(e.children,(function(e,i){return a("li",{key:i,on:{click:function(t){t.stopPropagation()}}},[a("div",[t._v(t._s(e.name))]),a("div",[t._v(t._s(e.problemNum[t.timeSec1]))]),a("div",[t._v(t._s(e.repaired_rate[t.timeSec1]+"%"))])])})))])}))],2)],1)]),a("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.isLoading&&t.noData,type:"report","empty-text":"没有报表数据"}})],1)}),[],!1,null,null,null);e.default=o.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,