(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-4d94a9f2"],{"33a5":function(t,e,o){"use strict";o.r(e);o("5ab2");var s=o("4c09"),i=(o("c04d"),o("f585")),n=o("28f8"),r=(o("e10e"),o("6d57"),o("cc57"),o("74cb"),o("190e")),a=null,l={components:Object(n.a)({},r.a.name,r.a),props:{hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1}},data:function(){return{loadNextTrigger:5,loading:!1}},methods:{scrollTo:function(t){this.$refs["inversion-scroll-wrap"].scrollTop=t},jumpToBottom:function(){var t=this;this.$nextTick((function(){var e=t.$refs["inversion-scroll-wrap"];e.scrollTop=e.scrollHeight}))},onScroll:function(t){var e=this,o=this.$refs["inversion-scroll-wrap"],s=o.scrollTop,i=o.scrollHeight;o.clientHeight;if(s<this.loadNextTrigger&&!this.loading){if(this.hasNext){this.loading=!0;var n=this.$listeners.loadNext;if(n){var r=n();r&&r.then&&"function"==typeof r.then?r.then((function(){e.loading=!1,e.$nextTick((function(){e.scrollTo(e.$refs["inversion-scroll-wrap"].scrollHeight-i)}))})):this.loading=!1}}this.$emit("scrollTopEnd")}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(a&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,o=t.touches[0].clientY;return Math.abs(o-a.y)>Math.abs(e-a.x)&&Math.abs(o-a.y)>=3?o>a.y?"down":"up":""},onTouchstart:function(t){t.touches&&1===t.touches.length&&(a={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["inversion-scroll-wrap"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){"down"===this.getTouchDiretion(t)&&this.onScroll()}}},c=(o("9f4f9"),o("17cc")),p=Object(c.a)(l,(function(){var t=this.$createElement,e=this._self._c||t;return e("div",{ref:"inversion-scroll-wrap",staticClass:"inversion-scroll-wrap",class:{"not-empty":!this.isEmpty},on:{scroll:this.onScroll,touchstart:this.onTouchstart,touchmove:this.onTouchmove}},[this.loading?e("div",{staticClass:"tips"},[e("van-loading",{attrs:{color:"#55ABFF"}})],1):this._e(),this._t("default")],2)}),[],!1,null,"143d6f2d",null).exports,u=o("1b7e"),d=o("6bf2"),h=o.n(d),f=(o("51a4"),o("162a")),g=o("e2a7"),m=o("6144"),b=o("bc69"),v=o("391c");function x(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,s)}return o}function y(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?x(Object(o),!0).forEach((function(e){Object(n.a)(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):x(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}var j={components:{Scroller:p},filters:{timeFilter:function(t){return h()(t).calendar(null,{sameDay:"[今天] HH:mm",lastDay:"[昨天] HH:mm",nextDay:"YYYY-M-D HH:mm",nextWeek:"YYYY-M-D HH:mm",lastWeek:"YYYY-M-D HH:mm",sameElse:"YYYY-M-D HH:mm"})}},data:function(){return{isLoading:!1,currentPage:1,hasNext:!1,errorTips:null,classifyId:"",items:[]}},activated:function(){this.init()},methods:{entryApplyDailySubPage:function(){this.$router.push({name:"ApplyDailySubSetting",query:{classifyId:this.classifyId}})},hasNetWork:function(){var t=this;return u.a.getHasNetwork().then((function(e){return console.log("是否有网络",e),e||(t.errorTips="暂无网络"),e}))},getItems:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.currentPage=e,this.isLoading=!0,this.hasNetWork().then((function(t){if(!t)return Promise.reject("当前无网络")})).then((function(){return f.a.request("/online/message/list",{cate_id:t.classifyId,page:e,page_size:10})})).then((function(e){var o=e.items;t.hasNext=e.page<e.total_pages;var s=o.map((function(t,e){var o={};try{o=JSON.parse(t.body)}catch(e){console.log("消息体转换错误：",e,t,t.body)}var s=[];return Object.keys(o).forEach((function(t){s.push({title:t,desc:o[t]})})),y(y({},t),{},{body:s})}));return Object(v.reverse)(s),t.isLoading=!1,s})).catch((function(e){g.a.alert(e.errmsg||e),t.isLoading=!1}))},scrollTopEndHandler:function(){!this.hasNext&&this.items.length>0&&Object(i.a)("已无历史消息")},loadMoreItems:function(){var t=this;return this.getItems(++this.currentPage).then((function(e){t.items=[].concat(Object(s.a)(e),Object(s.a)(t.items))}))},init:function(){var t=this;this.items=[],Promise.resolve().then((function(){t.classifyId=t.$route.query.classifyId})).then((function(){return t.getItems()})).then((function(e){t.items=e;var o=m.a.getUserObject(b.a.APPLY_DAILY_CLASSIFY_LATEST_RECORD_DATETIME)||{},s=Object(v.get)(Object(v.last)(e),"created_on",null);o[t.classifyId]=s,m.a.saveUserObject(b.a.APPLY_DAILY_CLASSIFY_LATEST_RECORD_DATETIME,o),t.$refs.pageScroller.jumpToBottom()}))}}},w=(o("6873"),Object(c.a)(j,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("page-content",{attrs:{title:"消息","show-go-back":!0}},[o("div",{staticClass:"header-btn",attrs:{slot:"header-bar-right"},on:{click:t.entryApplyDailySubPage},slot:"header-bar-right"},[o("icon",{attrs:{name:"setting"}})],1),o("scroller",{ref:"pageScroller",attrs:{"is-empty":0===t.items.length,"has-next":t.hasNext},on:{scrollTopEnd:t.scrollTopEndHandler,loadNext:t.loadMoreItems}},[o("ul",{staticClass:"message-list"},t._l(t.items,(function(e,s){return o("li",{key:s},[o("div",{staticClass:"msg-time"},[t._v("\n                    "+t._s(t._f("timeFilter")(e.created_on))+"\n                ")]),o("div",{staticClass:"msg-box"},[o("div",{staticClass:"title"},[t._v("\n                        "+t._s(e.title)+"\n                    ")]),t._l(e.body,(function(e,s){return o("div",{key:s,staticClass:"content-row"},[o("div",{staticClass:"row-left"},[t._v("\n                            "+t._s(e.title)+"\n                        ")]),o("div",{staticClass:"row-right"},[t._v("\n                            "+t._s(e.desc)+"\n                        ")])])}))],2)])}))),o("loading-status",{attrs:{"is-loading":t.isLoading,"is-empty":!t.items.length,type:t.errorTips?"error":"todo","empty-text":t.errorTips||"暂无消息"}})],1)],1)}),[],!1,null,"7137a48f",null));e.default=w.exports},6873:function(t,e,o){"use strict";o("ae6d")},"77de":function(t,e,o){(t.exports=o("690e")(!1)).push([t.i,'.zjapp .inversion-scroll-wrap[data-v-143d6f2d]{flex:1;overflow:hidden;overflow-y:scroll}.zjapp .inversion-scroll-wrap.not-empty[data-v-143d6f2d]:after{display:block;width:100%;height:56px;content:""}.zjapp .inversion-scroll-wrap .tips[data-v-143d6f2d]{padding-top:10px;text-align:center;font-size:14px;color:#999}',""])},"7c7f":function(t,e,o){var s=o("77de");"string"==typeof s&&(s=[[t.i,s,""]]),s.locals&&(t.exports=s.locals);(0,o("85cb").default)("e6687be4",s,!0,{sourceMap:!1,shadowMode:!1})},"97ee":function(t,e,o){(t.exports=o("690e")(!1)).push([t.i,'.zjapp .message-list[data-v-7137a48f]{padding:0 15px;box-sizing:border-box}.zjapp .message-list li .msg-time[data-v-7137a48f]{margin-top:20px;margin-bottom:10px;text-align:center;line-height:20px;font-size:14px;color:#999}.zjapp .message-list li .msg-box[data-v-7137a48f]{border-radius:4px;background:#fff;padding-bottom:10px;box-sizing:border-box}.zjapp .message-list li .msg-box .title[data-v-7137a48f]{position:relative;height:46px;line-height:46px;margin-bottom:12px;padding:0 10px;box-sizing:border-box;font-size:16px;color:#333;border-bottom:1px solid #ececec}.zjapp .message-list li .msg-box .title[data-v-7137a48f]:before{position:absolute;left:0;top:14px;display:block;width:4px;height:16px;content:"";background:#4275e8}.zjapp .message-list li .msg-box .content-row[data-v-7137a48f]{position:relative;margin-bottom:22px;padding-right:10px;box-sizing:border-box;line-height:22px;font-size:16px}.zjapp .message-list li .msg-box .content-row[data-v-7137a48f]:last-child{margin-bottom:0}.zjapp .message-list li .msg-box .content-row .row-left[data-v-7137a48f]{position:absolute;left:10px;top:0;color:#999}.zjapp .message-list li .msg-box .content-row .row-right[data-v-7137a48f]{margin-left:99px;color:#333}',""])},"9f4f9":function(t,e,o){"use strict";o("7c7f")},ae6d:function(t,e,o){var s=o("97ee");"string"==typeof s&&(s=[[t.i,s,""]]),s.locals&&(t.exports=s.locals);(0,o("85cb").default)("5c5ef0df",s,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,