(window.webpackJsonp_module_entry_zjapp_=window.webpackJsonp_module_entry_zjapp_||[]).push([["chunk-0afe4ce2"],{5732:function(t,e,a){"use strict";a.r(e);var o=a("9cff").a,i=(a("c7d1"),a("17cc")),l=Object(i.a)(o,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("page-content",{attrs:{title:"汇总","show-go-root":!0}},[!t.isLoading&&t.collectData&&t.collectData.length?a("div",{staticClass:"table-content"},[a("div",{staticClass:"scroll-y",on:{scroll:t.onScrollY}},[a("div",{staticClass:"scroll-x",on:{scroll:t.onScrollX}},[a("table",{staticClass:"table table-main"},[a("thead",[a("tr",[a("th",{staticClass:"border-rb"},[t._v("检查项")]),t._l(t.header,(function(e){return a("th",{key:e.id,staticClass:"border-rb"},[a("div",{staticClass:"hd-con",domProps:{innerHTML:t._s(e.name)}})])}))],2)]),a("tbody",[t._l(t.collectData,(function(e){return[a("tr",{key:e.id},[a("td",{staticClass:"border-rb root-checkitem",class:{"root-checkitem":"sum"!==e.id}},[t._v("\n                  "+t._s(e.name)+"\n                ")]),t._l(e.data,(function(e){return a("td",{key:e.id,staticClass:"border-rb"},[""===e.passrate?a("span",{class:{"color-gray3":"sum"!==e.id,"color-theme":"sum"===e.id}},[t._v("未测")]):a("span",{class:{"color-red":e.passrate<=.9,"color-theme":"sum"===e.id}},[t._v("\n                    "+t._s(t._f("percent")(e.passrate,2))+"\n                  ")])])}))],2),t._l(e.children,(function(o,i){return a("tr",{key:o.id},[a("td",{class:{"border-rb":i===e.children.length-1,"border-right":i!==e.children.length-1}},[t._v("\n                  "+t._s(o.name)+"\n                ")]),t._l(o.data,(function(e){return a("td",{key:e.id,staticClass:"border-rb"},[""===e.passrate?a("span",{class:{"color-gray3":"sum"!==e.id,"color-theme":"sum"===e.id}},[t._v("未测")]):a("span",{class:{"color-red":e.passrate<=.9,"color-theme":"sum"===e.id}},[t._v("\n                    "+t._s(t._f("percent")(e.passrate,2))+"\n                  ")])])}))],2)}))]}))],2)]),a("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedHead&&!t.showFixedHeadPatch,expression:"showFixedHead && !showFixedHeadPatch"}],staticClass:"table table-main fixed-head",style:{transform:"translateY("+t.fixedHeadTop+"px)"}},[a("thead",[a("tr",[a("th",{staticClass:"border-rb"},[t._v("检查项")]),t._l(t.header,(function(e){return a("th",{key:e.id,staticClass:"border-rb"},[a("div",{staticClass:"hd-con",domProps:{innerHTML:t._s(e.name)}})])}))],2)])])]),a("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedSlide,expression:"showFixedSlide"}],staticClass:"table fixed-slide"},[a("thead",[a("tr",[a("th",{staticClass:"border-rb"},[t._v("检查项")])])]),a("tbody",[t._l(t.collectData,(function(e){return[a("tr",{key:e.id},[a("td",{staticClass:"border-rb root-checkitem",class:{"root-checkitem":"sum"!==e.id}},[t._v("\n                "+t._s(e.name)+"\n              ")])]),t._l(e.children,(function(o,i){return a("tr",{key:o.id},[a("td",{class:{"border-rb":i===e.children.length-1,"border-right":i!==e.children.length-1}},[t._v("\n                "+t._s(o.name)+"\n              ")])])}))]}))],2)])]),a("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedHeadPatch,expression:"showFixedHeadPatch"}],staticClass:"table table-main fixed-head",style:{transform:"translateX("+-t.fixedHeadLeft+"px)"}},[a("thead",[a("tr",[a("th",{staticClass:"border-rb"},[t._v("检查项")]),t._l(t.header,(function(e){return a("th",{key:e.id,staticClass:"border-rb"},[a("div",{staticClass:"hd-con",domProps:{innerHTML:t._s(e.name)}})])}))],2)])]),a("table",{directives:[{name:"show",rawName:"v-show",value:t.showFixedNook,expression:"showFixedNook"}],staticClass:"table fixed-nook"},[a("thead",[a("tr",[a("th",{staticClass:"border-rb"},[t._v("检查项")])])])])]):t._e(),a("loading-status",{attrs:{"is-loading":t.isLoading}})],1)}),[],!1,null,"1a033141",null);e.default=l.exports},"5a30":function(t,e,a){var o=a("b011");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("10497e7b",o,!0,{sourceMap:!1,shadowMode:!1})},"774b":function(t,e,a){"use strict";var o=a("d18d").a,i=(a("b225"),a("17cc")),l=Object(i.a)(o,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{ref:"scroll-warp",staticClass:"scroll-warp",class:{"scroll-warp-pulling":t.pulling,"scroll-warp-complete":!t.hasNext&&!t.isEmpty,"scroll-warp-empty":t.isEmpty},style:{"padding-bottom":t.numberKeyboardCoverHeight+"px"},on:{scroll:t.onScroll,touchstart:t.onTouchstart,touchmove:t.onTouchmove,touchend:t.onTouchend}},[t.allowPullDown?a("div",{staticClass:"pull-refresh-warp",style:{height:t.pullDist+"px"}},[a("div",{staticClass:"pull-refresh"},[a("div",{staticClass:"animation-refresher",class:{refreshing:t.refreshing}}),t.updateTime?a("p",{staticClass:"pull-refresh-date"},[t._v("最后成功同步："+t._s(t.updateTime))]):t._e()])]):t._e(),t._t("default"),t.loading?a("div",{staticClass:"page-loading"},[a("svg",{staticClass:"svg-loading",attrs:{viewBox:"0 0 80 80"}},[a("circle",{attrs:{cx:"40",cy:"40",r:"36"}})])]):t._e(),t.hasNext||t.isEmpty?t._e():[t.$slots.end?t._t("end"):t._e(),!t.$slots.end&&t.endText?a("div",{staticClass:"end-text"},[t._v("\n      "+t._s(t.endText)+"\n    ")]):t._e()]],2)}),[],!1,null,"2b1a346c",null);e.a=l.exports},"9cff":function(t,e,a){"use strict";(function(t){var o,i=a("774b"),l=a("be2b");e.a={name:"MeasureInspectCollect",components:{Scroller:i.a},data:function(){return{batchId:"",isLoading:!0,collectData:[],header:[],fixedHeadTop:0,fixedHeadLeft:0,showFixedHead:!0,showFixedHeadPatch:!1,showFixedSlide:!0,showFixedNook:!0}},computed:{projId:function(){return this.$store.state.global.currentProject.id}},activated:function(){this.$router.isBack||(this.batchId=this.$route.query.batchId,this.fixedHeadTop=0,this.fixedHeadLeft=0,this.loadDetail())},methods:{loadDetail:function(){var e=this;return this.isLoading=!0,l.a.getMeasureInspectStatisticalData(this.batchId).then((function(a){t.each(a,(function(e){e.data&&e.data.length&&t.each(e.data,(function(t){t.passrate=t.mp?(t.mp-t.pp)/t.mp:""})),e.children&&e.children.length&&t.each(e.children,(function(e){e.data&&e.data.length&&t.each(e.data,(function(t){t.passrate=t.mp?(t.mp-t.pp)/t.mp:""}))}))})),e.header=a[0]&&a[0].children[0]?a[0].children[0].data:[],e.collectData=a,console.log("this.collectData =======",e.collectData),e.isLoading=!1}))},onScrollX:function(t){var e=t&&t.target?t.target.scrollLeft:0;e>=0?(this.fixedHeadLeft=e,this.showFixedSlide=!0,this.showFixedNook=!0):(this.fixedHeadLeft=0,this.showFixedSlide=!1,this.showFixedNook=!1),this.showFixedHeadPatch=!1},onScrollY:function(t){var e=this,a=t&&t.target?t.target.scrollTop:0;a>=0?(this.fixedHeadTop=a,this.showFixedHead=!0,this.showFixedNook=!0,this.showFixedHeadPatch=!0,clearTimeout(o),o=setTimeout((function(){e.showFixedHeadPatch=!1}),500)):(this.fixedHeadTop=0,this.showFixedHead=!1,this.showFixedNook=!1,this.showFixedHeadPatch=!1)}}}}).call(this,a("391c"))},"9d55":function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,'.zjapp .scroll-warp[data-v-2b1a346c]{flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.zjapp .scroll-warp-pulling[data-v-2b1a346c]{overflow:hidden}.zjapp .scroll-warp-complete[data-v-2b1a346c]:after{content:"";display:block;height:100px}.zjapp .scroll-warp-empty[data-v-2b1a346c]{display:flex;flex-direction:column}.zjapp .pull-refresh-warp[data-v-2b1a346c]{position:relative;height:0;overflow:hidden}.zjapp .pull-refresh[data-v-2b1a346c]{position:absolute;left:0;bottom:0;height:70px;width:100%;padding:6px;text-align:center}.zjapp .pull-refresh-date[data-v-2b1a346c]{margin-top:4px;height:16px;line-height:16px;font-size:12px;color:#bcbcbc}.zjapp .page-loading[data-v-2b1a346c]{padding:10px;text-align:center}.zjapp .end-text[data-v-2b1a346c]{color:#c8c8c8;background:#f4f4f4;position:relative;line-height:76px;height:76px;text-align:center}.zjapp .end-text[data-v-2b1a346c]:after,.zjapp .end-text[data-v-2b1a346c]:before{content:"";position:absolute;width:48px;height:1px;background:#e4e4e4;top:50%;margin-top:-1px}.zjapp .end-text[data-v-2b1a346c]:after{left:50%;transform:translateX(-92px)}.zjapp .end-text[data-v-2b1a346c]:before{right:50%;transform:translateX(90px)}.zjapp .end-slot[data-v-2b1a346c]{padding:30px;line-height:18px;text-align:center;color:#c8c8c8}',""])},b011:function(t,e,a){(t.exports=a("690e")(!1)).push([t.i,".zjapp .table[data-v-1a033141]{border-collapse:collapse}.zjapp .table-main[data-v-1a033141]{min-width:100%}.zjapp .table td[data-v-1a033141],.zjapp .table th[data-v-1a033141]{min-width:76px;height:62px;max-height:62px;padding:5px 10px;line-height:16px;font-size:14px;text-align:center;box-sizing:border-box;border:none;overflow:hidden}.zjapp .table th[data-v-1a033141]{white-space:nowrap}.zjapp .table td[data-v-1a033141]:first-child,.zjapp .table th[data-v-1a033141]:first-child{position:relative;width:145px;min-width:145px;max-width:145px;text-align:center}.zjapp .table tr[data-v-1a033141]{background-color:#fafafa}.zjapp .root-checkitem[data-v-1a033141]{color:#4275e8;background-color:#ebf1ff}.zjapp .scroll-y[data-v-1a033141]{flex:1;overflow-y:auto;position:relative}.zjapp .scroll-x[data-v-1a033141]{max-width:100%;overflow-x:auto;position:relative}.zjapp .table-content[data-v-1a033141]{position:relative;display:flex;flex-direction:column;flex:1;overflow:hidden}.zjapp .fixed-head[data-v-1a033141]{position:absolute;left:0;top:0;z-index:2}.zjapp .fixed-slide[data-v-1a033141]{position:absolute;left:0;top:0;z-index:1}.zjapp .fixed-nook[data-v-1a033141]{position:absolute;left:0;top:0;z-index:3}.zjapp .hd-con[data-v-1a033141]{max-height:52px}",""])},b225:function(t,e,a){"use strict";a("ef48")},c7d1:function(t,e,a){"use strict";a("5a30")},d18d:function(t,e,a){"use strict";(function(t){a("2b45");var o,i=a("4360"),l=a("48f4"),s=a("162a"),n=a("e2a7"),r=a("a500"),c=a("6f9e"),d={};e.a={name:"Scroller",props:{buildingId:{type:String,default:""},hasNext:{type:Boolean,default:!1},isEmpty:{type:Boolean,default:!1},isSync:{type:Boolean,default:!0},endText:{type:String,default:""},memoryScrollTop:{type:Boolean,default:!0},keepScrollTop:{type:Boolean},hasPullDown:{type:Boolean,default:!0},onPullDown:{type:Function}},data:function(){return{pullDist:0,refreshing:!1,pulling:!1,loading:!1,scrollTop:0,isCurrKeyboard:!1,gapBottom:0}},computed:{allowPullDown:function(){return this.hasPullDown&&(!!this.$listeners.pullDown||!!this.onPullDown)},updateTime:function(){return i.a.state.global.businessDownloadTime},numberKeyboardCoverHeight:function(){return i.a.state.global.isNumberInputOpen?i.a.state.global.numberKeyboardHeight-this.gapBottom:0}},mounted:function(){var t=this;c.a.$on("numberKeyboardOpen",this.onNumberKeyboardOpen),this.$nextTick((function(){var e=t.$refs["scroll-warp"]&&t.$refs["scroll-warp"].getBoundingClientRect&&t.$refs["scroll-warp"].getBoundingClientRect();e&&(t.gapBottom=document.documentElement.clientHeight-e.bottom),t.$el&&t.$el.addEventListener("focus",(function(e){var a=e&&e.target,o=a&&a.tagName&&a.tagName.toLowerCase();if("input"===o||"textarea"===o){window.addEventListener("resize",(function e(){var o=a.getBoundingClientRect(),i=t.$el.getBoundingClientRect(),l=o.bottom-i.bottom;l>0&&t.scrollBy(l),window.removeEventListener("resize",e,!1)}),!1)}}),!0)}))},destroyed:function(){c.a.$off("numberKeyboardOpen",this.onNumberKeyboardOpen)},activated:function(){var t=this.keepScrollTop||this.$router.isBack&&this.memoryScrollTop;this.scrollTop&&t&&(this.$refs["scroll-warp"].scrollTop=this.scrollTop)},deactivated:function(){this.memoryScrollTop&&(this.scrollTop=this.$refs["scroll-warp"].scrollTop)},methods:{onScroll:function(t){var e=this,a=this.$refs["scroll-warp"].scrollTop,o=this.$refs["scroll-warp"].scrollHeight;if(a+this.$refs["scroll-warp"].clientHeight>=o-5&&!this.loading&&this.hasNext){this.loading=!0;var i=this.$listeners.loadNext();i&&i.then&&"function"==typeof i.then?i.then((function(){e.loading=!1})):this.loading=!1}this.$emit("scroll",t)},getTouchDiretion:function(t){if(!(d&&t&&t.touches&&t.touches[0]))return"";var e=t.touches[0].clientX,a=t.touches[0].clientY;return Math.abs(a-d.y)>Math.abs(e-d.x)&&Math.abs(a-d.y)>=3?a>d.y?"down":"up":""},onTouchstart:function(t){this.allowPullDown&&t.touches&&1===t.touches.length&&(d={x:t.touches[0].clientX,y:t.touches[0].clientY,scrollTop:this.$refs["scroll-warp"].scrollTop,pullDist:this.pullDist})},onTouchmove:function(t){if(this.allowPullDown&&t.touches&&1===t.touches.length){var e=this.$refs["scroll-warp"].scrollTop,a=t.touches[0].clientY,o=a-d.y,i=this.getTouchDiretion(t);"down"===i?!this.refreshing&&e<=0?(this.pulling=!0,this.pullDist=(o-d.scrollTop)/2,t.preventDefault()):this.pulling=!1:"up"===i?this.pullDist>0&&(this.pullDist=d.pullDist-(d.y-a),t.preventDefault()):this.pullDist=d.pullDist}},onTouchend:function(){var t=this;this.allowPullDown&&(d={},this.pulling=!1,this.pullDist>=70&&this.isSync?this.refreshing?this.makePullTo(70):this.makePullTo(70).then((function(){if(t.refreshing=!0,t.onPullDown){var e=t.onPullDown();e&&e.then&&"function"==typeof e?e.finally((function(){t.refreshing=!1,t.makePullTo(0)})):(t.refreshing=!1,t.makePullTo(0))}else t.dataSync().then((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")})).catch((function(){t.refreshing=!1,t.makePullTo(0),t.$emit("pullDown")}))})):(this.refreshing=!1,this.makePullTo(0)))},makePullTo:function(t){var e=this,a=this.pullDist,o=t,i=o-a,l=a;return a===o?Promise.resolve():new Promise((function(t){!function s(){window.requestAnimationFrame((function(){l+=i/6,e.pullDist=l,a<o&&l<o||a>o&&l>o?s():(e.pullDist=o,e.refreshing=!1,t())}))}()}))},dataSync:function(){var t,e=l.default.getCurrentModuleCode(),a=l.default.getCurrentRoute(),o=a.meta&&a.meta.isTodo;if(l.default.isModuleNeedBuilding(e)&&!o){if(!this.buildingId)return new Promise((function(t){setTimeout((function(){t()}),500)}));t=this.buildingId}return r.a.addTrack("公共-手动下拉刷新","",""),s.a.beginManualUpdate(),l.default.checkSync(t).then((function(t){return s.a.endManualUpdate(),t})).catch((function(t){$log.error("下拉刷新错误",t),t&&"Error: Network Error"===t.toString()?n.a.alert("当前网络无法同步数据"):n.a.alert(t),s.a.endManualUpdate()}))},getScrollHeight:function(){return this.$refs["scroll-warp"].offsetHeight},getScrollTop:function(){return this.$refs["scroll-warp"].scrollTop},setScrollTop:function(t){this.$refs["scroll-warp"].scrollTop=t},scrollBy:function(t){var e=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,i=this.getScrollTop(),l=i+t,s=Math.round(a/16.7),n=t/s,r=i,c=o=+new Date;return i===l?Promise.resolve():new Promise((function(t){!function a(){window.requestAnimationFrame((function(){c===o&&(r+=n,e.$refs["scroll-warp"].scrollTop=r,i<l&&r<l||i>l&&r>l?a():(e.$refs["scroll-warp"].scrollTop=l,t()))}))}()}))},scrollTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200,a=this.getScrollTop(),o=t-a;return this.scrollBy(o,e)},scrollToEle:function(t){var e=t.keyboardHeight||232,a=(t=t.$el?t.$el:t).getBoundingClientRect(),o=this.$refs["scroll-warp"].getBoundingClientRect();if(a&&o){var l=document.documentElement.clientHeight-(i.a.state.global.isNumberInputOpen?e:0),s=o.bottom<l?o.bottom:l,n=o.top-a.top,r=a.bottom-s;n>0?this.scrollBy(-n-10):r>0&&this.scrollBy(r+10)}},isCurrent:function(e,a){var o=this;e.length&&t.each(e,(function(t){t._uid===a?o.isCurrKeyboard=!0:o.isCurrent(t.$children,a)}))},onNumberKeyboardOpen:function(t){this.isCurrKeyboard=!1,this.isCurrent(this.$children,t._uid),this.isCurrKeyboard&&this.scrollToEle(t)}}}}).call(this,a("391c"))},ef48:function(t,e,a){var o=a("9d55");"string"==typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);(0,a("85cb").default)("a1a65c0c",o,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,